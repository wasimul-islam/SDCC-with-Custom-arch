                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module expf
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _expf
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
      000000                         31 _expf_y:
      000000                         32 	.ds 4
      000004                         33 _n:
      000004                         34 	.ds 1
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
      000000                         51 _sign_bit:
      000000                         52 	.ds 1
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; initialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'expf'
                                     97 ;------------------------------------------------------------
                                     98 ;	expf.c:49: float expf(float x)
                                     99 ;	-----------------------------------------
                                    100 ;	 function expf
                                    101 ;	-----------------------------------------
      000000                        102 _expf:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
                                    111 ;	expf.c:248: __endasm;
      000000 A2 E7            [12]  112 	mov	c, acc.7
      000002 92*00            [24]  113 	mov	_sign_bit, c
      000004 C2 E7            [12]  114 	clr	acc.7
      000006 F8               [12]  115 	mov	r0, a
      000007 A2 F7            [12]  116 	mov	c, b.7
      000009 33               [12]  117 	rlc	a
      00000A 24 99            [12]  118 	add	a, #153
      00000C 40 0B            [24]  119 	jc	expf_not_zero
      00000E 90 00 00         [24]  120 	mov	dptr, #0
      000011 75 F0 80         [24]  121 	mov	b, #0x80
      000014 74 3F            [12]  122 	mov	a, #0x3F
      000016 02r01r3D         [24]  123 	ljmp	expf_exit
      000019                        124 expf_not_zero:
      000019 75*04 00         [24]  125 	mov	_n, #0
      00001C E5 82            [12]  126 	mov	a, dpl
      00001E 24 E8            [12]  127 	add	a, #0xE8
      000020 E5 83            [12]  128 	mov	a, dph
      000022 34 8D            [12]  129 	addc	a, #0x8D
      000024 E5 F0            [12]  130 	mov	a, b
      000026 34 CE            [12]  131 	addc	a, #0xCE
      000028 E8               [12]  132 	mov	a, r0
      000029 34 C0            [12]  133 	addc	a, #0xC0
      00002B E8               [12]  134 	mov	a, r0
      00002C 50 58            [24]  135 	jnc	expf_no_range_reduction
      00002E                        136 expf_range_reduction:
      00002E 85 82*00         [24]  137 	mov	(_expf_y + 0), dpl
      000031 85 83*01         [24]  138 	mov	(_expf_y + 1), dph
      000034 85 F0*02         [24]  139 	mov	(_expf_y + 2), b
      000037 F5*03            [12]  140 	mov	(_expf_y + 3), a
      000039 78 3B            [12]  141 	mov	r0, #0x3B
      00003B C0 00            [24]  142 	push	ar0
      00003D 78 AA            [12]  143 	mov	r0, #0xAA
      00003F C0 00            [24]  144 	push	ar0
      000041 78 B8            [12]  145 	mov	r0, #0xB8
      000043 C0 00            [24]  146 	push	ar0
      000045 78 3F            [12]  147 	mov	r0, #0x3F
      000047 C0 00            [24]  148 	push	ar0
      000049 12r00r00         [24]  149 	lcall	___fsmul
      00004C 15 81            [12]  150 	dec	sp
      00004E 15 81            [12]  151 	dec	sp
      000050 15 81            [12]  152 	dec	sp
      000052 15 81            [12]  153 	dec	sp
      000054 12r00r00         [24]  154 	lcall	___fs2uchar
      000057 E5 82            [12]  155 	mov	a, dpl
      000059 F5*04            [12]  156 	mov	_n, a
      00005B 24 80            [12]  157 	add	a, #128
      00005D 50 06            [24]  158 	jnc	expf_range_ok
      00005F 12r00r00         [24]  159 	lcall	fs_return_inf
      000062 02r01r3D         [24]  160 	ljmp	expf_exit
      000065                        161 expf_range_ok:
      000065 78 00            [12]  162 	mov	r0,#0x00
      000067 79 80            [12]  163 	mov	r1,#0x80
      000069 7A 31            [12]  164 	mov	r2,#0x31
      00006B 7B BF            [12]  165 	mov	r3,#0xBF
      00006D 12r01r3E         [24]  166 	lcall	expf_scale_and_add
      000070 85 82*00         [24]  167 	mov	(_expf_y + 0), dpl
      000073 85 83*01         [24]  168 	mov	(_expf_y + 1), dph
      000076 85 F0*02         [24]  169 	mov	(_expf_y + 2), b
      000079 F5*03            [12]  170 	mov	(_expf_y + 3), a
      00007B 78 83            [12]  171 	mov	r0,#0x83
      00007D 79 80            [12]  172 	mov	r1,#0x80
      00007F 7A 5E            [12]  173 	mov	r2,#0x5E
      000081 7B 39            [12]  174 	mov	r3,#0x39
      000083 12r01r3E         [24]  175 	lcall	expf_scale_and_add
      000086                        176 expf_no_range_reduction:
      000086                        177 expf_cordic_begin:
      000086 A2 F7            [12]  178 	mov	c, b.7
      000088 33               [12]  179 	rlc	a
      000089 D2 F7            [12]  180 	setb	b.7
      00008B A9 82            [24]  181 	mov	r1, dpl
      00008D AA 83            [24]  182 	mov	r2, dph
      00008F AB F0            [24]  183 	mov	r3, b
      000091 7C 00            [12]  184 	mov	r4, #0
      000093 B4 79 02         [24]  185 	cjne	a, #121, exp_lshift
      000096 80 0F            [24]  186 	sjmp	exp_noshift
      000098                        187 exp_lshift:
      000098 40 07            [24]  188 	jc	exp_rshift
      00009A 24 87            [12]  189 	add	a, #135
      00009C 12r01r76         [24]  190 	lcall	fs_lshift_a
      00009F 80 06            [24]  191 	sjmp	exp_noshift
      0000A1                        192 exp_rshift:
      0000A1 F4               [12]  193 	cpl	a
      0000A2 24 7A            [12]  194 	add	a, #122
      0000A4 12r00r00         [24]  195 	lcall	fs_rshift_a
      0000A7                        196 exp_noshift:
      0000A7 E4               [12]  197 	clr	a
      0000A8 F5*00            [12]  198 	mov	(_expf_y + 0), a
      0000AA F5*01            [12]  199 	mov	(_expf_y + 1), a
      0000AC F5*02            [12]  200 	mov	(_expf_y + 2), a
      0000AE 75*03 20         [24]  201 	mov	(_expf_y + 3), #0x20
      0000B1 90r00r00         [24]  202 	mov	dptr, #__fs_natural_log_table
      0000B4 F8               [12]  203 	mov	r0, a
      0000B5                        204 exp_cordic_loop:
      0000B5 E4               [12]  205 	clr	a
      0000B6 93               [24]  206 	movc	a, @a+dptr
      0000B7 F5 F0            [12]  207 	mov	b, a
      0000B9 A3               [24]  208 	inc	dptr
      0000BA E4               [12]  209 	clr	a
      0000BB 93               [24]  210 	movc	a, @a+dptr
      0000BC FD               [12]  211 	mov	r5, a
      0000BD A3               [24]  212 	inc	dptr
      0000BE E4               [12]  213 	clr	a
      0000BF 93               [24]  214 	movc	a, @a+dptr
      0000C0 FE               [12]  215 	mov	r6, a
      0000C1 A3               [24]  216 	inc	dptr
      0000C2 E4               [12]  217 	clr	a
      0000C3 93               [24]  218 	movc	a, @a+dptr
      0000C4 FF               [12]  219 	mov	r7, a
      0000C5 A3               [24]  220 	inc	dptr
      0000C6 C3               [12]  221 	clr	c
      0000C7 E9               [12]  222 	mov	a, r1
      0000C8 95 F0            [12]  223 	subb	a, b
      0000CA EA               [12]  224 	mov	a, r2
      0000CB 9D               [12]  225 	subb	a, r5
      0000CC EB               [12]  226 	mov	a, r3
      0000CD 9E               [12]  227 	subb	a, r6
      0000CE EC               [12]  228 	mov	a, r4
      0000CF 9F               [12]  229 	subb	a, r7
      0000D0 40 30            [24]  230 	jc	exp_cordic_skip
      0000D2 C3               [12]  231 	clr	c
      0000D3 E9               [12]  232 	mov	a, r1
      0000D4 95 F0            [12]  233 	subb	a, b
      0000D6 F9               [12]  234 	mov	r1, a
      0000D7 EA               [12]  235 	mov	a, r2
      0000D8 9D               [12]  236 	subb	a, r5
      0000D9 FA               [12]  237 	mov	r2, a
      0000DA EB               [12]  238 	mov	a, r3
      0000DB 9E               [12]  239 	subb	a, r6
      0000DC FB               [12]  240 	mov	r3, a
      0000DD EC               [12]  241 	mov	a, r4
      0000DE 9F               [12]  242 	subb	a, r7
      0000DF FC               [12]  243 	mov	r4, a
      0000E0 85*00 F0         [24]  244 	mov	b, (_expf_y + 0)
      0000E3 AD*01            [24]  245 	mov	r5, (_expf_y + 1)
      0000E5 AE*02            [24]  246 	mov	r6, (_expf_y + 2)
      0000E7 AF*03            [24]  247 	mov	r7, (_expf_y + 3)
      0000E9 E8               [12]  248 	mov	a, r0
      0000EA 12r00r00         [24]  249 	lcall	__fs_cordic_rshift_r765_unsigned
      0000ED E5*00            [12]  250 	mov	a, (_expf_y + 0)
      0000EF 25 F0            [12]  251 	add	a, b
      0000F1 F5*00            [12]  252 	mov	(_expf_y + 0), a
      0000F3 E5*01            [12]  253 	mov	a, (_expf_y + 1)
      0000F5 3D               [12]  254 	addc	a, r5
      0000F6 F5*01            [12]  255 	mov	(_expf_y + 1), a
      0000F8 E5*02            [12]  256 	mov	a, (_expf_y + 2)
      0000FA 3E               [12]  257 	addc	a, r6
      0000FB F5*02            [12]  258 	mov	(_expf_y + 2), a
      0000FD E5*03            [12]  259 	mov	a, (_expf_y + 3)
      0000FF 3F               [12]  260 	addc	a, r7
      000100 F5*03            [12]  261 	mov	(_expf_y + 3), a
      000102                        262 exp_cordic_skip:
      000102 08               [12]  263 	inc	r0
      000103 B8 1B AF         [24]  264 	cjne	r0, #27, exp_cordic_loop
      000106 AC*03            [24]  265 	mov	r4, (_expf_y + 3)
      000108 AB*02            [24]  266 	mov	r3, (_expf_y + 2)
      00010A AA*01            [24]  267 	mov	r2, (_expf_y + 1)
      00010C A9*00            [24]  268 	mov	r1, (_expf_y + 0)
      00010E 75 82 79         [24]  269 	mov	dpl, #121
      000111 12r00r00         [24]  270 	lcall	fs_normalize_a
      000114 74 7F            [12]  271 	mov	a, #127
      000116 25*04            [12]  272 	add	a, _n
      000118 F5 82            [12]  273 	mov	dpl, a
      00011A 12r00r00         [24]  274 	lcall	fs_round_and_return
      00011D 30*00 1B         [24]  275 	jnb	_sign_bit, expf_done
      000120 C0 82            [24]  276 	push	dpl
      000122 C0 83            [24]  277 	push	dph
      000124 C0 F0            [24]  278 	push	b
      000126 C0 E0            [24]  279 	push	acc
      000128 90 00 00         [24]  280 	mov	dptr, #0
      00012B 75 F0 80         [24]  281 	mov	b, #0x80
      00012E 74 3F            [12]  282 	mov	a, #0x3F
      000130 12r00r00         [24]  283 	lcall	___fsdiv
      000133 15 81            [12]  284 	dec	sp
      000135 15 81            [12]  285 	dec	sp
      000137 15 81            [12]  286 	dec	sp
      000139 15 81            [12]  287 	dec	sp
      00013B                        288 expf_done:
      00013B C2 E7            [12]  289 	clr	acc.7
      00013D                        290 expf_exit:
                                    291 ;	expf.c:250: }
      00013D 22               [24]  292 	ret
                                    293 ;------------------------------------------------------------
                                    294 ;Allocation info for local variables in function 'dummy1'
                                    295 ;------------------------------------------------------------
                                    296 ;	expf.c:252: static void dummy1(void) __naked
                                    297 ;	-----------------------------------------
                                    298 ;	 function dummy1
                                    299 ;	-----------------------------------------
      00013E                        300 _dummy1:
                                    301 ;	naked function: no prologue.
                                    302 ;	expf.c:282: __endasm;
                                    303 	.globl	fs_lshift_a
      00013E                        304 expf_scale_and_add:
      00013E C0 00            [24]  305 	push	ar0
      000140 C0 01            [24]  306 	push	ar1
      000142 C0 02            [24]  307 	push	ar2
      000144 C0 03            [24]  308 	push	ar3
      000146 85*04 82         [24]  309 	mov	dpl, _n
      000149 12r00r00         [24]  310 	lcall	___uchar2fs
      00014C 12r00r00         [24]  311 	lcall	___fsmul
      00014F 15 81            [12]  312 	dec	sp
      000151 15 81            [12]  313 	dec	sp
      000153 15 81            [12]  314 	dec	sp
      000155 15 81            [12]  315 	dec	sp
      000157 C0 82            [24]  316 	push	dpl
      000159 C0 83            [24]  317 	push	dph
      00015B C0 F0            [24]  318 	push	b
      00015D C0 E0            [24]  319 	push	acc
      00015F 85*00 82         [24]  320 	mov	dpl, (_expf_y + 0)
      000162 85*01 83         [24]  321 	mov	dph, (_expf_y + 1)
      000165 85*02 F0         [24]  322 	mov	b, (_expf_y + 2)
      000168 E5*03            [12]  323 	mov	a, (_expf_y + 3)
      00016A 12r00r00         [24]  324 	lcall	___fsadd
      00016D 15 81            [12]  325 	dec	sp
      00016F 15 81            [12]  326 	dec	sp
      000171 15 81            [12]  327 	dec	sp
      000173 15 81            [12]  328 	dec	sp
      000175 22               [24]  329 	ret
                                    330 ;	expf.c:283: }
                                    331 ;	naked function: no epilogue.
                                    332 ;------------------------------------------------------------
                                    333 ;Allocation info for local variables in function 'dummy'
                                    334 ;------------------------------------------------------------
                                    335 ;	expf.c:285: static void dummy(void) __naked
                                    336 ;	-----------------------------------------
                                    337 ;	 function dummy
                                    338 ;	-----------------------------------------
      000176                        339 _dummy:
                                    340 ;	naked function: no prologue.
                                    341 ;	expf.c:311: __endasm;
                                    342 	.globl	fs_lshift_a
      000176                        343 fs_lshift_a:
      000176 60 14            [24]  344 	jz	fs_lshift_done
      000178 C0 00            [24]  345 	push	ar0
      00017A F8               [12]  346 	mov	r0, a
      00017B                        347 fs_lshift_loop:
      00017B C3               [12]  348 	clr	c
      00017C E9               [12]  349 	mov	a, r1
      00017D 33               [12]  350 	rlc	a
      00017E F9               [12]  351 	mov	r1, a
      00017F EA               [12]  352 	mov	a, r2
      000180 33               [12]  353 	rlc	a
      000181 FA               [12]  354 	mov	r2, a
      000182 EB               [12]  355 	mov	a, r3
      000183 33               [12]  356 	rlc	a
      000184 FB               [12]  357 	mov	r3, a
      000185 EC               [12]  358 	mov	a, r4
      000186 33               [12]  359 	rlc	a
      000187 FC               [12]  360 	mov	r4, a
      000188 D8 F1            [24]  361 	djnz	r0, fs_lshift_loop
      00018A D0 00            [24]  362 	pop	ar0
      00018C                        363 fs_lshift_done:
      00018C 22               [24]  364 	ret
                                    365 ;	expf.c:312: }
                                    366 ;	naked function: no epilogue.
                                    367 	.area CSEG    (CODE)
                                    368 	.area CONST   (CODE)
                                    369 	.area XINIT   (CODE)
                                    370 	.area CABS    (ABS,CODE)
