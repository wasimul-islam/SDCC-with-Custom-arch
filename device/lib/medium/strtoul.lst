                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strtoul
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncmp
                                     12 	.globl _strtoul_PARM_3
                                     13 	.globl _strtoul_PARM_2
                                     14 	.globl _strtoul
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _strtoul_sloc0_1_0:
      000000                         35 	.ds 1
      000001                         36 _strtoul_sloc1_1_0:
      000001                         37 	.ds 3
      000004                         38 _strtoul_sloc2_1_0:
      000004                         39 	.ds 8
                                     40 ;--------------------------------------------------------
                                     41 ; overlayable items in internal ram
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; indirectly addressable internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area ISEG    (DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; absolute internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area IABS    (ABS,DATA)
                                     51 	.area IABS    (ABS,DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; bit data
                                     54 ;--------------------------------------------------------
                                     55 	.area BSEG    (BIT)
      000000                         56 _strtoul_sloc3_1_0:
      000000                         57 	.ds 1
                                     58 ;--------------------------------------------------------
                                     59 ; paged external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area PSEG    (PAG,XDATA)
      000000                         62 __isdigit_PARM_2:
      000000                         63 	.ds 1
      000001                         64 _strtoul_PARM_2:
      000001                         65 	.ds 3
      000004                         66 _strtoul_PARM_3:
      000004                         67 	.ds 2
      000006                         68 _strtoul_nptr_65536_139:
      000006                         69 	.ds 3
      000009                         70 _strtoul_ret_65536_140:
      000009                         71 	.ds 4
      00000D                         72 _strtoul_range_error_65536_140:
      00000D                         73 	.ds 1
      00000E                         74 _strtoul_neg_65536_140:
      00000E                         75 	.ds 1
      00000F                         76 _strtoul___2621440012_262144_147:
      00000F                         77 	.ds 1
      000010                         78 _strtoul___2621440014_262144_155:
      000010                         79 	.ds 8
      000018                         80 _strtoul_result_393216_157:
      000018                         81 	.ds 8
                                     82 ;--------------------------------------------------------
                                     83 ; uninitialized external ram data
                                     84 ;--------------------------------------------------------
                                     85 	.area XSEG    (XDATA)
                                     86 ;--------------------------------------------------------
                                     87 ; absolute external ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area XABS    (ABS,XDATA)
                                     90 ;--------------------------------------------------------
                                     91 ; initialized external ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area XISEG   (XDATA)
                                     94 	.area HOME    (CODE)
                                     95 	.area GSINIT0 (CODE)
                                     96 	.area GSINIT1 (CODE)
                                     97 	.area GSINIT2 (CODE)
                                     98 	.area GSINIT3 (CODE)
                                     99 	.area GSINIT4 (CODE)
                                    100 	.area GSINIT5 (CODE)
                                    101 	.area GSINIT  (CODE)
                                    102 	.area GSFINAL (CODE)
                                    103 	.area CSEG    (CODE)
                                    104 ;--------------------------------------------------------
                                    105 ; global & static initialisations
                                    106 ;--------------------------------------------------------
                                    107 	.area HOME    (CODE)
                                    108 	.area GSINIT  (CODE)
                                    109 	.area GSFINAL (CODE)
                                    110 	.area GSINIT  (CODE)
                                    111 ;--------------------------------------------------------
                                    112 ; Home
                                    113 ;--------------------------------------------------------
                                    114 	.area HOME    (CODE)
                                    115 	.area HOME    (CODE)
                                    116 ;--------------------------------------------------------
                                    117 ; code
                                    118 ;--------------------------------------------------------
                                    119 	.area CSEG    (CODE)
                                    120 ;------------------------------------------------------------
                                    121 ;Allocation info for local variables in function '_isdigit'
                                    122 ;------------------------------------------------------------
                                    123 ;	strtoul.c:40: static signed char _isdigit(const char c, unsigned char base)
                                    124 ;	-----------------------------------------
                                    125 ;	 function _isdigit
                                    126 ;	-----------------------------------------
      000000                        127 __isdigit:
                           000007   128 	ar7 = 0x07
                           000006   129 	ar6 = 0x06
                           000005   130 	ar5 = 0x05
                           000004   131 	ar4 = 0x04
                           000003   132 	ar3 = 0x03
                           000002   133 	ar2 = 0x02
                           000001   134 	ar1 = 0x01
                           000000   135 	ar0 = 0x00
      000000 AF 82            [24]  136 	mov	r7,dpl
                                    137 ;	strtoul.c:44: if (c >= '0' && c <= '9')
      000002 BF 30 00         [24]  138 	cjne	r7,#0x30,00145$
      000005                        139 00145$:
      000005 40 0D            [24]  140 	jc	00110$
      000007 EF               [12]  141 	mov	a,r7
      000008 24 C6            [12]  142 	add	a,#0xff - 0x39
      00000A 40 08            [24]  143 	jc	00110$
                                    144 ;	strtoul.c:45: v = c - '0';
      00000C 8F 06            [24]  145 	mov	ar6,r7
      00000E EE               [12]  146 	mov	a,r6
      00000F 24 D0            [12]  147 	add	a,#0xd0
      000011 FE               [12]  148 	mov	r6,a
      000012 80 26            [24]  149 	sjmp	00111$
      000014                        150 00110$:
                                    151 ;	strtoul.c:46: else if (c >= 'a' && c <='z')
      000014 BF 61 00         [24]  152 	cjne	r7,#0x61,00148$
      000017                        153 00148$:
      000017 40 0D            [24]  154 	jc	00106$
      000019 EF               [12]  155 	mov	a,r7
      00001A 24 85            [12]  156 	add	a,#0xff - 0x7a
      00001C 40 08            [24]  157 	jc	00106$
                                    158 ;	strtoul.c:47: v = c - 'a' + 10;
      00001E 8F 05            [24]  159 	mov	ar5,r7
      000020 74 A9            [12]  160 	mov	a,#0xa9
      000022 2D               [12]  161 	add	a,r5
      000023 FE               [12]  162 	mov	r6,a
      000024 80 14            [24]  163 	sjmp	00111$
      000026                        164 00106$:
                                    165 ;	strtoul.c:48: else if (c >= 'A' && c <='Z')
      000026 BF 41 00         [24]  166 	cjne	r7,#0x41,00151$
      000029                        167 00151$:
      000029 40 0B            [24]  168 	jc	00102$
      00002B EF               [12]  169 	mov	a,r7
      00002C 24 A5            [12]  170 	add	a,#0xff - 0x5a
      00002E 40 06            [24]  171 	jc	00102$
                                    172 ;	strtoul.c:49: v = c - 'A' + 10;
      000030 74 C9            [12]  173 	mov	a,#0xc9
      000032 2F               [12]  174 	add	a,r7
      000033 FE               [12]  175 	mov	r6,a
      000034 80 04            [24]  176 	sjmp	00111$
      000036                        177 00102$:
                                    178 ;	strtoul.c:51: return (-1);
      000036 75 82 FF         [24]  179 	mov	dpl,#0xff
      000039 22               [24]  180 	ret
      00003A                        181 00111$:
                                    182 ;	strtoul.c:53: if (v >= base)
      00003A 78r00            [12]  183 	mov	r0,#__isdigit_PARM_2
      00003C C3               [12]  184 	clr	c
      00003D E2               [24]  185 	movx	a,@r0
      00003E F5 F0            [12]  186 	mov	b,a
      000040 EE               [12]  187 	mov	a,r6
      000041 95 F0            [12]  188 	subb	a,b
      000043 40 04            [24]  189 	jc	00114$
                                    190 ;	strtoul.c:54: return (-1);
      000045 75 82 FF         [24]  191 	mov	dpl,#0xff
      000048 22               [24]  192 	ret
      000049                        193 00114$:
                                    194 ;	strtoul.c:56: return (v);
      000049 8E 82            [24]  195 	mov	dpl,r6
                                    196 ;	strtoul.c:57: }
      00004B 22               [24]  197 	ret
                                    198 ;------------------------------------------------------------
                                    199 ;Allocation info for local variables in function 'strtoul'
                                    200 ;------------------------------------------------------------
                                    201 ;sloc0                     Allocated with name '_strtoul_sloc0_1_0'
                                    202 ;sloc1                     Allocated with name '_strtoul_sloc1_1_0'
                                    203 ;sloc2                     Allocated with name '_strtoul_sloc2_1_0'
                                    204 ;------------------------------------------------------------
                                    205 ;	strtoul.c:59: unsigned long int strtoul(const char *nptr, char **endptr, int base)
                                    206 ;	-----------------------------------------
                                    207 ;	 function strtoul
                                    208 ;	-----------------------------------------
      00004C                        209 _strtoul:
      00004C AF F0            [24]  210 	mov	r7,b
      00004E AE 83            [24]  211 	mov	r6,dph
      000050 E5 82            [12]  212 	mov	a,dpl
      000052 78r06            [12]  213 	mov	r0,#_strtoul_nptr_65536_139
      000054 F2               [24]  214 	movx	@r0,a
      000055 EE               [12]  215 	mov	a,r6
      000056 08               [12]  216 	inc	r0
      000057 F2               [24]  217 	movx	@r0,a
      000058 EF               [12]  218 	mov	a,r7
      000059 08               [12]  219 	inc	r0
      00005A F2               [24]  220 	movx	@r0,a
                                    221 ;	strtoul.c:63: bool range_error = false;
      00005B 78r0D            [12]  222 	mov	r0,#_strtoul_range_error_65536_140
      00005D E4               [12]  223 	clr	a
      00005E F2               [24]  224 	movx	@r0,a
                                    225 ;	strtoul.c:64: bool neg = false;
      00005F 78r0E            [12]  226 	mov	r0,#_strtoul_neg_65536_140
      000061 F2               [24]  227 	movx	@r0,a
                                    228 ;	strtoul.c:66: while (isblank (*ptr))
      000062 78r06            [12]  229 	mov	r0,#_strtoul_nptr_65536_139
      000064 E2               [24]  230 	movx	a,@r0
      000065 FA               [12]  231 	mov	r2,a
      000066 08               [12]  232 	inc	r0
      000067 E2               [24]  233 	movx	a,@r0
      000068 FB               [12]  234 	mov	r3,a
      000069 08               [12]  235 	inc	r0
      00006A E2               [24]  236 	movx	a,@r0
      00006B FC               [12]  237 	mov	r4,a
      00006C                        238 00101$:
      00006C 8A 82            [24]  239 	mov	dpl,r2
      00006E 8B 83            [24]  240 	mov	dph,r3
      000070 8C F0            [24]  241 	mov	b,r4
      000072 12r00r00         [24]  242 	lcall	__gptrget
      000075 FF               [12]  243 	mov	r7,a
      000076 8F*00            [24]  244 	mov	_strtoul_sloc0_1_0,r7
                                    245 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000078 74 20            [12]  246 	mov	a,#0x20
      00007A B5*00 02         [24]  247 	cjne	a,_strtoul_sloc0_1_0,00214$
      00007D 80 05            [24]  248 	sjmp	00141$
      00007F                        249 00214$:
      00007F 74 09            [12]  250 	mov	a,#0x09
      000081 B5*00 07         [24]  251 	cjne	a,_strtoul_sloc0_1_0,00163$
      000084                        252 00141$:
                                    253 ;	strtoul.c:67: ptr++;
      000084 0A               [12]  254 	inc	r2
      000085 BA 00 E4         [24]  255 	cjne	r2,#0x00,00101$
      000088 0B               [12]  256 	inc	r3
      000089 80 E1            [24]  257 	sjmp	00101$
      00008B                        258 00163$:
      00008B 8A 05            [24]  259 	mov	ar5,r2
      00008D 8B 06            [24]  260 	mov	ar6,r3
      00008F 8C 07            [24]  261 	mov	ar7,r4
                                    262 ;	strtoul.c:70: switch(*ptr)
      000091 8A 82            [24]  263 	mov	dpl,r2
      000093 8B 83            [24]  264 	mov	dph,r3
      000095 8C F0            [24]  265 	mov	b,r4
      000097 12r00r00         [24]  266 	lcall	__gptrget
      00009A FC               [12]  267 	mov	r4,a
      00009B BC 2B 02         [24]  268 	cjne	r4,#0x2b,00218$
      00009E 80 08            [24]  269 	sjmp	00105$
      0000A0                        270 00218$:
      0000A0 BC 2D 0A         [24]  271 	cjne	r4,#0x2d,00106$
                                    272 ;	strtoul.c:73: neg = true;
      0000A3 78r0E            [12]  273 	mov	r0,#_strtoul_neg_65536_140
      0000A5 74 01            [12]  274 	mov	a,#0x01
      0000A7 F2               [24]  275 	movx	@r0,a
                                    276 ;	strtoul.c:74: case '+':
      0000A8                        277 00105$:
                                    278 ;	strtoul.c:75: ptr++;
      0000A8 0D               [12]  279 	inc	r5
      0000A9 BD 00 01         [24]  280 	cjne	r5,#0x00,00221$
      0000AC 0E               [12]  281 	inc	r6
      0000AD                        282 00221$:
                                    283 ;	strtoul.c:76: }
      0000AD                        284 00106$:
                                    285 ;	strtoul.c:79: if (!base)
      0000AD 78r04            [12]  286 	mov	r0,#_strtoul_PARM_3
      0000AF E2               [24]  287 	movx	a,@r0
      0000B0 F5 F0            [12]  288 	mov	b,a
      0000B2 08               [12]  289 	inc	r0
      0000B3 E2               [24]  290 	movx	a,@r0
      0000B4 45 F0            [12]  291 	orl	a,b
      0000B6 60 03            [24]  292 	jz	00222$
      0000B8 02r01r5A         [24]  293 	ljmp	00119$
      0000BB                        294 00222$:
                                    295 ;	strtoul.c:81: if (!strncmp (ptr, "0x", 2) || !strncmp (ptr, "0X", 2))
      0000BB 78r00            [12]  296 	mov	r0,#_strncmp_PARM_2
      0000BD 74r00            [12]  297 	mov	a,#___str_0
      0000BF F2               [24]  298 	movx	@r0,a
      0000C0 74s00            [12]  299 	mov	a,#(___str_0 >> 8)
      0000C2 08               [12]  300 	inc	r0
      0000C3 F2               [24]  301 	movx	@r0,a
      0000C4 74 80            [12]  302 	mov	a,#0x80
      0000C6 08               [12]  303 	inc	r0
      0000C7 F2               [24]  304 	movx	@r0,a
      0000C8 78r00            [12]  305 	mov	r0,#_strncmp_PARM_3
      0000CA 74 02            [12]  306 	mov	a,#0x02
      0000CC F2               [24]  307 	movx	@r0,a
      0000CD E4               [12]  308 	clr	a
      0000CE 08               [12]  309 	inc	r0
      0000CF F2               [24]  310 	movx	@r0,a
      0000D0 8D 82            [24]  311 	mov	dpl,r5
      0000D2 8E 83            [24]  312 	mov	dph,r6
      0000D4 8F F0            [24]  313 	mov	b,r7
      0000D6 C0 07            [24]  314 	push	ar7
      0000D8 C0 06            [24]  315 	push	ar6
      0000DA C0 05            [24]  316 	push	ar5
      0000DC 12r00r00         [24]  317 	lcall	_strncmp
      0000DF E5 82            [12]  318 	mov	a,dpl
      0000E1 85 83 F0         [24]  319 	mov	b,dph
      0000E4 D0 05            [24]  320 	pop	ar5
      0000E6 D0 06            [24]  321 	pop	ar6
      0000E8 D0 07            [24]  322 	pop	ar7
      0000EA 45 F0            [12]  323 	orl	a,b
      0000EC 60 33            [24]  324 	jz	00110$
      0000EE 78r00            [12]  325 	mov	r0,#_strncmp_PARM_2
      0000F0 74r03            [12]  326 	mov	a,#___str_1
      0000F2 F2               [24]  327 	movx	@r0,a
      0000F3 74s00            [12]  328 	mov	a,#(___str_1 >> 8)
      0000F5 08               [12]  329 	inc	r0
      0000F6 F2               [24]  330 	movx	@r0,a
      0000F7 74 80            [12]  331 	mov	a,#0x80
      0000F9 08               [12]  332 	inc	r0
      0000FA F2               [24]  333 	movx	@r0,a
      0000FB 78r00            [12]  334 	mov	r0,#_strncmp_PARM_3
      0000FD 74 02            [12]  335 	mov	a,#0x02
      0000FF F2               [24]  336 	movx	@r0,a
      000100 E4               [12]  337 	clr	a
      000101 08               [12]  338 	inc	r0
      000102 F2               [24]  339 	movx	@r0,a
      000103 8D 82            [24]  340 	mov	dpl,r5
      000105 8E 83            [24]  341 	mov	dph,r6
      000107 8F F0            [24]  342 	mov	b,r7
      000109 C0 07            [24]  343 	push	ar7
      00010B C0 06            [24]  344 	push	ar6
      00010D C0 05            [24]  345 	push	ar5
      00010F 12r00r00         [24]  346 	lcall	_strncmp
      000112 E5 82            [12]  347 	mov	a,dpl
      000114 85 83 F0         [24]  348 	mov	b,dph
      000117 D0 05            [24]  349 	pop	ar5
      000119 D0 06            [24]  350 	pop	ar6
      00011B D0 07            [24]  351 	pop	ar7
      00011D 45 F0            [12]  352 	orl	a,b
      00011F 70 12            [24]  353 	jnz	00111$
      000121                        354 00110$:
                                    355 ;	strtoul.c:83: base = 16;
      000121 78r04            [12]  356 	mov	r0,#_strtoul_PARM_3
      000123 74 10            [12]  357 	mov	a,#0x10
      000125 F2               [24]  358 	movx	@r0,a
      000126 E4               [12]  359 	clr	a
      000127 08               [12]  360 	inc	r0
      000128 F2               [24]  361 	movx	@r0,a
                                    362 ;	strtoul.c:84: ptr += 2;
      000129 74 02            [12]  363 	mov	a,#0x02
      00012B 2D               [12]  364 	add	a,r5
      00012C FD               [12]  365 	mov	r5,a
      00012D E4               [12]  366 	clr	a
      00012E 3E               [12]  367 	addc	a,r6
      00012F FE               [12]  368 	mov	r6,a
      000130 02r01rD3         [24]  369 	ljmp	00120$
      000133                        370 00111$:
                                    371 ;	strtoul.c:86: else if (*ptr == '0')
      000133 8D 82            [24]  372 	mov	dpl,r5
      000135 8E 83            [24]  373 	mov	dph,r6
      000137 8F F0            [24]  374 	mov	b,r7
      000139 12r00r00         [24]  375 	lcall	__gptrget
      00013C FC               [12]  376 	mov	r4,a
      00013D BC 30 10         [24]  377 	cjne	r4,#0x30,00108$
                                    378 ;	strtoul.c:88: base = 8;
      000140 78r04            [12]  379 	mov	r0,#_strtoul_PARM_3
      000142 74 08            [12]  380 	mov	a,#0x08
      000144 F2               [24]  381 	movx	@r0,a
      000145 E4               [12]  382 	clr	a
      000146 08               [12]  383 	inc	r0
      000147 F2               [24]  384 	movx	@r0,a
                                    385 ;	strtoul.c:89: ptr++;
      000148 0D               [12]  386 	inc	r5
      000149 BD 00 01         [24]  387 	cjne	r5,#0x00,00227$
      00014C 0E               [12]  388 	inc	r6
      00014D                        389 00227$:
      00014D 02r01rD3         [24]  390 	ljmp	00120$
      000150                        391 00108$:
                                    392 ;	strtoul.c:92: base = 10;
      000150 78r04            [12]  393 	mov	r0,#_strtoul_PARM_3
      000152 74 0A            [12]  394 	mov	a,#0x0a
      000154 F2               [24]  395 	movx	@r0,a
      000155 E4               [12]  396 	clr	a
      000156 08               [12]  397 	inc	r0
      000157 F2               [24]  398 	movx	@r0,a
      000158 80 79            [24]  399 	sjmp	00120$
      00015A                        400 00119$:
                                    401 ;	strtoul.c:95: else if (base == 16 && (!strncmp (ptr, "0x", 2) || !strncmp (ptr, "0X", 2)))
      00015A 78r04            [12]  402 	mov	r0,#_strtoul_PARM_3
      00015C E2               [24]  403 	movx	a,@r0
      00015D B4 10 04         [24]  404 	cjne	a,#0x10,00228$
      000160 08               [12]  405 	inc	r0
      000161 E2               [24]  406 	movx	a,@r0
      000162 60 02            [24]  407 	jz	00229$
      000164                        408 00228$:
      000164 80 6D            [24]  409 	sjmp	00120$
      000166                        410 00229$:
      000166 78r00            [12]  411 	mov	r0,#_strncmp_PARM_2
      000168 74r00            [12]  412 	mov	a,#___str_0
      00016A F2               [24]  413 	movx	@r0,a
      00016B 74s00            [12]  414 	mov	a,#(___str_0 >> 8)
      00016D 08               [12]  415 	inc	r0
      00016E F2               [24]  416 	movx	@r0,a
      00016F 74 80            [12]  417 	mov	a,#0x80
      000171 08               [12]  418 	inc	r0
      000172 F2               [24]  419 	movx	@r0,a
      000173 78r00            [12]  420 	mov	r0,#_strncmp_PARM_3
      000175 74 02            [12]  421 	mov	a,#0x02
      000177 F2               [24]  422 	movx	@r0,a
      000178 E4               [12]  423 	clr	a
      000179 08               [12]  424 	inc	r0
      00017A F2               [24]  425 	movx	@r0,a
      00017B 8D 82            [24]  426 	mov	dpl,r5
      00017D 8E 83            [24]  427 	mov	dph,r6
      00017F 8F F0            [24]  428 	mov	b,r7
      000181 C0 07            [24]  429 	push	ar7
      000183 C0 06            [24]  430 	push	ar6
      000185 C0 05            [24]  431 	push	ar5
      000187 12r00r00         [24]  432 	lcall	_strncmp
      00018A E5 82            [12]  433 	mov	a,dpl
      00018C 85 83 F0         [24]  434 	mov	b,dph
      00018F D0 05            [24]  435 	pop	ar5
      000191 D0 06            [24]  436 	pop	ar6
      000193 D0 07            [24]  437 	pop	ar7
      000195 45 F0            [12]  438 	orl	a,b
      000197 60 33            [24]  439 	jz	00114$
      000199 78r00            [12]  440 	mov	r0,#_strncmp_PARM_2
      00019B 74r03            [12]  441 	mov	a,#___str_1
      00019D F2               [24]  442 	movx	@r0,a
      00019E 74s00            [12]  443 	mov	a,#(___str_1 >> 8)
      0001A0 08               [12]  444 	inc	r0
      0001A1 F2               [24]  445 	movx	@r0,a
      0001A2 74 80            [12]  446 	mov	a,#0x80
      0001A4 08               [12]  447 	inc	r0
      0001A5 F2               [24]  448 	movx	@r0,a
      0001A6 78r00            [12]  449 	mov	r0,#_strncmp_PARM_3
      0001A8 74 02            [12]  450 	mov	a,#0x02
      0001AA F2               [24]  451 	movx	@r0,a
      0001AB E4               [12]  452 	clr	a
      0001AC 08               [12]  453 	inc	r0
      0001AD F2               [24]  454 	movx	@r0,a
      0001AE 8D 82            [24]  455 	mov	dpl,r5
      0001B0 8E 83            [24]  456 	mov	dph,r6
      0001B2 8F F0            [24]  457 	mov	b,r7
      0001B4 C0 07            [24]  458 	push	ar7
      0001B6 C0 06            [24]  459 	push	ar6
      0001B8 C0 05            [24]  460 	push	ar5
      0001BA 12r00r00         [24]  461 	lcall	_strncmp
      0001BD E5 82            [12]  462 	mov	a,dpl
      0001BF 85 83 F0         [24]  463 	mov	b,dph
      0001C2 D0 05            [24]  464 	pop	ar5
      0001C4 D0 06            [24]  465 	pop	ar6
      0001C6 D0 07            [24]  466 	pop	ar7
      0001C8 45 F0            [12]  467 	orl	a,b
      0001CA 70 07            [24]  468 	jnz	00120$
      0001CC                        469 00114$:
                                    470 ;	strtoul.c:96: ptr += 2;
      0001CC 74 02            [12]  471 	mov	a,#0x02
      0001CE 2D               [12]  472 	add	a,r5
      0001CF FD               [12]  473 	mov	r5,a
      0001D0 E4               [12]  474 	clr	a
      0001D1 3E               [12]  475 	addc	a,r6
      0001D2 FE               [12]  476 	mov	r6,a
      0001D3                        477 00120$:
                                    478 ;	strtoul.c:100: if (_isdigit (*ptr, base) < 0)
      0001D3 8D 82            [24]  479 	mov	dpl,r5
      0001D5 8E 83            [24]  480 	mov	dph,r6
      0001D7 8F F0            [24]  481 	mov	b,r7
      0001D9 12r00r00         [24]  482 	lcall	__gptrget
      0001DC FC               [12]  483 	mov	r4,a
      0001DD 78r04            [12]  484 	mov	r0,#_strtoul_PARM_3
      0001DF E2               [24]  485 	movx	a,@r0
      0001E0 FB               [12]  486 	mov	r3,a
      0001E1 78r00            [12]  487 	mov	r0,#__isdigit_PARM_2
      0001E3 F2               [24]  488 	movx	@r0,a
      0001E4 8C 82            [24]  489 	mov	dpl,r4
      0001E6 C0 07            [24]  490 	push	ar7
      0001E8 C0 06            [24]  491 	push	ar6
      0001EA C0 05            [24]  492 	push	ar5
      0001EC C0 03            [24]  493 	push	ar3
      0001EE 12r00r00         [24]  494 	lcall	__isdigit
      0001F1 AC 82            [24]  495 	mov	r4,dpl
      0001F3 D0 03            [24]  496 	pop	ar3
      0001F5 D0 05            [24]  497 	pop	ar5
      0001F7 D0 06            [24]  498 	pop	ar6
      0001F9 D0 07            [24]  499 	pop	ar7
      0001FB EC               [12]  500 	mov	a,r4
      0001FC 30 E7 3A         [24]  501 	jnb	acc.7,00124$
                                    502 ;	strtoul.c:102: if (endptr)
      0001FF 78r01            [12]  503 	mov	r0,#_strtoul_PARM_2
      000201 E2               [24]  504 	movx	a,@r0
      000202 F5 F0            [12]  505 	mov	b,a
      000204 08               [12]  506 	inc	r0
      000205 E2               [24]  507 	movx	a,@r0
      000206 45 F0            [12]  508 	orl	a,b
      000208 60 28            [24]  509 	jz	00122$
                                    510 ;	strtoul.c:103: *endptr = (char*)nptr;
      00020A 78r01            [12]  511 	mov	r0,#_strtoul_PARM_2
      00020C E2               [24]  512 	movx	a,@r0
      00020D F5*01            [12]  513 	mov	_strtoul_sloc1_1_0,a
      00020F 08               [12]  514 	inc	r0
      000210 E2               [24]  515 	movx	a,@r0
      000211 F5*02            [12]  516 	mov	(_strtoul_sloc1_1_0 + 1),a
      000213 08               [12]  517 	inc	r0
      000214 E2               [24]  518 	movx	a,@r0
      000215 F5*03            [12]  519 	mov	(_strtoul_sloc1_1_0 + 2),a
      000217 85*01 82         [24]  520 	mov	dpl,_strtoul_sloc1_1_0
      00021A 85*02 83         [24]  521 	mov	dph,(_strtoul_sloc1_1_0 + 1)
      00021D 85*03 F0         [24]  522 	mov	b,(_strtoul_sloc1_1_0 + 2)
      000220 78r06            [12]  523 	mov	r0,#_strtoul_nptr_65536_139
      000222 E2               [24]  524 	movx	a,@r0
      000223 12r00r00         [24]  525 	lcall	__gptrput
      000226 A3               [24]  526 	inc	dptr
      000227 08               [12]  527 	inc	r0
      000228 E2               [24]  528 	movx	a,@r0
      000229 12r00r00         [24]  529 	lcall	__gptrput
      00022C A3               [24]  530 	inc	dptr
      00022D 08               [12]  531 	inc	r0
      00022E E2               [24]  532 	movx	a,@r0
      00022F 12r00r00         [24]  533 	lcall	__gptrput
      000232                        534 00122$:
                                    535 ;	strtoul.c:104: return (0);
      000232 90 00 00         [24]  536 	mov	dptr,#(0x00&0x00ff)
      000235 E4               [12]  537 	clr	a
      000236 F5 F0            [12]  538 	mov	b,a
      000238 22               [24]  539 	ret
      000239                        540 00124$:
                                    541 ;	strtoul.c:107: for (ret = 0;; ptr++)
      000239 78r09            [12]  542 	mov	r0,#_strtoul_ret_65536_140
      00023B E4               [12]  543 	clr	a
      00023C F2               [24]  544 	movx	@r0,a
      00023D 08               [12]  545 	inc	r0
      00023E F2               [24]  546 	movx	@r0,a
      00023F 08               [12]  547 	inc	r0
      000240 F2               [24]  548 	movx	@r0,a
      000241 08               [12]  549 	inc	r0
      000242 F2               [24]  550 	movx	@r0,a
      000243 8D*01            [24]  551 	mov	_strtoul_sloc1_1_0,r5
      000245 8E*02            [24]  552 	mov	(_strtoul_sloc1_1_0 + 1),r6
      000247 8F*03            [24]  553 	mov	(_strtoul_sloc1_1_0 + 2),r7
      000249                        554 00136$:
                                    555 ;	strtoul.c:110: signed char digit = _isdigit (*ptr, base);
      000249 85*01 82         [24]  556 	mov	dpl,_strtoul_sloc1_1_0
      00024C 85*02 83         [24]  557 	mov	dph,(_strtoul_sloc1_1_0 + 1)
      00024F 85*03 F0         [24]  558 	mov	b,(_strtoul_sloc1_1_0 + 2)
      000252 12r00r00         [24]  559 	lcall	__gptrget
      000255 FC               [12]  560 	mov	r4,a
      000256 78r00            [12]  561 	mov	r0,#__isdigit_PARM_2
      000258 EB               [12]  562 	mov	a,r3
      000259 F2               [24]  563 	movx	@r0,a
      00025A 8C 82            [24]  564 	mov	dpl,r4
      00025C C0 03            [24]  565 	push	ar3
      00025E 12r00r00         [24]  566 	lcall	__isdigit
      000261 AA 82            [24]  567 	mov	r2,dpl
      000263 D0 03            [24]  568 	pop	ar3
                                    569 ;	strtoul.c:112: if (digit < 0)
      000265 EA               [12]  570 	mov	a,r2
      000266 30 E7 03         [24]  571 	jnb	acc.7,00234$
      000269 02r03r80         [24]  572 	ljmp	00127$
      00026C                        573 00234$:
                                    574 ;	strtoul.c:117: range_error |= ckd_mul(&ret, ret, base);
      00026C C0 03            [24]  575 	push	ar3
      00026E 78r04            [12]  576 	mov	r0,#_strtoul_PARM_3
      000270 79r00            [12]  577 	mov	r1,#__mullonglong_PARM_2
      000272 E2               [24]  578 	movx	a,@r0
      000273 F3               [24]  579 	movx	@r1,a
      000274 08               [12]  580 	inc	r0
      000275 E2               [24]  581 	movx	a,@r0
      000276 09               [12]  582 	inc	r1
      000277 F3               [24]  583 	movx	@r1,a
      000278 E2               [24]  584 	movx	a,@r0
      000279 33               [12]  585 	rlc	a
      00027A 95 E0            [12]  586 	subb	a,acc
      00027C 09               [12]  587 	inc	r1
      00027D F3               [24]  588 	movx	@r1,a
      00027E 09               [12]  589 	inc	r1
      00027F F3               [24]  590 	movx	@r1,a
      000280 09               [12]  591 	inc	r1
      000281 F3               [24]  592 	movx	@r1,a
      000282 09               [12]  593 	inc	r1
      000283 F3               [24]  594 	movx	@r1,a
      000284 09               [12]  595 	inc	r1
      000285 F3               [24]  596 	movx	@r1,a
      000286 09               [12]  597 	inc	r1
      000287 F3               [24]  598 	movx	@r1,a
      000288 78r09            [12]  599 	mov	r0,#_strtoul_ret_65536_140
      00028A 79r10            [12]  600 	mov	r1,#_strtoul___2621440014_262144_155
      00028C E2               [24]  601 	movx	a,@r0
      00028D F3               [24]  602 	movx	@r1,a
      00028E 08               [12]  603 	inc	r0
      00028F E2               [24]  604 	movx	a,@r0
      000290 09               [12]  605 	inc	r1
      000291 F3               [24]  606 	movx	@r1,a
      000292 08               [12]  607 	inc	r0
      000293 E2               [24]  608 	movx	a,@r0
      000294 09               [12]  609 	inc	r1
      000295 F3               [24]  610 	movx	@r1,a
      000296 08               [12]  611 	inc	r0
      000297 E2               [24]  612 	movx	a,@r0
      000298 09               [12]  613 	inc	r1
      000299 F3               [24]  614 	movx	@r1,a
      00029A E4               [12]  615 	clr	a
      00029B 09               [12]  616 	inc	r1
      00029C F3               [24]  617 	movx	@r1,a
      00029D 09               [12]  618 	inc	r1
      00029E F3               [24]  619 	movx	@r1,a
      00029F 09               [12]  620 	inc	r1
      0002A0 F3               [24]  621 	movx	@r1,a
      0002A1 09               [12]  622 	inc	r1
      0002A2 F3               [24]  623 	movx	@r1,a
                                    624 ;	../../device/include/stdckdint.h:76: inline _Bool __ckd_mul_ulong __CKD_DEFAULT_IMPL(unsigned long, *)
      0002A3 C0 03            [24]  625 	push	ar3
      0002A5 C0 02            [24]  626 	push	ar2
      0002A7 78r10            [12]  627 	mov	r0,#_strtoul___2621440014_262144_155
      0002A9 E2               [24]  628 	movx	a,@r0
      0002AA F5 82            [12]  629 	mov	dpl,a
      0002AC 08               [12]  630 	inc	r0
      0002AD E2               [24]  631 	movx	a,@r0
      0002AE F5 83            [12]  632 	mov	dph,a
      0002B0 08               [12]  633 	inc	r0
      0002B1 E2               [24]  634 	movx	a,@r0
      0002B2 F5 F0            [12]  635 	mov	b,a
      0002B4 08               [12]  636 	inc	r0
      0002B5 E2               [24]  637 	movx	a,@r0
      0002B6 C0 E0            [24]  638 	push	acc
      0002B8 08               [12]  639 	inc	r0
      0002B9 E2               [24]  640 	movx	a,@r0
      0002BA FC               [12]  641 	mov	r4,a
      0002BB 08               [12]  642 	inc	r0
      0002BC E2               [24]  643 	movx	a,@r0
      0002BD FD               [12]  644 	mov	r5,a
      0002BE 08               [12]  645 	inc	r0
      0002BF E2               [24]  646 	movx	a,@r0
      0002C0 FE               [12]  647 	mov	r6,a
      0002C1 08               [12]  648 	inc	r0
      0002C2 E2               [24]  649 	movx	a,@r0
      0002C3 FF               [12]  650 	mov	r7,a
      0002C4 D0 E0            [24]  651 	pop	acc
      0002C6 12r00r00         [24]  652 	lcall	__mullonglong
      0002C9 78r18            [12]  653 	mov	r0,#_strtoul_result_393216_157
      0002CB C0 E0            [24]  654 	push	acc
      0002CD E5 82            [12]  655 	mov	a,dpl
      0002CF F2               [24]  656 	movx	@r0,a
      0002D0 E5 83            [12]  657 	mov	a,dph
      0002D2 08               [12]  658 	inc	r0
      0002D3 F2               [24]  659 	movx	@r0,a
      0002D4 E5 F0            [12]  660 	mov	a,b
      0002D6 08               [12]  661 	inc	r0
      0002D7 F2               [24]  662 	movx	@r0,a
      0002D8 D0 E0            [24]  663 	pop	acc
      0002DA 08               [12]  664 	inc	r0
      0002DB F2               [24]  665 	movx	@r0,a
      0002DC EC               [12]  666 	mov	a,r4
      0002DD 08               [12]  667 	inc	r0
      0002DE F2               [24]  668 	movx	@r0,a
      0002DF ED               [12]  669 	mov	a,r5
      0002E0 08               [12]  670 	inc	r0
      0002E1 F2               [24]  671 	movx	@r0,a
      0002E2 EE               [12]  672 	mov	a,r6
      0002E3 08               [12]  673 	inc	r0
      0002E4 F2               [24]  674 	movx	@r0,a
      0002E5 EF               [12]  675 	mov	a,r7
      0002E6 08               [12]  676 	inc	r0
      0002E7 F2               [24]  677 	movx	@r0,a
      0002E8 D0 02            [24]  678 	pop	ar2
      0002EA D0 03            [24]  679 	pop	ar3
      0002EC 78r18            [12]  680 	mov	r0,#_strtoul_result_393216_157
      0002EE E2               [24]  681 	movx	a,@r0
      0002EF FC               [12]  682 	mov	r4,a
      0002F0 08               [12]  683 	inc	r0
      0002F1 E2               [24]  684 	movx	a,@r0
      0002F2 FD               [12]  685 	mov	r5,a
      0002F3 08               [12]  686 	inc	r0
      0002F4 E2               [24]  687 	movx	a,@r0
      0002F5 FE               [12]  688 	mov	r6,a
      0002F6 08               [12]  689 	inc	r0
      0002F7 E2               [24]  690 	movx	a,@r0
      0002F8 FF               [12]  691 	mov	r7,a
      0002F9 78r09            [12]  692 	mov	r0,#_strtoul_ret_65536_140
      0002FB EC               [12]  693 	mov	a,r4
      0002FC F2               [24]  694 	movx	@r0,a
      0002FD 08               [12]  695 	inc	r0
      0002FE ED               [12]  696 	mov	a,r5
      0002FF F2               [24]  697 	movx	@r0,a
      000300 08               [12]  698 	inc	r0
      000301 EE               [12]  699 	mov	a,r6
      000302 F2               [24]  700 	movx	@r0,a
      000303 08               [12]  701 	inc	r0
      000304 EF               [12]  702 	mov	a,r7
      000305 F2               [24]  703 	movx	@r0,a
      000306 8C*04            [24]  704 	mov	_strtoul_sloc2_1_0,r4
      000308 8D*05            [24]  705 	mov	(_strtoul_sloc2_1_0 + 1),r5
      00030A 8E*06            [24]  706 	mov	(_strtoul_sloc2_1_0 + 2),r6
      00030C 8F*07            [24]  707 	mov	(_strtoul_sloc2_1_0 + 3),r7
      00030E 75*08 00         [24]  708 	mov	(_strtoul_sloc2_1_0 + 4),#0x00
      000311 75*09 00         [24]  709 	mov	(_strtoul_sloc2_1_0 + 5),#0x00
      000314 75*0A 00         [24]  710 	mov	(_strtoul_sloc2_1_0 + 6),#0x00
      000317 75*0B 00         [24]  711 	mov	(_strtoul_sloc2_1_0 + 7),#0x00
      00031A 78r18            [12]  712 	mov	r0,#_strtoul_result_393216_157
      00031C E2               [24]  713 	movx	a,@r0
      00031D B5*04 26         [24]  714 	cjne	a,_strtoul_sloc2_1_0,00235$
      000320 08               [12]  715 	inc	r0
      000321 E2               [24]  716 	movx	a,@r0
      000322 B5*05 21         [24]  717 	cjne	a,(_strtoul_sloc2_1_0 + 1),00235$
      000325 08               [12]  718 	inc	r0
      000326 E2               [24]  719 	movx	a,@r0
      000327 B5*06 1C         [24]  720 	cjne	a,(_strtoul_sloc2_1_0 + 2),00235$
      00032A 08               [12]  721 	inc	r0
      00032B E2               [24]  722 	movx	a,@r0
      00032C B5*07 17         [24]  723 	cjne	a,(_strtoul_sloc2_1_0 + 3),00235$
      00032F 08               [12]  724 	inc	r0
      000330 E2               [24]  725 	movx	a,@r0
      000331 B5*08 12         [24]  726 	cjne	a,(_strtoul_sloc2_1_0 + 4),00235$
      000334 08               [12]  727 	inc	r0
      000335 E2               [24]  728 	movx	a,@r0
      000336 B5*09 0D         [24]  729 	cjne	a,(_strtoul_sloc2_1_0 + 5),00235$
      000339 08               [12]  730 	inc	r0
      00033A E2               [24]  731 	movx	a,@r0
      00033B B5*0A 08         [24]  732 	cjne	a,(_strtoul_sloc2_1_0 + 6),00235$
      00033E 08               [12]  733 	inc	r0
      00033F E2               [24]  734 	movx	a,@r0
      000340 B5*0B 03         [24]  735 	cjne	a,(_strtoul_sloc2_1_0 + 7),00235$
      000343 D3               [12]  736 	setb	c
      000344 80 01            [24]  737 	sjmp	00236$
      000346                        738 00235$:
      000346 C3               [12]  739 	clr	c
      000347                        740 00236$:
      000347 92*00            [24]  741 	mov	_strtoul_sloc3_1_0,c
      000349 78r0F            [12]  742 	mov	r0,#_strtoul___2621440012_262144_147
      00034B B3               [12]  743 	cpl	c
      00034C E4               [12]  744 	clr	a
      00034D 33               [12]  745 	rlc	a
      00034E F2               [24]  746 	movx	@r0,a
                                    747 ;	strtoul.c:117: range_error |= ckd_mul(&ret, ret, base);
      00034F 78r0D            [12]  748 	mov	r0,#_strtoul_range_error_65536_140
      000351 79r0F            [12]  749 	mov	r1,#_strtoul___2621440012_262144_147
      000353 E2               [24]  750 	movx	a,@r0
      000354 F5 F0            [12]  751 	mov	b,a
      000356 E3               [24]  752 	movx	a,@r1
      000357 45 F0            [12]  753 	orl	a,b
      000359 F2               [24]  754 	movx	@r0,a
                                    755 ;	strtoul.c:125: ret += (unsigned char)digit;
      00035A 8A 04            [24]  756 	mov	ar4,r2
      00035C 7F 00            [12]  757 	mov	r7,#0x00
      00035E 7E 00            [12]  758 	mov	r6,#0x00
      000360 7D 00            [12]  759 	mov	r5,#0x00
      000362 78r09            [12]  760 	mov	r0,#_strtoul_ret_65536_140
      000364 E2               [24]  761 	movx	a,@r0
      000365 2C               [12]  762 	add	a,r4
      000366 F2               [24]  763 	movx	@r0,a
      000367 08               [12]  764 	inc	r0
      000368 E2               [24]  765 	movx	a,@r0
      000369 3F               [12]  766 	addc	a,r7
      00036A F2               [24]  767 	movx	@r0,a
      00036B 08               [12]  768 	inc	r0
      00036C E2               [24]  769 	movx	a,@r0
      00036D 3E               [12]  770 	addc	a,r6
      00036E F2               [24]  771 	movx	@r0,a
      00036F 08               [12]  772 	inc	r0
      000370 E2               [24]  773 	movx	a,@r0
      000371 3D               [12]  774 	addc	a,r5
      000372 F2               [24]  775 	movx	@r0,a
                                    776 ;	strtoul.c:107: for (ret = 0;; ptr++)
      000373 05*01            [12]  777 	inc	_strtoul_sloc1_1_0
      000375 E4               [12]  778 	clr	a
      000376 B5*01 02         [24]  779 	cjne	a,_strtoul_sloc1_1_0,00237$
      000379 05*02            [12]  780 	inc	(_strtoul_sloc1_1_0 + 1)
      00037B                        781 00237$:
      00037B D0 03            [24]  782 	pop	ar3
      00037D 02r02r49         [24]  783 	ljmp	00136$
      000380                        784 00127$:
                                    785 ;	strtoul.c:128: if (endptr)
      000380 78r01            [12]  786 	mov	r0,#_strtoul_PARM_2
      000382 E2               [24]  787 	movx	a,@r0
      000383 F5 F0            [12]  788 	mov	b,a
      000385 08               [12]  789 	inc	r0
      000386 E2               [24]  790 	movx	a,@r0
      000387 45 F0            [12]  791 	orl	a,b
      000389 60 21            [24]  792 	jz	00129$
                                    793 ;	strtoul.c:129: *endptr = (char*)ptr;
      00038B 78r01            [12]  794 	mov	r0,#_strtoul_PARM_2
      00038D E2               [24]  795 	movx	a,@r0
      00038E FD               [12]  796 	mov	r5,a
      00038F 08               [12]  797 	inc	r0
      000390 E2               [24]  798 	movx	a,@r0
      000391 FE               [12]  799 	mov	r6,a
      000392 08               [12]  800 	inc	r0
      000393 E2               [24]  801 	movx	a,@r0
      000394 FF               [12]  802 	mov	r7,a
      000395 8D 82            [24]  803 	mov	dpl,r5
      000397 8E 83            [24]  804 	mov	dph,r6
      000399 8F F0            [24]  805 	mov	b,r7
      00039B E5*01            [12]  806 	mov	a,_strtoul_sloc1_1_0
      00039D 12r00r00         [24]  807 	lcall	__gptrput
      0003A0 A3               [24]  808 	inc	dptr
      0003A1 E5*02            [12]  809 	mov	a,(_strtoul_sloc1_1_0 + 1)
      0003A3 12r00r00         [24]  810 	lcall	__gptrput
      0003A6 A3               [24]  811 	inc	dptr
      0003A7 E5*03            [12]  812 	mov	a,(_strtoul_sloc1_1_0 + 2)
      0003A9 12r00r00         [24]  813 	lcall	__gptrput
      0003AC                        814 00129$:
                                    815 ;	strtoul.c:131: if (range_error)
      0003AC 78r0D            [12]  816 	mov	r0,#_strtoul_range_error_65536_140
      0003AE E2               [24]  817 	movx	a,@r0
      0003AF 60 10            [24]  818 	jz	00131$
                                    819 ;	strtoul.c:133: errno = ERANGE;
      0003B1 78r00            [12]  820 	mov	r0,#_errno
      0003B3 74 22            [12]  821 	mov	a,#0x22
      0003B5 F2               [24]  822 	movx	@r0,a
      0003B6 E4               [12]  823 	clr	a
      0003B7 08               [12]  824 	inc	r0
      0003B8 F2               [24]  825 	movx	@r0,a
                                    826 ;	strtoul.c:134: return (ULONG_MAX);
      0003B9 90 FF FF         [24]  827 	mov	dptr,#0xffff
      0003BC 74 FF            [12]  828 	mov	a,#0xff
      0003BE F5 F0            [12]  829 	mov	b,a
      0003C0 22               [24]  830 	ret
      0003C1                        831 00131$:
                                    832 ;	strtoul.c:137: return (neg ? -ret : ret);
      0003C1 78r0E            [12]  833 	mov	r0,#_strtoul_neg_65536_140
      0003C3 E2               [24]  834 	movx	a,@r0
      0003C4 60 1C            [24]  835 	jz	00143$
      0003C6 78r09            [12]  836 	mov	r0,#_strtoul_ret_65536_140
      0003C8 E2               [24]  837 	movx	a,@r0
      0003C9 D3               [12]  838 	setb	c
      0003CA F4               [12]  839 	cpl	a
      0003CB 34 00            [12]  840 	addc	a,#0x00
      0003CD FC               [12]  841 	mov	r4,a
      0003CE 08               [12]  842 	inc	r0
      0003CF E2               [24]  843 	movx	a,@r0
      0003D0 F4               [12]  844 	cpl	a
      0003D1 34 00            [12]  845 	addc	a,#0x00
      0003D3 FD               [12]  846 	mov	r5,a
      0003D4 08               [12]  847 	inc	r0
      0003D5 E2               [24]  848 	movx	a,@r0
      0003D6 F4               [12]  849 	cpl	a
      0003D7 34 00            [12]  850 	addc	a,#0x00
      0003D9 FE               [12]  851 	mov	r6,a
      0003DA 08               [12]  852 	inc	r0
      0003DB E2               [24]  853 	movx	a,@r0
      0003DC F4               [12]  854 	cpl	a
      0003DD 34 00            [12]  855 	addc	a,#0x00
      0003DF FF               [12]  856 	mov	r7,a
      0003E0 80 0D            [24]  857 	sjmp	00144$
      0003E2                        858 00143$:
      0003E2 78r09            [12]  859 	mov	r0,#_strtoul_ret_65536_140
      0003E4 E2               [24]  860 	movx	a,@r0
      0003E5 FC               [12]  861 	mov	r4,a
      0003E6 08               [12]  862 	inc	r0
      0003E7 E2               [24]  863 	movx	a,@r0
      0003E8 FD               [12]  864 	mov	r5,a
      0003E9 08               [12]  865 	inc	r0
      0003EA E2               [24]  866 	movx	a,@r0
      0003EB FE               [12]  867 	mov	r6,a
      0003EC 08               [12]  868 	inc	r0
      0003ED E2               [24]  869 	movx	a,@r0
      0003EE FF               [12]  870 	mov	r7,a
      0003EF                        871 00144$:
      0003EF 8C 82            [24]  872 	mov	dpl,r4
      0003F1 8D 83            [24]  873 	mov	dph,r5
      0003F3 8E F0            [24]  874 	mov	b,r6
      0003F5 EF               [12]  875 	mov	a,r7
                                    876 ;	strtoul.c:138: }
      0003F6 22               [24]  877 	ret
                                    878 	.area CSEG    (CODE)
                                    879 	.area CONST   (CODE)
                                    880 	.area CONST   (CODE)
      000000                        881 ___str_0:
      000000 30 78                  882 	.ascii "0x"
      000002 00                     883 	.db 0x00
                                    884 	.area CSEG    (CODE)
                                    885 	.area CONST   (CODE)
      000003                        886 ___str_1:
      000003 30 58                  887 	.ascii "0X"
      000005 00                     888 	.db 0x00
                                    889 	.area CSEG    (CODE)
                                    890 	.area XINIT   (CODE)
                                    891 	.area CABS    (ABS,CODE)
