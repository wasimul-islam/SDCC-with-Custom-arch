                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtowc
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbrtowc_PARM_4
                                     12 	.globl _mbrtowc_PARM_3
                                     13 	.globl _mbrtowc_PARM_2
                                     14 	.globl _mbrtowc
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _mbrtowc_sloc0_1_0:
      000000                         35 	.ds 2
      000002                         36 _mbrtowc_sloc1_1_0:
      000002                         37 	.ds 3
      000005                         38 _mbrtowc_sloc2_1_0:
      000005                         39 	.ds 3
      000008                         40 _mbrtowc_sloc3_1_0:
      000008                         41 	.ds 1
      000009                         42 _mbrtowc_sloc4_1_0:
      000009                         43 	.ds 3
      00000C                         44 _mbrtowc_sloc5_1_0:
      00000C                         45 	.ds 4
                                     46 ;--------------------------------------------------------
                                     47 ; overlayable items in internal ram
                                     48 ;--------------------------------------------------------
                                     49 ;--------------------------------------------------------
                                     50 ; indirectly addressable internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area ISEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; absolute internal ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area IABS    (ABS,DATA)
                                     57 	.area IABS    (ABS,DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; bit data
                                     60 ;--------------------------------------------------------
                                     61 	.area BSEG    (BIT)
                                     62 ;--------------------------------------------------------
                                     63 ; paged external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area PSEG    (PAG,XDATA)
      000000                         66 _mbrtowc_PARM_2:
      000000                         67 	.ds 3
      000003                         68 _mbrtowc_PARM_3:
      000003                         69 	.ds 2
      000005                         70 _mbrtowc_PARM_4:
      000005                         71 	.ds 3
      000008                         72 _mbrtowc_pwc_65536_9:
      000008                         73 	.ds 3
      00000B                         74 _mbrtowc_first_byte_65536_10:
      00000B                         75 	.ds 1
      00000C                         76 _mbrtowc_mbseq_65536_10:
      00000C                         77 	.ds 4
      000010                         78 _mbrtowc_codepoint_65536_10:
      000010                         79 	.ds 4
      000014                         80 _mbrtowc_i_65536_10:
      000014                         81 	.ds 1
      000015                         82 _mbrtowc_sps_65536_10:
      000015                         83 	.ds 3
                                     84 ;--------------------------------------------------------
                                     85 ; uninitialized external ram data
                                     86 ;--------------------------------------------------------
                                     87 	.area XSEG    (XDATA)
                                     88 ;--------------------------------------------------------
                                     89 ; absolute external ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area XABS    (ABS,XDATA)
                                     92 ;--------------------------------------------------------
                                     93 ; initialized external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area XISEG   (XDATA)
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT0 (CODE)
                                     98 	.area GSINIT1 (CODE)
                                     99 	.area GSINIT2 (CODE)
                                    100 	.area GSINIT3 (CODE)
                                    101 	.area GSINIT4 (CODE)
                                    102 	.area GSINIT5 (CODE)
                                    103 	.area GSINIT  (CODE)
                                    104 	.area GSFINAL (CODE)
                                    105 	.area CSEG    (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; global & static initialisations
                                    108 ;--------------------------------------------------------
                                    109 	.area HOME    (CODE)
                                    110 	.area GSINIT  (CODE)
                                    111 	.area GSFINAL (CODE)
                                    112 	.area GSINIT  (CODE)
                                    113 ;--------------------------------------------------------
                                    114 ; Home
                                    115 ;--------------------------------------------------------
                                    116 	.area HOME    (CODE)
                                    117 	.area HOME    (CODE)
                                    118 ;--------------------------------------------------------
                                    119 ; code
                                    120 ;--------------------------------------------------------
                                    121 	.area CSEG    (CODE)
                                    122 ;------------------------------------------------------------
                                    123 ;Allocation info for local variables in function 'mbrtowc'
                                    124 ;------------------------------------------------------------
                                    125 ;sloc0                     Allocated with name '_mbrtowc_sloc0_1_0'
                                    126 ;sloc1                     Allocated with name '_mbrtowc_sloc1_1_0'
                                    127 ;sloc2                     Allocated with name '_mbrtowc_sloc2_1_0'
                                    128 ;sloc3                     Allocated with name '_mbrtowc_sloc3_1_0'
                                    129 ;sloc4                     Allocated with name '_mbrtowc_sloc4_1_0'
                                    130 ;sloc5                     Allocated with name '_mbrtowc_sloc5_1_0'
                                    131 ;------------------------------------------------------------
                                    132 ;	mbrtowc.c:32: size_t mbrtowc(wchar_t *restrict pwc, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    133 ;	-----------------------------------------
                                    134 ;	 function mbrtowc
                                    135 ;	-----------------------------------------
      000000                        136 _mbrtowc:
                           000007   137 	ar7 = 0x07
                           000006   138 	ar6 = 0x06
                           000005   139 	ar5 = 0x05
                           000004   140 	ar4 = 0x04
                           000003   141 	ar3 = 0x03
                           000002   142 	ar2 = 0x02
                           000001   143 	ar1 = 0x01
                           000000   144 	ar0 = 0x00
      000000 AF F0            [24]  145 	mov	r7,b
      000002 AE 83            [24]  146 	mov	r6,dph
      000004 E5 82            [12]  147 	mov	a,dpl
      000006 78r08            [12]  148 	mov	r0,#_mbrtowc_pwc_65536_9
      000008 F2               [24]  149 	movx	@r0,a
      000009 EE               [12]  150 	mov	a,r6
      00000A 08               [12]  151 	inc	r0
      00000B F2               [24]  152 	movx	@r0,a
      00000C EF               [12]  153 	mov	a,r7
      00000D 08               [12]  154 	inc	r0
      00000E F2               [24]  155 	movx	@r0,a
                                    156 ;	mbrtowc.c:41: if(!s)
      00000F 78r00            [12]  157 	mov	r0,#_mbrtowc_PARM_2
      000011 E2               [24]  158 	movx	a,@r0
      000012 F5 F0            [12]  159 	mov	b,a
      000014 08               [12]  160 	inc	r0
      000015 E2               [24]  161 	movx	a,@r0
      000016 45 F0            [12]  162 	orl	a,b
      000018 70 1B            [24]  163 	jnz	00102$
                                    164 ;	mbrtowc.c:42: return(mbrtowc(0, "", 1, ps));
      00001A 78r00            [12]  165 	mov	r0,#_mbrtowc_PARM_2
      00001C 74r00            [12]  166 	mov	a,#___str_0
      00001E F2               [24]  167 	movx	@r0,a
      00001F 74s00            [12]  168 	mov	a,#(___str_0 >> 8)
      000021 08               [12]  169 	inc	r0
      000022 F2               [24]  170 	movx	@r0,a
      000023 74 80            [12]  171 	mov	a,#0x80
      000025 08               [12]  172 	inc	r0
      000026 F2               [24]  173 	movx	@r0,a
      000027 78r03            [12]  174 	mov	r0,#_mbrtowc_PARM_3
      000029 23               [12]  175 	rl	a
      00002A F2               [24]  176 	movx	@r0,a
      00002B E4               [12]  177 	clr	a
      00002C 08               [12]  178 	inc	r0
      00002D F2               [24]  179 	movx	@r0,a
      00002E 90 00 00         [24]  180 	mov	dptr,#0x0000
      000031 F5 F0            [12]  181 	mov	b,a
      000033 80 CB            [24]  182 	sjmp	_mbrtowc
      000035                        183 00102$:
                                    184 ;	mbrtowc.c:43: if(!n)
      000035 78r03            [12]  185 	mov	r0,#_mbrtowc_PARM_3
      000037 E2               [24]  186 	movx	a,@r0
      000038 F5 F0            [12]  187 	mov	b,a
      00003A 08               [12]  188 	inc	r0
      00003B E2               [24]  189 	movx	a,@r0
      00003C 45 F0            [12]  190 	orl	a,b
      00003E 70 03            [24]  191 	jnz	00280$
      000040 02r03r4F         [24]  192 	ljmp	00128$
      000043                        193 00280$:
                                    194 ;	mbrtowc.c:45: if(!ps)
      000043 78r05            [12]  195 	mov	r0,#_mbrtowc_PARM_4
      000045 E2               [24]  196 	movx	a,@r0
      000046 F5 F0            [12]  197 	mov	b,a
      000048 08               [12]  198 	inc	r0
      000049 E2               [24]  199 	movx	a,@r0
      00004A 45 F0            [12]  200 	orl	a,b
      00004C 70 0C            [24]  201 	jnz	00106$
                                    202 ;	mbrtowc.c:47: ps = &sps;
      00004E 78r05            [12]  203 	mov	r0,#_mbrtowc_PARM_4
      000050 74r15            [12]  204 	mov	a,#_mbrtowc_sps_65536_10
      000052 F2               [24]  205 	movx	@r0,a
      000053 E4               [12]  206 	clr	a
      000054 08               [12]  207 	inc	r0
      000055 F2               [24]  208 	movx	@r0,a
      000056 74 60            [12]  209 	mov	a,#0x60
      000058 08               [12]  210 	inc	r0
      000059 F2               [24]  211 	movx	@r0,a
      00005A                        212 00106$:
                                    213 ;	mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
      00005A 78r05            [12]  214 	mov	r0,#_mbrtowc_PARM_4
      00005C E2               [24]  215 	movx	a,@r0
      00005D FA               [12]  216 	mov	r2,a
      00005E 08               [12]  217 	inc	r0
      00005F E2               [24]  218 	movx	a,@r0
      000060 FB               [12]  219 	mov	r3,a
      000061 08               [12]  220 	inc	r0
      000062 E2               [24]  221 	movx	a,@r0
      000063 FC               [12]  222 	mov	r4,a
      000064 78r14            [12]  223 	mov	r0,#_mbrtowc_i_65536_10
      000066 E4               [12]  224 	clr	a
      000067 F2               [24]  225 	movx	@r0,a
      000068                        226 00131$:
      000068 78r14            [12]  227 	mov	r0,#_mbrtowc_i_65536_10
      00006A E2               [24]  228 	movx	a,@r0
      00006B 2A               [12]  229 	add	a,r2
      00006C FD               [12]  230 	mov	r5,a
      00006D E4               [12]  231 	clr	a
      00006E 3B               [12]  232 	addc	a,r3
      00006F FE               [12]  233 	mov	r6,a
      000070 8C 07            [24]  234 	mov	ar7,r4
      000072 8D 82            [24]  235 	mov	dpl,r5
      000074 8E 83            [24]  236 	mov	dph,r6
      000076 8F F0            [24]  237 	mov	b,r7
      000078 12r00r00         [24]  238 	lcall	__gptrget
      00007B FF               [12]  239 	mov	r7,a
      00007C 60 18            [24]  240 	jz	00174$
      00007E 78r14            [12]  241 	mov	r0,#_mbrtowc_i_65536_10
      000080 E2               [24]  242 	movx	a,@r0
      000081 B4 03 00         [24]  243 	cjne	a,#0x03,00283$
      000084                        244 00283$:
      000084 50 10            [24]  245 	jnc	00174$
                                    246 ;	mbrtowc.c:51: mbseq[i] = ps->c[i];
      000086 78r14            [12]  247 	mov	r0,#_mbrtowc_i_65536_10
      000088 E2               [24]  248 	movx	a,@r0
      000089 24r0C            [12]  249 	add	a,#_mbrtowc_mbseq_65536_10
      00008B F8               [12]  250 	mov	r0,a
      00008C EF               [12]  251 	mov	a,r7
      00008D F2               [24]  252 	movx	@r0,a
                                    253 ;	mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
      00008E 78r14            [12]  254 	mov	r0,#_mbrtowc_i_65536_10
      000090 E2               [24]  255 	movx	a,@r0
      000091 24 01            [12]  256 	add	a,#0x01
      000093 F2               [24]  257 	movx	@r0,a
      000094 80 D2            [24]  258 	sjmp	00131$
      000096                        259 00174$:
      000096 78r14            [12]  260 	mov	r0,#_mbrtowc_i_65536_10
      000098 E2               [24]  261 	movx	a,@r0
      000099 FF               [12]  262 	mov	r7,a
                                    263 ;	mbrtowc.c:53: seqlen = 1;
      00009A 7E 01            [12]  264 	mov	r6,#0x01
                                    265 ;	mbrtowc.c:54: first_byte = ps->c[0] ? ps->c[0] : *s;
      00009C 78r05            [12]  266 	mov	r0,#_mbrtowc_PARM_4
      00009E E2               [24]  267 	movx	a,@r0
      00009F FB               [12]  268 	mov	r3,a
      0000A0 08               [12]  269 	inc	r0
      0000A1 E2               [24]  270 	movx	a,@r0
      0000A2 FC               [12]  271 	mov	r4,a
      0000A3 08               [12]  272 	inc	r0
      0000A4 E2               [24]  273 	movx	a,@r0
      0000A5 FD               [12]  274 	mov	r5,a
      0000A6 8B 82            [24]  275 	mov	dpl,r3
      0000A8 8C 83            [24]  276 	mov	dph,r4
      0000AA 8D F0            [24]  277 	mov	b,r5
      0000AC 12r00r00         [24]  278 	lcall	__gptrget
      0000AF FD               [12]  279 	mov	r5,a
      0000B0 70 14            [24]  280 	jnz	00148$
      0000B2 78r00            [12]  281 	mov	r0,#_mbrtowc_PARM_2
      0000B4 E2               [24]  282 	movx	a,@r0
      0000B5 FA               [12]  283 	mov	r2,a
      0000B6 08               [12]  284 	inc	r0
      0000B7 E2               [24]  285 	movx	a,@r0
      0000B8 FB               [12]  286 	mov	r3,a
      0000B9 08               [12]  287 	inc	r0
      0000BA E2               [24]  288 	movx	a,@r0
      0000BB FC               [12]  289 	mov	r4,a
      0000BC 8A 82            [24]  290 	mov	dpl,r2
      0000BE 8B 83            [24]  291 	mov	dph,r3
      0000C0 8C F0            [24]  292 	mov	b,r4
      0000C2 12r00r00         [24]  293 	lcall	__gptrget
      0000C5 FD               [12]  294 	mov	r5,a
      0000C6                        295 00148$:
      0000C6 78r0B            [12]  296 	mov	r0,#_mbrtowc_first_byte_65536_10
      0000C8 ED               [12]  297 	mov	a,r5
      0000C9 F2               [24]  298 	movx	@r0,a
                                    299 ;	mbrtowc.c:56: if(first_byte & 0x80)
      0000CA 78r0B            [12]  300 	mov	r0,#_mbrtowc_first_byte_65536_10
      0000CC E2               [24]  301 	movx	a,@r0
      0000CD 54 80            [12]  302 	anl	a,#0x80
      0000CF 60 50            [24]  303 	jz	00112$
                                    304 ;	mbrtowc.c:58: while (first_byte & (0x80 >> seqlen))
      0000D1 7C 01            [12]  305 	mov	r4,#0x01
      0000D3                        306 00108$:
      0000D3 C0 07            [24]  307 	push	ar7
      0000D5 8C F0            [24]  308 	mov	b,r4
      0000D7 05 F0            [12]  309 	inc	b
      0000D9 7A 80            [12]  310 	mov	r2,#0x80
      0000DB E4               [12]  311 	clr	a
      0000DC FB               [12]  312 	mov	r3,a
      0000DD 33               [12]  313 	rlc	a
      0000DE 92 D2            [24]  314 	mov	ov,c
      0000E0 80 08            [24]  315 	sjmp	00288$
      0000E2                        316 00287$:
      0000E2 A2 D2            [12]  317 	mov	c,ov
      0000E4 EB               [12]  318 	mov	a,r3
      0000E5 13               [12]  319 	rrc	a
      0000E6 FB               [12]  320 	mov	r3,a
      0000E7 EA               [12]  321 	mov	a,r2
      0000E8 13               [12]  322 	rrc	a
      0000E9 FA               [12]  323 	mov	r2,a
      0000EA                        324 00288$:
      0000EA D5 F0 F5         [24]  325 	djnz	b,00287$
      0000ED 78r0B            [12]  326 	mov	r0,#_mbrtowc_first_byte_65536_10
      0000EF E2               [24]  327 	movx	a,@r0
      0000F0 FD               [12]  328 	mov	r5,a
      0000F1 7F 00            [12]  329 	mov	r7,#0x00
      0000F3 52 02            [12]  330 	anl	ar2,a
      0000F5 EF               [12]  331 	mov	a,r7
      0000F6 52 03            [12]  332 	anl	ar3,a
      0000F8 D0 07            [24]  333 	pop	ar7
      0000FA EA               [12]  334 	mov	a,r2
      0000FB 4B               [12]  335 	orl	a,r3
      0000FC 60 03            [24]  336 	jz	00175$
                                    337 ;	mbrtowc.c:59: seqlen++;
      0000FE 0C               [12]  338 	inc	r4
      0000FF 80 D2            [24]  339 	sjmp	00108$
      000101                        340 00175$:
      000101 8C 06            [24]  341 	mov	ar6,r4
                                    342 ;	mbrtowc.c:60: first_byte &= (0xff >> (seqlen + 1));
      000103 0C               [12]  343 	inc	r4
      000104 8C F0            [24]  344 	mov	b,r4
      000106 05 F0            [12]  345 	inc	b
      000108 7C FF            [12]  346 	mov	r4,#0xff
      00010A E4               [12]  347 	clr	a
      00010B FD               [12]  348 	mov	r5,a
      00010C 33               [12]  349 	rlc	a
      00010D 92 D2            [24]  350 	mov	ov,c
      00010F 80 08            [24]  351 	sjmp	00291$
      000111                        352 00290$:
      000111 A2 D2            [12]  353 	mov	c,ov
      000113 ED               [12]  354 	mov	a,r5
      000114 13               [12]  355 	rrc	a
      000115 FD               [12]  356 	mov	r5,a
      000116 EC               [12]  357 	mov	a,r4
      000117 13               [12]  358 	rrc	a
      000118 FC               [12]  359 	mov	r4,a
      000119                        360 00291$:
      000119 D5 F0 F5         [24]  361 	djnz	b,00290$
      00011C 78r0B            [12]  362 	mov	r0,#_mbrtowc_first_byte_65536_10
      00011E E2               [24]  363 	movx	a,@r0
      00011F 5C               [12]  364 	anl	a,r4
      000120 F2               [24]  365 	movx	@r0,a
      000121                        366 00112$:
                                    367 ;	mbrtowc.c:63: if(seqlen > 4)
      000121 EE               [12]  368 	mov	a,r6
      000122 24 FB            [12]  369 	add	a,#0xff - 0x04
      000124 50 03            [24]  370 	jnc	00292$
      000126 02r03r4F         [24]  371 	ljmp	00128$
      000129                        372 00292$:
                                    373 ;	mbrtowc.c:66: if(i + n < seqlen) // Incomplete multibyte character
      000129 8F 04            [24]  374 	mov	ar4,r7
      00012B 7D 00            [12]  375 	mov	r5,#0x00
      00012D 8C 02            [24]  376 	mov	ar2,r4
      00012F 8D 03            [24]  377 	mov	ar3,r5
      000131 78r03            [12]  378 	mov	r0,#_mbrtowc_PARM_3
      000133 E2               [24]  379 	movx	a,@r0
      000134 2A               [12]  380 	add	a,r2
      000135 F5*00            [12]  381 	mov	_mbrtowc_sloc0_1_0,a
      000137 08               [12]  382 	inc	r0
      000138 E2               [24]  383 	movx	a,@r0
      000139 3B               [12]  384 	addc	a,r3
      00013A F5*01            [12]  385 	mov	(_mbrtowc_sloc0_1_0 + 1),a
      00013C C0 07            [24]  386 	push	ar7
      00013E 8E 03            [24]  387 	mov	ar3,r6
      000140 7F 00            [12]  388 	mov	r7,#0x00
      000142 C3               [12]  389 	clr	c
      000143 E5*00            [12]  390 	mov	a,_mbrtowc_sloc0_1_0
      000145 9B               [12]  391 	subb	a,r3
      000146 E5*01            [12]  392 	mov	a,(_mbrtowc_sloc0_1_0 + 1)
      000148 9F               [12]  393 	subb	a,r7
      000149 D0 07            [24]  394 	pop	ar7
      00014B 50 6D            [24]  395 	jnc	00164$
                                    396 ;	mbrtowc.c:70: return(-2);
      00014D 78r05            [12]  397 	mov	r0,#_mbrtowc_PARM_4
      00014F E2               [24]  398 	movx	a,@r0
      000150 F5*02            [12]  399 	mov	_mbrtowc_sloc1_1_0,a
      000152 08               [12]  400 	inc	r0
      000153 E2               [24]  401 	movx	a,@r0
      000154 F5*03            [12]  402 	mov	(_mbrtowc_sloc1_1_0 + 1),a
      000156 08               [12]  403 	inc	r0
      000157 E2               [24]  404 	movx	a,@r0
      000158 F5*04            [12]  405 	mov	(_mbrtowc_sloc1_1_0 + 2),a
      00015A 78r00            [12]  406 	mov	r0,#_mbrtowc_PARM_2
      00015C E2               [24]  407 	movx	a,@r0
      00015D F5*05            [12]  408 	mov	_mbrtowc_sloc2_1_0,a
      00015F 08               [12]  409 	inc	r0
      000160 E2               [24]  410 	movx	a,@r0
      000161 F5*06            [12]  411 	mov	(_mbrtowc_sloc2_1_0 + 1),a
      000163 08               [12]  412 	inc	r0
      000164 E2               [24]  413 	movx	a,@r0
      000165 F5*07            [12]  414 	mov	(_mbrtowc_sloc2_1_0 + 2),a
      000167 8F*08            [24]  415 	mov	_mbrtowc_sloc3_1_0,r7
      000169 78r03            [12]  416 	mov	r0,#_mbrtowc_PARM_3
      00016B E2               [24]  417 	movx	a,@r0
      00016C F5*00            [12]  418 	mov	_mbrtowc_sloc0_1_0,a
      00016E 08               [12]  419 	inc	r0
      00016F E2               [24]  420 	movx	a,@r0
      000170 F5*01            [12]  421 	mov	(_mbrtowc_sloc0_1_0 + 1),a
      000172                        422 00134$:
                                    423 ;	mbrtowc.c:68: for(;n-- ; i++)
      000172 AA*00            [24]  424 	mov	r2,_mbrtowc_sloc0_1_0
      000174 AB*01            [24]  425 	mov	r3,(_mbrtowc_sloc0_1_0 + 1)
      000176 15*00            [12]  426 	dec	_mbrtowc_sloc0_1_0
      000178 74 FF            [12]  427 	mov	a,#0xff
      00017A B5*00 02         [24]  428 	cjne	a,_mbrtowc_sloc0_1_0,00294$
      00017D 15*01            [12]  429 	dec	(_mbrtowc_sloc0_1_0 + 1)
      00017F                        430 00294$:
      00017F EA               [12]  431 	mov	a,r2
      000180 4B               [12]  432 	orl	a,r3
      000181 60 33            [24]  433 	jz	00115$
                                    434 ;	mbrtowc.c:69: ps->c[i] = *s++;
      000183 E5*08            [12]  435 	mov	a,_mbrtowc_sloc3_1_0
      000185 25*02            [12]  436 	add	a,_mbrtowc_sloc1_1_0
      000187 F5*09            [12]  437 	mov	_mbrtowc_sloc4_1_0,a
      000189 E4               [12]  438 	clr	a
      00018A 35*03            [12]  439 	addc	a,(_mbrtowc_sloc1_1_0 + 1)
      00018C F5*0A            [12]  440 	mov	(_mbrtowc_sloc4_1_0 + 1),a
      00018E 85*04*0B         [24]  441 	mov	(_mbrtowc_sloc4_1_0 + 2),(_mbrtowc_sloc1_1_0 + 2)
      000191 85*05 82         [24]  442 	mov	dpl,_mbrtowc_sloc2_1_0
      000194 85*06 83         [24]  443 	mov	dph,(_mbrtowc_sloc2_1_0 + 1)
      000197 85*07 F0         [24]  444 	mov	b,(_mbrtowc_sloc2_1_0 + 2)
      00019A 12r00r00         [24]  445 	lcall	__gptrget
      00019D FB               [12]  446 	mov	r3,a
      00019E A3               [24]  447 	inc	dptr
      00019F 85 82*05         [24]  448 	mov	_mbrtowc_sloc2_1_0,dpl
      0001A2 85 83*06         [24]  449 	mov	(_mbrtowc_sloc2_1_0 + 1),dph
      0001A5 85*09 82         [24]  450 	mov	dpl,_mbrtowc_sloc4_1_0
      0001A8 85*0A 83         [24]  451 	mov	dph,(_mbrtowc_sloc4_1_0 + 1)
      0001AB 85*0B F0         [24]  452 	mov	b,(_mbrtowc_sloc4_1_0 + 2)
      0001AE EB               [12]  453 	mov	a,r3
      0001AF 12r00r00         [24]  454 	lcall	__gptrput
                                    455 ;	mbrtowc.c:68: for(;n-- ; i++)
      0001B2 05*08            [12]  456 	inc	_mbrtowc_sloc3_1_0
      0001B4 80 BC            [24]  457 	sjmp	00134$
      0001B6                        458 00115$:
                                    459 ;	mbrtowc.c:70: return(-2);
      0001B6 90 FF FE         [24]  460 	mov	dptr,#0xfffe
      0001B9 22               [24]  461 	ret
                                    462 ;	mbrtowc.c:73: for(j = 0; j < i; j++)
      0001BA                        463 00164$:
      0001BA 78r05            [12]  464 	mov	r0,#_mbrtowc_PARM_4
      0001BC E2               [24]  465 	movx	a,@r0
      0001BD F5*09            [12]  466 	mov	_mbrtowc_sloc4_1_0,a
      0001BF 08               [12]  467 	inc	r0
      0001C0 E2               [24]  468 	movx	a,@r0
      0001C1 F5*0A            [12]  469 	mov	(_mbrtowc_sloc4_1_0 + 1),a
      0001C3 08               [12]  470 	inc	r0
      0001C4 E2               [24]  471 	movx	a,@r0
      0001C5 F5*0B            [12]  472 	mov	(_mbrtowc_sloc4_1_0 + 2),a
      0001C7 7B 00            [12]  473 	mov	r3,#0x00
      0001C9                        474 00137$:
      0001C9 C3               [12]  475 	clr	c
      0001CA EB               [12]  476 	mov	a,r3
      0001CB 9F               [12]  477 	subb	a,r7
      0001CC 50 1F            [24]  478 	jnc	00118$
                                    479 ;	mbrtowc.c:74: ps->c[j] = 0;
      0001CE C0 04            [24]  480 	push	ar4
      0001D0 C0 05            [24]  481 	push	ar5
      0001D2 EB               [12]  482 	mov	a,r3
      0001D3 25*09            [12]  483 	add	a,_mbrtowc_sloc4_1_0
      0001D5 FA               [12]  484 	mov	r2,a
      0001D6 E4               [12]  485 	clr	a
      0001D7 35*0A            [12]  486 	addc	a,(_mbrtowc_sloc4_1_0 + 1)
      0001D9 FC               [12]  487 	mov	r4,a
      0001DA AD*0B            [24]  488 	mov	r5,(_mbrtowc_sloc4_1_0 + 2)
      0001DC 8A 82            [24]  489 	mov	dpl,r2
      0001DE 8C 83            [24]  490 	mov	dph,r4
      0001E0 8D F0            [24]  491 	mov	b,r5
      0001E2 E4               [12]  492 	clr	a
      0001E3 12r00r00         [24]  493 	lcall	__gptrput
                                    494 ;	mbrtowc.c:73: for(j = 0; j < i; j++)
      0001E6 0B               [12]  495 	inc	r3
      0001E7 D0 05            [24]  496 	pop	ar5
      0001E9 D0 04            [24]  497 	pop	ar4
      0001EB 80 DC            [24]  498 	sjmp	00137$
      0001ED                        499 00118$:
                                    500 ;	mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
      0001ED 78r03            [12]  501 	mov	r0,#_mbrtowc_PARM_3
      0001EF 74 01            [12]  502 	mov	a,#0x01
      0001F1 F2               [24]  503 	movx	@r0,a
      0001F2 E4               [12]  504 	clr	a
      0001F3 08               [12]  505 	inc	r0
      0001F4 F2               [24]  506 	movx	@r0,a
      0001F5 EF               [12]  507 	mov	a,r7
      0001F6 60 04            [24]  508 	jz	00149$
      0001F8 8C 07            [24]  509 	mov	ar7,r4
      0001FA 80 04            [24]  510 	sjmp	00150$
      0001FC                        511 00149$:
      0001FC 7F 01            [12]  512 	mov	r7,#0x01
      0001FE 7D 00            [12]  513 	mov	r5,#0x00
      000200                        514 00150$:
      000200 78r00            [12]  515 	mov	r0,#_mbrtowc_PARM_2
      000202 E2               [24]  516 	movx	a,@r0
      000203 FB               [12]  517 	mov	r3,a
      000204 08               [12]  518 	inc	r0
      000205 E2               [24]  519 	movx	a,@r0
      000206 FC               [12]  520 	mov	r4,a
      000207 08               [12]  521 	inc	r0
      000208 E2               [24]  522 	movx	a,@r0
      000209 FD               [12]  523 	mov	r5,a
      00020A 75*09 01         [24]  524 	mov	_mbrtowc_sloc4_1_0,#0x01
      00020D 75*0A 00         [24]  525 	mov	(_mbrtowc_sloc4_1_0 + 1),#0x00
      000210                        526 00140$:
      000210 C3               [12]  527 	clr	c
      000211 EF               [12]  528 	mov	a,r7
      000212 9E               [12]  529 	subb	a,r6
      000213 50 3F            [24]  530 	jnc	00121$
                                    531 ;	mbrtowc.c:78: mbseq[i] = *s++;
      000215 C0 06            [24]  532 	push	ar6
      000217 EF               [12]  533 	mov	a,r7
      000218 24r0C            [12]  534 	add	a,#_mbrtowc_mbseq_65536_10
      00021A F9               [12]  535 	mov	r1,a
      00021B 8B 82            [24]  536 	mov	dpl,r3
      00021D 8C 83            [24]  537 	mov	dph,r4
      00021F 8D F0            [24]  538 	mov	b,r5
      000221 12r00r00         [24]  539 	lcall	__gptrget
      000224 FA               [12]  540 	mov	r2,a
      000225 A3               [24]  541 	inc	dptr
      000226 AB 82            [24]  542 	mov	r3,dpl
      000228 AC 83            [24]  543 	mov	r4,dph
      00022A EA               [12]  544 	mov	a,r2
      00022B F3               [24]  545 	movx	@r1,a
                                    546 ;	mbrtowc.c:79: if((mbseq[i] & 0xc0) != 0x80)
      00022C 53 02 C0         [24]  547 	anl	ar2,#0xc0
      00022F 7E 00            [12]  548 	mov	r6,#0x00
      000231 BA 80 05         [24]  549 	cjne	r2,#0x80,00299$
      000234 BE 00 02         [24]  550 	cjne	r6,#0x00,00299$
      000237 80 05            [24]  551 	sjmp	00300$
      000239                        552 00299$:
      000239 D0 06            [24]  553 	pop	ar6
      00023B 02r03r4F         [24]  554 	ljmp	00128$
      00023E                        555 00300$:
      00023E D0 06            [24]  556 	pop	ar6
                                    557 ;	mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
      000240 0F               [12]  558 	inc	r7
      000241 05*09            [12]  559 	inc	_mbrtowc_sloc4_1_0
      000243 E4               [12]  560 	clr	a
      000244 B5*09 02         [24]  561 	cjne	a,_mbrtowc_sloc4_1_0,00301$
      000247 05*0A            [12]  562 	inc	(_mbrtowc_sloc4_1_0 + 1)
      000249                        563 00301$:
      000249 78r03            [12]  564 	mov	r0,#_mbrtowc_PARM_3
      00024B E5*09            [12]  565 	mov	a,_mbrtowc_sloc4_1_0
      00024D F2               [24]  566 	movx	@r0,a
      00024E E5*0A            [12]  567 	mov	a,(_mbrtowc_sloc4_1_0 + 1)
      000250 08               [12]  568 	inc	r0
      000251 F2               [24]  569 	movx	@r0,a
      000252 80 BC            [24]  570 	sjmp	00140$
      000254                        571 00121$:
                                    572 ;	mbrtowc.c:83: codepoint = first_byte;
      000254 78r0B            [12]  573 	mov	r0,#_mbrtowc_first_byte_65536_10
      000256 E2               [24]  574 	movx	a,@r0
      000257 FD               [12]  575 	mov	r5,a
      000258 7C 00            [12]  576 	mov	r4,#0x00
      00025A 7B 00            [12]  577 	mov	r3,#0x00
      00025C 7F 00            [12]  578 	mov	r7,#0x00
                                    579 ;	mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
      00025E 75*09r0D         [24]  580 	mov	_mbrtowc_sloc4_1_0,#(_mbrtowc_mbseq_65536_10 + 0x0001)
      000261 8F*0A            [24]  581 	mov	(_mbrtowc_sloc4_1_0 + 1),r7
      000263 75*0B 60         [24]  582 	mov	(_mbrtowc_sloc4_1_0 + 2),#0x60
      000266 EE               [12]  583 	mov	a,r6
      000267 14               [12]  584 	dec	a
      000268 F5*08            [12]  585 	mov	_mbrtowc_sloc3_1_0,a
      00026A                        586 00143$:
      00026A E5*08            [12]  587 	mov	a,_mbrtowc_sloc3_1_0
      00026C 70 03            [24]  588 	jnz	00302$
      00026E 02r02rFE         [24]  589 	ljmp	00122$
      000271                        590 00302$:
                                    591 ;	mbrtowc.c:87: codepoint <<= 6;
      000271 78r10            [12]  592 	mov	r0,#_mbrtowc_codepoint_65536_10
      000273 EB               [12]  593 	mov	a,r3
      000274 08               [12]  594 	inc	r0
      000275 08               [12]  595 	inc	r0
      000276 F2               [24]  596 	movx	@r0,a
      000277 8F F0            [24]  597 	mov	b,r7
      000279 E2               [24]  598 	movx	a,@r0
      00027A C5 F0            [12]  599 	xch	a,b
      00027C 54 03            [12]  600 	anl	a,#0x03
      00027E A2 E0            [12]  601 	mov	c,acc.0
      000280 C5 F0            [12]  602 	xch	a,b
      000282 13               [12]  603 	rrc	a
      000283 C5 F0            [12]  604 	xch	a,b
      000285 13               [12]  605 	rrc	a
      000286 A2 E0            [12]  606 	mov	c,acc.0
      000288 C5 F0            [12]  607 	xch	a,b
      00028A 13               [12]  608 	rrc	a
      00028B C5 F0            [12]  609 	xch	a,b
      00028D 13               [12]  610 	rrc	a
      00028E F2               [24]  611 	movx	@r0,a
      00028F E5 F0            [12]  612 	mov	a,b
      000291 08               [12]  613 	inc	r0
      000292 F2               [24]  614 	movx	@r0,a
      000293 EC               [12]  615 	mov	a,r4
      000294 03               [12]  616 	rr	a
      000295 03               [12]  617 	rr	a
      000296 54 3F            [12]  618 	anl	a,#0x3f
      000298 C5 F0            [12]  619 	xch	a,b
      00029A 18               [12]  620 	dec	r0
      00029B E2               [24]  621 	movx	a,@r0
      00029C 45 F0            [12]  622 	orl	a,b
      00029E F2               [24]  623 	movx	@r0,a
      00029F ED               [12]  624 	mov	a,r5
      0002A0 18               [12]  625 	dec	r0
      0002A1 18               [12]  626 	dec	r0
      0002A2 F2               [24]  627 	movx	@r0,a
      0002A3 8C F0            [24]  628 	mov	b,r4
      0002A5 E2               [24]  629 	movx	a,@r0
      0002A6 C5 F0            [12]  630 	xch	a,b
      0002A8 54 03            [12]  631 	anl	a,#0x03
      0002AA A2 E0            [12]  632 	mov	c,acc.0
      0002AC C5 F0            [12]  633 	xch	a,b
      0002AE 13               [12]  634 	rrc	a
      0002AF C5 F0            [12]  635 	xch	a,b
      0002B1 13               [12]  636 	rrc	a
      0002B2 A2 E0            [12]  637 	mov	c,acc.0
      0002B4 C5 F0            [12]  638 	xch	a,b
      0002B6 13               [12]  639 	rrc	a
      0002B7 C5 F0            [12]  640 	xch	a,b
      0002B9 13               [12]  641 	rrc	a
      0002BA F2               [24]  642 	movx	@r0,a
      0002BB E5 F0            [12]  643 	mov	a,b
      0002BD 08               [12]  644 	inc	r0
      0002BE F2               [24]  645 	movx	@r0,a
                                    646 ;	mbrtowc.c:88: codepoint |= (*s & 0x3f);
      0002BF 85*09 82         [24]  647 	mov	dpl,_mbrtowc_sloc4_1_0
      0002C2 85*0A 83         [24]  648 	mov	dph,(_mbrtowc_sloc4_1_0 + 1)
      0002C5 85*0B F0         [24]  649 	mov	b,(_mbrtowc_sloc4_1_0 + 2)
      0002C8 12r00r00         [24]  650 	lcall	__gptrget
      0002CB FA               [12]  651 	mov	r2,a
      0002CC A3               [24]  652 	inc	dptr
      0002CD 85 82*09         [24]  653 	mov	_mbrtowc_sloc4_1_0,dpl
      0002D0 85 83*0A         [24]  654 	mov	(_mbrtowc_sloc4_1_0 + 1),dph
      0002D3 53 02 3F         [24]  655 	anl	ar2,#0x3f
      0002D6 7E 00            [12]  656 	mov	r6,#0x00
      0002D8 8A*0C            [24]  657 	mov	_mbrtowc_sloc5_1_0,r2
      0002DA EE               [12]  658 	mov	a,r6
      0002DB F5*0D            [12]  659 	mov	(_mbrtowc_sloc5_1_0 + 1),a
      0002DD 33               [12]  660 	rlc	a
      0002DE 95 E0            [12]  661 	subb	a,acc
      0002E0 F5*0E            [12]  662 	mov	(_mbrtowc_sloc5_1_0 + 2),a
      0002E2 F5*0F            [12]  663 	mov	(_mbrtowc_sloc5_1_0 + 3),a
      0002E4 78r10            [12]  664 	mov	r0,#_mbrtowc_codepoint_65536_10
      0002E6 E2               [24]  665 	movx	a,@r0
      0002E7 45*0C            [12]  666 	orl	a,_mbrtowc_sloc5_1_0
      0002E9 FD               [12]  667 	mov	r5,a
      0002EA 08               [12]  668 	inc	r0
      0002EB E2               [24]  669 	movx	a,@r0
      0002EC 45*0D            [12]  670 	orl	a,(_mbrtowc_sloc5_1_0 + 1)
      0002EE FC               [12]  671 	mov	r4,a
      0002EF 08               [12]  672 	inc	r0
      0002F0 E2               [24]  673 	movx	a,@r0
      0002F1 45*0E            [12]  674 	orl	a,(_mbrtowc_sloc5_1_0 + 2)
      0002F3 FB               [12]  675 	mov	r3,a
      0002F4 08               [12]  676 	inc	r0
      0002F5 E2               [24]  677 	movx	a,@r0
      0002F6 45*0F            [12]  678 	orl	a,(_mbrtowc_sloc5_1_0 + 3)
      0002F8 FF               [12]  679 	mov	r7,a
                                    680 ;	mbrtowc.c:89: s++;
                                    681 ;	mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
      0002F9 15*08            [12]  682 	dec	_mbrtowc_sloc3_1_0
      0002FB 02r02r6A         [24]  683 	ljmp	00143$
      0002FE                        684 00122$:
                                    685 ;	mbrtowc.c:92: if(codepoint >= 0xd800 && codepoint <= 0xdfff) // UTF-16 surrogate.
      0002FE C3               [12]  686 	clr	c
      0002FF EC               [12]  687 	mov	a,r4
      000300 94 D8            [12]  688 	subb	a,#0xd8
      000302 EB               [12]  689 	mov	a,r3
      000303 94 00            [12]  690 	subb	a,#0x00
      000305 EF               [12]  691 	mov	a,r7
      000306 94 00            [12]  692 	subb	a,#0x00
      000308 40 10            [24]  693 	jc	00124$
      00030A 74 FF            [12]  694 	mov	a,#0xff
      00030C 9D               [12]  695 	subb	a,r5
      00030D 74 DF            [12]  696 	mov	a,#0xdf
      00030F 9C               [12]  697 	subb	a,r4
      000310 E4               [12]  698 	clr	a
      000311 9B               [12]  699 	subb	a,r3
      000312 E4               [12]  700 	clr	a
      000313 9F               [12]  701 	subb	a,r7
      000314 40 04            [24]  702 	jc	00124$
                                    703 ;	mbrtowc.c:93: return(-1);
      000316 90 FF FF         [24]  704 	mov	dptr,#0xffff
      000319 22               [24]  705 	ret
      00031A                        706 00124$:
                                    707 ;	mbrtowc.c:95: if(pwc)
      00031A 78r08            [12]  708 	mov	r0,#_mbrtowc_pwc_65536_9
      00031C E2               [24]  709 	movx	a,@r0
      00031D F5 F0            [12]  710 	mov	b,a
      00031F 08               [12]  711 	inc	r0
      000320 E2               [24]  712 	movx	a,@r0
      000321 45 F0            [12]  713 	orl	a,b
      000323 60 20            [24]  714 	jz	00127$
                                    715 ;	mbrtowc.c:96: *pwc = codepoint;
      000325 78r08            [12]  716 	mov	r0,#_mbrtowc_pwc_65536_9
      000327 E2               [24]  717 	movx	a,@r0
      000328 F5 82            [12]  718 	mov	dpl,a
      00032A 08               [12]  719 	inc	r0
      00032B E2               [24]  720 	movx	a,@r0
      00032C F5 83            [12]  721 	mov	dph,a
      00032E 08               [12]  722 	inc	r0
      00032F E2               [24]  723 	movx	a,@r0
      000330 F5 F0            [12]  724 	mov	b,a
      000332 ED               [12]  725 	mov	a,r5
      000333 12r00r00         [24]  726 	lcall	__gptrput
      000336 A3               [24]  727 	inc	dptr
      000337 EC               [12]  728 	mov	a,r4
      000338 12r00r00         [24]  729 	lcall	__gptrput
      00033B A3               [24]  730 	inc	dptr
      00033C EB               [12]  731 	mov	a,r3
      00033D 12r00r00         [24]  732 	lcall	__gptrput
      000340 A3               [24]  733 	inc	dptr
      000341 EF               [12]  734 	mov	a,r7
      000342 12r00r00         [24]  735 	lcall	__gptrput
      000345                        736 00127$:
                                    737 ;	mbrtowc.c:97: return(n);
      000345 78r03            [12]  738 	mov	r0,#_mbrtowc_PARM_3
      000347 E2               [24]  739 	movx	a,@r0
      000348 F5 82            [12]  740 	mov	dpl,a
      00034A 08               [12]  741 	inc	r0
      00034B E2               [24]  742 	movx	a,@r0
      00034C F5 83            [12]  743 	mov	dph,a
                                    744 ;	mbrtowc.c:99: eilseq:
      00034E 22               [24]  745 	ret
      00034F                        746 00128$:
                                    747 ;	mbrtowc.c:100: errno = EILSEQ;
      00034F 78r00            [12]  748 	mov	r0,#_errno
      000351 74 54            [12]  749 	mov	a,#0x54
      000353 F2               [24]  750 	movx	@r0,a
      000354 E4               [12]  751 	clr	a
      000355 08               [12]  752 	inc	r0
      000356 F2               [24]  753 	movx	@r0,a
                                    754 ;	mbrtowc.c:101: return(-1);
      000357 90 FF FF         [24]  755 	mov	dptr,#0xffff
                                    756 ;	mbrtowc.c:102: }
      00035A 22               [24]  757 	ret
                                    758 	.area CSEG    (CODE)
                                    759 	.area CONST   (CODE)
                                    760 	.area CONST   (CODE)
      000000                        761 ___str_0:
      000000 00                     762 	.db 0x00
                                    763 	.area CSEG    (CODE)
                                    764 	.area XINIT   (CODE)
                                    765 	.area CABS    (ABS,CODE)
