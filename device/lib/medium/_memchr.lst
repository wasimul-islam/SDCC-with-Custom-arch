                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memchr
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memchr_PARM_3
                                     12 	.globl _memchr_PARM_2
                                     13 	.globl _memchr
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
      000000                         53 _memchr_PARM_2:
      000000                         54 	.ds 2
      000002                         55 _memchr_PARM_3:
      000002                         56 	.ds 2
      000004                         57 _memchr_p_65536_27:
      000004                         58 	.ds 3
      000007                         59 _memchr_end_65536_27:
      000007                         60 	.ds 3
                                     61 ;--------------------------------------------------------
                                     62 ; uninitialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XSEG    (XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XABS    (ABS,XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; initialized external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XISEG   (XDATA)
                                     73 	.area HOME    (CODE)
                                     74 	.area GSINIT0 (CODE)
                                     75 	.area GSINIT1 (CODE)
                                     76 	.area GSINIT2 (CODE)
                                     77 	.area GSINIT3 (CODE)
                                     78 	.area GSINIT4 (CODE)
                                     79 	.area GSINIT5 (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area CSEG    (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'memchr'
                                    101 ;------------------------------------------------------------
                                    102 ;	_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                                    103 ;	-----------------------------------------
                                    104 ;	 function memchr
                                    105 ;	-----------------------------------------
      000000                        106 _memchr:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 AD 82            [24]  115 	mov	r5,dpl
      000002 AE 83            [24]  116 	mov	r6,dph
      000004 AF F0            [24]  117 	mov	r7,b
                                    118 ;	_memchr.c:33: unsigned char *p = (unsigned char *)s;
      000006 78r04            [12]  119 	mov	r0,#_memchr_p_65536_27
      000008 ED               [12]  120 	mov	a,r5
      000009 F2               [24]  121 	movx	@r0,a
      00000A EE               [12]  122 	mov	a,r6
      00000B 08               [12]  123 	inc	r0
      00000C F2               [24]  124 	movx	@r0,a
      00000D EF               [12]  125 	mov	a,r7
      00000E 08               [12]  126 	inc	r0
      00000F F2               [24]  127 	movx	@r0,a
                                    128 ;	_memchr.c:34: unsigned char *end = p + n;
      000010 78r04            [12]  129 	mov	r0,#_memchr_p_65536_27
      000012 79r02            [12]  130 	mov	r1,#_memchr_PARM_3
      000014 E3               [24]  131 	movx	a,@r1
      000015 C5 F0            [12]  132 	xch	a,b
      000017 E2               [24]  133 	movx	a,@r0
      000018 25 F0            [12]  134 	add	a,b
      00001A C0 E0            [24]  135 	push	acc
      00001C 09               [12]  136 	inc	r1
      00001D E3               [24]  137 	movx	a,@r1
      00001E C5 F0            [12]  138 	xch	a,b
      000020 08               [12]  139 	inc	r0
      000021 E2               [24]  140 	movx	a,@r0
      000022 35 F0            [12]  141 	addc	a,b
      000024 C0 E0            [24]  142 	push	acc
      000026 08               [12]  143 	inc	r0
      000027 E2               [24]  144 	movx	a,@r0
      000028 C0 E0            [24]  145 	push	acc
      00002A 78r09            [12]  146 	mov	r0,#(_memchr_end_65536_27 + 2)
      00002C D0 E0            [24]  147 	pop	acc
      00002E F2               [24]  148 	movx	@r0,a
      00002F 18               [12]  149 	dec	r0
      000030 D0 E0            [24]  150 	pop	acc
      000032 F2               [24]  151 	movx	@r0,a
      000033 18               [12]  152 	dec	r0
      000034 D0 E0            [24]  153 	pop	acc
      000036 F2               [24]  154 	movx	@r0,a
                                    155 ;	_memchr.c:38: return(0);
      000037 78r04            [12]  156 	mov	r0,#_memchr_p_65536_27
      000039 E2               [24]  157 	movx	a,@r0
      00003A FA               [12]  158 	mov	r2,a
      00003B 08               [12]  159 	inc	r0
      00003C E2               [24]  160 	movx	a,@r0
      00003D FB               [12]  161 	mov	r3,a
      00003E 08               [12]  162 	inc	r0
      00003F E2               [24]  163 	movx	a,@r0
      000040 FC               [12]  164 	mov	r4,a
      000041                        165 00105$:
                                    166 ;	_memchr.c:35: for(; p != end; p++)
      000041 78r07            [12]  167 	mov	r0,#_memchr_end_65536_27
      000043 C0 02            [24]  168 	push	ar2
      000045 C0 03            [24]  169 	push	ar3
      000047 C0 04            [24]  170 	push	ar4
      000049 E2               [24]  171 	movx	a,@r0
      00004A F5 82            [12]  172 	mov	dpl,a
      00004C 08               [12]  173 	inc	r0
      00004D E2               [24]  174 	movx	a,@r0
      00004E F5 83            [12]  175 	mov	dph,a
      000050 08               [12]  176 	inc	r0
      000051 E2               [24]  177 	movx	a,@r0
      000052 F5 F0            [12]  178 	mov	b,a
      000054 12r00r00         [24]  179 	lcall	___gptr_cmp
      000057 15 81            [12]  180 	dec	sp
      000059 15 81            [12]  181 	dec	sp
      00005B 15 81            [12]  182 	dec	sp
      00005D 60 34            [24]  183 	jz	00103$
                                    184 ;	_memchr.c:36: if(*p == (unsigned char)c)
      00005F 8A 82            [24]  185 	mov	dpl,r2
      000061 8B 83            [24]  186 	mov	dph,r3
      000063 8C F0            [24]  187 	mov	b,r4
      000065 12r00r00         [24]  188 	lcall	__gptrget
      000068 FF               [12]  189 	mov	r7,a
      000069 78r00            [12]  190 	mov	r0,#_memchr_PARM_2
      00006B E2               [24]  191 	movx	a,@r0
      00006C FE               [12]  192 	mov	r6,a
      00006D EF               [12]  193 	mov	a,r7
      00006E B5 06 11         [24]  194 	cjne	a,ar6,00106$
                                    195 ;	_memchr.c:37: return((void *)p);
      000071 78r04            [12]  196 	mov	r0,#_memchr_p_65536_27
      000073 E2               [24]  197 	movx	a,@r0
      000074 FD               [12]  198 	mov	r5,a
      000075 08               [12]  199 	inc	r0
      000076 E2               [24]  200 	movx	a,@r0
      000077 FE               [12]  201 	mov	r6,a
      000078 08               [12]  202 	inc	r0
      000079 E2               [24]  203 	movx	a,@r0
      00007A FF               [12]  204 	mov	r7,a
      00007B 8D 82            [24]  205 	mov	dpl,r5
      00007D 8E 83            [24]  206 	mov	dph,r6
      00007F 8F F0            [24]  207 	mov	b,r7
      000081 22               [24]  208 	ret
      000082                        209 00106$:
                                    210 ;	_memchr.c:35: for(; p != end; p++)
      000082 0A               [12]  211 	inc	r2
      000083 BA 00 01         [24]  212 	cjne	r2,#0x00,00124$
      000086 0B               [12]  213 	inc	r3
      000087                        214 00124$:
      000087 78r04            [12]  215 	mov	r0,#_memchr_p_65536_27
      000089 EA               [12]  216 	mov	a,r2
      00008A F2               [24]  217 	movx	@r0,a
      00008B EB               [12]  218 	mov	a,r3
      00008C 08               [12]  219 	inc	r0
      00008D F2               [24]  220 	movx	@r0,a
      00008E EC               [12]  221 	mov	a,r4
      00008F 08               [12]  222 	inc	r0
      000090 F2               [24]  223 	movx	@r0,a
      000091 80 AE            [24]  224 	sjmp	00105$
      000093                        225 00103$:
                                    226 ;	_memchr.c:38: return(0);
      000093 90 00 00         [24]  227 	mov	dptr,#0x0000
      000096 75 F0 00         [24]  228 	mov	b,#0x00
                                    229 ;	_memchr.c:39: }
      000099 22               [24]  230 	ret
                                    231 	.area CSEG    (CODE)
                                    232 	.area CONST   (CODE)
                                    233 	.area XINIT   (CODE)
                                    234 	.area CABS    (ABS,CODE)
