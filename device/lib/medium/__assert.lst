                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __assert
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___assert
                                     12 	.globl _printf
                                     13 	.globl ___assert_PARM_4
                                     14 	.globl ___assert_PARM_3
                                     15 	.globl ___assert_PARM_2
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
      000000                         55 ___assert_PARM_2:
      000000                         56 	.ds 3
      000003                         57 ___assert_PARM_3:
      000003                         58 	.ds 3
      000006                         59 ___assert_PARM_4:
      000006                         60 	.ds 2
                                     61 ;--------------------------------------------------------
                                     62 ; uninitialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XSEG    (XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XABS    (ABS,XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; initialized external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XISEG   (XDATA)
                                     73 	.area HOME    (CODE)
                                     74 	.area GSINIT0 (CODE)
                                     75 	.area GSINIT1 (CODE)
                                     76 	.area GSINIT2 (CODE)
                                     77 	.area GSINIT3 (CODE)
                                     78 	.area GSINIT4 (CODE)
                                     79 	.area GSINIT5 (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area CSEG    (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function '__assert'
                                    101 ;------------------------------------------------------------
                                    102 ;	__assert.c:32: void __assert(const char *expression, const char *functionname, const char *filename, unsigned int linenumber)
                                    103 ;	-----------------------------------------
                                    104 ;	 function __assert
                                    105 ;	-----------------------------------------
      000000                        106 ___assert:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 AD 82            [24]  115 	mov	r5,dpl
      000002 AE 83            [24]  116 	mov	r6,dph
      000004 AF F0            [24]  117 	mov	r7,b
                                    118 ;	__assert.c:34: printf("Assert(%s) failed in function %s at line %u in file %s.\n",
      000006 78r03            [12]  119 	mov	r0,#___assert_PARM_3
      000008 E2               [24]  120 	movx	a,@r0
      000009 C0 E0            [24]  121 	push	acc
      00000B 08               [12]  122 	inc	r0
      00000C E2               [24]  123 	movx	a,@r0
      00000D C0 E0            [24]  124 	push	acc
      00000F 08               [12]  125 	inc	r0
      000010 E2               [24]  126 	movx	a,@r0
      000011 C0 E0            [24]  127 	push	acc
      000013 78r06            [12]  128 	mov	r0,#___assert_PARM_4
      000015 E2               [24]  129 	movx	a,@r0
      000016 C0 E0            [24]  130 	push	acc
      000018 08               [12]  131 	inc	r0
      000019 E2               [24]  132 	movx	a,@r0
      00001A C0 E0            [24]  133 	push	acc
      00001C 78r00            [12]  134 	mov	r0,#___assert_PARM_2
      00001E E2               [24]  135 	movx	a,@r0
      00001F C0 E0            [24]  136 	push	acc
      000021 08               [12]  137 	inc	r0
      000022 E2               [24]  138 	movx	a,@r0
      000023 C0 E0            [24]  139 	push	acc
      000025 08               [12]  140 	inc	r0
      000026 E2               [24]  141 	movx	a,@r0
      000027 C0 E0            [24]  142 	push	acc
      000029 C0 05            [24]  143 	push	ar5
      00002B C0 06            [24]  144 	push	ar6
      00002D C0 07            [24]  145 	push	ar7
      00002F 74r00            [12]  146 	mov	a,#___str_0
      000031 C0 E0            [24]  147 	push	acc
      000033 74s00            [12]  148 	mov	a,#(___str_0 >> 8)
      000035 C0 E0            [24]  149 	push	acc
      000037 74 80            [12]  150 	mov	a,#0x80
      000039 C0 E0            [24]  151 	push	acc
      00003B 12r00r00         [24]  152 	lcall	_printf
      00003E E5 81            [12]  153 	mov	a,sp
      000040 24 F2            [12]  154 	add	a,#0xf2
      000042 F5 81            [12]  155 	mov	sp,a
      000044                        156 00103$:
                                    157 ;	__assert.c:37: }
      000044 80 FE            [24]  158 	sjmp	00103$
                                    159 	.area CSEG    (CODE)
                                    160 	.area CONST   (CODE)
                                    161 	.area CONST   (CODE)
      000000                        162 ___str_0:
      000000 41 73 73 65 72 74 28   163 	.ascii "Assert(%s) failed in function %s at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 69 6E 20
             66 75 6E 63 74 69 6F
             6E 20 25 73 20 61 74
             20 6C 69 6E 65 20 25
             75 20 69 6E 20 66 69
             6C 65 20 25 73 2E
      000037 0A                     164 	.db 0x0a
      000038 00                     165 	.db 0x00
                                    166 	.area CSEG    (CODE)
                                    167 	.area XINIT   (CODE)
                                    168 	.area CABS    (ABS,CODE)
