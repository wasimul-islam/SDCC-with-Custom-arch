                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mblen
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mblen_PARM_2
                                     12 	.globl _mblen
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
      000000                         52 _mblen_PARM_2:
      000000                         53 	.ds 2
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'mblen'
                                     94 ;------------------------------------------------------------
                                     95 ;	mblen.c:31: int mblen(const char *s, size_t n)
                                     96 ;	-----------------------------------------
                                     97 ;	 function mblen
                                     98 ;	-----------------------------------------
      000000                         99 _mblen:
                           000007   100 	ar7 = 0x07
                           000006   101 	ar6 = 0x06
                           000005   102 	ar5 = 0x05
                           000004   103 	ar4 = 0x04
                           000003   104 	ar3 = 0x03
                           000002   105 	ar2 = 0x02
                           000001   106 	ar1 = 0x01
                           000000   107 	ar0 = 0x00
      000000 AD 82            [24]  108 	mov	r5,dpl
      000002 AE 83            [24]  109 	mov	r6,dph
      000004 AF F0            [24]  110 	mov	r7,b
                                    111 ;	mblen.c:36: if(!s)
      000006 ED               [12]  112 	mov	a,r5
      000007 4E               [12]  113 	orl	a,r6
      000008 70 04            [24]  114 	jnz	00102$
                                    115 ;	mblen.c:37: return(0);
      00000A 90 00 00         [24]  116 	mov	dptr,#0x0000
      00000D 22               [24]  117 	ret
      00000E                        118 00102$:
                                    119 ;	mblen.c:39: if(!n)
      00000E 78r00            [12]  120 	mov	r0,#_mblen_PARM_2
      000010 E2               [24]  121 	movx	a,@r0
      000011 F5 F0            [12]  122 	mov	b,a
      000013 08               [12]  123 	inc	r0
      000014 E2               [24]  124 	movx	a,@r0
      000015 45 F0            [12]  125 	orl	a,b
      000017 70 04            [24]  126 	jnz	00104$
                                    127 ;	mblen.c:40: return(-1);
      000019 90 FF FF         [24]  128 	mov	dptr,#0xffff
      00001C 22               [24]  129 	ret
      00001D                        130 00104$:
                                    131 ;	mblen.c:42: c = *s;
      00001D 8D 82            [24]  132 	mov	dpl,r5
      00001F 8E 83            [24]  133 	mov	dph,r6
      000021 8F F0            [24]  134 	mov	b,r7
      000023 12r00r00         [24]  135 	lcall	__gptrget
                                    136 ;	mblen.c:44: if(!c)
      000026 FC               [12]  137 	mov	r4,a
      000027 70 04            [24]  138 	jnz	00106$
                                    139 ;	mblen.c:45: return(0);
      000029 90 00 00         [24]  140 	mov	dptr,#0x0000
      00002C 22               [24]  141 	ret
      00002D                        142 00106$:
                                    143 ;	mblen.c:47: if(c <= 0x7f)
      00002D EC               [12]  144 	mov	a,r4
      00002E 24 80            [12]  145 	add	a,#0xff - 0x7f
      000030 40 04            [24]  146 	jc	00126$
                                    147 ;	mblen.c:48: return(1);
      000032 90 00 01         [24]  148 	mov	dptr,#0x0001
                                    149 ;	mblen.c:50: while(c & 0x80)
      000035 22               [24]  150 	ret
      000036                        151 00126$:
      000036 7B 00            [12]  152 	mov	r3,#0x00
      000038                        153 00109$:
      000038 EC               [12]  154 	mov	a,r4
      000039 30 E7 08         [24]  155 	jnb	acc.7,00111$
                                    156 ;	mblen.c:52: c <<= 1;
      00003C 8C 02            [24]  157 	mov	ar2,r4
      00003E EA               [12]  158 	mov	a,r2
      00003F 2A               [12]  159 	add	a,r2
      000040 FC               [12]  160 	mov	r4,a
                                    161 ;	mblen.c:53: m++;
      000041 0B               [12]  162 	inc	r3
      000042 80 F4            [24]  163 	sjmp	00109$
      000044                        164 00111$:
                                    165 ;	mblen.c:56: if(m > n)
      000044 8B 02            [24]  166 	mov	ar2,r3
      000046 7C 00            [12]  167 	mov	r4,#0x00
      000048 78r00            [12]  168 	mov	r0,#_mblen_PARM_2
      00004A C3               [12]  169 	clr	c
      00004B E2               [24]  170 	movx	a,@r0
      00004C 9A               [12]  171 	subb	a,r2
      00004D 08               [12]  172 	inc	r0
      00004E E2               [24]  173 	movx	a,@r0
      00004F 9C               [12]  174 	subb	a,r4
      000050 50 04            [24]  175 	jnc	00129$
                                    176 ;	mblen.c:57: return(-1);
      000052 90 FF FF         [24]  177 	mov	dptr,#0xffff
                                    178 ;	mblen.c:60: while(--m)
      000055 22               [24]  179 	ret
      000056                        180 00129$:
      000056                        181 00116$:
      000056 1B               [12]  182 	dec	r3
      000057 EB               [12]  183 	mov	a,r3
      000058 60 2C            [24]  184 	jz	00118$
                                    185 ;	mblen.c:61: if((*++s & 0xc0) != 0x80)
      00005A C0 02            [24]  186 	push	ar2
      00005C C0 04            [24]  187 	push	ar4
      00005E 0D               [12]  188 	inc	r5
      00005F BD 00 01         [24]  189 	cjne	r5,#0x00,00169$
      000062 0E               [12]  190 	inc	r6
      000063                        191 00169$:
      000063 8D 82            [24]  192 	mov	dpl,r5
      000065 8E 83            [24]  193 	mov	dph,r6
      000067 8F F0            [24]  194 	mov	b,r7
      000069 12r00r00         [24]  195 	lcall	__gptrget
      00006C FC               [12]  196 	mov	r4,a
      00006D 53 04 C0         [24]  197 	anl	ar4,#0xc0
      000070 7A 00            [12]  198 	mov	r2,#0x00
      000072 BC 80 09         [24]  199 	cjne	r4,#0x80,00170$
      000075 BA 00 06         [24]  200 	cjne	r2,#0x00,00170$
      000078 D0 04            [24]  201 	pop	ar4
      00007A D0 02            [24]  202 	pop	ar2
      00007C 80 D8            [24]  203 	sjmp	00116$
      00007E                        204 00170$:
      00007E D0 04            [24]  205 	pop	ar4
      000080 D0 02            [24]  206 	pop	ar2
                                    207 ;	mblen.c:62: return(-1);
      000082 90 FF FF         [24]  208 	mov	dptr,#0xffff
      000085 22               [24]  209 	ret
      000086                        210 00118$:
                                    211 ;	mblen.c:64: return(n);
      000086 8A 82            [24]  212 	mov	dpl,r2
      000088 8C 83            [24]  213 	mov	dph,r4
                                    214 ;	mblen.c:65: }
      00008A 22               [24]  215 	ret
                                    216 	.area CSEG    (CODE)
                                    217 	.area CONST   (CODE)
                                    218 	.area XINIT   (CODE)
                                    219 	.area CABS    (ABS,CODE)
