                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strdup
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl _strlen
                                     13 	.globl _strcpy
                                     14 	.globl _strdup
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'strdup'
                                     94 ;------------------------------------------------------------
                                     95 ;	strdup.c:33: char *strdup (const char *s)
                                     96 ;	-----------------------------------------
                                     97 ;	 function strdup
                                     98 ;	-----------------------------------------
      000000                         99 _strdup:
                           000007   100 	ar7 = 0x07
                           000006   101 	ar6 = 0x06
                           000005   102 	ar5 = 0x05
                           000004   103 	ar4 = 0x04
                           000003   104 	ar3 = 0x03
                           000002   105 	ar2 = 0x02
                           000001   106 	ar1 = 0x01
                           000000   107 	ar0 = 0x00
                                    108 ;	strdup.c:35: char *r = malloc(strlen(s) + 1);
      000000 AD 82            [24]  109 	mov	r5,dpl
      000002 AE 83            [24]  110 	mov	r6,dph
      000004 AF F0            [24]  111 	mov	r7,b
      000006 C0 07            [24]  112 	push	ar7
      000008 C0 06            [24]  113 	push	ar6
      00000A C0 05            [24]  114 	push	ar5
      00000C 12r00r00         [24]  115 	lcall	_strlen
      00000F E5 82            [12]  116 	mov	a,dpl
      000011 85 83 F0         [24]  117 	mov	b,dph
      000014 24 01            [12]  118 	add	a,#0x01
      000016 F5 82            [12]  119 	mov	dpl,a
      000018 E4               [12]  120 	clr	a
      000019 35 F0            [12]  121 	addc	a,b
      00001B F5 83            [12]  122 	mov	dph,a
      00001D 12r00r00         [24]  123 	lcall	_malloc
      000020 AB 82            [24]  124 	mov	r3,dpl
      000022 AC 83            [24]  125 	mov	r4,dph
      000024 D0 05            [24]  126 	pop	ar5
      000026 D0 06            [24]  127 	pop	ar6
      000028 D0 07            [24]  128 	pop	ar7
      00002A 8C 02            [24]  129 	mov	ar2,r4
      00002C 7C 00            [12]  130 	mov	r4,#0x00
                                    131 ;	strdup.c:36: if (r)
      00002E EB               [12]  132 	mov	a,r3
      00002F 4A               [12]  133 	orl	a,r2
      000030 60 1F            [24]  134 	jz	00102$
                                    135 ;	strdup.c:37: strcpy(r, s);
      000032 78r00            [12]  136 	mov	r0,#_strcpy_PARM_2
      000034 ED               [12]  137 	mov	a,r5
      000035 F2               [24]  138 	movx	@r0,a
      000036 EE               [12]  139 	mov	a,r6
      000037 08               [12]  140 	inc	r0
      000038 F2               [24]  141 	movx	@r0,a
      000039 EF               [12]  142 	mov	a,r7
      00003A 08               [12]  143 	inc	r0
      00003B F2               [24]  144 	movx	@r0,a
      00003C 8B 82            [24]  145 	mov	dpl,r3
      00003E 8A 83            [24]  146 	mov	dph,r2
      000040 8C F0            [24]  147 	mov	b,r4
      000042 C0 04            [24]  148 	push	ar4
      000044 C0 03            [24]  149 	push	ar3
      000046 C0 02            [24]  150 	push	ar2
      000048 12r00r00         [24]  151 	lcall	_strcpy
      00004B D0 02            [24]  152 	pop	ar2
      00004D D0 03            [24]  153 	pop	ar3
      00004F D0 04            [24]  154 	pop	ar4
      000051                        155 00102$:
                                    156 ;	strdup.c:38: return (r);
      000051 8B 82            [24]  157 	mov	dpl,r3
      000053 8A 83            [24]  158 	mov	dph,r2
      000055 8C F0            [24]  159 	mov	b,r4
                                    160 ;	strdup.c:39: }
      000057 22               [24]  161 	ret
                                    162 	.area CSEG    (CODE)
                                    163 	.area CONST   (CODE)
                                    164 	.area XINIT   (CODE)
                                    165 	.area CABS    (ABS,CODE)
