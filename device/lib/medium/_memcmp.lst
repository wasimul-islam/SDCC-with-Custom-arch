                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memcmp
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memcmp_PARM_3
                                     12 	.globl _memcmp_PARM_2
                                     13 	.globl _memcmp
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _memcmp_sloc0_1_0:
      000000                         38 	.ds 3
      000003                         39 _memcmp_sloc1_1_0:
      000003                         40 	.ds 3
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
      000000                         58 _memcmp_PARM_2:
      000000                         59 	.ds 3
      000003                         60 _memcmp_PARM_3:
      000003                         61 	.ds 2
                                     62 ;--------------------------------------------------------
                                     63 ; uninitialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XSEG    (XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; initialized external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'memcmp'
                                    102 ;------------------------------------------------------------
                                    103 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                                    104 ;sloc1                     Allocated with name '_memcmp_sloc1_1_0'
                                    105 ;------------------------------------------------------------
                                    106 ;	_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                                    107 ;	-----------------------------------------
                                    108 ;	 function memcmp
                                    109 ;	-----------------------------------------
      000000                        110 _memcmp:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 AD 82            [24]  119 	mov	r5,dpl
      000002 AE 83            [24]  120 	mov	r6,dph
      000004 AF F0            [24]  121 	mov	r7,b
                                    122 ;	_memcmp.c:33: if (!count)
      000006 78r03            [12]  123 	mov	r0,#_memcmp_PARM_3
      000008 E2               [24]  124 	movx	a,@r0
      000009 F5 F0            [12]  125 	mov	b,a
      00000B 08               [12]  126 	inc	r0
      00000C E2               [24]  127 	movx	a,@r0
      00000D 45 F0            [12]  128 	orl	a,b
      00000F 70 04            [24]  129 	jnz	00112$
                                    130 ;	_memcmp.c:34: return(0);
      000011 90 00 00         [24]  131 	mov	dptr,#0x0000
      000014 22               [24]  132 	ret
                                    133 ;	_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
      000015                        134 00112$:
      000015 78r03            [12]  135 	mov	r0,#_memcmp_PARM_3
      000017 E2               [24]  136 	movx	a,@r0
      000018 FB               [12]  137 	mov	r3,a
      000019 08               [12]  138 	inc	r0
      00001A E2               [24]  139 	movx	a,@r0
      00001B FC               [12]  140 	mov	r4,a
      00001C                        141 00104$:
      00001C 1B               [12]  142 	dec	r3
      00001D BB FF 01         [24]  143 	cjne	r3,#0xff,00127$
      000020 1C               [12]  144 	dec	r4
      000021                        145 00127$:
      000021 EB               [12]  146 	mov	a,r3
      000022 4C               [12]  147 	orl	a,r4
      000023 60 69            [24]  148 	jz	00106$
      000025 C0 03            [24]  149 	push	ar3
      000027 C0 04            [24]  150 	push	ar4
      000029 8D*00            [24]  151 	mov	_memcmp_sloc0_1_0,r5
      00002B 8E*01            [24]  152 	mov	(_memcmp_sloc0_1_0 + 1),r6
      00002D 8F*02            [24]  153 	mov	(_memcmp_sloc0_1_0 + 2),r7
      00002F 85*00 82         [24]  154 	mov	dpl,_memcmp_sloc0_1_0
      000032 85*01 83         [24]  155 	mov	dph,(_memcmp_sloc0_1_0 + 1)
      000035 85*02 F0         [24]  156 	mov	b,(_memcmp_sloc0_1_0 + 2)
      000038 12r00r00         [24]  157 	lcall	__gptrget
      00003B FA               [12]  158 	mov	r2,a
      00003C 78r00            [12]  159 	mov	r0,#_memcmp_PARM_2
      00003E E2               [24]  160 	movx	a,@r0
      00003F F5*03            [12]  161 	mov	_memcmp_sloc1_1_0,a
      000041 08               [12]  162 	inc	r0
      000042 E2               [24]  163 	movx	a,@r0
      000043 F5*04            [12]  164 	mov	(_memcmp_sloc1_1_0 + 1),a
      000045 08               [12]  165 	inc	r0
      000046 E2               [24]  166 	movx	a,@r0
      000047 F5*05            [12]  167 	mov	(_memcmp_sloc1_1_0 + 2),a
      000049 85*03 82         [24]  168 	mov	dpl,_memcmp_sloc1_1_0
      00004C 85*04 83         [24]  169 	mov	dph,(_memcmp_sloc1_1_0 + 1)
      00004F 85*05 F0         [24]  170 	mov	b,(_memcmp_sloc1_1_0 + 2)
      000052 12r00r00         [24]  171 	lcall	__gptrget
      000055 FC               [12]  172 	mov	r4,a
      000056 EA               [12]  173 	mov	a,r2
      000057 B5 04 02         [24]  174 	cjne	a,ar4,00129$
      00005A 80 06            [24]  175 	sjmp	00130$
      00005C                        176 00129$:
      00005C D0 04            [24]  177 	pop	ar4
      00005E D0 03            [24]  178 	pop	ar3
      000060 80 2C            [24]  179 	sjmp	00106$
      000062                        180 00130$:
                                    181 ;	_memcmp.c:37: buf1 = (char *)buf1 + 1;
      000062 74 01            [12]  182 	mov	a,#0x01
      000064 25*00            [12]  183 	add	a,_memcmp_sloc0_1_0
      000066 FA               [12]  184 	mov	r2,a
      000067 E4               [12]  185 	clr	a
      000068 35*01            [12]  186 	addc	a,(_memcmp_sloc0_1_0 + 1)
      00006A FB               [12]  187 	mov	r3,a
      00006B AC*02            [24]  188 	mov	r4,(_memcmp_sloc0_1_0 + 2)
      00006D 8A 05            [24]  189 	mov	ar5,r2
      00006F 8B 06            [24]  190 	mov	ar6,r3
      000071 8C 07            [24]  191 	mov	ar7,r4
                                    192 ;	_memcmp.c:38: buf2 = (char *)buf2 + 1;
      000073 74 01            [12]  193 	mov	a,#0x01
      000075 25*03            [12]  194 	add	a,_memcmp_sloc1_1_0
      000077 FA               [12]  195 	mov	r2,a
      000078 E4               [12]  196 	clr	a
      000079 35*04            [12]  197 	addc	a,(_memcmp_sloc1_1_0 + 1)
      00007B FB               [12]  198 	mov	r3,a
      00007C AC*05            [24]  199 	mov	r4,(_memcmp_sloc1_1_0 + 2)
      00007E 78r00            [12]  200 	mov	r0,#_memcmp_PARM_2
      000080 EA               [12]  201 	mov	a,r2
      000081 F2               [24]  202 	movx	@r0,a
      000082 EB               [12]  203 	mov	a,r3
      000083 08               [12]  204 	inc	r0
      000084 F2               [24]  205 	movx	@r0,a
      000085 EC               [12]  206 	mov	a,r4
      000086 08               [12]  207 	inc	r0
      000087 F2               [24]  208 	movx	@r0,a
      000088 D0 04            [24]  209 	pop	ar4
      00008A D0 03            [24]  210 	pop	ar3
      00008C 80 8E            [24]  211 	sjmp	00104$
      00008E                        212 00106$:
                                    213 ;	_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
      00008E 8D 82            [24]  214 	mov	dpl,r5
      000090 8E 83            [24]  215 	mov	dph,r6
      000092 8F F0            [24]  216 	mov	b,r7
      000094 12r00r00         [24]  217 	lcall	__gptrget
      000097 FD               [12]  218 	mov	r5,a
      000098 7F 00            [12]  219 	mov	r7,#0x00
      00009A 78r00            [12]  220 	mov	r0,#_memcmp_PARM_2
      00009C E2               [24]  221 	movx	a,@r0
      00009D FB               [12]  222 	mov	r3,a
      00009E 08               [12]  223 	inc	r0
      00009F E2               [24]  224 	movx	a,@r0
      0000A0 FC               [12]  225 	mov	r4,a
      0000A1 08               [12]  226 	inc	r0
      0000A2 E2               [24]  227 	movx	a,@r0
      0000A3 FE               [12]  228 	mov	r6,a
      0000A4 8B 82            [24]  229 	mov	dpl,r3
      0000A6 8C 83            [24]  230 	mov	dph,r4
      0000A8 8E F0            [24]  231 	mov	b,r6
      0000AA 12r00r00         [24]  232 	lcall	__gptrget
      0000AD FB               [12]  233 	mov	r3,a
      0000AE 7E 00            [12]  234 	mov	r6,#0x00
      0000B0 ED               [12]  235 	mov	a,r5
      0000B1 C3               [12]  236 	clr	c
      0000B2 9B               [12]  237 	subb	a,r3
      0000B3 F5 82            [12]  238 	mov	dpl,a
      0000B5 EF               [12]  239 	mov	a,r7
      0000B6 9E               [12]  240 	subb	a,r6
      0000B7 F5 83            [12]  241 	mov	dph,a
                                    242 ;	_memcmp.c:42: }
      0000B9 22               [24]  243 	ret
                                    244 	.area CSEG    (CODE)
                                    245 	.area CONST   (CODE)
                                    246 	.area XINIT   (CODE)
                                    247 	.area CABS    (ABS,CODE)
