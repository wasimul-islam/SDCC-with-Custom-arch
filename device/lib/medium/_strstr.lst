                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strstr
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strstr_PARM_2
                                     12 	.globl _strstr
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 _strstr_sloc0_1_0:
      000000                         37 	.ds 3
      000003                         38 _strstr_sloc1_1_0:
      000003                         39 	.ds 1
      000004                         40 _strstr_sloc2_1_0:
      000004                         41 	.ds 1
      000005                         42 _strstr_sloc3_1_0:
      000005                         43 	.ds 2
                                     44 ;--------------------------------------------------------
                                     45 ; indirectly addressable internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area ISEG    (DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; absolute internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area IABS    (ABS,DATA)
                                     52 	.area IABS    (ABS,DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; bit data
                                     55 ;--------------------------------------------------------
                                     56 	.area BSEG    (BIT)
                                     57 ;--------------------------------------------------------
                                     58 ; paged external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area PSEG    (PAG,XDATA)
      000000                         61 _strstr_PARM_2:
      000000                         62 	.ds 3
      000003                         63 _strstr_cp_65536_27:
      000003                         64 	.ds 3
      000006                         65 _strstr_s2_65536_27:
      000006                         66 	.ds 3
                                     67 ;--------------------------------------------------------
                                     68 ; uninitialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XSEG    (XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XABS    (ABS,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; initialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XISEG   (XDATA)
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'strstr'
                                    107 ;------------------------------------------------------------
                                    108 ;sloc0                     Allocated with name '_strstr_sloc0_1_0'
                                    109 ;sloc1                     Allocated with name '_strstr_sloc1_1_0'
                                    110 ;sloc2                     Allocated with name '_strstr_sloc2_1_0'
                                    111 ;sloc3                     Allocated with name '_strstr_sloc3_1_0'
                                    112 ;------------------------------------------------------------
                                    113 ;	_strstr.c:31: char *strstr ( const char *str1, const char *str2 )
                                    114 ;	-----------------------------------------
                                    115 ;	 function strstr
                                    116 ;	-----------------------------------------
      000000                        117 _strstr:
                           000007   118 	ar7 = 0x07
                           000006   119 	ar6 = 0x06
                           000005   120 	ar5 = 0x05
                           000004   121 	ar4 = 0x04
                           000003   122 	ar3 = 0x03
                           000002   123 	ar2 = 0x02
                           000001   124 	ar1 = 0x01
                           000000   125 	ar0 = 0x00
      000000 AD 82            [24]  126 	mov	r5,dpl
      000002 AE 83            [24]  127 	mov	r6,dph
      000004 AF F0            [24]  128 	mov	r7,b
                                    129 ;	_strstr.c:33: const char *cp = str1;
      000006 78r03            [12]  130 	mov	r0,#_strstr_cp_65536_27
      000008 ED               [12]  131 	mov	a,r5
      000009 F2               [24]  132 	movx	@r0,a
      00000A EE               [12]  133 	mov	a,r6
      00000B 08               [12]  134 	inc	r0
      00000C F2               [24]  135 	movx	@r0,a
      00000D EF               [12]  136 	mov	a,r7
      00000E 08               [12]  137 	inc	r0
      00000F F2               [24]  138 	movx	@r0,a
                                    139 ;	_strstr.c:37: if (!*str2)
      000010 78r00            [12]  140 	mov	r0,#_strstr_PARM_2
      000012 79r06            [12]  141 	mov	r1,#_strstr_s2_65536_27
      000014 E2               [24]  142 	movx	a,@r0
      000015 F3               [24]  143 	movx	@r1,a
      000016 08               [12]  144 	inc	r0
      000017 E2               [24]  145 	movx	a,@r0
      000018 09               [12]  146 	inc	r1
      000019 F3               [24]  147 	movx	@r1,a
      00001A 08               [12]  148 	inc	r0
      00001B E2               [24]  149 	movx	a,@r0
      00001C 09               [12]  150 	inc	r1
      00001D F3               [24]  151 	movx	@r1,a
      00001E 78r06            [12]  152 	mov	r0,#_strstr_s2_65536_27
      000020 E2               [24]  153 	movx	a,@r0
      000021 F5 82            [12]  154 	mov	dpl,a
      000023 08               [12]  155 	inc	r0
      000024 E2               [24]  156 	movx	a,@r0
      000025 F5 83            [12]  157 	mov	dph,a
      000027 08               [12]  158 	inc	r0
      000028 E2               [24]  159 	movx	a,@r0
      000029 F5 F0            [12]  160 	mov	b,a
      00002B 12r00r00         [24]  161 	lcall	__gptrget
      00002E 70 07            [24]  162 	jnz	00122$
                                    163 ;	_strstr.c:38: return ((char*)str1);
      000030 8D 82            [24]  164 	mov	dpl,r5
      000032 8E 83            [24]  165 	mov	dph,r6
      000034 8F F0            [24]  166 	mov	b,r7
      000036 22               [24]  167 	ret
                                    168 ;	_strstr.c:40: while (*cp)
      000037                        169 00122$:
      000037                        170 00110$:
      000037 8D 82            [24]  171 	mov	dpl,r5
      000039 8E 83            [24]  172 	mov	dph,r6
      00003B 8F F0            [24]  173 	mov	b,r7
      00003D 12r00r00         [24]  174 	lcall	__gptrget
      000040 70 03            [24]  175 	jnz	00149$
      000042 02r00rCD         [24]  176 	ljmp	00112$
      000045                        177 00149$:
                                    178 ;	_strstr.c:43: s2 = str2;
      000045 78r06            [12]  179 	mov	r0,#_strstr_s2_65536_27
      000047 E2               [24]  180 	movx	a,@r0
      000048 FA               [12]  181 	mov	r2,a
      000049 08               [12]  182 	inc	r0
      00004A E2               [24]  183 	movx	a,@r0
      00004B FB               [12]  184 	mov	r3,a
      00004C 08               [12]  185 	inc	r0
      00004D E2               [24]  186 	movx	a,@r0
      00004E FC               [12]  187 	mov	r4,a
                                    188 ;	_strstr.c:45: while (*s1 && *s2 && !(*s1-*s2))
      00004F 8D*00            [24]  189 	mov	_strstr_sloc0_1_0,r5
      000051 8E*01            [24]  190 	mov	(_strstr_sloc0_1_0 + 1),r6
      000053 8F*02            [24]  191 	mov	(_strstr_sloc0_1_0 + 2),r7
      000055                        192 00105$:
      000055 85*00 82         [24]  193 	mov	dpl,_strstr_sloc0_1_0
      000058 85*01 83         [24]  194 	mov	dph,(_strstr_sloc0_1_0 + 1)
      00005B 85*02 F0         [24]  195 	mov	b,(_strstr_sloc0_1_0 + 2)
      00005E 12r00r00         [24]  196 	lcall	__gptrget
      000061 F5*03            [12]  197 	mov	_strstr_sloc1_1_0,a
      000063 60 3D            [24]  198 	jz	00107$
      000065 8A 82            [24]  199 	mov	dpl,r2
      000067 8B 83            [24]  200 	mov	dph,r3
      000069 8C F0            [24]  201 	mov	b,r4
      00006B 12r00r00         [24]  202 	lcall	__gptrget
      00006E F5*04            [12]  203 	mov	_strstr_sloc2_1_0,a
      000070 60 30            [24]  204 	jz	00107$
      000072 C0 05            [24]  205 	push	ar5
      000074 C0 06            [24]  206 	push	ar6
      000076 C0 07            [24]  207 	push	ar7
      000078 85*03*05         [24]  208 	mov	_strstr_sloc3_1_0,_strstr_sloc1_1_0
      00007B 75*06 00         [24]  209 	mov	(_strstr_sloc3_1_0 + 1),#0x00
      00007E AD*04            [24]  210 	mov	r5,_strstr_sloc2_1_0
      000080 7F 00            [12]  211 	mov	r7,#0x00
      000082 E5*05            [12]  212 	mov	a,_strstr_sloc3_1_0
      000084 C3               [12]  213 	clr	c
      000085 9D               [12]  214 	subb	a,r5
      000086 FD               [12]  215 	mov	r5,a
      000087 E5*06            [12]  216 	mov	a,(_strstr_sloc3_1_0 + 1)
      000089 9F               [12]  217 	subb	a,r7
      00008A 4D               [12]  218 	orl	a,r5
      00008B D0 07            [24]  219 	pop	ar7
      00008D D0 06            [24]  220 	pop	ar6
      00008F D0 05            [24]  221 	pop	ar5
      000091 70 0F            [24]  222 	jnz	00107$
                                    223 ;	_strstr.c:46: s1++, s2++;
      000093 05*00            [12]  224 	inc	_strstr_sloc0_1_0
      000095 E4               [12]  225 	clr	a
      000096 B5*00 02         [24]  226 	cjne	a,_strstr_sloc0_1_0,00153$
      000099 05*01            [12]  227 	inc	(_strstr_sloc0_1_0 + 1)
      00009B                        228 00153$:
      00009B 0A               [12]  229 	inc	r2
      00009C BA 00 B6         [24]  230 	cjne	r2,#0x00,00105$
      00009F 0B               [12]  231 	inc	r3
      0000A0 80 B3            [24]  232 	sjmp	00105$
      0000A2                        233 00107$:
                                    234 ;	_strstr.c:48: if (!*s2)
      0000A2 8A 82            [24]  235 	mov	dpl,r2
      0000A4 8B 83            [24]  236 	mov	dph,r3
      0000A6 8C F0            [24]  237 	mov	b,r4
      0000A8 12r00r00         [24]  238 	lcall	__gptrget
      0000AB 70 0E            [24]  239 	jnz	00109$
                                    240 ;	_strstr.c:49: return ((char*)cp);
      0000AD 78r03            [12]  241 	mov	r0,#_strstr_cp_65536_27
      0000AF E2               [24]  242 	movx	a,@r0
      0000B0 F5 82            [12]  243 	mov	dpl,a
      0000B2 08               [12]  244 	inc	r0
      0000B3 E2               [24]  245 	movx	a,@r0
      0000B4 F5 83            [12]  246 	mov	dph,a
      0000B6 08               [12]  247 	inc	r0
      0000B7 E2               [24]  248 	movx	a,@r0
      0000B8 F5 F0            [12]  249 	mov	b,a
      0000BA 22               [24]  250 	ret
      0000BB                        251 00109$:
                                    252 ;	_strstr.c:51: cp++;
      0000BB 0D               [12]  253 	inc	r5
      0000BC BD 00 01         [24]  254 	cjne	r5,#0x00,00156$
      0000BF 0E               [12]  255 	inc	r6
      0000C0                        256 00156$:
      0000C0 78r03            [12]  257 	mov	r0,#_strstr_cp_65536_27
      0000C2 ED               [12]  258 	mov	a,r5
      0000C3 F2               [24]  259 	movx	@r0,a
      0000C4 EE               [12]  260 	mov	a,r6
      0000C5 08               [12]  261 	inc	r0
      0000C6 F2               [24]  262 	movx	@r0,a
      0000C7 EF               [12]  263 	mov	a,r7
      0000C8 08               [12]  264 	inc	r0
      0000C9 F2               [24]  265 	movx	@r0,a
      0000CA 02r00r37         [24]  266 	ljmp	00110$
      0000CD                        267 00112$:
                                    268 ;	_strstr.c:54: return (NULL) ;
      0000CD 90 00 00         [24]  269 	mov	dptr,#0x0000
      0000D0 75 F0 00         [24]  270 	mov	b,#0x00
                                    271 ;	_strstr.c:55: }
      0000D3 22               [24]  272 	ret
                                    273 	.area CSEG    (CODE)
                                    274 	.area CONST   (CODE)
                                    275 	.area XINIT   (CODE)
                                    276 	.area CABS    (ABS,CODE)
