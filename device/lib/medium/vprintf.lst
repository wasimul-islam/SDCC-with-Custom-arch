                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module vprintf
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _putchar
                                     12 	.globl __print_format
                                     13 	.globl _vprintf_PARM_2
                                     14 	.globl _vprintf
                                     15 	.globl _printf
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
      000000                         55 _vprintf_PARM_2:
      000000                         56 	.ds 1
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; initialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'put_char_to_stdout'
                                     97 ;------------------------------------------------------------
                                     98 ;p                         Allocated to stack - _bp -5
                                     99 ;c                         Allocated to registers r7 
                                    100 ;------------------------------------------------------------
                                    101 ;	vprintf.c:34: put_char_to_stdout (char c, void* p) _REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function put_char_to_stdout
                                    104 ;	-----------------------------------------
      000000                        105 _put_char_to_stdout:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
                                    116 ;	vprintf.c:37: putchar (c);
      000005 7E 00            [12]  117 	mov	r6,#0x00
      000007 8E 83            [24]  118 	mov	dph,r6
      000009 12r00r00         [24]  119 	lcall	_putchar
                                    120 ;	vprintf.c:38: }
      00000C D0*00            [24]  121 	pop	_bp
      00000E 22               [24]  122 	ret
                                    123 ;------------------------------------------------------------
                                    124 ;Allocation info for local variables in function 'vprintf'
                                    125 ;------------------------------------------------------------
                                    126 ;	vprintf.c:41: vprintf (const char *format, va_list ap)
                                    127 ;	-----------------------------------------
                                    128 ;	 function vprintf
                                    129 ;	-----------------------------------------
      00000F                        130 _vprintf:
      00000F AD 82            [24]  131 	mov	r5,dpl
      000011 AE 83            [24]  132 	mov	r6,dph
      000013 AF F0            [24]  133 	mov	r7,b
                                    134 ;	vprintf.c:43: return _print_format (put_char_to_stdout, NULL, format, ap);
      000015 78r00            [12]  135 	mov	r0,#__print_format_PARM_2
      000017 E4               [12]  136 	clr	a
      000018 F2               [24]  137 	movx	@r0,a
      000019 08               [12]  138 	inc	r0
      00001A F2               [24]  139 	movx	@r0,a
      00001B 08               [12]  140 	inc	r0
      00001C F2               [24]  141 	movx	@r0,a
      00001D 78r00            [12]  142 	mov	r0,#__print_format_PARM_3
      00001F ED               [12]  143 	mov	a,r5
      000020 F2               [24]  144 	movx	@r0,a
      000021 EE               [12]  145 	mov	a,r6
      000022 08               [12]  146 	inc	r0
      000023 F2               [24]  147 	movx	@r0,a
      000024 EF               [12]  148 	mov	a,r7
      000025 08               [12]  149 	inc	r0
      000026 F2               [24]  150 	movx	@r0,a
      000027 78r00            [12]  151 	mov	r0,#_vprintf_PARM_2
      000029 79r00            [12]  152 	mov	r1,#__print_format_PARM_4
      00002B E2               [24]  153 	movx	a,@r0
      00002C F3               [24]  154 	movx	@r1,a
      00002D 90r00r00         [24]  155 	mov	dptr,#_put_char_to_stdout
                                    156 ;	vprintf.c:44: }
      000030 02r00r00         [24]  157 	ljmp	__print_format
                                    158 ;------------------------------------------------------------
                                    159 ;Allocation info for local variables in function 'printf'
                                    160 ;------------------------------------------------------------
                                    161 ;format                    Allocated to stack - _bp -5
                                    162 ;arg                       Allocated to registers 
                                    163 ;i                         Allocated to registers 
                                    164 ;------------------------------------------------------------
                                    165 ;	vprintf.c:47: printf (const char *format, ...)
                                    166 ;	-----------------------------------------
                                    167 ;	 function printf
                                    168 ;	-----------------------------------------
      000033                        169 _printf:
      000033 C0*00            [24]  170 	push	_bp
                                    171 ;	vprintf.c:52: va_start (arg, format);
      000035 E5 81            [12]  172 	mov	a,sp
      000037 F5*00            [12]  173 	mov	_bp,a
      000039 24 FB            [12]  174 	add	a,#0xfb
      00003B 78r00            [12]  175 	mov	r0,#__print_format_PARM_4
      00003D F2               [24]  176 	movx	@r0,a
                                    177 ;	vprintf.c:53: i = _print_format (put_char_to_stdout, NULL, format, arg);
      00003E 78r00            [12]  178 	mov	r0,#__print_format_PARM_2
      000040 E4               [12]  179 	clr	a
      000041 F2               [24]  180 	movx	@r0,a
      000042 08               [12]  181 	inc	r0
      000043 F2               [24]  182 	movx	@r0,a
      000044 08               [12]  183 	inc	r0
      000045 F2               [24]  184 	movx	@r0,a
      000046 E5*00            [12]  185 	mov	a,_bp
      000048 24 FB            [12]  186 	add	a,#0xfb
      00004A F8               [12]  187 	mov	r0,a
      00004B 79r00            [12]  188 	mov	r1,#__print_format_PARM_3
      00004D E6               [12]  189 	mov	a,@r0
      00004E F3               [24]  190 	movx	@r1,a
      00004F 08               [12]  191 	inc	r0
      000050 E6               [12]  192 	mov	a,@r0
      000051 09               [12]  193 	inc	r1
      000052 F3               [24]  194 	movx	@r1,a
      000053 08               [12]  195 	inc	r0
      000054 E6               [12]  196 	mov	a,@r0
      000055 09               [12]  197 	inc	r1
      000056 F3               [24]  198 	movx	@r1,a
      000057 90r00r00         [24]  199 	mov	dptr,#_put_char_to_stdout
      00005A 12r00r00         [24]  200 	lcall	__print_format
                                    201 ;	vprintf.c:56: return i;
                                    202 ;	vprintf.c:57: }
      00005D D0*00            [24]  203 	pop	_bp
      00005F 22               [24]  204 	ret
                                    205 	.area CSEG    (CODE)
                                    206 	.area CONST   (CODE)
                                    207 	.area XINIT   (CODE)
                                    208 	.area CABS    (ABS,CODE)
