                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _atof
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _atoi
                                     12 	.globl _toupper
                                     13 	.globl _isspace
                                     14 	.globl _atof
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _atof_sloc0_1_0:
      000000                         35 	.ds 1
      000001                         36 _atof_sloc1_1_0:
      000001                         37 	.ds 3
      000004                         38 _atof_sloc3_1_0:
      000004                         39 	.ds 4
      000008                         40 _atof_sloc4_1_0:
      000008                         41 	.ds 4
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable items in internal ram
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; indirectly addressable internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area ISEG    (DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; absolute internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area IABS    (ABS,DATA)
                                     53 	.area IABS    (ABS,DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; bit data
                                     56 ;--------------------------------------------------------
                                     57 	.area BSEG    (BIT)
      000000                         58 _atof_sloc2_1_0:
      000000                         59 	.ds 1
                                     60 ;--------------------------------------------------------
                                     61 ; paged external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area PSEG    (PAG,XDATA)
      000000                         64 _atof_value_65536_60:
      000000                         65 	.ds 4
      000004                         66 _atof_sign_65536_60:
      000004                         67 	.ds 1
                                     68 ;--------------------------------------------------------
                                     69 ; uninitialized external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XSEG    (XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; absolute external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XABS    (ABS,XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; initialized external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XISEG   (XDATA)
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT0 (CODE)
                                     82 	.area GSINIT1 (CODE)
                                     83 	.area GSINIT2 (CODE)
                                     84 	.area GSINIT3 (CODE)
                                     85 	.area GSINIT4 (CODE)
                                     86 	.area GSINIT5 (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area CSEG    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 	.area GSFINAL (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area HOME    (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area CSEG    (CODE)
                                    106 ;------------------------------------------------------------
                                    107 ;Allocation info for local variables in function 'atof'
                                    108 ;------------------------------------------------------------
                                    109 ;sloc0                     Allocated with name '_atof_sloc0_1_0'
                                    110 ;sloc1                     Allocated with name '_atof_sloc1_1_0'
                                    111 ;sloc3                     Allocated with name '_atof_sloc3_1_0'
                                    112 ;sloc4                     Allocated with name '_atof_sloc4_1_0'
                                    113 ;------------------------------------------------------------
                                    114 ;	_atof.c:33: float atof(const char * s)
                                    115 ;	-----------------------------------------
                                    116 ;	 function atof
                                    117 ;	-----------------------------------------
      000000                        118 _atof:
                           000007   119 	ar7 = 0x07
                           000006   120 	ar6 = 0x06
                           000005   121 	ar5 = 0x05
                           000004   122 	ar4 = 0x04
                           000003   123 	ar3 = 0x03
                           000002   124 	ar2 = 0x02
                           000001   125 	ar1 = 0x01
                           000000   126 	ar0 = 0x00
      000000 AD 82            [24]  127 	mov	r5,dpl
      000002 AE 83            [24]  128 	mov	r6,dph
      000004 AF F0            [24]  129 	mov	r7,b
                                    130 ;	_atof.c:40: while (isspace(*s)) s++;
      000006                        131 00101$:
      000006 8D 82            [24]  132 	mov	dpl,r5
      000008 8E 83            [24]  133 	mov	dph,r6
      00000A 8F F0            [24]  134 	mov	b,r7
      00000C 12r00r00         [24]  135 	lcall	__gptrget
      00000F FC               [12]  136 	mov	r4,a
      000010 7B 00            [12]  137 	mov	r3,#0x00
      000012 8C 82            [24]  138 	mov	dpl,r4
      000014 8B 83            [24]  139 	mov	dph,r3
      000016 C0 07            [24]  140 	push	ar7
      000018 C0 06            [24]  141 	push	ar6
      00001A C0 05            [24]  142 	push	ar5
      00001C 12r00r00         [24]  143 	lcall	_isspace
      00001F E5 82            [12]  144 	mov	a,dpl
      000021 85 83 F0         [24]  145 	mov	b,dph
      000024 D0 05            [24]  146 	pop	ar5
      000026 D0 06            [24]  147 	pop	ar6
      000028 D0 07            [24]  148 	pop	ar7
      00002A 45 F0            [12]  149 	orl	a,b
      00002C 60 07            [24]  150 	jz	00155$
      00002E 0D               [12]  151 	inc	r5
      00002F BD 00 D4         [24]  152 	cjne	r5,#0x00,00101$
      000032 0E               [12]  153 	inc	r6
      000033 80 D1            [24]  154 	sjmp	00101$
      000035                        155 00155$:
      000035 8D*01            [24]  156 	mov	_atof_sloc1_1_0,r5
      000037 8E*02            [24]  157 	mov	(_atof_sloc1_1_0 + 1),r6
      000039 8F*03            [24]  158 	mov	(_atof_sloc1_1_0 + 2),r7
                                    159 ;	_atof.c:43: if (*s == '-')
      00003B 8D 82            [24]  160 	mov	dpl,r5
      00003D 8E 83            [24]  161 	mov	dph,r6
      00003F 8F F0            [24]  162 	mov	b,r7
      000041 12r00r00         [24]  163 	lcall	__gptrget
      000044 F5*00            [12]  164 	mov	_atof_sloc0_1_0,a
      000046 74 2D            [12]  165 	mov	a,#0x2d
      000048 B5*00 10         [24]  166 	cjne	a,_atof_sloc0_1_0,00107$
                                    167 ;	_atof.c:45: sign=1;
      00004B 78r04            [12]  168 	mov	r0,#_atof_sign_65536_60
      00004D 74 01            [12]  169 	mov	a,#0x01
      00004F F2               [24]  170 	movx	@r0,a
                                    171 ;	_atof.c:46: s++;
      000050 2D               [12]  172 	add	a,r5
      000051 F5*01            [12]  173 	mov	_atof_sloc1_1_0,a
      000053 E4               [12]  174 	clr	a
      000054 3E               [12]  175 	addc	a,r6
      000055 F5*02            [12]  176 	mov	(_atof_sloc1_1_0 + 1),a
      000057 8F*03            [24]  177 	mov	(_atof_sloc1_1_0 + 2),r7
      000059 80 14            [24]  178 	sjmp	00108$
      00005B                        179 00107$:
                                    180 ;	_atof.c:50: sign=0;
      00005B 78r04            [12]  181 	mov	r0,#_atof_sign_65536_60
      00005D E4               [12]  182 	clr	a
      00005E F2               [24]  183 	movx	@r0,a
                                    184 ;	_atof.c:51: if (*s == '+') s++;
      00005F 74 2B            [12]  185 	mov	a,#0x2b
      000061 B5*00 0B         [24]  186 	cjne	a,_atof_sloc0_1_0,00108$
      000064 74 01            [12]  187 	mov	a,#0x01
      000066 2D               [12]  188 	add	a,r5
      000067 F5*01            [12]  189 	mov	_atof_sloc1_1_0,a
      000069 E4               [12]  190 	clr	a
      00006A 3E               [12]  191 	addc	a,r6
      00006B F5*02            [12]  192 	mov	(_atof_sloc1_1_0 + 1),a
      00006D 8F*03            [24]  193 	mov	(_atof_sloc1_1_0 + 2),r7
      00006F                        194 00108$:
                                    195 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
      00006F 78r00            [12]  196 	mov	r0,#_atof_value_65536_60
      000071 E4               [12]  197 	clr	a
      000072 F2               [24]  198 	movx	@r0,a
      000073 08               [12]  199 	inc	r0
      000074 F2               [24]  200 	movx	@r0,a
      000075 08               [12]  201 	inc	r0
      000076 F2               [24]  202 	movx	@r0,a
      000077 08               [12]  203 	inc	r0
      000078 F2               [24]  204 	movx	@r0,a
      000079                        205 00126$:
      000079 85*01 82         [24]  206 	mov	dpl,_atof_sloc1_1_0
      00007C 85*02 83         [24]  207 	mov	dph,(_atof_sloc1_1_0 + 1)
      00007F 85*03 F0         [24]  208 	mov	b,(_atof_sloc1_1_0 + 2)
      000082 12r00r00         [24]  209 	lcall	__gptrget
      000085 FE               [12]  210 	mov	r6,a
                                    211 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      000086 BE 30 00         [24]  212 	cjne	r6,#0x30,00226$
      000089                        213 00226$:
      000089 92*00            [24]  214 	mov	_atof_sloc2_1_0,c
      00008B 50 03            [24]  215 	jnc	00227$
      00008D 02r01r23         [24]  216 	ljmp	00156$
      000090                        217 00227$:
      000090 EE               [12]  218 	mov	a,r6
      000091 24 C6            [12]  219 	add	a,#0xff - 0x39
      000093 92*00            [24]  220 	mov	_atof_sloc2_1_0,c
      000095 50 03            [24]  221 	jnc	00228$
      000097 02r01r23         [24]  222 	ljmp	00156$
      00009A                        223 00228$:
                                    224 ;	_atof.c:57: value=10.0*value+(*s-'0');
      00009A 78r00            [12]  225 	mov	r0,#_atof_value_65536_60
      00009C E2               [24]  226 	movx	a,@r0
      00009D C0 E0            [24]  227 	push	acc
      00009F 08               [12]  228 	inc	r0
      0000A0 E2               [24]  229 	movx	a,@r0
      0000A1 C0 E0            [24]  230 	push	acc
      0000A3 08               [12]  231 	inc	r0
      0000A4 E2               [24]  232 	movx	a,@r0
      0000A5 C0 E0            [24]  233 	push	acc
      0000A7 08               [12]  234 	inc	r0
      0000A8 E2               [24]  235 	movx	a,@r0
      0000A9 C0 E0            [24]  236 	push	acc
      0000AB 90 00 00         [24]  237 	mov	dptr,#0x0000
      0000AE 75 F0 20         [24]  238 	mov	b,#0x20
      0000B1 74 41            [12]  239 	mov	a,#0x41
      0000B3 12r00r00         [24]  240 	lcall	___fsmul
      0000B6 85 82*04         [24]  241 	mov	_atof_sloc3_1_0,dpl
      0000B9 85 83*05         [24]  242 	mov	(_atof_sloc3_1_0 + 1),dph
      0000BC 85 F0*06         [24]  243 	mov	(_atof_sloc3_1_0 + 2),b
      0000BF F5*07            [12]  244 	mov	(_atof_sloc3_1_0 + 3),a
      0000C1 E5 81            [12]  245 	mov	a,sp
      0000C3 24 FC            [12]  246 	add	a,#0xfc
      0000C5 F5 81            [12]  247 	mov	sp,a
      0000C7 85*01 82         [24]  248 	mov	dpl,_atof_sloc1_1_0
      0000CA 85*02 83         [24]  249 	mov	dph,(_atof_sloc1_1_0 + 1)
      0000CD 85*03 F0         [24]  250 	mov	b,(_atof_sloc1_1_0 + 2)
      0000D0 12r00r00         [24]  251 	lcall	__gptrget
      0000D3 FB               [12]  252 	mov	r3,a
      0000D4 A3               [24]  253 	inc	dptr
      0000D5 85 82*01         [24]  254 	mov	_atof_sloc1_1_0,dpl
      0000D8 85 83*02         [24]  255 	mov	(_atof_sloc1_1_0 + 1),dph
      0000DB 7A 00            [12]  256 	mov	r2,#0x00
      0000DD EB               [12]  257 	mov	a,r3
      0000DE 24 D0            [12]  258 	add	a,#0xd0
      0000E0 F5 82            [12]  259 	mov	dpl,a
      0000E2 EA               [12]  260 	mov	a,r2
      0000E3 34 FF            [12]  261 	addc	a,#0xff
      0000E5 F5 83            [12]  262 	mov	dph,a
      0000E7 12r00r00         [24]  263 	lcall	___sint2fs
      0000EA AA 82            [24]  264 	mov	r2,dpl
      0000EC AB 83            [24]  265 	mov	r3,dph
      0000EE AE F0            [24]  266 	mov	r6,b
      0000F0 FF               [12]  267 	mov	r7,a
      0000F1 C0 02            [24]  268 	push	ar2
      0000F3 C0 03            [24]  269 	push	ar3
      0000F5 C0 06            [24]  270 	push	ar6
      0000F7 C0 07            [24]  271 	push	ar7
      0000F9 85*04 82         [24]  272 	mov	dpl,_atof_sloc3_1_0
      0000FC 85*05 83         [24]  273 	mov	dph,(_atof_sloc3_1_0 + 1)
      0000FF 85*06 F0         [24]  274 	mov	b,(_atof_sloc3_1_0 + 2)
      000102 E5*07            [12]  275 	mov	a,(_atof_sloc3_1_0 + 3)
      000104 12r00r00         [24]  276 	lcall	___fsadd
      000107 78r00            [12]  277 	mov	r0,#_atof_value_65536_60
      000109 C0 E0            [24]  278 	push	acc
      00010B E5 82            [12]  279 	mov	a,dpl
      00010D F2               [24]  280 	movx	@r0,a
      00010E E5 83            [12]  281 	mov	a,dph
      000110 08               [12]  282 	inc	r0
      000111 F2               [24]  283 	movx	@r0,a
      000112 E5 F0            [12]  284 	mov	a,b
      000114 08               [12]  285 	inc	r0
      000115 F2               [24]  286 	movx	@r0,a
      000116 D0 E0            [24]  287 	pop	acc
      000118 08               [12]  288 	inc	r0
      000119 F2               [24]  289 	movx	@r0,a
      00011A E5 81            [12]  290 	mov	a,sp
      00011C 24 FC            [12]  291 	add	a,#0xfc
      00011E F5 81            [12]  292 	mov	sp,a
                                    293 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
      000120 02r00r79         [24]  294 	ljmp	00126$
      000123                        295 00156$:
      000123 AD*01            [24]  296 	mov	r5,_atof_sloc1_1_0
      000125 AE*02            [24]  297 	mov	r6,(_atof_sloc1_1_0 + 1)
      000127 AF*03            [24]  298 	mov	r7,(_atof_sloc1_1_0 + 2)
                                    299 ;	_atof.c:61: if (*s == '.')
      000129 85*01 82         [24]  300 	mov	dpl,_atof_sloc1_1_0
      00012C 85*02 83         [24]  301 	mov	dph,(_atof_sloc1_1_0 + 1)
      00012F 85*03 F0         [24]  302 	mov	b,(_atof_sloc1_1_0 + 2)
      000132 12r00r00         [24]  303 	lcall	__gptrget
      000135 FC               [12]  304 	mov	r4,a
      000136 BC 2E 02         [24]  305 	cjne	r4,#0x2e,00229$
      000139 80 03            [24]  306 	sjmp	00230$
      00013B                        307 00229$:
      00013B 02r02r36         [24]  308 	ljmp	00112$
      00013E                        309 00230$:
                                    310 ;	_atof.c:63: s++;
      00013E 74 01            [12]  311 	mov	a,#0x01
      000140 25*01            [12]  312 	add	a,_atof_sloc1_1_0
      000142 F5*04            [12]  313 	mov	_atof_sloc3_1_0,a
      000144 E4               [12]  314 	clr	a
      000145 35*02            [12]  315 	addc	a,(_atof_sloc1_1_0 + 1)
      000147 F5*05            [12]  316 	mov	(_atof_sloc3_1_0 + 1),a
      000149 85*03*06         [24]  317 	mov	(_atof_sloc3_1_0 + 2),(_atof_sloc1_1_0 + 2)
                                    318 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
      00014C 7F CD            [12]  319 	mov	r7,#0xcd
      00014E 7E CC            [12]  320 	mov	r6,#0xcc
      000150 7D CC            [12]  321 	mov	r5,#0xcc
      000152 7A 3D            [12]  322 	mov	r2,#0x3d
      000154                        323 00129$:
      000154 85*04 82         [24]  324 	mov	dpl,_atof_sloc3_1_0
      000157 85*05 83         [24]  325 	mov	dph,(_atof_sloc3_1_0 + 1)
      00015A 85*06 F0         [24]  326 	mov	b,(_atof_sloc3_1_0 + 2)
      00015D 12r00r00         [24]  327 	lcall	__gptrget
      000160 FC               [12]  328 	mov	r4,a
                                    329 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      000161 BC 30 00         [24]  330 	cjne	r4,#0x30,00231$
      000164                        331 00231$:
      000164 92*00            [24]  332 	mov	_atof_sloc2_1_0,c
      000166 50 03            [24]  333 	jnc	00232$
      000168 02r02r30         [24]  334 	ljmp	00157$
      00016B                        335 00232$:
      00016B EC               [12]  336 	mov	a,r4
      00016C 24 C6            [12]  337 	add	a,#0xff - 0x39
      00016E 92*00            [24]  338 	mov	_atof_sloc2_1_0,c
      000170 50 03            [24]  339 	jnc	00233$
      000172 02r02r30         [24]  340 	ljmp	00157$
      000175                        341 00233$:
                                    342 ;	_atof.c:66: value+=(*s-'0')*fraction;
      000175 85*04 82         [24]  343 	mov	dpl,_atof_sloc3_1_0
      000178 85*05 83         [24]  344 	mov	dph,(_atof_sloc3_1_0 + 1)
      00017B 85*06 F0         [24]  345 	mov	b,(_atof_sloc3_1_0 + 2)
      00017E 12r00r00         [24]  346 	lcall	__gptrget
      000181 FC               [12]  347 	mov	r4,a
      000182 A3               [24]  348 	inc	dptr
      000183 85 82*04         [24]  349 	mov	_atof_sloc3_1_0,dpl
      000186 85 83*05         [24]  350 	mov	(_atof_sloc3_1_0 + 1),dph
      000189 7B 00            [12]  351 	mov	r3,#0x00
      00018B EC               [12]  352 	mov	a,r4
      00018C 24 D0            [12]  353 	add	a,#0xd0
      00018E F5 82            [12]  354 	mov	dpl,a
      000190 EB               [12]  355 	mov	a,r3
      000191 34 FF            [12]  356 	addc	a,#0xff
      000193 F5 83            [12]  357 	mov	dph,a
      000195 C0 07            [24]  358 	push	ar7
      000197 C0 06            [24]  359 	push	ar6
      000199 C0 05            [24]  360 	push	ar5
      00019B C0 02            [24]  361 	push	ar2
      00019D 12r00r00         [24]  362 	lcall	___sint2fs
      0001A0 85 82*08         [24]  363 	mov	_atof_sloc4_1_0,dpl
      0001A3 85 83*09         [24]  364 	mov	(_atof_sloc4_1_0 + 1),dph
      0001A6 85 F0*0A         [24]  365 	mov	(_atof_sloc4_1_0 + 2),b
      0001A9 F5*0B            [12]  366 	mov	(_atof_sloc4_1_0 + 3),a
      0001AB D0 02            [24]  367 	pop	ar2
      0001AD D0 05            [24]  368 	pop	ar5
      0001AF D0 06            [24]  369 	pop	ar6
      0001B1 D0 07            [24]  370 	pop	ar7
      0001B3 C0 07            [24]  371 	push	ar7
      0001B5 C0 06            [24]  372 	push	ar6
      0001B7 C0 05            [24]  373 	push	ar5
      0001B9 C0 02            [24]  374 	push	ar2
      0001BB C0 07            [24]  375 	push	ar7
      0001BD C0 06            [24]  376 	push	ar6
      0001BF C0 05            [24]  377 	push	ar5
      0001C1 C0 02            [24]  378 	push	ar2
      0001C3 85*08 82         [24]  379 	mov	dpl,_atof_sloc4_1_0
      0001C6 85*09 83         [24]  380 	mov	dph,(_atof_sloc4_1_0 + 1)
      0001C9 85*0A F0         [24]  381 	mov	b,(_atof_sloc4_1_0 + 2)
      0001CC E5*0B            [12]  382 	mov	a,(_atof_sloc4_1_0 + 3)
      0001CE 12r00r00         [24]  383 	lcall	___fsmul
      0001D1 85 82*08         [24]  384 	mov	_atof_sloc4_1_0,dpl
      0001D4 85 83*09         [24]  385 	mov	(_atof_sloc4_1_0 + 1),dph
      0001D7 85 F0*0A         [24]  386 	mov	(_atof_sloc4_1_0 + 2),b
      0001DA F5*0B            [12]  387 	mov	(_atof_sloc4_1_0 + 3),a
      0001DC E5 81            [12]  388 	mov	a,sp
      0001DE 24 FC            [12]  389 	add	a,#0xfc
      0001E0 F5 81            [12]  390 	mov	sp,a
      0001E2 C0*08            [24]  391 	push	_atof_sloc4_1_0
      0001E4 C0*09            [24]  392 	push	(_atof_sloc4_1_0 + 1)
      0001E6 C0*0A            [24]  393 	push	(_atof_sloc4_1_0 + 2)
      0001E8 C0*0B            [24]  394 	push	(_atof_sloc4_1_0 + 3)
      0001EA 78r00            [12]  395 	mov	r0,#_atof_value_65536_60
      0001EC E2               [24]  396 	movx	a,@r0
      0001ED F5 82            [12]  397 	mov	dpl,a
      0001EF 08               [12]  398 	inc	r0
      0001F0 E2               [24]  399 	movx	a,@r0
      0001F1 F5 83            [12]  400 	mov	dph,a
      0001F3 08               [12]  401 	inc	r0
      0001F4 E2               [24]  402 	movx	a,@r0
      0001F5 F5 F0            [12]  403 	mov	b,a
      0001F7 08               [12]  404 	inc	r0
      0001F8 E2               [24]  405 	movx	a,@r0
      0001F9 12r00r00         [24]  406 	lcall	___fsadd
      0001FC 78r00            [12]  407 	mov	r0,#_atof_value_65536_60
      0001FE C0 E0            [24]  408 	push	acc
      000200 E5 82            [12]  409 	mov	a,dpl
      000202 F2               [24]  410 	movx	@r0,a
      000203 E5 83            [12]  411 	mov	a,dph
      000205 08               [12]  412 	inc	r0
      000206 F2               [24]  413 	movx	@r0,a
      000207 E5 F0            [12]  414 	mov	a,b
      000209 08               [12]  415 	inc	r0
      00020A F2               [24]  416 	movx	@r0,a
      00020B D0 E0            [24]  417 	pop	acc
      00020D 08               [12]  418 	inc	r0
      00020E F2               [24]  419 	movx	@r0,a
      00020F E5 81            [12]  420 	mov	a,sp
      000211 24 FC            [12]  421 	add	a,#0xfc
      000213 F5 81            [12]  422 	mov	sp,a
                                    423 ;	_atof.c:67: fraction*=0.1;
      000215 90 CC CD         [24]  424 	mov	dptr,#0xcccd
      000218 75 F0 CC         [24]  425 	mov	b,#0xcc
      00021B 74 3D            [12]  426 	mov	a,#0x3d
      00021D 12r00r00         [24]  427 	lcall	___fsmul
      000220 AF 82            [24]  428 	mov	r7,dpl
      000222 AE 83            [24]  429 	mov	r6,dph
      000224 AD F0            [24]  430 	mov	r5,b
      000226 FA               [12]  431 	mov	r2,a
      000227 E5 81            [12]  432 	mov	a,sp
      000229 24 FC            [12]  433 	add	a,#0xfc
      00022B F5 81            [12]  434 	mov	sp,a
                                    435 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
      00022D 02r01r54         [24]  436 	ljmp	00129$
      000230                        437 00157$:
      000230 AD*04            [24]  438 	mov	r5,_atof_sloc3_1_0
      000232 AE*05            [24]  439 	mov	r6,(_atof_sloc3_1_0 + 1)
      000234 AF*06            [24]  440 	mov	r7,(_atof_sloc3_1_0 + 2)
      000236                        441 00112$:
                                    442 ;	_atof.c:72: if (toupper(*s)=='E')
      000236 8D 82            [24]  443 	mov	dpl,r5
      000238 8E 83            [24]  444 	mov	dph,r6
      00023A 8F F0            [24]  445 	mov	b,r7
      00023C 12r00r00         [24]  446 	lcall	__gptrget
      00023F FC               [12]  447 	mov	r4,a
      000240 7B 00            [12]  448 	mov	r3,#0x00
      000242 8C 82            [24]  449 	mov	dpl,r4
      000244 8B 83            [24]  450 	mov	dph,r3
      000246 C0 07            [24]  451 	push	ar7
      000248 C0 06            [24]  452 	push	ar6
      00024A C0 05            [24]  453 	push	ar5
      00024C 12r00r00         [24]  454 	lcall	_toupper
      00024F AB 82            [24]  455 	mov	r3,dpl
      000251 AC 83            [24]  456 	mov	r4,dph
      000253 D0 05            [24]  457 	pop	ar5
      000255 D0 06            [24]  458 	pop	ar6
      000257 D0 07            [24]  459 	pop	ar7
      000259 BB 45 05         [24]  460 	cjne	r3,#0x45,00234$
      00025C BC 00 02         [24]  461 	cjne	r4,#0x00,00234$
      00025F 80 03            [24]  462 	sjmp	00235$
      000261                        463 00234$:
      000261 02r02rF9         [24]  464 	ljmp	00120$
      000264                        465 00235$:
                                    466 ;	_atof.c:74: s++;
      000264 0D               [12]  467 	inc	r5
      000265 BD 00 01         [24]  468 	cjne	r5,#0x00,00236$
      000268 0E               [12]  469 	inc	r6
      000269                        470 00236$:
                                    471 ;	_atof.c:75: iexp=(signed char)atoi(s);
      000269 8D 82            [24]  472 	mov	dpl,r5
      00026B 8E 83            [24]  473 	mov	dph,r6
      00026D 8F F0            [24]  474 	mov	b,r7
      00026F 12r00r00         [24]  475 	lcall	_atoi
      000272 AE 82            [24]  476 	mov	r6,dpl
      000274 AF 83            [24]  477 	mov	r7,dph
                                    478 ;	_atof.c:77: while(iexp!=0)
      000276                        479 00116$:
      000276 EE               [12]  480 	mov	a,r6
      000277 70 03            [24]  481 	jnz	00237$
      000279 02r02rF9         [24]  482 	ljmp	00120$
      00027C                        483 00237$:
                                    484 ;	_atof.c:79: if(iexp<0)
      00027C EE               [12]  485 	mov	a,r6
      00027D 30 E7 3C         [24]  486 	jnb	acc.7,00114$
                                    487 ;	_atof.c:81: value*=0.1;
      000280 C0 06            [24]  488 	push	ar6
      000282 78r00            [12]  489 	mov	r0,#_atof_value_65536_60
      000284 E2               [24]  490 	movx	a,@r0
      000285 C0 E0            [24]  491 	push	acc
      000287 08               [12]  492 	inc	r0
      000288 E2               [24]  493 	movx	a,@r0
      000289 C0 E0            [24]  494 	push	acc
      00028B 08               [12]  495 	inc	r0
      00028C E2               [24]  496 	movx	a,@r0
      00028D C0 E0            [24]  497 	push	acc
      00028F 08               [12]  498 	inc	r0
      000290 E2               [24]  499 	movx	a,@r0
      000291 C0 E0            [24]  500 	push	acc
      000293 90 CC CD         [24]  501 	mov	dptr,#0xcccd
      000296 75 F0 CC         [24]  502 	mov	b,#0xcc
      000299 74 3D            [12]  503 	mov	a,#0x3d
      00029B 12r00r00         [24]  504 	lcall	___fsmul
      00029E 78r00            [12]  505 	mov	r0,#_atof_value_65536_60
      0002A0 C0 E0            [24]  506 	push	acc
      0002A2 E5 82            [12]  507 	mov	a,dpl
      0002A4 F2               [24]  508 	movx	@r0,a
      0002A5 E5 83            [12]  509 	mov	a,dph
      0002A7 08               [12]  510 	inc	r0
      0002A8 F2               [24]  511 	movx	@r0,a
      0002A9 E5 F0            [12]  512 	mov	a,b
      0002AB 08               [12]  513 	inc	r0
      0002AC F2               [24]  514 	movx	@r0,a
      0002AD D0 E0            [24]  515 	pop	acc
      0002AF 08               [12]  516 	inc	r0
      0002B0 F2               [24]  517 	movx	@r0,a
      0002B1 E5 81            [12]  518 	mov	a,sp
      0002B3 24 FC            [12]  519 	add	a,#0xfc
      0002B5 F5 81            [12]  520 	mov	sp,a
      0002B7 D0 06            [24]  521 	pop	ar6
                                    522 ;	_atof.c:82: iexp++;
      0002B9 0E               [12]  523 	inc	r6
      0002BA 80 BA            [24]  524 	sjmp	00116$
      0002BC                        525 00114$:
                                    526 ;	_atof.c:86: value*=10.0;
      0002BC C0 06            [24]  527 	push	ar6
      0002BE 78r00            [12]  528 	mov	r0,#_atof_value_65536_60
      0002C0 E2               [24]  529 	movx	a,@r0
      0002C1 C0 E0            [24]  530 	push	acc
      0002C3 08               [12]  531 	inc	r0
      0002C4 E2               [24]  532 	movx	a,@r0
      0002C5 C0 E0            [24]  533 	push	acc
      0002C7 08               [12]  534 	inc	r0
      0002C8 E2               [24]  535 	movx	a,@r0
      0002C9 C0 E0            [24]  536 	push	acc
      0002CB 08               [12]  537 	inc	r0
      0002CC E2               [24]  538 	movx	a,@r0
      0002CD C0 E0            [24]  539 	push	acc
      0002CF 90 00 00         [24]  540 	mov	dptr,#0x0000
      0002D2 75 F0 20         [24]  541 	mov	b,#0x20
      0002D5 74 41            [12]  542 	mov	a,#0x41
      0002D7 12r00r00         [24]  543 	lcall	___fsmul
      0002DA 78r00            [12]  544 	mov	r0,#_atof_value_65536_60
      0002DC C0 E0            [24]  545 	push	acc
      0002DE E5 82            [12]  546 	mov	a,dpl
      0002E0 F2               [24]  547 	movx	@r0,a
      0002E1 E5 83            [12]  548 	mov	a,dph
      0002E3 08               [12]  549 	inc	r0
      0002E4 F2               [24]  550 	movx	@r0,a
      0002E5 E5 F0            [12]  551 	mov	a,b
      0002E7 08               [12]  552 	inc	r0
      0002E8 F2               [24]  553 	movx	@r0,a
      0002E9 D0 E0            [24]  554 	pop	acc
      0002EB 08               [12]  555 	inc	r0
      0002EC F2               [24]  556 	movx	@r0,a
      0002ED E5 81            [12]  557 	mov	a,sp
      0002EF 24 FC            [12]  558 	add	a,#0xfc
      0002F1 F5 81            [12]  559 	mov	sp,a
      0002F3 D0 06            [24]  560 	pop	ar6
                                    561 ;	_atof.c:87: iexp--;
      0002F5 1E               [12]  562 	dec	r6
      0002F6 02r02r76         [24]  563 	ljmp	00116$
      0002F9                        564 00120$:
                                    565 ;	_atof.c:93: if(sign) value*=-1.0;
      0002F9 78r04            [12]  566 	mov	r0,#_atof_sign_65536_60
      0002FB E2               [24]  567 	movx	a,@r0
      0002FC 60 0F            [24]  568 	jz	00122$
      0002FE 78r00            [12]  569 	mov	r0,#_atof_value_65536_60
      000300 E2               [24]  570 	movx	a,@r0
      000301 F2               [24]  571 	movx	@r0,a
      000302 08               [12]  572 	inc	r0
      000303 E2               [24]  573 	movx	a,@r0
      000304 F2               [24]  574 	movx	@r0,a
      000305 08               [12]  575 	inc	r0
      000306 E2               [24]  576 	movx	a,@r0
      000307 F2               [24]  577 	movx	@r0,a
      000308 08               [12]  578 	inc	r0
      000309 E2               [24]  579 	movx	a,@r0
      00030A B2 E7            [12]  580 	cpl	acc.7
      00030C F2               [24]  581 	movx	@r0,a
      00030D                        582 00122$:
                                    583 ;	_atof.c:94: return (value);
      00030D 78r00            [12]  584 	mov	r0,#_atof_value_65536_60
      00030F E2               [24]  585 	movx	a,@r0
      000310 F5 82            [12]  586 	mov	dpl,a
      000312 08               [12]  587 	inc	r0
      000313 E2               [24]  588 	movx	a,@r0
      000314 F5 83            [12]  589 	mov	dph,a
      000316 08               [12]  590 	inc	r0
      000317 E2               [24]  591 	movx	a,@r0
      000318 F5 F0            [12]  592 	mov	b,a
      00031A 08               [12]  593 	inc	r0
      00031B E2               [24]  594 	movx	a,@r0
                                    595 ;	_atof.c:95: }
      00031C 22               [24]  596 	ret
                                    597 	.area CSEG    (CODE)
                                    598 	.area CONST   (CODE)
                                    599 	.area XINIT   (CODE)
                                    600 	.area CABS    (ABS,CODE)
