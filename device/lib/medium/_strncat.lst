                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncat
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncat_PARM_3
                                     12 	.globl _strncat_PARM_2
                                     13 	.globl _strncat
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _strncat_sloc0_1_0:
      000000                         38 	.ds 3
      000003                         39 _strncat_sloc1_1_0:
      000003                         40 	.ds 2
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
      000000                         58 _strncat_PARM_2:
      000000                         59 	.ds 3
      000003                         60 _strncat_PARM_3:
      000003                         61 	.ds 2
      000005                         62 _strncat_front_65536_26:
      000005                         63 	.ds 3
      000008                         64 _strncat_start_65536_27:
      000008                         65 	.ds 3
                                     66 ;--------------------------------------------------------
                                     67 ; uninitialized external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XSEG    (XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; absolute external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XABS    (ABS,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; initialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XISEG   (XDATA)
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT0 (CODE)
                                     80 	.area GSINIT1 (CODE)
                                     81 	.area GSINIT2 (CODE)
                                     82 	.area GSINIT3 (CODE)
                                     83 	.area GSINIT4 (CODE)
                                     84 	.area GSINIT5 (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area CSEG    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; global & static initialisations
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 	.area GSFINAL (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; Home
                                     97 ;--------------------------------------------------------
                                     98 	.area HOME    (CODE)
                                     99 	.area HOME    (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; code
                                    102 ;--------------------------------------------------------
                                    103 	.area CSEG    (CODE)
                                    104 ;------------------------------------------------------------
                                    105 ;Allocation info for local variables in function 'strncat'
                                    106 ;------------------------------------------------------------
                                    107 ;sloc0                     Allocated with name '_strncat_sloc0_1_0'
                                    108 ;sloc1                     Allocated with name '_strncat_sloc1_1_0'
                                    109 ;------------------------------------------------------------
                                    110 ;	_strncat.c:31: char * strncat ( char * front, const char * back, size_t count )
                                    111 ;	-----------------------------------------
                                    112 ;	 function strncat
                                    113 ;	-----------------------------------------
      000000                        114 _strncat:
                           000007   115 	ar7 = 0x07
                           000006   116 	ar6 = 0x06
                           000005   117 	ar5 = 0x05
                           000004   118 	ar4 = 0x04
                           000003   119 	ar3 = 0x03
                           000002   120 	ar2 = 0x02
                           000001   121 	ar1 = 0x01
                           000000   122 	ar0 = 0x00
      000000 AD 82            [24]  123 	mov	r5,dpl
      000002 AE 83            [24]  124 	mov	r6,dph
      000004 AF F0            [24]  125 	mov	r7,b
                                    126 ;	_strncat.c:33: char *start = front;
      000006 78r08            [12]  127 	mov	r0,#_strncat_start_65536_27
      000008 ED               [12]  128 	mov	a,r5
      000009 F2               [24]  129 	movx	@r0,a
      00000A EE               [12]  130 	mov	a,r6
      00000B 08               [12]  131 	inc	r0
      00000C F2               [24]  132 	movx	@r0,a
      00000D EF               [12]  133 	mov	a,r7
      00000E 08               [12]  134 	inc	r0
      00000F F2               [24]  135 	movx	@r0,a
                                    136 ;	_strncat.c:35: while (*front++);
      000010                        137 00101$:
      000010 8D 82            [24]  138 	mov	dpl,r5
      000012 8E 83            [24]  139 	mov	dph,r6
      000014 8F F0            [24]  140 	mov	b,r7
      000016 12r00r00         [24]  141 	lcall	__gptrget
      000019 FC               [12]  142 	mov	r4,a
      00001A A3               [24]  143 	inc	dptr
      00001B AD 82            [24]  144 	mov	r5,dpl
      00001D AE 83            [24]  145 	mov	r6,dph
      00001F EC               [12]  146 	mov	a,r4
      000020 70 EE            [24]  147 	jnz	00101$
                                    148 ;	_strncat.c:37: front--;
      000022 78r05            [12]  149 	mov	r0,#_strncat_front_65536_26
      000024 ED               [12]  150 	mov	a,r5
      000025 24 FF            [12]  151 	add	a,#0xff
      000027 F2               [24]  152 	movx	@r0,a
      000028 EE               [12]  153 	mov	a,r6
      000029 34 FF            [12]  154 	addc	a,#0xff
      00002B 08               [12]  155 	inc	r0
      00002C F2               [24]  156 	movx	@r0,a
      00002D EF               [12]  157 	mov	a,r7
      00002E 08               [12]  158 	inc	r0
      00002F F2               [24]  159 	movx	@r0,a
                                    160 ;	_strncat.c:39: while (count--)
      000030 78r00            [12]  161 	mov	r0,#_strncat_PARM_2
      000032 E2               [24]  162 	movx	a,@r0
      000033 FA               [12]  163 	mov	r2,a
      000034 08               [12]  164 	inc	r0
      000035 E2               [24]  165 	movx	a,@r0
      000036 FB               [12]  166 	mov	r3,a
      000037 08               [12]  167 	inc	r0
      000038 E2               [24]  168 	movx	a,@r0
      000039 FC               [12]  169 	mov	r4,a
      00003A 78r05            [12]  170 	mov	r0,#_strncat_front_65536_26
      00003C E2               [24]  171 	movx	a,@r0
      00003D F5*00            [12]  172 	mov	_strncat_sloc0_1_0,a
      00003F 08               [12]  173 	inc	r0
      000040 E2               [24]  174 	movx	a,@r0
      000041 F5*01            [12]  175 	mov	(_strncat_sloc0_1_0 + 1),a
      000043 08               [12]  176 	inc	r0
      000044 E2               [24]  177 	movx	a,@r0
      000045 F5*02            [12]  178 	mov	(_strncat_sloc0_1_0 + 2),a
      000047 78r03            [12]  179 	mov	r0,#_strncat_PARM_3
      000049 E2               [24]  180 	movx	a,@r0
      00004A F5*03            [12]  181 	mov	_strncat_sloc1_1_0,a
      00004C 08               [12]  182 	inc	r0
      00004D E2               [24]  183 	movx	a,@r0
      00004E F5*04            [12]  184 	mov	(_strncat_sloc1_1_0 + 1),a
      000050                        185 00106$:
      000050 AE*03            [24]  186 	mov	r6,_strncat_sloc1_1_0
      000052 AF*04            [24]  187 	mov	r7,(_strncat_sloc1_1_0 + 1)
      000054 15*03            [12]  188 	dec	_strncat_sloc1_1_0
      000056 74 FF            [12]  189 	mov	a,#0xff
      000058 B5*03 02         [24]  190 	cjne	a,_strncat_sloc1_1_0,00138$
      00005B 15*04            [12]  191 	dec	(_strncat_sloc1_1_0 + 1)
      00005D                        192 00138$:
      00005D EE               [12]  193 	mov	a,r6
      00005E 4F               [12]  194 	orl	a,r7
      00005F 60 41            [24]  195 	jz	00108$
                                    196 ;	_strncat.c:40: if (!(*front++ = *back++))
      000061 8A 82            [24]  197 	mov	dpl,r2
      000063 8B 83            [24]  198 	mov	dph,r3
      000065 8C F0            [24]  199 	mov	b,r4
      000067 12r00r00         [24]  200 	lcall	__gptrget
      00006A FF               [12]  201 	mov	r7,a
      00006B A3               [24]  202 	inc	dptr
      00006C AA 82            [24]  203 	mov	r2,dpl
      00006E AB 83            [24]  204 	mov	r3,dph
      000070 85*00 82         [24]  205 	mov	dpl,_strncat_sloc0_1_0
      000073 85*01 83         [24]  206 	mov	dph,(_strncat_sloc0_1_0 + 1)
      000076 85*02 F0         [24]  207 	mov	b,(_strncat_sloc0_1_0 + 2)
      000079 EF               [12]  208 	mov	a,r7
      00007A 12r00r00         [24]  209 	lcall	__gptrput
      00007D A3               [24]  210 	inc	dptr
      00007E 85 82*00         [24]  211 	mov	_strncat_sloc0_1_0,dpl
      000081 85 83*01         [24]  212 	mov	(_strncat_sloc0_1_0 + 1),dph
      000084 78r05            [12]  213 	mov	r0,#_strncat_front_65536_26
      000086 E5*00            [12]  214 	mov	a,_strncat_sloc0_1_0
      000088 F2               [24]  215 	movx	@r0,a
      000089 E5*01            [12]  216 	mov	a,(_strncat_sloc0_1_0 + 1)
      00008B 08               [12]  217 	inc	r0
      00008C F2               [24]  218 	movx	@r0,a
      00008D E5*02            [12]  219 	mov	a,(_strncat_sloc0_1_0 + 2)
      00008F 08               [12]  220 	inc	r0
      000090 F2               [24]  221 	movx	@r0,a
      000091 EF               [12]  222 	mov	a,r7
      000092 70 BC            [24]  223 	jnz	00106$
                                    224 ;	_strncat.c:41: return(start);
      000094 78r08            [12]  225 	mov	r0,#_strncat_start_65536_27
      000096 E2               [24]  226 	movx	a,@r0
      000097 F5 82            [12]  227 	mov	dpl,a
      000099 08               [12]  228 	inc	r0
      00009A E2               [24]  229 	movx	a,@r0
      00009B F5 83            [12]  230 	mov	dph,a
      00009D 08               [12]  231 	inc	r0
      00009E E2               [24]  232 	movx	a,@r0
      00009F F5 F0            [12]  233 	mov	b,a
      0000A1 22               [24]  234 	ret
      0000A2                        235 00108$:
                                    236 ;	_strncat.c:43: *front = '\0';
      0000A2 78r05            [12]  237 	mov	r0,#_strncat_front_65536_26
      0000A4 E2               [24]  238 	movx	a,@r0
      0000A5 F5 82            [12]  239 	mov	dpl,a
      0000A7 08               [12]  240 	inc	r0
      0000A8 E2               [24]  241 	movx	a,@r0
      0000A9 F5 83            [12]  242 	mov	dph,a
      0000AB 08               [12]  243 	inc	r0
      0000AC E2               [24]  244 	movx	a,@r0
      0000AD F5 F0            [12]  245 	mov	b,a
      0000AF E4               [12]  246 	clr	a
      0000B0 12r00r00         [24]  247 	lcall	__gptrput
                                    248 ;	_strncat.c:44: return(start);
      0000B3 78r08            [12]  249 	mov	r0,#_strncat_start_65536_27
      0000B5 E2               [24]  250 	movx	a,@r0
      0000B6 F5 82            [12]  251 	mov	dpl,a
      0000B8 08               [12]  252 	inc	r0
      0000B9 E2               [24]  253 	movx	a,@r0
      0000BA F5 83            [12]  254 	mov	dph,a
      0000BC 08               [12]  255 	inc	r0
      0000BD E2               [24]  256 	movx	a,@r0
      0000BE F5 F0            [12]  257 	mov	b,a
                                    258 ;	_strncat.c:45: }
      0000C0 22               [24]  259 	ret
                                    260 	.area CSEG    (CODE)
                                    261 	.area CONST   (CODE)
                                    262 	.area XINIT   (CODE)
                                    263 	.area CABS    (ABS,CODE)
