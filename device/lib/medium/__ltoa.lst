                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __ltoa
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___ltoa_PARM_3
                                     12 	.globl ___ltoa_PARM_2
                                     13 	.globl ___ultoa_PARM_3
                                     14 	.globl ___ultoa_PARM_2
                                     15 	.globl ___ultoa
                                     16 	.globl ___ltoa
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; special function bits
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG    (ABS,DATA)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; overlayable register banks
                                     29 ;--------------------------------------------------------
                                     30 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         31 	.ds 8
                                     32 ;--------------------------------------------------------
                                     33 ; internal ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DSEG    (DATA)
      000000                         36 ___ultoa_sloc0_1_0:
      000000                         37 	.ds 4
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in internal ram
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
      000000                         58 ___ultoa_PARM_2:
      000000                         59 	.ds 3
      000003                         60 ___ultoa_PARM_3:
      000003                         61 	.ds 1
      000004                         62 ___ultoa_value_65536_39:
      000004                         63 	.ds 4
      000008                         64 ___ultoa_buffer_65536_40:
      000008                         65 	.ds 32
      000028                         66 ___ltoa_PARM_2:
      000028                         67 	.ds 3
      00002B                         68 ___ltoa_PARM_3:
      00002B                         69 	.ds 1
      00002C                         70 ___ltoa_value_65536_43:
      00002C                         71 	.ds 4
                                     72 ;--------------------------------------------------------
                                     73 ; uninitialized external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XSEG    (XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; absolute external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XABS    (ABS,XDATA)
                                     80 ;--------------------------------------------------------
                                     81 ; initialized external ram data
                                     82 ;--------------------------------------------------------
                                     83 	.area XISEG   (XDATA)
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT0 (CODE)
                                     86 	.area GSINIT1 (CODE)
                                     87 	.area GSINIT2 (CODE)
                                     88 	.area GSINIT3 (CODE)
                                     89 	.area GSINIT4 (CODE)
                                     90 	.area GSINIT5 (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area CSEG    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; global & static initialisations
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 	.area GSFINAL (CODE)
                                    100 	.area GSINIT  (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; Home
                                    103 ;--------------------------------------------------------
                                    104 	.area HOME    (CODE)
                                    105 	.area HOME    (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; code
                                    108 ;--------------------------------------------------------
                                    109 	.area CSEG    (CODE)
                                    110 ;------------------------------------------------------------
                                    111 ;Allocation info for local variables in function '__ultoa'
                                    112 ;------------------------------------------------------------
                                    113 ;sloc0                     Allocated with name '___ultoa_sloc0_1_0'
                                    114 ;------------------------------------------------------------
                                    115 ;	__ltoa.c:58: void __ultoa(unsigned long value, char* string, unsigned char radix)
                                    116 ;	-----------------------------------------
                                    117 ;	 function __ultoa
                                    118 ;	-----------------------------------------
      000000                        119 ___ultoa:
                           000007   120 	ar7 = 0x07
                           000006   121 	ar6 = 0x06
                           000005   122 	ar5 = 0x05
                           000004   123 	ar4 = 0x04
                           000003   124 	ar3 = 0x03
                           000002   125 	ar2 = 0x02
                           000001   126 	ar1 = 0x01
                           000000   127 	ar0 = 0x00
      000000 AF 82            [24]  128 	mov	r7,dpl
      000002 AE 83            [24]  129 	mov	r6,dph
      000004 AD F0            [24]  130 	mov	r5,b
      000006 FC               [12]  131 	mov	r4,a
      000007 78r04            [12]  132 	mov	r0,#___ultoa_value_65536_39
      000009 EF               [12]  133 	mov	a,r7
      00000A F2               [24]  134 	movx	@r0,a
      00000B EE               [12]  135 	mov	a,r6
      00000C 08               [12]  136 	inc	r0
      00000D F2               [24]  137 	movx	@r0,a
      00000E ED               [12]  138 	mov	a,r5
      00000F 08               [12]  139 	inc	r0
      000010 F2               [24]  140 	movx	@r0,a
      000011 EC               [12]  141 	mov	a,r4
      000012 08               [12]  142 	inc	r0
      000013 F2               [24]  143 	movx	@r0,a
                                    144 ;	__ltoa.c:63: do {
      000014 7B 20            [12]  145 	mov	r3,#0x20
      000016                        146 00103$:
                                    147 ;	__ltoa.c:64: unsigned char c = '0' + (value % radix);
      000016 78r03            [12]  148 	mov	r0,#___ultoa_PARM_3
      000018 E2               [24]  149 	movx	a,@r0
      000019 F5*00            [12]  150 	mov	___ultoa_sloc0_1_0,a
      00001B 75*01 00         [24]  151 	mov	(___ultoa_sloc0_1_0 + 1),#0x00
      00001E 75*02 00         [24]  152 	mov	(___ultoa_sloc0_1_0 + 2),#0x00
      000021 75*03 00         [24]  153 	mov	(___ultoa_sloc0_1_0 + 3),#0x00
      000024 78r00            [12]  154 	mov	r0,#__modulong_PARM_2
      000026 E5*00            [12]  155 	mov	a,___ultoa_sloc0_1_0
      000028 F2               [24]  156 	movx	@r0,a
      000029 E5*01            [12]  157 	mov	a,(___ultoa_sloc0_1_0 + 1)
      00002B 08               [12]  158 	inc	r0
      00002C F2               [24]  159 	movx	@r0,a
      00002D E5*02            [12]  160 	mov	a,(___ultoa_sloc0_1_0 + 2)
      00002F 08               [12]  161 	inc	r0
      000030 F2               [24]  162 	movx	@r0,a
      000031 E5*03            [12]  163 	mov	a,(___ultoa_sloc0_1_0 + 3)
      000033 08               [12]  164 	inc	r0
      000034 F2               [24]  165 	movx	@r0,a
      000035 78r04            [12]  166 	mov	r0,#___ultoa_value_65536_39
      000037 E2               [24]  167 	movx	a,@r0
      000038 F5 82            [12]  168 	mov	dpl,a
      00003A 08               [12]  169 	inc	r0
      00003B E2               [24]  170 	movx	a,@r0
      00003C F5 83            [12]  171 	mov	dph,a
      00003E 08               [12]  172 	inc	r0
      00003F E2               [24]  173 	movx	a,@r0
      000040 F5 F0            [12]  174 	mov	b,a
      000042 08               [12]  175 	inc	r0
      000043 E2               [24]  176 	movx	a,@r0
      000044 C0 03            [24]  177 	push	ar3
      000046 12r00r00         [24]  178 	lcall	__modulong
      000049 AC 82            [24]  179 	mov	r4,dpl
      00004B FF               [12]  180 	mov	r7,a
      00004C D0 03            [24]  181 	pop	ar3
      00004E 74 30            [12]  182 	mov	a,#0x30
      000050 2C               [12]  183 	add	a,r4
                                    184 ;	__ltoa.c:65: if (c > (unsigned char)'9')
      000051 FF               [12]  185 	mov  r7,a
      000052 24 C6            [12]  186 	add	a,#0xff - 0x39
      000054 50 06            [24]  187 	jnc	00102$
                                    188 ;	__ltoa.c:66: c += 'A' - '9' - 1;
      000056 8F 06            [24]  189 	mov	ar6,r7
      000058 74 07            [12]  190 	mov	a,#0x07
      00005A 2E               [12]  191 	add	a,r6
      00005B FF               [12]  192 	mov	r7,a
      00005C                        193 00102$:
                                    194 ;	__ltoa.c:67: buffer[--index] = c;
      00005C 1B               [12]  195 	dec	r3
      00005D EB               [12]  196 	mov	a,r3
      00005E 24r08            [12]  197 	add	a,#___ultoa_buffer_65536_40
      000060 F8               [12]  198 	mov	r0,a
      000061 EF               [12]  199 	mov	a,r7
      000062 F2               [24]  200 	movx	@r0,a
                                    201 ;	__ltoa.c:68: value /= radix;
      000063 78r00            [12]  202 	mov	r0,#__divulong_PARM_2
      000065 E5*00            [12]  203 	mov	a,___ultoa_sloc0_1_0
      000067 F2               [24]  204 	movx	@r0,a
      000068 E5*01            [12]  205 	mov	a,(___ultoa_sloc0_1_0 + 1)
      00006A 08               [12]  206 	inc	r0
      00006B F2               [24]  207 	movx	@r0,a
      00006C E5*02            [12]  208 	mov	a,(___ultoa_sloc0_1_0 + 2)
      00006E 08               [12]  209 	inc	r0
      00006F F2               [24]  210 	movx	@r0,a
      000070 E5*03            [12]  211 	mov	a,(___ultoa_sloc0_1_0 + 3)
      000072 08               [12]  212 	inc	r0
      000073 F2               [24]  213 	movx	@r0,a
      000074 78r04            [12]  214 	mov	r0,#___ultoa_value_65536_39
      000076 E2               [24]  215 	movx	a,@r0
      000077 F5 82            [12]  216 	mov	dpl,a
      000079 08               [12]  217 	inc	r0
      00007A E2               [24]  218 	movx	a,@r0
      00007B F5 83            [12]  219 	mov	dph,a
      00007D 08               [12]  220 	inc	r0
      00007E E2               [24]  221 	movx	a,@r0
      00007F F5 F0            [12]  222 	mov	b,a
      000081 08               [12]  223 	inc	r0
      000082 E2               [24]  224 	movx	a,@r0
      000083 C0 03            [24]  225 	push	ar3
      000085 12r00r00         [24]  226 	lcall	__divulong
      000088 78r04            [12]  227 	mov	r0,#___ultoa_value_65536_39
      00008A C0 E0            [24]  228 	push	acc
      00008C E5 82            [12]  229 	mov	a,dpl
      00008E F2               [24]  230 	movx	@r0,a
      00008F E5 83            [12]  231 	mov	a,dph
      000091 08               [12]  232 	inc	r0
      000092 F2               [24]  233 	movx	@r0,a
      000093 E5 F0            [12]  234 	mov	a,b
      000095 08               [12]  235 	inc	r0
      000096 F2               [24]  236 	movx	@r0,a
      000097 D0 E0            [24]  237 	pop	acc
      000099 08               [12]  238 	inc	r0
      00009A F2               [24]  239 	movx	@r0,a
      00009B D0 03            [24]  240 	pop	ar3
                                    241 ;	__ltoa.c:69: } while (value);
      00009D 78r04            [12]  242 	mov	r0,#___ultoa_value_65536_39
      00009F E2               [24]  243 	movx	a,@r0
      0000A0 F5 F0            [12]  244 	mov	b,a
      0000A2 08               [12]  245 	inc	r0
      0000A3 E2               [24]  246 	movx	a,@r0
      0000A4 42 F0            [12]  247 	orl	b,a
      0000A6 08               [12]  248 	inc	r0
      0000A7 E2               [24]  249 	movx	a,@r0
      0000A8 42 F0            [12]  250 	orl	b,a
      0000AA 08               [12]  251 	inc	r0
      0000AB E2               [24]  252 	movx	a,@r0
      0000AC 45 F0            [12]  253 	orl	a,b
      0000AE 60 03            [24]  254 	jz	00133$
      0000B0 02r00r16         [24]  255 	ljmp	00103$
      0000B3                        256 00133$:
                                    257 ;	__ltoa.c:71: do {
      0000B3 78r00            [12]  258 	mov	r0,#___ultoa_PARM_2
      0000B5 E2               [24]  259 	movx	a,@r0
      0000B6 FD               [12]  260 	mov	r5,a
      0000B7 08               [12]  261 	inc	r0
      0000B8 E2               [24]  262 	movx	a,@r0
      0000B9 FE               [12]  263 	mov	r6,a
      0000BA 08               [12]  264 	inc	r0
      0000BB E2               [24]  265 	movx	a,@r0
      0000BC FF               [12]  266 	mov	r7,a
      0000BD 8B 04            [24]  267 	mov	ar4,r3
      0000BF                        268 00106$:
                                    269 ;	__ltoa.c:72: *string++ = buffer[index];
      0000BF EC               [12]  270 	mov	a,r4
      0000C0 24r08            [12]  271 	add	a,#___ultoa_buffer_65536_40
      0000C2 F9               [12]  272 	mov	r1,a
      0000C3 E3               [24]  273 	movx	a,@r1
      0000C4 8D 82            [24]  274 	mov	dpl,r5
      0000C6 8E 83            [24]  275 	mov	dph,r6
      0000C8 8F F0            [24]  276 	mov	b,r7
      0000CA 12r00r00         [24]  277 	lcall	__gptrput
      0000CD A3               [24]  278 	inc	dptr
      0000CE AD 82            [24]  279 	mov	r5,dpl
      0000D0 AE 83            [24]  280 	mov	r6,dph
                                    281 ;	__ltoa.c:73: } while ( ++index != NUMBER_OF_DIGITS );
      0000D2 0C               [12]  282 	inc	r4
      0000D3 BC 20 E9         [24]  283 	cjne	r4,#0x20,00106$
                                    284 ;	__ltoa.c:75: *string = 0;  /* string terminator */
      0000D6 8D 82            [24]  285 	mov	dpl,r5
      0000D8 8E 83            [24]  286 	mov	dph,r6
      0000DA 8F F0            [24]  287 	mov	b,r7
      0000DC E4               [12]  288 	clr	a
                                    289 ;	__ltoa.c:76: }
      0000DD 02r00r00         [24]  290 	ljmp	__gptrput
                                    291 ;------------------------------------------------------------
                                    292 ;Allocation info for local variables in function '__ltoa'
                                    293 ;------------------------------------------------------------
                                    294 ;	__ltoa.c:78: void __ltoa(long value, char* string, unsigned char radix)
                                    295 ;	-----------------------------------------
                                    296 ;	 function __ltoa
                                    297 ;	-----------------------------------------
      0000E0                        298 ___ltoa:
      0000E0 AF 82            [24]  299 	mov	r7,dpl
      0000E2 AE 83            [24]  300 	mov	r6,dph
      0000E4 AD F0            [24]  301 	mov	r5,b
      0000E6 FC               [12]  302 	mov	r4,a
      0000E7 78r2C            [12]  303 	mov	r0,#___ltoa_value_65536_43
      0000E9 EF               [12]  304 	mov	a,r7
      0000EA F2               [24]  305 	movx	@r0,a
      0000EB EE               [12]  306 	mov	a,r6
      0000EC 08               [12]  307 	inc	r0
      0000ED F2               [24]  308 	movx	@r0,a
      0000EE ED               [12]  309 	mov	a,r5
      0000EF 08               [12]  310 	inc	r0
      0000F0 F2               [24]  311 	movx	@r0,a
      0000F1 EC               [12]  312 	mov	a,r4
      0000F2 08               [12]  313 	inc	r0
      0000F3 F2               [24]  314 	movx	@r0,a
                                    315 ;	__ltoa.c:80: if (value < 0 && radix == 10) {
      0000F4 78r2F            [12]  316 	mov	r0,#(___ltoa_value_65536_43 + 3)
      0000F6 E2               [24]  317 	movx	a,@r0
      0000F7 30 E7 42         [24]  318 	jnb	acc.7,00102$
      0000FA 78r2B            [12]  319 	mov	r0,#___ltoa_PARM_3
      0000FC E2               [24]  320 	movx	a,@r0
      0000FD B4 0A 3C         [24]  321 	cjne	a,#0x0a,00102$
                                    322 ;	__ltoa.c:81: *string++ = '-';
      000100 78r28            [12]  323 	mov	r0,#___ltoa_PARM_2
      000102 E2               [24]  324 	movx	a,@r0
      000103 FA               [12]  325 	mov	r2,a
      000104 08               [12]  326 	inc	r0
      000105 E2               [24]  327 	movx	a,@r0
      000106 FB               [12]  328 	mov	r3,a
      000107 08               [12]  329 	inc	r0
      000108 E2               [24]  330 	movx	a,@r0
      000109 FF               [12]  331 	mov	r7,a
      00010A 8A 82            [24]  332 	mov	dpl,r2
      00010C 8B 83            [24]  333 	mov	dph,r3
      00010E 8F F0            [24]  334 	mov	b,r7
      000110 74 2D            [12]  335 	mov	a,#0x2d
      000112 12r00r00         [24]  336 	lcall	__gptrput
      000115 78r28            [12]  337 	mov	r0,#___ltoa_PARM_2
      000117 74 01            [12]  338 	mov	a,#0x01
      000119 2A               [12]  339 	add	a,r2
      00011A F2               [24]  340 	movx	@r0,a
      00011B E4               [12]  341 	clr	a
      00011C 3B               [12]  342 	addc	a,r3
      00011D 08               [12]  343 	inc	r0
      00011E F2               [24]  344 	movx	@r0,a
      00011F EF               [12]  345 	mov	a,r7
      000120 08               [12]  346 	inc	r0
      000121 F2               [24]  347 	movx	@r0,a
                                    348 ;	__ltoa.c:82: value = -value;
      000122 78r2C            [12]  349 	mov	r0,#___ltoa_value_65536_43
      000124 E2               [24]  350 	movx	a,@r0
      000125 D3               [12]  351 	setb	c
      000126 F4               [12]  352 	cpl	a
      000127 34 00            [12]  353 	addc	a,#0x00
      000129 F2               [24]  354 	movx	@r0,a
      00012A 08               [12]  355 	inc	r0
      00012B E2               [24]  356 	movx	a,@r0
      00012C F4               [12]  357 	cpl	a
      00012D 34 00            [12]  358 	addc	a,#0x00
      00012F F2               [24]  359 	movx	@r0,a
      000130 08               [12]  360 	inc	r0
      000131 E2               [24]  361 	movx	a,@r0
      000132 F4               [12]  362 	cpl	a
      000133 34 00            [12]  363 	addc	a,#0x00
      000135 F2               [24]  364 	movx	@r0,a
      000136 08               [12]  365 	inc	r0
      000137 E2               [24]  366 	movx	a,@r0
      000138 F4               [12]  367 	cpl	a
      000139 34 00            [12]  368 	addc	a,#0x00
      00013B F2               [24]  369 	movx	@r0,a
      00013C                        370 00102$:
                                    371 ;	__ltoa.c:84: __ultoa(value, string, radix);
      00013C 78r28            [12]  372 	mov	r0,#___ltoa_PARM_2
      00013E 79r00            [12]  373 	mov	r1,#___ultoa_PARM_2
      000140 E2               [24]  374 	movx	a,@r0
      000141 F3               [24]  375 	movx	@r1,a
      000142 08               [12]  376 	inc	r0
      000143 E2               [24]  377 	movx	a,@r0
      000144 09               [12]  378 	inc	r1
      000145 F3               [24]  379 	movx	@r1,a
      000146 08               [12]  380 	inc	r0
      000147 E2               [24]  381 	movx	a,@r0
      000148 09               [12]  382 	inc	r1
      000149 F3               [24]  383 	movx	@r1,a
      00014A 78r2B            [12]  384 	mov	r0,#___ltoa_PARM_3
      00014C 79r03            [12]  385 	mov	r1,#___ultoa_PARM_3
      00014E E2               [24]  386 	movx	a,@r0
      00014F F3               [24]  387 	movx	@r1,a
      000150 78r2C            [12]  388 	mov	r0,#___ltoa_value_65536_43
      000152 E2               [24]  389 	movx	a,@r0
      000153 F5 82            [12]  390 	mov	dpl,a
      000155 08               [12]  391 	inc	r0
      000156 E2               [24]  392 	movx	a,@r0
      000157 F5 83            [12]  393 	mov	dph,a
      000159 08               [12]  394 	inc	r0
      00015A E2               [24]  395 	movx	a,@r0
      00015B F5 F0            [12]  396 	mov	b,a
      00015D 08               [12]  397 	inc	r0
      00015E E2               [24]  398 	movx	a,@r0
                                    399 ;	__ltoa.c:85: }
      00015F 02r00r00         [24]  400 	ljmp	___ultoa
                                    401 	.area CSEG    (CODE)
                                    402 	.area CONST   (CODE)
                                    403 	.area XINIT   (CODE)
                                    404 	.area CABS    (ABS,CODE)
