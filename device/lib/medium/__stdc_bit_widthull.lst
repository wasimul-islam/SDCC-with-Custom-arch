                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __stdc_bit_widthull
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___stdc_bit_widthull
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 	.area	OSEG    (OVR,DATA)
      000000                         35 ___stdc_bit_widthull_sloc0_1_0:
      000000                         36 	.ds 8
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
      000000                         54 ___stdc_bit_widthull_value_65536_9:
      000000                         55 	.ds 8
                                     56 ;--------------------------------------------------------
                                     57 ; uninitialized external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XSEG    (XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XABS    (ABS,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; initialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XISEG   (XDATA)
                                     68 	.area HOME    (CODE)
                                     69 	.area GSINIT0 (CODE)
                                     70 	.area GSINIT1 (CODE)
                                     71 	.area GSINIT2 (CODE)
                                     72 	.area GSINIT3 (CODE)
                                     73 	.area GSINIT4 (CODE)
                                     74 	.area GSINIT5 (CODE)
                                     75 	.area GSINIT  (CODE)
                                     76 	.area GSFINAL (CODE)
                                     77 	.area CSEG    (CODE)
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; Home
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area HOME    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; code
                                     92 ;--------------------------------------------------------
                                     93 	.area CSEG    (CODE)
                                     94 ;------------------------------------------------------------
                                     95 ;Allocation info for local variables in function '__stdc_bit_widthull'
                                     96 ;------------------------------------------------------------
                                     97 ;sloc0                     Allocated with name '___stdc_bit_widthull_sloc0_1_0'
                                     98 ;------------------------------------------------------------
                                     99 ;	__stdc_bit_widthull.c:37: int_fast8_t __stdc_bit_widthull(unsigned long long value)
                                    100 ;	-----------------------------------------
                                    101 ;	 function __stdc_bit_widthull
                                    102 ;	-----------------------------------------
      000000                        103 ___stdc_bit_widthull:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0 07            [24]  112 	push	ar7
      000002 C0 06            [24]  113 	push	ar6
      000004 C0 05            [24]  114 	push	ar5
      000006 C0 04            [24]  115 	push	ar4
      000008 C0 E0            [24]  116 	push	acc
      00000A C0 F0            [24]  117 	push	b
      00000C C0 83            [24]  118 	push	dph
      00000E C0 82            [24]  119 	push	dpl
      000010 78r00            [12]  120 	mov	r0,#___stdc_bit_widthull_value_65536_9
      000012 D0 E0            [24]  121 	pop	acc
      000014 F2               [24]  122 	movx	@r0,a
      000015 D0 E0            [24]  123 	pop	acc
      000017 08               [12]  124 	inc	r0
      000018 F2               [24]  125 	movx	@r0,a
      000019 D0 E0            [24]  126 	pop	acc
      00001B 08               [12]  127 	inc	r0
      00001C F2               [24]  128 	movx	@r0,a
      00001D D0 E0            [24]  129 	pop	acc
      00001F 08               [12]  130 	inc	r0
      000020 F2               [24]  131 	movx	@r0,a
      000021 D0 E0            [24]  132 	pop	acc
      000023 08               [12]  133 	inc	r0
      000024 F2               [24]  134 	movx	@r0,a
      000025 D0 E0            [24]  135 	pop	acc
      000027 08               [12]  136 	inc	r0
      000028 F2               [24]  137 	movx	@r0,a
      000029 D0 E0            [24]  138 	pop	acc
      00002B 08               [12]  139 	inc	r0
      00002C F2               [24]  140 	movx	@r0,a
      00002D D0 E0            [24]  141 	pop	acc
      00002F 08               [12]  142 	inc	r0
      000030 F2               [24]  143 	movx	@r0,a
                                    144 ;	__stdc_bit_widthull.c:39: int_fast8_t width = 0;
      000031 7F 00            [12]  145 	mov	r7,#0x00
                                    146 ;	__stdc_bit_widthull.c:40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
      000033 7D 00            [12]  147 	mov	r5,#0x00
      000035                        148 00105$:
      000035 BD 40 00         [24]  149 	cjne	r5,#0x40,00122$
      000038                        150 00122$:
      000038 40 03            [24]  151 	jc	00123$
      00003A 02r00rC7         [24]  152 	ljmp	00103$
      00003D                        153 00123$:
                                    154 ;	__stdc_bit_widthull.c:41: if(value & (1ull << i))
      00003D C0 07            [24]  155 	push	ar7
      00003F 8D F0            [24]  156 	mov	b,r5
      000041 05 F0            [12]  157 	inc	b
      000043 75*00 01         [24]  158 	mov	___stdc_bit_widthull_sloc0_1_0,#0x01
      000046 75*01 00         [24]  159 	mov	(___stdc_bit_widthull_sloc0_1_0 + 1),#0x00
      000049 75*02 00         [24]  160 	mov	(___stdc_bit_widthull_sloc0_1_0 + 2),#0x00
      00004C 75*03 00         [24]  161 	mov	(___stdc_bit_widthull_sloc0_1_0 + 3),#0x00
      00004F 75*04 00         [24]  162 	mov	(___stdc_bit_widthull_sloc0_1_0 + 4),#0x00
      000052 75*05 00         [24]  163 	mov	(___stdc_bit_widthull_sloc0_1_0 + 5),#0x00
      000055 75*06 00         [24]  164 	mov	(___stdc_bit_widthull_sloc0_1_0 + 6),#0x00
      000058 75*07 00         [24]  165 	mov	(___stdc_bit_widthull_sloc0_1_0 + 7),#0x00
      00005B 80 29            [24]  166 	sjmp	00125$
      00005D                        167 00124$:
      00005D E5*00            [12]  168 	mov	a,___stdc_bit_widthull_sloc0_1_0
      00005F 25*00            [12]  169 	add	a,___stdc_bit_widthull_sloc0_1_0
      000061 F5*00            [12]  170 	mov	___stdc_bit_widthull_sloc0_1_0,a
      000063 E5*01            [12]  171 	mov	a,(___stdc_bit_widthull_sloc0_1_0 + 1)
      000065 33               [12]  172 	rlc	a
      000066 F5*01            [12]  173 	mov	(___stdc_bit_widthull_sloc0_1_0 + 1),a
      000068 E5*02            [12]  174 	mov	a,(___stdc_bit_widthull_sloc0_1_0 + 2)
      00006A 33               [12]  175 	rlc	a
      00006B F5*02            [12]  176 	mov	(___stdc_bit_widthull_sloc0_1_0 + 2),a
      00006D E5*03            [12]  177 	mov	a,(___stdc_bit_widthull_sloc0_1_0 + 3)
      00006F 33               [12]  178 	rlc	a
      000070 F5*03            [12]  179 	mov	(___stdc_bit_widthull_sloc0_1_0 + 3),a
      000072 E5*04            [12]  180 	mov	a,(___stdc_bit_widthull_sloc0_1_0 + 4)
      000074 33               [12]  181 	rlc	a
      000075 F5*04            [12]  182 	mov	(___stdc_bit_widthull_sloc0_1_0 + 4),a
      000077 E5*05            [12]  183 	mov	a,(___stdc_bit_widthull_sloc0_1_0 + 5)
      000079 33               [12]  184 	rlc	a
      00007A F5*05            [12]  185 	mov	(___stdc_bit_widthull_sloc0_1_0 + 5),a
      00007C E5*06            [12]  186 	mov	a,(___stdc_bit_widthull_sloc0_1_0 + 6)
      00007E 33               [12]  187 	rlc	a
      00007F F5*06            [12]  188 	mov	(___stdc_bit_widthull_sloc0_1_0 + 6),a
      000081 E5*07            [12]  189 	mov	a,(___stdc_bit_widthull_sloc0_1_0 + 7)
      000083 33               [12]  190 	rlc	a
      000084 F5*07            [12]  191 	mov	(___stdc_bit_widthull_sloc0_1_0 + 7),a
      000086                        192 00125$:
      000086 D5 F0 D4         [24]  193 	djnz	b,00124$
      000089 78r00            [12]  194 	mov	r0,#___stdc_bit_widthull_value_65536_9
      00008B E2               [24]  195 	movx	a,@r0
      00008C 52*00            [12]  196 	anl	___stdc_bit_widthull_sloc0_1_0,a
      00008E 08               [12]  197 	inc	r0
      00008F E2               [24]  198 	movx	a,@r0
      000090 52*01            [12]  199 	anl	(___stdc_bit_widthull_sloc0_1_0 + 1),a
      000092 08               [12]  200 	inc	r0
      000093 E2               [24]  201 	movx	a,@r0
      000094 52*02            [12]  202 	anl	(___stdc_bit_widthull_sloc0_1_0 + 2),a
      000096 08               [12]  203 	inc	r0
      000097 E2               [24]  204 	movx	a,@r0
      000098 52*03            [12]  205 	anl	(___stdc_bit_widthull_sloc0_1_0 + 3),a
      00009A 08               [12]  206 	inc	r0
      00009B E2               [24]  207 	movx	a,@r0
      00009C 52*04            [12]  208 	anl	(___stdc_bit_widthull_sloc0_1_0 + 4),a
      00009E 08               [12]  209 	inc	r0
      00009F E2               [24]  210 	movx	a,@r0
      0000A0 52*05            [12]  211 	anl	(___stdc_bit_widthull_sloc0_1_0 + 5),a
      0000A2 08               [12]  212 	inc	r0
      0000A3 E2               [24]  213 	movx	a,@r0
      0000A4 52*06            [12]  214 	anl	(___stdc_bit_widthull_sloc0_1_0 + 6),a
      0000A6 08               [12]  215 	inc	r0
      0000A7 E2               [24]  216 	movx	a,@r0
      0000A8 52*07            [12]  217 	anl	(___stdc_bit_widthull_sloc0_1_0 + 7),a
      0000AA D0 07            [24]  218 	pop	ar7
      0000AC E5*00            [12]  219 	mov	a,___stdc_bit_widthull_sloc0_1_0
      0000AE 45*01            [12]  220 	orl	a,(___stdc_bit_widthull_sloc0_1_0 + 1)
      0000B0 45*02            [12]  221 	orl	a,(___stdc_bit_widthull_sloc0_1_0 + 2)
      0000B2 45*03            [12]  222 	orl	a,(___stdc_bit_widthull_sloc0_1_0 + 3)
      0000B4 45*04            [12]  223 	orl	a,(___stdc_bit_widthull_sloc0_1_0 + 4)
      0000B6 45*05            [12]  224 	orl	a,(___stdc_bit_widthull_sloc0_1_0 + 5)
      0000B8 45*06            [12]  225 	orl	a,(___stdc_bit_widthull_sloc0_1_0 + 6)
      0000BA 45*07            [12]  226 	orl	a,(___stdc_bit_widthull_sloc0_1_0 + 7)
      0000BC 60 05            [24]  227 	jz	00106$
                                    228 ;	__stdc_bit_widthull.c:42: width = (i + 1);
      0000BE 8D 06            [24]  229 	mov	ar6,r5
      0000C0 EE               [12]  230 	mov	a,r6
      0000C1 04               [12]  231 	inc	a
      0000C2 FF               [12]  232 	mov	r7,a
      0000C3                        233 00106$:
                                    234 ;	__stdc_bit_widthull.c:40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
      0000C3 0D               [12]  235 	inc	r5
      0000C4 02r00r35         [24]  236 	ljmp	00105$
      0000C7                        237 00103$:
                                    238 ;	__stdc_bit_widthull.c:43: return width;
      0000C7 8F 82            [24]  239 	mov	dpl,r7
                                    240 ;	__stdc_bit_widthull.c:44: }
      0000C9 22               [24]  241 	ret
                                    242 	.area CSEG    (CODE)
                                    243 	.area CONST   (CODE)
                                    244 	.area XINIT   (CODE)
                                    245 	.area CABS    (ABS,CODE)
