                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _moduint
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __moduint_PARM_2
                                     12 	.globl __moduint
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
      000000                         52 __moduint_PARM_2:
      000000                         53 	.ds 2
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function '_moduint'
                                     94 ;------------------------------------------------------------
                                     95 ;	_moduint.c:179: _moduint (unsigned int a, unsigned int b) __SDCC_NONBANKED
                                     96 ;	-----------------------------------------
                                     97 ;	 function _moduint
                                     98 ;	-----------------------------------------
      000000                         99 __moduint:
                           000007   100 	ar7 = 0x07
                           000006   101 	ar6 = 0x06
                           000005   102 	ar5 = 0x05
                           000004   103 	ar4 = 0x04
                           000003   104 	ar3 = 0x03
                           000002   105 	ar2 = 0x02
                           000001   106 	ar1 = 0x01
                           000000   107 	ar0 = 0x00
      000000 AE 82            [24]  108 	mov	r6,dpl
      000002 AF 83            [24]  109 	mov	r7,dph
                                    110 ;	_moduint.c:181: unsigned char count = 0;
      000004 7D 00            [12]  111 	mov	r5,#0x00
                                    112 ;	_moduint.c:183: while (!MSB_SET(b))
      000006 7C 00            [12]  113 	mov	r4,#0x00
      000008                        114 00103$:
      000008 78r01            [12]  115 	mov	r0,#(__moduint_PARM_2 + 1)
      00000A E2               [24]  116 	movx	a,@r0
      00000B 23               [12]  117 	rl	a
      00000C 54 01            [12]  118 	anl	a,#0x01
      00000E FB               [12]  119 	mov	r3,a
      00000F 70 35            [24]  120 	jnz	00117$
                                    121 ;	_moduint.c:185: b <<= 1;
      000011 78r00            [12]  122 	mov	r0,#__moduint_PARM_2
      000013 E2               [24]  123 	movx	a,@r0
      000014 25 E0            [12]  124 	add	a,acc
      000016 F2               [24]  125 	movx	@r0,a
      000017 08               [12]  126 	inc	r0
      000018 E2               [24]  127 	movx	a,@r0
      000019 33               [12]  128 	rlc	a
      00001A F2               [24]  129 	movx	@r0,a
                                    130 ;	_moduint.c:186: if (b > a)
      00001B 78r00            [12]  131 	mov	r0,#__moduint_PARM_2
      00001D C3               [12]  132 	clr	c
      00001E E2               [24]  133 	movx	a,@r0
      00001F F5 F0            [12]  134 	mov	b,a
      000021 EE               [12]  135 	mov	a,r6
      000022 95 F0            [12]  136 	subb	a,b
      000024 08               [12]  137 	inc	r0
      000025 E2               [24]  138 	movx	a,@r0
      000026 F5 F0            [12]  139 	mov	b,a
      000028 EF               [12]  140 	mov	a,r7
      000029 95 F0            [12]  141 	subb	a,b
      00002B 50 14            [24]  142 	jnc	00102$
                                    143 ;	_moduint.c:188: b >>=1;
      00002D 78r00            [12]  144 	mov	r0,#__moduint_PARM_2
      00002F E2               [24]  145 	movx	a,@r0
      000030 F5 F0            [12]  146 	mov	b,a
      000032 08               [12]  147 	inc	r0
      000033 E2               [24]  148 	movx	a,@r0
      000034 C3               [12]  149 	clr	c
      000035 13               [12]  150 	rrc	a
      000036 C5 F0            [12]  151 	xch	a,b
      000038 13               [12]  152 	rrc	a
      000039 18               [12]  153 	dec	r0
      00003A F2               [24]  154 	movx	@r0,a
      00003B C5 F0            [12]  155 	xch	a,b
      00003D 08               [12]  156 	inc	r0
      00003E F2               [24]  157 	movx	@r0,a
                                    158 ;	_moduint.c:189: break;
      00003F 80 05            [24]  159 	sjmp	00117$
      000041                        160 00102$:
                                    161 ;	_moduint.c:191: count++;
      000041 0C               [12]  162 	inc	r4
      000042 8C 05            [24]  163 	mov	ar5,r4
                                    164 ;	_moduint.c:193: do
      000044 80 C2            [24]  165 	sjmp	00103$
      000046                        166 00117$:
      000046                        167 00108$:
                                    168 ;	_moduint.c:195: if (a >= b)
      000046 78r00            [12]  169 	mov	r0,#__moduint_PARM_2
      000048 C3               [12]  170 	clr	c
      000049 E2               [24]  171 	movx	a,@r0
      00004A F5 F0            [12]  172 	mov	b,a
      00004C EE               [12]  173 	mov	a,r6
      00004D 95 F0            [12]  174 	subb	a,b
      00004F 08               [12]  175 	inc	r0
      000050 E2               [24]  176 	movx	a,@r0
      000051 F5 F0            [12]  177 	mov	b,a
      000053 EF               [12]  178 	mov	a,r7
      000054 95 F0            [12]  179 	subb	a,b
      000056 40 0E            [24]  180 	jc	00107$
                                    181 ;	_moduint.c:196: a -= b;
      000058 78r00            [12]  182 	mov	r0,#__moduint_PARM_2
      00005A D3               [12]  183 	setb	c
      00005B E2               [24]  184 	movx	a,@r0
      00005C 9E               [12]  185 	subb	a,r6
      00005D F4               [12]  186 	cpl	a
      00005E B3               [12]  187 	cpl	c
      00005F FE               [12]  188 	mov	r6,a
      000060 B3               [12]  189 	cpl	c
      000061 08               [12]  190 	inc	r0
      000062 E2               [24]  191 	movx	a,@r0
      000063 9F               [12]  192 	subb	a,r7
      000064 F4               [12]  193 	cpl	a
      000065 FF               [12]  194 	mov	r7,a
      000066                        195 00107$:
                                    196 ;	_moduint.c:197: b >>= 1;
      000066 78r00            [12]  197 	mov	r0,#__moduint_PARM_2
      000068 E2               [24]  198 	movx	a,@r0
      000069 F5 F0            [12]  199 	mov	b,a
      00006B 08               [12]  200 	inc	r0
      00006C E2               [24]  201 	movx	a,@r0
      00006D C3               [12]  202 	clr	c
      00006E 13               [12]  203 	rrc	a
      00006F C5 F0            [12]  204 	xch	a,b
      000071 13               [12]  205 	rrc	a
      000072 18               [12]  206 	dec	r0
      000073 F2               [24]  207 	movx	@r0,a
      000074 C5 F0            [12]  208 	xch	a,b
      000076 08               [12]  209 	inc	r0
      000077 F2               [24]  210 	movx	@r0,a
                                    211 ;	_moduint.c:199: while (count--);
      000078 8D 04            [24]  212 	mov	ar4,r5
      00007A 1D               [12]  213 	dec	r5
      00007B EC               [12]  214 	mov	a,r4
      00007C 70 C8            [24]  215 	jnz	00108$
                                    216 ;	_moduint.c:200: return a;
      00007E 8E 82            [24]  217 	mov	dpl,r6
      000080 8F 83            [24]  218 	mov	dph,r7
                                    219 ;	_moduint.c:201: }
      000082 22               [24]  220 	ret
                                    221 	.area CSEG    (CODE)
                                    222 	.area CONST   (CODE)
                                    223 	.area XINIT   (CODE)
                                    224 	.area CABS    (ABS,CODE)
