                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strtol
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strtoul
                                     12 	.globl _strtol_PARM_3
                                     13 	.globl _strtol_PARM_2
                                     14 	.globl _strtol
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _strtol_sloc0_1_0:
      000000                         35 	.ds 1
      000001                         36 _strtol_sloc1_1_0:
      000001                         37 	.ds 3
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in internal ram
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
      000000                         58 _strtol_PARM_2:
      000000                         59 	.ds 3
      000003                         60 _strtol_PARM_3:
      000003                         61 	.ds 2
      000005                         62 _strtol_nptr_65536_59:
      000005                         63 	.ds 3
      000008                         64 _strtol_rptr_65536_60:
      000008                         65 	.ds 3
      00000B                         66 _strtol_u_65536_60:
      00000B                         67 	.ds 4
      00000F                         68 _strtol_neg_65536_60:
      00000F                         69 	.ds 1
                                     70 ;--------------------------------------------------------
                                     71 ; uninitialized external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XSEG    (XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; absolute external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XABS    (ABS,XDATA)
                                     78 ;--------------------------------------------------------
                                     79 ; initialized external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XISEG   (XDATA)
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT0 (CODE)
                                     84 	.area GSINIT1 (CODE)
                                     85 	.area GSINIT2 (CODE)
                                     86 	.area GSINIT3 (CODE)
                                     87 	.area GSINIT4 (CODE)
                                     88 	.area GSINIT5 (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area CSEG    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; global & static initialisations
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 	.area GSFINAL (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; Home
                                    101 ;--------------------------------------------------------
                                    102 	.area HOME    (CODE)
                                    103 	.area HOME    (CODE)
                                    104 ;--------------------------------------------------------
                                    105 ; code
                                    106 ;--------------------------------------------------------
                                    107 	.area CSEG    (CODE)
                                    108 ;------------------------------------------------------------
                                    109 ;Allocation info for local variables in function 'strtol'
                                    110 ;------------------------------------------------------------
                                    111 ;sloc0                     Allocated with name '_strtol_sloc0_1_0'
                                    112 ;sloc1                     Allocated with name '_strtol_sloc1_1_0'
                                    113 ;------------------------------------------------------------
                                    114 ;	strtol.c:38: long int strtol(const char *nptr, char **endptr, int base)
                                    115 ;	-----------------------------------------
                                    116 ;	 function strtol
                                    117 ;	-----------------------------------------
      000000                        118 _strtol:
                           000007   119 	ar7 = 0x07
                           000006   120 	ar6 = 0x06
                           000005   121 	ar5 = 0x05
                           000004   122 	ar4 = 0x04
                           000003   123 	ar3 = 0x03
                           000002   124 	ar2 = 0x02
                           000001   125 	ar1 = 0x01
                           000000   126 	ar0 = 0x00
      000000 AF F0            [24]  127 	mov	r7,b
      000002 AE 83            [24]  128 	mov	r6,dph
      000004 E5 82            [12]  129 	mov	a,dpl
      000006 78r05            [12]  130 	mov	r0,#_strtol_nptr_65536_59
      000008 F2               [24]  131 	movx	@r0,a
      000009 EE               [12]  132 	mov	a,r6
      00000A 08               [12]  133 	inc	r0
      00000B F2               [24]  134 	movx	@r0,a
      00000C EF               [12]  135 	mov	a,r7
      00000D 08               [12]  136 	inc	r0
      00000E F2               [24]  137 	movx	@r0,a
                                    138 ;	strtol.c:45: while (isblank (*ptr))
      00000F 78r05            [12]  139 	mov	r0,#_strtol_nptr_65536_59
      000011 E2               [24]  140 	movx	a,@r0
      000012 FD               [12]  141 	mov	r5,a
      000013 08               [12]  142 	inc	r0
      000014 E2               [24]  143 	movx	a,@r0
      000015 FE               [12]  144 	mov	r6,a
      000016 08               [12]  145 	inc	r0
      000017 E2               [24]  146 	movx	a,@r0
      000018 FB               [12]  147 	mov	r3,a
      000019                        148 00101$:
      000019 8D 82            [24]  149 	mov	dpl,r5
      00001B 8E 83            [24]  150 	mov	dph,r6
      00001D 8B F0            [24]  151 	mov	b,r3
      00001F 12r00r00         [24]  152 	lcall	__gptrget
      000022 FF               [12]  153 	mov	r7,a
      000023 8F*00            [24]  154 	mov	_strtol_sloc0_1_0,r7
                                    155 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000025 74 20            [12]  156 	mov	a,#0x20
      000027 B5*00 02         [24]  157 	cjne	a,_strtol_sloc0_1_0,00208$
      00002A 80 05            [24]  158 	sjmp	00132$
      00002C                        159 00208$:
      00002C 74 09            [12]  160 	mov	a,#0x09
      00002E B5*00 07         [24]  161 	cjne	a,_strtol_sloc0_1_0,00158$
      000031                        162 00132$:
                                    163 ;	strtol.c:46: ptr++;
      000031 0D               [12]  164 	inc	r5
      000032 BD 00 E4         [24]  165 	cjne	r5,#0x00,00101$
      000035 0E               [12]  166 	inc	r6
      000036 80 E1            [24]  167 	sjmp	00101$
      000038                        168 00158$:
      000038 8D*01            [24]  169 	mov	_strtol_sloc1_1_0,r5
      00003A 8E*02            [24]  170 	mov	(_strtol_sloc1_1_0 + 1),r6
      00003C 8B*03            [24]  171 	mov	(_strtol_sloc1_1_0 + 2),r3
                                    172 ;	strtol.c:50: if (*ptr == '-')
      00003E 8D 82            [24]  173 	mov	dpl,r5
      000040 8E 83            [24]  174 	mov	dph,r6
      000042 8B F0            [24]  175 	mov	b,r3
      000044 12r00r00         [24]  176 	lcall	__gptrget
      000047 FC               [12]  177 	mov	r4,a
      000048 BC 2D 10         [24]  178 	cjne	r4,#0x2d,00105$
                                    179 ;	strtol.c:52: neg = true;
      00004B 78r0F            [12]  180 	mov	r0,#_strtol_neg_65536_60
      00004D 74 01            [12]  181 	mov	a,#0x01
      00004F F2               [24]  182 	movx	@r0,a
                                    183 ;	strtol.c:53: ptr++;
      000050 2D               [12]  184 	add	a,r5
      000051 F5*01            [12]  185 	mov	_strtol_sloc1_1_0,a
      000053 E4               [12]  186 	clr	a
      000054 3E               [12]  187 	addc	a,r6
      000055 F5*02            [12]  188 	mov	(_strtol_sloc1_1_0 + 1),a
      000057 8B*03            [24]  189 	mov	(_strtol_sloc1_1_0 + 2),r3
      000059 80 04            [24]  190 	sjmp	00106$
      00005B                        191 00105$:
                                    192 ;	strtol.c:56: neg = false;
      00005B 78r0F            [12]  193 	mov	r0,#_strtol_neg_65536_60
      00005D E4               [12]  194 	clr	a
      00005E F2               [24]  195 	movx	@r0,a
      00005F                        196 00106$:
                                    197 ;	strtol.c:59: if (neg && (isblank (*ptr) || *ptr == '-' || *ptr == '+'))
      00005F 78r0F            [12]  198 	mov	r0,#_strtol_neg_65536_60
      000061 E2               [24]  199 	movx	a,@r0
      000062 60 54            [24]  200 	jz	00110$
      000064 85*01 82         [24]  201 	mov	dpl,_strtol_sloc1_1_0
      000067 85*02 83         [24]  202 	mov	dph,(_strtol_sloc1_1_0 + 1)
      00006A 85*03 F0         [24]  203 	mov	b,(_strtol_sloc1_1_0 + 2)
      00006D 12r00r00         [24]  204 	lcall	__gptrget
      000070 FC               [12]  205 	mov	r4,a
      000071 FB               [12]  206 	mov	r3,a
                                    207 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000072 BB 20 02         [24]  208 	cjne	r3,#0x20,00215$
      000075 80 0D            [24]  209 	sjmp	00109$
      000077                        210 00215$:
      000077 BB 09 02         [24]  211 	cjne	r3,#0x09,00216$
      00007A 80 08            [24]  212 	sjmp	00109$
      00007C                        213 00216$:
                                    214 ;	strtol.c:59: if (neg && (isblank (*ptr) || *ptr == '-' || *ptr == '+'))
      00007C BC 2D 02         [24]  215 	cjne	r4,#0x2d,00217$
      00007F 80 03            [24]  216 	sjmp	00109$
      000081                        217 00217$:
      000081 BC 2B 34         [24]  218 	cjne	r4,#0x2b,00110$
      000084                        219 00109$:
                                    220 ;	strtol.c:61: if (endptr)
      000084 78r00            [12]  221 	mov	r0,#_strtol_PARM_2
      000086 E2               [24]  222 	movx	a,@r0
      000087 F5 F0            [12]  223 	mov	b,a
      000089 08               [12]  224 	inc	r0
      00008A E2               [24]  225 	movx	a,@r0
      00008B 45 F0            [12]  226 	orl	a,b
      00008D 60 22            [24]  227 	jz	00108$
                                    228 ;	strtol.c:62: *endptr = nptr;
      00008F 78r00            [12]  229 	mov	r0,#_strtol_PARM_2
      000091 E2               [24]  230 	movx	a,@r0
      000092 FA               [12]  231 	mov	r2,a
      000093 08               [12]  232 	inc	r0
      000094 E2               [24]  233 	movx	a,@r0
      000095 FB               [12]  234 	mov	r3,a
      000096 08               [12]  235 	inc	r0
      000097 E2               [24]  236 	movx	a,@r0
      000098 FC               [12]  237 	mov	r4,a
      000099 8A 82            [24]  238 	mov	dpl,r2
      00009B 8B 83            [24]  239 	mov	dph,r3
      00009D 8C F0            [24]  240 	mov	b,r4
      00009F 78r05            [12]  241 	mov	r0,#_strtol_nptr_65536_59
      0000A1 E2               [24]  242 	movx	a,@r0
      0000A2 12r00r00         [24]  243 	lcall	__gptrput
      0000A5 A3               [24]  244 	inc	dptr
      0000A6 08               [12]  245 	inc	r0
      0000A7 E2               [24]  246 	movx	a,@r0
      0000A8 12r00r00         [24]  247 	lcall	__gptrput
      0000AB A3               [24]  248 	inc	dptr
      0000AC 08               [12]  249 	inc	r0
      0000AD E2               [24]  250 	movx	a,@r0
      0000AE 12r00r00         [24]  251 	lcall	__gptrput
      0000B1                        252 00108$:
                                    253 ;	strtol.c:63: return (0);
      0000B1 90 00 00         [24]  254 	mov	dptr,#(0x00&0x00ff)
      0000B4 E4               [12]  255 	clr	a
      0000B5 F5 F0            [12]  256 	mov	b,a
      0000B7 22               [24]  257 	ret
      0000B8                        258 00110$:
                                    259 ;	strtol.c:66: u = strtoul(ptr, &rptr, base);
      0000B8 78r00            [12]  260 	mov	r0,#_strtoul_PARM_2
      0000BA 74r08            [12]  261 	mov	a,#_strtol_rptr_65536_60
      0000BC F2               [24]  262 	movx	@r0,a
      0000BD E4               [12]  263 	clr	a
      0000BE 08               [12]  264 	inc	r0
      0000BF F2               [24]  265 	movx	@r0,a
      0000C0 74 60            [12]  266 	mov	a,#0x60
      0000C2 08               [12]  267 	inc	r0
      0000C3 F2               [24]  268 	movx	@r0,a
      0000C4 78r03            [12]  269 	mov	r0,#_strtol_PARM_3
      0000C6 79r00            [12]  270 	mov	r1,#_strtoul_PARM_3
      0000C8 E2               [24]  271 	movx	a,@r0
      0000C9 F3               [24]  272 	movx	@r1,a
      0000CA 08               [12]  273 	inc	r0
      0000CB E2               [24]  274 	movx	a,@r0
      0000CC 09               [12]  275 	inc	r1
      0000CD F3               [24]  276 	movx	@r1,a
      0000CE 85*01 82         [24]  277 	mov	dpl,_strtol_sloc1_1_0
      0000D1 85*02 83         [24]  278 	mov	dph,(_strtol_sloc1_1_0 + 1)
      0000D4 85*03 F0         [24]  279 	mov	b,(_strtol_sloc1_1_0 + 2)
      0000D7 12r00r00         [24]  280 	lcall	_strtoul
      0000DA 78r0B            [12]  281 	mov	r0,#_strtol_u_65536_60
      0000DC C0 E0            [24]  282 	push	acc
      0000DE E5 82            [12]  283 	mov	a,dpl
      0000E0 F2               [24]  284 	movx	@r0,a
      0000E1 E5 83            [12]  285 	mov	a,dph
      0000E3 08               [12]  286 	inc	r0
      0000E4 F2               [24]  287 	movx	@r0,a
      0000E5 E5 F0            [12]  288 	mov	a,b
      0000E7 08               [12]  289 	inc	r0
      0000E8 F2               [24]  290 	movx	@r0,a
      0000E9 D0 E0            [24]  291 	pop	acc
      0000EB 08               [12]  292 	inc	r0
      0000EC F2               [24]  293 	movx	@r0,a
                                    294 ;	strtol.c:69: if (rptr == ptr)
      0000ED 78r08            [12]  295 	mov	r0,#_strtol_rptr_65536_60
      0000EF C0*01            [24]  296 	push	_strtol_sloc1_1_0
      0000F1 C0*02            [24]  297 	push	(_strtol_sloc1_1_0 + 1)
      0000F3 C0*03            [24]  298 	push	(_strtol_sloc1_1_0 + 2)
      0000F5 E2               [24]  299 	movx	a,@r0
      0000F6 F5 82            [12]  300 	mov	dpl,a
      0000F8 08               [12]  301 	inc	r0
      0000F9 E2               [24]  302 	movx	a,@r0
      0000FA F5 83            [12]  303 	mov	dph,a
      0000FC 08               [12]  304 	inc	r0
      0000FD E2               [24]  305 	movx	a,@r0
      0000FE F5 F0            [12]  306 	mov	b,a
      000100 12r00r00         [24]  307 	lcall	___gptr_cmp
      000103 15 81            [12]  308 	dec	sp
      000105 15 81            [12]  309 	dec	sp
      000107 15 81            [12]  310 	dec	sp
      000109 70 3A            [24]  311 	jnz	00117$
                                    312 ;	strtol.c:71: if (endptr)
      00010B 78r00            [12]  313 	mov	r0,#_strtol_PARM_2
      00010D E2               [24]  314 	movx	a,@r0
      00010E F5 F0            [12]  315 	mov	b,a
      000110 08               [12]  316 	inc	r0
      000111 E2               [24]  317 	movx	a,@r0
      000112 45 F0            [12]  318 	orl	a,b
      000114 60 28            [24]  319 	jz	00115$
                                    320 ;	strtol.c:72: *endptr = nptr;
      000116 78r00            [12]  321 	mov	r0,#_strtol_PARM_2
      000118 E2               [24]  322 	movx	a,@r0
      000119 F5*01            [12]  323 	mov	_strtol_sloc1_1_0,a
      00011B 08               [12]  324 	inc	r0
      00011C E2               [24]  325 	movx	a,@r0
      00011D F5*02            [12]  326 	mov	(_strtol_sloc1_1_0 + 1),a
      00011F 08               [12]  327 	inc	r0
      000120 E2               [24]  328 	movx	a,@r0
      000121 F5*03            [12]  329 	mov	(_strtol_sloc1_1_0 + 2),a
      000123 85*01 82         [24]  330 	mov	dpl,_strtol_sloc1_1_0
      000126 85*02 83         [24]  331 	mov	dph,(_strtol_sloc1_1_0 + 1)
      000129 85*03 F0         [24]  332 	mov	b,(_strtol_sloc1_1_0 + 2)
      00012C 78r05            [12]  333 	mov	r0,#_strtol_nptr_65536_59
      00012E E2               [24]  334 	movx	a,@r0
      00012F 12r00r00         [24]  335 	lcall	__gptrput
      000132 A3               [24]  336 	inc	dptr
      000133 08               [12]  337 	inc	r0
      000134 E2               [24]  338 	movx	a,@r0
      000135 12r00r00         [24]  339 	lcall	__gptrput
      000138 A3               [24]  340 	inc	dptr
      000139 08               [12]  341 	inc	r0
      00013A E2               [24]  342 	movx	a,@r0
      00013B 12r00r00         [24]  343 	lcall	__gptrput
      00013E                        344 00115$:
                                    345 ;	strtol.c:73: return (0);
      00013E 90 00 00         [24]  346 	mov	dptr,#(0x00&0x00ff)
      000141 E4               [12]  347 	clr	a
      000142 F5 F0            [12]  348 	mov	b,a
      000144 22               [24]  349 	ret
      000145                        350 00117$:
                                    351 ;	strtol.c:76: if (endptr)
      000145 78r00            [12]  352 	mov	r0,#_strtol_PARM_2
      000147 E2               [24]  353 	movx	a,@r0
      000148 F5 F0            [12]  354 	mov	b,a
      00014A 08               [12]  355 	inc	r0
      00014B E2               [24]  356 	movx	a,@r0
      00014C 45 F0            [12]  357 	orl	a,b
      00014E 60 22            [24]  358 	jz	00119$
                                    359 ;	strtol.c:77: *endptr = rptr;
      000150 78r00            [12]  360 	mov	r0,#_strtol_PARM_2
      000152 E2               [24]  361 	movx	a,@r0
      000153 FD               [12]  362 	mov	r5,a
      000154 08               [12]  363 	inc	r0
      000155 E2               [24]  364 	movx	a,@r0
      000156 FE               [12]  365 	mov	r6,a
      000157 08               [12]  366 	inc	r0
      000158 E2               [24]  367 	movx	a,@r0
      000159 FF               [12]  368 	mov	r7,a
      00015A 8D 82            [24]  369 	mov	dpl,r5
      00015C 8E 83            [24]  370 	mov	dph,r6
      00015E 8F F0            [24]  371 	mov	b,r7
      000160 78r08            [12]  372 	mov	r0,#_strtol_rptr_65536_60
      000162 E2               [24]  373 	movx	a,@r0
      000163 12r00r00         [24]  374 	lcall	__gptrput
      000166 A3               [24]  375 	inc	dptr
      000167 08               [12]  376 	inc	r0
      000168 E2               [24]  377 	movx	a,@r0
      000169 12r00r00         [24]  378 	lcall	__gptrput
      00016C A3               [24]  379 	inc	dptr
      00016D 08               [12]  380 	inc	r0
      00016E E2               [24]  381 	movx	a,@r0
      00016F 12r00r00         [24]  382 	lcall	__gptrput
      000172                        383 00119$:
                                    384 ;	strtol.c:80: if (!neg && u > LONG_MAX)
      000172 78r0F            [12]  385 	mov	r0,#_strtol_neg_65536_60
      000174 E2               [24]  386 	movx	a,@r0
      000175 70 35            [24]  387 	jnz	00124$
      000177 78r0B            [12]  388 	mov	r0,#_strtol_u_65536_60
      000179 C3               [12]  389 	clr	c
      00017A E2               [24]  390 	movx	a,@r0
      00017B F5 F0            [12]  391 	mov	b,a
      00017D 74 FF            [12]  392 	mov	a,#0xff
      00017F 95 F0            [12]  393 	subb	a,b
      000181 08               [12]  394 	inc	r0
      000182 E2               [24]  395 	movx	a,@r0
      000183 F5 F0            [12]  396 	mov	b,a
      000185 74 FF            [12]  397 	mov	a,#0xff
      000187 95 F0            [12]  398 	subb	a,b
      000189 08               [12]  399 	inc	r0
      00018A E2               [24]  400 	movx	a,@r0
      00018B F5 F0            [12]  401 	mov	b,a
      00018D 74 FF            [12]  402 	mov	a,#0xff
      00018F 95 F0            [12]  403 	subb	a,b
      000191 08               [12]  404 	inc	r0
      000192 E2               [24]  405 	movx	a,@r0
      000193 F5 F0            [12]  406 	mov	b,a
      000195 74 7F            [12]  407 	mov	a,#0x7f
      000197 95 F0            [12]  408 	subb	a,b
      000199 50 11            [24]  409 	jnc	00124$
                                    410 ;	strtol.c:82: errno = ERANGE;
      00019B 78r00            [12]  411 	mov	r0,#_errno
      00019D 74 22            [12]  412 	mov	a,#0x22
      00019F F2               [24]  413 	movx	@r0,a
      0001A0 E4               [12]  414 	clr	a
      0001A1 08               [12]  415 	inc	r0
      0001A2 F2               [24]  416 	movx	@r0,a
                                    417 ;	strtol.c:83: return (LONG_MAX);
      0001A3 90 FF FF         [24]  418 	mov	dptr,#0xffff
      0001A6 75 F0 FF         [24]  419 	mov	b,#0xff
      0001A9 74 7F            [12]  420 	mov	a,#0x7f
      0001AB 22               [24]  421 	ret
      0001AC                        422 00124$:
                                    423 ;	strtol.c:85: else if (neg && u > -LONG_MIN)
      0001AC 78r0F            [12]  424 	mov	r0,#_strtol_neg_65536_60
      0001AE E2               [24]  425 	movx	a,@r0
      0001AF 60 31            [24]  426 	jz	00125$
      0001B1 78r0B            [12]  427 	mov	r0,#_strtol_u_65536_60
      0001B3 C3               [12]  428 	clr	c
      0001B4 E2               [24]  429 	movx	a,@r0
      0001B5 F5 F0            [12]  430 	mov	b,a
      0001B7 E4               [12]  431 	clr	a
      0001B8 95 F0            [12]  432 	subb	a,b
      0001BA 08               [12]  433 	inc	r0
      0001BB E2               [24]  434 	movx	a,@r0
      0001BC F5 F0            [12]  435 	mov	b,a
      0001BE E4               [12]  436 	clr	a
      0001BF 95 F0            [12]  437 	subb	a,b
      0001C1 08               [12]  438 	inc	r0
      0001C2 E2               [24]  439 	movx	a,@r0
      0001C3 F5 F0            [12]  440 	mov	b,a
      0001C5 E4               [12]  441 	clr	a
      0001C6 95 F0            [12]  442 	subb	a,b
      0001C8 08               [12]  443 	inc	r0
      0001C9 E2               [24]  444 	movx	a,@r0
      0001CA F5 F0            [12]  445 	mov	b,a
      0001CC 74 80            [12]  446 	mov	a,#0x80
      0001CE 95 F0            [12]  447 	subb	a,b
      0001D0 50 10            [24]  448 	jnc	00125$
                                    449 ;	strtol.c:87: errno = ERANGE;
      0001D2 78r00            [12]  450 	mov	r0,#_errno
      0001D4 74 22            [12]  451 	mov	a,#0x22
      0001D6 F2               [24]  452 	movx	@r0,a
      0001D7 E4               [12]  453 	clr	a
      0001D8 08               [12]  454 	inc	r0
      0001D9 F2               [24]  455 	movx	@r0,a
                                    456 ;	strtol.c:88: return (LONG_MIN);
      0001DA 90 00 00         [24]  457 	mov	dptr,#0x0000
      0001DD F5 F0            [12]  458 	mov	b,a
      0001DF 74 80            [12]  459 	mov	a,#0x80
      0001E1 22               [24]  460 	ret
      0001E2                        461 00125$:
                                    462 ;	strtol.c:91: return (neg ? -u : u);
      0001E2 78r0F            [12]  463 	mov	r0,#_strtol_neg_65536_60
      0001E4 E2               [24]  464 	movx	a,@r0
      0001E5 60 1C            [24]  465 	jz	00137$
      0001E7 78r0B            [12]  466 	mov	r0,#_strtol_u_65536_60
      0001E9 E2               [24]  467 	movx	a,@r0
      0001EA D3               [12]  468 	setb	c
      0001EB F4               [12]  469 	cpl	a
      0001EC 34 00            [12]  470 	addc	a,#0x00
      0001EE FC               [12]  471 	mov	r4,a
      0001EF 08               [12]  472 	inc	r0
      0001F0 E2               [24]  473 	movx	a,@r0
      0001F1 F4               [12]  474 	cpl	a
      0001F2 34 00            [12]  475 	addc	a,#0x00
      0001F4 FD               [12]  476 	mov	r5,a
      0001F5 08               [12]  477 	inc	r0
      0001F6 E2               [24]  478 	movx	a,@r0
      0001F7 F4               [12]  479 	cpl	a
      0001F8 34 00            [12]  480 	addc	a,#0x00
      0001FA FE               [12]  481 	mov	r6,a
      0001FB 08               [12]  482 	inc	r0
      0001FC E2               [24]  483 	movx	a,@r0
      0001FD F4               [12]  484 	cpl	a
      0001FE 34 00            [12]  485 	addc	a,#0x00
      000200 FF               [12]  486 	mov	r7,a
      000201 80 0D            [24]  487 	sjmp	00138$
      000203                        488 00137$:
      000203 78r0B            [12]  489 	mov	r0,#_strtol_u_65536_60
      000205 E2               [24]  490 	movx	a,@r0
      000206 FC               [12]  491 	mov	r4,a
      000207 08               [12]  492 	inc	r0
      000208 E2               [24]  493 	movx	a,@r0
      000209 FD               [12]  494 	mov	r5,a
      00020A 08               [12]  495 	inc	r0
      00020B E2               [24]  496 	movx	a,@r0
      00020C FE               [12]  497 	mov	r6,a
      00020D 08               [12]  498 	inc	r0
      00020E E2               [24]  499 	movx	a,@r0
      00020F FF               [12]  500 	mov	r7,a
      000210                        501 00138$:
      000210 8C 82            [24]  502 	mov	dpl,r4
      000212 8D 83            [24]  503 	mov	dph,r5
      000214 8E F0            [24]  504 	mov	b,r6
      000216 EF               [12]  505 	mov	a,r7
                                    506 ;	strtol.c:92: }
      000217 22               [24]  507 	ret
                                    508 	.area CSEG    (CODE)
                                    509 	.area CONST   (CODE)
                                    510 	.area XINIT   (CODE)
                                    511 	.area CABS    (ABS,CODE)
