                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strpbrk
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strpbrk_PARM_2
                                     13 	.globl _strpbrk
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
      000000                         53 _strpbrk_PARM_2:
      000000                         54 	.ds 3
      000003                         55 _strpbrk_string_65536_26:
      000003                         56 	.ds 3
      000006                         57 _strpbrk_ret_65536_27:
      000006                         58 	.ds 3
                                     59 ;--------------------------------------------------------
                                     60 ; uninitialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; initialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function 'strpbrk'
                                     99 ;------------------------------------------------------------
                                    100 ;ch                        Allocated to registers r3 
                                    101 ;------------------------------------------------------------
                                    102 ;	_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                                    103 ;	-----------------------------------------
                                    104 ;	 function strpbrk
                                    105 ;	-----------------------------------------
      000000                        106 _strpbrk:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 AF F0            [24]  115 	mov	r7,b
      000002 AE 83            [24]  116 	mov	r6,dph
      000004 E5 82            [12]  117 	mov	a,dpl
      000006 78r03            [12]  118 	mov	r0,#_strpbrk_string_65536_26
      000008 F2               [24]  119 	movx	@r0,a
      000009 EE               [12]  120 	mov	a,r6
      00000A 08               [12]  121 	inc	r0
      00000B F2               [24]  122 	movx	@r0,a
      00000C EF               [12]  123 	mov	a,r7
      00000D 08               [12]  124 	inc	r0
      00000E F2               [24]  125 	movx	@r0,a
                                    126 ;	_strpbrk.c:33: char *ret = NULL;
      00000F 78r06            [12]  127 	mov	r0,#_strpbrk_ret_65536_27
      000011 E4               [12]  128 	clr	a
      000012 F2               [24]  129 	movx	@r0,a
      000013 08               [12]  130 	inc	r0
      000014 F2               [24]  131 	movx	@r0,a
      000015 08               [12]  132 	inc	r0
      000016 F2               [24]  133 	movx	@r0,a
                                    134 ;	_strpbrk.c:36: while (ch = *control) {
      000017 78r00            [12]  135 	mov	r0,#_strpbrk_PARM_2
      000019 E2               [24]  136 	movx	a,@r0
      00001A FD               [12]  137 	mov	r5,a
      00001B 08               [12]  138 	inc	r0
      00001C E2               [24]  139 	movx	a,@r0
      00001D FE               [12]  140 	mov	r6,a
      00001E 08               [12]  141 	inc	r0
      00001F E2               [24]  142 	movx	a,@r0
      000020 FF               [12]  143 	mov	r7,a
      000021                        144 00105$:
      000021 8D 82            [24]  145 	mov	dpl,r5
      000023 8E 83            [24]  146 	mov	dph,r6
      000025 8F F0            [24]  147 	mov	b,r7
      000027 12r00r00         [24]  148 	lcall	__gptrget
      00002A FB               [12]  149 	mov	r3,a
      00002B 60 64            [24]  150 	jz	00107$
                                    151 ;	_strpbrk.c:37: char * p = strchr(string, ch);
      00002D 78r00            [12]  152 	mov	r0,#_strchr_PARM_2
      00002F EB               [12]  153 	mov	a,r3
      000030 F2               [24]  154 	movx	@r0,a
      000031 78r03            [12]  155 	mov	r0,#_strpbrk_string_65536_26
      000033 E2               [24]  156 	movx	a,@r0
      000034 F5 82            [12]  157 	mov	dpl,a
      000036 08               [12]  158 	inc	r0
      000037 E2               [24]  159 	movx	a,@r0
      000038 F5 83            [12]  160 	mov	dph,a
      00003A 08               [12]  161 	inc	r0
      00003B E2               [24]  162 	movx	a,@r0
      00003C F5 F0            [12]  163 	mov	b,a
      00003E C0 07            [24]  164 	push	ar7
      000040 C0 06            [24]  165 	push	ar6
      000042 C0 05            [24]  166 	push	ar5
      000044 12r00r00         [24]  167 	lcall	_strchr
      000047 AA 82            [24]  168 	mov	r2,dpl
      000049 AB 83            [24]  169 	mov	r3,dph
      00004B AC F0            [24]  170 	mov	r4,b
      00004D D0 05            [24]  171 	pop	ar5
      00004F D0 06            [24]  172 	pop	ar6
      000051 D0 07            [24]  173 	pop	ar7
                                    174 ;	_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
      000053 EA               [12]  175 	mov	a,r2
      000054 4B               [12]  176 	orl	a,r3
      000055 60 33            [24]  177 	jz	00102$
      000057 78r06            [12]  178 	mov	r0,#_strpbrk_ret_65536_27
      000059 E2               [24]  179 	movx	a,@r0
      00005A F5 F0            [12]  180 	mov	b,a
      00005C 08               [12]  181 	inc	r0
      00005D E2               [24]  182 	movx	a,@r0
      00005E 45 F0            [12]  183 	orl	a,b
      000060 60 1E            [24]  184 	jz	00101$
      000062 78r06            [12]  185 	mov	r0,#_strpbrk_ret_65536_27
      000064 E2               [24]  186 	movx	a,@r0
      000065 C0 E0            [24]  187 	push	acc
      000067 08               [12]  188 	inc	r0
      000068 E2               [24]  189 	movx	a,@r0
      000069 C0 E0            [24]  190 	push	acc
      00006B 08               [12]  191 	inc	r0
      00006C E2               [24]  192 	movx	a,@r0
      00006D C0 E0            [24]  193 	push	acc
      00006F 8A 82            [24]  194 	mov	dpl,r2
      000071 8B 83            [24]  195 	mov	dph,r3
      000073 8C F0            [24]  196 	mov	b,r4
      000075 12r00r00         [24]  197 	lcall	___gptr_cmp
      000078 15 81            [12]  198 	dec	sp
      00007A 15 81            [12]  199 	dec	sp
      00007C 15 81            [12]  200 	dec	sp
      00007E 50 0A            [24]  201 	jnc	00102$
      000080                        202 00101$:
                                    203 ;	_strpbrk.c:39: ret = p;
      000080 78r06            [12]  204 	mov	r0,#_strpbrk_ret_65536_27
      000082 EA               [12]  205 	mov	a,r2
      000083 F2               [24]  206 	movx	@r0,a
      000084 EB               [12]  207 	mov	a,r3
      000085 08               [12]  208 	inc	r0
      000086 F2               [24]  209 	movx	@r0,a
      000087 EC               [12]  210 	mov	a,r4
      000088 08               [12]  211 	inc	r0
      000089 F2               [24]  212 	movx	@r0,a
      00008A                        213 00102$:
                                    214 ;	_strpbrk.c:41: control++;
      00008A 0D               [12]  215 	inc	r5
      00008B BD 00 93         [24]  216 	cjne	r5,#0x00,00105$
      00008E 0E               [12]  217 	inc	r6
      00008F 80 90            [24]  218 	sjmp	00105$
      000091                        219 00107$:
                                    220 ;	_strpbrk.c:44: return (ret);
      000091 78r06            [12]  221 	mov	r0,#_strpbrk_ret_65536_27
      000093 E2               [24]  222 	movx	a,@r0
      000094 F5 82            [12]  223 	mov	dpl,a
      000096 08               [12]  224 	inc	r0
      000097 E2               [24]  225 	movx	a,@r0
      000098 F5 83            [12]  226 	mov	dph,a
      00009A 08               [12]  227 	inc	r0
      00009B E2               [24]  228 	movx	a,@r0
      00009C F5 F0            [12]  229 	mov	b,a
                                    230 ;	_strpbrk.c:45: }
      00009E 22               [24]  231 	ret
                                    232 	.area CSEG    (CODE)
                                    233 	.area CONST   (CODE)
                                    234 	.area XINIT   (CODE)
                                    235 	.area CABS    (ABS,CODE)
