                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module logf
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _logf
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
      000000                         31 _logf_tmp:
      000000                         32 	.ds 4
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; uninitialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; initialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'logf'
                                     93 ;------------------------------------------------------------
                                     94 ;	logf.c:47: float logf(float x)
                                     95 ;	-----------------------------------------
                                     96 ;	 function logf
                                     97 ;	-----------------------------------------
      000000                         98 _logf:
                           000007    99 	ar7 = 0x07
                           000006   100 	ar6 = 0x06
                           000005   101 	ar5 = 0x05
                           000004   102 	ar4 = 0x04
                           000003   103 	ar3 = 0x03
                           000002   104 	ar2 = 0x02
                           000001   105 	ar1 = 0x01
                           000000   106 	ar0 = 0x00
                                    107 ;	logf.c:200: __endasm;
      000000 12r00r00         [24]  108 	lcall	fsgetarg
      000003                        109 logf_neg_check:
      000003 30 D1 06         [24]  110 	jnb	psw.1, logf_zero_check
      000006 12r00r00         [24]  111 	lcall	fs_return_nan
      000009 02r00rC8         [24]  112 	ljmp	logf_exit
      00000C                        113 logf_zero_check:
      00000C BC 00 08         [24]  114 	cjne	r4, #0, logf_ok
      00000F D2 D1            [12]  115 	setb	psw.1
      000011 12r00r00         [24]  116 	lcall	fs_return_inf
      000014 02r00rC8         [24]  117 	ljmp	logf_exit
      000017                        118 logf_ok:
      000017 C0 82            [24]  119 	push	dpl
      000019 74 03            [12]  120 	mov	a, #3
      00001B 79 00            [12]  121 	mov	r1, #0
      00001D 12r00r00         [24]  122 	lcall	fs_rshift_a
      000020 E4               [12]  123 	clr	a
      000021 F5*00            [12]  124 	mov	(_logf_tmp + 0), a
      000023 F5*01            [12]  125 	mov	(_logf_tmp + 1), a
      000025 F5*02            [12]  126 	mov	(_logf_tmp + 2), a
      000027 F5*03            [12]  127 	mov	(_logf_tmp + 3), a
      000029 90r00r00         [24]  128 	mov	dptr, #__fs_natural_log_table
      00002C F8               [12]  129 	mov	r0, a
      00002D                        130 logf_cordic_loop:
      00002D 8C 07            [24]  131 	mov	ar7, r4
      00002F 8B 06            [24]  132 	mov	ar6, r3
      000031 8A 05            [24]  133 	mov	ar5, r2
      000033 89 F0            [24]  134 	mov	b, r1
      000035 E8               [12]  135 	mov	a, r0
      000036 12r00r00         [24]  136 	lcall	__fs_cordic_rshift_r765_unsigned
      000039 E9               [12]  137 	mov	a, r1
      00003A 25 F0            [12]  138 	add	a, b
      00003C EA               [12]  139 	mov	a, r2
      00003D 3D               [12]  140 	addc	a, r5
      00003E EB               [12]  141 	mov	a, r3
      00003F 3E               [12]  142 	addc	a, r6
      000040 EC               [12]  143 	mov	a, r4
      000041 3F               [12]  144 	addc	a, r7
      000042 54 E0            [12]  145 	anl	a, #0xE0
      000044 70 28            [24]  146 	jnz	logf_cordic_skip
      000046 E9               [12]  147 	mov	a, r1
      000047 25 F0            [12]  148 	add	a, b
      000049 F9               [12]  149 	mov	r1, a
      00004A EA               [12]  150 	mov	a, r2
      00004B 3D               [12]  151 	addc	a, r5
      00004C FA               [12]  152 	mov	r2, a
      00004D EB               [12]  153 	mov	a, r3
      00004E 3E               [12]  154 	addc	a, r6
      00004F FB               [12]  155 	mov	r3, a
      000050 EC               [12]  156 	mov	a, r4
      000051 3F               [12]  157 	addc	a, r7
      000052 FC               [12]  158 	mov	r4, a
      000053 E4               [12]  159 	clr	a
      000054 93               [24]  160 	movc	a, @a+dptr
      000055 25*00            [12]  161 	add	a, (_logf_tmp + 0)
      000057 F5*00            [12]  162 	mov	(_logf_tmp + 0), a
      000059 74 01            [12]  163 	mov	a, #1
      00005B 93               [24]  164 	movc	a, @a+dptr
      00005C 35*01            [12]  165 	addc	a, (_logf_tmp + 1)
      00005E F5*01            [12]  166 	mov	(_logf_tmp + 1), a
      000060 74 02            [12]  167 	mov	a, #2
      000062 93               [24]  168 	movc	a, @a+dptr
      000063 35*02            [12]  169 	addc	a, (_logf_tmp + 2)
      000065 F5*02            [12]  170 	mov	(_logf_tmp + 2), a
      000067 74 03            [12]  171 	mov	a, #3
      000069 93               [24]  172 	movc	a, @a+dptr
      00006A 35*03            [12]  173 	addc	a, (_logf_tmp + 3)
      00006C F5*03            [12]  174 	mov	(_logf_tmp + 3), a
      00006E                        175 logf_cordic_skip:
      00006E A3               [24]  176 	inc	dptr
      00006F A3               [24]  177 	inc	dptr
      000070 A3               [24]  178 	inc	dptr
      000071 A3               [24]  179 	inc	dptr
      000072 08               [12]  180 	inc	r0
      000073 B8 1E B7         [24]  181 	cjne	r0, #30, logf_cordic_loop
      000076 AC*03            [24]  182 	mov	r4, (_logf_tmp + 3)
      000078 AB*02            [24]  183 	mov	r3, (_logf_tmp + 2)
      00007A AA*01            [24]  184 	mov	r2, (_logf_tmp + 1)
      00007C A9*00            [24]  185 	mov	r1, (_logf_tmp + 0)
      00007E 75 82 81         [24]  186 	mov	dpl, #129
      000081 D2 D1            [12]  187 	setb	psw.1
      000083 12r00r00         [24]  188 	lcall	fs_normalize_a
      000086 D0 E0            [24]  189 	pop	acc
      000088 B4 7E 05         [24]  190 	cjne	a, #126, logf_exponent
      00008B 12r00r00         [24]  191 	lcall	fs_zerocheck_return
      00008E 80 38            [24]  192 	sjmp	logf_exit
      000090                        193 logf_exponent:
      000090 40 06            [24]  194 	jc	logf_exp_neg
      000092                        195 logf_exp_pos:
      000092 24 82            [12]  196 	add	a, #130
      000094 C2 D5            [12]  197 	clr	psw.5
      000096 80 05            [24]  198 	sjmp	logf_exp_scale
      000098                        199 logf_exp_neg:
      000098 F4               [12]  200 	cpl	a
      000099 24 7F            [12]  201 	add	a, #127
      00009B D2 D5            [12]  202 	setb	psw.5
      00009D                        203 logf_exp_scale:
      00009D F8               [12]  204 	mov	r0, a
      00009E 12r00r00         [24]  205 	lcall	fs_swap_a_b
      0000A1 74 18            [12]  206 	mov	a, #0x18
      0000A3 88 F0            [24]  207 	mov	b, r0
      0000A5 A4               [48]  208 	mul	ab
      0000A6 F9               [12]  209 	mov	r1, a
      0000A7 AA F0            [24]  210 	mov	r2, b
      0000A9 74 B1            [12]  211 	mov	a, #0xB1
      0000AB 88 F0            [24]  212 	mov	b, r0
      0000AD A4               [48]  213 	mul	ab
      0000AE FB               [12]  214 	mov	r3, a
      0000AF AC F0            [24]  215 	mov	r4, b
      0000B1 74 72            [12]  216 	mov	a, #0x72
      0000B3 88 F0            [24]  217 	mov	b, r0
      0000B5 A4               [48]  218 	mul	ab
      0000B6 2A               [12]  219 	add	a, r2
      0000B7 FA               [12]  220 	mov	r2, a
      0000B8 E5 F0            [12]  221 	mov	a, b
      0000BA 3B               [12]  222 	addc	a, r3
      0000BB FB               [12]  223 	mov	r3, a
      0000BC E4               [12]  224 	clr	a
      0000BD 3C               [12]  225 	addc	a, r4
      0000BE FC               [12]  226 	mov	r4, a
      0000BF 75 82 86         [24]  227 	mov	dpl, #134
      0000C2 12r00r00         [24]  228 	lcall	fs_normalize_a
      0000C5 12r00r00         [24]  229 	lcall	fsadd_direct_entry
      0000C8                        230 logf_exit:
                                    231 ;	logf.c:202: }
      0000C8 22               [24]  232 	ret
                                    233 	.area CSEG    (CODE)
                                    234 	.area CONST   (CODE)
                                    235 	.area XINIT   (CODE)
                                    236 	.area CABS    (ABS,CODE)
