                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtoc32
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbrtowc
                                     12 	.globl _mbrtoc32_PARM_4
                                     13 	.globl _mbrtoc32_PARM_3
                                     14 	.globl _mbrtoc32_PARM_2
                                     15 	.globl _mbrtoc32
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
      000000                         55 _mbrtoc32_PARM_2:
      000000                         56 	.ds 3
      000003                         57 _mbrtoc32_PARM_3:
      000003                         58 	.ds 2
      000005                         59 _mbrtoc32_PARM_4:
      000005                         60 	.ds 3
      000008                         61 _mbrtoc32_wc_65536_16:
      000008                         62 	.ds 4
      00000C                         63 _mbrtoc32_sps_65536_16:
      00000C                         64 	.ds 3
                                     65 ;--------------------------------------------------------
                                     66 ; uninitialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XSEG    (XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; absolute external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XABS    (ABS,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; initialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XISEG   (XDATA)
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT0 (CODE)
                                     79 	.area GSINIT1 (CODE)
                                     80 	.area GSINIT2 (CODE)
                                     81 	.area GSINIT3 (CODE)
                                     82 	.area GSINIT4 (CODE)
                                     83 	.area GSINIT5 (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area CSEG    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'mbrtoc32'
                                    105 ;------------------------------------------------------------
                                    106 ;	mbrtoc32.c:34: size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    107 ;	-----------------------------------------
                                    108 ;	 function mbrtoc32
                                    109 ;	-----------------------------------------
      000000                        110 _mbrtoc32:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 AD 82            [24]  119 	mov	r5,dpl
      000002 AE 83            [24]  120 	mov	r6,dph
      000004 AF F0            [24]  121 	mov	r7,b
                                    122 ;	mbrtoc32.c:40: if(!ps)
      000006 78r05            [12]  123 	mov	r0,#_mbrtoc32_PARM_4
      000008 E2               [24]  124 	movx	a,@r0
      000009 F5 F0            [12]  125 	mov	b,a
      00000B 08               [12]  126 	inc	r0
      00000C E2               [24]  127 	movx	a,@r0
      00000D 45 F0            [12]  128 	orl	a,b
      00000F 70 0C            [24]  129 	jnz	00102$
                                    130 ;	mbrtoc32.c:41: ps = &sps;
      000011 78r05            [12]  131 	mov	r0,#_mbrtoc32_PARM_4
      000013 74r0C            [12]  132 	mov	a,#_mbrtoc32_sps_65536_16
      000015 F2               [24]  133 	movx	@r0,a
      000016 E4               [12]  134 	clr	a
      000017 08               [12]  135 	inc	r0
      000018 F2               [24]  136 	movx	@r0,a
      000019 74 60            [12]  137 	mov	a,#0x60
      00001B 08               [12]  138 	inc	r0
      00001C F2               [24]  139 	movx	@r0,a
      00001D                        140 00102$:
                                    141 ;	mbrtoc32.c:43: if(!pc32)
      00001D ED               [12]  142 	mov	a,r5
      00001E 4E               [12]  143 	orl	a,r6
      00001F 70 2F            [24]  144 	jnz	00104$
                                    145 ;	mbrtoc32.c:44: return(mbrtowc(0, s, n, ps));
      000021 78r00            [12]  146 	mov	r0,#_mbrtoc32_PARM_2
      000023 79r00            [12]  147 	mov	r1,#_mbrtowc_PARM_2
      000025 E2               [24]  148 	movx	a,@r0
      000026 F3               [24]  149 	movx	@r1,a
      000027 08               [12]  150 	inc	r0
      000028 E2               [24]  151 	movx	a,@r0
      000029 09               [12]  152 	inc	r1
      00002A F3               [24]  153 	movx	@r1,a
      00002B 08               [12]  154 	inc	r0
      00002C E2               [24]  155 	movx	a,@r0
      00002D 09               [12]  156 	inc	r1
      00002E F3               [24]  157 	movx	@r1,a
      00002F 78r03            [12]  158 	mov	r0,#_mbrtoc32_PARM_3
      000031 79r00            [12]  159 	mov	r1,#_mbrtowc_PARM_3
      000033 E2               [24]  160 	movx	a,@r0
      000034 F3               [24]  161 	movx	@r1,a
      000035 08               [12]  162 	inc	r0
      000036 E2               [24]  163 	movx	a,@r0
      000037 09               [12]  164 	inc	r1
      000038 F3               [24]  165 	movx	@r1,a
      000039 78r05            [12]  166 	mov	r0,#_mbrtoc32_PARM_4
      00003B 79r00            [12]  167 	mov	r1,#_mbrtowc_PARM_4
      00003D E2               [24]  168 	movx	a,@r0
      00003E F3               [24]  169 	movx	@r1,a
      00003F 08               [12]  170 	inc	r0
      000040 E2               [24]  171 	movx	a,@r0
      000041 09               [12]  172 	inc	r1
      000042 F3               [24]  173 	movx	@r1,a
      000043 08               [12]  174 	inc	r0
      000044 E2               [24]  175 	movx	a,@r0
      000045 09               [12]  176 	inc	r1
      000046 F3               [24]  177 	movx	@r1,a
      000047 90 00 00         [24]  178 	mov	dptr,#0x0000
      00004A 75 F0 00         [24]  179 	mov	b,#0x00
      00004D 02r00r00         [24]  180 	ljmp	_mbrtowc
      000050                        181 00104$:
                                    182 ;	mbrtoc32.c:46: ret = mbrtowc(&wc, s, n, ps);
      000050 78r00            [12]  183 	mov	r0,#_mbrtoc32_PARM_2
      000052 79r00            [12]  184 	mov	r1,#_mbrtowc_PARM_2
      000054 E2               [24]  185 	movx	a,@r0
      000055 F3               [24]  186 	movx	@r1,a
      000056 08               [12]  187 	inc	r0
      000057 E2               [24]  188 	movx	a,@r0
      000058 09               [12]  189 	inc	r1
      000059 F3               [24]  190 	movx	@r1,a
      00005A 08               [12]  191 	inc	r0
      00005B E2               [24]  192 	movx	a,@r0
      00005C 09               [12]  193 	inc	r1
      00005D F3               [24]  194 	movx	@r1,a
      00005E 78r03            [12]  195 	mov	r0,#_mbrtoc32_PARM_3
      000060 79r00            [12]  196 	mov	r1,#_mbrtowc_PARM_3
      000062 E2               [24]  197 	movx	a,@r0
      000063 F3               [24]  198 	movx	@r1,a
      000064 08               [12]  199 	inc	r0
      000065 E2               [24]  200 	movx	a,@r0
      000066 09               [12]  201 	inc	r1
      000067 F3               [24]  202 	movx	@r1,a
      000068 78r05            [12]  203 	mov	r0,#_mbrtoc32_PARM_4
      00006A 79r00            [12]  204 	mov	r1,#_mbrtowc_PARM_4
      00006C E2               [24]  205 	movx	a,@r0
      00006D F3               [24]  206 	movx	@r1,a
      00006E 08               [12]  207 	inc	r0
      00006F E2               [24]  208 	movx	a,@r0
      000070 09               [12]  209 	inc	r1
      000071 F3               [24]  210 	movx	@r1,a
      000072 08               [12]  211 	inc	r0
      000073 E2               [24]  212 	movx	a,@r0
      000074 09               [12]  213 	inc	r1
      000075 F3               [24]  214 	movx	@r1,a
      000076 90r00r08         [24]  215 	mov	dptr,#_mbrtoc32_wc_65536_16
      000079 75 F0 60         [24]  216 	mov	b,#0x60
      00007C C0 07            [24]  217 	push	ar7
      00007E C0 06            [24]  218 	push	ar6
      000080 C0 05            [24]  219 	push	ar5
      000082 12r00r00         [24]  220 	lcall	_mbrtowc
      000085 AB 82            [24]  221 	mov	r3,dpl
      000087 AC 83            [24]  222 	mov	r4,dph
      000089 D0 05            [24]  223 	pop	ar5
      00008B D0 06            [24]  224 	pop	ar6
      00008D D0 07            [24]  225 	pop	ar7
                                    226 ;	mbrtoc32.c:48: if(ret <= MB_LEN_MAX)
      00008F C3               [12]  227 	clr	c
      000090 74 04            [12]  228 	mov	a,#0x04
      000092 9B               [12]  229 	subb	a,r3
      000093 E4               [12]  230 	clr	a
      000094 9C               [12]  231 	subb	a,r4
      000095 40 1E            [24]  232 	jc	00106$
                                    233 ;	mbrtoc32.c:49: *pc32 = wc;
      000097 8D 82            [24]  234 	mov	dpl,r5
      000099 8E 83            [24]  235 	mov	dph,r6
      00009B 8F F0            [24]  236 	mov	b,r7
      00009D 78r08            [12]  237 	mov	r0,#_mbrtoc32_wc_65536_16
      00009F E2               [24]  238 	movx	a,@r0
      0000A0 12r00r00         [24]  239 	lcall	__gptrput
      0000A3 A3               [24]  240 	inc	dptr
      0000A4 08               [12]  241 	inc	r0
      0000A5 E2               [24]  242 	movx	a,@r0
      0000A6 12r00r00         [24]  243 	lcall	__gptrput
      0000A9 A3               [24]  244 	inc	dptr
      0000AA 08               [12]  245 	inc	r0
      0000AB E2               [24]  246 	movx	a,@r0
      0000AC 12r00r00         [24]  247 	lcall	__gptrput
      0000AF A3               [24]  248 	inc	dptr
      0000B0 08               [12]  249 	inc	r0
      0000B1 E2               [24]  250 	movx	a,@r0
      0000B2 12r00r00         [24]  251 	lcall	__gptrput
      0000B5                        252 00106$:
                                    253 ;	mbrtoc32.c:51: return(ret);
      0000B5 8B 82            [24]  254 	mov	dpl,r3
      0000B7 8C 83            [24]  255 	mov	dph,r4
                                    256 ;	mbrtoc32.c:52: }
      0000B9 22               [24]  257 	ret
                                    258 	.area CSEG    (CODE)
                                    259 	.area CONST   (CODE)
                                    260 	.area XINIT   (CODE)
                                    261 	.area CABS    (ABS,CODE)
