                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memmove
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memmove_PARM_3
                                     12 	.globl _memmove_PARM_2
                                     13 	.globl _memmove
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _memmove_sloc0_1_0:
      000000                         38 	.ds 3
      000003                         39 _memmove_sloc1_1_0:
      000003                         40 	.ds 3
      000006                         41 _memmove_sloc2_1_0:
      000006                         42 	.ds 3
                                     43 ;--------------------------------------------------------
                                     44 ; indirectly addressable internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area ISEG    (DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; absolute internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area IABS    (ABS,DATA)
                                     51 	.area IABS    (ABS,DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; bit data
                                     54 ;--------------------------------------------------------
                                     55 	.area BSEG    (BIT)
                                     56 ;--------------------------------------------------------
                                     57 ; paged external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area PSEG    (PAG,XDATA)
      000000                         60 _memmove_PARM_2:
      000000                         61 	.ds 3
      000003                         62 _memmove_PARM_3:
      000003                         63 	.ds 2
      000005                         64 _memmove_dst_65536_26:
      000005                         65 	.ds 3
      000008                         66 _memmove_c_65536_27:
      000008                         67 	.ds 2
                                     68 ;--------------------------------------------------------
                                     69 ; uninitialized external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XSEG    (XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; absolute external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XABS    (ABS,XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; initialized external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XISEG   (XDATA)
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT0 (CODE)
                                     82 	.area GSINIT1 (CODE)
                                     83 	.area GSINIT2 (CODE)
                                     84 	.area GSINIT3 (CODE)
                                     85 	.area GSINIT4 (CODE)
                                     86 	.area GSINIT5 (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area CSEG    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 	.area GSFINAL (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area HOME    (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area CSEG    (CODE)
                                    106 ;------------------------------------------------------------
                                    107 ;Allocation info for local variables in function 'memmove'
                                    108 ;------------------------------------------------------------
                                    109 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                                    110 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                                    111 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                                    112 ;------------------------------------------------------------
                                    113 ;	_memmove.c:35: void *memmove (void *dst, const void *src, size_t size)
                                    114 ;	-----------------------------------------
                                    115 ;	 function memmove
                                    116 ;	-----------------------------------------
      000000                        117 _memmove:
                           000007   118 	ar7 = 0x07
                           000006   119 	ar6 = 0x06
                           000005   120 	ar5 = 0x05
                           000004   121 	ar4 = 0x04
                           000003   122 	ar3 = 0x03
                           000002   123 	ar2 = 0x02
                           000001   124 	ar1 = 0x01
                           000000   125 	ar0 = 0x00
      000000 AF F0            [24]  126 	mov	r7,b
      000002 AE 83            [24]  127 	mov	r6,dph
      000004 E5 82            [12]  128 	mov	a,dpl
      000006 78r05            [12]  129 	mov	r0,#_memmove_dst_65536_26
      000008 F2               [24]  130 	movx	@r0,a
      000009 EE               [12]  131 	mov	a,r6
      00000A 08               [12]  132 	inc	r0
      00000B F2               [24]  133 	movx	@r0,a
      00000C EF               [12]  134 	mov	a,r7
      00000D 08               [12]  135 	inc	r0
      00000E F2               [24]  136 	movx	@r0,a
                                    137 ;	_memmove.c:37: size_t c = size;
      00000F 78r03            [12]  138 	mov	r0,#_memmove_PARM_3
      000011 79r08            [12]  139 	mov	r1,#_memmove_c_65536_27
      000013 E2               [24]  140 	movx	a,@r0
      000014 F3               [24]  141 	movx	@r1,a
      000015 08               [12]  142 	inc	r0
      000016 E2               [24]  143 	movx	a,@r0
      000017 09               [12]  144 	inc	r1
      000018 F3               [24]  145 	movx	@r1,a
                                    146 ;	_memmove.c:38: if (c == 0 || dst == src)
      000019 78r08            [12]  147 	mov	r0,#_memmove_c_65536_27
      00001B E2               [24]  148 	movx	a,@r0
      00001C F5 F0            [12]  149 	mov	b,a
      00001E 08               [12]  150 	inc	r0
      00001F E2               [24]  151 	movx	a,@r0
      000020 45 F0            [12]  152 	orl	a,b
      000022 60 27            [24]  153 	jz	00101$
      000024 78r05            [12]  154 	mov	r0,#_memmove_dst_65536_26
      000026 79r00            [12]  155 	mov	r1,#_memmove_PARM_2
      000028 E3               [24]  156 	movx	a,@r1
      000029 C0 E0            [24]  157 	push	acc
      00002B 09               [12]  158 	inc	r1
      00002C E3               [24]  159 	movx	a,@r1
      00002D C0 E0            [24]  160 	push	acc
      00002F 09               [12]  161 	inc	r1
      000030 E3               [24]  162 	movx	a,@r1
      000031 C0 E0            [24]  163 	push	acc
      000033 E2               [24]  164 	movx	a,@r0
      000034 F5 82            [12]  165 	mov	dpl,a
      000036 08               [12]  166 	inc	r0
      000037 E2               [24]  167 	movx	a,@r0
      000038 F5 83            [12]  168 	mov	dph,a
      00003A 08               [12]  169 	inc	r0
      00003B E2               [24]  170 	movx	a,@r0
      00003C F5 F0            [12]  171 	mov	b,a
      00003E 12r00r00         [24]  172 	lcall	___gptr_cmp
      000041 15 81            [12]  173 	dec	sp
      000043 15 81            [12]  174 	dec	sp
      000045 15 81            [12]  175 	dec	sp
      000047 60 02            [24]  176 	jz	00144$
      000049 80 0E            [24]  177 	sjmp	00102$
      00004B                        178 00144$:
      00004B                        179 00101$:
                                    180 ;	_memmove.c:39: return dst;
      00004B 78r05            [12]  181 	mov	r0,#_memmove_dst_65536_26
      00004D E2               [24]  182 	movx	a,@r0
      00004E F5 82            [12]  183 	mov	dpl,a
      000050 08               [12]  184 	inc	r0
      000051 E2               [24]  185 	movx	a,@r0
      000052 F5 83            [12]  186 	mov	dph,a
      000054 08               [12]  187 	inc	r0
      000055 E2               [24]  188 	movx	a,@r0
      000056 F5 F0            [12]  189 	mov	b,a
      000058 22               [24]  190 	ret
      000059                        191 00102$:
                                    192 ;	_memmove.c:41: char *d = dst;
      000059 78r05            [12]  193 	mov	r0,#_memmove_dst_65536_26
      00005B E2               [24]  194 	movx	a,@r0
      00005C FA               [12]  195 	mov	r2,a
      00005D 08               [12]  196 	inc	r0
      00005E E2               [24]  197 	movx	a,@r0
      00005F FE               [12]  198 	mov	r6,a
      000060 08               [12]  199 	inc	r0
      000061 E2               [24]  200 	movx	a,@r0
      000062 FF               [12]  201 	mov	r7,a
                                    202 ;	_memmove.c:42: const char *s = src;
      000063 78r00            [12]  203 	mov	r0,#_memmove_PARM_2
      000065 E2               [24]  204 	movx	a,@r0
      000066 F5*00            [12]  205 	mov	_memmove_sloc0_1_0,a
      000068 08               [12]  206 	inc	r0
      000069 E2               [24]  207 	movx	a,@r0
      00006A F5*01            [12]  208 	mov	(_memmove_sloc0_1_0 + 1),a
      00006C 08               [12]  209 	inc	r0
      00006D E2               [24]  210 	movx	a,@r0
      00006E F5*02            [12]  211 	mov	(_memmove_sloc0_1_0 + 2),a
                                    212 ;	_memmove.c:43: if (s < d) {
      000070 C0 02            [24]  213 	push	ar2
      000072 C0 06            [24]  214 	push	ar6
      000074 C0 07            [24]  215 	push	ar7
      000076 85*00 82         [24]  216 	mov	dpl,_memmove_sloc0_1_0
      000079 85*01 83         [24]  217 	mov	dph,(_memmove_sloc0_1_0 + 1)
      00007C 85*02 F0         [24]  218 	mov	b,(_memmove_sloc0_1_0 + 2)
      00007F 12r00r00         [24]  219 	lcall	___gptr_cmp
      000082 15 81            [12]  220 	dec	sp
      000084 15 81            [12]  221 	dec	sp
      000086 15 81            [12]  222 	dec	sp
      000088 50 5A            [24]  223 	jnc	00119$
                                    224 ;	_memmove.c:50: s += c;
      00008A 78r08            [12]  225 	mov	r0,#_memmove_c_65536_27
      00008C E2               [24]  226 	movx	a,@r0
      00008D 25*00            [12]  227 	add	a,_memmove_sloc0_1_0
      00008F F5*03            [12]  228 	mov	_memmove_sloc1_1_0,a
      000091 08               [12]  229 	inc	r0
      000092 E2               [24]  230 	movx	a,@r0
      000093 35*01            [12]  231 	addc	a,(_memmove_sloc0_1_0 + 1)
      000095 F5*04            [12]  232 	mov	(_memmove_sloc1_1_0 + 1),a
      000097 85*02*05         [24]  233 	mov	(_memmove_sloc1_1_0 + 2),(_memmove_sloc0_1_0 + 2)
                                    234 ;	_memmove.c:51: d += c;
      00009A 78r08            [12]  235 	mov	r0,#_memmove_c_65536_27
      00009C E2               [24]  236 	movx	a,@r0
      00009D 2A               [12]  237 	add	a,r2
      00009E F5*06            [12]  238 	mov	_memmove_sloc2_1_0,a
      0000A0 08               [12]  239 	inc	r0
      0000A1 E2               [24]  240 	movx	a,@r0
      0000A2 3E               [12]  241 	addc	a,r6
      0000A3 F5*07            [12]  242 	mov	(_memmove_sloc2_1_0 + 1),a
      0000A5 8F*08            [24]  243 	mov	(_memmove_sloc2_1_0 + 2),r7
                                    244 ;	_memmove.c:52: do {
      0000A7 78r08            [12]  245 	mov	r0,#_memmove_c_65536_27
      0000A9 E2               [24]  246 	movx	a,@r0
      0000AA FC               [12]  247 	mov	r4,a
      0000AB 08               [12]  248 	inc	r0
      0000AC E2               [24]  249 	movx	a,@r0
      0000AD FD               [12]  250 	mov	r5,a
      0000AE                        251 00104$:
                                    252 ;	_memmove.c:53: *--d = *--s;
      0000AE 15*06            [12]  253 	dec	_memmove_sloc2_1_0
      0000B0 74 FF            [12]  254 	mov	a,#0xff
      0000B2 B5*06 02         [24]  255 	cjne	a,_memmove_sloc2_1_0,00146$
      0000B5 15*07            [12]  256 	dec	(_memmove_sloc2_1_0 + 1)
      0000B7                        257 00146$:
      0000B7 15*03            [12]  258 	dec	_memmove_sloc1_1_0
      0000B9 74 FF            [12]  259 	mov	a,#0xff
      0000BB B5*03 02         [24]  260 	cjne	a,_memmove_sloc1_1_0,00147$
      0000BE 15*04            [12]  261 	dec	(_memmove_sloc1_1_0 + 1)
      0000C0                        262 00147$:
      0000C0 85*03 82         [24]  263 	mov	dpl,_memmove_sloc1_1_0
      0000C3 85*04 83         [24]  264 	mov	dph,(_memmove_sloc1_1_0 + 1)
      0000C6 85*05 F0         [24]  265 	mov	b,(_memmove_sloc1_1_0 + 2)
      0000C9 12r00r00         [24]  266 	lcall	__gptrget
      0000CC FB               [12]  267 	mov	r3,a
      0000CD 85*06 82         [24]  268 	mov	dpl,_memmove_sloc2_1_0
      0000D0 85*07 83         [24]  269 	mov	dph,(_memmove_sloc2_1_0 + 1)
      0000D3 85*08 F0         [24]  270 	mov	b,(_memmove_sloc2_1_0 + 2)
      0000D6 12r00r00         [24]  271 	lcall	__gptrput
                                    272 ;	_memmove.c:54: } while (--c);
      0000D9 1C               [12]  273 	dec	r4
      0000DA BC FF 01         [24]  274 	cjne	r4,#0xff,00148$
      0000DD 1D               [12]  275 	dec	r5
      0000DE                        276 00148$:
      0000DE EC               [12]  277 	mov	a,r4
      0000DF 4D               [12]  278 	orl	a,r5
      0000E0 70 CC            [24]  279 	jnz	00104$
                                    280 ;	_memmove.c:59: do {
      0000E2 80 44            [24]  281 	sjmp	00112$
      0000E4                        282 00119$:
      0000E4 85*00*03         [24]  283 	mov	_memmove_sloc1_1_0,_memmove_sloc0_1_0
      0000E7 85*01*04         [24]  284 	mov	(_memmove_sloc1_1_0 + 1),(_memmove_sloc0_1_0 + 1)
      0000EA 85*02*05         [24]  285 	mov	(_memmove_sloc1_1_0 + 2),(_memmove_sloc0_1_0 + 2)
      0000ED 78r08            [12]  286 	mov	r0,#_memmove_c_65536_27
      0000EF E2               [24]  287 	movx	a,@r0
      0000F0 F5*06            [12]  288 	mov	_memmove_sloc2_1_0,a
      0000F2 08               [12]  289 	inc	r0
      0000F3 E2               [24]  290 	movx	a,@r0
      0000F4 F5*07            [12]  291 	mov	(_memmove_sloc2_1_0 + 1),a
      0000F6                        292 00107$:
                                    293 ;	_memmove.c:60: *d++ = *s++;
      0000F6 85*03 82         [24]  294 	mov	dpl,_memmove_sloc1_1_0
      0000F9 85*04 83         [24]  295 	mov	dph,(_memmove_sloc1_1_0 + 1)
      0000FC 85*05 F0         [24]  296 	mov	b,(_memmove_sloc1_1_0 + 2)
      0000FF 12r00r00         [24]  297 	lcall	__gptrget
      000102 FD               [12]  298 	mov	r5,a
      000103 A3               [24]  299 	inc	dptr
      000104 85 82*03         [24]  300 	mov	_memmove_sloc1_1_0,dpl
      000107 85 83*04         [24]  301 	mov	(_memmove_sloc1_1_0 + 1),dph
      00010A 8A 82            [24]  302 	mov	dpl,r2
      00010C 8E 83            [24]  303 	mov	dph,r6
      00010E 8F F0            [24]  304 	mov	b,r7
      000110 ED               [12]  305 	mov	a,r5
      000111 12r00r00         [24]  306 	lcall	__gptrput
      000114 A3               [24]  307 	inc	dptr
      000115 AA 82            [24]  308 	mov	r2,dpl
      000117 AE 83            [24]  309 	mov	r6,dph
                                    310 ;	_memmove.c:61: } while (--c);
      000119 15*06            [12]  311 	dec	_memmove_sloc2_1_0
      00011B 74 FF            [12]  312 	mov	a,#0xff
      00011D B5*06 02         [24]  313 	cjne	a,_memmove_sloc2_1_0,00150$
      000120 15*07            [12]  314 	dec	(_memmove_sloc2_1_0 + 1)
      000122                        315 00150$:
      000122 E5*06            [12]  316 	mov	a,_memmove_sloc2_1_0
      000124 45*07            [12]  317 	orl	a,(_memmove_sloc2_1_0 + 1)
      000126 70 CE            [24]  318 	jnz	00107$
      000128                        319 00112$:
                                    320 ;	_memmove.c:65: return dst;
      000128 78r05            [12]  321 	mov	r0,#_memmove_dst_65536_26
      00012A E2               [24]  322 	movx	a,@r0
      00012B F5 82            [12]  323 	mov	dpl,a
      00012D 08               [12]  324 	inc	r0
      00012E E2               [24]  325 	movx	a,@r0
      00012F F5 83            [12]  326 	mov	dph,a
      000131 08               [12]  327 	inc	r0
      000132 E2               [24]  328 	movx	a,@r0
      000133 F5 F0            [12]  329 	mov	b,a
                                    330 ;	_memmove.c:66: }
      000135 22               [24]  331 	ret
                                    332 	.area CSEG    (CODE)
                                    333 	.area CONST   (CODE)
                                    334 	.area XINIT   (CODE)
                                    335 	.area CABS    (ABS,CODE)
