                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module asincosf
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _asincosf
                                     12 	.globl _ldexpf
                                     13 	.globl _fabsf
                                     14 	.globl _sqrtf
                                     15 	.globl _asincosf_PARM_2
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _asincosf_sloc0_1_0:
      000000                         36 	.ds 4
      000004                         37 _asincosf_sloc1_1_0:
      000004                         38 	.ds 4
      000008                         39 _asincosf_sloc2_1_0:
      000008                         40 	.ds 4
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable items in internal ram
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; indirectly addressable internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area ISEG    (DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; absolute internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area IABS    (ABS,DATA)
                                     52 	.area IABS    (ABS,DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; bit data
                                     55 ;--------------------------------------------------------
                                     56 	.area BSEG    (BIT)
                                     57 ;--------------------------------------------------------
                                     58 ; paged external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area PSEG    (PAG,XDATA)
      000000                         61 _asincosf_PARM_2:
      000000                         62 	.ds 1
      000001                         63 _asincosf_x_65536_25:
      000001                         64 	.ds 4
      000005                         65 _asincosf_g_65536_26:
      000005                         66 	.ds 4
      000009                         67 _asincosf_quartPI_65536_26:
      000009                         68 	.ds 1
                                     69 ;--------------------------------------------------------
                                     70 ; uninitialized external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XSEG    (XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; absolute external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XABS    (ABS,XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; initialized external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XISEG   (XDATA)
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT0 (CODE)
                                     83 	.area GSINIT1 (CODE)
                                     84 	.area GSINIT2 (CODE)
                                     85 	.area GSINIT3 (CODE)
                                     86 	.area GSINIT4 (CODE)
                                     87 	.area GSINIT5 (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area CSEG    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; global & static initialisations
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 	.area GSFINAL (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; Home
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area HOME    (CODE)
                                    103 ;--------------------------------------------------------
                                    104 ; code
                                    105 ;--------------------------------------------------------
                                    106 	.area CSEG    (CODE)
                                    107 ;------------------------------------------------------------
                                    108 ;Allocation info for local variables in function 'asincosf'
                                    109 ;------------------------------------------------------------
                                    110 ;sloc0                     Allocated with name '_asincosf_sloc0_1_0'
                                    111 ;sloc1                     Allocated with name '_asincosf_sloc1_1_0'
                                    112 ;sloc2                     Allocated with name '_asincosf_sloc2_1_0'
                                    113 ;------------------------------------------------------------
                                    114 ;	asincosf.c:47: float asincosf(float x, bool isacos)
                                    115 ;	-----------------------------------------
                                    116 ;	 function asincosf
                                    117 ;	-----------------------------------------
      000000                        118 _asincosf:
                           000007   119 	ar7 = 0x07
                           000006   120 	ar6 = 0x06
                           000005   121 	ar5 = 0x05
                           000004   122 	ar4 = 0x04
                           000003   123 	ar3 = 0x03
                           000002   124 	ar2 = 0x02
                           000001   125 	ar1 = 0x01
                           000000   126 	ar0 = 0x00
      000000 AF 82            [24]  127 	mov	r7,dpl
      000002 AE 83            [24]  128 	mov	r6,dph
      000004 AD F0            [24]  129 	mov	r5,b
      000006 FC               [12]  130 	mov	r4,a
      000007 78r01            [12]  131 	mov	r0,#_asincosf_x_65536_25
      000009 EF               [12]  132 	mov	a,r7
      00000A F2               [24]  133 	movx	@r0,a
      00000B EE               [12]  134 	mov	a,r6
      00000C 08               [12]  135 	inc	r0
      00000D F2               [24]  136 	movx	@r0,a
      00000E ED               [12]  137 	mov	a,r5
      00000F 08               [12]  138 	inc	r0
      000010 F2               [24]  139 	movx	@r0,a
      000011 EC               [12]  140 	mov	a,r4
      000012 08               [12]  141 	inc	r0
      000013 F2               [24]  142 	movx	@r0,a
                                    143 ;	asincosf.c:51: bool quartPI = isacos;
      000014 78r00            [12]  144 	mov	r0,#_asincosf_PARM_2
      000016 79r09            [12]  145 	mov	r1,#_asincosf_quartPI_65536_26
      000018 E2               [24]  146 	movx	a,@r0
      000019 F3               [24]  147 	movx	@r1,a
                                    148 ;	asincosf.c:56: y = fabsf(x);
      00001A 78r01            [12]  149 	mov	r0,#_asincosf_x_65536_25
      00001C E2               [24]  150 	movx	a,@r0
      00001D F5 82            [12]  151 	mov	dpl,a
      00001F 08               [12]  152 	inc	r0
      000020 E2               [24]  153 	movx	a,@r0
      000021 F5 83            [12]  154 	mov	dph,a
      000023 08               [12]  155 	inc	r0
      000024 E2               [24]  156 	movx	a,@r0
      000025 F5 F0            [12]  157 	mov	b,a
      000027 08               [12]  158 	inc	r0
      000028 E2               [24]  159 	movx	a,@r0
      000029 12r00r00         [24]  160 	lcall	_fabsf
      00002C 85 82*08         [24]  161 	mov	_asincosf_sloc2_1_0,dpl
      00002F 85 83*09         [24]  162 	mov	(_asincosf_sloc2_1_0 + 1),dph
      000032 85 F0*0A         [24]  163 	mov	(_asincosf_sloc2_1_0 + 2),b
      000035 F5*0B            [12]  164 	mov	(_asincosf_sloc2_1_0 + 3),a
                                    165 ;	asincosf.c:57: if (y < EPS)
      000037 E4               [12]  166 	clr	a
      000038 C0 E0            [24]  167 	push	acc
      00003A C0 E0            [24]  168 	push	acc
      00003C 74 80            [12]  169 	mov	a,#0x80
      00003E C0 E0            [24]  170 	push	acc
      000040 74 39            [12]  171 	mov	a,#0x39
      000042 C0 E0            [24]  172 	push	acc
      000044 85*08 82         [24]  173 	mov	dpl,_asincosf_sloc2_1_0
      000047 85*09 83         [24]  174 	mov	dph,(_asincosf_sloc2_1_0 + 1)
      00004A 85*0A F0         [24]  175 	mov	b,(_asincosf_sloc2_1_0 + 2)
      00004D E5*0B            [12]  176 	mov	a,(_asincosf_sloc2_1_0 + 3)
      00004F 12r00r00         [24]  177 	lcall	___fslt
      000052 AD 82            [24]  178 	mov	r5,dpl
      000054 E5 81            [12]  179 	mov	a,sp
      000056 24 FC            [12]  180 	add	a,#0xfc
      000058 F5 81            [12]  181 	mov	sp,a
      00005A ED               [12]  182 	mov	a,r5
      00005B 60 0F            [24]  183 	jz	00107$
                                    184 ;	asincosf.c:59: r = y;
      00005D 85*08*00         [24]  185 	mov	_asincosf_sloc0_1_0,_asincosf_sloc2_1_0
      000060 85*09*01         [24]  186 	mov	(_asincosf_sloc0_1_0 + 1),(_asincosf_sloc2_1_0 + 1)
      000063 85*0A*02         [24]  187 	mov	(_asincosf_sloc0_1_0 + 2),(_asincosf_sloc2_1_0 + 2)
      000066 85*0B*03         [24]  188 	mov	(_asincosf_sloc0_1_0 + 3),(_asincosf_sloc2_1_0 + 3)
      000069 02r02rF1         [24]  189 	ljmp	00108$
      00006C                        190 00107$:
                                    191 ;	asincosf.c:63: if (y > 0.5)
      00006C C0*08            [24]  192 	push	_asincosf_sloc2_1_0
      00006E C0*09            [24]  193 	push	(_asincosf_sloc2_1_0 + 1)
      000070 C0*0A            [24]  194 	push	(_asincosf_sloc2_1_0 + 2)
      000072 C0*0B            [24]  195 	push	(_asincosf_sloc2_1_0 + 3)
      000074 90 00 00         [24]  196 	mov	dptr,#(0x00&0x00ff)
      000077 E4               [12]  197 	clr	a
      000078 F5 F0            [12]  198 	mov	b,a
      00007A 74 3F            [12]  199 	mov	a,#0x3f
      00007C 12r00r00         [24]  200 	lcall	___fslt
      00007F AD 82            [24]  201 	mov	r5,dpl
      000081 E5 81            [12]  202 	mov	a,sp
      000083 24 FC            [12]  203 	add	a,#0xfc
      000085 F5 81            [12]  204 	mov	sp,a
      000087 ED               [12]  205 	mov	a,r5
      000088 70 03            [24]  206 	jnz	00150$
      00008A 02r01r5B         [24]  207 	ljmp	00104$
      00008D                        208 00150$:
                                    209 ;	asincosf.c:65: quartPI = !isacos;
      00008D 78r09            [12]  210 	mov	r0,#_asincosf_quartPI_65536_26
      00008F E2               [24]  211 	movx	a,@r0
      000090 B4 01 00         [24]  212 	cjne	a,#0x01,00151$
      000093                        213 00151$:
      000093 E4               [12]  214 	clr	a
      000094 33               [12]  215 	rlc	a
      000095 F2               [24]  216 	movx	@r0,a
                                    217 ;	asincosf.c:66: if (y > 1.0)
      000096 C0*08            [24]  218 	push	_asincosf_sloc2_1_0
      000098 C0*09            [24]  219 	push	(_asincosf_sloc2_1_0 + 1)
      00009A C0*0A            [24]  220 	push	(_asincosf_sloc2_1_0 + 2)
      00009C C0*0B            [24]  221 	push	(_asincosf_sloc2_1_0 + 3)
      00009E 90 00 00         [24]  222 	mov	dptr,#0x0000
      0000A1 75 F0 80         [24]  223 	mov	b,#0x80
      0000A4 74 3F            [12]  224 	mov	a,#0x3f
      0000A6 12r00r00         [24]  225 	lcall	___fslt
      0000A9 AD 82            [24]  226 	mov	r5,dpl
      0000AB E5 81            [12]  227 	mov	a,sp
      0000AD 24 FC            [12]  228 	add	a,#0xfc
      0000AF F5 81            [12]  229 	mov	sp,a
      0000B1 ED               [12]  230 	mov	a,r5
      0000B2 60 0E            [24]  231 	jz	00102$
                                    232 ;	asincosf.c:68: errno = EDOM;
      0000B4 78r00            [12]  233 	mov	r0,#_errno
      0000B6 74 21            [12]  234 	mov	a,#0x21
      0000B8 F2               [24]  235 	movx	@r0,a
      0000B9 E4               [12]  236 	clr	a
      0000BA 08               [12]  237 	inc	r0
      0000BB F2               [24]  238 	movx	@r0,a
                                    239 ;	asincosf.c:69: return 0.0;
      0000BC 90 00 00         [24]  240 	mov	dptr,#0x0000
      0000BF F5 F0            [12]  241 	mov	b,a
      0000C1 22               [24]  242 	ret
      0000C2                        243 00102$:
                                    244 ;	asincosf.c:71: g = (0.5 - y) + 0.5;
      0000C2 C0*08            [24]  245 	push	_asincosf_sloc2_1_0
      0000C4 C0*09            [24]  246 	push	(_asincosf_sloc2_1_0 + 1)
      0000C6 C0*0A            [24]  247 	push	(_asincosf_sloc2_1_0 + 2)
      0000C8 C0*0B            [24]  248 	push	(_asincosf_sloc2_1_0 + 3)
      0000CA 90 00 00         [24]  249 	mov	dptr,#0x0000
      0000CD 75 F0 80         [24]  250 	mov	b,#0x80
      0000D0 74 3F            [12]  251 	mov	a,#0x3f
      0000D2 12r00r00         [24]  252 	lcall	___fssub
      0000D5 85 82*04         [24]  253 	mov	_asincosf_sloc1_1_0,dpl
      0000D8 85 83*05         [24]  254 	mov	(_asincosf_sloc1_1_0 + 1),dph
      0000DB 85 F0*06         [24]  255 	mov	(_asincosf_sloc1_1_0 + 2),b
      0000DE F5*07            [12]  256 	mov	(_asincosf_sloc1_1_0 + 3),a
      0000E0 E5 81            [12]  257 	mov	a,sp
      0000E2 24 FC            [12]  258 	add	a,#0xfc
      0000E4 F5 81            [12]  259 	mov	sp,a
                                    260 ;	asincosf.c:72: g = ldexpf(g, -1);
      0000E6 78r00            [12]  261 	mov	r0,#_ldexpf_PARM_2
      0000E8 74 FF            [12]  262 	mov	a,#0xff
      0000EA F2               [24]  263 	movx	@r0,a
      0000EB 08               [12]  264 	inc	r0
      0000EC F2               [24]  265 	movx	@r0,a
      0000ED 85*04 82         [24]  266 	mov	dpl,_asincosf_sloc1_1_0
      0000F0 85*05 83         [24]  267 	mov	dph,(_asincosf_sloc1_1_0 + 1)
      0000F3 85*06 F0         [24]  268 	mov	b,(_asincosf_sloc1_1_0 + 2)
      0000F6 E5*07            [12]  269 	mov	a,(_asincosf_sloc1_1_0 + 3)
      0000F8 12r00r00         [24]  270 	lcall	_ldexpf
      0000FB 78r05            [12]  271 	mov	r0,#_asincosf_g_65536_26
      0000FD C0 E0            [24]  272 	push	acc
      0000FF E5 82            [12]  273 	mov	a,dpl
      000101 F2               [24]  274 	movx	@r0,a
      000102 E5 83            [12]  275 	mov	a,dph
      000104 08               [12]  276 	inc	r0
      000105 F2               [24]  277 	movx	@r0,a
      000106 E5 F0            [12]  278 	mov	a,b
      000108 08               [12]  279 	inc	r0
      000109 F2               [24]  280 	movx	@r0,a
      00010A D0 E0            [24]  281 	pop	acc
      00010C 08               [12]  282 	inc	r0
      00010D F2               [24]  283 	movx	@r0,a
                                    284 ;	asincosf.c:73: y = sqrtf(g);
      00010E 78r05            [12]  285 	mov	r0,#_asincosf_g_65536_26
      000110 E2               [24]  286 	movx	a,@r0
      000111 F5 82            [12]  287 	mov	dpl,a
      000113 08               [12]  288 	inc	r0
      000114 E2               [24]  289 	movx	a,@r0
      000115 F5 83            [12]  290 	mov	dph,a
      000117 08               [12]  291 	inc	r0
      000118 E2               [24]  292 	movx	a,@r0
      000119 F5 F0            [12]  293 	mov	b,a
      00011B 08               [12]  294 	inc	r0
      00011C E2               [24]  295 	movx	a,@r0
      00011D 12r00r00         [24]  296 	lcall	_sqrtf
      000120 AF 82            [24]  297 	mov	r7,dpl
      000122 AE 83            [24]  298 	mov	r6,dph
      000124 AD F0            [24]  299 	mov	r5,b
      000126 FC               [12]  300 	mov	r4,a
                                    301 ;	asincosf.c:74: y = -(y + y);
      000127 C0 07            [24]  302 	push	ar7
      000129 C0 06            [24]  303 	push	ar6
      00012B C0 05            [24]  304 	push	ar5
      00012D C0 04            [24]  305 	push	ar4
      00012F 8F 82            [24]  306 	mov	dpl,r7
      000131 8E 83            [24]  307 	mov	dph,r6
      000133 8D F0            [24]  308 	mov	b,r5
      000135 EC               [12]  309 	mov	a,r4
      000136 12r00r00         [24]  310 	lcall	___fsadd
      000139 85 82*04         [24]  311 	mov	_asincosf_sloc1_1_0,dpl
      00013C 85 83*05         [24]  312 	mov	(_asincosf_sloc1_1_0 + 1),dph
      00013F 85 F0*06         [24]  313 	mov	(_asincosf_sloc1_1_0 + 2),b
      000142 F5*07            [12]  314 	mov	(_asincosf_sloc1_1_0 + 3),a
      000144 E5 81            [12]  315 	mov	a,sp
      000146 24 FC            [12]  316 	add	a,#0xfc
      000148 F5 81            [12]  317 	mov	sp,a
      00014A 85*04*08         [24]  318 	mov	_asincosf_sloc2_1_0,_asincosf_sloc1_1_0
      00014D 85*05*09         [24]  319 	mov	(_asincosf_sloc2_1_0 + 1),(_asincosf_sloc1_1_0 + 1)
      000150 85*06*0A         [24]  320 	mov	(_asincosf_sloc2_1_0 + 2),(_asincosf_sloc1_1_0 + 2)
      000153 E5*07            [12]  321 	mov	a,(_asincosf_sloc1_1_0 + 3)
      000155 B2 E7            [12]  322 	cpl	acc.7
      000157 F5*0B            [12]  323 	mov	(_asincosf_sloc2_1_0 + 3),a
      000159 80 2F            [24]  324 	sjmp	00105$
      00015B                        325 00104$:
                                    326 ;	asincosf.c:78: g = y * y;
      00015B C0*08            [24]  327 	push	_asincosf_sloc2_1_0
      00015D C0*09            [24]  328 	push	(_asincosf_sloc2_1_0 + 1)
      00015F C0*0A            [24]  329 	push	(_asincosf_sloc2_1_0 + 2)
      000161 C0*0B            [24]  330 	push	(_asincosf_sloc2_1_0 + 3)
      000163 85*08 82         [24]  331 	mov	dpl,_asincosf_sloc2_1_0
      000166 85*09 83         [24]  332 	mov	dph,(_asincosf_sloc2_1_0 + 1)
      000169 85*0A F0         [24]  333 	mov	b,(_asincosf_sloc2_1_0 + 2)
      00016C E5*0B            [12]  334 	mov	a,(_asincosf_sloc2_1_0 + 3)
      00016E 12r00r00         [24]  335 	lcall	___fsmul
      000171 78r05            [12]  336 	mov	r0,#_asincosf_g_65536_26
      000173 C0 E0            [24]  337 	push	acc
      000175 E5 82            [12]  338 	mov	a,dpl
      000177 F2               [24]  339 	movx	@r0,a
      000178 E5 83            [12]  340 	mov	a,dph
      00017A 08               [12]  341 	inc	r0
      00017B F2               [24]  342 	movx	@r0,a
      00017C E5 F0            [12]  343 	mov	a,b
      00017E 08               [12]  344 	inc	r0
      00017F F2               [24]  345 	movx	@r0,a
      000180 D0 E0            [24]  346 	pop	acc
      000182 08               [12]  347 	inc	r0
      000183 F2               [24]  348 	movx	@r0,a
      000184 E5 81            [12]  349 	mov	a,sp
      000186 24 FC            [12]  350 	add	a,#0xfc
      000188 F5 81            [12]  351 	mov	sp,a
      00018A                        352 00105$:
                                    353 ;	asincosf.c:80: r = y + y * ((P(g) * g) / Q(g));
      00018A 78r05            [12]  354 	mov	r0,#_asincosf_g_65536_26
      00018C E2               [24]  355 	movx	a,@r0
      00018D C0 E0            [24]  356 	push	acc
      00018F 08               [12]  357 	inc	r0
      000190 E2               [24]  358 	movx	a,@r0
      000191 C0 E0            [24]  359 	push	acc
      000193 08               [12]  360 	inc	r0
      000194 E2               [24]  361 	movx	a,@r0
      000195 C0 E0            [24]  362 	push	acc
      000197 08               [12]  363 	inc	r0
      000198 E2               [24]  364 	movx	a,@r0
      000199 C0 E0            [24]  365 	push	acc
      00019B 90 20 65         [24]  366 	mov	dptr,#0x2065
      00019E 75 F0 01         [24]  367 	mov	b,#0x01
      0001A1 74 BF            [12]  368 	mov	a,#0xbf
      0001A3 12r00r00         [24]  369 	lcall	___fsmul
      0001A6 AC 82            [24]  370 	mov	r4,dpl
      0001A8 AD 83            [24]  371 	mov	r5,dph
      0001AA AE F0            [24]  372 	mov	r6,b
      0001AC FF               [12]  373 	mov	r7,a
      0001AD E5 81            [12]  374 	mov	a,sp
      0001AF 24 FC            [12]  375 	add	a,#0xfc
      0001B1 F5 81            [12]  376 	mov	sp,a
      0001B3 74 6B            [12]  377 	mov	a,#0x6b
      0001B5 C0 E0            [24]  378 	push	acc
      0001B7 74 16            [12]  379 	mov	a,#0x16
      0001B9 C0 E0            [24]  380 	push	acc
      0001BB 74 6F            [12]  381 	mov	a,#0x6f
      0001BD C0 E0            [24]  382 	push	acc
      0001BF 74 3F            [12]  383 	mov	a,#0x3f
      0001C1 C0 E0            [24]  384 	push	acc
      0001C3 8C 82            [24]  385 	mov	dpl,r4
      0001C5 8D 83            [24]  386 	mov	dph,r5
      0001C7 8E F0            [24]  387 	mov	b,r6
      0001C9 EF               [12]  388 	mov	a,r7
      0001CA 12r00r00         [24]  389 	lcall	___fsadd
      0001CD AC 82            [24]  390 	mov	r4,dpl
      0001CF AD 83            [24]  391 	mov	r5,dph
      0001D1 AE F0            [24]  392 	mov	r6,b
      0001D3 FF               [12]  393 	mov	r7,a
      0001D4 E5 81            [12]  394 	mov	a,sp
      0001D6 24 FC            [12]  395 	add	a,#0xfc
      0001D8 F5 81            [12]  396 	mov	sp,a
      0001DA 78r05            [12]  397 	mov	r0,#_asincosf_g_65536_26
      0001DC E2               [24]  398 	movx	a,@r0
      0001DD C0 E0            [24]  399 	push	acc
      0001DF 08               [12]  400 	inc	r0
      0001E0 E2               [24]  401 	movx	a,@r0
      0001E1 C0 E0            [24]  402 	push	acc
      0001E3 08               [12]  403 	inc	r0
      0001E4 E2               [24]  404 	movx	a,@r0
      0001E5 C0 E0            [24]  405 	push	acc
      0001E7 08               [12]  406 	inc	r0
      0001E8 E2               [24]  407 	movx	a,@r0
      0001E9 C0 E0            [24]  408 	push	acc
      0001EB 8C 82            [24]  409 	mov	dpl,r4
      0001ED 8D 83            [24]  410 	mov	dph,r5
      0001EF 8E F0            [24]  411 	mov	b,r6
      0001F1 EF               [12]  412 	mov	a,r7
      0001F2 12r00r00         [24]  413 	lcall	___fsmul
      0001F5 85 82*04         [24]  414 	mov	_asincosf_sloc1_1_0,dpl
      0001F8 85 83*05         [24]  415 	mov	(_asincosf_sloc1_1_0 + 1),dph
      0001FB 85 F0*06         [24]  416 	mov	(_asincosf_sloc1_1_0 + 2),b
      0001FE F5*07            [12]  417 	mov	(_asincosf_sloc1_1_0 + 3),a
      000200 E5 81            [12]  418 	mov	a,sp
      000202 24 FC            [12]  419 	add	a,#0xfc
      000204 F5 81            [12]  420 	mov	sp,a
      000206 74 0B            [12]  421 	mov	a,#0x0b
      000208 C0 E0            [24]  422 	push	acc
      00020A 74 8D            [12]  423 	mov	a,#0x8d
      00020C C0 E0            [24]  424 	push	acc
      00020E 74 B1            [12]  425 	mov	a,#0xb1
      000210 C0 E0            [24]  426 	push	acc
      000212 74 C0            [12]  427 	mov	a,#0xc0
      000214 C0 E0            [24]  428 	push	acc
      000216 78r05            [12]  429 	mov	r0,#_asincosf_g_65536_26
      000218 E2               [24]  430 	movx	a,@r0
      000219 F5 82            [12]  431 	mov	dpl,a
      00021B 08               [12]  432 	inc	r0
      00021C E2               [24]  433 	movx	a,@r0
      00021D F5 83            [12]  434 	mov	dph,a
      00021F 08               [12]  435 	inc	r0
      000220 E2               [24]  436 	movx	a,@r0
      000221 F5 F0            [12]  437 	mov	b,a
      000223 08               [12]  438 	inc	r0
      000224 E2               [24]  439 	movx	a,@r0
      000225 12r00r00         [24]  440 	lcall	___fsadd
      000228 AA 82            [24]  441 	mov	r2,dpl
      00022A AB 83            [24]  442 	mov	r3,dph
      00022C AE F0            [24]  443 	mov	r6,b
      00022E FF               [12]  444 	mov	r7,a
      00022F E5 81            [12]  445 	mov	a,sp
      000231 24 FC            [12]  446 	add	a,#0xfc
      000233 F5 81            [12]  447 	mov	sp,a
      000235 78r05            [12]  448 	mov	r0,#_asincosf_g_65536_26
      000237 E2               [24]  449 	movx	a,@r0
      000238 C0 E0            [24]  450 	push	acc
      00023A 08               [12]  451 	inc	r0
      00023B E2               [24]  452 	movx	a,@r0
      00023C C0 E0            [24]  453 	push	acc
      00023E 08               [12]  454 	inc	r0
      00023F E2               [24]  455 	movx	a,@r0
      000240 C0 E0            [24]  456 	push	acc
      000242 08               [12]  457 	inc	r0
      000243 E2               [24]  458 	movx	a,@r0
      000244 C0 E0            [24]  459 	push	acc
      000246 8A 82            [24]  460 	mov	dpl,r2
      000248 8B 83            [24]  461 	mov	dph,r3
      00024A 8E F0            [24]  462 	mov	b,r6
      00024C EF               [12]  463 	mov	a,r7
      00024D 12r00r00         [24]  464 	lcall	___fsmul
      000250 AC 82            [24]  465 	mov	r4,dpl
      000252 AD 83            [24]  466 	mov	r5,dph
      000254 AE F0            [24]  467 	mov	r6,b
      000256 FF               [12]  468 	mov	r7,a
      000257 E5 81            [12]  469 	mov	a,sp
      000259 24 FC            [12]  470 	add	a,#0xfc
      00025B F5 81            [12]  471 	mov	sp,a
      00025D 74 F0            [12]  472 	mov	a,#0xf0
      00025F C0 E0            [24]  473 	push	acc
      000261 74 50            [12]  474 	mov	a,#0x50
      000263 C0 E0            [24]  475 	push	acc
      000265 74 B3            [12]  476 	mov	a,#0xb3
      000267 C0 E0            [24]  477 	push	acc
      000269 74 40            [12]  478 	mov	a,#0x40
      00026B C0 E0            [24]  479 	push	acc
      00026D 8C 82            [24]  480 	mov	dpl,r4
      00026F 8D 83            [24]  481 	mov	dph,r5
      000271 8E F0            [24]  482 	mov	b,r6
      000273 EF               [12]  483 	mov	a,r7
      000274 12r00r00         [24]  484 	lcall	___fsadd
      000277 AC 82            [24]  485 	mov	r4,dpl
      000279 AD 83            [24]  486 	mov	r5,dph
      00027B AE F0            [24]  487 	mov	r6,b
      00027D FF               [12]  488 	mov	r7,a
      00027E E5 81            [12]  489 	mov	a,sp
      000280 24 FC            [12]  490 	add	a,#0xfc
      000282 F5 81            [12]  491 	mov	sp,a
      000284 C0 04            [24]  492 	push	ar4
      000286 C0 05            [24]  493 	push	ar5
      000288 C0 06            [24]  494 	push	ar6
      00028A C0 07            [24]  495 	push	ar7
      00028C 85*04 82         [24]  496 	mov	dpl,_asincosf_sloc1_1_0
      00028F 85*05 83         [24]  497 	mov	dph,(_asincosf_sloc1_1_0 + 1)
      000292 85*06 F0         [24]  498 	mov	b,(_asincosf_sloc1_1_0 + 2)
      000295 E5*07            [12]  499 	mov	a,(_asincosf_sloc1_1_0 + 3)
      000297 12r00r00         [24]  500 	lcall	___fsdiv
      00029A AC 82            [24]  501 	mov	r4,dpl
      00029C AD 83            [24]  502 	mov	r5,dph
      00029E AE F0            [24]  503 	mov	r6,b
      0002A0 FF               [12]  504 	mov	r7,a
      0002A1 E5 81            [12]  505 	mov	a,sp
      0002A3 24 FC            [12]  506 	add	a,#0xfc
      0002A5 F5 81            [12]  507 	mov	sp,a
      0002A7 C0 04            [24]  508 	push	ar4
      0002A9 C0 05            [24]  509 	push	ar5
      0002AB C0 06            [24]  510 	push	ar6
      0002AD C0 07            [24]  511 	push	ar7
      0002AF 85*08 82         [24]  512 	mov	dpl,_asincosf_sloc2_1_0
      0002B2 85*09 83         [24]  513 	mov	dph,(_asincosf_sloc2_1_0 + 1)
      0002B5 85*0A F0         [24]  514 	mov	b,(_asincosf_sloc2_1_0 + 2)
      0002B8 E5*0B            [12]  515 	mov	a,(_asincosf_sloc2_1_0 + 3)
      0002BA 12r00r00         [24]  516 	lcall	___fsmul
      0002BD AC 82            [24]  517 	mov	r4,dpl
      0002BF AD 83            [24]  518 	mov	r5,dph
      0002C1 AE F0            [24]  519 	mov	r6,b
      0002C3 FF               [12]  520 	mov	r7,a
      0002C4 E5 81            [12]  521 	mov	a,sp
      0002C6 24 FC            [12]  522 	add	a,#0xfc
      0002C8 F5 81            [12]  523 	mov	sp,a
      0002CA C0 04            [24]  524 	push	ar4
      0002CC C0 05            [24]  525 	push	ar5
      0002CE C0 06            [24]  526 	push	ar6
      0002D0 C0 07            [24]  527 	push	ar7
      0002D2 85*08 82         [24]  528 	mov	dpl,_asincosf_sloc2_1_0
      0002D5 85*09 83         [24]  529 	mov	dph,(_asincosf_sloc2_1_0 + 1)
      0002D8 85*0A F0         [24]  530 	mov	b,(_asincosf_sloc2_1_0 + 2)
      0002DB E5*0B            [12]  531 	mov	a,(_asincosf_sloc2_1_0 + 3)
      0002DD 12r00r00         [24]  532 	lcall	___fsadd
      0002E0 85 82*00         [24]  533 	mov	_asincosf_sloc0_1_0,dpl
      0002E3 85 83*01         [24]  534 	mov	(_asincosf_sloc0_1_0 + 1),dph
      0002E6 85 F0*02         [24]  535 	mov	(_asincosf_sloc0_1_0 + 2),b
      0002E9 F5*03            [12]  536 	mov	(_asincosf_sloc0_1_0 + 3),a
      0002EB E5 81            [12]  537 	mov	a,sp
      0002ED 24 FC            [12]  538 	add	a,#0xfc
      0002EF F5 81            [12]  539 	mov	sp,a
      0002F1                        540 00108$:
                                    541 ;	asincosf.c:82: i = quartPI;
      0002F1 78r09            [12]  542 	mov	r0,#_asincosf_quartPI_65536_26
      0002F3 E2               [24]  543 	movx	a,@r0
      0002F4 FB               [12]  544 	mov	r3,a
                                    545 ;	asincosf.c:83: if (isacos)
      0002F5 78r00            [12]  546 	mov	r0,#_asincosf_PARM_2
      0002F7 E2               [24]  547 	movx	a,@r0
      0002F8 70 03            [24]  548 	jnz	00153$
      0002FA 02r03rFD         [24]  549 	ljmp	00115$
      0002FD                        550 00153$:
                                    551 ;	asincosf.c:85: if (x < 0.0)
      0002FD C0 03            [24]  552 	push	ar3
      0002FF E4               [12]  553 	clr	a
      000300 C0 E0            [24]  554 	push	acc
      000302 C0 E0            [24]  555 	push	acc
      000304 C0 E0            [24]  556 	push	acc
      000306 C0 E0            [24]  557 	push	acc
      000308 78r01            [12]  558 	mov	r0,#_asincosf_x_65536_25
      00030A E2               [24]  559 	movx	a,@r0
      00030B F5 82            [12]  560 	mov	dpl,a
      00030D 08               [12]  561 	inc	r0
      00030E E2               [24]  562 	movx	a,@r0
      00030F F5 83            [12]  563 	mov	dph,a
      000311 08               [12]  564 	inc	r0
      000312 E2               [24]  565 	movx	a,@r0
      000313 F5 F0            [12]  566 	mov	b,a
      000315 08               [12]  567 	inc	r0
      000316 E2               [24]  568 	movx	a,@r0
      000317 12r00r00         [24]  569 	lcall	___fslt
      00031A AF 82            [24]  570 	mov	r7,dpl
      00031C E5 81            [12]  571 	mov	a,sp
      00031E 24 FC            [12]  572 	add	a,#0xfc
      000320 F5 81            [12]  573 	mov	sp,a
      000322 D0 03            [24]  574 	pop	ar3
      000324 EF               [12]  575 	mov	a,r7
      000325 60 67            [24]  576 	jz	00110$
                                    577 ;	asincosf.c:86: r = (b[i] + r) + b[i];
      000327 EB               [12]  578 	mov	a,r3
      000328 75 F0 04         [24]  579 	mov	b,#0x04
      00032B A4               [48]  580 	mul	ab
      00032C 24r08            [12]  581 	add	a,#_asincosf_b_65536_26
      00032E F5 82            [12]  582 	mov	dpl,a
      000330 74s00            [12]  583 	mov	a,#(_asincosf_b_65536_26 >> 8)
      000332 35 F0            [12]  584 	addc	a,b
      000334 F5 83            [12]  585 	mov	dph,a
      000336 E4               [12]  586 	clr	a
      000337 93               [24]  587 	movc	a,@a+dptr
      000338 F5*08            [12]  588 	mov	_asincosf_sloc2_1_0,a
      00033A A3               [24]  589 	inc	dptr
      00033B E4               [12]  590 	clr	a
      00033C 93               [24]  591 	movc	a,@a+dptr
      00033D F5*09            [12]  592 	mov	(_asincosf_sloc2_1_0 + 1),a
      00033F A3               [24]  593 	inc	dptr
      000340 E4               [12]  594 	clr	a
      000341 93               [24]  595 	movc	a,@a+dptr
      000342 F5*0A            [12]  596 	mov	(_asincosf_sloc2_1_0 + 2),a
      000344 A3               [24]  597 	inc	dptr
      000345 E4               [12]  598 	clr	a
      000346 93               [24]  599 	movc	a,@a+dptr
      000347 F5*0B            [12]  600 	mov	(_asincosf_sloc2_1_0 + 3),a
      000349 C0*00            [24]  601 	push	_asincosf_sloc0_1_0
      00034B C0*01            [24]  602 	push	(_asincosf_sloc0_1_0 + 1)
      00034D C0*02            [24]  603 	push	(_asincosf_sloc0_1_0 + 2)
      00034F C0*03            [24]  604 	push	(_asincosf_sloc0_1_0 + 3)
      000351 85*08 82         [24]  605 	mov	dpl,_asincosf_sloc2_1_0
      000354 85*09 83         [24]  606 	mov	dph,(_asincosf_sloc2_1_0 + 1)
      000357 85*0A F0         [24]  607 	mov	b,(_asincosf_sloc2_1_0 + 2)
      00035A E5*0B            [12]  608 	mov	a,(_asincosf_sloc2_1_0 + 3)
      00035C 12r00r00         [24]  609 	lcall	___fsadd
      00035F AA 82            [24]  610 	mov	r2,dpl
      000361 AD 83            [24]  611 	mov	r5,dph
      000363 AE F0            [24]  612 	mov	r6,b
      000365 FF               [12]  613 	mov	r7,a
      000366 E5 81            [12]  614 	mov	a,sp
      000368 24 FC            [12]  615 	add	a,#0xfc
      00036A F5 81            [12]  616 	mov	sp,a
      00036C C0*08            [24]  617 	push	_asincosf_sloc2_1_0
      00036E C0*09            [24]  618 	push	(_asincosf_sloc2_1_0 + 1)
      000370 C0*0A            [24]  619 	push	(_asincosf_sloc2_1_0 + 2)
      000372 C0*0B            [24]  620 	push	(_asincosf_sloc2_1_0 + 3)
      000374 8A 82            [24]  621 	mov	dpl,r2
      000376 8D 83            [24]  622 	mov	dph,r5
      000378 8E F0            [24]  623 	mov	b,r6
      00037A EF               [12]  624 	mov	a,r7
      00037B 12r00r00         [24]  625 	lcall	___fsadd
      00037E AC 82            [24]  626 	mov	r4,dpl
      000380 AD 83            [24]  627 	mov	r5,dph
      000382 AE F0            [24]  628 	mov	r6,b
      000384 FF               [12]  629 	mov	r7,a
      000385 E5 81            [12]  630 	mov	a,sp
      000387 24 FC            [12]  631 	add	a,#0xfc
      000389 F5 81            [12]  632 	mov	sp,a
      00038B 02r04rA3         [24]  633 	ljmp	00116$
      00038E                        634 00110$:
                                    635 ;	asincosf.c:88: r = (a[i] - r) + a[i];
      00038E EB               [12]  636 	mov	a,r3
      00038F 75 F0 04         [24]  637 	mov	b,#0x04
      000392 A4               [48]  638 	mul	ab
      000393 24r00            [12]  639 	add	a,#_asincosf_a_65536_26
      000395 F5 82            [12]  640 	mov	dpl,a
      000397 74s00            [12]  641 	mov	a,#(_asincosf_a_65536_26 >> 8)
      000399 35 F0            [12]  642 	addc	a,b
      00039B F5 83            [12]  643 	mov	dph,a
      00039D E4               [12]  644 	clr	a
      00039E 93               [24]  645 	movc	a,@a+dptr
      00039F F5*08            [12]  646 	mov	_asincosf_sloc2_1_0,a
      0003A1 A3               [24]  647 	inc	dptr
      0003A2 E4               [12]  648 	clr	a
      0003A3 93               [24]  649 	movc	a,@a+dptr
      0003A4 F5*09            [12]  650 	mov	(_asincosf_sloc2_1_0 + 1),a
      0003A6 A3               [24]  651 	inc	dptr
      0003A7 E4               [12]  652 	clr	a
      0003A8 93               [24]  653 	movc	a,@a+dptr
      0003A9 F5*0A            [12]  654 	mov	(_asincosf_sloc2_1_0 + 2),a
      0003AB A3               [24]  655 	inc	dptr
      0003AC E4               [12]  656 	clr	a
      0003AD 93               [24]  657 	movc	a,@a+dptr
      0003AE F5*0B            [12]  658 	mov	(_asincosf_sloc2_1_0 + 3),a
      0003B0 C0*00            [24]  659 	push	_asincosf_sloc0_1_0
      0003B2 C0*01            [24]  660 	push	(_asincosf_sloc0_1_0 + 1)
      0003B4 C0*02            [24]  661 	push	(_asincosf_sloc0_1_0 + 2)
      0003B6 C0*03            [24]  662 	push	(_asincosf_sloc0_1_0 + 3)
      0003B8 85*08 82         [24]  663 	mov	dpl,_asincosf_sloc2_1_0
      0003BB 85*09 83         [24]  664 	mov	dph,(_asincosf_sloc2_1_0 + 1)
      0003BE 85*0A F0         [24]  665 	mov	b,(_asincosf_sloc2_1_0 + 2)
      0003C1 E5*0B            [12]  666 	mov	a,(_asincosf_sloc2_1_0 + 3)
      0003C3 12r00r00         [24]  667 	lcall	___fssub
      0003C6 85 82*04         [24]  668 	mov	_asincosf_sloc1_1_0,dpl
      0003C9 85 83*05         [24]  669 	mov	(_asincosf_sloc1_1_0 + 1),dph
      0003CC 85 F0*06         [24]  670 	mov	(_asincosf_sloc1_1_0 + 2),b
      0003CF F5*07            [12]  671 	mov	(_asincosf_sloc1_1_0 + 3),a
      0003D1 E5 81            [12]  672 	mov	a,sp
      0003D3 24 FC            [12]  673 	add	a,#0xfc
      0003D5 F5 81            [12]  674 	mov	sp,a
      0003D7 C0*08            [24]  675 	push	_asincosf_sloc2_1_0
      0003D9 C0*09            [24]  676 	push	(_asincosf_sloc2_1_0 + 1)
      0003DB C0*0A            [24]  677 	push	(_asincosf_sloc2_1_0 + 2)
      0003DD C0*0B            [24]  678 	push	(_asincosf_sloc2_1_0 + 3)
      0003DF 85*04 82         [24]  679 	mov	dpl,_asincosf_sloc1_1_0
      0003E2 85*05 83         [24]  680 	mov	dph,(_asincosf_sloc1_1_0 + 1)
      0003E5 85*06 F0         [24]  681 	mov	b,(_asincosf_sloc1_1_0 + 2)
      0003E8 E5*07            [12]  682 	mov	a,(_asincosf_sloc1_1_0 + 3)
      0003EA 12r00r00         [24]  683 	lcall	___fsadd
      0003ED AC 82            [24]  684 	mov	r4,dpl
      0003EF AD 83            [24]  685 	mov	r5,dph
      0003F1 AE F0            [24]  686 	mov	r6,b
      0003F3 FF               [12]  687 	mov	r7,a
      0003F4 E5 81            [12]  688 	mov	a,sp
      0003F6 24 FC            [12]  689 	add	a,#0xfc
      0003F8 F5 81            [12]  690 	mov	sp,a
      0003FA 02r04rA3         [24]  691 	ljmp	00116$
      0003FD                        692 00115$:
                                    693 ;	asincosf.c:92: r = (a[i] + r) + a[i];
      0003FD EB               [12]  694 	mov	a,r3
      0003FE 75 F0 04         [24]  695 	mov	b,#0x04
      000401 A4               [48]  696 	mul	ab
      000402 24r00            [12]  697 	add	a,#_asincosf_a_65536_26
      000404 F5 82            [12]  698 	mov	dpl,a
      000406 74s00            [12]  699 	mov	a,#(_asincosf_a_65536_26 >> 8)
      000408 35 F0            [12]  700 	addc	a,b
      00040A F5 83            [12]  701 	mov	dph,a
      00040C E4               [12]  702 	clr	a
      00040D 93               [24]  703 	movc	a,@a+dptr
      00040E F5*08            [12]  704 	mov	_asincosf_sloc2_1_0,a
      000410 A3               [24]  705 	inc	dptr
      000411 E4               [12]  706 	clr	a
      000412 93               [24]  707 	movc	a,@a+dptr
      000413 F5*09            [12]  708 	mov	(_asincosf_sloc2_1_0 + 1),a
      000415 A3               [24]  709 	inc	dptr
      000416 E4               [12]  710 	clr	a
      000417 93               [24]  711 	movc	a,@a+dptr
      000418 F5*0A            [12]  712 	mov	(_asincosf_sloc2_1_0 + 2),a
      00041A A3               [24]  713 	inc	dptr
      00041B E4               [12]  714 	clr	a
      00041C 93               [24]  715 	movc	a,@a+dptr
      00041D F5*0B            [12]  716 	mov	(_asincosf_sloc2_1_0 + 3),a
      00041F C0*00            [24]  717 	push	_asincosf_sloc0_1_0
      000421 C0*01            [24]  718 	push	(_asincosf_sloc0_1_0 + 1)
      000423 C0*02            [24]  719 	push	(_asincosf_sloc0_1_0 + 2)
      000425 C0*03            [24]  720 	push	(_asincosf_sloc0_1_0 + 3)
      000427 85*08 82         [24]  721 	mov	dpl,_asincosf_sloc2_1_0
      00042A 85*09 83         [24]  722 	mov	dph,(_asincosf_sloc2_1_0 + 1)
      00042D 85*0A F0         [24]  723 	mov	b,(_asincosf_sloc2_1_0 + 2)
      000430 E5*0B            [12]  724 	mov	a,(_asincosf_sloc2_1_0 + 3)
      000432 12r00r00         [24]  725 	lcall	___fsadd
      000435 85 82*04         [24]  726 	mov	_asincosf_sloc1_1_0,dpl
      000438 85 83*05         [24]  727 	mov	(_asincosf_sloc1_1_0 + 1),dph
      00043B 85 F0*06         [24]  728 	mov	(_asincosf_sloc1_1_0 + 2),b
      00043E F5*07            [12]  729 	mov	(_asincosf_sloc1_1_0 + 3),a
      000440 E5 81            [12]  730 	mov	a,sp
      000442 24 FC            [12]  731 	add	a,#0xfc
      000444 F5 81            [12]  732 	mov	sp,a
      000446 C0*08            [24]  733 	push	_asincosf_sloc2_1_0
      000448 C0*09            [24]  734 	push	(_asincosf_sloc2_1_0 + 1)
      00044A C0*0A            [24]  735 	push	(_asincosf_sloc2_1_0 + 2)
      00044C C0*0B            [24]  736 	push	(_asincosf_sloc2_1_0 + 3)
      00044E 85*04 82         [24]  737 	mov	dpl,_asincosf_sloc1_1_0
      000451 85*05 83         [24]  738 	mov	dph,(_asincosf_sloc1_1_0 + 1)
      000454 85*06 F0         [24]  739 	mov	b,(_asincosf_sloc1_1_0 + 2)
      000457 E5*07            [12]  740 	mov	a,(_asincosf_sloc1_1_0 + 3)
      000459 12r00r00         [24]  741 	lcall	___fsadd
      00045C AC 82            [24]  742 	mov	r4,dpl
      00045E AD 83            [24]  743 	mov	r5,dph
      000460 AE F0            [24]  744 	mov	r6,b
      000462 FF               [12]  745 	mov	r7,a
      000463 E5 81            [12]  746 	mov	a,sp
      000465 24 FC            [12]  747 	add	a,#0xfc
      000467 F5 81            [12]  748 	mov	sp,a
                                    749 ;	asincosf.c:93: if (x < 0.0)
      000469 C0 07            [24]  750 	push	ar7
      00046B C0 06            [24]  751 	push	ar6
      00046D C0 05            [24]  752 	push	ar5
      00046F C0 04            [24]  753 	push	ar4
      000471 E4               [12]  754 	clr	a
      000472 C0 E0            [24]  755 	push	acc
      000474 C0 E0            [24]  756 	push	acc
      000476 C0 E0            [24]  757 	push	acc
      000478 C0 E0            [24]  758 	push	acc
      00047A 78r01            [12]  759 	mov	r0,#_asincosf_x_65536_25
      00047C E2               [24]  760 	movx	a,@r0
      00047D F5 82            [12]  761 	mov	dpl,a
      00047F 08               [12]  762 	inc	r0
      000480 E2               [24]  763 	movx	a,@r0
      000481 F5 83            [12]  764 	mov	dph,a
      000483 08               [12]  765 	inc	r0
      000484 E2               [24]  766 	movx	a,@r0
      000485 F5 F0            [12]  767 	mov	b,a
      000487 08               [12]  768 	inc	r0
      000488 E2               [24]  769 	movx	a,@r0
      000489 12r00r00         [24]  770 	lcall	___fslt
      00048C AB 82            [24]  771 	mov	r3,dpl
      00048E E5 81            [12]  772 	mov	a,sp
      000490 24 FC            [12]  773 	add	a,#0xfc
      000492 F5 81            [12]  774 	mov	sp,a
      000494 D0 04            [24]  775 	pop	ar4
      000496 D0 05            [24]  776 	pop	ar5
      000498 D0 06            [24]  777 	pop	ar6
      00049A D0 07            [24]  778 	pop	ar7
      00049C EB               [12]  779 	mov	a,r3
      00049D 60 04            [24]  780 	jz	00116$
                                    781 ;	asincosf.c:94: r = -r;
      00049F EF               [12]  782 	mov	a,r7
      0004A0 B2 E7            [12]  783 	cpl	acc.7
      0004A2 FF               [12]  784 	mov	r7,a
      0004A3                        785 00116$:
                                    786 ;	asincosf.c:96: return r;
      0004A3 8C 82            [24]  787 	mov	dpl,r4
      0004A5 8D 83            [24]  788 	mov	dph,r5
      0004A7 8E F0            [24]  789 	mov	b,r6
      0004A9 EF               [12]  790 	mov	a,r7
                                    791 ;	asincosf.c:97: }
      0004AA 22               [24]  792 	ret
                                    793 	.area CSEG    (CODE)
                                    794 	.area CONST   (CODE)
      000000                        795 _asincosf_a_65536_26:
      000000 00 00 00 00            796 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000004 DB 0F 49 3F            797 	.byte #0xdb, #0x0f, #0x49, #0x3f	;  7.853982e-01
      000008                        798 _asincosf_b_65536_26:
      000008 DB 0F C9 3F            799 	.byte #0xdb, #0x0f, #0xc9, #0x3f	;  1.570796e+00
      00000C DB 0F 49 3F            800 	.byte #0xdb, #0x0f, #0x49, #0x3f	;  7.853982e-01
                                    801 	.area XINIT   (CODE)
                                    802 	.area CABS    (ABS,CODE)
