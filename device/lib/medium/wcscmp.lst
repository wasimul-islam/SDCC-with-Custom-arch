                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcscmp
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wcscmp_PARM_2
                                     12 	.globl _wcscmp
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 _wcscmp_sloc0_1_0:
      000000                         37 	.ds 4
      000004                         38 _wcscmp_sloc1_1_0:
      000004                         39 	.ds 3
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
      000000                         57 _wcscmp_PARM_2:
      000000                         58 	.ds 3
                                     59 ;--------------------------------------------------------
                                     60 ; uninitialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; initialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function 'wcscmp'
                                     99 ;------------------------------------------------------------
                                    100 ;sloc0                     Allocated with name '_wcscmp_sloc0_1_0'
                                    101 ;sloc1                     Allocated with name '_wcscmp_sloc1_1_0'
                                    102 ;------------------------------------------------------------
                                    103 ;	wcscmp.c:31: int wcscmp(const wchar_t *s1, const wchar_t *s2)
                                    104 ;	-----------------------------------------
                                    105 ;	 function wcscmp
                                    106 ;	-----------------------------------------
      000000                        107 _wcscmp:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
      000000 AF 82            [24]  116 	mov	r7,dpl
      000002 AD 83            [24]  117 	mov	r5,dph
      000004 AE F0            [24]  118 	mov	r6,b
                                    119 ;	wcscmp.c:33: while(*s1 == *s2 && *s1)
      000006 78r00            [12]  120 	mov	r0,#_wcscmp_PARM_2
      000008 E2               [24]  121 	movx	a,@r0
      000009 F5*04            [12]  122 	mov	_wcscmp_sloc1_1_0,a
      00000B 08               [12]  123 	inc	r0
      00000C E2               [24]  124 	movx	a,@r0
      00000D F5*05            [12]  125 	mov	(_wcscmp_sloc1_1_0 + 1),a
      00000F 08               [12]  126 	inc	r0
      000010 E2               [24]  127 	movx	a,@r0
      000011 F5*06            [12]  128 	mov	(_wcscmp_sloc1_1_0 + 2),a
      000013                        129 00102$:
      000013 8F 82            [24]  130 	mov	dpl,r7
      000015 8D 83            [24]  131 	mov	dph,r5
      000017 8E F0            [24]  132 	mov	b,r6
      000019 12r00r00         [24]  133 	lcall	__gptrget
      00001C F5*00            [12]  134 	mov	_wcscmp_sloc0_1_0,a
      00001E A3               [24]  135 	inc	dptr
      00001F 12r00r00         [24]  136 	lcall	__gptrget
      000022 F5*01            [12]  137 	mov	(_wcscmp_sloc0_1_0 + 1),a
      000024 A3               [24]  138 	inc	dptr
      000025 12r00r00         [24]  139 	lcall	__gptrget
      000028 F5*02            [12]  140 	mov	(_wcscmp_sloc0_1_0 + 2),a
      00002A A3               [24]  141 	inc	dptr
      00002B 12r00r00         [24]  142 	lcall	__gptrget
      00002E F5*03            [12]  143 	mov	(_wcscmp_sloc0_1_0 + 3),a
      000030 C0 07            [24]  144 	push	ar7
      000032 C0 05            [24]  145 	push	ar5
      000034 C0 06            [24]  146 	push	ar6
      000036 85*04 82         [24]  147 	mov	dpl,_wcscmp_sloc1_1_0
      000039 85*05 83         [24]  148 	mov	dph,(_wcscmp_sloc1_1_0 + 1)
      00003C 85*06 F0         [24]  149 	mov	b,(_wcscmp_sloc1_1_0 + 2)
      00003F 12r00r00         [24]  150 	lcall	__gptrget
      000042 FC               [12]  151 	mov	r4,a
      000043 A3               [24]  152 	inc	dptr
      000044 12r00r00         [24]  153 	lcall	__gptrget
      000047 FD               [12]  154 	mov	r5,a
      000048 A3               [24]  155 	inc	dptr
      000049 12r00r00         [24]  156 	lcall	__gptrget
      00004C FE               [12]  157 	mov	r6,a
      00004D A3               [24]  158 	inc	dptr
      00004E 12r00r00         [24]  159 	lcall	__gptrget
      000051 FF               [12]  160 	mov	r7,a
      000052 EC               [12]  161 	mov	a,r4
      000053 B5*00 0E         [24]  162 	cjne	a,_wcscmp_sloc0_1_0,00132$
      000056 ED               [12]  163 	mov	a,r5
      000057 B5*01 0A         [24]  164 	cjne	a,(_wcscmp_sloc0_1_0 + 1),00132$
      00005A EE               [12]  165 	mov	a,r6
      00005B B5*02 06         [24]  166 	cjne	a,(_wcscmp_sloc0_1_0 + 2),00132$
      00005E EF               [12]  167 	mov	a,r7
      00005F B5*03 02         [24]  168 	cjne	a,(_wcscmp_sloc0_1_0 + 3),00132$
      000062 80 08            [24]  169 	sjmp	00133$
      000064                        170 00132$:
      000064 D0 06            [24]  171 	pop	ar6
      000066 D0 05            [24]  172 	pop	ar5
      000068 D0 07            [24]  173 	pop	ar7
      00006A 80 25            [24]  174 	sjmp	00104$
      00006C                        175 00133$:
      00006C D0 06            [24]  176 	pop	ar6
      00006E D0 05            [24]  177 	pop	ar5
      000070 D0 07            [24]  178 	pop	ar7
      000072 E5*00            [12]  179 	mov	a,_wcscmp_sloc0_1_0
      000074 45*01            [12]  180 	orl	a,(_wcscmp_sloc0_1_0 + 1)
      000076 45*02            [12]  181 	orl	a,(_wcscmp_sloc0_1_0 + 2)
      000078 45*03            [12]  182 	orl	a,(_wcscmp_sloc0_1_0 + 3)
      00007A 60 15            [24]  183 	jz	00104$
                                    184 ;	wcscmp.c:34: s1++, s2++;
      00007C 74 04            [12]  185 	mov	a,#0x04
      00007E 2F               [12]  186 	add	a,r7
      00007F FF               [12]  187 	mov	r7,a
      000080 E4               [12]  188 	clr	a
      000081 3D               [12]  189 	addc	a,r5
      000082 FD               [12]  190 	mov	r5,a
      000083 74 04            [12]  191 	mov	a,#0x04
      000085 25*04            [12]  192 	add	a,_wcscmp_sloc1_1_0
      000087 F5*04            [12]  193 	mov	_wcscmp_sloc1_1_0,a
      000089 E4               [12]  194 	clr	a
      00008A 35*05            [12]  195 	addc	a,(_wcscmp_sloc1_1_0 + 1)
      00008C F5*05            [12]  196 	mov	(_wcscmp_sloc1_1_0 + 1),a
      00008E 02r00r13         [24]  197 	ljmp	00102$
      000091                        198 00104$:
                                    199 ;	wcscmp.c:36: if(*s1 < *s2)
      000091 8F 82            [24]  200 	mov	dpl,r7
      000093 8D 83            [24]  201 	mov	dph,r5
      000095 8E F0            [24]  202 	mov	b,r6
      000097 12r00r00         [24]  203 	lcall	__gptrget
      00009A FC               [12]  204 	mov	r4,a
      00009B A3               [24]  205 	inc	dptr
      00009C 12r00r00         [24]  206 	lcall	__gptrget
      00009F FD               [12]  207 	mov	r5,a
      0000A0 A3               [24]  208 	inc	dptr
      0000A1 12r00r00         [24]  209 	lcall	__gptrget
      0000A4 FE               [12]  210 	mov	r6,a
      0000A5 A3               [24]  211 	inc	dptr
      0000A6 12r00r00         [24]  212 	lcall	__gptrget
      0000A9 FF               [12]  213 	mov	r7,a
      0000AA 85*04 82         [24]  214 	mov	dpl,_wcscmp_sloc1_1_0
      0000AD 85*05 83         [24]  215 	mov	dph,(_wcscmp_sloc1_1_0 + 1)
      0000B0 85*06 F0         [24]  216 	mov	b,(_wcscmp_sloc1_1_0 + 2)
      0000B3 12r00r00         [24]  217 	lcall	__gptrget
      0000B6 F5*00            [12]  218 	mov	_wcscmp_sloc0_1_0,a
      0000B8 A3               [24]  219 	inc	dptr
      0000B9 12r00r00         [24]  220 	lcall	__gptrget
      0000BC F5*01            [12]  221 	mov	(_wcscmp_sloc0_1_0 + 1),a
      0000BE A3               [24]  222 	inc	dptr
      0000BF 12r00r00         [24]  223 	lcall	__gptrget
      0000C2 F5*02            [12]  224 	mov	(_wcscmp_sloc0_1_0 + 2),a
      0000C4 A3               [24]  225 	inc	dptr
      0000C5 12r00r00         [24]  226 	lcall	__gptrget
      0000C8 F5*03            [12]  227 	mov	(_wcscmp_sloc0_1_0 + 3),a
      0000CA C3               [12]  228 	clr	c
      0000CB EC               [12]  229 	mov	a,r4
      0000CC 95*00            [12]  230 	subb	a,_wcscmp_sloc0_1_0
      0000CE ED               [12]  231 	mov	a,r5
      0000CF 95*01            [12]  232 	subb	a,(_wcscmp_sloc0_1_0 + 1)
      0000D1 EE               [12]  233 	mov	a,r6
      0000D2 95*02            [12]  234 	subb	a,(_wcscmp_sloc0_1_0 + 2)
      0000D4 EF               [12]  235 	mov	a,r7
      0000D5 95*03            [12]  236 	subb	a,(_wcscmp_sloc0_1_0 + 3)
      0000D7 50 04            [24]  237 	jnc	00106$
                                    238 ;	wcscmp.c:37: return(-1);
      0000D9 90 FF FF         [24]  239 	mov	dptr,#0xffff
      0000DC 22               [24]  240 	ret
      0000DD                        241 00106$:
                                    242 ;	wcscmp.c:38: if(*s1 > *s2)
      0000DD C3               [12]  243 	clr	c
      0000DE E5*00            [12]  244 	mov	a,_wcscmp_sloc0_1_0
      0000E0 9C               [12]  245 	subb	a,r4
      0000E1 E5*01            [12]  246 	mov	a,(_wcscmp_sloc0_1_0 + 1)
      0000E3 9D               [12]  247 	subb	a,r5
      0000E4 E5*02            [12]  248 	mov	a,(_wcscmp_sloc0_1_0 + 2)
      0000E6 9E               [12]  249 	subb	a,r6
      0000E7 E5*03            [12]  250 	mov	a,(_wcscmp_sloc0_1_0 + 3)
      0000E9 9F               [12]  251 	subb	a,r7
      0000EA 50 04            [24]  252 	jnc	00108$
                                    253 ;	wcscmp.c:39: return(1);
      0000EC 90 00 01         [24]  254 	mov	dptr,#0x0001
      0000EF 22               [24]  255 	ret
      0000F0                        256 00108$:
                                    257 ;	wcscmp.c:40: return(0);
      0000F0 90 00 00         [24]  258 	mov	dptr,#0x0000
                                    259 ;	wcscmp.c:41: }
      0000F3 22               [24]  260 	ret
                                    261 	.area CSEG    (CODE)
                                    262 	.area CONST   (CODE)
                                    263 	.area XINIT   (CODE)
                                    264 	.area CABS    (ABS,CODE)
