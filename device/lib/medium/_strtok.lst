                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strtok
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strtok_PARM_2
                                     13 	.globl _strtok
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
      000000                         53 _strtok_PARM_2:
      000000                         54 	.ds 3
      000003                         55 _strtok_s_65536_27:
      000003                         56 	.ds 3
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; initialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'strtok'
                                     97 ;------------------------------------------------------------
                                     98 ;	_strtok.c:36: char * strtok ( char * str, const char * control )
                                     99 ;	-----------------------------------------
                                    100 ;	 function strtok
                                    101 ;	-----------------------------------------
      000000                        102 _strtok:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 AD 82            [24]  111 	mov	r5,dpl
      000002 AE 83            [24]  112 	mov	r6,dph
      000004 AF F0            [24]  113 	mov	r7,b
                                    114 ;	_strtok.c:41: if ( str )
      000006 ED               [12]  115 	mov	a,r5
      000007 4E               [12]  116 	orl	a,r6
      000008 60 0A            [24]  117 	jz	00102$
                                    118 ;	_strtok.c:42: s = str;
      00000A 78r03            [12]  119 	mov	r0,#_strtok_s_65536_27
      00000C ED               [12]  120 	mov	a,r5
      00000D F2               [24]  121 	movx	@r0,a
      00000E EE               [12]  122 	mov	a,r6
      00000F 08               [12]  123 	inc	r0
      000010 F2               [24]  124 	movx	@r0,a
      000011 EF               [12]  125 	mov	a,r7
      000012 08               [12]  126 	inc	r0
      000013 F2               [24]  127 	movx	@r0,a
      000014                        128 00102$:
                                    129 ;	_strtok.c:43: if ( !s )
      000014 78r03            [12]  130 	mov	r0,#_strtok_s_65536_27
      000016 E2               [24]  131 	movx	a,@r0
      000017 F5 F0            [12]  132 	mov	b,a
      000019 08               [12]  133 	inc	r0
      00001A E2               [24]  134 	movx	a,@r0
      00001B 45 F0            [12]  135 	orl	a,b
                                    136 ;	_strtok.c:44: return NULL;
      00001D 70 06            [24]  137 	jnz	00108$
      00001F 90 00 00         [24]  138 	mov	dptr,#0x0000
      000022 F5 F0            [12]  139 	mov	b,a
      000024 22               [24]  140 	ret
                                    141 ;	_strtok.c:46: while (*s) {
      000025                        142 00108$:
      000025 78r03            [12]  143 	mov	r0,#_strtok_s_65536_27
      000027 E2               [24]  144 	movx	a,@r0
      000028 FD               [12]  145 	mov	r5,a
      000029 08               [12]  146 	inc	r0
      00002A E2               [24]  147 	movx	a,@r0
      00002B FE               [12]  148 	mov	r6,a
      00002C 08               [12]  149 	inc	r0
      00002D E2               [24]  150 	movx	a,@r0
      00002E FF               [12]  151 	mov	r7,a
      00002F 8D 82            [24]  152 	mov	dpl,r5
      000031 8E 83            [24]  153 	mov	dph,r6
      000033 8F F0            [24]  154 	mov	b,r7
      000035 12r00r00         [24]  155 	lcall	__gptrget
      000038 FF               [12]  156 	mov	r7,a
      000039 60 2B            [24]  157 	jz	00110$
                                    158 ;	_strtok.c:47: if (strchr(control,*s))
      00003B 78r00            [12]  159 	mov	r0,#_strchr_PARM_2
      00003D EF               [12]  160 	mov	a,r7
      00003E F2               [24]  161 	movx	@r0,a
      00003F 78r00            [12]  162 	mov	r0,#_strtok_PARM_2
      000041 E2               [24]  163 	movx	a,@r0
      000042 F5 82            [12]  164 	mov	dpl,a
      000044 08               [12]  165 	inc	r0
      000045 E2               [24]  166 	movx	a,@r0
      000046 F5 83            [12]  167 	mov	dph,a
      000048 08               [12]  168 	inc	r0
      000049 E2               [24]  169 	movx	a,@r0
      00004A F5 F0            [12]  170 	mov	b,a
      00004C 12r00r00         [24]  171 	lcall	_strchr
      00004F AD 82            [24]  172 	mov	r5,dpl
      000051 AE 83            [24]  173 	mov	r6,dph
      000053 AF F0            [24]  174 	mov	r7,b
      000055 ED               [12]  175 	mov	a,r5
      000056 4E               [12]  176 	orl	a,r6
      000057 60 0D            [24]  177 	jz	00110$
                                    178 ;	_strtok.c:48: s++;
      000059 78r03            [12]  179 	mov	r0,#_strtok_s_65536_27
      00005B E2               [24]  180 	movx	a,@r0
      00005C 24 01            [12]  181 	add	a,#0x01
      00005E F2               [24]  182 	movx	@r0,a
      00005F 08               [12]  183 	inc	r0
      000060 E2               [24]  184 	movx	a,@r0
      000061 34 00            [12]  185 	addc	a,#0x00
      000063 F2               [24]  186 	movx	@r0,a
                                    187 ;	_strtok.c:50: break;
      000064 80 BF            [24]  188 	sjmp	00108$
      000066                        189 00110$:
                                    190 ;	_strtok.c:53: s1 = s;
      000066 78r03            [12]  191 	mov	r0,#_strtok_s_65536_27
      000068 E2               [24]  192 	movx	a,@r0
      000069 FD               [12]  193 	mov	r5,a
      00006A 08               [12]  194 	inc	r0
      00006B E2               [24]  195 	movx	a,@r0
      00006C FE               [12]  196 	mov	r6,a
      00006D 08               [12]  197 	inc	r0
      00006E E2               [24]  198 	movx	a,@r0
      00006F FF               [12]  199 	mov	r7,a
                                    200 ;	_strtok.c:55: while (*s) {
      000070                        201 00113$:
      000070 78r03            [12]  202 	mov	r0,#_strtok_s_65536_27
      000072 E2               [24]  203 	movx	a,@r0
      000073 FA               [12]  204 	mov	r2,a
      000074 08               [12]  205 	inc	r0
      000075 E2               [24]  206 	movx	a,@r0
      000076 FB               [12]  207 	mov	r3,a
      000077 08               [12]  208 	inc	r0
      000078 E2               [24]  209 	movx	a,@r0
      000079 FC               [12]  210 	mov	r4,a
      00007A 8A 82            [24]  211 	mov	dpl,r2
      00007C 8B 83            [24]  212 	mov	dph,r3
      00007E 8C F0            [24]  213 	mov	b,r4
      000080 12r00r00         [24]  214 	lcall	__gptrget
      000083 FC               [12]  215 	mov	r4,a
      000084 60 5D            [24]  216 	jz	00115$
                                    217 ;	_strtok.c:56: if (strchr(control,*s)) {
      000086 78r00            [12]  218 	mov	r0,#_strchr_PARM_2
      000088 EC               [12]  219 	mov	a,r4
      000089 F2               [24]  220 	movx	@r0,a
      00008A 78r00            [12]  221 	mov	r0,#_strtok_PARM_2
      00008C E2               [24]  222 	movx	a,@r0
      00008D F5 82            [12]  223 	mov	dpl,a
      00008F 08               [12]  224 	inc	r0
      000090 E2               [24]  225 	movx	a,@r0
      000091 F5 83            [12]  226 	mov	dph,a
      000093 08               [12]  227 	inc	r0
      000094 E2               [24]  228 	movx	a,@r0
      000095 F5 F0            [12]  229 	mov	b,a
      000097 C0 07            [24]  230 	push	ar7
      000099 C0 06            [24]  231 	push	ar6
      00009B C0 05            [24]  232 	push	ar5
      00009D 12r00r00         [24]  233 	lcall	_strchr
      0000A0 AA 82            [24]  234 	mov	r2,dpl
      0000A2 AB 83            [24]  235 	mov	r3,dph
      0000A4 AC F0            [24]  236 	mov	r4,b
      0000A6 D0 05            [24]  237 	pop	ar5
      0000A8 D0 06            [24]  238 	pop	ar6
      0000AA D0 07            [24]  239 	pop	ar7
      0000AC EA               [12]  240 	mov	a,r2
      0000AD 4B               [12]  241 	orl	a,r3
      0000AE 60 26            [24]  242 	jz	00112$
                                    243 ;	_strtok.c:57: *s++ = '\0';
      0000B0 78r03            [12]  244 	mov	r0,#_strtok_s_65536_27
      0000B2 E2               [24]  245 	movx	a,@r0
      0000B3 FA               [12]  246 	mov	r2,a
      0000B4 08               [12]  247 	inc	r0
      0000B5 E2               [24]  248 	movx	a,@r0
      0000B6 FB               [12]  249 	mov	r3,a
      0000B7 08               [12]  250 	inc	r0
      0000B8 E2               [24]  251 	movx	a,@r0
      0000B9 FC               [12]  252 	mov	r4,a
      0000BA 8A 82            [24]  253 	mov	dpl,r2
      0000BC 8B 83            [24]  254 	mov	dph,r3
      0000BE 8C F0            [24]  255 	mov	b,r4
      0000C0 E4               [12]  256 	clr	a
      0000C1 12r00r00         [24]  257 	lcall	__gptrput
      0000C4 78r03            [12]  258 	mov	r0,#_strtok_s_65536_27
      0000C6 E2               [24]  259 	movx	a,@r0
      0000C7 24 01            [12]  260 	add	a,#0x01
      0000C9 F2               [24]  261 	movx	@r0,a
      0000CA 08               [12]  262 	inc	r0
      0000CB E2               [24]  263 	movx	a,@r0
      0000CC 34 00            [12]  264 	addc	a,#0x00
      0000CE F2               [24]  265 	movx	@r0,a
                                    266 ;	_strtok.c:58: return s1;
      0000CF 8D 82            [24]  267 	mov	dpl,r5
      0000D1 8E 83            [24]  268 	mov	dph,r6
      0000D3 8F F0            [24]  269 	mov	b,r7
      0000D5 22               [24]  270 	ret
      0000D6                        271 00112$:
                                    272 ;	_strtok.c:60: s++ ;
      0000D6 78r03            [12]  273 	mov	r0,#_strtok_s_65536_27
      0000D8 E2               [24]  274 	movx	a,@r0
      0000D9 24 01            [12]  275 	add	a,#0x01
      0000DB F2               [24]  276 	movx	@r0,a
      0000DC 08               [12]  277 	inc	r0
      0000DD E2               [24]  278 	movx	a,@r0
      0000DE 34 00            [12]  279 	addc	a,#0x00
      0000E0 F2               [24]  280 	movx	@r0,a
      0000E1 80 8D            [24]  281 	sjmp	00113$
      0000E3                        282 00115$:
                                    283 ;	_strtok.c:63: s = NULL;
      0000E3 78r03            [12]  284 	mov	r0,#_strtok_s_65536_27
      0000E5 E4               [12]  285 	clr	a
      0000E6 F2               [24]  286 	movx	@r0,a
      0000E7 08               [12]  287 	inc	r0
      0000E8 F2               [24]  288 	movx	@r0,a
      0000E9 08               [12]  289 	inc	r0
      0000EA F2               [24]  290 	movx	@r0,a
                                    291 ;	_strtok.c:65: if (*s1)
      0000EB 8D 82            [24]  292 	mov	dpl,r5
      0000ED 8E 83            [24]  293 	mov	dph,r6
      0000EF 8F F0            [24]  294 	mov	b,r7
      0000F1 12r00r00         [24]  295 	lcall	__gptrget
      0000F4 60 07            [24]  296 	jz	00117$
                                    297 ;	_strtok.c:66: return s1;
      0000F6 8D 82            [24]  298 	mov	dpl,r5
      0000F8 8E 83            [24]  299 	mov	dph,r6
      0000FA 8F F0            [24]  300 	mov	b,r7
      0000FC 22               [24]  301 	ret
      0000FD                        302 00117$:
                                    303 ;	_strtok.c:68: return NULL;
      0000FD 90 00 00         [24]  304 	mov	dptr,#0x0000
      000100 75 F0 00         [24]  305 	mov	b,#0x00
                                    306 ;	_strtok.c:69: }
      000103 22               [24]  307 	ret
                                    308 	.area CSEG    (CODE)
                                    309 	.area CONST   (CODE)
                                    310 	.area XINIT   (CODE)
                                    311 	.area CABS    (ABS,CODE)
