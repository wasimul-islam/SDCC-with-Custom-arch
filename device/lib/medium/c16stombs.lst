                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module c16stombs
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___memcpy
                                     12 	.globl _wctomb
                                     13 	.globl ___c16stombs_PARM_3
                                     14 	.globl ___c16stombs_PARM_2
                                     15 	.globl ___c16stombs
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 ___c16stombs_sloc0_1_0:
      000000                         36 	.ds 2
      000002                         37 ___c16stombs_sloc1_1_0:
      000002                         38 	.ds 3
      000005                         39 ___c16stombs_sloc2_1_0:
      000005                         40 	.ds 3
      000008                         41 ___c16stombs_sloc3_1_0:
      000008                         42 	.ds 4
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable items in internal ram
                                     45 ;--------------------------------------------------------
                                     46 ;--------------------------------------------------------
                                     47 ; indirectly addressable internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area ISEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; absolute internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area IABS    (ABS,DATA)
                                     54 	.area IABS    (ABS,DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; bit data
                                     57 ;--------------------------------------------------------
                                     58 	.area BSEG    (BIT)
                                     59 ;--------------------------------------------------------
                                     60 ; paged external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area PSEG    (PAG,XDATA)
      000000                         63 ___c16stombs_PARM_2:
      000000                         64 	.ds 3
      000003                         65 ___c16stombs_PARM_3:
      000003                         66 	.ds 2
      000005                         67 ___c16stombs_s_65536_78:
      000005                         68 	.ds 3
      000008                         69 ___c16stombs_m_65536_79:
      000008                         70 	.ds 2
      00000A                         71 ___c16stombs_b_65536_79:
      00000A                         72 	.ds 4
      00000E                         73 ___c16stombs_l_196608_81:
      00000E                         74 	.ds 2
      000010                         75 ___c16stombs_codepoint_196608_81:
      000010                         76 	.ds 4
                                     77 ;--------------------------------------------------------
                                     78 ; uninitialized external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XSEG    (XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; absolute external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XABS    (ABS,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; initialized external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XISEG   (XDATA)
                                     89 	.area HOME    (CODE)
                                     90 	.area GSINIT0 (CODE)
                                     91 	.area GSINIT1 (CODE)
                                     92 	.area GSINIT2 (CODE)
                                     93 	.area GSINIT3 (CODE)
                                     94 	.area GSINIT4 (CODE)
                                     95 	.area GSINIT5 (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 	.area GSFINAL (CODE)
                                     98 	.area CSEG    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; global & static initialisations
                                    101 ;--------------------------------------------------------
                                    102 	.area HOME    (CODE)
                                    103 	.area GSINIT  (CODE)
                                    104 	.area GSFINAL (CODE)
                                    105 	.area GSINIT  (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; Home
                                    108 ;--------------------------------------------------------
                                    109 	.area HOME    (CODE)
                                    110 	.area HOME    (CODE)
                                    111 ;--------------------------------------------------------
                                    112 ; code
                                    113 ;--------------------------------------------------------
                                    114 	.area CSEG    (CODE)
                                    115 ;------------------------------------------------------------
                                    116 ;Allocation info for local variables in function '__c16stombs'
                                    117 ;------------------------------------------------------------
                                    118 ;sloc0                     Allocated with name '___c16stombs_sloc0_1_0'
                                    119 ;sloc1                     Allocated with name '___c16stombs_sloc1_1_0'
                                    120 ;sloc2                     Allocated with name '___c16stombs_sloc2_1_0'
                                    121 ;sloc3                     Allocated with name '___c16stombs_sloc3_1_0'
                                    122 ;------------------------------------------------------------
                                    123 ;	c16stombs.c:44: size_t __c16stombs(char *restrict s, const char16_t *restrict c16s, size_t n)
                                    124 ;	-----------------------------------------
                                    125 ;	 function __c16stombs
                                    126 ;	-----------------------------------------
      000000                        127 ___c16stombs:
                           000007   128 	ar7 = 0x07
                           000006   129 	ar6 = 0x06
                           000005   130 	ar5 = 0x05
                           000004   131 	ar4 = 0x04
                           000003   132 	ar3 = 0x03
                           000002   133 	ar2 = 0x02
                           000001   134 	ar1 = 0x01
                           000000   135 	ar0 = 0x00
      000000 AF F0            [24]  136 	mov	r7,b
      000002 AE 83            [24]  137 	mov	r6,dph
      000004 E5 82            [12]  138 	mov	a,dpl
      000006 78r05            [12]  139 	mov	r0,#___c16stombs_s_65536_78
      000008 F2               [24]  140 	movx	@r0,a
      000009 EE               [12]  141 	mov	a,r6
      00000A 08               [12]  142 	inc	r0
      00000B F2               [24]  143 	movx	@r0,a
      00000C EF               [12]  144 	mov	a,r7
      00000D 08               [12]  145 	inc	r0
      00000E F2               [24]  146 	movx	@r0,a
                                    147 ;	c16stombs.c:46: size_t m = 0;
      00000F 78r08            [12]  148 	mov	r0,#___c16stombs_m_65536_79
      000011 E4               [12]  149 	clr	a
      000012 F2               [24]  150 	movx	@r0,a
      000013 08               [12]  151 	inc	r0
      000014 F2               [24]  152 	movx	@r0,a
                                    153 ;	c16stombs.c:87: return(m);
      000015                        154 00119$:
                                    155 ;	c16stombs.c:54: if(c16s[0] < 0xd800 || c16s[0] >= 0xe000) // Basic multilingual plane
      000015 78r00            [12]  156 	mov	r0,#___c16stombs_PARM_2
      000017 E2               [24]  157 	movx	a,@r0
      000018 F5*05            [12]  158 	mov	___c16stombs_sloc2_1_0,a
      00001A 08               [12]  159 	inc	r0
      00001B E2               [24]  160 	movx	a,@r0
      00001C F5*06            [12]  161 	mov	(___c16stombs_sloc2_1_0 + 1),a
      00001E 08               [12]  162 	inc	r0
      00001F E2               [24]  163 	movx	a,@r0
      000020 F5*07            [12]  164 	mov	(___c16stombs_sloc2_1_0 + 2),a
      000022 85*05 82         [24]  165 	mov	dpl,___c16stombs_sloc2_1_0
      000025 85*06 83         [24]  166 	mov	dph,(___c16stombs_sloc2_1_0 + 1)
      000028 85*07 F0         [24]  167 	mov	b,(___c16stombs_sloc2_1_0 + 2)
      00002B 12r00r00         [24]  168 	lcall	__gptrget
      00002E F5*00            [12]  169 	mov	___c16stombs_sloc0_1_0,a
      000030 A3               [24]  170 	inc	dptr
      000031 12r00r00         [24]  171 	lcall	__gptrget
      000034 F5*01            [12]  172 	mov	(___c16stombs_sloc0_1_0 + 1),a
      000036 C3               [12]  173 	clr	c
      000037 94 D8            [12]  174 	subb	a,#0xd8
      000039 40 06            [24]  175 	jc	00106$
      00003B 74 20            [12]  176 	mov	a,#0x100 - 0xe0
      00003D 25*01            [12]  177 	add	a,(___c16stombs_sloc0_1_0 + 1)
      00003F 50 3E            [24]  178 	jnc	00107$
      000041                        179 00106$:
                                    180 ;	c16stombs.c:56: codepoint = c16s[0];
      000041 78r00            [12]  181 	mov	r0,#___c16stombs_PARM_2
      000043 E2               [24]  182 	movx	a,@r0
      000044 F5*02            [12]  183 	mov	___c16stombs_sloc1_1_0,a
      000046 08               [12]  184 	inc	r0
      000047 E2               [24]  185 	movx	a,@r0
      000048 F5*03            [12]  186 	mov	(___c16stombs_sloc1_1_0 + 1),a
      00004A 08               [12]  187 	inc	r0
      00004B E2               [24]  188 	movx	a,@r0
      00004C F5*04            [12]  189 	mov	(___c16stombs_sloc1_1_0 + 2),a
      00004E 85*02 82         [24]  190 	mov	dpl,___c16stombs_sloc1_1_0
      000051 85*03 83         [24]  191 	mov	dph,(___c16stombs_sloc1_1_0 + 1)
      000054 85*04 F0         [24]  192 	mov	b,(___c16stombs_sloc1_1_0 + 2)
      000057 12r00r00         [24]  193 	lcall	__gptrget
      00005A FE               [12]  194 	mov	r6,a
      00005B A3               [24]  195 	inc	dptr
      00005C 12r00r00         [24]  196 	lcall	__gptrget
      00005F FF               [12]  197 	mov	r7,a
      000060 78r10            [12]  198 	mov	r0,#___c16stombs_codepoint_196608_81
      000062 EE               [12]  199 	mov	a,r6
      000063 F2               [24]  200 	movx	@r0,a
      000064 EF               [12]  201 	mov	a,r7
      000065 08               [12]  202 	inc	r0
      000066 F2               [24]  203 	movx	@r0,a
      000067 E4               [12]  204 	clr	a
      000068 08               [12]  205 	inc	r0
      000069 F2               [24]  206 	movx	@r0,a
      00006A 08               [12]  207 	inc	r0
      00006B F2               [24]  208 	movx	@r0,a
                                    209 ;	c16stombs.c:57: c16s++;
      00006C 78r00            [12]  210 	mov	r0,#___c16stombs_PARM_2
      00006E 74 02            [12]  211 	mov	a,#0x02
      000070 25*02            [12]  212 	add	a,___c16stombs_sloc1_1_0
      000072 F2               [24]  213 	movx	@r0,a
      000073 E4               [12]  214 	clr	a
      000074 35*03            [12]  215 	addc	a,(___c16stombs_sloc1_1_0 + 1)
      000076 08               [12]  216 	inc	r0
      000077 F2               [24]  217 	movx	@r0,a
      000078 E5*04            [12]  218 	mov	a,(___c16stombs_sloc1_1_0 + 2)
      00007A 08               [12]  219 	inc	r0
      00007B F2               [24]  220 	movx	@r0,a
      00007C 02r01r1E         [24]  221 	ljmp	00108$
      00007F                        222 00107$:
                                    223 ;	c16stombs.c:59: else if(c16s[0] > 0xdbff || c16s[1] < 0xdc00 || c16s[1] > 0xdfff) // Unpaired surrogate
      00007F C3               [12]  224 	clr	c
      000080 74 FF            [12]  225 	mov	a,#0xff
      000082 95*00            [12]  226 	subb	a,___c16stombs_sloc0_1_0
      000084 74 DB            [12]  227 	mov	a,#0xdb
      000086 95*01            [12]  228 	subb	a,(___c16stombs_sloc0_1_0 + 1)
      000088 40 2B            [24]  229 	jc	00101$
      00008A 74 02            [12]  230 	mov	a,#0x02
      00008C 25*05            [12]  231 	add	a,___c16stombs_sloc2_1_0
      00008E FD               [12]  232 	mov	r5,a
      00008F E4               [12]  233 	clr	a
      000090 35*06            [12]  234 	addc	a,(___c16stombs_sloc2_1_0 + 1)
      000092 FE               [12]  235 	mov	r6,a
      000093 AF*07            [24]  236 	mov	r7,(___c16stombs_sloc2_1_0 + 2)
      000095 8D 82            [24]  237 	mov	dpl,r5
      000097 8E 83            [24]  238 	mov	dph,r6
      000099 8F F0            [24]  239 	mov	b,r7
      00009B 12r00r00         [24]  240 	lcall	__gptrget
      00009E F5*02            [12]  241 	mov	___c16stombs_sloc1_1_0,a
      0000A0 A3               [24]  242 	inc	dptr
      0000A1 12r00r00         [24]  243 	lcall	__gptrget
      0000A4 F5*03            [12]  244 	mov	(___c16stombs_sloc1_1_0 + 1),a
      0000A6 C3               [12]  245 	clr	c
      0000A7 94 DC            [12]  246 	subb	a,#0xdc
      0000A9 40 0A            [24]  247 	jc	00101$
      0000AB 74 FF            [12]  248 	mov	a,#0xff
      0000AD 95*02            [12]  249 	subb	a,___c16stombs_sloc1_1_0
      0000AF 74 DF            [12]  250 	mov	a,#0xdf
      0000B1 95*03            [12]  251 	subb	a,(___c16stombs_sloc1_1_0 + 1)
      0000B3 50 04            [24]  252 	jnc	00102$
      0000B5                        253 00101$:
                                    254 ;	c16stombs.c:60: return(-1);
      0000B5 90 FF FF         [24]  255 	mov	dptr,#0xffff
      0000B8 22               [24]  256 	ret
      0000B9                        257 00102$:
                                    258 ;	c16stombs.c:63: codepoint = ((unsigned long)(c16s[0]) << 10) -(0xd800ul << 10) + (unsigned long)(c16s[1]) - 0xdc00ul + 0x10000ul;
      0000B9 AC*00            [24]  259 	mov	r4,___c16stombs_sloc0_1_0
      0000BB AD*01            [24]  260 	mov	r5,(___c16stombs_sloc0_1_0 + 1)
      0000BD 7E 00            [12]  261 	mov	r6,#0x00
      0000BF 8D*0A            [24]  262 	mov	(___c16stombs_sloc3_1_0 + 2),r5
      0000C1 EE               [12]  263 	mov	a,r6
      0000C2 C5*0A            [12]  264 	xch	a,(___c16stombs_sloc3_1_0 + 2)
      0000C4 25 E0            [12]  265 	add	a,acc
      0000C6 C5*0A            [12]  266 	xch	a,(___c16stombs_sloc3_1_0 + 2)
      0000C8 33               [12]  267 	rlc	a
      0000C9 C5*0A            [12]  268 	xch	a,(___c16stombs_sloc3_1_0 + 2)
      0000CB 25 E0            [12]  269 	add	a,acc
      0000CD C5*0A            [12]  270 	xch	a,(___c16stombs_sloc3_1_0 + 2)
      0000CF 33               [12]  271 	rlc	a
      0000D0 F5*0B            [12]  272 	mov	(___c16stombs_sloc3_1_0 + 3),a
      0000D2 EC               [12]  273 	mov	a,r4
      0000D3 23               [12]  274 	rl	a
      0000D4 23               [12]  275 	rl	a
      0000D5 54 03            [12]  276 	anl	a,#0x03
      0000D7 45*0A            [12]  277 	orl	a,(___c16stombs_sloc3_1_0 + 2)
      0000D9 F5*0A            [12]  278 	mov	(___c16stombs_sloc3_1_0 + 2),a
      0000DB EC               [12]  279 	mov	a,r4
      0000DC 2C               [12]  280 	add	a,r4
      0000DD 25 E0            [12]  281 	add	a,acc
      0000DF F5*09            [12]  282 	mov	(___c16stombs_sloc3_1_0 + 1),a
      0000E1 75*08 00         [24]  283 	mov	___c16stombs_sloc3_1_0,#0x00
      0000E4 AA*02            [24]  284 	mov	r2,___c16stombs_sloc1_1_0
      0000E6 AB*03            [24]  285 	mov	r3,(___c16stombs_sloc1_1_0 + 1)
      0000E8 E4               [12]  286 	clr	a
      0000E9 FE               [12]  287 	mov	r6,a
      0000EA FF               [12]  288 	mov	r7,a
      0000EB EA               [12]  289 	mov	a,r2
      0000EC 25*08            [12]  290 	add	a,___c16stombs_sloc3_1_0
      0000EE FA               [12]  291 	mov	r2,a
      0000EF EB               [12]  292 	mov	a,r3
      0000F0 35*09            [12]  293 	addc	a,(___c16stombs_sloc3_1_0 + 1)
      0000F2 FB               [12]  294 	mov	r3,a
      0000F3 EE               [12]  295 	mov	a,r6
      0000F4 35*0A            [12]  296 	addc	a,(___c16stombs_sloc3_1_0 + 2)
      0000F6 FE               [12]  297 	mov	r6,a
      0000F7 EF               [12]  298 	mov	a,r7
      0000F8 35*0B            [12]  299 	addc	a,(___c16stombs_sloc3_1_0 + 3)
      0000FA FF               [12]  300 	mov	r7,a
      0000FB 78r10            [12]  301 	mov	r0,#___c16stombs_codepoint_196608_81
      0000FD EA               [12]  302 	mov	a,r2
      0000FE F2               [24]  303 	movx	@r0,a
      0000FF 74 24            [12]  304 	mov	a,#0x24
      000101 2B               [12]  305 	add	a,r3
      000102 08               [12]  306 	inc	r0
      000103 F2               [24]  307 	movx	@r0,a
      000104 74 A0            [12]  308 	mov	a,#0xa0
      000106 3E               [12]  309 	addc	a,r6
      000107 08               [12]  310 	inc	r0
      000108 F2               [24]  311 	movx	@r0,a
      000109 74 FC            [12]  312 	mov	a,#0xfc
      00010B 3F               [12]  313 	addc	a,r7
      00010C 08               [12]  314 	inc	r0
      00010D F2               [24]  315 	movx	@r0,a
                                    316 ;	c16stombs.c:64: c16s += 2;
      00010E 78r00            [12]  317 	mov	r0,#___c16stombs_PARM_2
      000110 74 04            [12]  318 	mov	a,#0x04
      000112 25*05            [12]  319 	add	a,___c16stombs_sloc2_1_0
      000114 F2               [24]  320 	movx	@r0,a
      000115 E4               [12]  321 	clr	a
      000116 35*06            [12]  322 	addc	a,(___c16stombs_sloc2_1_0 + 1)
      000118 08               [12]  323 	inc	r0
      000119 F2               [24]  324 	movx	@r0,a
      00011A E5*07            [12]  325 	mov	a,(___c16stombs_sloc2_1_0 + 2)
      00011C 08               [12]  326 	inc	r0
      00011D F2               [24]  327 	movx	@r0,a
                                    328 ;	c16stombs.c:87: return(m);
                                    329 ;	c16stombs.c:64: c16s += 2;
      00011E                        330 00108$:
                                    331 ;	c16stombs.c:67: if(!codepoint)
      00011E 78r10            [12]  332 	mov	r0,#___c16stombs_codepoint_196608_81
      000120 E2               [24]  333 	movx	a,@r0
      000121 F5 F0            [12]  334 	mov	b,a
      000123 08               [12]  335 	inc	r0
      000124 E2               [24]  336 	movx	a,@r0
      000125 42 F0            [12]  337 	orl	b,a
      000127 08               [12]  338 	inc	r0
      000128 E2               [24]  339 	movx	a,@r0
      000129 42 F0            [12]  340 	orl	b,a
      00012B 08               [12]  341 	inc	r0
      00012C E2               [24]  342 	movx	a,@r0
      00012D 45 F0            [12]  343 	orl	a,b
      00012F 70 2C            [24]  344 	jnz	00113$
                                    345 ;	c16stombs.c:69: if(m < n)
      000131 78r08            [12]  346 	mov	r0,#___c16stombs_m_65536_79
      000133 79r03            [12]  347 	mov	r1,#___c16stombs_PARM_3
      000135 C3               [12]  348 	clr	c
      000136 E3               [24]  349 	movx	a,@r1
      000137 F5 F0            [12]  350 	mov	b,a
      000139 E2               [24]  351 	movx	a,@r0
      00013A 95 F0            [12]  352 	subb	a,b
      00013C 09               [12]  353 	inc	r1
      00013D E3               [24]  354 	movx	a,@r1
      00013E F5 F0            [12]  355 	mov	b,a
      000140 08               [12]  356 	inc	r0
      000141 E2               [24]  357 	movx	a,@r0
      000142 95 F0            [12]  358 	subb	a,b
      000144 40 03            [24]  359 	jc	00161$
      000146 02r01rF6         [24]  360 	ljmp	00118$
      000149                        361 00161$:
                                    362 ;	c16stombs.c:70: *s = 0;
      000149 78r05            [12]  363 	mov	r0,#___c16stombs_s_65536_78
      00014B E2               [24]  364 	movx	a,@r0
      00014C F5 82            [12]  365 	mov	dpl,a
      00014E 08               [12]  366 	inc	r0
      00014F E2               [24]  367 	movx	a,@r0
      000150 F5 83            [12]  368 	mov	dph,a
      000152 08               [12]  369 	inc	r0
      000153 E2               [24]  370 	movx	a,@r0
      000154 F5 F0            [12]  371 	mov	b,a
      000156 E4               [12]  372 	clr	a
      000157 12r00r00         [24]  373 	lcall	__gptrput
                                    374 ;	c16stombs.c:71: break;
      00015A 02r01rF6         [24]  375 	ljmp	00118$
      00015D                        376 00113$:
                                    377 ;	c16stombs.c:74: l = wctomb(b, codepoint);
      00015D 78r10            [12]  378 	mov	r0,#___c16stombs_codepoint_196608_81
      00015F 79r00            [12]  379 	mov	r1,#_wctomb_PARM_2
      000161 E2               [24]  380 	movx	a,@r0
      000162 F3               [24]  381 	movx	@r1,a
      000163 08               [12]  382 	inc	r0
      000164 E2               [24]  383 	movx	a,@r0
      000165 09               [12]  384 	inc	r1
      000166 F3               [24]  385 	movx	@r1,a
      000167 08               [12]  386 	inc	r0
      000168 E2               [24]  387 	movx	a,@r0
      000169 09               [12]  388 	inc	r1
      00016A F3               [24]  389 	movx	@r1,a
      00016B 08               [12]  390 	inc	r0
      00016C E2               [24]  391 	movx	a,@r0
      00016D 09               [12]  392 	inc	r1
      00016E F3               [24]  393 	movx	@r1,a
      00016F 90r00r0A         [24]  394 	mov	dptr,#___c16stombs_b_65536_79
      000172 75 F0 60         [24]  395 	mov	b,#0x60
      000175 12r00r00         [24]  396 	lcall	_wctomb
      000178 78r0E            [12]  397 	mov	r0,#___c16stombs_l_196608_81
      00017A E5 82            [12]  398 	mov	a,dpl
      00017C F2               [24]  399 	movx	@r0,a
      00017D E5 83            [12]  400 	mov	a,dph
      00017F 08               [12]  401 	inc	r0
      000180 F2               [24]  402 	movx	@r0,a
                                    403 ;	c16stombs.c:76: if(l < 0)
      000181 78r0F            [12]  404 	mov	r0,#(___c16stombs_l_196608_81 + 1)
      000183 E2               [24]  405 	movx	a,@r0
      000184 30 E7 04         [24]  406 	jnb	acc.7,00115$
                                    407 ;	c16stombs.c:77: return(-1);
      000187 90 FF FF         [24]  408 	mov	dptr,#0xffff
      00018A 22               [24]  409 	ret
      00018B                        410 00115$:
                                    411 ;	c16stombs.c:79: if(m + l > n)
      00018B 78r0E            [12]  412 	mov	r0,#___c16stombs_l_196608_81
      00018D E2               [24]  413 	movx	a,@r0
      00018E FA               [12]  414 	mov	r2,a
      00018F 08               [12]  415 	inc	r0
      000190 E2               [24]  416 	movx	a,@r0
      000191 FC               [12]  417 	mov	r4,a
      000192 78r08            [12]  418 	mov	r0,#___c16stombs_m_65536_79
      000194 E2               [24]  419 	movx	a,@r0
      000195 2A               [12]  420 	add	a,r2
      000196 FB               [12]  421 	mov	r3,a
      000197 08               [12]  422 	inc	r0
      000198 E2               [24]  423 	movx	a,@r0
      000199 3C               [12]  424 	addc	a,r4
      00019A FF               [12]  425 	mov	r7,a
      00019B 78r03            [12]  426 	mov	r0,#___c16stombs_PARM_3
      00019D C3               [12]  427 	clr	c
      00019E E2               [24]  428 	movx	a,@r0
      00019F 9B               [12]  429 	subb	a,r3
      0001A0 08               [12]  430 	inc	r0
      0001A1 E2               [24]  431 	movx	a,@r0
      0001A2 9F               [12]  432 	subb	a,r7
      0001A3 40 51            [24]  433 	jc	00118$
                                    434 ;	c16stombs.c:82: memcpy(s, b, l);
      0001A5 78r05            [12]  435 	mov	r0,#___c16stombs_s_65536_78
      0001A7 E2               [24]  436 	movx	a,@r0
      0001A8 FB               [12]  437 	mov	r3,a
      0001A9 08               [12]  438 	inc	r0
      0001AA E2               [24]  439 	movx	a,@r0
      0001AB FE               [12]  440 	mov	r6,a
      0001AC 08               [12]  441 	inc	r0
      0001AD E2               [24]  442 	movx	a,@r0
      0001AE FF               [12]  443 	mov	r7,a
      0001AF 78r00            [12]  444 	mov	r0,#___memcpy_PARM_2
      0001B1 74r0A            [12]  445 	mov	a,#___c16stombs_b_65536_79
      0001B3 F2               [24]  446 	movx	@r0,a
      0001B4 E4               [12]  447 	clr	a
      0001B5 08               [12]  448 	inc	r0
      0001B6 F2               [24]  449 	movx	@r0,a
      0001B7 74 60            [12]  450 	mov	a,#0x60
      0001B9 08               [12]  451 	inc	r0
      0001BA F2               [24]  452 	movx	@r0,a
      0001BB 78r0E            [12]  453 	mov	r0,#___c16stombs_l_196608_81
      0001BD 79r00            [12]  454 	mov	r1,#___memcpy_PARM_3
      0001BF E2               [24]  455 	movx	a,@r0
      0001C0 F3               [24]  456 	movx	@r1,a
      0001C1 08               [12]  457 	inc	r0
      0001C2 E2               [24]  458 	movx	a,@r0
      0001C3 09               [12]  459 	inc	r1
      0001C4 F3               [24]  460 	movx	@r1,a
      0001C5 8B 82            [24]  461 	mov	dpl,r3
      0001C7 8E 83            [24]  462 	mov	dph,r6
      0001C9 8F F0            [24]  463 	mov	b,r7
      0001CB C0 04            [24]  464 	push	ar4
      0001CD C0 02            [24]  465 	push	ar2
      0001CF 12r00r00         [24]  466 	lcall	___memcpy
      0001D2 D0 02            [24]  467 	pop	ar2
      0001D4 D0 04            [24]  468 	pop	ar4
                                    469 ;	c16stombs.c:83: s += l;
      0001D6 78r05            [12]  470 	mov	r0,#___c16stombs_s_65536_78
      0001D8 79r0E            [12]  471 	mov	r1,#___c16stombs_l_196608_81
      0001DA E3               [24]  472 	movx	a,@r1
      0001DB C5 F0            [12]  473 	xch	a,b
      0001DD E2               [24]  474 	movx	a,@r0
      0001DE 25 F0            [12]  475 	add	a,b
      0001E0 F2               [24]  476 	movx	@r0,a
      0001E1 09               [12]  477 	inc	r1
      0001E2 E3               [24]  478 	movx	a,@r1
      0001E3 C5 F0            [12]  479 	xch	a,b
      0001E5 08               [12]  480 	inc	r0
      0001E6 E2               [24]  481 	movx	a,@r0
      0001E7 35 F0            [12]  482 	addc	a,b
      0001E9 F2               [24]  483 	movx	@r0,a
                                    484 ;	c16stombs.c:84: m += l;
      0001EA 78r08            [12]  485 	mov	r0,#___c16stombs_m_65536_79
      0001EC E2               [24]  486 	movx	a,@r0
      0001ED 2A               [12]  487 	add	a,r2
      0001EE F2               [24]  488 	movx	@r0,a
      0001EF 08               [12]  489 	inc	r0
      0001F0 E2               [24]  490 	movx	a,@r0
      0001F1 3C               [12]  491 	addc	a,r4
      0001F2 F2               [24]  492 	movx	@r0,a
      0001F3 02r00r15         [24]  493 	ljmp	00119$
      0001F6                        494 00118$:
                                    495 ;	c16stombs.c:87: return(m);
      0001F6 78r08            [12]  496 	mov	r0,#___c16stombs_m_65536_79
      0001F8 E2               [24]  497 	movx	a,@r0
      0001F9 F5 82            [12]  498 	mov	dpl,a
      0001FB 08               [12]  499 	inc	r0
      0001FC E2               [24]  500 	movx	a,@r0
      0001FD F5 83            [12]  501 	mov	dph,a
                                    502 ;	c16stombs.c:88: }
      0001FF 22               [24]  503 	ret
                                    504 	.area CSEG    (CODE)
                                    505 	.area CONST   (CODE)
                                    506 	.area XINIT   (CODE)
                                    507 	.area CABS    (ABS,CODE)
