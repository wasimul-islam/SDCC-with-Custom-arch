                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtoc16
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbrtowc
                                     12 	.globl _mbrtoc16_PARM_4
                                     13 	.globl _mbrtoc16_PARM_3
                                     14 	.globl _mbrtoc16_PARM_2
                                     15 	.globl _mbrtoc16
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _mbrtoc16_sloc0_1_0:
      000000                         36 	.ds 3
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
      000000                         57 _mbrtoc16_PARM_2:
      000000                         58 	.ds 3
      000003                         59 _mbrtoc16_PARM_3:
      000003                         60 	.ds 2
      000005                         61 _mbrtoc16_PARM_4:
      000005                         62 	.ds 3
      000008                         63 _mbrtoc16_pc16_65536_15:
      000008                         64 	.ds 3
      00000B                         65 _mbrtoc16_codepoint_65536_16:
      00000B                         66 	.ds 4
      00000F                         67 _mbrtoc16_ret_65536_16:
      00000F                         68 	.ds 2
      000011                         69 _mbrtoc16_sps_65536_16:
      000011                         70 	.ds 3
                                     71 ;--------------------------------------------------------
                                     72 ; uninitialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; absolute external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XABS    (ABS,XDATA)
                                     79 ;--------------------------------------------------------
                                     80 ; initialized external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XISEG   (XDATA)
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT0 (CODE)
                                     85 	.area GSINIT1 (CODE)
                                     86 	.area GSINIT2 (CODE)
                                     87 	.area GSINIT3 (CODE)
                                     88 	.area GSINIT4 (CODE)
                                     89 	.area GSINIT5 (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area CSEG    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; global & static initialisations
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 	.area GSFINAL (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME    (CODE)
                                    104 	.area HOME    (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CSEG    (CODE)
                                    109 ;------------------------------------------------------------
                                    110 ;Allocation info for local variables in function 'mbrtoc16'
                                    111 ;------------------------------------------------------------
                                    112 ;sloc0                     Allocated with name '_mbrtoc16_sloc0_1_0'
                                    113 ;------------------------------------------------------------
                                    114 ;	mbrtoc16.c:34: size_t mbrtoc16(char16_t *restrict pc16, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    115 ;	-----------------------------------------
                                    116 ;	 function mbrtoc16
                                    117 ;	-----------------------------------------
      000000                        118 _mbrtoc16:
                           000007   119 	ar7 = 0x07
                           000006   120 	ar6 = 0x06
                           000005   121 	ar5 = 0x05
                           000004   122 	ar4 = 0x04
                           000003   123 	ar3 = 0x03
                           000002   124 	ar2 = 0x02
                           000001   125 	ar1 = 0x01
                           000000   126 	ar0 = 0x00
      000000 AF F0            [24]  127 	mov	r7,b
      000002 AE 83            [24]  128 	mov	r6,dph
      000004 E5 82            [12]  129 	mov	a,dpl
      000006 78r08            [12]  130 	mov	r0,#_mbrtoc16_pc16_65536_15
      000008 F2               [24]  131 	movx	@r0,a
      000009 EE               [12]  132 	mov	a,r6
      00000A 08               [12]  133 	inc	r0
      00000B F2               [24]  134 	movx	@r0,a
      00000C EF               [12]  135 	mov	a,r7
      00000D 08               [12]  136 	inc	r0
      00000E F2               [24]  137 	movx	@r0,a
                                    138 ;	mbrtoc16.c:41: if(!s)
      00000F 78r00            [12]  139 	mov	r0,#_mbrtoc16_PARM_2
      000011 E2               [24]  140 	movx	a,@r0
      000012 F5 F0            [12]  141 	mov	b,a
      000014 08               [12]  142 	inc	r0
      000015 E2               [24]  143 	movx	a,@r0
      000016 45 F0            [12]  144 	orl	a,b
      000018 70 1C            [24]  145 	jnz	00102$
                                    146 ;	mbrtoc16.c:42: return(mbrtoc16(0, "", 1, ps));
      00001A 78r00            [12]  147 	mov	r0,#_mbrtoc16_PARM_2
      00001C 74r00            [12]  148 	mov	a,#___str_0
      00001E F2               [24]  149 	movx	@r0,a
      00001F 74s00            [12]  150 	mov	a,#(___str_0 >> 8)
      000021 08               [12]  151 	inc	r0
      000022 F2               [24]  152 	movx	@r0,a
      000023 74 80            [12]  153 	mov	a,#0x80
      000025 08               [12]  154 	inc	r0
      000026 F2               [24]  155 	movx	@r0,a
      000027 78r03            [12]  156 	mov	r0,#_mbrtoc16_PARM_3
      000029 23               [12]  157 	rl	a
      00002A F2               [24]  158 	movx	@r0,a
      00002B E4               [12]  159 	clr	a
      00002C 08               [12]  160 	inc	r0
      00002D F2               [24]  161 	movx	@r0,a
      00002E 90 00 00         [24]  162 	mov	dptr,#0x0000
      000031 F5 F0            [12]  163 	mov	b,a
      000033 02r00r00         [24]  164 	ljmp	_mbrtoc16
      000036                        165 00102$:
                                    166 ;	mbrtoc16.c:44: if(!ps)
      000036 78r05            [12]  167 	mov	r0,#_mbrtoc16_PARM_4
      000038 E2               [24]  168 	movx	a,@r0
      000039 F5 F0            [12]  169 	mov	b,a
      00003B 08               [12]  170 	inc	r0
      00003C E2               [24]  171 	movx	a,@r0
      00003D 45 F0            [12]  172 	orl	a,b
      00003F 70 0C            [24]  173 	jnz	00104$
                                    174 ;	mbrtoc16.c:45: ps = &sps;
      000041 78r05            [12]  175 	mov	r0,#_mbrtoc16_PARM_4
      000043 74r11            [12]  176 	mov	a,#_mbrtoc16_sps_65536_16
      000045 F2               [24]  177 	movx	@r0,a
      000046 E4               [12]  178 	clr	a
      000047 08               [12]  179 	inc	r0
      000048 F2               [24]  180 	movx	@r0,a
      000049 74 60            [12]  181 	mov	a,#0x60
      00004B 08               [12]  182 	inc	r0
      00004C F2               [24]  183 	movx	@r0,a
      00004D                        184 00104$:
                                    185 ;	mbrtoc16.c:47: if(!ps->c[0] && (ps->c[1] || ps->c[2]))
      00004D 78r05            [12]  186 	mov	r0,#_mbrtoc16_PARM_4
      00004F E2               [24]  187 	movx	a,@r0
      000050 FA               [12]  188 	mov	r2,a
      000051 08               [12]  189 	inc	r0
      000052 E2               [24]  190 	movx	a,@r0
      000053 FB               [12]  191 	mov	r3,a
      000054 08               [12]  192 	inc	r0
      000055 E2               [24]  193 	movx	a,@r0
      000056 FC               [12]  194 	mov	r4,a
      000057 8A 82            [24]  195 	mov	dpl,r2
      000059 8B 83            [24]  196 	mov	dph,r3
      00005B 8C F0            [24]  197 	mov	b,r4
      00005D 12r00r00         [24]  198 	lcall	__gptrget
      000060 60 03            [24]  199 	jz	00159$
      000062 02r01r17         [24]  200 	ljmp	00108$
      000065                        201 00159$:
      000065 74 01            [12]  202 	mov	a,#0x01
      000067 2A               [12]  203 	add	a,r2
      000068 FD               [12]  204 	mov	r5,a
      000069 E4               [12]  205 	clr	a
      00006A 3B               [12]  206 	addc	a,r3
      00006B FE               [12]  207 	mov	r6,a
      00006C 8C 07            [24]  208 	mov	ar7,r4
      00006E 8D 82            [24]  209 	mov	dpl,r5
      000070 8E 83            [24]  210 	mov	dph,r6
      000072 8F F0            [24]  211 	mov	b,r7
      000074 12r00r00         [24]  212 	lcall	__gptrget
      000077 70 15            [24]  213 	jnz	00107$
      000079 74 02            [12]  214 	mov	a,#0x02
      00007B 2A               [12]  215 	add	a,r2
      00007C FA               [12]  216 	mov	r2,a
      00007D E4               [12]  217 	clr	a
      00007E 3B               [12]  218 	addc	a,r3
      00007F FB               [12]  219 	mov	r3,a
      000080 8A 82            [24]  220 	mov	dpl,r2
      000082 8B 83            [24]  221 	mov	dph,r3
      000084 8C F0            [24]  222 	mov	b,r4
      000086 12r00r00         [24]  223 	lcall	__gptrget
      000089 70 03            [24]  224 	jnz	00161$
      00008B 02r01r17         [24]  225 	ljmp	00108$
      00008E                        226 00161$:
      00008E                        227 00107$:
                                    228 ;	mbrtoc16.c:49: if(pc16)
      00008E 78r08            [12]  229 	mov	r0,#_mbrtoc16_pc16_65536_15
      000090 E2               [24]  230 	movx	a,@r0
      000091 F5 F0            [12]  231 	mov	b,a
      000093 08               [12]  232 	inc	r0
      000094 E2               [24]  233 	movx	a,@r0
      000095 45 F0            [12]  234 	orl	a,b
      000097 60 4D            [24]  235 	jz	00106$
                                    236 ;	mbrtoc16.c:50: *pc16 = ps->c[1] + (ps->c[2] << 8);
      000099 78r05            [12]  237 	mov	r0,#_mbrtoc16_PARM_4
      00009B E2               [24]  238 	movx	a,@r0
      00009C FA               [12]  239 	mov	r2,a
      00009D 08               [12]  240 	inc	r0
      00009E E2               [24]  241 	movx	a,@r0
      00009F FB               [12]  242 	mov	r3,a
      0000A0 08               [12]  243 	inc	r0
      0000A1 E2               [24]  244 	movx	a,@r0
      0000A2 FC               [12]  245 	mov	r4,a
      0000A3 74 01            [12]  246 	mov	a,#0x01
      0000A5 2A               [12]  247 	add	a,r2
      0000A6 FD               [12]  248 	mov	r5,a
      0000A7 E4               [12]  249 	clr	a
      0000A8 3B               [12]  250 	addc	a,r3
      0000A9 FE               [12]  251 	mov	r6,a
      0000AA 8C 07            [24]  252 	mov	ar7,r4
      0000AC 8D 82            [24]  253 	mov	dpl,r5
      0000AE 8E 83            [24]  254 	mov	dph,r6
      0000B0 8F F0            [24]  255 	mov	b,r7
      0000B2 12r00r00         [24]  256 	lcall	__gptrget
      0000B5 FD               [12]  257 	mov	r5,a
      0000B6 7F 00            [12]  258 	mov	r7,#0x00
      0000B8 74 02            [12]  259 	mov	a,#0x02
      0000BA 2A               [12]  260 	add	a,r2
      0000BB FA               [12]  261 	mov	r2,a
      0000BC E4               [12]  262 	clr	a
      0000BD 3B               [12]  263 	addc	a,r3
      0000BE FB               [12]  264 	mov	r3,a
      0000BF 8A 82            [24]  265 	mov	dpl,r2
      0000C1 8B 83            [24]  266 	mov	dph,r3
      0000C3 8C F0            [24]  267 	mov	b,r4
      0000C5 12r00r00         [24]  268 	lcall	__gptrget
      0000C8 FE               [12]  269 	mov	r6,a
      0000C9 E4               [12]  270 	clr	a
      0000CA FA               [12]  271 	mov	r2,a
      0000CB 2D               [12]  272 	add	a,r5
      0000CC FD               [12]  273 	mov	r5,a
      0000CD EE               [12]  274 	mov	a,r6
      0000CE 3F               [12]  275 	addc	a,r7
      0000CF FF               [12]  276 	mov	r7,a
      0000D0 78r08            [12]  277 	mov	r0,#_mbrtoc16_pc16_65536_15
      0000D2 E2               [24]  278 	movx	a,@r0
      0000D3 F5 82            [12]  279 	mov	dpl,a
      0000D5 08               [12]  280 	inc	r0
      0000D6 E2               [24]  281 	movx	a,@r0
      0000D7 F5 83            [12]  282 	mov	dph,a
      0000D9 08               [12]  283 	inc	r0
      0000DA E2               [24]  284 	movx	a,@r0
      0000DB F5 F0            [12]  285 	mov	b,a
      0000DD ED               [12]  286 	mov	a,r5
      0000DE 12r00r00         [24]  287 	lcall	__gptrput
      0000E1 A3               [24]  288 	inc	dptr
      0000E2 EF               [12]  289 	mov	a,r7
      0000E3 12r00r00         [24]  290 	lcall	__gptrput
      0000E6                        291 00106$:
                                    292 ;	mbrtoc16.c:51: ps->c[1] = ps->c[2] = 0;
      0000E6 78r05            [12]  293 	mov	r0,#_mbrtoc16_PARM_4
      0000E8 E2               [24]  294 	movx	a,@r0
      0000E9 FD               [12]  295 	mov	r5,a
      0000EA 08               [12]  296 	inc	r0
      0000EB E2               [24]  297 	movx	a,@r0
      0000EC FE               [12]  298 	mov	r6,a
      0000ED 08               [12]  299 	inc	r0
      0000EE E2               [24]  300 	movx	a,@r0
      0000EF FF               [12]  301 	mov	r7,a
      0000F0 74 01            [12]  302 	mov	a,#0x01
      0000F2 2D               [12]  303 	add	a,r5
      0000F3 FA               [12]  304 	mov	r2,a
      0000F4 E4               [12]  305 	clr	a
      0000F5 3E               [12]  306 	addc	a,r6
      0000F6 FB               [12]  307 	mov	r3,a
      0000F7 8F 04            [24]  308 	mov	ar4,r7
      0000F9 74 02            [12]  309 	mov	a,#0x02
      0000FB 2D               [12]  310 	add	a,r5
      0000FC FD               [12]  311 	mov	r5,a
      0000FD E4               [12]  312 	clr	a
      0000FE 3E               [12]  313 	addc	a,r6
      0000FF FE               [12]  314 	mov	r6,a
      000100 8D 82            [24]  315 	mov	dpl,r5
      000102 8E 83            [24]  316 	mov	dph,r6
      000104 8F F0            [24]  317 	mov	b,r7
      000106 E4               [12]  318 	clr	a
      000107 12r00r00         [24]  319 	lcall	__gptrput
      00010A 8A 82            [24]  320 	mov	dpl,r2
      00010C 8B 83            [24]  321 	mov	dph,r3
      00010E 8C F0            [24]  322 	mov	b,r4
      000110 12r00r00         [24]  323 	lcall	__gptrput
                                    324 ;	mbrtoc16.c:52: return(-3);
      000113 90 FF FD         [24]  325 	mov	dptr,#0xfffd
      000116 22               [24]  326 	ret
      000117                        327 00108$:
                                    328 ;	mbrtoc16.c:55: ret = mbrtowc(&codepoint, s, n, ps);
      000117 78r00            [12]  329 	mov	r0,#_mbrtoc16_PARM_2
      000119 79r00            [12]  330 	mov	r1,#_mbrtowc_PARM_2
      00011B E2               [24]  331 	movx	a,@r0
      00011C F3               [24]  332 	movx	@r1,a
      00011D 08               [12]  333 	inc	r0
      00011E E2               [24]  334 	movx	a,@r0
      00011F 09               [12]  335 	inc	r1
      000120 F3               [24]  336 	movx	@r1,a
      000121 08               [12]  337 	inc	r0
      000122 E2               [24]  338 	movx	a,@r0
      000123 09               [12]  339 	inc	r1
      000124 F3               [24]  340 	movx	@r1,a
      000125 78r03            [12]  341 	mov	r0,#_mbrtoc16_PARM_3
      000127 79r00            [12]  342 	mov	r1,#_mbrtowc_PARM_3
      000129 E2               [24]  343 	movx	a,@r0
      00012A F3               [24]  344 	movx	@r1,a
      00012B 08               [12]  345 	inc	r0
      00012C E2               [24]  346 	movx	a,@r0
      00012D 09               [12]  347 	inc	r1
      00012E F3               [24]  348 	movx	@r1,a
      00012F 78r05            [12]  349 	mov	r0,#_mbrtoc16_PARM_4
      000131 79r00            [12]  350 	mov	r1,#_mbrtowc_PARM_4
      000133 E2               [24]  351 	movx	a,@r0
      000134 F3               [24]  352 	movx	@r1,a
      000135 08               [12]  353 	inc	r0
      000136 E2               [24]  354 	movx	a,@r0
      000137 09               [12]  355 	inc	r1
      000138 F3               [24]  356 	movx	@r1,a
      000139 08               [12]  357 	inc	r0
      00013A E2               [24]  358 	movx	a,@r0
      00013B 09               [12]  359 	inc	r1
      00013C F3               [24]  360 	movx	@r1,a
      00013D 90r00r0B         [24]  361 	mov	dptr,#_mbrtoc16_codepoint_65536_16
      000140 75 F0 60         [24]  362 	mov	b,#0x60
      000143 12r00r00         [24]  363 	lcall	_mbrtowc
      000146 78r0F            [12]  364 	mov	r0,#_mbrtoc16_ret_65536_16
      000148 E5 82            [12]  365 	mov	a,dpl
      00014A F2               [24]  366 	movx	@r0,a
      00014B E5 83            [12]  367 	mov	a,dph
      00014D 08               [12]  368 	inc	r0
      00014E F2               [24]  369 	movx	@r0,a
                                    370 ;	mbrtoc16.c:57: if(ret > MB_LEN_MAX)
      00014F 78r0F            [12]  371 	mov	r0,#_mbrtoc16_ret_65536_16
      000151 C3               [12]  372 	clr	c
      000152 E2               [24]  373 	movx	a,@r0
      000153 F5 F0            [12]  374 	mov	b,a
      000155 74 04            [12]  375 	mov	a,#0x04
      000157 95 F0            [12]  376 	subb	a,b
      000159 08               [12]  377 	inc	r0
      00015A E2               [24]  378 	movx	a,@r0
      00015B F5 F0            [12]  379 	mov	b,a
      00015D E4               [12]  380 	clr	a
      00015E 95 F0            [12]  381 	subb	a,b
      000160 50 0A            [24]  382 	jnc	00112$
                                    383 ;	mbrtoc16.c:58: return(ret);
      000162 78r0F            [12]  384 	mov	r0,#_mbrtoc16_ret_65536_16
      000164 E2               [24]  385 	movx	a,@r0
      000165 F5 82            [12]  386 	mov	dpl,a
      000167 08               [12]  387 	inc	r0
      000168 E2               [24]  388 	movx	a,@r0
      000169 F5 83            [12]  389 	mov	dph,a
      00016B 22               [24]  390 	ret
      00016C                        391 00112$:
                                    392 ;	mbrtoc16.c:60: if (codepoint <= 0xffff) // Basic multilingual plane
      00016C 78r0B            [12]  393 	mov	r0,#_mbrtoc16_codepoint_65536_16
      00016E C3               [12]  394 	clr	c
      00016F E2               [24]  395 	movx	a,@r0
      000170 F5 F0            [12]  396 	mov	b,a
      000172 74 FF            [12]  397 	mov	a,#0xff
      000174 95 F0            [12]  398 	subb	a,b
      000176 08               [12]  399 	inc	r0
      000177 E2               [24]  400 	movx	a,@r0
      000178 F5 F0            [12]  401 	mov	b,a
      00017A 74 FF            [12]  402 	mov	a,#0xff
      00017C 95 F0            [12]  403 	subb	a,b
      00017E 08               [12]  404 	inc	r0
      00017F E2               [24]  405 	movx	a,@r0
      000180 F5 F0            [12]  406 	mov	b,a
      000182 E4               [12]  407 	clr	a
      000183 95 F0            [12]  408 	subb	a,b
      000185 08               [12]  409 	inc	r0
      000186 E2               [24]  410 	movx	a,@r0
      000187 F5 F0            [12]  411 	mov	b,a
      000189 E4               [12]  412 	clr	a
      00018A 95 F0            [12]  413 	subb	a,b
      00018C 40 32            [24]  414 	jc	00116$
                                    415 ;	mbrtoc16.c:62: if(pc16)
      00018E 78r08            [12]  416 	mov	r0,#_mbrtoc16_pc16_65536_15
      000190 E2               [24]  417 	movx	a,@r0
      000191 F5 F0            [12]  418 	mov	b,a
      000193 08               [12]  419 	inc	r0
      000194 E2               [24]  420 	movx	a,@r0
      000195 45 F0            [12]  421 	orl	a,b
      000197 60 1D            [24]  422 	jz	00114$
                                    423 ;	mbrtoc16.c:63: *pc16 = codepoint;
      000199 78r0B            [12]  424 	mov	r0,#_mbrtoc16_codepoint_65536_16
      00019B E2               [24]  425 	movx	a,@r0
      00019C FD               [12]  426 	mov	r5,a
      00019D 08               [12]  427 	inc	r0
      00019E E2               [24]  428 	movx	a,@r0
      00019F FC               [12]  429 	mov	r4,a
      0001A0 78r08            [12]  430 	mov	r0,#_mbrtoc16_pc16_65536_15
      0001A2 E2               [24]  431 	movx	a,@r0
      0001A3 F5 82            [12]  432 	mov	dpl,a
      0001A5 08               [12]  433 	inc	r0
      0001A6 E2               [24]  434 	movx	a,@r0
      0001A7 F5 83            [12]  435 	mov	dph,a
      0001A9 08               [12]  436 	inc	r0
      0001AA E2               [24]  437 	movx	a,@r0
      0001AB F5 F0            [12]  438 	mov	b,a
      0001AD ED               [12]  439 	mov	a,r5
      0001AE 12r00r00         [24]  440 	lcall	__gptrput
      0001B1 A3               [24]  441 	inc	dptr
      0001B2 EC               [12]  442 	mov	a,r4
      0001B3 12r00r00         [24]  443 	lcall	__gptrput
      0001B6                        444 00114$:
                                    445 ;	mbrtoc16.c:64: return(ret);
      0001B6 78r0F            [12]  446 	mov	r0,#_mbrtoc16_ret_65536_16
      0001B8 E2               [24]  447 	movx	a,@r0
      0001B9 F5 82            [12]  448 	mov	dpl,a
      0001BB 08               [12]  449 	inc	r0
      0001BC E2               [24]  450 	movx	a,@r0
      0001BD F5 83            [12]  451 	mov	dph,a
      0001BF 22               [24]  452 	ret
      0001C0                        453 00116$:
                                    454 ;	mbrtoc16.c:67: codepoint -= 0x100000;
      0001C0 78r0D            [12]  455 	mov	r0,#(_mbrtoc16_codepoint_65536_16 + 2)
      0001C2 E2               [24]  456 	movx	a,@r0
      0001C3 24 F0            [12]  457 	add	a,#0xf0
      0001C5 F2               [24]  458 	movx	@r0,a
      0001C6 08               [12]  459 	inc	r0
      0001C7 E2               [24]  460 	movx	a,@r0
      0001C8 34 FF            [12]  461 	addc	a,#0xff
      0001CA F2               [24]  462 	movx	@r0,a
                                    463 ;	mbrtoc16.c:68: if(pc16)
      0001CB 78r08            [12]  464 	mov	r0,#_mbrtoc16_pc16_65536_15
      0001CD E2               [24]  465 	movx	a,@r0
      0001CE F5 F0            [12]  466 	mov	b,a
      0001D0 08               [12]  467 	inc	r0
      0001D1 E2               [24]  468 	movx	a,@r0
      0001D2 45 F0            [12]  469 	orl	a,b
      0001D4 60 3E            [24]  470 	jz	00118$
                                    471 ;	mbrtoc16.c:69: *pc16 = ((codepoint >> 10) & 0x3ff) + 0xd800;
      0001D6 78r0C            [12]  472 	mov	r0,#(_mbrtoc16_codepoint_65536_16 + 1)
      0001D8 E2               [24]  473 	movx	a,@r0
      0001D9 FA               [12]  474 	mov	r2,a
      0001DA 08               [12]  475 	inc	r0
      0001DB E2               [24]  476 	movx	a,@r0
      0001DC C3               [12]  477 	clr	c
      0001DD 13               [12]  478 	rrc	a
      0001DE CA               [12]  479 	xch	a,r2
      0001DF 13               [12]  480 	rrc	a
      0001E0 CA               [12]  481 	xch	a,r2
      0001E1 C3               [12]  482 	clr	c
      0001E2 13               [12]  483 	rrc	a
      0001E3 CA               [12]  484 	xch	a,r2
      0001E4 13               [12]  485 	rrc	a
      0001E5 CA               [12]  486 	xch	a,r2
      0001E6 FB               [12]  487 	mov	r3,a
      0001E7 08               [12]  488 	inc	r0
      0001E8 E2               [24]  489 	movx	a,@r0
      0001E9 03               [12]  490 	rr	a
      0001EA 03               [12]  491 	rr	a
      0001EB 54 C0            [12]  492 	anl	a,#0xc0
      0001ED 4B               [12]  493 	orl	a,r3
      0001EE FB               [12]  494 	mov	r3,a
      0001EF E2               [24]  495 	movx	a,@r0
      0001F0 03               [12]  496 	rr	a
      0001F1 03               [12]  497 	rr	a
      0001F2 54 3F            [12]  498 	anl	a,#0x3f
      0001F4 FC               [12]  499 	mov	r4,a
      0001F5 7D 00            [12]  500 	mov	r5,#0x00
      0001F7 53 03 03         [24]  501 	anl	ar3,#0x03
      0001FA 74 D8            [12]  502 	mov	a,#0xd8
      0001FC 2B               [12]  503 	add	a,r3
      0001FD FB               [12]  504 	mov	r3,a
      0001FE 78r08            [12]  505 	mov	r0,#_mbrtoc16_pc16_65536_15
      000200 E2               [24]  506 	movx	a,@r0
      000201 F5 82            [12]  507 	mov	dpl,a
      000203 08               [12]  508 	inc	r0
      000204 E2               [24]  509 	movx	a,@r0
      000205 F5 83            [12]  510 	mov	dph,a
      000207 08               [12]  511 	inc	r0
      000208 E2               [24]  512 	movx	a,@r0
      000209 F5 F0            [12]  513 	mov	b,a
      00020B EA               [12]  514 	mov	a,r2
      00020C 12r00r00         [24]  515 	lcall	__gptrput
      00020F A3               [24]  516 	inc	dptr
      000210 EB               [12]  517 	mov	a,r3
      000211 12r00r00         [24]  518 	lcall	__gptrput
      000214                        519 00118$:
                                    520 ;	mbrtoc16.c:70: low_surrogate = (codepoint & 0x3ff) + 0xdc00;
      000214 78r0B            [12]  521 	mov	r0,#_mbrtoc16_codepoint_65536_16
      000216 E2               [24]  522 	movx	a,@r0
      000217 FC               [12]  523 	mov	r4,a
      000218 08               [12]  524 	inc	r0
      000219 E2               [24]  525 	movx	a,@r0
      00021A FD               [12]  526 	mov	r5,a
      00021B 53 05 03         [24]  527 	anl	ar5,#0x03
      00021E 74 DC            [12]  528 	mov	a,#0xdc
      000220 2D               [12]  529 	add	a,r5
      000221 FE               [12]  530 	mov	r6,a
                                    531 ;	mbrtoc16.c:71: ps->c[0] = 0;
      000222 78r05            [12]  532 	mov	r0,#_mbrtoc16_PARM_4
      000224 E2               [24]  533 	movx	a,@r0
      000225 FA               [12]  534 	mov	r2,a
      000226 08               [12]  535 	inc	r0
      000227 E2               [24]  536 	movx	a,@r0
      000228 FB               [12]  537 	mov	r3,a
      000229 08               [12]  538 	inc	r0
      00022A E2               [24]  539 	movx	a,@r0
      00022B FD               [12]  540 	mov	r5,a
      00022C 8A 82            [24]  541 	mov	dpl,r2
      00022E 8B 83            [24]  542 	mov	dph,r3
      000230 8D F0            [24]  543 	mov	b,r5
      000232 E4               [12]  544 	clr	a
      000233 12r00r00         [24]  545 	lcall	__gptrput
                                    546 ;	mbrtoc16.c:72: ps->c[1] = low_surrogate & 0xff;
      000236 04               [12]  547 	inc	a
      000237 2A               [12]  548 	add	a,r2
      000238 F5*00            [12]  549 	mov	_mbrtoc16_sloc0_1_0,a
      00023A E4               [12]  550 	clr	a
      00023B 3B               [12]  551 	addc	a,r3
      00023C F5*01            [12]  552 	mov	(_mbrtoc16_sloc0_1_0 + 1),a
      00023E 8D*02            [24]  553 	mov	(_mbrtoc16_sloc0_1_0 + 2),r5
      000240 8C 07            [24]  554 	mov	ar7,r4
      000242 85*00 82         [24]  555 	mov	dpl,_mbrtoc16_sloc0_1_0
      000245 85*01 83         [24]  556 	mov	dph,(_mbrtoc16_sloc0_1_0 + 1)
      000248 85*02 F0         [24]  557 	mov	b,(_mbrtoc16_sloc0_1_0 + 2)
      00024B EF               [12]  558 	mov	a,r7
      00024C 12r00r00         [24]  559 	lcall	__gptrput
                                    560 ;	mbrtoc16.c:73: ps->c[2] = low_surrogate >> 8;
      00024F 74 02            [12]  561 	mov	a,#0x02
      000251 2A               [12]  562 	add	a,r2
      000252 FA               [12]  563 	mov	r2,a
      000253 E4               [12]  564 	clr	a
      000254 3B               [12]  565 	addc	a,r3
      000255 FB               [12]  566 	mov	r3,a
      000256 8E 07            [24]  567 	mov	ar7,r6
      000258 8A 82            [24]  568 	mov	dpl,r2
      00025A 8B 83            [24]  569 	mov	dph,r3
      00025C 8D F0            [24]  570 	mov	b,r5
      00025E EF               [12]  571 	mov	a,r7
      00025F 12r00r00         [24]  572 	lcall	__gptrput
                                    573 ;	mbrtoc16.c:75: return(ret);
      000262 78r0F            [12]  574 	mov	r0,#_mbrtoc16_ret_65536_16
      000264 E2               [24]  575 	movx	a,@r0
      000265 F5 82            [12]  576 	mov	dpl,a
      000267 08               [12]  577 	inc	r0
      000268 E2               [24]  578 	movx	a,@r0
      000269 F5 83            [12]  579 	mov	dph,a
                                    580 ;	mbrtoc16.c:76: }
      00026B 22               [24]  581 	ret
                                    582 	.area CSEG    (CODE)
                                    583 	.area CONST   (CODE)
                                    584 	.area CONST   (CODE)
      000000                        585 ___str_0:
      000000 00                     586 	.db 0x00
                                    587 	.area CSEG    (CODE)
                                    588 	.area XINIT   (CODE)
                                    589 	.area CABS    (ABS,CODE)
