                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _mullonglong
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __mullonglong_PARM_2
                                     12 	.globl __mullonglong
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 __mullonglong_sloc0_1_0:
      000000                         37 	.ds 8
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
      000000                         55 __mullonglong_PARM_2:
      000000                         56 	.ds 8
      000008                         57 __mullonglong_ll_65536_1:
      000008                         58 	.ds 8
      000010                         59 __mullonglong_ret_65536_2:
      000010                         60 	.ds 8
      000018                         61 __mullonglong_i_65536_2:
      000018                         62 	.ds 1
      000019                         63 __mullonglong_j_65536_2:
      000019                         64 	.ds 1
                                     65 ;--------------------------------------------------------
                                     66 ; uninitialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XSEG    (XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; absolute external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XABS    (ABS,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; initialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XISEG   (XDATA)
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT0 (CODE)
                                     79 	.area GSINIT1 (CODE)
                                     80 	.area GSINIT2 (CODE)
                                     81 	.area GSINIT3 (CODE)
                                     82 	.area GSINIT4 (CODE)
                                     83 	.area GSINIT5 (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area CSEG    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function '_mullonglong'
                                    105 ;------------------------------------------------------------
                                    106 ;sloc0                     Allocated with name '__mullonglong_sloc0_1_0'
                                    107 ;------------------------------------------------------------
                                    108 ;	_mullonglong.c:39: long long _mullonglong(long long ll, long long lr) __SDCC_NONBANKED
                                    109 ;	-----------------------------------------
                                    110 ;	 function _mullonglong
                                    111 ;	-----------------------------------------
      000000                        112 __mullonglong:
                           000007   113 	ar7 = 0x07
                           000006   114 	ar6 = 0x06
                           000005   115 	ar5 = 0x05
                           000004   116 	ar4 = 0x04
                           000003   117 	ar3 = 0x03
                           000002   118 	ar2 = 0x02
                           000001   119 	ar1 = 0x01
                           000000   120 	ar0 = 0x00
      000000 C0 07            [24]  121 	push	ar7
      000002 C0 06            [24]  122 	push	ar6
      000004 C0 05            [24]  123 	push	ar5
      000006 C0 04            [24]  124 	push	ar4
      000008 C0 E0            [24]  125 	push	acc
      00000A C0 F0            [24]  126 	push	b
      00000C C0 83            [24]  127 	push	dph
      00000E C0 82            [24]  128 	push	dpl
      000010 78r08            [12]  129 	mov	r0,#__mullonglong_ll_65536_1
      000012 D0 E0            [24]  130 	pop	acc
      000014 F2               [24]  131 	movx	@r0,a
      000015 D0 E0            [24]  132 	pop	acc
      000017 08               [12]  133 	inc	r0
      000018 F2               [24]  134 	movx	@r0,a
      000019 D0 E0            [24]  135 	pop	acc
      00001B 08               [12]  136 	inc	r0
      00001C F2               [24]  137 	movx	@r0,a
      00001D D0 E0            [24]  138 	pop	acc
      00001F 08               [12]  139 	inc	r0
      000020 F2               [24]  140 	movx	@r0,a
      000021 D0 E0            [24]  141 	pop	acc
      000023 08               [12]  142 	inc	r0
      000024 F2               [24]  143 	movx	@r0,a
      000025 D0 E0            [24]  144 	pop	acc
      000027 08               [12]  145 	inc	r0
      000028 F2               [24]  146 	movx	@r0,a
      000029 D0 E0            [24]  147 	pop	acc
      00002B 08               [12]  148 	inc	r0
      00002C F2               [24]  149 	movx	@r0,a
      00002D D0 E0            [24]  150 	pop	acc
      00002F 08               [12]  151 	inc	r0
      000030 F2               [24]  152 	movx	@r0,a
                                    153 ;	_mullonglong.c:41: unsigned long long ret = 0ull;
      000031 78r10            [12]  154 	mov	r0,#__mullonglong_ret_65536_2
      000033 E4               [12]  155 	clr	a
      000034 F2               [24]  156 	movx	@r0,a
      000035 08               [12]  157 	inc	r0
      000036 F2               [24]  158 	movx	@r0,a
      000037 08               [12]  159 	inc	r0
      000038 F2               [24]  160 	movx	@r0,a
      000039 08               [12]  161 	inc	r0
      00003A F2               [24]  162 	movx	@r0,a
      00003B 08               [12]  163 	inc	r0
      00003C F2               [24]  164 	movx	@r0,a
      00003D 08               [12]  165 	inc	r0
      00003E F2               [24]  166 	movx	@r0,a
      00003F 08               [12]  167 	inc	r0
      000040 F2               [24]  168 	movx	@r0,a
      000041 08               [12]  169 	inc	r0
      000042 F2               [24]  170 	movx	@r0,a
                                    171 ;	_mullonglong.c:44: for (i = 0; i < sizeof (long long); i++)
      000043 78r18            [12]  172 	mov	r0,#__mullonglong_i_65536_2
      000045 F2               [24]  173 	movx	@r0,a
      000046                        174 00106$:
                                    175 ;	_mullonglong.c:46: unsigned char l = ll >> (i * 8);
      000046 78r18            [12]  176 	mov	r0,#__mullonglong_i_65536_2
      000048 E2               [24]  177 	movx	a,@r0
      000049 C4               [12]  178 	swap	a
      00004A 03               [12]  179 	rr	a
      00004B 54 F8            [12]  180 	anl	a,#0xf8
      00004D FE               [12]  181 	mov	r6,a
      00004E 8E F0            [24]  182 	mov	b,r6
      000050 05 F0            [12]  183 	inc	b
      000052 78r08            [12]  184 	mov	r0,#__mullonglong_ll_65536_1
      000054 E2               [24]  185 	movx	a,@r0
      000055 85 E0*00         [24]  186 	mov	__mullonglong_sloc0_1_0,acc
      000058 08               [12]  187 	inc	r0
      000059 E2               [24]  188 	movx	a,@r0
      00005A 85 E0*01         [24]  189 	mov	(__mullonglong_sloc0_1_0 + 1),acc
      00005D 08               [12]  190 	inc	r0
      00005E E2               [24]  191 	movx	a,@r0
      00005F 85 E0*02         [24]  192 	mov	(__mullonglong_sloc0_1_0 + 2),acc
      000062 08               [12]  193 	inc	r0
      000063 E2               [24]  194 	movx	a,@r0
      000064 85 E0*03         [24]  195 	mov	(__mullonglong_sloc0_1_0 + 3),acc
      000067 08               [12]  196 	inc	r0
      000068 E2               [24]  197 	movx	a,@r0
      000069 85 E0*04         [24]  198 	mov	(__mullonglong_sloc0_1_0 + 4),acc
      00006C 08               [12]  199 	inc	r0
      00006D E2               [24]  200 	movx	a,@r0
      00006E 85 E0*05         [24]  201 	mov	(__mullonglong_sloc0_1_0 + 5),acc
      000071 08               [12]  202 	inc	r0
      000072 E2               [24]  203 	movx	a,@r0
      000073 85 E0*06         [24]  204 	mov	(__mullonglong_sloc0_1_0 + 6),acc
      000076 08               [12]  205 	inc	r0
      000077 E2               [24]  206 	movx	a,@r0
      000078 85 E0*07         [24]  207 	mov	(__mullonglong_sloc0_1_0 + 7),acc
      00007B E2               [24]  208 	movx	a,@r0
      00007C 33               [12]  209 	rlc	a
      00007D 92 D2            [24]  210 	mov	ov,c
      00007F 80 2A            [24]  211 	sjmp	00129$
      000081                        212 00128$:
      000081 A2 D2            [12]  213 	mov	c,ov
      000083 E5*07            [12]  214 	mov	a,(__mullonglong_sloc0_1_0 + 7)
      000085 13               [12]  215 	rrc	a
      000086 F5*07            [12]  216 	mov	(__mullonglong_sloc0_1_0 + 7),a
      000088 E5*06            [12]  217 	mov	a,(__mullonglong_sloc0_1_0 + 6)
      00008A 13               [12]  218 	rrc	a
      00008B F5*06            [12]  219 	mov	(__mullonglong_sloc0_1_0 + 6),a
      00008D E5*05            [12]  220 	mov	a,(__mullonglong_sloc0_1_0 + 5)
      00008F 13               [12]  221 	rrc	a
      000090 F5*05            [12]  222 	mov	(__mullonglong_sloc0_1_0 + 5),a
      000092 E5*04            [12]  223 	mov	a,(__mullonglong_sloc0_1_0 + 4)
      000094 13               [12]  224 	rrc	a
      000095 F5*04            [12]  225 	mov	(__mullonglong_sloc0_1_0 + 4),a
      000097 E5*03            [12]  226 	mov	a,(__mullonglong_sloc0_1_0 + 3)
      000099 13               [12]  227 	rrc	a
      00009A F5*03            [12]  228 	mov	(__mullonglong_sloc0_1_0 + 3),a
      00009C E5*02            [12]  229 	mov	a,(__mullonglong_sloc0_1_0 + 2)
      00009E 13               [12]  230 	rrc	a
      00009F F5*02            [12]  231 	mov	(__mullonglong_sloc0_1_0 + 2),a
      0000A1 E5*01            [12]  232 	mov	a,(__mullonglong_sloc0_1_0 + 1)
      0000A3 13               [12]  233 	rrc	a
      0000A4 F5*01            [12]  234 	mov	(__mullonglong_sloc0_1_0 + 1),a
      0000A6 E5*00            [12]  235 	mov	a,__mullonglong_sloc0_1_0
      0000A8 13               [12]  236 	rrc	a
      0000A9 F5*00            [12]  237 	mov	__mullonglong_sloc0_1_0,a
      0000AB                        238 00129$:
      0000AB D5 F0 D3         [24]  239 	djnz	b,00128$
      0000AE AA*00            [24]  240 	mov	r2,__mullonglong_sloc0_1_0
                                    241 ;	_mullonglong.c:47: for(j = 0; (i + j) < sizeof (long long); j++)
      0000B0 78r19            [12]  242 	mov	r0,#__mullonglong_j_65536_2
      0000B2 E4               [12]  243 	clr	a
      0000B3 F2               [24]  244 	movx	@r0,a
                                    245 ;	_mullonglong.c:54: return(ret);
                                    246 ;	_mullonglong.c:47: for(j = 0; (i + j) < sizeof (long long); j++)
      0000B4                        247 00104$:
      0000B4 78r18            [12]  248 	mov	r0,#__mullonglong_i_65536_2
      0000B6 E2               [24]  249 	movx	a,@r0
      0000B7 FD               [12]  250 	mov	r5,a
      0000B8 7E 00            [12]  251 	mov	r6,#0x00
      0000BA 78r19            [12]  252 	mov	r0,#__mullonglong_j_65536_2
      0000BC E2               [24]  253 	movx	a,@r0
      0000BD FB               [12]  254 	mov	r3,a
      0000BE 7C 00            [12]  255 	mov	r4,#0x00
      0000C0 2D               [12]  256 	add	a,r5
      0000C1 FD               [12]  257 	mov	r5,a
      0000C2 EC               [12]  258 	mov	a,r4
      0000C3 3E               [12]  259 	addc	a,r6
      0000C4 FE               [12]  260 	mov	r6,a
      0000C5 C3               [12]  261 	clr	c
      0000C6 ED               [12]  262 	mov	a,r5
      0000C7 94 08            [12]  263 	subb	a,#0x08
      0000C9 EE               [12]  264 	mov	a,r6
      0000CA 64 80            [12]  265 	xrl	a,#0x80
      0000CC 94 80            [12]  266 	subb	a,#0x80
      0000CE 40 03            [24]  267 	jc	00130$
      0000D0 02r01rCD         [24]  268 	ljmp	00107$
      0000D3                        269 00130$:
                                    270 ;	_mullonglong.c:49: unsigned char r = lr >> (j * 8);
      0000D3 78r19            [12]  271 	mov	r0,#__mullonglong_j_65536_2
      0000D5 E2               [24]  272 	movx	a,@r0
      0000D6 C4               [12]  273 	swap	a
      0000D7 03               [12]  274 	rr	a
      0000D8 54 F8            [12]  275 	anl	a,#0xf8
      0000DA FE               [12]  276 	mov	r6,a
      0000DB 8E F0            [24]  277 	mov	b,r6
      0000DD 05 F0            [12]  278 	inc	b
      0000DF 78r00            [12]  279 	mov	r0,#__mullonglong_PARM_2
      0000E1 E2               [24]  280 	movx	a,@r0
      0000E2 85 E0*00         [24]  281 	mov	__mullonglong_sloc0_1_0,acc
      0000E5 08               [12]  282 	inc	r0
      0000E6 E2               [24]  283 	movx	a,@r0
      0000E7 85 E0*01         [24]  284 	mov	(__mullonglong_sloc0_1_0 + 1),acc
      0000EA 08               [12]  285 	inc	r0
      0000EB E2               [24]  286 	movx	a,@r0
      0000EC 85 E0*02         [24]  287 	mov	(__mullonglong_sloc0_1_0 + 2),acc
      0000EF 08               [12]  288 	inc	r0
      0000F0 E2               [24]  289 	movx	a,@r0
      0000F1 85 E0*03         [24]  290 	mov	(__mullonglong_sloc0_1_0 + 3),acc
      0000F4 08               [12]  291 	inc	r0
      0000F5 E2               [24]  292 	movx	a,@r0
      0000F6 85 E0*04         [24]  293 	mov	(__mullonglong_sloc0_1_0 + 4),acc
      0000F9 08               [12]  294 	inc	r0
      0000FA E2               [24]  295 	movx	a,@r0
      0000FB 85 E0*05         [24]  296 	mov	(__mullonglong_sloc0_1_0 + 5),acc
      0000FE 08               [12]  297 	inc	r0
      0000FF E2               [24]  298 	movx	a,@r0
      000100 85 E0*06         [24]  299 	mov	(__mullonglong_sloc0_1_0 + 6),acc
      000103 08               [12]  300 	inc	r0
      000104 E2               [24]  301 	movx	a,@r0
      000105 85 E0*07         [24]  302 	mov	(__mullonglong_sloc0_1_0 + 7),acc
      000108 E2               [24]  303 	movx	a,@r0
      000109 33               [12]  304 	rlc	a
      00010A 92 D2            [24]  305 	mov	ov,c
      00010C 80 2A            [24]  306 	sjmp	00132$
      00010E                        307 00131$:
      00010E A2 D2            [12]  308 	mov	c,ov
      000110 E5*07            [12]  309 	mov	a,(__mullonglong_sloc0_1_0 + 7)
      000112 13               [12]  310 	rrc	a
      000113 F5*07            [12]  311 	mov	(__mullonglong_sloc0_1_0 + 7),a
      000115 E5*06            [12]  312 	mov	a,(__mullonglong_sloc0_1_0 + 6)
      000117 13               [12]  313 	rrc	a
      000118 F5*06            [12]  314 	mov	(__mullonglong_sloc0_1_0 + 6),a
      00011A E5*05            [12]  315 	mov	a,(__mullonglong_sloc0_1_0 + 5)
      00011C 13               [12]  316 	rrc	a
      00011D F5*05            [12]  317 	mov	(__mullonglong_sloc0_1_0 + 5),a
      00011F E5*04            [12]  318 	mov	a,(__mullonglong_sloc0_1_0 + 4)
      000121 13               [12]  319 	rrc	a
      000122 F5*04            [12]  320 	mov	(__mullonglong_sloc0_1_0 + 4),a
      000124 E5*03            [12]  321 	mov	a,(__mullonglong_sloc0_1_0 + 3)
      000126 13               [12]  322 	rrc	a
      000127 F5*03            [12]  323 	mov	(__mullonglong_sloc0_1_0 + 3),a
      000129 E5*02            [12]  324 	mov	a,(__mullonglong_sloc0_1_0 + 2)
      00012B 13               [12]  325 	rrc	a
      00012C F5*02            [12]  326 	mov	(__mullonglong_sloc0_1_0 + 2),a
      00012E E5*01            [12]  327 	mov	a,(__mullonglong_sloc0_1_0 + 1)
      000130 13               [12]  328 	rrc	a
      000131 F5*01            [12]  329 	mov	(__mullonglong_sloc0_1_0 + 1),a
      000133 E5*00            [12]  330 	mov	a,__mullonglong_sloc0_1_0
      000135 13               [12]  331 	rrc	a
      000136 F5*00            [12]  332 	mov	__mullonglong_sloc0_1_0,a
      000138                        333 00132$:
      000138 D5 F0 D3         [24]  334 	djnz	b,00131$
      00013B AF*00            [24]  335 	mov	r7,__mullonglong_sloc0_1_0
                                    336 ;	_mullonglong.c:50: ret += (unsigned long long)((unsigned short)(l * r)) << ((i + j) * 8);
      00013D 8A F0            [24]  337 	mov	b,r2
      00013F EF               [12]  338 	mov	a,r7
      000140 A4               [48]  339 	mul	ab
      000141 FF               [12]  340 	mov	r7,a
      000142 AE F0            [24]  341 	mov	r6,b
      000144 8F*00            [24]  342 	mov	__mullonglong_sloc0_1_0,r7
      000146 8E*01            [24]  343 	mov	(__mullonglong_sloc0_1_0 + 1),r6
      000148 75*02 00         [24]  344 	mov	(__mullonglong_sloc0_1_0 + 2),#0x00
      00014B 75*03 00         [24]  345 	mov	(__mullonglong_sloc0_1_0 + 3),#0x00
      00014E 75*04 00         [24]  346 	mov	(__mullonglong_sloc0_1_0 + 4),#0x00
      000151 75*05 00         [24]  347 	mov	(__mullonglong_sloc0_1_0 + 5),#0x00
      000154 75*06 00         [24]  348 	mov	(__mullonglong_sloc0_1_0 + 6),#0x00
      000157 75*07 00         [24]  349 	mov	(__mullonglong_sloc0_1_0 + 7),#0x00
      00015A 78r18            [12]  350 	mov	r0,#__mullonglong_i_65536_2
      00015C 79r19            [12]  351 	mov	r1,#__mullonglong_j_65536_2
      00015E E3               [24]  352 	movx	a,@r1
      00015F C5 F0            [12]  353 	xch	a,b
      000161 E2               [24]  354 	movx	a,@r0
      000162 25 F0            [12]  355 	add	a,b
      000164 C4               [12]  356 	swap	a
      000165 03               [12]  357 	rr	a
      000166 54 F8            [12]  358 	anl	a,#0xf8
      000168 FF               [12]  359 	mov	r7,a
      000169 8F F0            [24]  360 	mov	b,r7
      00016B 05 F0            [12]  361 	inc	b
      00016D 80 29            [24]  362 	sjmp	00134$
      00016F                        363 00133$:
      00016F E5*00            [12]  364 	mov	a,__mullonglong_sloc0_1_0
      000171 25*00            [12]  365 	add	a,__mullonglong_sloc0_1_0
      000173 F5*00            [12]  366 	mov	__mullonglong_sloc0_1_0,a
      000175 E5*01            [12]  367 	mov	a,(__mullonglong_sloc0_1_0 + 1)
      000177 33               [12]  368 	rlc	a
      000178 F5*01            [12]  369 	mov	(__mullonglong_sloc0_1_0 + 1),a
      00017A E5*02            [12]  370 	mov	a,(__mullonglong_sloc0_1_0 + 2)
      00017C 33               [12]  371 	rlc	a
      00017D F5*02            [12]  372 	mov	(__mullonglong_sloc0_1_0 + 2),a
      00017F E5*03            [12]  373 	mov	a,(__mullonglong_sloc0_1_0 + 3)
      000181 33               [12]  374 	rlc	a
      000182 F5*03            [12]  375 	mov	(__mullonglong_sloc0_1_0 + 3),a
      000184 E5*04            [12]  376 	mov	a,(__mullonglong_sloc0_1_0 + 4)
      000186 33               [12]  377 	rlc	a
      000187 F5*04            [12]  378 	mov	(__mullonglong_sloc0_1_0 + 4),a
      000189 E5*05            [12]  379 	mov	a,(__mullonglong_sloc0_1_0 + 5)
      00018B 33               [12]  380 	rlc	a
      00018C F5*05            [12]  381 	mov	(__mullonglong_sloc0_1_0 + 5),a
      00018E E5*06            [12]  382 	mov	a,(__mullonglong_sloc0_1_0 + 6)
      000190 33               [12]  383 	rlc	a
      000191 F5*06            [12]  384 	mov	(__mullonglong_sloc0_1_0 + 6),a
      000193 E5*07            [12]  385 	mov	a,(__mullonglong_sloc0_1_0 + 7)
      000195 33               [12]  386 	rlc	a
      000196 F5*07            [12]  387 	mov	(__mullonglong_sloc0_1_0 + 7),a
      000198                        388 00134$:
      000198 D5 F0 D4         [24]  389 	djnz	b,00133$
      00019B 78r10            [12]  390 	mov	r0,#__mullonglong_ret_65536_2
      00019D E2               [24]  391 	movx	a,@r0
      00019E 25*00            [12]  392 	add	a,__mullonglong_sloc0_1_0
      0001A0 F2               [24]  393 	movx	@r0,a
      0001A1 08               [12]  394 	inc	r0
      0001A2 E2               [24]  395 	movx	a,@r0
      0001A3 35*01            [12]  396 	addc	a,(__mullonglong_sloc0_1_0 + 1)
      0001A5 F2               [24]  397 	movx	@r0,a
      0001A6 08               [12]  398 	inc	r0
      0001A7 E2               [24]  399 	movx	a,@r0
      0001A8 35*02            [12]  400 	addc	a,(__mullonglong_sloc0_1_0 + 2)
      0001AA F2               [24]  401 	movx	@r0,a
      0001AB 08               [12]  402 	inc	r0
      0001AC E2               [24]  403 	movx	a,@r0
      0001AD 35*03            [12]  404 	addc	a,(__mullonglong_sloc0_1_0 + 3)
      0001AF F2               [24]  405 	movx	@r0,a
      0001B0 08               [12]  406 	inc	r0
      0001B1 E2               [24]  407 	movx	a,@r0
      0001B2 35*04            [12]  408 	addc	a,(__mullonglong_sloc0_1_0 + 4)
      0001B4 F2               [24]  409 	movx	@r0,a
      0001B5 08               [12]  410 	inc	r0
      0001B6 E2               [24]  411 	movx	a,@r0
      0001B7 35*05            [12]  412 	addc	a,(__mullonglong_sloc0_1_0 + 5)
      0001B9 F2               [24]  413 	movx	@r0,a
      0001BA 08               [12]  414 	inc	r0
      0001BB E2               [24]  415 	movx	a,@r0
      0001BC 35*06            [12]  416 	addc	a,(__mullonglong_sloc0_1_0 + 6)
      0001BE F2               [24]  417 	movx	@r0,a
      0001BF 08               [12]  418 	inc	r0
      0001C0 E2               [24]  419 	movx	a,@r0
      0001C1 35*07            [12]  420 	addc	a,(__mullonglong_sloc0_1_0 + 7)
      0001C3 F2               [24]  421 	movx	@r0,a
                                    422 ;	_mullonglong.c:47: for(j = 0; (i + j) < sizeof (long long); j++)
      0001C4 78r19            [12]  423 	mov	r0,#__mullonglong_j_65536_2
      0001C6 E2               [24]  424 	movx	a,@r0
      0001C7 24 01            [12]  425 	add	a,#0x01
      0001C9 F2               [24]  426 	movx	@r0,a
      0001CA 02r00rB4         [24]  427 	ljmp	00104$
      0001CD                        428 00107$:
                                    429 ;	_mullonglong.c:44: for (i = 0; i < sizeof (long long); i++)
      0001CD 78r18            [12]  430 	mov	r0,#__mullonglong_i_65536_2
      0001CF E2               [24]  431 	movx	a,@r0
      0001D0 24 01            [12]  432 	add	a,#0x01
      0001D2 F2               [24]  433 	movx	@r0,a
      0001D3 78r18            [12]  434 	mov	r0,#__mullonglong_i_65536_2
      0001D5 E2               [24]  435 	movx	a,@r0
      0001D6 B4 08 00         [24]  436 	cjne	a,#0x08,00135$
      0001D9                        437 00135$:
      0001D9 50 03            [24]  438 	jnc	00136$
      0001DB 02r00r46         [24]  439 	ljmp	00106$
      0001DE                        440 00136$:
                                    441 ;	_mullonglong.c:54: return(ret);
      0001DE 78r10            [12]  442 	mov	r0,#__mullonglong_ret_65536_2
      0001E0 E2               [24]  443 	movx	a,@r0
      0001E1 F5 82            [12]  444 	mov	dpl,a
      0001E3 08               [12]  445 	inc	r0
      0001E4 E2               [24]  446 	movx	a,@r0
      0001E5 F5 83            [12]  447 	mov	dph,a
      0001E7 08               [12]  448 	inc	r0
      0001E8 E2               [24]  449 	movx	a,@r0
      0001E9 F5 F0            [12]  450 	mov	b,a
      0001EB 08               [12]  451 	inc	r0
      0001EC E2               [24]  452 	movx	a,@r0
      0001ED C0 E0            [24]  453 	push	acc
      0001EF 08               [12]  454 	inc	r0
      0001F0 E2               [24]  455 	movx	a,@r0
      0001F1 FC               [12]  456 	mov	r4,a
      0001F2 08               [12]  457 	inc	r0
      0001F3 E2               [24]  458 	movx	a,@r0
      0001F4 FD               [12]  459 	mov	r5,a
      0001F5 08               [12]  460 	inc	r0
      0001F6 E2               [24]  461 	movx	a,@r0
      0001F7 FE               [12]  462 	mov	r6,a
      0001F8 08               [12]  463 	inc	r0
      0001F9 E2               [24]  464 	movx	a,@r0
      0001FA FF               [12]  465 	mov	r7,a
      0001FB D0 E0            [24]  466 	pop	acc
                                    467 ;	_mullonglong.c:55: }
      0001FD 22               [24]  468 	ret
                                    469 	.area CSEG    (CODE)
                                    470 	.area CONST   (CODE)
                                    471 	.area XINIT   (CODE)
                                    472 	.area CABS    (ABS,CODE)
