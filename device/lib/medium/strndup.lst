                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strndup
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl ___memcpy
                                     13 	.globl _strlen
                                     14 	.globl _strndup_PARM_2
                                     15 	.globl _strndup
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
      000000                         55 _strndup_PARM_2:
      000000                         56 	.ds 2
      000002                         57 _strndup_s_65536_64:
      000002                         58 	.ds 3
      000005                         59 _strndup_r_65537_66:
      000005                         60 	.ds 3
                                     61 ;--------------------------------------------------------
                                     62 ; uninitialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XSEG    (XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XABS    (ABS,XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; initialized external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XISEG   (XDATA)
                                     73 	.area HOME    (CODE)
                                     74 	.area GSINIT0 (CODE)
                                     75 	.area GSINIT1 (CODE)
                                     76 	.area GSINIT2 (CODE)
                                     77 	.area GSINIT3 (CODE)
                                     78 	.area GSINIT4 (CODE)
                                     79 	.area GSINIT5 (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area CSEG    (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'strndup'
                                    101 ;------------------------------------------------------------
                                    102 ;	strndup.c:33: char *strndup (const char *s, size_t n)
                                    103 ;	-----------------------------------------
                                    104 ;	 function strndup
                                    105 ;	-----------------------------------------
      000000                        106 _strndup:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 AF F0            [24]  115 	mov	r7,b
      000002 AE 83            [24]  116 	mov	r6,dph
      000004 E5 82            [12]  117 	mov	a,dpl
      000006 78r02            [12]  118 	mov	r0,#_strndup_s_65536_64
      000008 F2               [24]  119 	movx	@r0,a
      000009 EE               [12]  120 	mov	a,r6
      00000A 08               [12]  121 	inc	r0
      00000B F2               [24]  122 	movx	@r0,a
      00000C EF               [12]  123 	mov	a,r7
      00000D 08               [12]  124 	inc	r0
      00000E F2               [24]  125 	movx	@r0,a
                                    126 ;	strndup.c:35: size_t l = strlen (s);
      00000F 78r02            [12]  127 	mov	r0,#_strndup_s_65536_64
      000011 E2               [24]  128 	movx	a,@r0
      000012 F5 82            [12]  129 	mov	dpl,a
      000014 08               [12]  130 	inc	r0
      000015 E2               [24]  131 	movx	a,@r0
      000016 F5 83            [12]  132 	mov	dph,a
      000018 08               [12]  133 	inc	r0
      000019 E2               [24]  134 	movx	a,@r0
      00001A F5 F0            [12]  135 	mov	b,a
      00001C 12r00r00         [24]  136 	lcall	_strlen
      00001F AB 82            [24]  137 	mov	r3,dpl
      000021 AC 83            [24]  138 	mov	r4,dph
                                    139 ;	strndup.c:36: if (l > n)
      000023 78r00            [12]  140 	mov	r0,#_strndup_PARM_2
      000025 C3               [12]  141 	clr	c
      000026 E2               [24]  142 	movx	a,@r0
      000027 9B               [12]  143 	subb	a,r3
      000028 08               [12]  144 	inc	r0
      000029 E2               [24]  145 	movx	a,@r0
      00002A 9C               [12]  146 	subb	a,r4
      00002B 50 07            [24]  147 	jnc	00102$
                                    148 ;	strndup.c:37: l = n;
      00002D 78r00            [12]  149 	mov	r0,#_strndup_PARM_2
      00002F E2               [24]  150 	movx	a,@r0
      000030 FB               [12]  151 	mov	r3,a
      000031 08               [12]  152 	inc	r0
      000032 E2               [24]  153 	movx	a,@r0
      000033 FC               [12]  154 	mov	r4,a
      000034                        155 00102$:
                                    156 ;	strndup.c:38: char *r = malloc (l + 1);
      000034 8B 82            [24]  157 	mov	dpl,r3
      000036 8C 83            [24]  158 	mov	dph,r4
      000038 A3               [24]  159 	inc	dptr
      000039 C0 04            [24]  160 	push	ar4
      00003B C0 03            [24]  161 	push	ar3
      00003D 12r00r00         [24]  162 	lcall	_malloc
      000040 AA 82            [24]  163 	mov	r2,dpl
      000042 AF 83            [24]  164 	mov	r7,dph
      000044 D0 03            [24]  165 	pop	ar3
      000046 D0 04            [24]  166 	pop	ar4
      000048 78r05            [12]  167 	mov	r0,#_strndup_r_65537_66
      00004A EA               [12]  168 	mov	a,r2
      00004B F2               [24]  169 	movx	@r0,a
      00004C EF               [12]  170 	mov	a,r7
      00004D 08               [12]  171 	inc	r0
      00004E F2               [24]  172 	movx	@r0,a
      00004F E4               [12]  173 	clr	a
      000050 08               [12]  174 	inc	r0
      000051 F2               [24]  175 	movx	@r0,a
                                    176 ;	strndup.c:39: if (r)
      000052 78r05            [12]  177 	mov	r0,#_strndup_r_65537_66
      000054 E2               [24]  178 	movx	a,@r0
      000055 F5 F0            [12]  179 	mov	b,a
      000057 08               [12]  180 	inc	r0
      000058 E2               [24]  181 	movx	a,@r0
      000059 45 F0            [12]  182 	orl	a,b
      00005B 60 46            [24]  183 	jz	00104$
                                    184 ;	strndup.c:41: memcpy (r, s, l);
      00005D 78r05            [12]  185 	mov	r0,#_strndup_r_65537_66
      00005F E2               [24]  186 	movx	a,@r0
      000060 FA               [12]  187 	mov	r2,a
      000061 08               [12]  188 	inc	r0
      000062 E2               [24]  189 	movx	a,@r0
      000063 FE               [12]  190 	mov	r6,a
      000064 08               [12]  191 	inc	r0
      000065 E2               [24]  192 	movx	a,@r0
      000066 FF               [12]  193 	mov	r7,a
      000067 78r02            [12]  194 	mov	r0,#_strndup_s_65536_64
      000069 79r00            [12]  195 	mov	r1,#___memcpy_PARM_2
      00006B E2               [24]  196 	movx	a,@r0
      00006C F3               [24]  197 	movx	@r1,a
      00006D 08               [12]  198 	inc	r0
      00006E E2               [24]  199 	movx	a,@r0
      00006F 09               [12]  200 	inc	r1
      000070 F3               [24]  201 	movx	@r1,a
      000071 08               [12]  202 	inc	r0
      000072 E2               [24]  203 	movx	a,@r0
      000073 09               [12]  204 	inc	r1
      000074 F3               [24]  205 	movx	@r1,a
      000075 78r00            [12]  206 	mov	r0,#___memcpy_PARM_3
      000077 EB               [12]  207 	mov	a,r3
      000078 F2               [24]  208 	movx	@r0,a
      000079 EC               [12]  209 	mov	a,r4
      00007A 08               [12]  210 	inc	r0
      00007B F2               [24]  211 	movx	@r0,a
      00007C 8A 82            [24]  212 	mov	dpl,r2
      00007E 8E 83            [24]  213 	mov	dph,r6
      000080 8F F0            [24]  214 	mov	b,r7
      000082 C0 04            [24]  215 	push	ar4
      000084 C0 03            [24]  216 	push	ar3
      000086 12r00r00         [24]  217 	lcall	___memcpy
      000089 D0 03            [24]  218 	pop	ar3
      00008B D0 04            [24]  219 	pop	ar4
                                    220 ;	strndup.c:42: r[l] = 0;
      00008D 78r05            [12]  221 	mov	r0,#_strndup_r_65537_66
      00008F E2               [24]  222 	movx	a,@r0
      000090 2B               [12]  223 	add	a,r3
      000091 FB               [12]  224 	mov	r3,a
      000092 08               [12]  225 	inc	r0
      000093 E2               [24]  226 	movx	a,@r0
      000094 3C               [12]  227 	addc	a,r4
      000095 FC               [12]  228 	mov	r4,a
      000096 08               [12]  229 	inc	r0
      000097 E2               [24]  230 	movx	a,@r0
      000098 FF               [12]  231 	mov	r7,a
      000099 8B 82            [24]  232 	mov	dpl,r3
      00009B 8C 83            [24]  233 	mov	dph,r4
      00009D 8F F0            [24]  234 	mov	b,r7
      00009F E4               [12]  235 	clr	a
      0000A0 12r00r00         [24]  236 	lcall	__gptrput
      0000A3                        237 00104$:
                                    238 ;	strndup.c:44: return (r);
      0000A3 78r05            [12]  239 	mov	r0,#_strndup_r_65537_66
      0000A5 E2               [24]  240 	movx	a,@r0
      0000A6 F5 82            [12]  241 	mov	dpl,a
      0000A8 08               [12]  242 	inc	r0
      0000A9 E2               [24]  243 	movx	a,@r0
      0000AA F5 83            [12]  244 	mov	dph,a
      0000AC 08               [12]  245 	inc	r0
      0000AD E2               [24]  246 	movx	a,@r0
      0000AE F5 F0            [12]  247 	mov	b,a
                                    248 ;	strndup.c:45: }
      0000B0 22               [24]  249 	ret
                                    250 	.area CSEG    (CODE)
                                    251 	.area CONST   (CODE)
                                    252 	.area XINIT   (CODE)
                                    253 	.area CABS    (ABS,CODE)
