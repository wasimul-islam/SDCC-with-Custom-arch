                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module memccpy
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memccpy_PARM_4
                                     12 	.globl _memccpy_PARM_3
                                     13 	.globl _memccpy_PARM_2
                                     14 	.globl _memccpy
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _memccpy_sloc0_1_0:
      000000                         39 	.ds 2
      000002                         40 _memccpy_sloc1_1_0:
      000002                         41 	.ds 3
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
      000000                         59 _memccpy_PARM_2:
      000000                         60 	.ds 3
      000003                         61 _memccpy_PARM_3:
      000003                         62 	.ds 2
      000005                         63 _memccpy_PARM_4:
      000005                         64 	.ds 2
      000007                         65 _memccpy_d_65536_27:
      000007                         66 	.ds 3
                                     67 ;--------------------------------------------------------
                                     68 ; uninitialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XSEG    (XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XABS    (ABS,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; initialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XISEG   (XDATA)
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'memccpy'
                                    107 ;------------------------------------------------------------
                                    108 ;sloc0                     Allocated with name '_memccpy_sloc0_1_0'
                                    109 ;sloc1                     Allocated with name '_memccpy_sloc1_1_0'
                                    110 ;------------------------------------------------------------
                                    111 ;	memccpy.c:31: void *memccpy (void *restrict dst, const void *restrict src, int c, size_t n)
                                    112 ;	-----------------------------------------
                                    113 ;	 function memccpy
                                    114 ;	-----------------------------------------
      000000                        115 _memccpy:
                           000007   116 	ar7 = 0x07
                           000006   117 	ar6 = 0x06
                           000005   118 	ar5 = 0x05
                           000004   119 	ar4 = 0x04
                           000003   120 	ar3 = 0x03
                           000002   121 	ar2 = 0x02
                           000001   122 	ar1 = 0x01
                           000000   123 	ar0 = 0x00
      000000 AD 82            [24]  124 	mov	r5,dpl
      000002 AE 83            [24]  125 	mov	r6,dph
      000004 AF F0            [24]  126 	mov	r7,b
                                    127 ;	memccpy.c:33: char *d = dst;
                                    128 ;	memccpy.c:34: const char *s = src;
      000006 78r00            [12]  129 	mov	r0,#_memccpy_PARM_2
      000008 E2               [24]  130 	movx	a,@r0
      000009 F5*02            [12]  131 	mov	_memccpy_sloc1_1_0,a
      00000B 08               [12]  132 	inc	r0
      00000C E2               [24]  133 	movx	a,@r0
      00000D F5*03            [12]  134 	mov	(_memccpy_sloc1_1_0 + 1),a
      00000F 08               [12]  135 	inc	r0
      000010 E2               [24]  136 	movx	a,@r0
      000011 F5*04            [12]  137 	mov	(_memccpy_sloc1_1_0 + 2),a
                                    138 ;	memccpy.c:36: while (n--)
      000013 78r05            [12]  139 	mov	r0,#_memccpy_PARM_4
      000015 E2               [24]  140 	movx	a,@r0
      000016 F5*00            [12]  141 	mov	_memccpy_sloc0_1_0,a
      000018 08               [12]  142 	inc	r0
      000019 E2               [24]  143 	movx	a,@r0
      00001A F5*01            [12]  144 	mov	(_memccpy_sloc0_1_0 + 1),a
      00001C                        145 00103$:
      00001C AB*00            [24]  146 	mov	r3,_memccpy_sloc0_1_0
      00001E AC*01            [24]  147 	mov	r4,(_memccpy_sloc0_1_0 + 1)
      000020 15*00            [12]  148 	dec	_memccpy_sloc0_1_0
      000022 74 FF            [12]  149 	mov	a,#0xff
      000024 B5*00 02         [24]  150 	cjne	a,_memccpy_sloc0_1_0,00123$
      000027 15*01            [12]  151 	dec	(_memccpy_sloc0_1_0 + 1)
      000029                        152 00123$:
      000029 EB               [12]  153 	mov	a,r3
      00002A 4C               [12]  154 	orl	a,r4
      00002B 60 46            [24]  155 	jz	00105$
                                    156 ;	memccpy.c:37: if ((*d++ = *s++) == (unsigned char)c)
      00002D 85*02 82         [24]  157 	mov	dpl,_memccpy_sloc1_1_0
      000030 85*03 83         [24]  158 	mov	dph,(_memccpy_sloc1_1_0 + 1)
      000033 85*04 F0         [24]  159 	mov	b,(_memccpy_sloc1_1_0 + 2)
      000036 12r00r00         [24]  160 	lcall	__gptrget
      000039 FC               [12]  161 	mov	r4,a
      00003A A3               [24]  162 	inc	dptr
      00003B 85 82*02         [24]  163 	mov	_memccpy_sloc1_1_0,dpl
      00003E 85 83*03         [24]  164 	mov	(_memccpy_sloc1_1_0 + 1),dph
      000041 8D 82            [24]  165 	mov	dpl,r5
      000043 8E 83            [24]  166 	mov	dph,r6
      000045 8F F0            [24]  167 	mov	b,r7
      000047 EC               [12]  168 	mov	a,r4
      000048 12r00r00         [24]  169 	lcall	__gptrput
      00004B A3               [24]  170 	inc	dptr
      00004C AD 82            [24]  171 	mov	r5,dpl
      00004E AE 83            [24]  172 	mov	r6,dph
      000050 78r07            [12]  173 	mov	r0,#_memccpy_d_65536_27
      000052 ED               [12]  174 	mov	a,r5
      000053 F2               [24]  175 	movx	@r0,a
      000054 EE               [12]  176 	mov	a,r6
      000055 08               [12]  177 	inc	r0
      000056 F2               [24]  178 	movx	@r0,a
      000057 EF               [12]  179 	mov	a,r7
      000058 08               [12]  180 	inc	r0
      000059 F2               [24]  181 	movx	@r0,a
      00005A 78r03            [12]  182 	mov	r0,#_memccpy_PARM_3
      00005C E2               [24]  183 	movx	a,@r0
      00005D FB               [12]  184 	mov	r3,a
      00005E EC               [12]  185 	mov	a,r4
      00005F B5 03 BA         [24]  186 	cjne	a,ar3,00103$
                                    187 ;	memccpy.c:38: return (d);
      000062 78r07            [12]  188 	mov	r0,#_memccpy_d_65536_27
      000064 E2               [24]  189 	movx	a,@r0
      000065 FD               [12]  190 	mov	r5,a
      000066 08               [12]  191 	inc	r0
      000067 E2               [24]  192 	movx	a,@r0
      000068 FE               [12]  193 	mov	r6,a
      000069 08               [12]  194 	inc	r0
      00006A E2               [24]  195 	movx	a,@r0
      00006B FF               [12]  196 	mov	r7,a
      00006C 8D 82            [24]  197 	mov	dpl,r5
      00006E 8E 83            [24]  198 	mov	dph,r6
      000070 8F F0            [24]  199 	mov	b,r7
      000072 22               [24]  200 	ret
      000073                        201 00105$:
                                    202 ;	memccpy.c:40: return (0);
      000073 90 00 00         [24]  203 	mov	dptr,#0x0000
      000076 75 F0 00         [24]  204 	mov	b,#0x00
                                    205 ;	memccpy.c:41: }
      000079 22               [24]  206 	ret
                                    207 	.area CSEG    (CODE)
                                    208 	.area CONST   (CODE)
                                    209 	.area XINIT   (CODE)
                                    210 	.area CABS    (ABS,CODE)
