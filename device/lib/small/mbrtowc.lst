                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtowc
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbrtowc_PARM_4
                                     12 	.globl _mbrtowc_PARM_3
                                     13 	.globl _mbrtowc_PARM_2
                                     14 	.globl _mbrtowc
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _mbrtowc_sps_65536_10:
      000000                         35 	.ds 3
      000003                         36 _mbrtowc_PARM_2:
      000003                         37 	.ds 3
      000006                         38 _mbrtowc_PARM_3:
      000006                         39 	.ds 2
      000008                         40 _mbrtowc_PARM_4:
      000008                         41 	.ds 3
      00000B                         42 _mbrtowc_pwc_65536_9:
      00000B                         43 	.ds 3
      00000E                         44 _mbrtowc_first_byte_65536_10:
      00000E                         45 	.ds 1
      00000F                         46 _mbrtowc_seqlen_65536_10:
      00000F                         47 	.ds 1
      000010                         48 _mbrtowc_mbseq_65536_10:
      000010                         49 	.ds 4
      000014                         50 _mbrtowc_codepoint_65536_10:
      000014                         51 	.ds 4
      000018                         52 _mbrtowc_i_65536_10:
      000018                         53 	.ds 1
      000019                         54 _mbrtowc_j_65536_10:
      000019                         55 	.ds 1
      00001A                         56 _mbrtowc_sloc0_1_0:
      00001A                         57 	.ds 2
      00001C                         58 _mbrtowc_sloc1_1_0:
      00001C                         59 	.ds 3
      00001F                         60 _mbrtowc_sloc2_1_0:
      00001F                         61 	.ds 3
      000022                         62 _mbrtowc_sloc3_1_0:
      000022                         63 	.ds 1
      000023                         64 _mbrtowc_sloc4_1_0:
      000023                         65 	.ds 3
      000026                         66 _mbrtowc_sloc5_1_0:
      000026                         67 	.ds 4
                                     68 ;--------------------------------------------------------
                                     69 ; overlayable items in internal ram
                                     70 ;--------------------------------------------------------
                                     71 ;--------------------------------------------------------
                                     72 ; indirectly addressable internal ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area ISEG    (DATA)
                                     75 ;--------------------------------------------------------
                                     76 ; absolute internal ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area IABS    (ABS,DATA)
                                     79 	.area IABS    (ABS,DATA)
                                     80 ;--------------------------------------------------------
                                     81 ; bit data
                                     82 ;--------------------------------------------------------
                                     83 	.area BSEG    (BIT)
                                     84 ;--------------------------------------------------------
                                     85 ; paged external ram data
                                     86 ;--------------------------------------------------------
                                     87 	.area PSEG    (PAG,XDATA)
                                     88 ;--------------------------------------------------------
                                     89 ; uninitialized external ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area XSEG    (XDATA)
                                     92 ;--------------------------------------------------------
                                     93 ; absolute external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area XABS    (ABS,XDATA)
                                     96 ;--------------------------------------------------------
                                     97 ; initialized external ram data
                                     98 ;--------------------------------------------------------
                                     99 	.area XISEG   (XDATA)
                                    100 	.area HOME    (CODE)
                                    101 	.area GSINIT0 (CODE)
                                    102 	.area GSINIT1 (CODE)
                                    103 	.area GSINIT2 (CODE)
                                    104 	.area GSINIT3 (CODE)
                                    105 	.area GSINIT4 (CODE)
                                    106 	.area GSINIT5 (CODE)
                                    107 	.area GSINIT  (CODE)
                                    108 	.area GSFINAL (CODE)
                                    109 	.area CSEG    (CODE)
                                    110 ;--------------------------------------------------------
                                    111 ; global & static initialisations
                                    112 ;--------------------------------------------------------
                                    113 	.area HOME    (CODE)
                                    114 	.area GSINIT  (CODE)
                                    115 	.area GSFINAL (CODE)
                                    116 	.area GSINIT  (CODE)
                                    117 ;--------------------------------------------------------
                                    118 ; Home
                                    119 ;--------------------------------------------------------
                                    120 	.area HOME    (CODE)
                                    121 	.area HOME    (CODE)
                                    122 ;--------------------------------------------------------
                                    123 ; code
                                    124 ;--------------------------------------------------------
                                    125 	.area CSEG    (CODE)
                                    126 ;------------------------------------------------------------
                                    127 ;Allocation info for local variables in function 'mbrtowc'
                                    128 ;------------------------------------------------------------
                                    129 ;sps                       Allocated with name '_mbrtowc_sps_65536_10'
                                    130 ;s                         Allocated with name '_mbrtowc_PARM_2'
                                    131 ;n                         Allocated with name '_mbrtowc_PARM_3'
                                    132 ;ps                        Allocated with name '_mbrtowc_PARM_4'
                                    133 ;pwc                       Allocated with name '_mbrtowc_pwc_65536_9'
                                    134 ;first_byte                Allocated with name '_mbrtowc_first_byte_65536_10'
                                    135 ;seqlen                    Allocated with name '_mbrtowc_seqlen_65536_10'
                                    136 ;mbseq                     Allocated with name '_mbrtowc_mbseq_65536_10'
                                    137 ;codepoint                 Allocated with name '_mbrtowc_codepoint_65536_10'
                                    138 ;i                         Allocated with name '_mbrtowc_i_65536_10'
                                    139 ;j                         Allocated with name '_mbrtowc_j_65536_10'
                                    140 ;sloc0                     Allocated with name '_mbrtowc_sloc0_1_0'
                                    141 ;sloc1                     Allocated with name '_mbrtowc_sloc1_1_0'
                                    142 ;sloc2                     Allocated with name '_mbrtowc_sloc2_1_0'
                                    143 ;sloc3                     Allocated with name '_mbrtowc_sloc3_1_0'
                                    144 ;sloc4                     Allocated with name '_mbrtowc_sloc4_1_0'
                                    145 ;sloc5                     Allocated with name '_mbrtowc_sloc5_1_0'
                                    146 ;------------------------------------------------------------
                                    147 ;	mbrtowc.c:32: size_t mbrtowc(wchar_t *restrict pwc, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    148 ;	-----------------------------------------
                                    149 ;	 function mbrtowc
                                    150 ;	-----------------------------------------
      000000                        151 _mbrtowc:
                           000007   152 	ar7 = 0x07
                           000006   153 	ar6 = 0x06
                           000005   154 	ar5 = 0x05
                           000004   155 	ar4 = 0x04
                           000003   156 	ar3 = 0x03
                           000002   157 	ar2 = 0x02
                           000001   158 	ar1 = 0x01
                           000000   159 	ar0 = 0x00
      000000 85 82*0B         [24]  160 	mov	_mbrtowc_pwc_65536_9,dpl
      000003 85 83*0C         [24]  161 	mov	(_mbrtowc_pwc_65536_9 + 1),dph
      000006 85 F0*0D         [24]  162 	mov	(_mbrtowc_pwc_65536_9 + 2),b
                                    163 ;	mbrtowc.c:41: if(!s)
      000009 E5*03            [12]  164 	mov	a,_mbrtowc_PARM_2
      00000B 45*04            [12]  165 	orl	a,(_mbrtowc_PARM_2 + 1)
      00000D 70 18            [24]  166 	jnz	00102$
                                    167 ;	mbrtowc.c:42: return(mbrtowc(0, "", 1, ps));
      00000F 75*03r00         [24]  168 	mov	_mbrtowc_PARM_2,#___str_0
      000012 75*04s00         [24]  169 	mov	(_mbrtowc_PARM_2 + 1),#(___str_0 >> 8)
      000015 75*05 80         [24]  170 	mov	(_mbrtowc_PARM_2 + 2),#0x80
      000018 75*06 01         [24]  171 	mov	_mbrtowc_PARM_3,#0x01
      00001B 75*07 00         [24]  172 	mov	(_mbrtowc_PARM_3 + 1),#0x00
      00001E 90 00 00         [24]  173 	mov	dptr,#0x0000
      000021 75 F0 00         [24]  174 	mov	b,#0x00
      000024 02r00r00         [24]  175 	ljmp	_mbrtowc
      000027                        176 00102$:
                                    177 ;	mbrtowc.c:43: if(!n)
      000027 E5*06            [12]  178 	mov	a,_mbrtowc_PARM_3
      000029 45*07            [12]  179 	orl	a,(_mbrtowc_PARM_3 + 1)
      00002B 70 03            [24]  180 	jnz	00280$
      00002D 02r02rDD         [24]  181 	ljmp	00128$
      000030                        182 00280$:
                                    183 ;	mbrtowc.c:45: if(!ps)
      000030 E5*08            [12]  184 	mov	a,_mbrtowc_PARM_4
      000032 45*09            [12]  185 	orl	a,(_mbrtowc_PARM_4 + 1)
                                    186 ;	mbrtowc.c:47: ps = &sps;
      000034 70 08            [24]  187 	jnz	00106$
      000036 75*08r00         [24]  188 	mov	_mbrtowc_PARM_4,#_mbrtowc_sps_65536_10
      000039 F5*09            [12]  189 	mov	(_mbrtowc_PARM_4 + 1),a
      00003B 75*0A 40         [24]  190 	mov	(_mbrtowc_PARM_4 + 2),#0x40
      00003E                        191 00106$:
                                    192 ;	mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
      00003E AA*08            [24]  193 	mov	r2,_mbrtowc_PARM_4
      000040 AB*09            [24]  194 	mov	r3,(_mbrtowc_PARM_4 + 1)
      000042 AC*0A            [24]  195 	mov	r4,(_mbrtowc_PARM_4 + 2)
      000044 75*18 00         [24]  196 	mov	_mbrtowc_i_65536_10,#0x00
      000047                        197 00131$:
      000047 E5*18            [12]  198 	mov	a,_mbrtowc_i_65536_10
      000049 2A               [12]  199 	add	a,r2
      00004A FD               [12]  200 	mov	r5,a
      00004B E4               [12]  201 	clr	a
      00004C 3B               [12]  202 	addc	a,r3
      00004D FE               [12]  203 	mov	r6,a
      00004E 8C 07            [24]  204 	mov	ar7,r4
      000050 8D 82            [24]  205 	mov	dpl,r5
      000052 8E 83            [24]  206 	mov	dph,r6
      000054 8F F0            [24]  207 	mov	b,r7
      000056 12r00r00         [24]  208 	lcall	__gptrget
      000059 FF               [12]  209 	mov	r7,a
      00005A 60 11            [24]  210 	jz	00174$
      00005C 74 FD            [12]  211 	mov	a,#0x100 - 0x03
      00005E 25*18            [12]  212 	add	a,_mbrtowc_i_65536_10
      000060 40 0B            [24]  213 	jc	00174$
                                    214 ;	mbrtowc.c:51: mbseq[i] = ps->c[i];
      000062 E5*18            [12]  215 	mov	a,_mbrtowc_i_65536_10
      000064 24r10            [12]  216 	add	a,#_mbrtowc_mbseq_65536_10
      000066 F8               [12]  217 	mov	r0,a
      000067 A6 07            [24]  218 	mov	@r0,ar7
                                    219 ;	mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
      000069 05*18            [12]  220 	inc	_mbrtowc_i_65536_10
      00006B 80 DA            [24]  221 	sjmp	00131$
      00006D                        222 00174$:
      00006D AF*18            [24]  223 	mov	r7,_mbrtowc_i_65536_10
                                    224 ;	mbrtowc.c:53: seqlen = 1;
      00006F 7E 01            [12]  225 	mov	r6,#0x01
                                    226 ;	mbrtowc.c:54: first_byte = ps->c[0] ? ps->c[0] : *s;
      000071 AB*08            [24]  227 	mov	r3,_mbrtowc_PARM_4
      000073 AC*09            [24]  228 	mov	r4,(_mbrtowc_PARM_4 + 1)
      000075 AD*0A            [24]  229 	mov	r5,(_mbrtowc_PARM_4 + 2)
      000077 8B 82            [24]  230 	mov	dpl,r3
      000079 8C 83            [24]  231 	mov	dph,r4
      00007B 8D F0            [24]  232 	mov	b,r5
      00007D 12r00r00         [24]  233 	lcall	__gptrget
      000080 FD               [12]  234 	mov	r5,a
      000081 60 02            [24]  235 	jz	00147$
      000083 80 10            [24]  236 	sjmp	00148$
      000085                        237 00147$:
      000085 AA*03            [24]  238 	mov	r2,_mbrtowc_PARM_2
      000087 AB*04            [24]  239 	mov	r3,(_mbrtowc_PARM_2 + 1)
      000089 AC*05            [24]  240 	mov	r4,(_mbrtowc_PARM_2 + 2)
      00008B 8A 82            [24]  241 	mov	dpl,r2
      00008D 8B 83            [24]  242 	mov	dph,r3
      00008F 8C F0            [24]  243 	mov	b,r4
      000091 12r00r00         [24]  244 	lcall	__gptrget
      000094 FD               [12]  245 	mov	r5,a
      000095                        246 00148$:
                                    247 ;	mbrtowc.c:56: if(first_byte & 0x80)
      000095 ED               [12]  248 	mov	a,r5
      000096 F5*0E            [12]  249 	mov	_mbrtowc_first_byte_65536_10,a
      000098 30 E7 4E         [24]  250 	jnb	acc.7,00112$
                                    251 ;	mbrtowc.c:58: while (first_byte & (0x80 >> seqlen))
      00009B 75*0F 01         [24]  252 	mov	_mbrtowc_seqlen_65536_10,#0x01
      00009E                        253 00108$:
      00009E 85*0F F0         [24]  254 	mov	b,_mbrtowc_seqlen_65536_10
      0000A1 05 F0            [12]  255 	inc	b
      0000A3 7A 80            [12]  256 	mov	r2,#0x80
      0000A5 E4               [12]  257 	clr	a
      0000A6 FB               [12]  258 	mov	r3,a
      0000A7 33               [12]  259 	rlc	a
      0000A8 92 D2            [24]  260 	mov	ov,c
      0000AA 80 08            [24]  261 	sjmp	00287$
      0000AC                        262 00286$:
      0000AC A2 D2            [12]  263 	mov	c,ov
      0000AE EB               [12]  264 	mov	a,r3
      0000AF 13               [12]  265 	rrc	a
      0000B0 FB               [12]  266 	mov	r3,a
      0000B1 EA               [12]  267 	mov	a,r2
      0000B2 13               [12]  268 	rrc	a
      0000B3 FA               [12]  269 	mov	r2,a
      0000B4                        270 00287$:
      0000B4 D5 F0 F5         [24]  271 	djnz	b,00286$
      0000B7 AC*0E            [24]  272 	mov	r4,_mbrtowc_first_byte_65536_10
      0000B9 7D 00            [12]  273 	mov	r5,#0x00
      0000BB EC               [12]  274 	mov	a,r4
      0000BC 52 02            [12]  275 	anl	ar2,a
      0000BE ED               [12]  276 	mov	a,r5
      0000BF 52 03            [12]  277 	anl	ar3,a
      0000C1 EA               [12]  278 	mov	a,r2
      0000C2 4B               [12]  279 	orl	a,r3
      0000C3 60 04            [24]  280 	jz	00175$
                                    281 ;	mbrtowc.c:59: seqlen++;
      0000C5 05*0F            [12]  282 	inc	_mbrtowc_seqlen_65536_10
      0000C7 80 D5            [24]  283 	sjmp	00108$
      0000C9                        284 00175$:
                                    285 ;	mbrtowc.c:60: first_byte &= (0xff >> (seqlen + 1));
      0000C9 E5*0F            [12]  286 	mov	a,_mbrtowc_seqlen_65536_10
      0000CB FE               [12]  287 	mov	r6,a
      0000CC 04               [12]  288 	inc	a
      0000CD FD               [12]  289 	mov	r5,a
      0000CE 8D F0            [24]  290 	mov	b,r5
      0000D0 05 F0            [12]  291 	inc	b
      0000D2 7D FF            [12]  292 	mov	r5,#0xff
      0000D4 E4               [12]  293 	clr	a
      0000D5 FC               [12]  294 	mov	r4,a
      0000D6 33               [12]  295 	rlc	a
      0000D7 92 D2            [24]  296 	mov	ov,c
      0000D9 80 08            [24]  297 	sjmp	00290$
      0000DB                        298 00289$:
      0000DB A2 D2            [12]  299 	mov	c,ov
      0000DD EC               [12]  300 	mov	a,r4
      0000DE 13               [12]  301 	rrc	a
      0000DF FC               [12]  302 	mov	r4,a
      0000E0 ED               [12]  303 	mov	a,r5
      0000E1 13               [12]  304 	rrc	a
      0000E2 FD               [12]  305 	mov	r5,a
      0000E3                        306 00290$:
      0000E3 D5 F0 F5         [24]  307 	djnz	b,00289$
      0000E6 ED               [12]  308 	mov	a,r5
      0000E7 52*0E            [12]  309 	anl	_mbrtowc_first_byte_65536_10,a
      0000E9                        310 00112$:
                                    311 ;	mbrtowc.c:63: if(seqlen > 4)
      0000E9 EE               [12]  312 	mov	a,r6
      0000EA 24 FB            [12]  313 	add	a,#0xff - 0x04
      0000EC 50 03            [24]  314 	jnc	00291$
      0000EE 02r02rDD         [24]  315 	ljmp	00128$
      0000F1                        316 00291$:
                                    317 ;	mbrtowc.c:66: if(i + n < seqlen) // Incomplete multibyte character
      0000F1 8F 04            [24]  318 	mov	ar4,r7
      0000F3 7D 00            [12]  319 	mov	r5,#0x00
      0000F5 8C 02            [24]  320 	mov	ar2,r4
      0000F7 8D 03            [24]  321 	mov	ar3,r5
      0000F9 E5*06            [12]  322 	mov	a,_mbrtowc_PARM_3
      0000FB 2A               [12]  323 	add	a,r2
      0000FC F5*1A            [12]  324 	mov	_mbrtowc_sloc0_1_0,a
      0000FE E5*07            [12]  325 	mov	a,(_mbrtowc_PARM_3 + 1)
      000100 3B               [12]  326 	addc	a,r3
      000101 F5*1B            [12]  327 	mov	(_mbrtowc_sloc0_1_0 + 1),a
      000103 C0 07            [24]  328 	push	ar7
      000105 8E 03            [24]  329 	mov	ar3,r6
      000107 7F 00            [12]  330 	mov	r7,#0x00
      000109 C3               [12]  331 	clr	c
      00010A E5*1A            [12]  332 	mov	a,_mbrtowc_sloc0_1_0
      00010C 9B               [12]  333 	subb	a,r3
      00010D E5*1B            [12]  334 	mov	a,(_mbrtowc_sloc0_1_0 + 1)
      00010F 9F               [12]  335 	subb	a,r7
      000110 D0 07            [24]  336 	pop	ar7
      000112 50 62            [24]  337 	jnc	00164$
                                    338 ;	mbrtowc.c:70: return(-2);
      000114 85*08*1C         [24]  339 	mov	_mbrtowc_sloc1_1_0,_mbrtowc_PARM_4
      000117 85*09*1D         [24]  340 	mov	(_mbrtowc_sloc1_1_0 + 1),(_mbrtowc_PARM_4 + 1)
      00011A 85*0A*1E         [24]  341 	mov	(_mbrtowc_sloc1_1_0 + 2),(_mbrtowc_PARM_4 + 2)
      00011D 85*03*1F         [24]  342 	mov	_mbrtowc_sloc2_1_0,_mbrtowc_PARM_2
      000120 85*04*20         [24]  343 	mov	(_mbrtowc_sloc2_1_0 + 1),(_mbrtowc_PARM_2 + 1)
      000123 85*05*21         [24]  344 	mov	(_mbrtowc_sloc2_1_0 + 2),(_mbrtowc_PARM_2 + 2)
      000126 8F*22            [24]  345 	mov	_mbrtowc_sloc3_1_0,r7
      000128 85*06*1A         [24]  346 	mov	_mbrtowc_sloc0_1_0,_mbrtowc_PARM_3
      00012B 85*07*1B         [24]  347 	mov	(_mbrtowc_sloc0_1_0 + 1),(_mbrtowc_PARM_3 + 1)
      00012E                        348 00134$:
                                    349 ;	mbrtowc.c:68: for(;n-- ; i++)
      00012E AA*1A            [24]  350 	mov	r2,_mbrtowc_sloc0_1_0
      000130 AB*1B            [24]  351 	mov	r3,(_mbrtowc_sloc0_1_0 + 1)
      000132 15*1A            [12]  352 	dec	_mbrtowc_sloc0_1_0
      000134 74 FF            [12]  353 	mov	a,#0xff
      000136 B5*1A 02         [24]  354 	cjne	a,_mbrtowc_sloc0_1_0,00293$
      000139 15*1B            [12]  355 	dec	(_mbrtowc_sloc0_1_0 + 1)
      00013B                        356 00293$:
      00013B EA               [12]  357 	mov	a,r2
      00013C 4B               [12]  358 	orl	a,r3
      00013D 60 33            [24]  359 	jz	00115$
                                    360 ;	mbrtowc.c:69: ps->c[i] = *s++;
      00013F E5*22            [12]  361 	mov	a,_mbrtowc_sloc3_1_0
      000141 25*1C            [12]  362 	add	a,_mbrtowc_sloc1_1_0
      000143 F5*23            [12]  363 	mov	_mbrtowc_sloc4_1_0,a
      000145 E4               [12]  364 	clr	a
      000146 35*1D            [12]  365 	addc	a,(_mbrtowc_sloc1_1_0 + 1)
      000148 F5*24            [12]  366 	mov	(_mbrtowc_sloc4_1_0 + 1),a
      00014A 85*1E*25         [24]  367 	mov	(_mbrtowc_sloc4_1_0 + 2),(_mbrtowc_sloc1_1_0 + 2)
      00014D 85*1F 82         [24]  368 	mov	dpl,_mbrtowc_sloc2_1_0
      000150 85*20 83         [24]  369 	mov	dph,(_mbrtowc_sloc2_1_0 + 1)
      000153 85*21 F0         [24]  370 	mov	b,(_mbrtowc_sloc2_1_0 + 2)
      000156 12r00r00         [24]  371 	lcall	__gptrget
      000159 FB               [12]  372 	mov	r3,a
      00015A A3               [24]  373 	inc	dptr
      00015B 85 82*1F         [24]  374 	mov	_mbrtowc_sloc2_1_0,dpl
      00015E 85 83*20         [24]  375 	mov	(_mbrtowc_sloc2_1_0 + 1),dph
      000161 85*23 82         [24]  376 	mov	dpl,_mbrtowc_sloc4_1_0
      000164 85*24 83         [24]  377 	mov	dph,(_mbrtowc_sloc4_1_0 + 1)
      000167 85*25 F0         [24]  378 	mov	b,(_mbrtowc_sloc4_1_0 + 2)
      00016A EB               [12]  379 	mov	a,r3
      00016B 12r00r00         [24]  380 	lcall	__gptrput
                                    381 ;	mbrtowc.c:68: for(;n-- ; i++)
      00016E 05*22            [12]  382 	inc	_mbrtowc_sloc3_1_0
      000170 80 BC            [24]  383 	sjmp	00134$
      000172                        384 00115$:
                                    385 ;	mbrtowc.c:70: return(-2);
      000172 90 FF FE         [24]  386 	mov	dptr,#0xfffe
      000175 22               [24]  387 	ret
                                    388 ;	mbrtowc.c:73: for(j = 0; j < i; j++)
      000176                        389 00164$:
      000176 85*08*23         [24]  390 	mov	_mbrtowc_sloc4_1_0,_mbrtowc_PARM_4
      000179 85*09*24         [24]  391 	mov	(_mbrtowc_sloc4_1_0 + 1),(_mbrtowc_PARM_4 + 1)
      00017C 85*0A*25         [24]  392 	mov	(_mbrtowc_sloc4_1_0 + 2),(_mbrtowc_PARM_4 + 2)
      00017F 75*19 00         [24]  393 	mov	_mbrtowc_j_65536_10,#0x00
      000182                        394 00137$:
      000182 C3               [12]  395 	clr	c
      000183 E5*19            [12]  396 	mov	a,_mbrtowc_j_65536_10
      000185 9F               [12]  397 	subb	a,r7
      000186 50 21            [24]  398 	jnc	00118$
                                    399 ;	mbrtowc.c:74: ps->c[j] = 0;
      000188 C0 04            [24]  400 	push	ar4
      00018A C0 05            [24]  401 	push	ar5
      00018C E5*19            [12]  402 	mov	a,_mbrtowc_j_65536_10
      00018E 25*23            [12]  403 	add	a,_mbrtowc_sloc4_1_0
      000190 FA               [12]  404 	mov	r2,a
      000191 E4               [12]  405 	clr	a
      000192 35*24            [12]  406 	addc	a,(_mbrtowc_sloc4_1_0 + 1)
      000194 FB               [12]  407 	mov	r3,a
      000195 AD*25            [24]  408 	mov	r5,(_mbrtowc_sloc4_1_0 + 2)
      000197 8A 82            [24]  409 	mov	dpl,r2
      000199 8B 83            [24]  410 	mov	dph,r3
      00019B 8D F0            [24]  411 	mov	b,r5
      00019D E4               [12]  412 	clr	a
      00019E 12r00r00         [24]  413 	lcall	__gptrput
                                    414 ;	mbrtowc.c:73: for(j = 0; j < i; j++)
      0001A1 05*19            [12]  415 	inc	_mbrtowc_j_65536_10
      0001A3 D0 05            [24]  416 	pop	ar5
      0001A5 D0 04            [24]  417 	pop	ar4
      0001A7 80 D9            [24]  418 	sjmp	00137$
      0001A9                        419 00118$:
                                    420 ;	mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
      0001A9 75*06 01         [24]  421 	mov	_mbrtowc_PARM_3,#0x01
      0001AC 75*07 00         [24]  422 	mov	(_mbrtowc_PARM_3 + 1),#0x00
      0001AF EF               [12]  423 	mov	a,r7
      0001B0 60 04            [24]  424 	jz	00149$
      0001B2 8C 07            [24]  425 	mov	ar7,r4
      0001B4 80 04            [24]  426 	sjmp	00150$
      0001B6                        427 00149$:
      0001B6 7F 01            [12]  428 	mov	r7,#0x01
      0001B8 7D 00            [12]  429 	mov	r5,#0x00
      0001BA                        430 00150$:
      0001BA AB*03            [24]  431 	mov	r3,_mbrtowc_PARM_2
      0001BC AC*04            [24]  432 	mov	r4,(_mbrtowc_PARM_2 + 1)
      0001BE AD*05            [24]  433 	mov	r5,(_mbrtowc_PARM_2 + 2)
      0001C0 75*23 01         [24]  434 	mov	_mbrtowc_sloc4_1_0,#0x01
      0001C3 75*24 00         [24]  435 	mov	(_mbrtowc_sloc4_1_0 + 1),#0x00
      0001C6                        436 00140$:
      0001C6 C3               [12]  437 	clr	c
      0001C7 EF               [12]  438 	mov	a,r7
      0001C8 9E               [12]  439 	subb	a,r6
      0001C9 50 3C            [24]  440 	jnc	00121$
                                    441 ;	mbrtowc.c:78: mbseq[i] = *s++;
      0001CB C0 06            [24]  442 	push	ar6
      0001CD EF               [12]  443 	mov	a,r7
      0001CE 24r10            [12]  444 	add	a,#_mbrtowc_mbseq_65536_10
      0001D0 F9               [12]  445 	mov	r1,a
      0001D1 8B 82            [24]  446 	mov	dpl,r3
      0001D3 8C 83            [24]  447 	mov	dph,r4
      0001D5 8D F0            [24]  448 	mov	b,r5
      0001D7 12r00r00         [24]  449 	lcall	__gptrget
      0001DA FA               [12]  450 	mov	r2,a
      0001DB A3               [24]  451 	inc	dptr
      0001DC AB 82            [24]  452 	mov	r3,dpl
      0001DE AC 83            [24]  453 	mov	r4,dph
      0001E0 A7 02            [24]  454 	mov	@r1,ar2
                                    455 ;	mbrtowc.c:79: if((mbseq[i] & 0xc0) != 0x80)
      0001E2 53 02 C0         [24]  456 	anl	ar2,#0xc0
      0001E5 7E 00            [12]  457 	mov	r6,#0x00
      0001E7 BA 80 05         [24]  458 	cjne	r2,#0x80,00298$
      0001EA BE 00 02         [24]  459 	cjne	r6,#0x00,00298$
      0001ED 80 05            [24]  460 	sjmp	00299$
      0001EF                        461 00298$:
      0001EF D0 06            [24]  462 	pop	ar6
      0001F1 02r02rDD         [24]  463 	ljmp	00128$
      0001F4                        464 00299$:
      0001F4 D0 06            [24]  465 	pop	ar6
                                    466 ;	mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
      0001F6 0F               [12]  467 	inc	r7
      0001F7 05*23            [12]  468 	inc	_mbrtowc_sloc4_1_0
      0001F9 E4               [12]  469 	clr	a
      0001FA B5*23 02         [24]  470 	cjne	a,_mbrtowc_sloc4_1_0,00300$
      0001FD 05*24            [12]  471 	inc	(_mbrtowc_sloc4_1_0 + 1)
      0001FF                        472 00300$:
      0001FF 85*23*06         [24]  473 	mov	_mbrtowc_PARM_3,_mbrtowc_sloc4_1_0
      000202 85*24*07         [24]  474 	mov	(_mbrtowc_PARM_3 + 1),(_mbrtowc_sloc4_1_0 + 1)
      000205 80 BF            [24]  475 	sjmp	00140$
      000207                        476 00121$:
                                    477 ;	mbrtowc.c:83: codepoint = first_byte;
      000207 AD*0E            [24]  478 	mov	r5,_mbrtowc_first_byte_65536_10
      000209 7C 00            [12]  479 	mov	r4,#0x00
      00020B 7B 00            [12]  480 	mov	r3,#0x00
      00020D 7F 00            [12]  481 	mov	r7,#0x00
                                    482 ;	mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
      00020F 75*23r11         [24]  483 	mov	_mbrtowc_sloc4_1_0,#(_mbrtowc_mbseq_65536_10 + 0x0001)
      000212 8F*24            [24]  484 	mov	(_mbrtowc_sloc4_1_0 + 1),r7
      000214 75*25 40         [24]  485 	mov	(_mbrtowc_sloc4_1_0 + 2),#0x40
      000217 EE               [12]  486 	mov	a,r6
      000218 14               [12]  487 	dec	a
      000219 F5*22            [12]  488 	mov	_mbrtowc_sloc3_1_0,a
      00021B                        489 00143$:
      00021B E5*22            [12]  490 	mov	a,_mbrtowc_sloc3_1_0
      00021D 60 79            [24]  491 	jz	00122$
                                    492 ;	mbrtowc.c:87: codepoint <<= 6;
      00021F 8B*16            [24]  493 	mov	(_mbrtowc_codepoint_65536_10 + 2),r3
      000221 EF               [12]  494 	mov	a,r7
      000222 54 03            [12]  495 	anl	a,#0x03
      000224 A2 E0            [12]  496 	mov	c,acc.0
      000226 C5*16            [12]  497 	xch	a,(_mbrtowc_codepoint_65536_10 + 2)
      000228 13               [12]  498 	rrc	a
      000229 C5*16            [12]  499 	xch	a,(_mbrtowc_codepoint_65536_10 + 2)
      00022B 13               [12]  500 	rrc	a
      00022C A2 E0            [12]  501 	mov	c,acc.0
      00022E C5*16            [12]  502 	xch	a,(_mbrtowc_codepoint_65536_10 + 2)
      000230 13               [12]  503 	rrc	a
      000231 C5*16            [12]  504 	xch	a,(_mbrtowc_codepoint_65536_10 + 2)
      000233 13               [12]  505 	rrc	a
      000234 C5*16            [12]  506 	xch	a,(_mbrtowc_codepoint_65536_10 + 2)
      000236 F5*17            [12]  507 	mov	(_mbrtowc_codepoint_65536_10 + 3),a
      000238 EC               [12]  508 	mov	a,r4
      000239 03               [12]  509 	rr	a
      00023A 03               [12]  510 	rr	a
      00023B 54 3F            [12]  511 	anl	a,#0x3f
      00023D 45*16            [12]  512 	orl	a,(_mbrtowc_codepoint_65536_10 + 2)
      00023F F5*16            [12]  513 	mov	(_mbrtowc_codepoint_65536_10 + 2),a
      000241 8D*14            [24]  514 	mov	_mbrtowc_codepoint_65536_10,r5
      000243 EC               [12]  515 	mov	a,r4
      000244 54 03            [12]  516 	anl	a,#0x03
      000246 A2 E0            [12]  517 	mov	c,acc.0
      000248 C5*14            [12]  518 	xch	a,_mbrtowc_codepoint_65536_10
      00024A 13               [12]  519 	rrc	a
      00024B C5*14            [12]  520 	xch	a,_mbrtowc_codepoint_65536_10
      00024D 13               [12]  521 	rrc	a
      00024E A2 E0            [12]  522 	mov	c,acc.0
      000250 C5*14            [12]  523 	xch	a,_mbrtowc_codepoint_65536_10
      000252 13               [12]  524 	rrc	a
      000253 C5*14            [12]  525 	xch	a,_mbrtowc_codepoint_65536_10
      000255 13               [12]  526 	rrc	a
      000256 C5*14            [12]  527 	xch	a,_mbrtowc_codepoint_65536_10
      000258 F5*15            [12]  528 	mov	(_mbrtowc_codepoint_65536_10 + 1),a
                                    529 ;	mbrtowc.c:88: codepoint |= (*s & 0x3f);
      00025A 85*23 82         [24]  530 	mov	dpl,_mbrtowc_sloc4_1_0
      00025D 85*24 83         [24]  531 	mov	dph,(_mbrtowc_sloc4_1_0 + 1)
      000260 85*25 F0         [24]  532 	mov	b,(_mbrtowc_sloc4_1_0 + 2)
      000263 12r00r00         [24]  533 	lcall	__gptrget
      000266 FA               [12]  534 	mov	r2,a
      000267 A3               [24]  535 	inc	dptr
      000268 85 82*23         [24]  536 	mov	_mbrtowc_sloc4_1_0,dpl
      00026B 85 83*24         [24]  537 	mov	(_mbrtowc_sloc4_1_0 + 1),dph
      00026E 53 02 3F         [24]  538 	anl	ar2,#0x3f
      000271 7E 00            [12]  539 	mov	r6,#0x00
      000273 8A*26            [24]  540 	mov	_mbrtowc_sloc5_1_0,r2
      000275 EE               [12]  541 	mov	a,r6
      000276 F5*27            [12]  542 	mov	(_mbrtowc_sloc5_1_0 + 1),a
      000278 33               [12]  543 	rlc	a
      000279 95 E0            [12]  544 	subb	a,acc
      00027B F5*28            [12]  545 	mov	(_mbrtowc_sloc5_1_0 + 2),a
      00027D F5*29            [12]  546 	mov	(_mbrtowc_sloc5_1_0 + 3),a
      00027F E5*26            [12]  547 	mov	a,_mbrtowc_sloc5_1_0
      000281 45*14            [12]  548 	orl	a,_mbrtowc_codepoint_65536_10
      000283 FD               [12]  549 	mov	r5,a
      000284 E5*27            [12]  550 	mov	a,(_mbrtowc_sloc5_1_0 + 1)
      000286 45*15            [12]  551 	orl	a,(_mbrtowc_codepoint_65536_10 + 1)
      000288 FC               [12]  552 	mov	r4,a
      000289 E5*28            [12]  553 	mov	a,(_mbrtowc_sloc5_1_0 + 2)
      00028B 45*16            [12]  554 	orl	a,(_mbrtowc_codepoint_65536_10 + 2)
      00028D FB               [12]  555 	mov	r3,a
      00028E E5*29            [12]  556 	mov	a,(_mbrtowc_sloc5_1_0 + 3)
      000290 45*17            [12]  557 	orl	a,(_mbrtowc_codepoint_65536_10 + 3)
      000292 FF               [12]  558 	mov	r7,a
                                    559 ;	mbrtowc.c:89: s++;
                                    560 ;	mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
      000293 15*22            [12]  561 	dec	_mbrtowc_sloc3_1_0
      000295 02r02r1B         [24]  562 	ljmp	00143$
      000298                        563 00122$:
                                    564 ;	mbrtowc.c:92: if(codepoint >= 0xd800 && codepoint <= 0xdfff) // UTF-16 surrogate.
      000298 C3               [12]  565 	clr	c
      000299 EC               [12]  566 	mov	a,r4
      00029A 94 D8            [12]  567 	subb	a,#0xd8
      00029C EB               [12]  568 	mov	a,r3
      00029D 94 00            [12]  569 	subb	a,#0x00
      00029F EF               [12]  570 	mov	a,r7
      0002A0 94 00            [12]  571 	subb	a,#0x00
      0002A2 40 10            [24]  572 	jc	00124$
      0002A4 74 FF            [12]  573 	mov	a,#0xff
      0002A6 9D               [12]  574 	subb	a,r5
      0002A7 74 DF            [12]  575 	mov	a,#0xdf
      0002A9 9C               [12]  576 	subb	a,r4
      0002AA E4               [12]  577 	clr	a
      0002AB 9B               [12]  578 	subb	a,r3
      0002AC E4               [12]  579 	clr	a
      0002AD 9F               [12]  580 	subb	a,r7
      0002AE 40 04            [24]  581 	jc	00124$
                                    582 ;	mbrtowc.c:93: return(-1);
      0002B0 90 FF FF         [24]  583 	mov	dptr,#0xffff
      0002B3 22               [24]  584 	ret
      0002B4                        585 00124$:
                                    586 ;	mbrtowc.c:95: if(pwc)
      0002B4 E5*0B            [12]  587 	mov	a,_mbrtowc_pwc_65536_9
      0002B6 45*0C            [12]  588 	orl	a,(_mbrtowc_pwc_65536_9 + 1)
      0002B8 60 1C            [24]  589 	jz	00127$
                                    590 ;	mbrtowc.c:96: *pwc = codepoint;
      0002BA 85*0B 82         [24]  591 	mov	dpl,_mbrtowc_pwc_65536_9
      0002BD 85*0C 83         [24]  592 	mov	dph,(_mbrtowc_pwc_65536_9 + 1)
      0002C0 85*0D F0         [24]  593 	mov	b,(_mbrtowc_pwc_65536_9 + 2)
      0002C3 ED               [12]  594 	mov	a,r5
      0002C4 12r00r00         [24]  595 	lcall	__gptrput
      0002C7 A3               [24]  596 	inc	dptr
      0002C8 EC               [12]  597 	mov	a,r4
      0002C9 12r00r00         [24]  598 	lcall	__gptrput
      0002CC A3               [24]  599 	inc	dptr
      0002CD EB               [12]  600 	mov	a,r3
      0002CE 12r00r00         [24]  601 	lcall	__gptrput
      0002D1 A3               [24]  602 	inc	dptr
      0002D2 EF               [12]  603 	mov	a,r7
      0002D3 12r00r00         [24]  604 	lcall	__gptrput
      0002D6                        605 00127$:
                                    606 ;	mbrtowc.c:97: return(n);
      0002D6 85*06 82         [24]  607 	mov	dpl,_mbrtowc_PARM_3
      0002D9 85*07 83         [24]  608 	mov	dph,(_mbrtowc_PARM_3 + 1)
                                    609 ;	mbrtowc.c:99: eilseq:
      0002DC 22               [24]  610 	ret
      0002DD                        611 00128$:
                                    612 ;	mbrtowc.c:100: errno = EILSEQ;
      0002DD 75*00 54         [24]  613 	mov	_errno,#0x54
      0002E0 75*01 00         [24]  614 	mov	(_errno + 1),#0x00
                                    615 ;	mbrtowc.c:101: return(-1);
      0002E3 90 FF FF         [24]  616 	mov	dptr,#0xffff
                                    617 ;	mbrtowc.c:102: }
      0002E6 22               [24]  618 	ret
                                    619 	.area CSEG    (CODE)
                                    620 	.area CONST   (CODE)
                                    621 	.area CONST   (CODE)
      000000                        622 ___str_0:
      000000 00                     623 	.db 0x00
                                    624 	.area CSEG    (CODE)
                                    625 	.area XINIT   (CODE)
                                    626 	.area CABS    (ABS,CODE)
