                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divulong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 ;--------------------------------------------------------
                                     12 ; special function registers
                                     13 ;--------------------------------------------------------
                                     14 	.area RSEG    (ABS,DATA)
      000000                         15 	.org 0x0000
                                     16 ;--------------------------------------------------------
                                     17 ; special function bits
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; overlayable register banks
                                     23 ;--------------------------------------------------------
                                     24 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         25 	.ds 8
                                     26 ;--------------------------------------------------------
                                     27 ; internal ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area DSEG    (DATA)
                                     30 ;--------------------------------------------------------
                                     31 ; overlayable items in internal ram
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; indirectly addressable internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area ISEG    (DATA)
                                     37 ;--------------------------------------------------------
                                     38 ; absolute internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area IABS    (ABS,DATA)
                                     41 	.area IABS    (ABS,DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; bit data
                                     44 ;--------------------------------------------------------
                                     45 	.area BSEG    (BIT)
                                     46 ;--------------------------------------------------------
                                     47 ; paged external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area PSEG    (PAG,XDATA)
                                     50 ;--------------------------------------------------------
                                     51 ; uninitialized external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area XSEG    (XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XABS    (ABS,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; initialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XISEG   (XDATA)
                                     62 	.area HOME    (CODE)
                                     63 	.area GSINIT0 (CODE)
                                     64 	.area GSINIT1 (CODE)
                                     65 	.area GSINIT2 (CODE)
                                     66 	.area GSINIT3 (CODE)
                                     67 	.area GSINIT4 (CODE)
                                     68 	.area GSINIT5 (CODE)
                                     69 	.area GSINIT  (CODE)
                                     70 	.area GSFINAL (CODE)
                                     71 	.area CSEG    (CODE)
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area HOME    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; code
                                     86 ;--------------------------------------------------------
                                     87 	.area CSEG    (CODE)
                                     88 ;------------------------------------------------------------
                                     89 ;Allocation info for local variables in function '_divlong_dummy'
                                     90 ;------------------------------------------------------------
                                     91 ;	_divulong.c:57: _divlong_dummy (void) __naked
                                     92 ;	-----------------------------------------
                                     93 ;	 function _divlong_dummy
                                     94 ;	-----------------------------------------
      000000                         95 __divlong_dummy:
                                     96 ;	naked function: no prologue.
                                     97 ;	_divulong.c:192: __endasm;
                                     98 	.globl	__divulong
      000000                         99 __divulong:
                                    100 	.area	OSEG (OVR,DATA)
                                    101 	.globl	__divulong_PARM_2
                                    102 	.globl	__divslong_PARM_2
      000000                        103 __divulong_PARM_2:
      000000                        104 __divslong_PARM_2:
      000000                        105 	.ds	4
                                    106 	.area	CSEG (CODE)
                                    107 ;	parameter x comes in a, b, dph, dpl
      000000 FB               [12]  108 	mov	r3,a ; save parameter r3
      000001 7A 20            [12]  109 	mov	r2,#32
      000003 E4               [12]  110 	clr	a
      000004 FC               [12]  111 	mov	r4,a
      000005 FD               [12]  112 	mov	r5,a
      000006 FE               [12]  113 	mov	r6,a
      000007 FF               [12]  114 	mov	r7,a
                                    115 ;	optimization loop in lp0 until the first bit is shifted into rest
      000008                        116 lp0:
      000008 E5 82            [12]  117 	mov a,dpl ; x <<= 1
      00000A 25 82            [12]  118 	add	a,dpl
      00000C F5 82            [12]  119 	mov	dpl,a
      00000E E5 83            [12]  120 	mov	a,dph
      000010 33               [12]  121 	rlc	a
      000011 F5 83            [12]  122 	mov	dph,a
      000013 E5 F0            [12]  123 	mov	a,b
      000015 33               [12]  124 	rlc	a
      000016 F5 F0            [12]  125 	mov	b,a
      000018 EB               [12]  126 	mov	a,r3
      000019 33               [12]  127 	rlc	a
      00001A FB               [12]  128 	mov	r3,a
      00001B 40 17            [24]  129 	jc	in_lp
      00001D DA E9            [24]  130 	djnz	r2,lp0
      00001F 80 42            [24]  131 	sjmp	exit
      000021                        132 loop:
      000021 E5 82            [12]  133 	mov a,dpl ; x <<= 1
      000023 25 82            [12]  134 	add	a,dpl
      000025 F5 82            [12]  135 	mov	dpl,a
      000027 E5 83            [12]  136 	mov	a,dph
      000029 33               [12]  137 	rlc	a
      00002A F5 83            [12]  138 	mov	dph,a
      00002C E5 F0            [12]  139 	mov	a,b
      00002E 33               [12]  140 	rlc	a
      00002F F5 F0            [12]  141 	mov	b,a
      000031 EB               [12]  142 	mov	a,r3
      000032 33               [12]  143 	rlc	a
      000033 FB               [12]  144 	mov	r3,a
      000034                        145 in_lp:
      000034 EC               [12]  146 	mov a,r4 ; reste <<= 1
      000035 33               [12]  147 	rlc	a ; feed in carry
      000036 FC               [12]  148 	mov	r4,a
      000037 ED               [12]  149 	mov	a,r5
      000038 33               [12]  150 	rlc	a
      000039 FD               [12]  151 	mov	r5,a
      00003A EE               [12]  152 	mov	a,r6
      00003B 33               [12]  153 	rlc	a
      00003C FE               [12]  154 	mov	r6,a
      00003D EF               [12]  155 	mov	a,r7
      00003E 33               [12]  156 	rlc	a
      00003F FF               [12]  157 	mov	r7,a
      000040 EC               [12]  158 	mov	a,r4 ; reste - y
      000041 95*00            [12]  159 	subb	a,(__divulong_PARM_2) ; carry is always clear here, because
                                    160 ;	reste <<= 1 never overflows
      000043 ED               [12]  161 	mov	a,r5
      000044 95*01            [12]  162 	subb	a,(__divulong_PARM_2 + 1)
      000046 EE               [12]  163 	mov	a,r6
      000047 95*02            [12]  164 	subb	a,(__divulong_PARM_2 + 2)
      000049 EF               [12]  165 	mov	a,r7
      00004A 95*03            [12]  166 	subb	a,(__divulong_PARM_2 + 3)
      00004C 40 13            [24]  167 	jc	minus ; reste >= y?
                                    168 ;	-> yes; reste -= y;
      00004E EC               [12]  169 	mov	a,r4
      00004F 95*00            [12]  170 	subb	a,(__divulong_PARM_2) ; carry is always clear here (jc)
      000051 FC               [12]  171 	mov	r4,a
      000052 ED               [12]  172 	mov	a,r5
      000053 95*01            [12]  173 	subb	a,(__divulong_PARM_2 + 1)
      000055 FD               [12]  174 	mov	r5,a
      000056 EE               [12]  175 	mov	a,r6
      000057 95*02            [12]  176 	subb	a,(__divulong_PARM_2 + 2)
      000059 FE               [12]  177 	mov	r6,a
      00005A EF               [12]  178 	mov	a,r7
      00005B 95*03            [12]  179 	subb	a,(__divulong_PARM_2 + 3)
      00005D FF               [12]  180 	mov	r7,a
      00005E 43 82 01         [24]  181 	orl	dpl,#1
      000061                        182 minus:
      000061 DA BE            [24]  183 	djnz r2,loop ; -> no
      000063                        184 exit:
      000063 EB               [12]  185 	mov a,r3 ; prepare the return value
      000064 22               [24]  186 	ret
                                    187 ;	_divulong.c:193: }
                                    188 ;	naked function: no epilogue.
                                    189 	.area CSEG    (CODE)
                                    190 	.area CONST   (CODE)
                                    191 	.area XINIT   (CODE)
                                    192 	.area CABS    (ABS,CODE)
