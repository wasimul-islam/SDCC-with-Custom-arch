                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncpy
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncpy_PARM_3
                                     12 	.globl _strncpy_PARM_2
                                     13 	.globl _strncpy
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _strncpy_PARM_2:
      000000                         38 	.ds 3
      000003                         39 _strncpy_PARM_3:
      000003                         40 	.ds 2
      000005                         41 _strncpy_d1_65536_27:
      000005                         42 	.ds 3
      000008                         43 _strncpy_sloc0_1_0:
      000008                         44 	.ds 3
      00000B                         45 _strncpy_sloc1_1_0:
      00000B                         46 	.ds 1
                                     47 ;--------------------------------------------------------
                                     48 ; indirectly addressable internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area ISEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; absolute internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area IABS    (ABS,DATA)
                                     55 	.area IABS    (ABS,DATA)
                                     56 ;--------------------------------------------------------
                                     57 ; bit data
                                     58 ;--------------------------------------------------------
                                     59 	.area BSEG    (BIT)
                                     60 ;--------------------------------------------------------
                                     61 ; paged external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area PSEG    (PAG,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; uninitialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XSEG    (XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; absolute external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XABS    (ABS,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; initialized external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XISEG   (XDATA)
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT0 (CODE)
                                     78 	.area GSINIT1 (CODE)
                                     79 	.area GSINIT2 (CODE)
                                     80 	.area GSINIT3 (CODE)
                                     81 	.area GSINIT4 (CODE)
                                     82 	.area GSINIT5 (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area CSEG    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; global & static initialisations
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; Home
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area HOME    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; code
                                    100 ;--------------------------------------------------------
                                    101 	.area CSEG    (CODE)
                                    102 ;------------------------------------------------------------
                                    103 ;Allocation info for local variables in function 'strncpy'
                                    104 ;------------------------------------------------------------
                                    105 ;s                         Allocated with name '_strncpy_PARM_2'
                                    106 ;n                         Allocated with name '_strncpy_PARM_3'
                                    107 ;d                         Allocated to registers r5 r6 r7 
                                    108 ;d1                        Allocated with name '_strncpy_d1_65536_27'
                                    109 ;sloc0                     Allocated with name '_strncpy_sloc0_1_0'
                                    110 ;sloc1                     Allocated with name '_strncpy_sloc1_1_0'
                                    111 ;------------------------------------------------------------
                                    112 ;	_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                                    113 ;	-----------------------------------------
                                    114 ;	 function strncpy
                                    115 ;	-----------------------------------------
      000000                        116 _strncpy:
                           000007   117 	ar7 = 0x07
                           000006   118 	ar6 = 0x06
                           000005   119 	ar5 = 0x05
                           000004   120 	ar4 = 0x04
                           000003   121 	ar3 = 0x03
                           000002   122 	ar2 = 0x02
                           000001   123 	ar1 = 0x01
                           000000   124 	ar0 = 0x00
      000000 AD 82            [24]  125 	mov	r5,dpl
      000002 AE 83            [24]  126 	mov	r6,dph
      000004 AF F0            [24]  127 	mov	r7,b
                                    128 ;	_strncpy.c:35: register char * d1 =  d;
      000006 8D*05            [24]  129 	mov	_strncpy_d1_65536_27,r5
      000008 8E*06            [24]  130 	mov	(_strncpy_d1_65536_27 + 1),r6
      00000A 8F*07            [24]  131 	mov	(_strncpy_d1_65536_27 + 2),r7
                                    132 ;	_strncpy.c:37: while ( n && *s )
      00000C A8*03            [24]  133 	mov	r0,_strncpy_PARM_3
      00000E A9*04            [24]  134 	mov	r1,(_strncpy_PARM_3 + 1)
      000010 85*00*08         [24]  135 	mov	_strncpy_sloc0_1_0,_strncpy_PARM_2
      000013 85*01*09         [24]  136 	mov	(_strncpy_sloc0_1_0 + 1),(_strncpy_PARM_2 + 1)
      000016 85*02*0A         [24]  137 	mov	(_strncpy_sloc0_1_0 + 2),(_strncpy_PARM_2 + 2)
      000019                        138 00102$:
      000019 E8               [12]  139 	mov	a,r0
      00001A 49               [12]  140 	orl	a,r1
      00001B 60 2F            [24]  141 	jz	00114$
      00001D 85*08 82         [24]  142 	mov	dpl,_strncpy_sloc0_1_0
      000020 85*09 83         [24]  143 	mov	dph,(_strncpy_sloc0_1_0 + 1)
      000023 85*0A F0         [24]  144 	mov	b,(_strncpy_sloc0_1_0 + 2)
      000026 12r00r00         [24]  145 	lcall	__gptrget
      000029 F5*0B            [12]  146 	mov	_strncpy_sloc1_1_0,a
      00002B 60 1F            [24]  147 	jz	00114$
                                    148 ;	_strncpy.c:39: n-- ;
      00002D 18               [12]  149 	dec	r0
      00002E B8 FF 01         [24]  150 	cjne	r0,#0xff,00134$
      000031 19               [12]  151 	dec	r1
      000032                        152 00134$:
                                    153 ;	_strncpy.c:40: *d++ = *s++ ;
      000032 05*08            [12]  154 	inc	_strncpy_sloc0_1_0
      000034 E4               [12]  155 	clr	a
      000035 B5*08 02         [24]  156 	cjne	a,_strncpy_sloc0_1_0,00135$
      000038 05*09            [12]  157 	inc	(_strncpy_sloc0_1_0 + 1)
      00003A                        158 00135$:
      00003A 8D 82            [24]  159 	mov	dpl,r5
      00003C 8E 83            [24]  160 	mov	dph,r6
      00003E 8F F0            [24]  161 	mov	b,r7
      000040 E5*0B            [12]  162 	mov	a,_strncpy_sloc1_1_0
      000042 12r00r00         [24]  163 	lcall	__gptrput
      000045 A3               [24]  164 	inc	dptr
      000046 AD 82            [24]  165 	mov	r5,dpl
      000048 AE 83            [24]  166 	mov	r6,dph
                                    167 ;	_strncpy.c:42: while ( n-- )
      00004A 80 CD            [24]  168 	sjmp	00102$
      00004C                        169 00114$:
      00004C                        170 00105$:
      00004C 88 03            [24]  171 	mov	ar3,r0
      00004E 89 04            [24]  172 	mov	ar4,r1
      000050 18               [12]  173 	dec	r0
      000051 B8 FF 01         [24]  174 	cjne	r0,#0xff,00136$
      000054 19               [12]  175 	dec	r1
      000055                        176 00136$:
      000055 EB               [12]  177 	mov	a,r3
      000056 4C               [12]  178 	orl	a,r4
      000057 60 11            [24]  179 	jz	00107$
                                    180 ;	_strncpy.c:44: *d++ = '\0' ;
      000059 8D 82            [24]  181 	mov	dpl,r5
      00005B 8E 83            [24]  182 	mov	dph,r6
      00005D 8F F0            [24]  183 	mov	b,r7
      00005F E4               [12]  184 	clr	a
      000060 12r00r00         [24]  185 	lcall	__gptrput
      000063 A3               [24]  186 	inc	dptr
      000064 AD 82            [24]  187 	mov	r5,dpl
      000066 AE 83            [24]  188 	mov	r6,dph
      000068 80 E2            [24]  189 	sjmp	00105$
      00006A                        190 00107$:
                                    191 ;	_strncpy.c:46: return d1;
      00006A 85*05 82         [24]  192 	mov	dpl,_strncpy_d1_65536_27
      00006D 85*06 83         [24]  193 	mov	dph,(_strncpy_d1_65536_27 + 1)
      000070 85*07 F0         [24]  194 	mov	b,(_strncpy_d1_65536_27 + 2)
                                    195 ;	_strncpy.c:47: }
      000073 22               [24]  196 	ret
                                    197 	.area CSEG    (CODE)
                                    198 	.area CONST   (CODE)
                                    199 	.area XINIT   (CODE)
                                    200 	.area CABS    (ABS,CODE)
