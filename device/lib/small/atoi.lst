                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atoi
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _atoi
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
      000000                         31 _atoi_neg_65536_60:
      000000                         32 	.ds 1
      000001                         33 _atoi_sloc1_1_0:
      000001                         34 	.ds 2
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
      000000                         51 _atoi_sloc0_1_0:
      000000                         52 	.ds 1
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; initialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'atoi'
                                     97 ;------------------------------------------------------------
                                     98 ;nptr                      Allocated to registers r0 r1 r2 
                                     99 ;__1310720007              Allocated to registers 
                                    100 ;__1310720004              Allocated to registers 
                                    101 ;ret                       Allocated to registers r3 r4 
                                    102 ;neg                       Allocated with name '_atoi_neg_65536_60'
                                    103 ;__1310720005              Allocated to registers 
                                    104 ;c                         Allocated to registers 
                                    105 ;__1310720008              Allocated to registers 
                                    106 ;c                         Allocated to registers 
                                    107 ;sloc1                     Allocated with name '_atoi_sloc1_1_0'
                                    108 ;------------------------------------------------------------
                                    109 ;	atoi.c:34: int atoi(const char *nptr)
                                    110 ;	-----------------------------------------
                                    111 ;	 function atoi
                                    112 ;	-----------------------------------------
      000000                        113 _atoi:
                           000007   114 	ar7 = 0x07
                           000006   115 	ar6 = 0x06
                           000005   116 	ar5 = 0x05
                           000004   117 	ar4 = 0x04
                           000003   118 	ar3 = 0x03
                           000002   119 	ar2 = 0x02
                           000001   120 	ar1 = 0x01
                           000000   121 	ar0 = 0x00
      000000 AD 82            [24]  122 	mov	r5,dpl
      000002 AE 83            [24]  123 	mov	r6,dph
      000004 AF F0            [24]  124 	mov	r7,b
                                    125 ;	atoi.c:36: int ret = 0;
      000006 7B 00            [12]  126 	mov	r3,#0x00
      000008 7C 00            [12]  127 	mov	r4,#0x00
                                    128 ;	atoi.c:39: while (isblank (*nptr))
      00000A                        129 00101$:
      00000A 8D 82            [24]  130 	mov	dpl,r5
      00000C 8E 83            [24]  131 	mov	dph,r6
      00000E 8F F0            [24]  132 	mov	b,r7
      000010 12r00r00         [24]  133 	lcall	__gptrget
      000013 FA               [12]  134 	mov	r2,a
                                    135 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000014 BA 20 02         [24]  136 	cjne	r2,#0x20,00161$
      000017 80 03            [24]  137 	sjmp	00115$
      000019                        138 00161$:
      000019 BA 09 07         [24]  139 	cjne	r2,#0x09,00131$
      00001C                        140 00115$:
                                    141 ;	atoi.c:40: nptr++;
      00001C 0D               [12]  142 	inc	r5
      00001D BD 00 EA         [24]  143 	cjne	r5,#0x00,00101$
      000020 0E               [12]  144 	inc	r6
      000021 80 E7            [24]  145 	sjmp	00101$
      000023                        146 00131$:
      000023 8D 00            [24]  147 	mov	ar0,r5
      000025 8E 01            [24]  148 	mov	ar1,r6
      000027 8F 02            [24]  149 	mov	ar2,r7
                                    150 ;	atoi.c:42: neg = (*nptr == '-');
      000029 8D 82            [24]  151 	mov	dpl,r5
      00002B 8E 83            [24]  152 	mov	dph,r6
      00002D 8F F0            [24]  153 	mov	b,r7
      00002F 12r00r00         [24]  154 	lcall	__gptrget
      000032 FF               [12]  155 	mov	r7,a
      000033 E4               [12]  156 	clr	a
      000034 BF 2D 01         [24]  157 	cjne	r7,#0x2d,00165$
      000037 04               [12]  158 	inc	a
      000038                        159 00165$:
      000038 F5*00            [12]  160 	mov	_atoi_neg_65536_60,a
                                    161 ;	atoi.c:44: if (*nptr == '-' || *nptr == '+')
      00003A BF 2D 02         [24]  162 	cjne	r7,#0x2d,00167$
      00003D 80 03            [24]  163 	sjmp	00104$
      00003F                        164 00167$:
      00003F BF 2B 05         [24]  165 	cjne	r7,#0x2b,00129$
      000042                        166 00104$:
                                    167 ;	atoi.c:45: nptr++;
      000042 08               [12]  168 	inc	r0
      000043 B8 00 01         [24]  169 	cjne	r0,#0x00,00170$
      000046 09               [12]  170 	inc	r1
      000047                        171 00170$:
                                    172 ;	atoi.c:47: while (isdigit (*nptr))
      000047                        173 00129$:
      000047 88 05            [24]  174 	mov	ar5,r0
      000049 89 06            [24]  175 	mov	ar6,r1
      00004B 8A 07            [24]  176 	mov	ar7,r2
      00004D                        177 00107$:
      00004D 8D 82            [24]  178 	mov	dpl,r5
      00004F 8E 83            [24]  179 	mov	dph,r6
      000051 8F F0            [24]  180 	mov	b,r7
      000053 12r00r00         [24]  181 	lcall	__gptrget
      000056 FA               [12]  182 	mov	r2,a
                                    183 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      000057 BA 30 00         [24]  184 	cjne	r2,#0x30,00171$
      00005A                        185 00171$:
      00005A 92*00            [24]  186 	mov	_atoi_sloc0_1_0,c
      00005C 40 46            [24]  187 	jc	00109$
      00005E EA               [12]  188 	mov	a,r2
      00005F 24 C6            [12]  189 	add	a,#0xff - 0x39
      000061 92*00            [24]  190 	mov	_atoi_sloc0_1_0,c
      000063 40 3F            [24]  191 	jc	00109$
                                    192 ;	atoi.c:48: ret = ret * 10 + (*(nptr++) - '0');
      000065 8B*00            [24]  193 	mov	__mulint_PARM_2,r3
      000067 8C*01            [24]  194 	mov	(__mulint_PARM_2 + 1),r4
      000069 90 00 0A         [24]  195 	mov	dptr,#0x000a
      00006C C0 07            [24]  196 	push	ar7
      00006E C0 06            [24]  197 	push	ar6
      000070 C0 05            [24]  198 	push	ar5
      000072 12r00r00         [24]  199 	lcall	__mulint
      000075 85 82*01         [24]  200 	mov	_atoi_sloc1_1_0,dpl
      000078 85 83*02         [24]  201 	mov	(_atoi_sloc1_1_0 + 1),dph
      00007B D0 05            [24]  202 	pop	ar5
      00007D D0 06            [24]  203 	pop	ar6
      00007F D0 07            [24]  204 	pop	ar7
      000081 8D 82            [24]  205 	mov	dpl,r5
      000083 8E 83            [24]  206 	mov	dph,r6
      000085 8F F0            [24]  207 	mov	b,r7
      000087 12r00r00         [24]  208 	lcall	__gptrget
      00008A F8               [12]  209 	mov	r0,a
      00008B A3               [24]  210 	inc	dptr
      00008C AD 82            [24]  211 	mov	r5,dpl
      00008E AE 83            [24]  212 	mov	r6,dph
      000090 7A 00            [12]  213 	mov	r2,#0x00
      000092 E8               [12]  214 	mov	a,r0
      000093 24 D0            [12]  215 	add	a,#0xd0
      000095 F8               [12]  216 	mov	r0,a
      000096 EA               [12]  217 	mov	a,r2
      000097 34 FF            [12]  218 	addc	a,#0xff
      000099 FA               [12]  219 	mov	r2,a
      00009A E8               [12]  220 	mov	a,r0
      00009B 25*01            [12]  221 	add	a,_atoi_sloc1_1_0
      00009D FB               [12]  222 	mov	r3,a
      00009E EA               [12]  223 	mov	a,r2
      00009F 35*02            [12]  224 	addc	a,(_atoi_sloc1_1_0 + 1)
      0000A1 FC               [12]  225 	mov	r4,a
      0000A2 80 A9            [24]  226 	sjmp	00107$
      0000A4                        227 00109$:
                                    228 ;	atoi.c:50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
      0000A4 E5*00            [12]  229 	mov	a,_atoi_neg_65536_60
      0000A6 60 09            [24]  230 	jz	00120$
      0000A8 C3               [12]  231 	clr	c
      0000A9 E4               [12]  232 	clr	a
      0000AA 9B               [12]  233 	subb	a,r3
      0000AB FE               [12]  234 	mov	r6,a
      0000AC E4               [12]  235 	clr	a
      0000AD 9C               [12]  236 	subb	a,r4
      0000AE FF               [12]  237 	mov	r7,a
      0000AF 80 04            [24]  238 	sjmp	00121$
      0000B1                        239 00120$:
      0000B1 8B 06            [24]  240 	mov	ar6,r3
      0000B3 8C 07            [24]  241 	mov	ar7,r4
      0000B5                        242 00121$:
      0000B5 8E 82            [24]  243 	mov	dpl,r6
      0000B7 8F 83            [24]  244 	mov	dph,r7
                                    245 ;	atoi.c:51: }
      0000B9 22               [24]  246 	ret
                                    247 	.area CSEG    (CODE)
                                    248 	.area CONST   (CODE)
                                    249 	.area XINIT   (CODE)
                                    250 	.area CABS    (ABS,CODE)
