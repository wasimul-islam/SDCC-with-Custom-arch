                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncmp
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncmp_PARM_3
                                     12 	.globl _strncmp_PARM_2
                                     13 	.globl _strncmp
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _strncmp_PARM_2:
      000000                         38 	.ds 3
      000003                         39 _strncmp_PARM_3:
      000003                         40 	.ds 2
      000005                         41 _strncmp_sloc0_1_0:
      000005                         42 	.ds 1
                                     43 ;--------------------------------------------------------
                                     44 ; indirectly addressable internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area ISEG    (DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; absolute internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area IABS    (ABS,DATA)
                                     51 	.area IABS    (ABS,DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; bit data
                                     54 ;--------------------------------------------------------
                                     55 	.area BSEG    (BIT)
                                     56 ;--------------------------------------------------------
                                     57 ; paged external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area PSEG    (PAG,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; uninitialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XSEG    (XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; absolute external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XABS    (ABS,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; initialized external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XISEG   (XDATA)
                                     72 	.area HOME    (CODE)
                                     73 	.area GSINIT0 (CODE)
                                     74 	.area GSINIT1 (CODE)
                                     75 	.area GSINIT2 (CODE)
                                     76 	.area GSINIT3 (CODE)
                                     77 	.area GSINIT4 (CODE)
                                     78 	.area GSINIT5 (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area CSEG    (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'strncmp'
                                    100 ;------------------------------------------------------------
                                    101 ;last                      Allocated with name '_strncmp_PARM_2'
                                    102 ;count                     Allocated with name '_strncmp_PARM_3'
                                    103 ;first                     Allocated to registers r5 r6 r7 
                                    104 ;sloc0                     Allocated with name '_strncmp_sloc0_1_0'
                                    105 ;------------------------------------------------------------
                                    106 ;	_strncmp.c:31: int strncmp ( const char * first, const char * last, size_t count )
                                    107 ;	-----------------------------------------
                                    108 ;	 function strncmp
                                    109 ;	-----------------------------------------
      000000                        110 _strncmp:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 AD 82            [24]  119 	mov	r5,dpl
      000002 AE 83            [24]  120 	mov	r6,dph
      000004 AF F0            [24]  121 	mov	r7,b
                                    122 ;	_strncmp.c:33: if (!count)
      000006 E5*03            [12]  123 	mov	a,_strncmp_PARM_3
      000008 45*04            [12]  124 	orl	a,(_strncmp_PARM_3 + 1)
      00000A 70 04            [24]  125 	jnz	00114$
                                    126 ;	_strncmp.c:34: return(0);
      00000C 90 00 00         [24]  127 	mov	dptr,#0x0000
                                    128 ;	_strncmp.c:36: while (--count && *first && *first == *last) {
      00000F 22               [24]  129 	ret
      000010                        130 00114$:
      000010 AA*00            [24]  131 	mov	r2,_strncmp_PARM_2
      000012 AB*01            [24]  132 	mov	r3,(_strncmp_PARM_2 + 1)
      000014 AC*02            [24]  133 	mov	r4,(_strncmp_PARM_2 + 2)
      000016 A8*03            [24]  134 	mov	r0,_strncmp_PARM_3
      000018 A9*04            [24]  135 	mov	r1,(_strncmp_PARM_3 + 1)
      00001A                        136 00105$:
      00001A 18               [12]  137 	dec	r0
      00001B B8 FF 01         [24]  138 	cjne	r0,#0xff,00132$
      00001E 19               [12]  139 	dec	r1
      00001F                        140 00132$:
      00001F E8               [12]  141 	mov	a,r0
      000020 49               [12]  142 	orl	a,r1
      000021 60 36            [24]  143 	jz	00107$
      000023 8D 82            [24]  144 	mov	dpl,r5
      000025 8E 83            [24]  145 	mov	dph,r6
      000027 8F F0            [24]  146 	mov	b,r7
      000029 12r00r00         [24]  147 	lcall	__gptrget
      00002C F5*05            [12]  148 	mov	_strncmp_sloc0_1_0,a
      00002E 60 29            [24]  149 	jz	00107$
      000030 C0 00            [24]  150 	push	ar0
      000032 C0 01            [24]  151 	push	ar1
      000034 8A 82            [24]  152 	mov	dpl,r2
      000036 8B 83            [24]  153 	mov	dph,r3
      000038 8C F0            [24]  154 	mov	b,r4
      00003A 12r00r00         [24]  155 	lcall	__gptrget
      00003D F9               [12]  156 	mov	r1,a
      00003E B5*05 02         [24]  157 	cjne	a,_strncmp_sloc0_1_0,00135$
      000041 80 06            [24]  158 	sjmp	00136$
      000043                        159 00135$:
      000043 D0 01            [24]  160 	pop	ar1
      000045 D0 00            [24]  161 	pop	ar0
      000047 80 10            [24]  162 	sjmp	00107$
      000049                        163 00136$:
      000049 D0 01            [24]  164 	pop	ar1
      00004B D0 00            [24]  165 	pop	ar0
                                    166 ;	_strncmp.c:37: first++;
      00004D 0D               [12]  167 	inc	r5
      00004E BD 00 01         [24]  168 	cjne	r5,#0x00,00137$
      000051 0E               [12]  169 	inc	r6
      000052                        170 00137$:
                                    171 ;	_strncmp.c:38: last++;
      000052 0A               [12]  172 	inc	r2
      000053 BA 00 C4         [24]  173 	cjne	r2,#0x00,00105$
      000056 0B               [12]  174 	inc	r3
      000057 80 C1            [24]  175 	sjmp	00105$
      000059                        176 00107$:
                                    177 ;	_strncmp.c:41: return( *first - *last );
      000059 8D 82            [24]  178 	mov	dpl,r5
      00005B 8E 83            [24]  179 	mov	dph,r6
      00005D 8F F0            [24]  180 	mov	b,r7
      00005F 12r00r00         [24]  181 	lcall	__gptrget
      000062 FD               [12]  182 	mov	r5,a
      000063 7F 00            [12]  183 	mov	r7,#0x00
      000065 8A 82            [24]  184 	mov	dpl,r2
      000067 8B 83            [24]  185 	mov	dph,r3
      000069 8C F0            [24]  186 	mov	b,r4
      00006B 12r00r00         [24]  187 	lcall	__gptrget
      00006E FA               [12]  188 	mov	r2,a
      00006F 7E 00            [12]  189 	mov	r6,#0x00
      000071 ED               [12]  190 	mov	a,r5
      000072 C3               [12]  191 	clr	c
      000073 9A               [12]  192 	subb	a,r2
      000074 F5 82            [12]  193 	mov	dpl,a
      000076 EF               [12]  194 	mov	a,r7
      000077 9E               [12]  195 	subb	a,r6
      000078 F5 83            [12]  196 	mov	dph,a
                                    197 ;	_strncmp.c:42: }
      00007A 22               [24]  198 	ret
                                    199 	.area CSEG    (CODE)
                                    200 	.area CONST   (CODE)
                                    201 	.area XINIT   (CODE)
                                    202 	.area CABS    (ABS,CODE)
