                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncat
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncat_PARM_3
                                     12 	.globl _strncat_PARM_2
                                     13 	.globl _strncat
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _strncat_PARM_2:
      000000                         38 	.ds 3
      000003                         39 _strncat_PARM_3:
      000003                         40 	.ds 2
      000005                         41 _strncat_front_65536_26:
      000005                         42 	.ds 3
      000008                         43 _strncat_start_65536_27:
      000008                         44 	.ds 3
      00000B                         45 _strncat_sloc0_1_0:
      00000B                         46 	.ds 3
                                     47 ;--------------------------------------------------------
                                     48 ; indirectly addressable internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area ISEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; absolute internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area IABS    (ABS,DATA)
                                     55 	.area IABS    (ABS,DATA)
                                     56 ;--------------------------------------------------------
                                     57 ; bit data
                                     58 ;--------------------------------------------------------
                                     59 	.area BSEG    (BIT)
                                     60 ;--------------------------------------------------------
                                     61 ; paged external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area PSEG    (PAG,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; uninitialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XSEG    (XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; absolute external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XABS    (ABS,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; initialized external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XISEG   (XDATA)
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT0 (CODE)
                                     78 	.area GSINIT1 (CODE)
                                     79 	.area GSINIT2 (CODE)
                                     80 	.area GSINIT3 (CODE)
                                     81 	.area GSINIT4 (CODE)
                                     82 	.area GSINIT5 (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area CSEG    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; global & static initialisations
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; Home
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area HOME    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; code
                                    100 ;--------------------------------------------------------
                                    101 	.area CSEG    (CODE)
                                    102 ;------------------------------------------------------------
                                    103 ;Allocation info for local variables in function 'strncat'
                                    104 ;------------------------------------------------------------
                                    105 ;back                      Allocated with name '_strncat_PARM_2'
                                    106 ;count                     Allocated with name '_strncat_PARM_3'
                                    107 ;front                     Allocated with name '_strncat_front_65536_26'
                                    108 ;start                     Allocated with name '_strncat_start_65536_27'
                                    109 ;sloc0                     Allocated with name '_strncat_sloc0_1_0'
                                    110 ;------------------------------------------------------------
                                    111 ;	_strncat.c:31: char * strncat ( char * front, const char * back, size_t count )
                                    112 ;	-----------------------------------------
                                    113 ;	 function strncat
                                    114 ;	-----------------------------------------
      000000                        115 _strncat:
                           000007   116 	ar7 = 0x07
                           000006   117 	ar6 = 0x06
                           000005   118 	ar5 = 0x05
                           000004   119 	ar4 = 0x04
                           000003   120 	ar3 = 0x03
                           000002   121 	ar2 = 0x02
                           000001   122 	ar1 = 0x01
                           000000   123 	ar0 = 0x00
      000000 AD 82            [24]  124 	mov	r5,dpl
      000002 AE 83            [24]  125 	mov	r6,dph
      000004 AF F0            [24]  126 	mov	r7,b
                                    127 ;	_strncat.c:33: char *start = front;
      000006 8D*08            [24]  128 	mov	_strncat_start_65536_27,r5
      000008 8E*09            [24]  129 	mov	(_strncat_start_65536_27 + 1),r6
      00000A 8F*0A            [24]  130 	mov	(_strncat_start_65536_27 + 2),r7
                                    131 ;	_strncat.c:35: while (*front++);
      00000C                        132 00101$:
      00000C 8D 82            [24]  133 	mov	dpl,r5
      00000E 8E 83            [24]  134 	mov	dph,r6
      000010 8F F0            [24]  135 	mov	b,r7
      000012 12r00r00         [24]  136 	lcall	__gptrget
      000015 F9               [12]  137 	mov	r1,a
      000016 A3               [24]  138 	inc	dptr
      000017 AD 82            [24]  139 	mov	r5,dpl
      000019 AE 83            [24]  140 	mov	r6,dph
      00001B E9               [12]  141 	mov	a,r1
      00001C 70 EE            [24]  142 	jnz	00101$
                                    143 ;	_strncat.c:37: front--;
      00001E ED               [12]  144 	mov	a,r5
      00001F 24 FF            [12]  145 	add	a,#0xff
      000021 F5*05            [12]  146 	mov	_strncat_front_65536_26,a
      000023 EE               [12]  147 	mov	a,r6
      000024 34 FF            [12]  148 	addc	a,#0xff
      000026 F5*06            [12]  149 	mov	(_strncat_front_65536_26 + 1),a
      000028 8F*07            [24]  150 	mov	(_strncat_front_65536_26 + 2),r7
                                    151 ;	_strncat.c:39: while (count--)
      00002A A8*00            [24]  152 	mov	r0,_strncat_PARM_2
      00002C A9*01            [24]  153 	mov	r1,(_strncat_PARM_2 + 1)
      00002E AC*02            [24]  154 	mov	r4,(_strncat_PARM_2 + 2)
      000030 85*05*0B         [24]  155 	mov	_strncat_sloc0_1_0,_strncat_front_65536_26
      000033 85*06*0C         [24]  156 	mov	(_strncat_sloc0_1_0 + 1),(_strncat_front_65536_26 + 1)
      000036 85*07*0D         [24]  157 	mov	(_strncat_sloc0_1_0 + 2),(_strncat_front_65536_26 + 2)
      000039 AA*03            [24]  158 	mov	r2,_strncat_PARM_3
      00003B AB*04            [24]  159 	mov	r3,(_strncat_PARM_3 + 1)
      00003D                        160 00106$:
      00003D 8A 06            [24]  161 	mov	ar6,r2
      00003F 8B 07            [24]  162 	mov	ar7,r3
      000041 1A               [12]  163 	dec	r2
      000042 BA FF 01         [24]  164 	cjne	r2,#0xff,00138$
      000045 1B               [12]  165 	dec	r3
      000046                        166 00138$:
      000046 EE               [12]  167 	mov	a,r6
      000047 4F               [12]  168 	orl	a,r7
      000048 60 39            [24]  169 	jz	00108$
                                    170 ;	_strncat.c:40: if (!(*front++ = *back++))
      00004A 88 82            [24]  171 	mov	dpl,r0
      00004C 89 83            [24]  172 	mov	dph,r1
      00004E 8C F0            [24]  173 	mov	b,r4
      000050 12r00r00         [24]  174 	lcall	__gptrget
      000053 FF               [12]  175 	mov	r7,a
      000054 A3               [24]  176 	inc	dptr
      000055 A8 82            [24]  177 	mov	r0,dpl
      000057 A9 83            [24]  178 	mov	r1,dph
      000059 85*0B 82         [24]  179 	mov	dpl,_strncat_sloc0_1_0
      00005C 85*0C 83         [24]  180 	mov	dph,(_strncat_sloc0_1_0 + 1)
      00005F 85*0D F0         [24]  181 	mov	b,(_strncat_sloc0_1_0 + 2)
      000062 EF               [12]  182 	mov	a,r7
      000063 12r00r00         [24]  183 	lcall	__gptrput
      000066 A3               [24]  184 	inc	dptr
      000067 85 82*0B         [24]  185 	mov	_strncat_sloc0_1_0,dpl
      00006A 85 83*0C         [24]  186 	mov	(_strncat_sloc0_1_0 + 1),dph
      00006D 85*0B*05         [24]  187 	mov	_strncat_front_65536_26,_strncat_sloc0_1_0
      000070 85*0C*06         [24]  188 	mov	(_strncat_front_65536_26 + 1),(_strncat_sloc0_1_0 + 1)
      000073 85*0D*07         [24]  189 	mov	(_strncat_front_65536_26 + 2),(_strncat_sloc0_1_0 + 2)
      000076 EF               [12]  190 	mov	a,r7
      000077 70 C4            [24]  191 	jnz	00106$
                                    192 ;	_strncat.c:41: return(start);
      000079 85*08 82         [24]  193 	mov	dpl,_strncat_start_65536_27
      00007C 85*09 83         [24]  194 	mov	dph,(_strncat_start_65536_27 + 1)
      00007F 85*0A F0         [24]  195 	mov	b,(_strncat_start_65536_27 + 2)
      000082 22               [24]  196 	ret
      000083                        197 00108$:
                                    198 ;	_strncat.c:43: *front = '\0';
      000083 85*05 82         [24]  199 	mov	dpl,_strncat_front_65536_26
      000086 85*06 83         [24]  200 	mov	dph,(_strncat_front_65536_26 + 1)
      000089 85*07 F0         [24]  201 	mov	b,(_strncat_front_65536_26 + 2)
      00008C E4               [12]  202 	clr	a
      00008D 12r00r00         [24]  203 	lcall	__gptrput
                                    204 ;	_strncat.c:44: return(start);
      000090 85*08 82         [24]  205 	mov	dpl,_strncat_start_65536_27
      000093 85*09 83         [24]  206 	mov	dph,(_strncat_start_65536_27 + 1)
      000096 85*0A F0         [24]  207 	mov	b,(_strncat_start_65536_27 + 2)
                                    208 ;	_strncat.c:45: }
      000099 22               [24]  209 	ret
                                    210 	.area CSEG    (CODE)
                                    211 	.area CONST   (CODE)
                                    212 	.area XINIT   (CODE)
                                    213 	.area CABS    (ABS,CODE)
