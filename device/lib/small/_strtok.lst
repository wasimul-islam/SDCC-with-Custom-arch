                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strtok
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strtok_PARM_2
                                     13 	.globl _strtok
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
      000000                         33 _strtok_s_65536_27:
      000000                         34 	.ds 3
      000003                         35 _strtok_PARM_2:
      000003                         36 	.ds 3
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; initialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'strtok'
                                     97 ;------------------------------------------------------------
                                     98 ;s                         Allocated with name '_strtok_s_65536_27'
                                     99 ;control                   Allocated with name '_strtok_PARM_2'
                                    100 ;str                       Allocated to registers r5 r6 r7 
                                    101 ;s1                        Allocated to registers r5 r6 r7 
                                    102 ;------------------------------------------------------------
                                    103 ;	_strtok.c:36: char * strtok ( char * str, const char * control )
                                    104 ;	-----------------------------------------
                                    105 ;	 function strtok
                                    106 ;	-----------------------------------------
      000000                        107 _strtok:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
      000000 AD 82            [24]  116 	mov	r5,dpl
      000002 AE 83            [24]  117 	mov	r6,dph
      000004 AF F0            [24]  118 	mov	r7,b
                                    119 ;	_strtok.c:41: if ( str )
      000006 ED               [12]  120 	mov	a,r5
      000007 4E               [12]  121 	orl	a,r6
      000008 60 06            [24]  122 	jz	00102$
                                    123 ;	_strtok.c:42: s = str;
      00000A 8D*00            [24]  124 	mov	_strtok_s_65536_27,r5
      00000C 8E*01            [24]  125 	mov	(_strtok_s_65536_27 + 1),r6
      00000E 8F*02            [24]  126 	mov	(_strtok_s_65536_27 + 2),r7
      000010                        127 00102$:
                                    128 ;	_strtok.c:43: if ( !s )
      000010 E5*00            [12]  129 	mov	a,_strtok_s_65536_27
      000012 45*01            [12]  130 	orl	a,(_strtok_s_65536_27 + 1)
                                    131 ;	_strtok.c:44: return NULL;
      000014 70 06            [24]  132 	jnz	00108$
      000016 90 00 00         [24]  133 	mov	dptr,#0x0000
      000019 F5 F0            [12]  134 	mov	b,a
      00001B 22               [24]  135 	ret
                                    136 ;	_strtok.c:46: while (*s) {
      00001C                        137 00108$:
      00001C AD*00            [24]  138 	mov	r5,_strtok_s_65536_27
      00001E AE*01            [24]  139 	mov	r6,(_strtok_s_65536_27 + 1)
      000020 AF*02            [24]  140 	mov	r7,(_strtok_s_65536_27 + 2)
      000022 8D 82            [24]  141 	mov	dpl,r5
      000024 8E 83            [24]  142 	mov	dph,r6
      000026 8F F0            [24]  143 	mov	b,r7
      000028 12r00r00         [24]  144 	lcall	__gptrget
      00002B 60 31            [24]  145 	jz	00110$
                                    146 ;	_strtok.c:47: if (strchr(control,*s))
      00002D AD*00            [24]  147 	mov	r5,_strtok_s_65536_27
      00002F AE*01            [24]  148 	mov	r6,(_strtok_s_65536_27 + 1)
      000031 AF*02            [24]  149 	mov	r7,(_strtok_s_65536_27 + 2)
      000033 8D 82            [24]  150 	mov	dpl,r5
      000035 8E 83            [24]  151 	mov	dph,r6
      000037 8F F0            [24]  152 	mov	b,r7
      000039 12r00r00         [24]  153 	lcall	__gptrget
      00003C F5*00            [12]  154 	mov	_strchr_PARM_2,a
      00003E 85*03 82         [24]  155 	mov	dpl,_strtok_PARM_2
      000041 85*04 83         [24]  156 	mov	dph,(_strtok_PARM_2 + 1)
      000044 85*05 F0         [24]  157 	mov	b,(_strtok_PARM_2 + 2)
      000047 12r00r00         [24]  158 	lcall	_strchr
      00004A AD 82            [24]  159 	mov	r5,dpl
      00004C AE 83            [24]  160 	mov	r6,dph
      00004E AF F0            [24]  161 	mov	r7,b
      000050 ED               [12]  162 	mov	a,r5
      000051 4E               [12]  163 	orl	a,r6
      000052 60 0A            [24]  164 	jz	00110$
                                    165 ;	_strtok.c:48: s++;
      000054 05*00            [12]  166 	inc	_strtok_s_65536_27
      000056 E4               [12]  167 	clr	a
                                    168 ;	_strtok.c:50: break;
      000057 B5*00 C2         [24]  169 	cjne	a,_strtok_s_65536_27,00108$
      00005A 05*01            [12]  170 	inc	(_strtok_s_65536_27 + 1)
      00005C 80 BE            [24]  171 	sjmp	00108$
      00005E                        172 00110$:
                                    173 ;	_strtok.c:53: s1 = s;
      00005E AD*00            [24]  174 	mov	r5,_strtok_s_65536_27
      000060 AE*01            [24]  175 	mov	r6,(_strtok_s_65536_27 + 1)
      000062 AF*02            [24]  176 	mov	r7,(_strtok_s_65536_27 + 2)
                                    177 ;	_strtok.c:55: while (*s) {
      000064                        178 00113$:
      000064 AA*00            [24]  179 	mov	r2,_strtok_s_65536_27
      000066 AB*01            [24]  180 	mov	r3,(_strtok_s_65536_27 + 1)
      000068 AC*02            [24]  181 	mov	r4,(_strtok_s_65536_27 + 2)
      00006A 8A 82            [24]  182 	mov	dpl,r2
      00006C 8B 83            [24]  183 	mov	dph,r3
      00006E 8C F0            [24]  184 	mov	b,r4
      000070 12r00r00         [24]  185 	lcall	__gptrget
      000073 60 59            [24]  186 	jz	00115$
                                    187 ;	_strtok.c:56: if (strchr(control,*s)) {
      000075 AA*00            [24]  188 	mov	r2,_strtok_s_65536_27
      000077 AB*01            [24]  189 	mov	r3,(_strtok_s_65536_27 + 1)
      000079 AC*02            [24]  190 	mov	r4,(_strtok_s_65536_27 + 2)
      00007B 8A 82            [24]  191 	mov	dpl,r2
      00007D 8B 83            [24]  192 	mov	dph,r3
      00007F 8C F0            [24]  193 	mov	b,r4
      000081 12r00r00         [24]  194 	lcall	__gptrget
      000084 F5*00            [12]  195 	mov	_strchr_PARM_2,a
      000086 85*03 82         [24]  196 	mov	dpl,_strtok_PARM_2
      000089 85*04 83         [24]  197 	mov	dph,(_strtok_PARM_2 + 1)
      00008C 85*05 F0         [24]  198 	mov	b,(_strtok_PARM_2 + 2)
      00008F C0 07            [24]  199 	push	ar7
      000091 C0 06            [24]  200 	push	ar6
      000093 C0 05            [24]  201 	push	ar5
      000095 12r00r00         [24]  202 	lcall	_strchr
      000098 AA 82            [24]  203 	mov	r2,dpl
      00009A AB 83            [24]  204 	mov	r3,dph
      00009C D0 05            [24]  205 	pop	ar5
      00009E D0 06            [24]  206 	pop	ar6
      0000A0 D0 07            [24]  207 	pop	ar7
      0000A2 EA               [12]  208 	mov	a,r2
      0000A3 4B               [12]  209 	orl	a,r3
      0000A4 60 1E            [24]  210 	jz	00112$
                                    211 ;	_strtok.c:57: *s++ = '\0';
      0000A6 AA*00            [24]  212 	mov	r2,_strtok_s_65536_27
      0000A8 AB*01            [24]  213 	mov	r3,(_strtok_s_65536_27 + 1)
      0000AA AC*02            [24]  214 	mov	r4,(_strtok_s_65536_27 + 2)
      0000AC 8A 82            [24]  215 	mov	dpl,r2
      0000AE 8B 83            [24]  216 	mov	dph,r3
      0000B0 8C F0            [24]  217 	mov	b,r4
      0000B2 E4               [12]  218 	clr	a
      0000B3 12r00r00         [24]  219 	lcall	__gptrput
      0000B6 05*00            [12]  220 	inc	_strtok_s_65536_27
      0000B8 B5*00 02         [24]  221 	cjne	a,_strtok_s_65536_27,00164$
      0000BB 05*01            [12]  222 	inc	(_strtok_s_65536_27 + 1)
      0000BD                        223 00164$:
                                    224 ;	_strtok.c:58: return s1;
      0000BD 8D 82            [24]  225 	mov	dpl,r5
      0000BF 8E 83            [24]  226 	mov	dph,r6
      0000C1 8F F0            [24]  227 	mov	b,r7
      0000C3 22               [24]  228 	ret
      0000C4                        229 00112$:
                                    230 ;	_strtok.c:60: s++ ;
      0000C4 05*00            [12]  231 	inc	_strtok_s_65536_27
      0000C6 E4               [12]  232 	clr	a
      0000C7 B5*00 9A         [24]  233 	cjne	a,_strtok_s_65536_27,00113$
      0000CA 05*01            [12]  234 	inc	(_strtok_s_65536_27 + 1)
      0000CC 80 96            [24]  235 	sjmp	00113$
      0000CE                        236 00115$:
                                    237 ;	_strtok.c:63: s = NULL;
      0000CE E4               [12]  238 	clr	a
      0000CF F5*00            [12]  239 	mov	_strtok_s_65536_27,a
      0000D1 F5*01            [12]  240 	mov	(_strtok_s_65536_27 + 1),a
      0000D3 F5*02            [12]  241 	mov	(_strtok_s_65536_27 + 2),a
                                    242 ;	_strtok.c:65: if (*s1)
      0000D5 8D 82            [24]  243 	mov	dpl,r5
      0000D7 8E 83            [24]  244 	mov	dph,r6
      0000D9 8F F0            [24]  245 	mov	b,r7
      0000DB 12r00r00         [24]  246 	lcall	__gptrget
      0000DE 60 07            [24]  247 	jz	00117$
                                    248 ;	_strtok.c:66: return s1;
      0000E0 8D 82            [24]  249 	mov	dpl,r5
      0000E2 8E 83            [24]  250 	mov	dph,r6
      0000E4 8F F0            [24]  251 	mov	b,r7
      0000E6 22               [24]  252 	ret
      0000E7                        253 00117$:
                                    254 ;	_strtok.c:68: return NULL;
      0000E7 90 00 00         [24]  255 	mov	dptr,#0x0000
      0000EA 75 F0 00         [24]  256 	mov	b,#0x00
                                    257 ;	_strtok.c:69: }
      0000ED 22               [24]  258 	ret
                                    259 	.area CSEG    (CODE)
                                    260 	.area CONST   (CODE)
                                    261 	.area XINIT   (CODE)
                                    262 	.area CABS    (ABS,CODE)
