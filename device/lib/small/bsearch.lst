                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module bsearch
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _bsearch_PARM_5
                                     12 	.globl _bsearch_PARM_4
                                     13 	.globl _bsearch_PARM_3
                                     14 	.globl _bsearch_PARM_2
                                     15 	.globl _bsearch
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _bsearch_PARM_2:
      000000                         36 	.ds 3
      000003                         37 _bsearch_PARM_3:
      000003                         38 	.ds 2
      000005                         39 _bsearch_PARM_4:
      000005                         40 	.ds 2
      000007                         41 _bsearch_PARM_5:
      000007                         42 	.ds 2
      000009                         43 _bsearch_key_65536_39:
      000009                         44 	.ds 3
      00000C                         45 _bsearch_middle_196608_43:
      00000C                         46 	.ds 3
                                     47 ;--------------------------------------------------------
                                     48 ; overlayable items in internal ram
                                     49 ;--------------------------------------------------------
                                     50 ;--------------------------------------------------------
                                     51 ; indirectly addressable internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area ISEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area IABS    (ABS,DATA)
                                     58 	.area IABS    (ABS,DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; bit data
                                     61 ;--------------------------------------------------------
                                     62 	.area BSEG    (BIT)
                                     63 ;--------------------------------------------------------
                                     64 ; paged external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area PSEG    (PAG,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; uninitialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XSEG    (XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XABS    (ABS,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; initialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XISEG   (XDATA)
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'bsearch'
                                    107 ;------------------------------------------------------------
                                    108 ;base                      Allocated with name '_bsearch_PARM_2'
                                    109 ;nmemb                     Allocated with name '_bsearch_PARM_3'
                                    110 ;size                      Allocated with name '_bsearch_PARM_4'
                                    111 ;compar                    Allocated with name '_bsearch_PARM_5'
                                    112 ;key                       Allocated with name '_bsearch_key_65536_39'
                                    113 ;left                      Allocated to registers r2 r3 r4 
                                    114 ;middle                    Allocated with name '_bsearch_middle_196608_43'
                                    115 ;c                         Allocated to registers r6 r7 
                                    116 ;------------------------------------------------------------
                                    117 ;	bsearch.c:31: void *bsearch(const void *key, const void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *) __reentrant)
                                    118 ;	-----------------------------------------
                                    119 ;	 function bsearch
                                    120 ;	-----------------------------------------
      000000                        121 _bsearch:
                           000007   122 	ar7 = 0x07
                           000006   123 	ar6 = 0x06
                           000005   124 	ar5 = 0x05
                           000004   125 	ar4 = 0x04
                           000003   126 	ar3 = 0x03
                           000002   127 	ar2 = 0x02
                           000001   128 	ar1 = 0x01
                           000000   129 	ar0 = 0x00
      000000 85 82*09         [24]  130 	mov	_bsearch_key_65536_39,dpl
      000003 85 83*0A         [24]  131 	mov	(_bsearch_key_65536_39 + 1),dph
      000006 85 F0*0B         [24]  132 	mov	(_bsearch_key_65536_39 + 2),b
                                    133 ;	bsearch.c:33: for(const char *left = base; nmemb;)
      000009 AA*00            [24]  134 	mov	r2,_bsearch_PARM_2
      00000B AB*01            [24]  135 	mov	r3,(_bsearch_PARM_2 + 1)
      00000D AC*02            [24]  136 	mov	r4,(_bsearch_PARM_2 + 2)
      00000F                        137 00109$:
      00000F E5*03            [12]  138 	mov	a,_bsearch_PARM_3
      000011 45*04            [12]  139 	orl	a,(_bsearch_PARM_3 + 1)
      000013 70 03            [24]  140 	jnz	00129$
      000015 02r00rD8         [24]  141 	ljmp	00107$
      000018                        142 00129$:
                                    143 ;	bsearch.c:35: const char *middle = left + nmemb / 2 * size;
      000018 A8*03            [24]  144 	mov	r0,_bsearch_PARM_3
      00001A E5*04            [12]  145 	mov	a,(_bsearch_PARM_3 + 1)
      00001C C3               [12]  146 	clr	c
      00001D 13               [12]  147 	rrc	a
      00001E C8               [12]  148 	xch	a,r0
      00001F 13               [12]  149 	rrc	a
      000020 C8               [12]  150 	xch	a,r0
      000021 F9               [12]  151 	mov	r1,a
      000022 85*05*00         [24]  152 	mov	__mulint_PARM_2,_bsearch_PARM_4
      000025 85*06*01         [24]  153 	mov	(__mulint_PARM_2 + 1),(_bsearch_PARM_4 + 1)
      000028 88 82            [24]  154 	mov	dpl,r0
      00002A 89 83            [24]  155 	mov	dph,r1
      00002C C0 04            [24]  156 	push	ar4
      00002E C0 03            [24]  157 	push	ar3
      000030 C0 02            [24]  158 	push	ar2
      000032 C0 01            [24]  159 	push	ar1
      000034 C0 00            [24]  160 	push	ar0
      000036 12r00r00         [24]  161 	lcall	__mulint
      000039 AE 82            [24]  162 	mov	r6,dpl
      00003B AF 83            [24]  163 	mov	r7,dph
      00003D D0 00            [24]  164 	pop	ar0
      00003F D0 01            [24]  165 	pop	ar1
      000041 D0 02            [24]  166 	pop	ar2
      000043 D0 03            [24]  167 	pop	ar3
      000045 D0 04            [24]  168 	pop	ar4
      000047 EE               [12]  169 	mov	a,r6
      000048 2A               [12]  170 	add	a,r2
      000049 F5*0C            [12]  171 	mov	_bsearch_middle_196608_43,a
      00004B EF               [12]  172 	mov	a,r7
      00004C 3B               [12]  173 	addc	a,r3
      00004D F5*0D            [12]  174 	mov	(_bsearch_middle_196608_43 + 1),a
      00004F 8C*0E            [24]  175 	mov	(_bsearch_middle_196608_43 + 2),r4
                                    176 ;	bsearch.c:36: int c = (*compar)(key, middle);
      000051 AD*0C            [24]  177 	mov	r5,_bsearch_middle_196608_43
      000053 AE*0D            [24]  178 	mov	r6,(_bsearch_middle_196608_43 + 1)
      000055 AF*0E            [24]  179 	mov	r7,(_bsearch_middle_196608_43 + 2)
      000057 C0 04            [24]  180 	push	ar4
      000059 C0 03            [24]  181 	push	ar3
      00005B C0 02            [24]  182 	push	ar2
      00005D C0 01            [24]  183 	push	ar1
      00005F C0 00            [24]  184 	push	ar0
      000061 C0 05            [24]  185 	push	ar5
      000063 C0 06            [24]  186 	push	ar6
      000065 C0 07            [24]  187 	push	ar7
      000067 12r00r6C         [24]  188 	lcall	00130$
      00006A 80 0E            [24]  189 	sjmp	00131$
      00006C                        190 00130$:
      00006C C0*07            [24]  191 	push	_bsearch_PARM_5
      00006E C0*08            [24]  192 	push	(_bsearch_PARM_5 + 1)
      000070 85*09 82         [24]  193 	mov	dpl,_bsearch_key_65536_39
      000073 85*0A 83         [24]  194 	mov	dph,(_bsearch_key_65536_39 + 1)
      000076 85*0B F0         [24]  195 	mov	b,(_bsearch_key_65536_39 + 2)
      000079 22               [24]  196 	ret
      00007A                        197 00131$:
      00007A AE 82            [24]  198 	mov	r6,dpl
      00007C AF 83            [24]  199 	mov	r7,dph
      00007E 15 81            [12]  200 	dec	sp
      000080 15 81            [12]  201 	dec	sp
      000082 15 81            [12]  202 	dec	sp
      000084 D0 00            [24]  203 	pop	ar0
      000086 D0 01            [24]  204 	pop	ar1
      000088 D0 02            [24]  205 	pop	ar2
      00008A D0 03            [24]  206 	pop	ar3
      00008C D0 04            [24]  207 	pop	ar4
                                    208 ;	bsearch.c:38: if(c < 0)
      00008E EF               [12]  209 	mov	a,r7
      00008F 30 E7 07         [24]  210 	jnb	acc.7,00105$
                                    211 ;	bsearch.c:39: nmemb = nmemb / 2;	
      000092 88*03            [24]  212 	mov	_bsearch_PARM_3,r0
      000094 89*04            [24]  213 	mov	(_bsearch_PARM_3 + 1),r1
      000096 02r00r0F         [24]  214 	ljmp	00109$
      000099                        215 00105$:
                                    216 ;	bsearch.c:40: else if(c > 0)
      000099 C3               [12]  217 	clr	c
      00009A E4               [12]  218 	clr	a
      00009B 9E               [12]  219 	subb	a,r6
      00009C 74 80            [12]  220 	mov	a,#(0x00 ^ 0x80)
      00009E 8F F0            [24]  221 	mov	b,r7
      0000A0 63 F0 80         [24]  222 	xrl	b,#0x80
      0000A3 95 F0            [12]  223 	subb	a,b
      0000A5 50 24            [24]  224 	jnc	00102$
                                    225 ;	bsearch.c:42: left = middle + size;
      0000A7 E5*05            [12]  226 	mov	a,_bsearch_PARM_4
      0000A9 25*0C            [12]  227 	add	a,_bsearch_middle_196608_43
      0000AB FA               [12]  228 	mov	r2,a
      0000AC E5*06            [12]  229 	mov	a,(_bsearch_PARM_4 + 1)
      0000AE 35*0D            [12]  230 	addc	a,(_bsearch_middle_196608_43 + 1)
      0000B0 FB               [12]  231 	mov	r3,a
      0000B1 AC*0E            [24]  232 	mov	r4,(_bsearch_middle_196608_43 + 2)
                                    233 ;	bsearch.c:43: nmemb = (nmemb - 1) / 2;
      0000B3 E5*03            [12]  234 	mov	a,_bsearch_PARM_3
      0000B5 24 FF            [12]  235 	add	a,#0xff
      0000B7 FE               [12]  236 	mov	r6,a
      0000B8 E5*04            [12]  237 	mov	a,(_bsearch_PARM_3 + 1)
      0000BA 34 FF            [12]  238 	addc	a,#0xff
      0000BC FF               [12]  239 	mov	r7,a
      0000BD 8E*03            [24]  240 	mov	_bsearch_PARM_3,r6
      0000BF C3               [12]  241 	clr	c
      0000C0 13               [12]  242 	rrc	a
      0000C1 C5*03            [12]  243 	xch	a,_bsearch_PARM_3
      0000C3 13               [12]  244 	rrc	a
      0000C4 C5*03            [12]  245 	xch	a,_bsearch_PARM_3
      0000C6 F5*04            [12]  246 	mov	(_bsearch_PARM_3 + 1),a
      0000C8 02r00r0F         [24]  247 	ljmp	00109$
      0000CB                        248 00102$:
                                    249 ;	bsearch.c:46: return(middle);
      0000CB AD*0C            [24]  250 	mov	r5,_bsearch_middle_196608_43
      0000CD AE*0D            [24]  251 	mov	r6,(_bsearch_middle_196608_43 + 1)
      0000CF AF*0E            [24]  252 	mov	r7,(_bsearch_middle_196608_43 + 2)
      0000D1 8D 82            [24]  253 	mov	dpl,r5
      0000D3 8E 83            [24]  254 	mov	dph,r6
      0000D5 8F F0            [24]  255 	mov	b,r7
      0000D7 22               [24]  256 	ret
      0000D8                        257 00107$:
                                    258 ;	bsearch.c:49: return(0);
      0000D8 90 00 00         [24]  259 	mov	dptr,#0x0000
      0000DB 75 F0 00         [24]  260 	mov	b,#0x00
                                    261 ;	bsearch.c:50: }
      0000DE 22               [24]  262 	ret
                                    263 	.area CSEG    (CODE)
                                    264 	.area CONST   (CODE)
                                    265 	.area XINIT   (CODE)
                                    266 	.area CABS    (ABS,CODE)
