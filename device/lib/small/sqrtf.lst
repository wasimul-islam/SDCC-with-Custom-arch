                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module sqrtf
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ldexpf
                                     12 	.globl _frexpf
                                     13 	.globl _sqrtf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; uninitialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; initialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'sqrtf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to registers r4 r5 r6 r7 
                                     95 ;f                         Allocated to stack - _bp +5
                                     96 ;y                         Allocated to registers r4 r5 r6 r7 
                                     97 ;n                         Allocated to stack - _bp +9
                                     98 ;sloc0                     Allocated to stack - _bp +1
                                     99 ;------------------------------------------------------------
                                    100 ;	sqrtf.c:37: float sqrtf(float x) _FLOAT_FUNC_REENTRANT
                                    101 ;	-----------------------------------------
                                    102 ;	 function sqrtf
                                    103 ;	-----------------------------------------
      000000                        104 _sqrtf:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 AC 82            [24]  115 	mov	r4,dpl
      000007 AD 83            [24]  116 	mov	r5,dph
      000009 AE F0            [24]  117 	mov	r6,b
      00000B FF               [12]  118 	mov	r7,a
      00000C E5 81            [12]  119 	mov	a,sp
      00000E 24 0A            [12]  120 	add	a,#0x0a
      000010 F5 81            [12]  121 	mov	sp,a
                                    122 ;	sqrtf.c:42: if (x==0.0) return x;
      000012 8C F0            [24]  123 	mov	b,r4
      000014 ED               [12]  124 	mov	a,r5
      000015 42 F0            [12]  125 	orl	b,a
      000017 EE               [12]  126 	mov	a,r6
      000018 42 F0            [12]  127 	orl	b,a
      00001A EF               [12]  128 	mov	a,r7
      00001B 54 7F            [12]  129 	anl	a,#0x7F
      00001D 45 F0            [12]  130 	orl	a,b
      00001F 70 0A            [24]  131 	jnz	00107$
      000021 8C 82            [24]  132 	mov	dpl,r4
      000023 8D 83            [24]  133 	mov	dph,r5
      000025 8E F0            [24]  134 	mov	b,r6
      000027 EF               [12]  135 	mov	a,r7
      000028 02r02r68         [24]  136 	ljmp	00111$
      00002B                        137 00107$:
                                    138 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
      00002B C0 07            [24]  139 	push	ar7
      00002D C0 06            [24]  140 	push	ar6
      00002F C0 05            [24]  141 	push	ar5
      000031 C0 04            [24]  142 	push	ar4
      000033 E4               [12]  143 	clr	a
      000034 C0 E0            [24]  144 	push	acc
      000036 C0 E0            [24]  145 	push	acc
      000038 74 80            [12]  146 	mov	a,#0x80
      00003A C0 E0            [24]  147 	push	acc
      00003C 74 3F            [12]  148 	mov	a,#0x3f
      00003E C0 E0            [24]  149 	push	acc
      000040 8C 82            [24]  150 	mov	dpl,r4
      000042 8D 83            [24]  151 	mov	dph,r5
      000044 8E F0            [24]  152 	mov	b,r6
      000046 EF               [12]  153 	mov	a,r7
      000047 12r00r00         [24]  154 	lcall	___fseq
      00004A AB 82            [24]  155 	mov	r3,dpl
      00004C E5 81            [12]  156 	mov	a,sp
      00004E 24 FC            [12]  157 	add	a,#0xfc
      000050 F5 81            [12]  158 	mov	sp,a
      000052 D0 04            [24]  159 	pop	ar4
      000054 D0 05            [24]  160 	pop	ar5
      000056 D0 06            [24]  161 	pop	ar6
      000058 D0 07            [24]  162 	pop	ar7
      00005A EB               [12]  163 	mov	a,r3
      00005B 60 0B            [24]  164 	jz	00104$
      00005D 90 00 00         [24]  165 	mov	dptr,#0x0000
      000060 75 F0 80         [24]  166 	mov	b,#0x80
      000063 74 3F            [12]  167 	mov	a,#0x3f
      000065 02r02r68         [24]  168 	ljmp	00111$
      000068                        169 00104$:
                                    170 ;	sqrtf.c:44: else if (x<0.0)
      000068 C0 07            [24]  171 	push	ar7
      00006A C0 06            [24]  172 	push	ar6
      00006C C0 05            [24]  173 	push	ar5
      00006E C0 04            [24]  174 	push	ar4
      000070 E4               [12]  175 	clr	a
      000071 C0 E0            [24]  176 	push	acc
      000073 C0 E0            [24]  177 	push	acc
      000075 C0 E0            [24]  178 	push	acc
      000077 C0 E0            [24]  179 	push	acc
      000079 8C 82            [24]  180 	mov	dpl,r4
      00007B 8D 83            [24]  181 	mov	dph,r5
      00007D 8E F0            [24]  182 	mov	b,r6
      00007F EF               [12]  183 	mov	a,r7
      000080 12r00r00         [24]  184 	lcall	___fslt
      000083 AB 82            [24]  185 	mov	r3,dpl
      000085 E5 81            [12]  186 	mov	a,sp
      000087 24 FC            [12]  187 	add	a,#0xfc
      000089 F5 81            [12]  188 	mov	sp,a
      00008B D0 04            [24]  189 	pop	ar4
      00008D D0 05            [24]  190 	pop	ar5
      00008F D0 06            [24]  191 	pop	ar6
      000091 D0 07            [24]  192 	pop	ar7
      000093 EB               [12]  193 	mov	a,r3
      000094 60 0F            [24]  194 	jz	00108$
                                    195 ;	sqrtf.c:46: errno=EDOM;
      000096 75*00 21         [24]  196 	mov	_errno,#0x21
      000099 75*01 00         [24]  197 	mov	(_errno + 1),#0x00
                                    198 ;	sqrtf.c:47: return 0.0;
      00009C 90 00 00         [24]  199 	mov	dptr,#(0x00&0x00ff)
      00009F E4               [12]  200 	clr	a
      0000A0 F5 F0            [12]  201 	mov	b,a
      0000A2 02r02r68         [24]  202 	ljmp	00111$
      0000A5                        203 00108$:
                                    204 ;	sqrtf.c:49: f=frexpf(x, &n);
      0000A5 E5*00            [12]  205 	mov	a,_bp
      0000A7 24 09            [12]  206 	add	a,#0x09
      0000A9 FB               [12]  207 	mov	r3,a
      0000AA 8B*00            [24]  208 	mov	_frexpf_PARM_2,r3
      0000AC 75*01 00         [24]  209 	mov	(_frexpf_PARM_2 + 1),#0x00
      0000AF 75*02 40         [24]  210 	mov	(_frexpf_PARM_2 + 2),#0x40
      0000B2 8C 82            [24]  211 	mov	dpl,r4
      0000B4 8D 83            [24]  212 	mov	dph,r5
      0000B6 8E F0            [24]  213 	mov	b,r6
      0000B8 EF               [12]  214 	mov	a,r7
      0000B9 12r00r00         [24]  215 	lcall	_frexpf
      0000BC AC 82            [24]  216 	mov	r4,dpl
      0000BE AD 83            [24]  217 	mov	r5,dph
      0000C0 AE F0            [24]  218 	mov	r6,b
      0000C2 FF               [12]  219 	mov	r7,a
      0000C3 E5*00            [12]  220 	mov	a,_bp
      0000C5 24 05            [12]  221 	add	a,#0x05
      0000C7 F8               [12]  222 	mov	r0,a
      0000C8 A6 04            [24]  223 	mov	@r0,ar4
      0000CA 08               [12]  224 	inc	r0
      0000CB A6 05            [24]  225 	mov	@r0,ar5
      0000CD 08               [12]  226 	inc	r0
      0000CE A6 06            [24]  227 	mov	@r0,ar6
      0000D0 08               [12]  228 	inc	r0
      0000D1 A6 07            [24]  229 	mov	@r0,ar7
                                    230 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
      0000D3 E5*00            [12]  231 	mov	a,_bp
      0000D5 24 05            [12]  232 	add	a,#0x05
      0000D7 F8               [12]  233 	mov	r0,a
      0000D8 E6               [12]  234 	mov	a,@r0
      0000D9 C0 E0            [24]  235 	push	acc
      0000DB 08               [12]  236 	inc	r0
      0000DC E6               [12]  237 	mov	a,@r0
      0000DD C0 E0            [24]  238 	push	acc
      0000DF 08               [12]  239 	inc	r0
      0000E0 E6               [12]  240 	mov	a,@r0
      0000E1 C0 E0            [24]  241 	push	acc
      0000E3 08               [12]  242 	inc	r0
      0000E4 E6               [12]  243 	mov	a,@r0
      0000E5 C0 E0            [24]  244 	push	acc
      0000E7 90 14 BA         [24]  245 	mov	dptr,#0x14ba
      0000EA 75 F0 17         [24]  246 	mov	b,#0x17
      0000ED 74 3F            [12]  247 	mov	a,#0x3f
      0000EF 12r00r00         [24]  248 	lcall	___fsmul
      0000F2 AA 82            [24]  249 	mov	r2,dpl
      0000F4 AB 83            [24]  250 	mov	r3,dph
      0000F6 AE F0            [24]  251 	mov	r6,b
      0000F8 FF               [12]  252 	mov	r7,a
      0000F9 E5 81            [12]  253 	mov	a,sp
      0000FB 24 FC            [12]  254 	add	a,#0xfc
      0000FD F5 81            [12]  255 	mov	sp,a
      0000FF 74 A8            [12]  256 	mov	a,#0xa8
      000101 C0 E0            [24]  257 	push	acc
      000103 04               [12]  258 	inc	a
      000104 C0 E0            [24]  259 	push	acc
      000106 74 D5            [12]  260 	mov	a,#0xd5
      000108 C0 E0            [24]  261 	push	acc
      00010A 74 3E            [12]  262 	mov	a,#0x3e
      00010C C0 E0            [24]  263 	push	acc
      00010E 8A 82            [24]  264 	mov	dpl,r2
      000110 8B 83            [24]  265 	mov	dph,r3
      000112 8E F0            [24]  266 	mov	b,r6
      000114 EF               [12]  267 	mov	a,r7
      000115 12r00r00         [24]  268 	lcall	___fsadd
      000118 A8*00            [24]  269 	mov	r0,_bp
      00011A 08               [12]  270 	inc	r0
      00011B A6 82            [24]  271 	mov	@r0,dpl
      00011D 08               [12]  272 	inc	r0
      00011E A6 83            [24]  273 	mov	@r0,dph
      000120 08               [12]  274 	inc	r0
      000121 A6 F0            [24]  275 	mov	@r0,b
      000123 08               [12]  276 	inc	r0
      000124 F6               [12]  277 	mov	@r0,a
      000125 E5 81            [12]  278 	mov	a,sp
      000127 24 FC            [12]  279 	add	a,#0xfc
      000129 F5 81            [12]  280 	mov	sp,a
                                    281 ;	sqrtf.c:52: y+=f/y;
      00012B A8*00            [24]  282 	mov	r0,_bp
      00012D 08               [12]  283 	inc	r0
      00012E E6               [12]  284 	mov	a,@r0
      00012F C0 E0            [24]  285 	push	acc
      000131 08               [12]  286 	inc	r0
      000132 E6               [12]  287 	mov	a,@r0
      000133 C0 E0            [24]  288 	push	acc
      000135 08               [12]  289 	inc	r0
      000136 E6               [12]  290 	mov	a,@r0
      000137 C0 E0            [24]  291 	push	acc
      000139 08               [12]  292 	inc	r0
      00013A E6               [12]  293 	mov	a,@r0
      00013B C0 E0            [24]  294 	push	acc
      00013D E5*00            [12]  295 	mov	a,_bp
      00013F 24 05            [12]  296 	add	a,#0x05
      000141 F8               [12]  297 	mov	r0,a
      000142 86 82            [24]  298 	mov	dpl,@r0
      000144 08               [12]  299 	inc	r0
      000145 86 83            [24]  300 	mov	dph,@r0
      000147 08               [12]  301 	inc	r0
      000148 86 F0            [24]  302 	mov	b,@r0
      00014A 08               [12]  303 	inc	r0
      00014B E6               [12]  304 	mov	a,@r0
      00014C 12r00r00         [24]  305 	lcall	___fsdiv
      00014F AA 82            [24]  306 	mov	r2,dpl
      000151 AB 83            [24]  307 	mov	r3,dph
      000153 AE F0            [24]  308 	mov	r6,b
      000155 FF               [12]  309 	mov	r7,a
      000156 E5 81            [12]  310 	mov	a,sp
      000158 24 FC            [12]  311 	add	a,#0xfc
      00015A F5 81            [12]  312 	mov	sp,a
      00015C C0 02            [24]  313 	push	ar2
      00015E C0 03            [24]  314 	push	ar3
      000160 C0 06            [24]  315 	push	ar6
      000162 C0 07            [24]  316 	push	ar7
      000164 A8*00            [24]  317 	mov	r0,_bp
      000166 08               [12]  318 	inc	r0
      000167 86 82            [24]  319 	mov	dpl,@r0
      000169 08               [12]  320 	inc	r0
      00016A 86 83            [24]  321 	mov	dph,@r0
      00016C 08               [12]  322 	inc	r0
      00016D 86 F0            [24]  323 	mov	b,@r0
      00016F 08               [12]  324 	inc	r0
      000170 E6               [12]  325 	mov	a,@r0
      000171 12r00r00         [24]  326 	lcall	___fsadd
      000174 AC 82            [24]  327 	mov	r4,dpl
      000176 AD 83            [24]  328 	mov	r5,dph
      000178 AE F0            [24]  329 	mov	r6,b
      00017A FF               [12]  330 	mov	r7,a
      00017B E5 81            [12]  331 	mov	a,sp
      00017D 24 FC            [12]  332 	add	a,#0xfc
      00017F F5 81            [12]  333 	mov	sp,a
                                    334 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
      000181 75*00 FE         [24]  335 	mov	_ldexpf_PARM_2,#0xfe
      000184 75*01 FF         [24]  336 	mov	(_ldexpf_PARM_2 + 1),#0xff
      000187 8C 82            [24]  337 	mov	dpl,r4
      000189 8D 83            [24]  338 	mov	dph,r5
      00018B 8E F0            [24]  339 	mov	b,r6
      00018D EF               [12]  340 	mov	a,r7
      00018E C0 07            [24]  341 	push	ar7
      000190 C0 06            [24]  342 	push	ar6
      000192 C0 05            [24]  343 	push	ar5
      000194 C0 04            [24]  344 	push	ar4
      000196 12r00r00         [24]  345 	lcall	_ldexpf
      000199 A8*00            [24]  346 	mov	r0,_bp
      00019B 08               [12]  347 	inc	r0
      00019C A6 82            [24]  348 	mov	@r0,dpl
      00019E 08               [12]  349 	inc	r0
      00019F A6 83            [24]  350 	mov	@r0,dph
      0001A1 08               [12]  351 	inc	r0
      0001A2 A6 F0            [24]  352 	mov	@r0,b
      0001A4 08               [12]  353 	inc	r0
      0001A5 F6               [12]  354 	mov	@r0,a
      0001A6 D0 04            [24]  355 	pop	ar4
      0001A8 D0 05            [24]  356 	pop	ar5
      0001AA D0 06            [24]  357 	pop	ar6
      0001AC D0 07            [24]  358 	pop	ar7
      0001AE C0 04            [24]  359 	push	ar4
      0001B0 C0 05            [24]  360 	push	ar5
      0001B2 C0 06            [24]  361 	push	ar6
      0001B4 C0 07            [24]  362 	push	ar7
      0001B6 E5*00            [12]  363 	mov	a,_bp
      0001B8 24 05            [12]  364 	add	a,#0x05
      0001BA F8               [12]  365 	mov	r0,a
      0001BB 86 82            [24]  366 	mov	dpl,@r0
      0001BD 08               [12]  367 	inc	r0
      0001BE 86 83            [24]  368 	mov	dph,@r0
      0001C0 08               [12]  369 	inc	r0
      0001C1 86 F0            [24]  370 	mov	b,@r0
      0001C3 08               [12]  371 	inc	r0
      0001C4 E6               [12]  372 	mov	a,@r0
      0001C5 12r00r00         [24]  373 	lcall	___fsdiv
      0001C8 AC 82            [24]  374 	mov	r4,dpl
      0001CA AD 83            [24]  375 	mov	r5,dph
      0001CC AE F0            [24]  376 	mov	r6,b
      0001CE FF               [12]  377 	mov	r7,a
      0001CF E5 81            [12]  378 	mov	a,sp
      0001D1 24 FC            [12]  379 	add	a,#0xfc
      0001D3 F5 81            [12]  380 	mov	sp,a
      0001D5 C0 04            [24]  381 	push	ar4
      0001D7 C0 05            [24]  382 	push	ar5
      0001D9 C0 06            [24]  383 	push	ar6
      0001DB C0 07            [24]  384 	push	ar7
      0001DD A8*00            [24]  385 	mov	r0,_bp
      0001DF 08               [12]  386 	inc	r0
      0001E0 86 82            [24]  387 	mov	dpl,@r0
      0001E2 08               [12]  388 	inc	r0
      0001E3 86 83            [24]  389 	mov	dph,@r0
      0001E5 08               [12]  390 	inc	r0
      0001E6 86 F0            [24]  391 	mov	b,@r0
      0001E8 08               [12]  392 	inc	r0
      0001E9 E6               [12]  393 	mov	a,@r0
      0001EA 12r00r00         [24]  394 	lcall	___fsadd
      0001ED AC 82            [24]  395 	mov	r4,dpl
      0001EF AD 83            [24]  396 	mov	r5,dph
      0001F1 AE F0            [24]  397 	mov	r6,b
      0001F3 FF               [12]  398 	mov	r7,a
      0001F4 E5 81            [12]  399 	mov	a,sp
      0001F6 24 FC            [12]  400 	add	a,#0xfc
      0001F8 F5 81            [12]  401 	mov	sp,a
                                    402 ;	sqrtf.c:55: if (n&1)
      0001FA E5*00            [12]  403 	mov	a,_bp
      0001FC 24 09            [12]  404 	add	a,#0x09
      0001FE F8               [12]  405 	mov	r0,a
      0001FF E6               [12]  406 	mov	a,@r0
      000200 30 E0 2B         [24]  407 	jnb	acc.0,00110$
                                    408 ;	sqrtf.c:57: y*=0.7071067812;
      000203 C0 04            [24]  409 	push	ar4
      000205 C0 05            [24]  410 	push	ar5
      000207 C0 06            [24]  411 	push	ar6
      000209 C0 07            [24]  412 	push	ar7
      00020B 90 04 F3         [24]  413 	mov	dptr,#0x04f3
      00020E 75 F0 35         [24]  414 	mov	b,#0x35
      000211 74 3F            [12]  415 	mov	a,#0x3f
      000213 12r00r00         [24]  416 	lcall	___fsmul
      000216 AC 82            [24]  417 	mov	r4,dpl
      000218 AD 83            [24]  418 	mov	r5,dph
      00021A AE F0            [24]  419 	mov	r6,b
      00021C FF               [12]  420 	mov	r7,a
      00021D E5 81            [12]  421 	mov	a,sp
      00021F 24 FC            [12]  422 	add	a,#0xfc
      000221 F5 81            [12]  423 	mov	sp,a
                                    424 ;	sqrtf.c:58: ++n;
      000223 E5*00            [12]  425 	mov	a,_bp
      000225 24 09            [12]  426 	add	a,#0x09
      000227 F8               [12]  427 	mov	r0,a
      000228 06               [12]  428 	inc	@r0
      000229 B6 00 02         [24]  429 	cjne	@r0,#0x00,00137$
      00022C 08               [12]  430 	inc	r0
      00022D 06               [12]  431 	inc	@r0
      00022E                        432 00137$:
      00022E                        433 00110$:
                                    434 ;	sqrtf.c:60: return ldexpf(y, n/2);
      00022E 75*00 02         [24]  435 	mov	__divsint_PARM_2,#0x02
      000231 75*01 00         [24]  436 	mov	(__divsint_PARM_2 + 1),#0x00
      000234 E5*00            [12]  437 	mov	a,_bp
      000236 24 09            [12]  438 	add	a,#0x09
      000238 F8               [12]  439 	mov	r0,a
      000239 86 82            [24]  440 	mov	dpl,@r0
      00023B 08               [12]  441 	inc	r0
      00023C 86 83            [24]  442 	mov	dph,@r0
      00023E C0 07            [24]  443 	push	ar7
      000240 C0 06            [24]  444 	push	ar6
      000242 C0 05            [24]  445 	push	ar5
      000244 C0 04            [24]  446 	push	ar4
      000246 12r00r00         [24]  447 	lcall	__divsint
      000249 85 82*00         [24]  448 	mov	_ldexpf_PARM_2,dpl
      00024C 85 83*01         [24]  449 	mov	(_ldexpf_PARM_2 + 1),dph
      00024F D0 04            [24]  450 	pop	ar4
      000251 D0 05            [24]  451 	pop	ar5
      000253 D0 06            [24]  452 	pop	ar6
      000255 D0 07            [24]  453 	pop	ar7
      000257 8C 82            [24]  454 	mov	dpl,r4
      000259 8D 83            [24]  455 	mov	dph,r5
      00025B 8E F0            [24]  456 	mov	b,r6
      00025D EF               [12]  457 	mov	a,r7
      00025E 12r00r00         [24]  458 	lcall	_ldexpf
      000261 AC 82            [24]  459 	mov	r4,dpl
      000263 AD 83            [24]  460 	mov	r5,dph
      000265 AE F0            [24]  461 	mov	r6,b
      000267 FF               [12]  462 	mov	r7,a
      000268                        463 00111$:
                                    464 ;	sqrtf.c:61: }
      000268 85*00 81         [24]  465 	mov	sp,_bp
      00026B D0*00            [24]  466 	pop	_bp
      00026D 22               [24]  467 	ret
                                    468 	.area CSEG    (CODE)
                                    469 	.area CONST   (CODE)
                                    470 	.area XINIT   (CODE)
                                    471 	.area CABS    (ABS,CODE)
