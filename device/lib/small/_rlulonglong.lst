                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _rlulonglong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __rlulonglong_PARM_2
                                     12 	.globl __rlulonglong
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 __rlulonglong_PARM_2:
      000000                         37 	.ds 1
      000001                         38 __rlulonglong_l_65536_8:
      000001                         39 	.ds 8
      000009                         40 __rlulonglong_sloc0_1_0:
      000009                         41 	.ds 4
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; uninitialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; initialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function '_rlulonglong'
                                     99 ;------------------------------------------------------------
                                    100 ;s                         Allocated with name '__rlulonglong_PARM_2'
                                    101 ;l                         Allocated with name '__rlulonglong_l_65536_8'
                                    102 ;top                       Allocated to registers 
                                    103 ;middle                    Allocated to registers 
                                    104 ;bottom                    Allocated to registers 
                                    105 ;b                         Allocated to registers 
                                    106 ;sloc0                     Allocated with name '__rlulonglong_sloc0_1_0'
                                    107 ;------------------------------------------------------------
                                    108 ;	_rlulonglong.c:67: unsigned long long _rlulonglong(unsigned long long l, char s) __SDCC_NONBANKED
                                    109 ;	-----------------------------------------
                                    110 ;	 function _rlulonglong
                                    111 ;	-----------------------------------------
      000000                        112 __rlulonglong:
                           000007   113 	ar7 = 0x07
                           000006   114 	ar6 = 0x06
                           000005   115 	ar5 = 0x05
                           000004   116 	ar4 = 0x04
                           000003   117 	ar3 = 0x03
                           000002   118 	ar2 = 0x02
                           000001   119 	ar1 = 0x01
                           000000   120 	ar0 = 0x00
      000000 85 82*01         [24]  121 	mov	__rlulonglong_l_65536_8,dpl
      000003 85 83*02         [24]  122 	mov	(__rlulonglong_l_65536_8 + 1),dph
      000006 85 F0*03         [24]  123 	mov	(__rlulonglong_l_65536_8 + 2),b
      000009 F5*04            [12]  124 	mov	(__rlulonglong_l_65536_8 + 3),a
      00000B 8C*05            [24]  125 	mov	(__rlulonglong_l_65536_8 + 4),r4
      00000D 8D*06            [24]  126 	mov	(__rlulonglong_l_65536_8 + 5),r5
      00000F 8E*07            [24]  127 	mov	(__rlulonglong_l_65536_8 + 6),r6
      000011 8F*08            [24]  128 	mov	(__rlulonglong_l_65536_8 + 7),r7
                                    129 ;	_rlulonglong.c:69: uint32_t *const top = (uint32_t *)((char *)(&l) + 4);
                                    130 ;	_rlulonglong.c:70: uint16_t *const middle = (uint16_t *)((char *)(&l) + 2);
                                    131 ;	_rlulonglong.c:71: uint32_t *const bottom = (uint32_t *)(&l);
                                    132 ;	_rlulonglong.c:72: uint16_t *const b = (uint16_t *)(&l);
                                    133 ;	_rlulonglong.c:82: (*top) <<= s;
      000013                        134 00103$:
                                    135 ;	_rlulonglong.c:74: for(;s >= 16; s-= 16)
      000013 74 F0            [12]  136 	mov	a,#0x100 - 0x10
      000015 25*00            [12]  137 	add	a,__rlulonglong_PARM_2
      000017 50 51            [24]  138 	jnc	00101$
                                    139 ;	_rlulonglong.c:76: b[3] = b[2];
      000019 90r00r05         [24]  140 	mov	dptr,#(__rlulonglong_l_65536_8 + 0x0004)
      00001C 75 F0 40         [24]  141 	mov	b,#0x40
      00001F 12r00r00         [24]  142 	lcall	__gptrget
      000022 FE               [12]  143 	mov	r6,a
      000023 A3               [24]  144 	inc	dptr
      000024 12r00r00         [24]  145 	lcall	__gptrget
      000027 FF               [12]  146 	mov	r7,a
      000028 90r00r07         [24]  147 	mov	dptr,#(__rlulonglong_l_65536_8 + 0x0006)
      00002B EE               [12]  148 	mov	a,r6
      00002C 12r00r00         [24]  149 	lcall	__gptrput
      00002F A3               [24]  150 	inc	dptr
      000030 EF               [12]  151 	mov	a,r7
      000031 12r00r00         [24]  152 	lcall	__gptrput
                                    153 ;	_rlulonglong.c:77: b[2] = b[1];
      000034 90r00r03         [24]  154 	mov	dptr,#(__rlulonglong_l_65536_8 + 0x0002)
      000037 12r00r00         [24]  155 	lcall	__gptrget
      00003A FE               [12]  156 	mov	r6,a
      00003B A3               [24]  157 	inc	dptr
      00003C 12r00r00         [24]  158 	lcall	__gptrget
      00003F FF               [12]  159 	mov	r7,a
      000040 90r00r05         [24]  160 	mov	dptr,#(__rlulonglong_l_65536_8 + 0x0004)
      000043 EE               [12]  161 	mov	a,r6
      000044 12r00r00         [24]  162 	lcall	__gptrput
      000047 A3               [24]  163 	inc	dptr
      000048 EF               [12]  164 	mov	a,r7
      000049 12r00r00         [24]  165 	lcall	__gptrput
                                    166 ;	_rlulonglong.c:78: b[1] = b[0];
      00004C AE*01            [24]  167 	mov	r6,(__rlulonglong_l_65536_8 + 0)
      00004E AF*02            [24]  168 	mov	r7,(__rlulonglong_l_65536_8 + 1)
      000050 90r00r03         [24]  169 	mov	dptr,#(__rlulonglong_l_65536_8 + 0x0002)
      000053 EE               [12]  170 	mov	a,r6
      000054 12r00r00         [24]  171 	lcall	__gptrput
      000057 A3               [24]  172 	inc	dptr
      000058 EF               [12]  173 	mov	a,r7
      000059 12r00r00         [24]  174 	lcall	__gptrput
                                    175 ;	_rlulonglong.c:79: b[0] = 0;
      00005C E4               [12]  176 	clr	a
      00005D F5*01            [12]  177 	mov	(__rlulonglong_l_65536_8 + 0),a
      00005F F5*02            [12]  178 	mov	(__rlulonglong_l_65536_8 + 1),a
                                    179 ;	_rlulonglong.c:74: for(;s >= 16; s-= 16)
      000061 E5*00            [12]  180 	mov	a,__rlulonglong_PARM_2
      000063 FF               [12]  181 	mov	r7,a
      000064 24 F0            [12]  182 	add	a,#0xf0
      000066 F5*00            [12]  183 	mov	__rlulonglong_PARM_2,a
      000068 80 A9            [24]  184 	sjmp	00103$
      00006A                        185 00101$:
                                    186 ;	_rlulonglong.c:82: (*top) <<= s;
      00006A 90r00r05         [24]  187 	mov	dptr,#(__rlulonglong_l_65536_8 + 0x0004)
      00006D 75 F0 40         [24]  188 	mov	b,#0x40
      000070 12r00r00         [24]  189 	lcall	__gptrget
      000073 FC               [12]  190 	mov	r4,a
      000074 A3               [24]  191 	inc	dptr
      000075 12r00r00         [24]  192 	lcall	__gptrget
      000078 FD               [12]  193 	mov	r5,a
      000079 A3               [24]  194 	inc	dptr
      00007A 12r00r00         [24]  195 	lcall	__gptrget
      00007D FE               [12]  196 	mov	r6,a
      00007E A3               [24]  197 	inc	dptr
      00007F 12r00r00         [24]  198 	lcall	__gptrget
      000082 FF               [12]  199 	mov	r7,a
      000083 AB*00            [24]  200 	mov	r3,__rlulonglong_PARM_2
      000085 8B F0            [24]  201 	mov	b,r3
      000087 05 F0            [12]  202 	inc	b
      000089 85 04*09         [24]  203 	mov	__rlulonglong_sloc0_1_0,ar4
      00008C 85 05*0A         [24]  204 	mov	(__rlulonglong_sloc0_1_0 + 1),ar5
      00008F 85 06*0B         [24]  205 	mov	(__rlulonglong_sloc0_1_0 + 2),ar6
      000092 85 07*0C         [24]  206 	mov	(__rlulonglong_sloc0_1_0 + 3),ar7
      000095 80 15            [24]  207 	sjmp	00117$
      000097                        208 00116$:
      000097 E5*09            [12]  209 	mov	a,__rlulonglong_sloc0_1_0
      000099 25*09            [12]  210 	add	a,__rlulonglong_sloc0_1_0
      00009B F5*09            [12]  211 	mov	__rlulonglong_sloc0_1_0,a
      00009D E5*0A            [12]  212 	mov	a,(__rlulonglong_sloc0_1_0 + 1)
      00009F 33               [12]  213 	rlc	a
      0000A0 F5*0A            [12]  214 	mov	(__rlulonglong_sloc0_1_0 + 1),a
      0000A2 E5*0B            [12]  215 	mov	a,(__rlulonglong_sloc0_1_0 + 2)
      0000A4 33               [12]  216 	rlc	a
      0000A5 F5*0B            [12]  217 	mov	(__rlulonglong_sloc0_1_0 + 2),a
      0000A7 E5*0C            [12]  218 	mov	a,(__rlulonglong_sloc0_1_0 + 3)
      0000A9 33               [12]  219 	rlc	a
      0000AA F5*0C            [12]  220 	mov	(__rlulonglong_sloc0_1_0 + 3),a
      0000AC                        221 00117$:
      0000AC D5 F0 E8         [24]  222 	djnz	b,00116$
      0000AF 90r00r05         [24]  223 	mov	dptr,#(__rlulonglong_l_65536_8 + 0x0004)
      0000B2 75 F0 40         [24]  224 	mov	b,#0x40
      0000B5 E5*09            [12]  225 	mov	a,__rlulonglong_sloc0_1_0
      0000B7 12r00r00         [24]  226 	lcall	__gptrput
      0000BA A3               [24]  227 	inc	dptr
      0000BB E5*0A            [12]  228 	mov	a,(__rlulonglong_sloc0_1_0 + 1)
      0000BD 12r00r00         [24]  229 	lcall	__gptrput
      0000C0 A3               [24]  230 	inc	dptr
      0000C1 E5*0B            [12]  231 	mov	a,(__rlulonglong_sloc0_1_0 + 2)
      0000C3 12r00r00         [24]  232 	lcall	__gptrput
      0000C6 A3               [24]  233 	inc	dptr
      0000C7 E5*0C            [12]  234 	mov	a,(__rlulonglong_sloc0_1_0 + 3)
      0000C9 12r00r00         [24]  235 	lcall	__gptrput
                                    236 ;	_rlulonglong.c:83: (*top) |= (((uint32_t)((*middle) & 0xffffu) << s) >> 16);
      0000CC 90r00r03         [24]  237 	mov	dptr,#(__rlulonglong_l_65536_8 + 0x0002)
      0000CF 12r00r00         [24]  238 	lcall	__gptrget
      0000D2 F9               [12]  239 	mov	r1,a
      0000D3 A3               [24]  240 	inc	dptr
      0000D4 12r00r00         [24]  241 	lcall	__gptrget
      0000D7 F8               [12]  242 	mov	r0,a
      0000D8 7A 00            [12]  243 	mov	r2,#0x00
      0000DA 7F 00            [12]  244 	mov	r7,#0x00
      0000DC 8B F0            [24]  245 	mov	b,r3
      0000DE 05 F0            [12]  246 	inc	b
      0000E0 80 0C            [24]  247 	sjmp	00119$
      0000E2                        248 00118$:
      0000E2 E9               [12]  249 	mov	a,r1
      0000E3 29               [12]  250 	add	a,r1
      0000E4 F9               [12]  251 	mov	r1,a
      0000E5 E8               [12]  252 	mov	a,r0
      0000E6 33               [12]  253 	rlc	a
      0000E7 F8               [12]  254 	mov	r0,a
      0000E8 EA               [12]  255 	mov	a,r2
      0000E9 33               [12]  256 	rlc	a
      0000EA FA               [12]  257 	mov	r2,a
      0000EB EF               [12]  258 	mov	a,r7
      0000EC 33               [12]  259 	rlc	a
      0000ED FF               [12]  260 	mov	r7,a
      0000EE                        261 00119$:
      0000EE D5 F0 F1         [24]  262 	djnz	b,00118$
      0000F1 8A 01            [24]  263 	mov	ar1,r2
      0000F3 8F 00            [24]  264 	mov	ar0,r7
      0000F5 E4               [12]  265 	clr	a
      0000F6 FA               [12]  266 	mov	r2,a
      0000F7 FF               [12]  267 	mov	r7,a
      0000F8 E5*09            [12]  268 	mov	a,__rlulonglong_sloc0_1_0
      0000FA 42 01            [12]  269 	orl	ar1,a
      0000FC E5*0A            [12]  270 	mov	a,(__rlulonglong_sloc0_1_0 + 1)
      0000FE 42 00            [12]  271 	orl	ar0,a
      000100 E5*0B            [12]  272 	mov	a,(__rlulonglong_sloc0_1_0 + 2)
      000102 42 02            [12]  273 	orl	ar2,a
      000104 E5*0C            [12]  274 	mov	a,(__rlulonglong_sloc0_1_0 + 3)
      000106 42 07            [12]  275 	orl	ar7,a
      000108 90r00r05         [24]  276 	mov	dptr,#(__rlulonglong_l_65536_8 + 0x0004)
      00010B 75 F0 40         [24]  277 	mov	b,#0x40
      00010E E9               [12]  278 	mov	a,r1
      00010F 12r00r00         [24]  279 	lcall	__gptrput
      000112 A3               [24]  280 	inc	dptr
      000113 E8               [12]  281 	mov	a,r0
      000114 12r00r00         [24]  282 	lcall	__gptrput
      000117 A3               [24]  283 	inc	dptr
      000118 EA               [12]  284 	mov	a,r2
      000119 12r00r00         [24]  285 	lcall	__gptrput
      00011C A3               [24]  286 	inc	dptr
      00011D EF               [12]  287 	mov	a,r7
      00011E 12r00r00         [24]  288 	lcall	__gptrput
                                    289 ;	_rlulonglong.c:84: (*bottom) <<= s;
      000121 AC*01            [24]  290 	mov	r4,(__rlulonglong_l_65536_8 + 0)
      000123 AD*02            [24]  291 	mov	r5,(__rlulonglong_l_65536_8 + 1)
      000125 AE*03            [24]  292 	mov	r6,(__rlulonglong_l_65536_8 + 2)
      000127 AF*04            [24]  293 	mov	r7,(__rlulonglong_l_65536_8 + 3)
      000129 8B F0            [24]  294 	mov	b,r3
      00012B 05 F0            [12]  295 	inc	b
      00012D 80 0C            [24]  296 	sjmp	00121$
      00012F                        297 00120$:
      00012F EC               [12]  298 	mov	a,r4
      000130 2C               [12]  299 	add	a,r4
      000131 FC               [12]  300 	mov	r4,a
      000132 ED               [12]  301 	mov	a,r5
      000133 33               [12]  302 	rlc	a
      000134 FD               [12]  303 	mov	r5,a
      000135 EE               [12]  304 	mov	a,r6
      000136 33               [12]  305 	rlc	a
      000137 FE               [12]  306 	mov	r6,a
      000138 EF               [12]  307 	mov	a,r7
      000139 33               [12]  308 	rlc	a
      00013A FF               [12]  309 	mov	r7,a
      00013B                        310 00121$:
      00013B D5 F0 F1         [24]  311 	djnz	b,00120$
      00013E 8C*01            [24]  312 	mov	(__rlulonglong_l_65536_8 + 0),r4
      000140 8D*02            [24]  313 	mov	(__rlulonglong_l_65536_8 + 1),r5
      000142 8E*03            [24]  314 	mov	(__rlulonglong_l_65536_8 + 2),r6
      000144 8F*04            [24]  315 	mov	(__rlulonglong_l_65536_8 + 3),r7
                                    316 ;	_rlulonglong.c:86: return(l);
      000146 85*01 82         [24]  317 	mov	dpl,__rlulonglong_l_65536_8
      000149 85*02 83         [24]  318 	mov	dph,(__rlulonglong_l_65536_8 + 1)
      00014C 85*03 F0         [24]  319 	mov	b,(__rlulonglong_l_65536_8 + 2)
      00014F E5*04            [12]  320 	mov	a,(__rlulonglong_l_65536_8 + 3)
      000151 AC*05            [24]  321 	mov	r4,(__rlulonglong_l_65536_8 + 4)
      000153 AD*06            [24]  322 	mov	r5,(__rlulonglong_l_65536_8 + 5)
      000155 AE*07            [24]  323 	mov	r6,(__rlulonglong_l_65536_8 + 6)
      000157 AF*08            [24]  324 	mov	r7,(__rlulonglong_l_65536_8 + 7)
                                    325 ;	_rlulonglong.c:87: }
      000159 22               [24]  326 	ret
                                    327 	.area CSEG    (CODE)
                                    328 	.area CONST   (CODE)
                                    329 	.area XINIT   (CODE)
                                    330 	.area CABS    (ABS,CODE)
