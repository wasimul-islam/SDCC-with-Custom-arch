                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module rand
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rand
                                     12 	.globl _srand
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _s:
      000000                         33 	.ds 4
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
                                     38 	.area	OSEG    (OVR,DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; indirectly addressable internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area ISEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; absolute internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area IABS    (ABS,DATA)
                                     47 	.area IABS    (ABS,DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; bit data
                                     50 ;--------------------------------------------------------
                                     51 	.area BSEG    (BIT)
                                     52 ;--------------------------------------------------------
                                     53 ; paged external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area PSEG    (PAG,XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; uninitialized external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XSEG    (XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XABS    (ABS,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; initialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XISEG   (XDATA)
                                     68 	.area HOME    (CODE)
                                     69 	.area GSINIT0 (CODE)
                                     70 	.area GSINIT1 (CODE)
                                     71 	.area GSINIT2 (CODE)
                                     72 	.area GSINIT3 (CODE)
                                     73 	.area GSINIT4 (CODE)
                                     74 	.area GSINIT5 (CODE)
                                     75 	.area GSINIT  (CODE)
                                     76 	.area GSFINAL (CODE)
                                     77 	.area CSEG    (CODE)
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 ;	rand.c:38: static uint32_t s = 0x80000001;
      000000 75*00 01         [24]   86 	mov	_s,#0x01
      000003 E4               [12]   87 	clr	a
      000004 F5*01            [12]   88 	mov	(_s + 1),a
      000006 F5*02            [12]   89 	mov	(_s + 2),a
      000008 75*03 80         [24]   90 	mov	(_s + 3),#0x80
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'rand'
                                    102 ;------------------------------------------------------------
                                    103 ;t                         Allocated to registers r4 r5 r6 r7 
                                    104 ;------------------------------------------------------------
                                    105 ;	rand.c:40: int rand(void)
                                    106 ;	-----------------------------------------
                                    107 ;	 function rand
                                    108 ;	-----------------------------------------
      000000                        109 _rand:
                           000007   110 	ar7 = 0x07
                           000006   111 	ar6 = 0x06
                           000005   112 	ar5 = 0x05
                           000004   113 	ar4 = 0x04
                           000003   114 	ar3 = 0x03
                           000002   115 	ar2 = 0x02
                           000001   116 	ar1 = 0x01
                           000000   117 	ar0 = 0x00
                                    118 ;	rand.c:42: register unsigned long t = s;
      000000 AC*00            [24]  119 	mov	r4,_s
      000002 AD*01            [24]  120 	mov	r5,(_s + 1)
      000004 AE*02            [24]  121 	mov	r6,(_s + 2)
      000006 AF*03            [24]  122 	mov	r7,(_s + 3)
                                    123 ;	rand.c:44: t ^= t >> 10;
      000008 8D 00            [24]  124 	mov	ar0,r5
      00000A EE               [12]  125 	mov	a,r6
      00000B C3               [12]  126 	clr	c
      00000C 13               [12]  127 	rrc	a
      00000D C8               [12]  128 	xch	a,r0
      00000E 13               [12]  129 	rrc	a
      00000F C8               [12]  130 	xch	a,r0
      000010 C3               [12]  131 	clr	c
      000011 13               [12]  132 	rrc	a
      000012 C8               [12]  133 	xch	a,r0
      000013 13               [12]  134 	rrc	a
      000014 C8               [12]  135 	xch	a,r0
      000015 F9               [12]  136 	mov	r1,a
      000016 EF               [12]  137 	mov	a,r7
      000017 03               [12]  138 	rr	a
      000018 03               [12]  139 	rr	a
      000019 54 C0            [12]  140 	anl	a,#0xc0
      00001B 49               [12]  141 	orl	a,r1
      00001C F9               [12]  142 	mov	r1,a
      00001D EF               [12]  143 	mov	a,r7
      00001E 03               [12]  144 	rr	a
      00001F 03               [12]  145 	rr	a
      000020 54 3F            [12]  146 	anl	a,#0x3f
      000022 FA               [12]  147 	mov	r2,a
      000023 7B 00            [12]  148 	mov	r3,#0x00
      000025 EC               [12]  149 	mov	a,r4
      000026 62 00            [12]  150 	xrl	ar0,a
      000028 ED               [12]  151 	mov	a,r5
      000029 62 01            [12]  152 	xrl	ar1,a
      00002B EE               [12]  153 	mov	a,r6
      00002C 62 02            [12]  154 	xrl	ar2,a
      00002E EF               [12]  155 	mov	a,r7
      00002F 62 03            [12]  156 	xrl	ar3,a
                                    157 ;	rand.c:45: t ^= t << 9;
      000031 E8               [12]  158 	mov	a,r0
      000032 28               [12]  159 	add	a,r0
      000033 FD               [12]  160 	mov	r5,a
      000034 E9               [12]  161 	mov	a,r1
      000035 33               [12]  162 	rlc	a
      000036 FE               [12]  163 	mov	r6,a
      000037 EA               [12]  164 	mov	a,r2
      000038 33               [12]  165 	rlc	a
      000039 FF               [12]  166 	mov	r7,a
      00003A 7C 00            [12]  167 	mov	r4,#0x00
      00003C E8               [12]  168 	mov	a,r0
      00003D 62 04            [12]  169 	xrl	ar4,a
      00003F E9               [12]  170 	mov	a,r1
      000040 62 05            [12]  171 	xrl	ar5,a
      000042 EA               [12]  172 	mov	a,r2
      000043 62 06            [12]  173 	xrl	ar6,a
      000045 EB               [12]  174 	mov	a,r3
      000046 62 07            [12]  175 	xrl	ar7,a
                                    176 ;	rand.c:46: t ^= t >> 25;
      000048 EF               [12]  177 	mov	a,r7
      000049 C3               [12]  178 	clr	c
      00004A 13               [12]  179 	rrc	a
      00004B F8               [12]  180 	mov	r0,a
      00004C E4               [12]  181 	clr	a
      00004D F9               [12]  182 	mov	r1,a
      00004E FA               [12]  183 	mov	r2,a
      00004F FB               [12]  184 	mov	r3,a
      000050 E8               [12]  185 	mov	a,r0
      000051 62 04            [12]  186 	xrl	ar4,a
      000053 E9               [12]  187 	mov	a,r1
      000054 62 05            [12]  188 	xrl	ar5,a
      000056 EA               [12]  189 	mov	a,r2
      000057 62 06            [12]  190 	xrl	ar6,a
      000059 EB               [12]  191 	mov	a,r3
      00005A 62 07            [12]  192 	xrl	ar7,a
                                    193 ;	rand.c:48: s = t;
      00005C 8C*00            [24]  194 	mov	_s,r4
      00005E 8D*01            [24]  195 	mov	(_s + 1),r5
      000060 8E*02            [24]  196 	mov	(_s + 2),r6
      000062 8F*03            [24]  197 	mov	(_s + 3),r7
                                    198 ;	rand.c:50: return(t & RAND_MAX);
      000064 8C 82            [24]  199 	mov	dpl,r4
      000066 74 7F            [12]  200 	mov	a,#0x7f
      000068 5D               [12]  201 	anl	a,r5
      000069 F5 83            [12]  202 	mov	dph,a
                                    203 ;	rand.c:51: }
      00006B 22               [24]  204 	ret
                                    205 ;------------------------------------------------------------
                                    206 ;Allocation info for local variables in function 'srand'
                                    207 ;------------------------------------------------------------
                                    208 ;seed                      Allocated to registers r6 r7 
                                    209 ;------------------------------------------------------------
                                    210 ;	rand.c:53: void srand(unsigned int seed)
                                    211 ;	-----------------------------------------
                                    212 ;	 function srand
                                    213 ;	-----------------------------------------
      00006C                        214 _srand:
      00006C AE 82            [24]  215 	mov	r6,dpl
      00006E AF 83            [24]  216 	mov	r7,dph
                                    217 ;	rand.c:55: s = seed | 0x80000000; /* s shall not become 0 */
      000070 7D 00            [12]  218 	mov	r5,#0x00
      000072 7C 00            [12]  219 	mov	r4,#0x00
      000074 8E*00            [24]  220 	mov	_s,r6
      000076 8F*01            [24]  221 	mov	(_s + 1),r7
      000078 8D*02            [24]  222 	mov	(_s + 2),r5
      00007A 74 80            [12]  223 	mov	a,#0x80
      00007C 4C               [12]  224 	orl	a,r4
      00007D F5*03            [12]  225 	mov	(_s + 3),a
                                    226 ;	rand.c:56: }
      00007F 22               [24]  227 	ret
                                    228 	.area CSEG    (CODE)
                                    229 	.area CONST   (CODE)
                                    230 	.area XINIT   (CODE)
                                    231 	.area CABS    (ABS,CODE)
