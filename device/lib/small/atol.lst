                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atol
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _atol
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
      000000                         31 _atol_nptr_65536_59:
      000000                         32 	.ds 3
      000003                         33 _atol_neg_65536_60:
      000003                         34 	.ds 1
      000004                         35 _atol_sloc1_1_0:
      000004                         36 	.ds 3
      000007                         37 _atol_sloc2_1_0:
      000007                         38 	.ds 4
                                     39 ;--------------------------------------------------------
                                     40 ; overlayable items in internal ram
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
      000000                         55 _atol_sloc0_1_0:
      000000                         56 	.ds 1
                                     57 ;--------------------------------------------------------
                                     58 ; paged external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area PSEG    (PAG,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; uninitialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XSEG    (XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XABS    (ABS,XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; initialized external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XISEG   (XDATA)
                                     73 	.area HOME    (CODE)
                                     74 	.area GSINIT0 (CODE)
                                     75 	.area GSINIT1 (CODE)
                                     76 	.area GSINIT2 (CODE)
                                     77 	.area GSINIT3 (CODE)
                                     78 	.area GSINIT4 (CODE)
                                     79 	.area GSINIT5 (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area CSEG    (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'atol'
                                    101 ;------------------------------------------------------------
                                    102 ;nptr                      Allocated with name '_atol_nptr_65536_59'
                                    103 ;__1310720007              Allocated to registers 
                                    104 ;__1310720004              Allocated to registers 
                                    105 ;ret                       Allocated to registers r1 r2 r3 r4 
                                    106 ;neg                       Allocated with name '_atol_neg_65536_60'
                                    107 ;__1310720005              Allocated to registers 
                                    108 ;c                         Allocated to registers 
                                    109 ;__1310720008              Allocated to registers 
                                    110 ;c                         Allocated to registers 
                                    111 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                                    112 ;sloc2                     Allocated with name '_atol_sloc2_1_0'
                                    113 ;------------------------------------------------------------
                                    114 ;	atol.c:34: long int atol(const char *nptr)
                                    115 ;	-----------------------------------------
                                    116 ;	 function atol
                                    117 ;	-----------------------------------------
      000000                        118 _atol:
                           000007   119 	ar7 = 0x07
                           000006   120 	ar6 = 0x06
                           000005   121 	ar5 = 0x05
                           000004   122 	ar4 = 0x04
                           000003   123 	ar3 = 0x03
                           000002   124 	ar2 = 0x02
                           000001   125 	ar1 = 0x01
                           000000   126 	ar0 = 0x00
      000000 AD 82            [24]  127 	mov	r5,dpl
      000002 AE 83            [24]  128 	mov	r6,dph
      000004 AF F0            [24]  129 	mov	r7,b
                                    130 ;	atol.c:36: long int ret = 0;
      000006 79 00            [12]  131 	mov	r1,#0x00
      000008 7A 00            [12]  132 	mov	r2,#0x00
      00000A 7B 00            [12]  133 	mov	r3,#0x00
      00000C 7C 00            [12]  134 	mov	r4,#0x00
                                    135 ;	atol.c:39: while (isblank (*nptr))
      00000E                        136 00101$:
      00000E 8D 82            [24]  137 	mov	dpl,r5
      000010 8E 83            [24]  138 	mov	dph,r6
      000012 8F F0            [24]  139 	mov	b,r7
      000014 12r00r00         [24]  140 	lcall	__gptrget
      000017 F8               [12]  141 	mov	r0,a
                                    142 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000018 B8 20 02         [24]  143 	cjne	r0,#0x20,00161$
      00001B 80 03            [24]  144 	sjmp	00115$
      00001D                        145 00161$:
      00001D B8 09 07         [24]  146 	cjne	r0,#0x09,00131$
      000020                        147 00115$:
                                    148 ;	atol.c:40: nptr++;
      000020 0D               [12]  149 	inc	r5
      000021 BD 00 EA         [24]  150 	cjne	r5,#0x00,00101$
      000024 0E               [12]  151 	inc	r6
      000025 80 E7            [24]  152 	sjmp	00101$
      000027                        153 00131$:
      000027 8D*00            [24]  154 	mov	_atol_nptr_65536_59,r5
      000029 8E*01            [24]  155 	mov	(_atol_nptr_65536_59 + 1),r6
      00002B 8F*02            [24]  156 	mov	(_atol_nptr_65536_59 + 2),r7
                                    157 ;	atol.c:42: neg = (*nptr == '-');
      00002D 8D 82            [24]  158 	mov	dpl,r5
      00002F 8E 83            [24]  159 	mov	dph,r6
      000031 8F F0            [24]  160 	mov	b,r7
      000033 12r00r00         [24]  161 	lcall	__gptrget
      000036 FF               [12]  162 	mov	r7,a
      000037 E4               [12]  163 	clr	a
      000038 BF 2D 01         [24]  164 	cjne	r7,#0x2d,00165$
      00003B 04               [12]  165 	inc	a
      00003C                        166 00165$:
      00003C F5*03            [12]  167 	mov	_atol_neg_65536_60,a
                                    168 ;	atol.c:44: if (*nptr == '-' || *nptr == '+')
      00003E BF 2D 02         [24]  169 	cjne	r7,#0x2d,00167$
      000041 80 03            [24]  170 	sjmp	00104$
      000043                        171 00167$:
      000043 BF 2B 08         [24]  172 	cjne	r7,#0x2b,00129$
      000046                        173 00104$:
                                    174 ;	atol.c:45: nptr++;
      000046 05*00            [12]  175 	inc	_atol_nptr_65536_59
      000048 E4               [12]  176 	clr	a
      000049 B5*00 02         [24]  177 	cjne	a,_atol_nptr_65536_59,00170$
      00004C 05*01            [12]  178 	inc	(_atol_nptr_65536_59 + 1)
      00004E                        179 00170$:
                                    180 ;	atol.c:47: while (isdigit (*nptr))
      00004E                        181 00129$:
      00004E 85*00*04         [24]  182 	mov	_atol_sloc1_1_0,_atol_nptr_65536_59
      000051 85*01*05         [24]  183 	mov	(_atol_sloc1_1_0 + 1),(_atol_nptr_65536_59 + 1)
      000054 85*02*06         [24]  184 	mov	(_atol_sloc1_1_0 + 2),(_atol_nptr_65536_59 + 2)
      000057                        185 00107$:
      000057 85*04 82         [24]  186 	mov	dpl,_atol_sloc1_1_0
      00005A 85*05 83         [24]  187 	mov	dph,(_atol_sloc1_1_0 + 1)
      00005D 85*06 F0         [24]  188 	mov	b,(_atol_sloc1_1_0 + 2)
      000060 12r00r00         [24]  189 	lcall	__gptrget
      000063 F8               [12]  190 	mov	r0,a
                                    191 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      000064 B8 30 00         [24]  192 	cjne	r0,#0x30,00171$
      000067                        193 00171$:
      000067 92*00            [24]  194 	mov	_atol_sloc0_1_0,c
      000069 40 5A            [24]  195 	jc	00109$
      00006B E8               [12]  196 	mov	a,r0
      00006C 24 C6            [12]  197 	add	a,#0xff - 0x39
      00006E 92*00            [24]  198 	mov	_atol_sloc0_1_0,c
      000070 40 53            [24]  199 	jc	00109$
                                    200 ;	atol.c:48: ret = ret * 10 + (*(nptr++) - '0');
      000072 89*00            [24]  201 	mov	__mullong_PARM_2,r1
      000074 8A*01            [24]  202 	mov	(__mullong_PARM_2 + 1),r2
      000076 8B*02            [24]  203 	mov	(__mullong_PARM_2 + 2),r3
      000078 8C*03            [24]  204 	mov	(__mullong_PARM_2 + 3),r4
      00007A 90 00 0A         [24]  205 	mov	dptr,#(0x0a&0x00ff)
      00007D E4               [12]  206 	clr	a
      00007E F5 F0            [12]  207 	mov	b,a
      000080 12r00r00         [24]  208 	lcall	__mullong
      000083 85 82*07         [24]  209 	mov	_atol_sloc2_1_0,dpl
      000086 85 83*08         [24]  210 	mov	(_atol_sloc2_1_0 + 1),dph
      000089 85 F0*09         [24]  211 	mov	(_atol_sloc2_1_0 + 2),b
      00008C F5*0A            [12]  212 	mov	(_atol_sloc2_1_0 + 3),a
      00008E 85*04 82         [24]  213 	mov	dpl,_atol_sloc1_1_0
      000091 85*05 83         [24]  214 	mov	dph,(_atol_sloc1_1_0 + 1)
      000094 85*06 F0         [24]  215 	mov	b,(_atol_sloc1_1_0 + 2)
      000097 12r00r00         [24]  216 	lcall	__gptrget
      00009A FF               [12]  217 	mov	r7,a
      00009B A3               [24]  218 	inc	dptr
      00009C 85 82*04         [24]  219 	mov	_atol_sloc1_1_0,dpl
      00009F 85 83*05         [24]  220 	mov	(_atol_sloc1_1_0 + 1),dph
      0000A2 7E 00            [12]  221 	mov	r6,#0x00
      0000A4 EF               [12]  222 	mov	a,r7
      0000A5 24 D0            [12]  223 	add	a,#0xd0
      0000A7 FF               [12]  224 	mov	r7,a
      0000A8 EE               [12]  225 	mov	a,r6
      0000A9 34 FF            [12]  226 	addc	a,#0xff
      0000AB 8F 00            [24]  227 	mov	ar0,r7
      0000AD FD               [12]  228 	mov	r5,a
      0000AE 33               [12]  229 	rlc	a
      0000AF 95 E0            [12]  230 	subb	a,acc
      0000B1 FE               [12]  231 	mov	r6,a
      0000B2 FF               [12]  232 	mov	r7,a
      0000B3 E8               [12]  233 	mov	a,r0
      0000B4 25*07            [12]  234 	add	a,_atol_sloc2_1_0
      0000B6 F9               [12]  235 	mov	r1,a
      0000B7 ED               [12]  236 	mov	a,r5
      0000B8 35*08            [12]  237 	addc	a,(_atol_sloc2_1_0 + 1)
      0000BA FA               [12]  238 	mov	r2,a
      0000BB EE               [12]  239 	mov	a,r6
      0000BC 35*09            [12]  240 	addc	a,(_atol_sloc2_1_0 + 2)
      0000BE FB               [12]  241 	mov	r3,a
      0000BF EF               [12]  242 	mov	a,r7
      0000C0 35*0A            [12]  243 	addc	a,(_atol_sloc2_1_0 + 3)
      0000C2 FC               [12]  244 	mov	r4,a
      0000C3 80 92            [24]  245 	sjmp	00107$
      0000C5                        246 00109$:
                                    247 ;	atol.c:50: return (neg ? -ret : ret); // Since -LONG_MIN is LONG_MIN in sdcc, the result value always turns out ok.
      0000C5 E5*03            [12]  248 	mov	a,_atol_neg_65536_60
      0000C7 60 0F            [24]  249 	jz	00120$
      0000C9 C3               [12]  250 	clr	c
      0000CA E4               [12]  251 	clr	a
      0000CB 99               [12]  252 	subb	a,r1
      0000CC F8               [12]  253 	mov	r0,a
      0000CD E4               [12]  254 	clr	a
      0000CE 9A               [12]  255 	subb	a,r2
      0000CF FD               [12]  256 	mov	r5,a
      0000D0 E4               [12]  257 	clr	a
      0000D1 9B               [12]  258 	subb	a,r3
      0000D2 FE               [12]  259 	mov	r6,a
      0000D3 E4               [12]  260 	clr	a
      0000D4 9C               [12]  261 	subb	a,r4
      0000D5 FF               [12]  262 	mov	r7,a
      0000D6 80 08            [24]  263 	sjmp	00121$
      0000D8                        264 00120$:
      0000D8 89 00            [24]  265 	mov	ar0,r1
      0000DA 8A 05            [24]  266 	mov	ar5,r2
      0000DC 8B 06            [24]  267 	mov	ar6,r3
      0000DE 8C 07            [24]  268 	mov	ar7,r4
      0000E0                        269 00121$:
      0000E0 88 82            [24]  270 	mov	dpl,r0
      0000E2 8D 83            [24]  271 	mov	dph,r5
      0000E4 8E F0            [24]  272 	mov	b,r6
      0000E6 EF               [12]  273 	mov	a,r7
                                    274 ;	atol.c:51: }
      0000E7 22               [24]  275 	ret
                                    276 	.area CSEG    (CODE)
                                    277 	.area CONST   (CODE)
                                    278 	.area XINIT   (CODE)
                                    279 	.area CABS    (ABS,CODE)
