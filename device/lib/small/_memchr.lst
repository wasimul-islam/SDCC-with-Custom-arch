                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memchr
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memchr_PARM_3
                                     12 	.globl _memchr_PARM_2
                                     13 	.globl _memchr
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _memchr_PARM_2:
      000000                         38 	.ds 2
      000002                         39 _memchr_PARM_3:
      000002                         40 	.ds 2
      000004                         41 _memchr_p_65536_27:
      000004                         42 	.ds 3
      000007                         43 _memchr_end_65536_27:
      000007                         44 	.ds 3
                                     45 ;--------------------------------------------------------
                                     46 ; indirectly addressable internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area ISEG    (DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; absolute internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area IABS    (ABS,DATA)
                                     53 	.area IABS    (ABS,DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; bit data
                                     56 ;--------------------------------------------------------
                                     57 	.area BSEG    (BIT)
                                     58 ;--------------------------------------------------------
                                     59 ; paged external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area PSEG    (PAG,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; uninitialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XSEG    (XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; initialized external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'memchr'
                                    102 ;------------------------------------------------------------
                                    103 ;c                         Allocated with name '_memchr_PARM_2'
                                    104 ;n                         Allocated with name '_memchr_PARM_3'
                                    105 ;s                         Allocated to registers r5 r6 r7 
                                    106 ;p                         Allocated with name '_memchr_p_65536_27'
                                    107 ;end                       Allocated with name '_memchr_end_65536_27'
                                    108 ;------------------------------------------------------------
                                    109 ;	_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                                    110 ;	-----------------------------------------
                                    111 ;	 function memchr
                                    112 ;	-----------------------------------------
      000000                        113 _memchr:
                           000007   114 	ar7 = 0x07
                           000006   115 	ar6 = 0x06
                           000005   116 	ar5 = 0x05
                           000004   117 	ar4 = 0x04
                           000003   118 	ar3 = 0x03
                           000002   119 	ar2 = 0x02
                           000001   120 	ar1 = 0x01
                           000000   121 	ar0 = 0x00
      000000 AD 82            [24]  122 	mov	r5,dpl
      000002 AE 83            [24]  123 	mov	r6,dph
      000004 AF F0            [24]  124 	mov	r7,b
                                    125 ;	_memchr.c:33: unsigned char *p = (unsigned char *)s;
      000006 8D*04            [24]  126 	mov	_memchr_p_65536_27,r5
      000008 8E*05            [24]  127 	mov	(_memchr_p_65536_27 + 1),r6
      00000A 8F*06            [24]  128 	mov	(_memchr_p_65536_27 + 2),r7
                                    129 ;	_memchr.c:34: unsigned char *end = p + n;
      00000C E5*02            [12]  130 	mov	a,_memchr_PARM_3
      00000E 25*04            [12]  131 	add	a,_memchr_p_65536_27
      000010 F5*07            [12]  132 	mov	_memchr_end_65536_27,a
      000012 E5*03            [12]  133 	mov	a,(_memchr_PARM_3 + 1)
      000014 35*05            [12]  134 	addc	a,(_memchr_p_65536_27 + 1)
      000016 F5*08            [12]  135 	mov	(_memchr_end_65536_27 + 1),a
      000018 85*06*09         [24]  136 	mov	(_memchr_end_65536_27 + 2),(_memchr_p_65536_27 + 2)
                                    137 ;	_memchr.c:38: return(0);
      00001B A8*04            [24]  138 	mov	r0,_memchr_p_65536_27
      00001D A9*05            [24]  139 	mov	r1,(_memchr_p_65536_27 + 1)
      00001F AC*06            [24]  140 	mov	r4,(_memchr_p_65536_27 + 2)
      000021                        141 00105$:
                                    142 ;	_memchr.c:35: for(; p != end; p++)
      000021 C0*07            [24]  143 	push	_memchr_end_65536_27
      000023 C0*08            [24]  144 	push	(_memchr_end_65536_27 + 1)
      000025 C0*09            [24]  145 	push	(_memchr_end_65536_27 + 2)
      000027 88 82            [24]  146 	mov	dpl,r0
      000029 89 83            [24]  147 	mov	dph,r1
      00002B 8C F0            [24]  148 	mov	b,r4
      00002D 12r00r00         [24]  149 	lcall	___gptr_cmp
      000030 15 81            [12]  150 	dec	sp
      000032 15 81            [12]  151 	dec	sp
      000034 15 81            [12]  152 	dec	sp
      000036 60 29            [24]  153 	jz	00103$
                                    154 ;	_memchr.c:36: if(*p == (unsigned char)c)
      000038 88 82            [24]  155 	mov	dpl,r0
      00003A 89 83            [24]  156 	mov	dph,r1
      00003C 8C F0            [24]  157 	mov	b,r4
      00003E 12r00r00         [24]  158 	lcall	__gptrget
      000041 FB               [12]  159 	mov	r3,a
      000042 AA*00            [24]  160 	mov	r2,_memchr_PARM_2
      000044 B5 02 0D         [24]  161 	cjne	a,ar2,00106$
                                    162 ;	_memchr.c:37: return((void *)p);
      000047 AA*04            [24]  163 	mov	r2,_memchr_p_65536_27
      000049 AB*05            [24]  164 	mov	r3,(_memchr_p_65536_27 + 1)
      00004B AF*06            [24]  165 	mov	r7,(_memchr_p_65536_27 + 2)
      00004D 8A 82            [24]  166 	mov	dpl,r2
      00004F 8B 83            [24]  167 	mov	dph,r3
      000051 8F F0            [24]  168 	mov	b,r7
      000053 22               [24]  169 	ret
      000054                        170 00106$:
                                    171 ;	_memchr.c:35: for(; p != end; p++)
      000054 08               [12]  172 	inc	r0
      000055 B8 00 01         [24]  173 	cjne	r0,#0x00,00124$
      000058 09               [12]  174 	inc	r1
      000059                        175 00124$:
      000059 88*04            [24]  176 	mov	_memchr_p_65536_27,r0
      00005B 89*05            [24]  177 	mov	(_memchr_p_65536_27 + 1),r1
      00005D 8C*06            [24]  178 	mov	(_memchr_p_65536_27 + 2),r4
      00005F 80 C0            [24]  179 	sjmp	00105$
      000061                        180 00103$:
                                    181 ;	_memchr.c:38: return(0);
      000061 90 00 00         [24]  182 	mov	dptr,#0x0000
      000064 75 F0 00         [24]  183 	mov	b,#0x00
                                    184 ;	_memchr.c:39: }
      000067 22               [24]  185 	ret
                                    186 	.area CSEG    (CODE)
                                    187 	.area CONST   (CODE)
                                    188 	.area XINIT   (CODE)
                                    189 	.area CABS    (ABS,CODE)
