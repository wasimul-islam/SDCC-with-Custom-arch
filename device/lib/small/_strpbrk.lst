                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strpbrk
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strpbrk_PARM_2
                                     13 	.globl _strpbrk
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
      000000                         33 _strpbrk_PARM_2:
      000000                         34 	.ds 3
      000003                         35 _strpbrk_string_65536_26:
      000003                         36 	.ds 3
      000006                         37 _strpbrk_ret_65536_27:
      000006                         38 	.ds 3
                                     39 ;--------------------------------------------------------
                                     40 ; overlayable items in internal ram
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; uninitialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; initialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function 'strpbrk'
                                     99 ;------------------------------------------------------------
                                    100 ;control                   Allocated with name '_strpbrk_PARM_2'
                                    101 ;string                    Allocated with name '_strpbrk_string_65536_26'
                                    102 ;ret                       Allocated with name '_strpbrk_ret_65536_27'
                                    103 ;ch                        Allocated to registers r5 
                                    104 ;p                         Allocated to registers r6 r5 r4 
                                    105 ;------------------------------------------------------------
                                    106 ;	_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                                    107 ;	-----------------------------------------
                                    108 ;	 function strpbrk
                                    109 ;	-----------------------------------------
      000000                        110 _strpbrk:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 85 82*03         [24]  119 	mov	_strpbrk_string_65536_26,dpl
      000003 85 83*04         [24]  120 	mov	(_strpbrk_string_65536_26 + 1),dph
      000006 85 F0*05         [24]  121 	mov	(_strpbrk_string_65536_26 + 2),b
                                    122 ;	_strpbrk.c:33: char *ret = NULL;
      000009 E4               [12]  123 	clr	a
      00000A F5*06            [12]  124 	mov	_strpbrk_ret_65536_27,a
      00000C F5*07            [12]  125 	mov	(_strpbrk_ret_65536_27 + 1),a
      00000E F5*08            [12]  126 	mov	(_strpbrk_ret_65536_27 + 2),a
                                    127 ;	_strpbrk.c:36: while (ch = *control) {
      000010 A8*00            [24]  128 	mov	r0,_strpbrk_PARM_2
      000012 A9*01            [24]  129 	mov	r1,(_strpbrk_PARM_2 + 1)
      000014 AF*02            [24]  130 	mov	r7,(_strpbrk_PARM_2 + 2)
      000016                        131 00105$:
      000016 88 82            [24]  132 	mov	dpl,r0
      000018 89 83            [24]  133 	mov	dph,r1
      00001A 8F F0            [24]  134 	mov	b,r7
      00001C 12r00r00         [24]  135 	lcall	__gptrget
      00001F FD               [12]  136 	mov	r5,a
      000020 60 4E            [24]  137 	jz	00107$
                                    138 ;	_strpbrk.c:37: char * p = strchr(string, ch);
      000022 8D*00            [24]  139 	mov	_strchr_PARM_2,r5
      000024 85*03 82         [24]  140 	mov	dpl,_strpbrk_string_65536_26
      000027 85*04 83         [24]  141 	mov	dph,(_strpbrk_string_65536_26 + 1)
      00002A 85*05 F0         [24]  142 	mov	b,(_strpbrk_string_65536_26 + 2)
      00002D C0 07            [24]  143 	push	ar7
      00002F C0 01            [24]  144 	push	ar1
      000031 C0 00            [24]  145 	push	ar0
      000033 12r00r00         [24]  146 	lcall	_strchr
      000036 AE 82            [24]  147 	mov	r6,dpl
      000038 AD 83            [24]  148 	mov	r5,dph
      00003A AC F0            [24]  149 	mov	r4,b
      00003C D0 00            [24]  150 	pop	ar0
      00003E D0 01            [24]  151 	pop	ar1
      000040 D0 07            [24]  152 	pop	ar7
                                    153 ;	_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
      000042 EE               [12]  154 	mov	a,r6
      000043 4D               [12]  155 	orl	a,r5
      000044 60 23            [24]  156 	jz	00102$
      000046 E5*06            [12]  157 	mov	a,_strpbrk_ret_65536_27
      000048 45*07            [12]  158 	orl	a,(_strpbrk_ret_65536_27 + 1)
      00004A 60 17            [24]  159 	jz	00101$
      00004C C0*06            [24]  160 	push	_strpbrk_ret_65536_27
      00004E C0*07            [24]  161 	push	(_strpbrk_ret_65536_27 + 1)
      000050 C0*08            [24]  162 	push	(_strpbrk_ret_65536_27 + 2)
      000052 8E 82            [24]  163 	mov	dpl,r6
      000054 8D 83            [24]  164 	mov	dph,r5
      000056 8C F0            [24]  165 	mov	b,r4
      000058 12r00r00         [24]  166 	lcall	___gptr_cmp
      00005B 15 81            [12]  167 	dec	sp
      00005D 15 81            [12]  168 	dec	sp
      00005F 15 81            [12]  169 	dec	sp
      000061 50 06            [24]  170 	jnc	00102$
      000063                        171 00101$:
                                    172 ;	_strpbrk.c:39: ret = p;
      000063 8E*06            [24]  173 	mov	_strpbrk_ret_65536_27,r6
      000065 8D*07            [24]  174 	mov	(_strpbrk_ret_65536_27 + 1),r5
      000067 8C*08            [24]  175 	mov	(_strpbrk_ret_65536_27 + 2),r4
      000069                        176 00102$:
                                    177 ;	_strpbrk.c:41: control++;
      000069 08               [12]  178 	inc	r0
      00006A B8 00 A9         [24]  179 	cjne	r0,#0x00,00105$
      00006D 09               [12]  180 	inc	r1
      00006E 80 A6            [24]  181 	sjmp	00105$
      000070                        182 00107$:
                                    183 ;	_strpbrk.c:44: return (ret);
      000070 85*06 82         [24]  184 	mov	dpl,_strpbrk_ret_65536_27
      000073 85*07 83         [24]  185 	mov	dph,(_strpbrk_ret_65536_27 + 1)
      000076 85*08 F0         [24]  186 	mov	b,(_strpbrk_ret_65536_27 + 2)
                                    187 ;	_strpbrk.c:45: }
      000079 22               [24]  188 	ret
                                    189 	.area CSEG    (CODE)
                                    190 	.area CONST   (CODE)
                                    191 	.area XINIT   (CODE)
                                    192 	.area CABS    (ABS,CODE)
