                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module powf
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _logf
                                     12 	.globl _expf
                                     13 	.globl _powf_PARM_2
                                     14 	.globl _powf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _powf_PARM_2:
      000000                         35 	.ds 4
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable items in internal ram
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; indirectly addressable internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area ISEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; absolute internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area IABS    (ABS,DATA)
                                     47 	.area IABS    (ABS,DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; bit data
                                     50 ;--------------------------------------------------------
                                     51 	.area BSEG    (BIT)
      000000                         52 _powf_sloc0_1_0:
      000000                         53 	.ds 1
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; uninitialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; initialized external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function 'powf'
                                     98 ;------------------------------------------------------------
                                     99 ;y                         Allocated with name '_powf_PARM_2'
                                    100 ;x                         Allocated to registers r4 r5 r6 r7 
                                    101 ;------------------------------------------------------------
                                    102 ;	powf.c:35: float powf(float x, float y)
                                    103 ;	-----------------------------------------
                                    104 ;	 function powf
                                    105 ;	-----------------------------------------
      000000                        106 _powf:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 AC 82            [24]  115 	mov	r4,dpl
      000002 AD 83            [24]  116 	mov	r5,dph
      000004 AE F0            [24]  117 	mov	r6,b
      000006 FF               [12]  118 	mov	r7,a
                                    119 ;	powf.c:37: if(y == 0.0) return 1.0;
      000007 85*00 F0         [24]  120 	mov	b,_powf_PARM_2
      00000A E5*01            [12]  121 	mov	a,(_powf_PARM_2 + 1)
      00000C 42 F0            [12]  122 	orl	b,a
      00000E E5*02            [12]  123 	mov	a,(_powf_PARM_2 + 2)
      000010 42 F0            [12]  124 	orl	b,a
      000012 E5*03            [12]  125 	mov	a,(_powf_PARM_2 + 3)
      000014 54 7F            [12]  126 	anl	a,#0x7F
      000016 45 F0            [12]  127 	orl	a,b
      000018 70 09            [24]  128 	jnz	00102$
      00001A 90 00 00         [24]  129 	mov	dptr,#0x0000
      00001D 75 F0 80         [24]  130 	mov	b,#0x80
      000020 74 3F            [12]  131 	mov	a,#0x3f
      000022 22               [24]  132 	ret
      000023                        133 00102$:
                                    134 ;	powf.c:38: if(y == 1.0) return x;
      000023 C0 07            [24]  135 	push	ar7
      000025 C0 06            [24]  136 	push	ar6
      000027 C0 05            [24]  137 	push	ar5
      000029 C0 04            [24]  138 	push	ar4
      00002B E4               [12]  139 	clr	a
      00002C C0 E0            [24]  140 	push	acc
      00002E C0 E0            [24]  141 	push	acc
      000030 74 80            [12]  142 	mov	a,#0x80
      000032 C0 E0            [24]  143 	push	acc
      000034 74 3F            [12]  144 	mov	a,#0x3f
      000036 C0 E0            [24]  145 	push	acc
      000038 85*00 82         [24]  146 	mov	dpl,_powf_PARM_2
      00003B 85*01 83         [24]  147 	mov	dph,(_powf_PARM_2 + 1)
      00003E 85*02 F0         [24]  148 	mov	b,(_powf_PARM_2 + 2)
      000041 E5*03            [12]  149 	mov	a,(_powf_PARM_2 + 3)
      000043 12r00r00         [24]  150 	lcall	___fseq
      000046 AB 82            [24]  151 	mov	r3,dpl
      000048 E5 81            [12]  152 	mov	a,sp
      00004A 24 FC            [12]  153 	add	a,#0xfc
      00004C F5 81            [12]  154 	mov	sp,a
      00004E D0 04            [24]  155 	pop	ar4
      000050 D0 05            [24]  156 	pop	ar5
      000052 D0 06            [24]  157 	pop	ar6
      000054 D0 07            [24]  158 	pop	ar7
      000056 EB               [12]  159 	mov	a,r3
      000057 60 08            [24]  160 	jz	00104$
      000059 8C 82            [24]  161 	mov	dpl,r4
      00005B 8D 83            [24]  162 	mov	dph,r5
      00005D 8E F0            [24]  163 	mov	b,r6
      00005F EF               [12]  164 	mov	a,r7
      000060 22               [24]  165 	ret
      000061                        166 00104$:
                                    167 ;	powf.c:39: if(x <= 0.0) return 0.0;
      000061 C0 07            [24]  168 	push	ar7
      000063 C0 06            [24]  169 	push	ar6
      000065 C0 05            [24]  170 	push	ar5
      000067 C0 04            [24]  171 	push	ar4
      000069 C0 04            [24]  172 	push	ar4
      00006B C0 05            [24]  173 	push	ar5
      00006D C0 06            [24]  174 	push	ar6
      00006F C0 07            [24]  175 	push	ar7
      000071 90 00 00         [24]  176 	mov	dptr,#(0x00&0x00ff)
      000074 E4               [12]  177 	clr	a
      000075 F5 F0            [12]  178 	mov	b,a
      000077 12r00r00         [24]  179 	lcall	___fslt
      00007A E5 81            [12]  180 	mov	a,sp
      00007C 24 FC            [12]  181 	add	a,#0xfc
      00007E F5 81            [12]  182 	mov	sp,a
      000080 D0 04            [24]  183 	pop	ar4
      000082 D0 05            [24]  184 	pop	ar5
      000084 D0 06            [24]  185 	pop	ar6
      000086 D0 07            [24]  186 	pop	ar7
      000088 E5 82            [12]  187 	mov	a,dpl
      00008A 24 FF            [12]  188 	add	a,#0xff
      00008C 92*00            [24]  189 	mov	_powf_sloc0_1_0,c
      00008E 40 07            [24]  190 	jc	00106$
      000090 90 00 00         [24]  191 	mov	dptr,#(0x00&0x00ff)
      000093 E4               [12]  192 	clr	a
      000094 F5 F0            [12]  193 	mov	b,a
      000096 22               [24]  194 	ret
      000097                        195 00106$:
                                    196 ;	powf.c:40: return expf(logf(x) * y);
      000097 8C 82            [24]  197 	mov	dpl,r4
      000099 8D 83            [24]  198 	mov	dph,r5
      00009B 8E F0            [24]  199 	mov	b,r6
      00009D EF               [12]  200 	mov	a,r7
      00009E 12r00r00         [24]  201 	lcall	_logf
      0000A1 AC 82            [24]  202 	mov	r4,dpl
      0000A3 AD 83            [24]  203 	mov	r5,dph
      0000A5 AE F0            [24]  204 	mov	r6,b
      0000A7 FF               [12]  205 	mov	r7,a
      0000A8 C0*00            [24]  206 	push	_powf_PARM_2
      0000AA C0*01            [24]  207 	push	(_powf_PARM_2 + 1)
      0000AC C0*02            [24]  208 	push	(_powf_PARM_2 + 2)
      0000AE C0*03            [24]  209 	push	(_powf_PARM_2 + 3)
      0000B0 8C 82            [24]  210 	mov	dpl,r4
      0000B2 8D 83            [24]  211 	mov	dph,r5
      0000B4 8E F0            [24]  212 	mov	b,r6
      0000B6 EF               [12]  213 	mov	a,r7
      0000B7 12r00r00         [24]  214 	lcall	___fsmul
      0000BA AC 82            [24]  215 	mov	r4,dpl
      0000BC AD 83            [24]  216 	mov	r5,dph
      0000BE AE F0            [24]  217 	mov	r6,b
      0000C0 FF               [12]  218 	mov	r7,a
      0000C1 E5 81            [12]  219 	mov	a,sp
      0000C3 24 FC            [12]  220 	add	a,#0xfc
      0000C5 F5 81            [12]  221 	mov	sp,a
      0000C7 8C 82            [24]  222 	mov	dpl,r4
      0000C9 8D 83            [24]  223 	mov	dph,r5
      0000CB 8E F0            [24]  224 	mov	b,r6
      0000CD EF               [12]  225 	mov	a,r7
                                    226 ;	powf.c:41: }
      0000CE 02r00r00         [24]  227 	ljmp	_expf
                                    228 	.area CSEG    (CODE)
                                    229 	.area CONST   (CODE)
                                    230 	.area XINIT   (CODE)
                                    231 	.area CABS    (ABS,CODE)
