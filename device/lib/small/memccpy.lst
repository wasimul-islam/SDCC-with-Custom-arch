                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module memccpy
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memccpy_PARM_4
                                     12 	.globl _memccpy_PARM_3
                                     13 	.globl _memccpy_PARM_2
                                     14 	.globl _memccpy
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _memccpy_PARM_2:
      000000                         39 	.ds 3
      000003                         40 _memccpy_PARM_3:
      000003                         41 	.ds 2
      000005                         42 _memccpy_PARM_4:
      000005                         43 	.ds 2
      000007                         44 _memccpy_d_65536_27:
      000007                         45 	.ds 3
      00000A                         46 _memccpy_sloc0_1_0:
      00000A                         47 	.ds 2
                                     48 ;--------------------------------------------------------
                                     49 ; indirectly addressable internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area ISEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; absolute internal ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area IABS    (ABS,DATA)
                                     56 	.area IABS    (ABS,DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; bit data
                                     59 ;--------------------------------------------------------
                                     60 	.area BSEG    (BIT)
                                     61 ;--------------------------------------------------------
                                     62 ; paged external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area PSEG    (PAG,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; uninitialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XSEG    (XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; absolute external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XABS    (ABS,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; initialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XISEG   (XDATA)
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT0 (CODE)
                                     79 	.area GSINIT1 (CODE)
                                     80 	.area GSINIT2 (CODE)
                                     81 	.area GSINIT3 (CODE)
                                     82 	.area GSINIT4 (CODE)
                                     83 	.area GSINIT5 (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area CSEG    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'memccpy'
                                    105 ;------------------------------------------------------------
                                    106 ;src                       Allocated with name '_memccpy_PARM_2'
                                    107 ;c                         Allocated with name '_memccpy_PARM_3'
                                    108 ;n                         Allocated with name '_memccpy_PARM_4'
                                    109 ;dst                       Allocated to registers r5 r6 r7 
                                    110 ;d                         Allocated with name '_memccpy_d_65536_27'
                                    111 ;s                         Allocated to registers 
                                    112 ;sloc0                     Allocated with name '_memccpy_sloc0_1_0'
                                    113 ;------------------------------------------------------------
                                    114 ;	memccpy.c:31: void *memccpy (void *restrict dst, const void *restrict src, int c, size_t n)
                                    115 ;	-----------------------------------------
                                    116 ;	 function memccpy
                                    117 ;	-----------------------------------------
      000000                        118 _memccpy:
                           000007   119 	ar7 = 0x07
                           000006   120 	ar6 = 0x06
                           000005   121 	ar5 = 0x05
                           000004   122 	ar4 = 0x04
                           000003   123 	ar3 = 0x03
                           000002   124 	ar2 = 0x02
                           000001   125 	ar1 = 0x01
                           000000   126 	ar0 = 0x00
      000000 AD 82            [24]  127 	mov	r5,dpl
      000002 AE 83            [24]  128 	mov	r6,dph
      000004 AF F0            [24]  129 	mov	r7,b
                                    130 ;	memccpy.c:33: char *d = dst;
                                    131 ;	memccpy.c:34: const char *s = src;
      000006 AA*00            [24]  132 	mov	r2,_memccpy_PARM_2
      000008 AB*01            [24]  133 	mov	r3,(_memccpy_PARM_2 + 1)
      00000A AC*02            [24]  134 	mov	r4,(_memccpy_PARM_2 + 2)
                                    135 ;	memccpy.c:36: while (n--)
      00000C 85*05*0A         [24]  136 	mov	_memccpy_sloc0_1_0,_memccpy_PARM_4
      00000F 85*06*0B         [24]  137 	mov	(_memccpy_sloc0_1_0 + 1),(_memccpy_PARM_4 + 1)
      000012                        138 00103$:
      000012 A8*0A            [24]  139 	mov	r0,_memccpy_sloc0_1_0
      000014 A9*0B            [24]  140 	mov	r1,(_memccpy_sloc0_1_0 + 1)
      000016 15*0A            [12]  141 	dec	_memccpy_sloc0_1_0
      000018 74 FF            [12]  142 	mov	a,#0xff
      00001A B5*0A 02         [24]  143 	cjne	a,_memccpy_sloc0_1_0,00123$
      00001D 15*0B            [12]  144 	dec	(_memccpy_sloc0_1_0 + 1)
      00001F                        145 00123$:
      00001F E8               [12]  146 	mov	a,r0
      000020 49               [12]  147 	orl	a,r1
      000021 60 37            [24]  148 	jz	00105$
                                    149 ;	memccpy.c:37: if ((*d++ = *s++) == (unsigned char)c)
      000023 8A 82            [24]  150 	mov	dpl,r2
      000025 8B 83            [24]  151 	mov	dph,r3
      000027 8C F0            [24]  152 	mov	b,r4
      000029 12r00r00         [24]  153 	lcall	__gptrget
      00002C F9               [12]  154 	mov	r1,a
      00002D A3               [24]  155 	inc	dptr
      00002E AA 82            [24]  156 	mov	r2,dpl
      000030 AB 83            [24]  157 	mov	r3,dph
      000032 8D 82            [24]  158 	mov	dpl,r5
      000034 8E 83            [24]  159 	mov	dph,r6
      000036 8F F0            [24]  160 	mov	b,r7
      000038 E9               [12]  161 	mov	a,r1
      000039 12r00r00         [24]  162 	lcall	__gptrput
      00003C A3               [24]  163 	inc	dptr
      00003D AD 82            [24]  164 	mov	r5,dpl
      00003F AE 83            [24]  165 	mov	r6,dph
      000041 8D*07            [24]  166 	mov	_memccpy_d_65536_27,r5
      000043 8E*08            [24]  167 	mov	(_memccpy_d_65536_27 + 1),r6
      000045 8F*09            [24]  168 	mov	(_memccpy_d_65536_27 + 2),r7
      000047 A8*03            [24]  169 	mov	r0,_memccpy_PARM_3
      000049 E9               [12]  170 	mov	a,r1
      00004A B5 00 C5         [24]  171 	cjne	a,ar0,00103$
                                    172 ;	memccpy.c:38: return (d);
      00004D AD*07            [24]  173 	mov	r5,_memccpy_d_65536_27
      00004F AE*08            [24]  174 	mov	r6,(_memccpy_d_65536_27 + 1)
      000051 AF*09            [24]  175 	mov	r7,(_memccpy_d_65536_27 + 2)
      000053 8D 82            [24]  176 	mov	dpl,r5
      000055 8E 83            [24]  177 	mov	dph,r6
      000057 8F F0            [24]  178 	mov	b,r7
      000059 22               [24]  179 	ret
      00005A                        180 00105$:
                                    181 ;	memccpy.c:40: return (0);
      00005A 90 00 00         [24]  182 	mov	dptr,#0x0000
      00005D 75 F0 00         [24]  183 	mov	b,#0x00
                                    184 ;	memccpy.c:41: }
      000060 22               [24]  185 	ret
                                    186 	.area CSEG    (CODE)
                                    187 	.area CONST   (CODE)
                                    188 	.area XINIT   (CODE)
                                    189 	.area CABS    (ABS,CODE)
