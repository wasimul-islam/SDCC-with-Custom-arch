                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wctomb
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wctomb_PARM_2
                                     12 	.globl _wctomb
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 _wctomb_PARM_2:
      000000                         37 	.ds 4
      000004                         38 _wctomb_s_65536_39:
      000004                         39 	.ds 3
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; initialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'wctomb'
                                     97 ;------------------------------------------------------------
                                     98 ;wc                        Allocated with name '_wctomb_PARM_2'
                                     99 ;s                         Allocated with name '_wctomb_s_65536_39'
                                    100 ;------------------------------------------------------------
                                    101 ;	wctomb.c:31: int wctomb(char *s, wchar_t wc)
                                    102 ;	-----------------------------------------
                                    103 ;	 function wctomb
                                    104 ;	-----------------------------------------
      000000                        105 _wctomb:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 85 82*04         [24]  114 	mov	_wctomb_s_65536_39,dpl
      000003 85 83*05         [24]  115 	mov	(_wctomb_s_65536_39 + 1),dph
      000006 85 F0*06         [24]  116 	mov	(_wctomb_s_65536_39 + 2),b
                                    117 ;	wctomb.c:33: if(!s)
      000009 E5*04            [12]  118 	mov	a,_wctomb_s_65536_39
      00000B 45*05            [12]  119 	orl	a,(_wctomb_s_65536_39 + 1)
      00000D 70 04            [24]  120 	jnz	00102$
                                    121 ;	wctomb.c:34: return(0);
      00000F 90 00 00         [24]  122 	mov	dptr,#0x0000
      000012 22               [24]  123 	ret
      000013                        124 00102$:
                                    125 ;	wctomb.c:36: if(wc < 0x80)
      000013 C3               [12]  126 	clr	c
      000014 E5*00            [12]  127 	mov	a,_wctomb_PARM_2
      000016 94 80            [12]  128 	subb	a,#0x80
      000018 E5*01            [12]  129 	mov	a,(_wctomb_PARM_2 + 1)
      00001A 94 00            [12]  130 	subb	a,#0x00
      00001C E5*02            [12]  131 	mov	a,(_wctomb_PARM_2 + 2)
      00001E 94 00            [12]  132 	subb	a,#0x00
      000020 E5*03            [12]  133 	mov	a,(_wctomb_PARM_2 + 3)
      000022 94 00            [12]  134 	subb	a,#0x00
      000024 50 13            [24]  135 	jnc	00117$
                                    136 ;	wctomb.c:38: s[0] = wc;
      000026 AC*00            [24]  137 	mov	r4,_wctomb_PARM_2
      000028 85*04 82         [24]  138 	mov	dpl,_wctomb_s_65536_39
      00002B 85*05 83         [24]  139 	mov	dph,(_wctomb_s_65536_39 + 1)
      00002E 85*06 F0         [24]  140 	mov	b,(_wctomb_s_65536_39 + 2)
      000031 EC               [12]  141 	mov	a,r4
      000032 12r00r00         [24]  142 	lcall	__gptrput
                                    143 ;	wctomb.c:39: return(1);
      000035 90 00 01         [24]  144 	mov	dptr,#0x0001
      000038 22               [24]  145 	ret
      000039                        146 00117$:
                                    147 ;	wctomb.c:41: else if(wc < 0x800)
      000039 C3               [12]  148 	clr	c
      00003A E5*01            [12]  149 	mov	a,(_wctomb_PARM_2 + 1)
      00003C 94 08            [12]  150 	subb	a,#0x08
      00003E E5*02            [12]  151 	mov	a,(_wctomb_PARM_2 + 2)
      000040 94 00            [12]  152 	subb	a,#0x00
      000042 E5*03            [12]  153 	mov	a,(_wctomb_PARM_2 + 3)
      000044 94 00            [12]  154 	subb	a,#0x00
      000046 50 43            [24]  155 	jnc	00114$
                                    156 ;	wctomb.c:43: s[0] = (wc >> 6) & 0x1f | 0xc0;
      000048 AB*00            [24]  157 	mov	r3,_wctomb_PARM_2
      00004A E5*01            [12]  158 	mov	a,(_wctomb_PARM_2 + 1)
      00004C A2 E7            [12]  159 	mov	c,acc.7
      00004E CB               [12]  160 	xch	a,r3
      00004F 33               [12]  161 	rlc	a
      000050 CB               [12]  162 	xch	a,r3
      000051 33               [12]  163 	rlc	a
      000052 A2 E7            [12]  164 	mov	c,acc.7
      000054 CB               [12]  165 	xch	a,r3
      000055 33               [12]  166 	rlc	a
      000056 CB               [12]  167 	xch	a,r3
      000057 33               [12]  168 	rlc	a
      000058 CB               [12]  169 	xch	a,r3
      000059 54 03            [12]  170 	anl	a,#0x03
      00005B 74 1F            [12]  171 	mov	a,#0x1f
      00005D 5B               [12]  172 	anl	a,r3
      00005E 44 C0            [12]  173 	orl	a,#0xc0
      000060 85*04 82         [24]  174 	mov	dpl,_wctomb_s_65536_39
      000063 85*05 83         [24]  175 	mov	dph,(_wctomb_s_65536_39 + 1)
      000066 85*06 F0         [24]  176 	mov	b,(_wctomb_s_65536_39 + 2)
      000069 12r00r00         [24]  177 	lcall	__gptrput
                                    178 ;	wctomb.c:44: s[1] = (wc >> 0) & 0x3f | 0x80;
      00006C 74 01            [12]  179 	mov	a,#0x01
      00006E 25*04            [12]  180 	add	a,_wctomb_s_65536_39
      000070 FA               [12]  181 	mov	r2,a
      000071 E4               [12]  182 	clr	a
      000072 35*05            [12]  183 	addc	a,(_wctomb_s_65536_39 + 1)
      000074 FB               [12]  184 	mov	r3,a
      000075 AC*06            [24]  185 	mov	r4,(_wctomb_s_65536_39 + 2)
      000077 A9*00            [24]  186 	mov	r1,_wctomb_PARM_2
      000079 74 3F            [12]  187 	mov	a,#0x3f
      00007B 59               [12]  188 	anl	a,r1
      00007C 44 80            [12]  189 	orl	a,#0x80
      00007E 8A 82            [24]  190 	mov	dpl,r2
      000080 8B 83            [24]  191 	mov	dph,r3
      000082 8C F0            [24]  192 	mov	b,r4
      000084 12r00r00         [24]  193 	lcall	__gptrput
                                    194 ;	wctomb.c:45: return(2);
      000087 90 00 02         [24]  195 	mov	dptr,#0x0002
      00008A 22               [24]  196 	ret
      00008B                        197 00114$:
                                    198 ;	wctomb.c:47: else if(wc >= 0xd800 && wc < 0xe000) // Unpaired surrogate
      00008B C3               [12]  199 	clr	c
      00008C E5*01            [12]  200 	mov	a,(_wctomb_PARM_2 + 1)
      00008E 94 D8            [12]  201 	subb	a,#0xd8
      000090 E5*02            [12]  202 	mov	a,(_wctomb_PARM_2 + 2)
      000092 94 00            [12]  203 	subb	a,#0x00
      000094 E5*03            [12]  204 	mov	a,(_wctomb_PARM_2 + 3)
      000096 94 00            [12]  205 	subb	a,#0x00
      000098 40 12            [24]  206 	jc	00110$
      00009A E5*01            [12]  207 	mov	a,(_wctomb_PARM_2 + 1)
      00009C 94 E0            [12]  208 	subb	a,#0xe0
      00009E E5*02            [12]  209 	mov	a,(_wctomb_PARM_2 + 2)
      0000A0 94 00            [12]  210 	subb	a,#0x00
      0000A2 E5*03            [12]  211 	mov	a,(_wctomb_PARM_2 + 3)
      0000A4 94 00            [12]  212 	subb	a,#0x00
      0000A6 50 04            [24]  213 	jnc	00110$
                                    214 ;	wctomb.c:48: return(-1);
      0000A8 90 FF FF         [24]  215 	mov	dptr,#0xffff
      0000AB 22               [24]  216 	ret
      0000AC                        217 00110$:
                                    218 ;	wctomb.c:49: else if(wc < 0x10000)
      0000AC C3               [12]  219 	clr	c
      0000AD E5*02            [12]  220 	mov	a,(_wctomb_PARM_2 + 2)
      0000AF 94 01            [12]  221 	subb	a,#0x01
      0000B1 E5*03            [12]  222 	mov	a,(_wctomb_PARM_2 + 3)
      0000B3 94 00            [12]  223 	subb	a,#0x00
      0000B5 50 78            [24]  224 	jnc	00107$
                                    225 ;	wctomb.c:51: s[0] = (wc >> 12) & 0x0f | 0xe0;
      0000B7 A9*01            [24]  226 	mov	r1,(_wctomb_PARM_2 + 1)
      0000B9 E5*02            [12]  227 	mov	a,(_wctomb_PARM_2 + 2)
      0000BB C4               [12]  228 	swap	a
      0000BC C9               [12]  229 	xch	a,r1
      0000BD C4               [12]  230 	swap	a
      0000BE 54 0F            [12]  231 	anl	a,#0x0f
      0000C0 69               [12]  232 	xrl	a,r1
      0000C1 C9               [12]  233 	xch	a,r1
      0000C2 54 0F            [12]  234 	anl	a,#0x0f
      0000C4 C9               [12]  235 	xch	a,r1
      0000C5 69               [12]  236 	xrl	a,r1
      0000C6 C9               [12]  237 	xch	a,r1
      0000C7 FA               [12]  238 	mov	r2,a
      0000C8 E5*03            [12]  239 	mov	a,(_wctomb_PARM_2 + 3)
      0000CA C4               [12]  240 	swap	a
      0000CB 54 F0            [12]  241 	anl	a,#0xf0
      0000CD 4A               [12]  242 	orl	a,r2
      0000CE E5*03            [12]  243 	mov	a,(_wctomb_PARM_2 + 3)
      0000D0 C4               [12]  244 	swap	a
      0000D1 54 0F            [12]  245 	anl	a,#0x0f
      0000D3 74 0F            [12]  246 	mov	a,#0x0f
      0000D5 59               [12]  247 	anl	a,r1
      0000D6 44 E0            [12]  248 	orl	a,#0xe0
      0000D8 85*04 82         [24]  249 	mov	dpl,_wctomb_s_65536_39
      0000DB 85*05 83         [24]  250 	mov	dph,(_wctomb_s_65536_39 + 1)
      0000DE 85*06 F0         [24]  251 	mov	b,(_wctomb_s_65536_39 + 2)
      0000E1 12r00r00         [24]  252 	lcall	__gptrput
                                    253 ;	wctomb.c:52: s[1] = (wc >> 6) & 0x3f  | 0x80;
      0000E4 74 01            [12]  254 	mov	a,#0x01
      0000E6 25*04            [12]  255 	add	a,_wctomb_s_65536_39
      0000E8 FA               [12]  256 	mov	r2,a
      0000E9 E4               [12]  257 	clr	a
      0000EA 35*05            [12]  258 	addc	a,(_wctomb_s_65536_39 + 1)
      0000EC FB               [12]  259 	mov	r3,a
      0000ED AC*06            [24]  260 	mov	r4,(_wctomb_s_65536_39 + 2)
      0000EF A8*00            [24]  261 	mov	r0,_wctomb_PARM_2
      0000F1 E5*01            [12]  262 	mov	a,(_wctomb_PARM_2 + 1)
      0000F3 A2 E7            [12]  263 	mov	c,acc.7
      0000F5 C8               [12]  264 	xch	a,r0
      0000F6 33               [12]  265 	rlc	a
      0000F7 C8               [12]  266 	xch	a,r0
      0000F8 33               [12]  267 	rlc	a
      0000F9 A2 E7            [12]  268 	mov	c,acc.7
      0000FB C8               [12]  269 	xch	a,r0
      0000FC 33               [12]  270 	rlc	a
      0000FD C8               [12]  271 	xch	a,r0
      0000FE 33               [12]  272 	rlc	a
      0000FF C8               [12]  273 	xch	a,r0
      000100 54 03            [12]  274 	anl	a,#0x03
      000102 74 3F            [12]  275 	mov	a,#0x3f
      000104 58               [12]  276 	anl	a,r0
      000105 44 80            [12]  277 	orl	a,#0x80
      000107 8A 82            [24]  278 	mov	dpl,r2
      000109 8B 83            [24]  279 	mov	dph,r3
      00010B 8C F0            [24]  280 	mov	b,r4
      00010D 12r00r00         [24]  281 	lcall	__gptrput
                                    282 ;	wctomb.c:53: s[2] = (wc >> 0) & 0x3f  | 0x80;
      000110 74 02            [12]  283 	mov	a,#0x02
      000112 25*04            [12]  284 	add	a,_wctomb_s_65536_39
      000114 FA               [12]  285 	mov	r2,a
      000115 E4               [12]  286 	clr	a
      000116 35*05            [12]  287 	addc	a,(_wctomb_s_65536_39 + 1)
      000118 FB               [12]  288 	mov	r3,a
      000119 AC*06            [24]  289 	mov	r4,(_wctomb_s_65536_39 + 2)
      00011B A9*00            [24]  290 	mov	r1,_wctomb_PARM_2
      00011D 74 3F            [12]  291 	mov	a,#0x3f
      00011F 59               [12]  292 	anl	a,r1
      000120 44 80            [12]  293 	orl	a,#0x80
      000122 8A 82            [24]  294 	mov	dpl,r2
      000124 8B 83            [24]  295 	mov	dph,r3
      000126 8C F0            [24]  296 	mov	b,r4
      000128 12r00r00         [24]  297 	lcall	__gptrput
                                    298 ;	wctomb.c:54: return(3);
      00012B 90 00 03         [24]  299 	mov	dptr,#0x0003
      00012E 22               [24]  300 	ret
      00012F                        301 00107$:
                                    302 ;	wctomb.c:56: else if(wc < 0x110000)
      00012F C3               [12]  303 	clr	c
      000130 E5*02            [12]  304 	mov	a,(_wctomb_PARM_2 + 2)
      000132 94 11            [12]  305 	subb	a,#0x11
      000134 E5*03            [12]  306 	mov	a,(_wctomb_PARM_2 + 3)
      000136 94 00            [12]  307 	subb	a,#0x00
      000138 40 03            [24]  308 	jc	00155$
      00013A 02r01rDD         [24]  309 	ljmp	00104$
      00013D                        310 00155$:
                                    311 ;	wctomb.c:58: s[0] = (wc >> 18) & 0x07 | 0xf0;
      00013D A9*02            [24]  312 	mov	r1,(_wctomb_PARM_2 + 2)
      00013F E5*03            [12]  313 	mov	a,(_wctomb_PARM_2 + 3)
      000141 C3               [12]  314 	clr	c
      000142 13               [12]  315 	rrc	a
      000143 C9               [12]  316 	xch	a,r1
      000144 13               [12]  317 	rrc	a
      000145 C9               [12]  318 	xch	a,r1
      000146 C3               [12]  319 	clr	c
      000147 13               [12]  320 	rrc	a
      000148 C9               [12]  321 	xch	a,r1
      000149 13               [12]  322 	rrc	a
      00014A C9               [12]  323 	xch	a,r1
      00014B E4               [12]  324 	clr	a
      00014C 74 07            [12]  325 	mov	a,#0x07
      00014E 59               [12]  326 	anl	a,r1
      00014F 44 F0            [12]  327 	orl	a,#0xf0
      000151 85*04 82         [24]  328 	mov	dpl,_wctomb_s_65536_39
      000154 85*05 83         [24]  329 	mov	dph,(_wctomb_s_65536_39 + 1)
      000157 85*06 F0         [24]  330 	mov	b,(_wctomb_s_65536_39 + 2)
      00015A 12r00r00         [24]  331 	lcall	__gptrput
                                    332 ;	wctomb.c:59: s[1] = (wc >> 12) & 0x3f | 0x80;
      00015D 74 01            [12]  333 	mov	a,#0x01
      00015F 25*04            [12]  334 	add	a,_wctomb_s_65536_39
      000161 FA               [12]  335 	mov	r2,a
      000162 E4               [12]  336 	clr	a
      000163 35*05            [12]  337 	addc	a,(_wctomb_s_65536_39 + 1)
      000165 FB               [12]  338 	mov	r3,a
      000166 AC*06            [24]  339 	mov	r4,(_wctomb_s_65536_39 + 2)
      000168 A8*01            [24]  340 	mov	r0,(_wctomb_PARM_2 + 1)
      00016A E5*02            [12]  341 	mov	a,(_wctomb_PARM_2 + 2)
      00016C C4               [12]  342 	swap	a
      00016D C8               [12]  343 	xch	a,r0
      00016E C4               [12]  344 	swap	a
      00016F 54 0F            [12]  345 	anl	a,#0x0f
      000171 68               [12]  346 	xrl	a,r0
      000172 C8               [12]  347 	xch	a,r0
      000173 54 0F            [12]  348 	anl	a,#0x0f
      000175 C8               [12]  349 	xch	a,r0
      000176 68               [12]  350 	xrl	a,r0
      000177 C8               [12]  351 	xch	a,r0
      000178 F9               [12]  352 	mov	r1,a
      000179 E5*03            [12]  353 	mov	a,(_wctomb_PARM_2 + 3)
      00017B C4               [12]  354 	swap	a
      00017C 54 F0            [12]  355 	anl	a,#0xf0
      00017E 49               [12]  356 	orl	a,r1
      00017F E5*03            [12]  357 	mov	a,(_wctomb_PARM_2 + 3)
      000181 C4               [12]  358 	swap	a
      000182 54 0F            [12]  359 	anl	a,#0x0f
      000184 74 3F            [12]  360 	mov	a,#0x3f
      000186 58               [12]  361 	anl	a,r0
      000187 44 80            [12]  362 	orl	a,#0x80
      000189 8A 82            [24]  363 	mov	dpl,r2
      00018B 8B 83            [24]  364 	mov	dph,r3
      00018D 8C F0            [24]  365 	mov	b,r4
      00018F 12r00r00         [24]  366 	lcall	__gptrput
                                    367 ;	wctomb.c:60: s[2] = (wc >> 6) & 0x3f  | 0x80;
      000192 74 02            [12]  368 	mov	a,#0x02
      000194 25*04            [12]  369 	add	a,_wctomb_s_65536_39
      000196 FD               [12]  370 	mov	r5,a
      000197 E4               [12]  371 	clr	a
      000198 35*05            [12]  372 	addc	a,(_wctomb_s_65536_39 + 1)
      00019A FE               [12]  373 	mov	r6,a
      00019B AF*06            [24]  374 	mov	r7,(_wctomb_s_65536_39 + 2)
      00019D AB*00            [24]  375 	mov	r3,_wctomb_PARM_2
      00019F E5*01            [12]  376 	mov	a,(_wctomb_PARM_2 + 1)
      0001A1 A2 E7            [12]  377 	mov	c,acc.7
      0001A3 CB               [12]  378 	xch	a,r3
      0001A4 33               [12]  379 	rlc	a
      0001A5 CB               [12]  380 	xch	a,r3
      0001A6 33               [12]  381 	rlc	a
      0001A7 A2 E7            [12]  382 	mov	c,acc.7
      0001A9 CB               [12]  383 	xch	a,r3
      0001AA 33               [12]  384 	rlc	a
      0001AB CB               [12]  385 	xch	a,r3
      0001AC 33               [12]  386 	rlc	a
      0001AD CB               [12]  387 	xch	a,r3
      0001AE 54 03            [12]  388 	anl	a,#0x03
      0001B0 74 3F            [12]  389 	mov	a,#0x3f
      0001B2 5B               [12]  390 	anl	a,r3
      0001B3 44 80            [12]  391 	orl	a,#0x80
      0001B5 8D 82            [24]  392 	mov	dpl,r5
      0001B7 8E 83            [24]  393 	mov	dph,r6
      0001B9 8F F0            [24]  394 	mov	b,r7
      0001BB 12r00r00         [24]  395 	lcall	__gptrput
                                    396 ;	wctomb.c:61: s[3] = (wc >> 0) & 0x3f  | 0x80;
      0001BE 74 03            [12]  397 	mov	a,#0x03
      0001C0 25*04            [12]  398 	add	a,_wctomb_s_65536_39
      0001C2 FD               [12]  399 	mov	r5,a
      0001C3 E4               [12]  400 	clr	a
      0001C4 35*05            [12]  401 	addc	a,(_wctomb_s_65536_39 + 1)
      0001C6 FE               [12]  402 	mov	r6,a
      0001C7 AF*06            [24]  403 	mov	r7,(_wctomb_s_65536_39 + 2)
      0001C9 AC*00            [24]  404 	mov	r4,_wctomb_PARM_2
      0001CB 74 3F            [12]  405 	mov	a,#0x3f
      0001CD 5C               [12]  406 	anl	a,r4
      0001CE 44 80            [12]  407 	orl	a,#0x80
      0001D0 8D 82            [24]  408 	mov	dpl,r5
      0001D2 8E 83            [24]  409 	mov	dph,r6
      0001D4 8F F0            [24]  410 	mov	b,r7
      0001D6 12r00r00         [24]  411 	lcall	__gptrput
                                    412 ;	wctomb.c:62: return(4);
      0001D9 90 00 04         [24]  413 	mov	dptr,#0x0004
      0001DC 22               [24]  414 	ret
      0001DD                        415 00104$:
                                    416 ;	wctomb.c:65: return(-1);
      0001DD 90 FF FF         [24]  417 	mov	dptr,#0xffff
                                    418 ;	wctomb.c:66: }
      0001E0 22               [24]  419 	ret
                                    420 	.area CSEG    (CODE)
                                    421 	.area CONST   (CODE)
                                    422 	.area XINIT   (CODE)
                                    423 	.area CABS    (ABS,CODE)
