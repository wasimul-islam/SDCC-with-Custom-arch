                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strdup
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl _strlen
                                     13 	.globl _strcpy
                                     14 	.globl _strdup
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'strdup'
                                     94 ;------------------------------------------------------------
                                     95 ;s                         Allocated to registers r5 r6 r7 
                                     96 ;r                         Allocated to registers r3 r2 r4 
                                     97 ;------------------------------------------------------------
                                     98 ;	strdup.c:33: char *strdup (const char *s)
                                     99 ;	-----------------------------------------
                                    100 ;	 function strdup
                                    101 ;	-----------------------------------------
      000000                        102 _strdup:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
                                    111 ;	strdup.c:35: char *r = malloc(strlen(s) + 1);
      000000 AD 82            [24]  112 	mov	r5,dpl
      000002 AE 83            [24]  113 	mov	r6,dph
      000004 AF F0            [24]  114 	mov	r7,b
      000006 C0 07            [24]  115 	push	ar7
      000008 C0 06            [24]  116 	push	ar6
      00000A C0 05            [24]  117 	push	ar5
      00000C 12r00r00         [24]  118 	lcall	_strlen
      00000F E5 82            [12]  119 	mov	a,dpl
      000011 85 83 F0         [24]  120 	mov	b,dph
      000014 24 01            [12]  121 	add	a,#0x01
      000016 F5 82            [12]  122 	mov	dpl,a
      000018 E4               [12]  123 	clr	a
      000019 35 F0            [12]  124 	addc	a,b
      00001B F5 83            [12]  125 	mov	dph,a
      00001D 12r00r00         [24]  126 	lcall	_malloc
      000020 AB 82            [24]  127 	mov	r3,dpl
      000022 AC 83            [24]  128 	mov	r4,dph
      000024 D0 05            [24]  129 	pop	ar5
      000026 D0 06            [24]  130 	pop	ar6
      000028 D0 07            [24]  131 	pop	ar7
      00002A 8C 02            [24]  132 	mov	ar2,r4
      00002C 7C 00            [12]  133 	mov	r4,#0x00
                                    134 ;	strdup.c:36: if (r)
      00002E EB               [12]  135 	mov	a,r3
      00002F 4A               [12]  136 	orl	a,r2
      000030 60 1B            [24]  137 	jz	00102$
                                    138 ;	strdup.c:37: strcpy(r, s);
      000032 8D*00            [24]  139 	mov	_strcpy_PARM_2,r5
      000034 8E*01            [24]  140 	mov	(_strcpy_PARM_2 + 1),r6
      000036 8F*02            [24]  141 	mov	(_strcpy_PARM_2 + 2),r7
      000038 8B 82            [24]  142 	mov	dpl,r3
      00003A 8A 83            [24]  143 	mov	dph,r2
      00003C 8C F0            [24]  144 	mov	b,r4
      00003E C0 04            [24]  145 	push	ar4
      000040 C0 03            [24]  146 	push	ar3
      000042 C0 02            [24]  147 	push	ar2
      000044 12r00r00         [24]  148 	lcall	_strcpy
      000047 D0 02            [24]  149 	pop	ar2
      000049 D0 03            [24]  150 	pop	ar3
      00004B D0 04            [24]  151 	pop	ar4
      00004D                        152 00102$:
                                    153 ;	strdup.c:38: return (r);
      00004D 8B 82            [24]  154 	mov	dpl,r3
      00004F 8A 83            [24]  155 	mov	dph,r2
      000051 8C F0            [24]  156 	mov	b,r4
                                    157 ;	strdup.c:39: }
      000053 22               [24]  158 	ret
                                    159 	.area CSEG    (CODE)
                                    160 	.area CONST   (CODE)
                                    161 	.area XINIT   (CODE)
                                    162 	.area CABS    (ABS,CODE)
