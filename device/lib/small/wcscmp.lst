                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcscmp
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wcscmp_PARM_2
                                     12 	.globl _wcscmp
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 _wcscmp_PARM_2:
      000000                         37 	.ds 3
      000003                         38 _wcscmp_sloc0_1_0:
      000003                         39 	.ds 4
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; initialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'wcscmp'
                                     97 ;------------------------------------------------------------
                                     98 ;s2                        Allocated with name '_wcscmp_PARM_2'
                                     99 ;s1                        Allocated to registers 
                                    100 ;sloc0                     Allocated with name '_wcscmp_sloc0_1_0'
                                    101 ;------------------------------------------------------------
                                    102 ;	wcscmp.c:31: int wcscmp(const wchar_t *s1, const wchar_t *s2)
                                    103 ;	-----------------------------------------
                                    104 ;	 function wcscmp
                                    105 ;	-----------------------------------------
      000000                        106 _wcscmp:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 AF 82            [24]  115 	mov	r7,dpl
      000002 AD 83            [24]  116 	mov	r5,dph
      000004 AE F0            [24]  117 	mov	r6,b
                                    118 ;	wcscmp.c:33: while(*s1 == *s2 && *s1)
      000006 AC*00            [24]  119 	mov	r4,_wcscmp_PARM_2
      000008 AA*01            [24]  120 	mov	r2,(_wcscmp_PARM_2 + 1)
      00000A AB*02            [24]  121 	mov	r3,(_wcscmp_PARM_2 + 2)
      00000C                        122 00102$:
      00000C 8F 82            [24]  123 	mov	dpl,r7
      00000E 8D 83            [24]  124 	mov	dph,r5
      000010 8E F0            [24]  125 	mov	b,r6
      000012 12r00r00         [24]  126 	lcall	__gptrget
      000015 F5*03            [12]  127 	mov	_wcscmp_sloc0_1_0,a
      000017 A3               [24]  128 	inc	dptr
      000018 12r00r00         [24]  129 	lcall	__gptrget
      00001B F5*04            [12]  130 	mov	(_wcscmp_sloc0_1_0 + 1),a
      00001D A3               [24]  131 	inc	dptr
      00001E 12r00r00         [24]  132 	lcall	__gptrget
      000021 F5*05            [12]  133 	mov	(_wcscmp_sloc0_1_0 + 2),a
      000023 A3               [24]  134 	inc	dptr
      000024 12r00r00         [24]  135 	lcall	__gptrget
      000027 F5*06            [12]  136 	mov	(_wcscmp_sloc0_1_0 + 3),a
      000029 C0 07            [24]  137 	push	ar7
      00002B C0 05            [24]  138 	push	ar5
      00002D C0 06            [24]  139 	push	ar6
      00002F 8C 82            [24]  140 	mov	dpl,r4
      000031 8A 83            [24]  141 	mov	dph,r2
      000033 8B F0            [24]  142 	mov	b,r3
      000035 12r00r00         [24]  143 	lcall	__gptrget
      000038 F8               [12]  144 	mov	r0,a
      000039 A3               [24]  145 	inc	dptr
      00003A 12r00r00         [24]  146 	lcall	__gptrget
      00003D F9               [12]  147 	mov	r1,a
      00003E A3               [24]  148 	inc	dptr
      00003F 12r00r00         [24]  149 	lcall	__gptrget
      000042 FE               [12]  150 	mov	r6,a
      000043 A3               [24]  151 	inc	dptr
      000044 12r00r00         [24]  152 	lcall	__gptrget
      000047 FF               [12]  153 	mov	r7,a
      000048 E8               [12]  154 	mov	a,r0
      000049 B5*03 0E         [24]  155 	cjne	a,_wcscmp_sloc0_1_0,00132$
      00004C E9               [12]  156 	mov	a,r1
      00004D B5*04 0A         [24]  157 	cjne	a,(_wcscmp_sloc0_1_0 + 1),00132$
      000050 EE               [12]  158 	mov	a,r6
      000051 B5*05 06         [24]  159 	cjne	a,(_wcscmp_sloc0_1_0 + 2),00132$
      000054 EF               [12]  160 	mov	a,r7
      000055 B5*06 02         [24]  161 	cjne	a,(_wcscmp_sloc0_1_0 + 3),00132$
      000058 80 08            [24]  162 	sjmp	00133$
      00005A                        163 00132$:
      00005A D0 06            [24]  164 	pop	ar6
      00005C D0 05            [24]  165 	pop	ar5
      00005E D0 07            [24]  166 	pop	ar7
      000060 80 20            [24]  167 	sjmp	00104$
      000062                        168 00133$:
      000062 D0 06            [24]  169 	pop	ar6
      000064 D0 05            [24]  170 	pop	ar5
      000066 D0 07            [24]  171 	pop	ar7
      000068 E5*03            [12]  172 	mov	a,_wcscmp_sloc0_1_0
      00006A 45*04            [12]  173 	orl	a,(_wcscmp_sloc0_1_0 + 1)
      00006C 45*05            [12]  174 	orl	a,(_wcscmp_sloc0_1_0 + 2)
      00006E 45*06            [12]  175 	orl	a,(_wcscmp_sloc0_1_0 + 3)
      000070 60 10            [24]  176 	jz	00104$
                                    177 ;	wcscmp.c:34: s1++, s2++;
      000072 74 04            [12]  178 	mov	a,#0x04
      000074 2F               [12]  179 	add	a,r7
      000075 FF               [12]  180 	mov	r7,a
      000076 E4               [12]  181 	clr	a
      000077 3D               [12]  182 	addc	a,r5
      000078 FD               [12]  183 	mov	r5,a
      000079 74 04            [12]  184 	mov	a,#0x04
      00007B 2C               [12]  185 	add	a,r4
      00007C FC               [12]  186 	mov	r4,a
      00007D E4               [12]  187 	clr	a
      00007E 3A               [12]  188 	addc	a,r2
      00007F FA               [12]  189 	mov	r2,a
      000080 80 8A            [24]  190 	sjmp	00102$
      000082                        191 00104$:
                                    192 ;	wcscmp.c:36: if(*s1 < *s2)
      000082 8F 82            [24]  193 	mov	dpl,r7
      000084 8D 83            [24]  194 	mov	dph,r5
      000086 8E F0            [24]  195 	mov	b,r6
      000088 12r00r00         [24]  196 	lcall	__gptrget
      00008B F9               [12]  197 	mov	r1,a
      00008C A3               [24]  198 	inc	dptr
      00008D 12r00r00         [24]  199 	lcall	__gptrget
      000090 FD               [12]  200 	mov	r5,a
      000091 A3               [24]  201 	inc	dptr
      000092 12r00r00         [24]  202 	lcall	__gptrget
      000095 FE               [12]  203 	mov	r6,a
      000096 A3               [24]  204 	inc	dptr
      000097 12r00r00         [24]  205 	lcall	__gptrget
      00009A FF               [12]  206 	mov	r7,a
      00009B 8C 82            [24]  207 	mov	dpl,r4
      00009D 8A 83            [24]  208 	mov	dph,r2
      00009F 8B F0            [24]  209 	mov	b,r3
      0000A1 12r00r00         [24]  210 	lcall	__gptrget
      0000A4 F8               [12]  211 	mov	r0,a
      0000A5 A3               [24]  212 	inc	dptr
      0000A6 12r00r00         [24]  213 	lcall	__gptrget
      0000A9 FA               [12]  214 	mov	r2,a
      0000AA A3               [24]  215 	inc	dptr
      0000AB 12r00r00         [24]  216 	lcall	__gptrget
      0000AE FB               [12]  217 	mov	r3,a
      0000AF A3               [24]  218 	inc	dptr
      0000B0 12r00r00         [24]  219 	lcall	__gptrget
      0000B3 FC               [12]  220 	mov	r4,a
      0000B4 C3               [12]  221 	clr	c
      0000B5 E9               [12]  222 	mov	a,r1
      0000B6 98               [12]  223 	subb	a,r0
      0000B7 ED               [12]  224 	mov	a,r5
      0000B8 9A               [12]  225 	subb	a,r2
      0000B9 EE               [12]  226 	mov	a,r6
      0000BA 9B               [12]  227 	subb	a,r3
      0000BB EF               [12]  228 	mov	a,r7
      0000BC 9C               [12]  229 	subb	a,r4
      0000BD 50 04            [24]  230 	jnc	00106$
                                    231 ;	wcscmp.c:37: return(-1);
      0000BF 90 FF FF         [24]  232 	mov	dptr,#0xffff
      0000C2 22               [24]  233 	ret
      0000C3                        234 00106$:
                                    235 ;	wcscmp.c:38: if(*s1 > *s2)
      0000C3 C3               [12]  236 	clr	c
      0000C4 E8               [12]  237 	mov	a,r0
      0000C5 99               [12]  238 	subb	a,r1
      0000C6 EA               [12]  239 	mov	a,r2
      0000C7 9D               [12]  240 	subb	a,r5
      0000C8 EB               [12]  241 	mov	a,r3
      0000C9 9E               [12]  242 	subb	a,r6
      0000CA EC               [12]  243 	mov	a,r4
      0000CB 9F               [12]  244 	subb	a,r7
      0000CC 50 04            [24]  245 	jnc	00108$
                                    246 ;	wcscmp.c:39: return(1);
      0000CE 90 00 01         [24]  247 	mov	dptr,#0x0001
      0000D1 22               [24]  248 	ret
      0000D2                        249 00108$:
                                    250 ;	wcscmp.c:40: return(0);
      0000D2 90 00 00         [24]  251 	mov	dptr,#0x0000
                                    252 ;	wcscmp.c:41: }
      0000D5 22               [24]  253 	ret
                                    254 	.area CSEG    (CODE)
                                    255 	.area CONST   (CODE)
                                    256 	.area XINIT   (CODE)
                                    257 	.area CABS    (ABS,CODE)
