                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memcmp
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memcmp_PARM_3
                                     12 	.globl _memcmp_PARM_2
                                     13 	.globl _memcmp
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _memcmp_PARM_2:
      000000                         38 	.ds 3
      000003                         39 _memcmp_PARM_3:
      000003                         40 	.ds 2
      000005                         41 _memcmp_buf1_65536_26:
      000005                         42 	.ds 3
      000008                         43 _memcmp_sloc0_1_0:
      000008                         44 	.ds 3
                                     45 ;--------------------------------------------------------
                                     46 ; indirectly addressable internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area ISEG    (DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; absolute internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area IABS    (ABS,DATA)
                                     53 	.area IABS    (ABS,DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; bit data
                                     56 ;--------------------------------------------------------
                                     57 	.area BSEG    (BIT)
                                     58 ;--------------------------------------------------------
                                     59 ; paged external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area PSEG    (PAG,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; uninitialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XSEG    (XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; initialized external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'memcmp'
                                    102 ;------------------------------------------------------------
                                    103 ;buf2                      Allocated with name '_memcmp_PARM_2'
                                    104 ;count                     Allocated with name '_memcmp_PARM_3'
                                    105 ;buf1                      Allocated with name '_memcmp_buf1_65536_26'
                                    106 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                                    107 ;------------------------------------------------------------
                                    108 ;	_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                                    109 ;	-----------------------------------------
                                    110 ;	 function memcmp
                                    111 ;	-----------------------------------------
      000000                        112 _memcmp:
                           000007   113 	ar7 = 0x07
                           000006   114 	ar6 = 0x06
                           000005   115 	ar5 = 0x05
                           000004   116 	ar4 = 0x04
                           000003   117 	ar3 = 0x03
                           000002   118 	ar2 = 0x02
                           000001   119 	ar1 = 0x01
                           000000   120 	ar0 = 0x00
      000000 85 82*05         [24]  121 	mov	_memcmp_buf1_65536_26,dpl
      000003 85 83*06         [24]  122 	mov	(_memcmp_buf1_65536_26 + 1),dph
      000006 85 F0*07         [24]  123 	mov	(_memcmp_buf1_65536_26 + 2),b
                                    124 ;	_memcmp.c:33: if (!count)
      000009 E5*03            [12]  125 	mov	a,_memcmp_PARM_3
      00000B 45*04            [12]  126 	orl	a,(_memcmp_PARM_3 + 1)
      00000D 70 04            [24]  127 	jnz	00112$
                                    128 ;	_memcmp.c:34: return(0);
      00000F 90 00 00         [24]  129 	mov	dptr,#0x0000
      000012 22               [24]  130 	ret
                                    131 ;	_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
      000013                        132 00112$:
      000013 AB*03            [24]  133 	mov	r3,_memcmp_PARM_3
      000015 AC*04            [24]  134 	mov	r4,(_memcmp_PARM_3 + 1)
      000017                        135 00104$:
      000017 1B               [12]  136 	dec	r3
      000018 BB FF 01         [24]  137 	cjne	r3,#0xff,00127$
      00001B 1C               [12]  138 	dec	r4
      00001C                        139 00127$:
      00001C EB               [12]  140 	mov	a,r3
      00001D 4C               [12]  141 	orl	a,r4
      00001E 60 48            [24]  142 	jz	00106$
      000020 A8*05            [24]  143 	mov	r0,_memcmp_buf1_65536_26
      000022 A9*06            [24]  144 	mov	r1,(_memcmp_buf1_65536_26 + 1)
      000024 AA*07            [24]  145 	mov	r2,(_memcmp_buf1_65536_26 + 2)
      000026 88 82            [24]  146 	mov	dpl,r0
      000028 89 83            [24]  147 	mov	dph,r1
      00002A 8A F0            [24]  148 	mov	b,r2
      00002C 12r00r00         [24]  149 	lcall	__gptrget
      00002F FF               [12]  150 	mov	r7,a
      000030 85*00*08         [24]  151 	mov	_memcmp_sloc0_1_0,_memcmp_PARM_2
      000033 85*01*09         [24]  152 	mov	(_memcmp_sloc0_1_0 + 1),(_memcmp_PARM_2 + 1)
      000036 85*02*0A         [24]  153 	mov	(_memcmp_sloc0_1_0 + 2),(_memcmp_PARM_2 + 2)
      000039 85*08 82         [24]  154 	mov	dpl,_memcmp_sloc0_1_0
      00003C 85*09 83         [24]  155 	mov	dph,(_memcmp_sloc0_1_0 + 1)
      00003F 85*0A F0         [24]  156 	mov	b,(_memcmp_sloc0_1_0 + 2)
      000042 12r00r00         [24]  157 	lcall	__gptrget
      000045 FE               [12]  158 	mov	r6,a
      000046 EF               [12]  159 	mov	a,r7
      000047 B5 06 1E         [24]  160 	cjne	a,ar6,00106$
                                    161 ;	_memcmp.c:37: buf1 = (char *)buf1 + 1;
      00004A 08               [12]  162 	inc	r0
      00004B B8 00 01         [24]  163 	cjne	r0,#0x00,00131$
      00004E 09               [12]  164 	inc	r1
      00004F                        165 00131$:
      00004F 88*05            [24]  166 	mov	_memcmp_buf1_65536_26,r0
      000051 89*06            [24]  167 	mov	(_memcmp_buf1_65536_26 + 1),r1
      000053 8A*07            [24]  168 	mov	(_memcmp_buf1_65536_26 + 2),r2
                                    169 ;	_memcmp.c:38: buf2 = (char *)buf2 + 1;
      000055 74 01            [12]  170 	mov	a,#0x01
      000057 25*08            [12]  171 	add	a,_memcmp_sloc0_1_0
      000059 FD               [12]  172 	mov	r5,a
      00005A E4               [12]  173 	clr	a
      00005B 35*09            [12]  174 	addc	a,(_memcmp_sloc0_1_0 + 1)
      00005D FE               [12]  175 	mov	r6,a
      00005E AF*0A            [24]  176 	mov	r7,(_memcmp_sloc0_1_0 + 2)
      000060 8D*00            [24]  177 	mov	_memcmp_PARM_2,r5
      000062 8E*01            [24]  178 	mov	(_memcmp_PARM_2 + 1),r6
      000064 8F*02            [24]  179 	mov	(_memcmp_PARM_2 + 2),r7
      000066 80 AF            [24]  180 	sjmp	00104$
      000068                        181 00106$:
                                    182 ;	_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
      000068 AD*05            [24]  183 	mov	r5,_memcmp_buf1_65536_26
      00006A AE*06            [24]  184 	mov	r6,(_memcmp_buf1_65536_26 + 1)
      00006C AF*07            [24]  185 	mov	r7,(_memcmp_buf1_65536_26 + 2)
      00006E 8D 82            [24]  186 	mov	dpl,r5
      000070 8E 83            [24]  187 	mov	dph,r6
      000072 8F F0            [24]  188 	mov	b,r7
      000074 12r00r00         [24]  189 	lcall	__gptrget
      000077 FD               [12]  190 	mov	r5,a
      000078 7F 00            [12]  191 	mov	r7,#0x00
      00007A AB*00            [24]  192 	mov	r3,_memcmp_PARM_2
      00007C AC*01            [24]  193 	mov	r4,(_memcmp_PARM_2 + 1)
      00007E AE*02            [24]  194 	mov	r6,(_memcmp_PARM_2 + 2)
      000080 8B 82            [24]  195 	mov	dpl,r3
      000082 8C 83            [24]  196 	mov	dph,r4
      000084 8E F0            [24]  197 	mov	b,r6
      000086 12r00r00         [24]  198 	lcall	__gptrget
      000089 FB               [12]  199 	mov	r3,a
      00008A 7E 00            [12]  200 	mov	r6,#0x00
      00008C ED               [12]  201 	mov	a,r5
      00008D C3               [12]  202 	clr	c
      00008E 9B               [12]  203 	subb	a,r3
      00008F F5 82            [12]  204 	mov	dpl,a
      000091 EF               [12]  205 	mov	a,r7
      000092 9E               [12]  206 	subb	a,r6
      000093 F5 83            [12]  207 	mov	dph,a
                                    208 ;	_memcmp.c:42: }
      000095 22               [24]  209 	ret
                                    210 	.area CSEG    (CODE)
                                    211 	.area CONST   (CODE)
                                    212 	.area XINIT   (CODE)
                                    213 	.area CABS    (ABS,CODE)
