                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _rrulonglong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __rrulonglong_PARM_2
                                     12 	.globl __rrulonglong
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 __rrulonglong_PARM_2:
      000000                         37 	.ds 1
      000001                         38 __rrulonglong_l_65536_1:
      000001                         39 	.ds 8
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; initialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function '_rrulonglong'
                                     97 ;------------------------------------------------------------
                                     98 ;s                         Allocated with name '__rrulonglong_PARM_2'
                                     99 ;l                         Allocated with name '__rrulonglong_l_65536_1'
                                    100 ;top                       Allocated to registers 
                                    101 ;middle                    Allocated to registers 
                                    102 ;bottom                    Allocated to registers 
                                    103 ;b                         Allocated to registers 
                                    104 ;------------------------------------------------------------
                                    105 ;	_rrulonglong.c:41: unsigned long long _rrulonglong(unsigned long long l, char s) __SDCC_NONBANKED
                                    106 ;	-----------------------------------------
                                    107 ;	 function _rrulonglong
                                    108 ;	-----------------------------------------
      000000                        109 __rrulonglong:
                           000007   110 	ar7 = 0x07
                           000006   111 	ar6 = 0x06
                           000005   112 	ar5 = 0x05
                           000004   113 	ar4 = 0x04
                           000003   114 	ar3 = 0x03
                           000002   115 	ar2 = 0x02
                           000001   116 	ar1 = 0x01
                           000000   117 	ar0 = 0x00
      000000 85 82*01         [24]  118 	mov	__rrulonglong_l_65536_1,dpl
      000003 85 83*02         [24]  119 	mov	(__rrulonglong_l_65536_1 + 1),dph
      000006 85 F0*03         [24]  120 	mov	(__rrulonglong_l_65536_1 + 2),b
      000009 F5*04            [12]  121 	mov	(__rrulonglong_l_65536_1 + 3),a
      00000B 8C*05            [24]  122 	mov	(__rrulonglong_l_65536_1 + 4),r4
      00000D 8D*06            [24]  123 	mov	(__rrulonglong_l_65536_1 + 5),r5
      00000F 8E*07            [24]  124 	mov	(__rrulonglong_l_65536_1 + 6),r6
      000011 8F*08            [24]  125 	mov	(__rrulonglong_l_65536_1 + 7),r7
                                    126 ;	_rrulonglong.c:43: uint32_t *const top = (uint32_t *)((char *)(&l) + 0);
                                    127 ;	_rrulonglong.c:44: uint32_t *const middle = (uint16_t *)((char *)(&l) + 2);
                                    128 ;	_rrulonglong.c:45: uint32_t *const bottom = (uint32_t *)((char *)(&l) + 4);
                                    129 ;	_rrulonglong.c:46: uint16_t *const b = (uint16_t *)(&l);
                                    130 ;	_rrulonglong.c:56: (*bottom) >>= s;
      000013                        131 00103$:
                                    132 ;	_rrulonglong.c:48: for(;s >= 16; s -= 16)
      000013 74 F0            [12]  133 	mov	a,#0x100 - 0x10
      000015 25*00            [12]  134 	add	a,__rrulonglong_PARM_2
      000017 50 51            [24]  135 	jnc	00101$
                                    136 ;	_rrulonglong.c:50: b[3] = b[2];
      000019 90r00r05         [24]  137 	mov	dptr,#(__rrulonglong_l_65536_1 + 0x0004)
      00001C 75 F0 40         [24]  138 	mov	b,#0x40
      00001F 12r00r00         [24]  139 	lcall	__gptrget
      000022 FE               [12]  140 	mov	r6,a
      000023 A3               [24]  141 	inc	dptr
      000024 12r00r00         [24]  142 	lcall	__gptrget
      000027 FF               [12]  143 	mov	r7,a
      000028 90r00r07         [24]  144 	mov	dptr,#(__rrulonglong_l_65536_1 + 0x0006)
      00002B EE               [12]  145 	mov	a,r6
      00002C 12r00r00         [24]  146 	lcall	__gptrput
      00002F A3               [24]  147 	inc	dptr
      000030 EF               [12]  148 	mov	a,r7
      000031 12r00r00         [24]  149 	lcall	__gptrput
                                    150 ;	_rrulonglong.c:51: b[2] = b[1];
      000034 90r00r03         [24]  151 	mov	dptr,#(__rrulonglong_l_65536_1 + 0x0002)
      000037 12r00r00         [24]  152 	lcall	__gptrget
      00003A FE               [12]  153 	mov	r6,a
      00003B A3               [24]  154 	inc	dptr
      00003C 12r00r00         [24]  155 	lcall	__gptrget
      00003F FF               [12]  156 	mov	r7,a
      000040 90r00r05         [24]  157 	mov	dptr,#(__rrulonglong_l_65536_1 + 0x0004)
      000043 EE               [12]  158 	mov	a,r6
      000044 12r00r00         [24]  159 	lcall	__gptrput
      000047 A3               [24]  160 	inc	dptr
      000048 EF               [12]  161 	mov	a,r7
      000049 12r00r00         [24]  162 	lcall	__gptrput
                                    163 ;	_rrulonglong.c:52: b[1] = b[0];
      00004C AE*01            [24]  164 	mov	r6,(__rrulonglong_l_65536_1 + 0)
      00004E AF*02            [24]  165 	mov	r7,(__rrulonglong_l_65536_1 + 1)
      000050 90r00r03         [24]  166 	mov	dptr,#(__rrulonglong_l_65536_1 + 0x0002)
      000053 EE               [12]  167 	mov	a,r6
      000054 12r00r00         [24]  168 	lcall	__gptrput
      000057 A3               [24]  169 	inc	dptr
      000058 EF               [12]  170 	mov	a,r7
      000059 12r00r00         [24]  171 	lcall	__gptrput
                                    172 ;	_rrulonglong.c:53: b[0] = 0x000000;
      00005C E4               [12]  173 	clr	a
      00005D F5*01            [12]  174 	mov	(__rrulonglong_l_65536_1 + 0),a
      00005F F5*02            [12]  175 	mov	(__rrulonglong_l_65536_1 + 1),a
                                    176 ;	_rrulonglong.c:48: for(;s >= 16; s -= 16)
      000061 E5*00            [12]  177 	mov	a,__rrulonglong_PARM_2
      000063 FF               [12]  178 	mov	r7,a
      000064 24 F0            [12]  179 	add	a,#0xf0
      000066 F5*00            [12]  180 	mov	__rrulonglong_PARM_2,a
      000068 80 A9            [24]  181 	sjmp	00103$
      00006A                        182 00101$:
                                    183 ;	_rrulonglong.c:56: (*bottom) >>= s;
      00006A 90r00r05         [24]  184 	mov	dptr,#(__rrulonglong_l_65536_1 + 0x0004)
      00006D 75 F0 40         [24]  185 	mov	b,#0x40
      000070 12r00r00         [24]  186 	lcall	__gptrget
      000073 FC               [12]  187 	mov	r4,a
      000074 A3               [24]  188 	inc	dptr
      000075 12r00r00         [24]  189 	lcall	__gptrget
      000078 FD               [12]  190 	mov	r5,a
      000079 A3               [24]  191 	inc	dptr
      00007A 12r00r00         [24]  192 	lcall	__gptrget
      00007D FE               [12]  193 	mov	r6,a
      00007E A3               [24]  194 	inc	dptr
      00007F 12r00r00         [24]  195 	lcall	__gptrget
      000082 FF               [12]  196 	mov	r7,a
      000083 85*00 F0         [24]  197 	mov	b,__rrulonglong_PARM_2
      000086 05 F0            [12]  198 	inc	b
      000088 80 0D            [24]  199 	sjmp	00117$
      00008A                        200 00116$:
      00008A C3               [12]  201 	clr	c
      00008B EF               [12]  202 	mov	a,r7
      00008C 13               [12]  203 	rrc	a
      00008D FF               [12]  204 	mov	r7,a
      00008E EE               [12]  205 	mov	a,r6
      00008F 13               [12]  206 	rrc	a
      000090 FE               [12]  207 	mov	r6,a
      000091 ED               [12]  208 	mov	a,r5
      000092 13               [12]  209 	rrc	a
      000093 FD               [12]  210 	mov	r5,a
      000094 EC               [12]  211 	mov	a,r4
      000095 13               [12]  212 	rrc	a
      000096 FC               [12]  213 	mov	r4,a
      000097                        214 00117$:
      000097 D5 F0 F0         [24]  215 	djnz	b,00116$
      00009A 90r00r05         [24]  216 	mov	dptr,#(__rrulonglong_l_65536_1 + 0x0004)
      00009D 75 F0 40         [24]  217 	mov	b,#0x40
      0000A0 EC               [12]  218 	mov	a,r4
      0000A1 12r00r00         [24]  219 	lcall	__gptrput
      0000A4 A3               [24]  220 	inc	dptr
      0000A5 ED               [12]  221 	mov	a,r5
      0000A6 12r00r00         [24]  222 	lcall	__gptrput
      0000A9 A3               [24]  223 	inc	dptr
      0000AA EE               [12]  224 	mov	a,r6
      0000AB 12r00r00         [24]  225 	lcall	__gptrput
      0000AE A3               [24]  226 	inc	dptr
      0000AF EF               [12]  227 	mov	a,r7
      0000B0 12r00r00         [24]  228 	lcall	__gptrput
                                    229 ;	_rrulonglong.c:57: (*middle) |= (((*middle & 0xffff0000ul) >> s) & 0x0000fffful);
      0000B3 90r00r03         [24]  230 	mov	dptr,#(__rrulonglong_l_65536_1 + 0x0002)
      0000B6 12r00r00         [24]  231 	lcall	__gptrget
      0000B9 FC               [12]  232 	mov	r4,a
      0000BA A3               [24]  233 	inc	dptr
      0000BB 12r00r00         [24]  234 	lcall	__gptrget
      0000BE FD               [12]  235 	mov	r5,a
      0000BF A3               [24]  236 	inc	dptr
      0000C0 12r00r00         [24]  237 	lcall	__gptrget
      0000C3 FE               [12]  238 	mov	r6,a
      0000C4 A3               [24]  239 	inc	dptr
      0000C5 12r00r00         [24]  240 	lcall	__gptrget
      0000C8 FF               [12]  241 	mov	r7,a
      0000C9 78 00            [12]  242 	mov	r0,#0x00
      0000CB 79 00            [12]  243 	mov	r1,#0x00
      0000CD 8E 02            [24]  244 	mov	ar2,r6
      0000CF 8F 03            [24]  245 	mov	ar3,r7
      0000D1 85*00 F0         [24]  246 	mov	b,__rrulonglong_PARM_2
      0000D4 05 F0            [12]  247 	inc	b
      0000D6 80 0D            [24]  248 	sjmp	00119$
      0000D8                        249 00118$:
      0000D8 C3               [12]  250 	clr	c
      0000D9 EB               [12]  251 	mov	a,r3
      0000DA 13               [12]  252 	rrc	a
      0000DB FB               [12]  253 	mov	r3,a
      0000DC EA               [12]  254 	mov	a,r2
      0000DD 13               [12]  255 	rrc	a
      0000DE FA               [12]  256 	mov	r2,a
      0000DF E9               [12]  257 	mov	a,r1
      0000E0 13               [12]  258 	rrc	a
      0000E1 F9               [12]  259 	mov	r1,a
      0000E2 E8               [12]  260 	mov	a,r0
      0000E3 13               [12]  261 	rrc	a
      0000E4 F8               [12]  262 	mov	r0,a
      0000E5                        263 00119$:
      0000E5 D5 F0 F0         [24]  264 	djnz	b,00118$
      0000E8 E4               [12]  265 	clr	a
      0000E9 FA               [12]  266 	mov	r2,a
      0000EA FB               [12]  267 	mov	r3,a
      0000EB E8               [12]  268 	mov	a,r0
      0000EC 42 04            [12]  269 	orl	ar4,a
      0000EE E9               [12]  270 	mov	a,r1
      0000EF 42 05            [12]  271 	orl	ar5,a
      0000F1 EA               [12]  272 	mov	a,r2
      0000F2 42 06            [12]  273 	orl	ar6,a
      0000F4 EB               [12]  274 	mov	a,r3
      0000F5 42 07            [12]  275 	orl	ar7,a
      0000F7 90r00r03         [24]  276 	mov	dptr,#(__rrulonglong_l_65536_1 + 0x0002)
      0000FA 75 F0 40         [24]  277 	mov	b,#0x40
      0000FD EC               [12]  278 	mov	a,r4
      0000FE 12r00r00         [24]  279 	lcall	__gptrput
      000101 A3               [24]  280 	inc	dptr
      000102 ED               [12]  281 	mov	a,r5
      000103 12r00r00         [24]  282 	lcall	__gptrput
      000106 A3               [24]  283 	inc	dptr
      000107 EE               [12]  284 	mov	a,r6
      000108 12r00r00         [24]  285 	lcall	__gptrput
      00010B A3               [24]  286 	inc	dptr
      00010C EF               [12]  287 	mov	a,r7
      00010D 12r00r00         [24]  288 	lcall	__gptrput
                                    289 ;	_rrulonglong.c:58: (*top) >>= s;
      000110 AC*01            [24]  290 	mov	r4,(__rrulonglong_l_65536_1 + 0)
      000112 AD*02            [24]  291 	mov	r5,(__rrulonglong_l_65536_1 + 1)
      000114 AE*03            [24]  292 	mov	r6,(__rrulonglong_l_65536_1 + 2)
      000116 AF*04            [24]  293 	mov	r7,(__rrulonglong_l_65536_1 + 3)
      000118 85*00 F0         [24]  294 	mov	b,__rrulonglong_PARM_2
      00011B 05 F0            [12]  295 	inc	b
      00011D 80 0D            [24]  296 	sjmp	00121$
      00011F                        297 00120$:
      00011F C3               [12]  298 	clr	c
      000120 EF               [12]  299 	mov	a,r7
      000121 13               [12]  300 	rrc	a
      000122 FF               [12]  301 	mov	r7,a
      000123 EE               [12]  302 	mov	a,r6
      000124 13               [12]  303 	rrc	a
      000125 FE               [12]  304 	mov	r6,a
      000126 ED               [12]  305 	mov	a,r5
      000127 13               [12]  306 	rrc	a
      000128 FD               [12]  307 	mov	r5,a
      000129 EC               [12]  308 	mov	a,r4
      00012A 13               [12]  309 	rrc	a
      00012B FC               [12]  310 	mov	r4,a
      00012C                        311 00121$:
      00012C D5 F0 F0         [24]  312 	djnz	b,00120$
      00012F 8C*01            [24]  313 	mov	(__rrulonglong_l_65536_1 + 0),r4
      000131 8D*02            [24]  314 	mov	(__rrulonglong_l_65536_1 + 1),r5
      000133 8E*03            [24]  315 	mov	(__rrulonglong_l_65536_1 + 2),r6
      000135 8F*04            [24]  316 	mov	(__rrulonglong_l_65536_1 + 3),r7
                                    317 ;	_rrulonglong.c:60: return(l);
      000137 85*01 82         [24]  318 	mov	dpl,__rrulonglong_l_65536_1
      00013A 85*02 83         [24]  319 	mov	dph,(__rrulonglong_l_65536_1 + 1)
      00013D 85*03 F0         [24]  320 	mov	b,(__rrulonglong_l_65536_1 + 2)
      000140 E5*04            [12]  321 	mov	a,(__rrulonglong_l_65536_1 + 3)
      000142 AC*05            [24]  322 	mov	r4,(__rrulonglong_l_65536_1 + 4)
      000144 AD*06            [24]  323 	mov	r5,(__rrulonglong_l_65536_1 + 5)
      000146 AE*07            [24]  324 	mov	r6,(__rrulonglong_l_65536_1 + 6)
      000148 AF*08            [24]  325 	mov	r7,(__rrulonglong_l_65536_1 + 7)
                                    326 ;	_rrulonglong.c:61: }
      00014A 22               [24]  327 	ret
                                    328 	.area CSEG    (CODE)
                                    329 	.area CONST   (CODE)
                                    330 	.area XINIT   (CODE)
                                    331 	.area CABS    (ABS,CODE)
