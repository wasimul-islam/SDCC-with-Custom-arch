                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module calloc
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memset
                                     12 	.globl _malloc
                                     13 	.globl _calloc_PARM_2
                                     14 	.globl _calloc
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _calloc_PARM_2:
      000000                         35 	.ds 2
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable items in internal ram
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; indirectly addressable internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area ISEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; absolute internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area IABS    (ABS,DATA)
                                     47 	.area IABS    (ABS,DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; bit data
                                     50 ;--------------------------------------------------------
                                     51 	.area BSEG    (BIT)
                                     52 ;--------------------------------------------------------
                                     53 ; paged external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area PSEG    (PAG,XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; uninitialized external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XSEG    (XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XABS    (ABS,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; initialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XISEG   (XDATA)
                                     68 	.area HOME    (CODE)
                                     69 	.area GSINIT0 (CODE)
                                     70 	.area GSINIT1 (CODE)
                                     71 	.area GSINIT2 (CODE)
                                     72 	.area GSINIT3 (CODE)
                                     73 	.area GSINIT4 (CODE)
                                     74 	.area GSINIT5 (CODE)
                                     75 	.area GSINIT  (CODE)
                                     76 	.area GSFINAL (CODE)
                                     77 	.area CSEG    (CODE)
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; Home
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area HOME    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; code
                                     92 ;--------------------------------------------------------
                                     93 	.area CSEG    (CODE)
                                     94 ;------------------------------------------------------------
                                     95 ;Allocation info for local variables in function 'calloc'
                                     96 ;------------------------------------------------------------
                                     97 ;size                      Allocated with name '_calloc_PARM_2'
                                     98 ;nmemb                     Allocated to registers r6 r7 
                                     99 ;ptr                       Allocated to registers r2 r3 
                                    100 ;msize                     Allocated to registers r4 r5 r6 r7 
                                    101 ;------------------------------------------------------------
                                    102 ;	calloc.c:42: void HEAPSPACE *calloc (size_t nmemb, size_t size)
                                    103 ;	-----------------------------------------
                                    104 ;	 function calloc
                                    105 ;	-----------------------------------------
      000000                        106 _calloc:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 AE 82            [24]  115 	mov	r6,dpl
      000002 AF 83            [24]  116 	mov	r7,dph
                                    117 ;	calloc.c:49: unsigned long msize = (unsigned long)nmemb * (unsigned long)size;
      000004 7D 00            [12]  118 	mov	r5,#0x00
      000006 7C 00            [12]  119 	mov	r4,#0x00
      000008 85*00*00         [24]  120 	mov	__mullong_PARM_2,_calloc_PARM_2
      00000B 85*01*01         [24]  121 	mov	(__mullong_PARM_2 + 1),(_calloc_PARM_2 + 1)
      00000E 8D*02            [24]  122 	mov	(__mullong_PARM_2 + 2),r5
      000010 8D*03            [24]  123 	mov	(__mullong_PARM_2 + 3),r5
      000012 8E 82            [24]  124 	mov	dpl,r6
      000014 8F 83            [24]  125 	mov	dph,r7
      000016 8D F0            [24]  126 	mov	b,r5
      000018 EC               [12]  127 	mov	a,r4
      000019 12r00r00         [24]  128 	lcall	__mullong
      00001C AC 82            [24]  129 	mov	r4,dpl
      00001E AD 83            [24]  130 	mov	r5,dph
      000020 AE F0            [24]  131 	mov	r6,b
      000022 FF               [12]  132 	mov	r7,a
                                    133 ;	calloc.c:54: if (msize > SIZE_MAX)
      000023 C3               [12]  134 	clr	c
      000024 74 FF            [12]  135 	mov	a,#0xff
      000026 9C               [12]  136 	subb	a,r4
      000027 74 FF            [12]  137 	mov	a,#0xff
      000029 9D               [12]  138 	subb	a,r5
      00002A E4               [12]  139 	clr	a
      00002B 9E               [12]  140 	subb	a,r6
      00002C E4               [12]  141 	clr	a
      00002D 9F               [12]  142 	subb	a,r7
      00002E 50 04            [24]  143 	jnc	00102$
                                    144 ;	calloc.c:55: return(0);
      000030 90 00 00         [24]  145 	mov	dptr,#0x0000
      000033 22               [24]  146 	ret
      000034                        147 00102$:
                                    148 ;	calloc.c:57: if (ptr = malloc(msize))
      000034 8C 82            [24]  149 	mov	dpl,r4
      000036 8D 83            [24]  150 	mov	dph,r5
      000038 C0 05            [24]  151 	push	ar5
      00003A C0 04            [24]  152 	push	ar4
      00003C 12r00r00         [24]  153 	lcall	_malloc
      00003F AE 82            [24]  154 	mov	r6,dpl
      000041 AF 83            [24]  155 	mov	r7,dph
      000043 D0 04            [24]  156 	pop	ar4
      000045 D0 05            [24]  157 	pop	ar5
      000047 8E 02            [24]  158 	mov	ar2,r6
      000049 8F 03            [24]  159 	mov	ar3,r7
      00004B EE               [12]  160 	mov	a,r6
      00004C 4F               [12]  161 	orl	a,r7
      00004D 60 1D            [24]  162 	jz	00104$
                                    163 ;	calloc.c:58: memset(ptr, 0, msize);
      00004F 8A 01            [24]  164 	mov	ar1,r2
      000051 8B 06            [24]  165 	mov	ar6,r3
      000053 7F 00            [12]  166 	mov	r7,#0x00
      000055 8F*00            [24]  167 	mov	_memset_PARM_2,r7
      000057 8C*00            [24]  168 	mov	_memset_PARM_3,r4
      000059 8D*01            [24]  169 	mov	(_memset_PARM_3 + 1),r5
      00005B 89 82            [24]  170 	mov	dpl,r1
      00005D 8E 83            [24]  171 	mov	dph,r6
      00005F 8F F0            [24]  172 	mov	b,r7
      000061 C0 03            [24]  173 	push	ar3
      000063 C0 02            [24]  174 	push	ar2
      000065 12r00r00         [24]  175 	lcall	_memset
      000068 D0 02            [24]  176 	pop	ar2
      00006A D0 03            [24]  177 	pop	ar3
      00006C                        178 00104$:
                                    179 ;	calloc.c:60: return(ptr);
      00006C 8A 82            [24]  180 	mov	dpl,r2
      00006E 8B 83            [24]  181 	mov	dph,r3
                                    182 ;	calloc.c:61: }
      000070 22               [24]  183 	ret
                                    184 	.area CSEG    (CODE)
                                    185 	.area CONST   (CODE)
                                    186 	.area XINIT   (CODE)
                                    187 	.area CABS    (ABS,CODE)
