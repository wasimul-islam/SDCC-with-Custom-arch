                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcstombs
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wctomb
                                     12 	.globl _wcstombs_PARM_3
                                     13 	.globl _wcstombs_PARM_2
                                     14 	.globl _wcstombs
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _wcstombs_PARM_2:
      000000                         35 	.ds 3
      000003                         36 _wcstombs_PARM_3:
      000003                         37 	.ds 2
      000005                         38 _wcstombs_s_65536_39:
      000005                         39 	.ds 3
      000008                         40 _wcstombs_m_65536_40:
      000008                         41 	.ds 2
      00000A                         42 _wcstombs_buffer_65536_40:
      00000A                         43 	.ds 4
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable items in internal ram
                                     46 ;--------------------------------------------------------
                                     47 ;--------------------------------------------------------
                                     48 ; indirectly addressable internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area ISEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; absolute internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area IABS    (ABS,DATA)
                                     55 	.area IABS    (ABS,DATA)
                                     56 ;--------------------------------------------------------
                                     57 ; bit data
                                     58 ;--------------------------------------------------------
                                     59 	.area BSEG    (BIT)
                                     60 ;--------------------------------------------------------
                                     61 ; paged external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area PSEG    (PAG,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; uninitialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XSEG    (XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; absolute external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XABS    (ABS,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; initialized external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XISEG   (XDATA)
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT0 (CODE)
                                     78 	.area GSINIT1 (CODE)
                                     79 	.area GSINIT2 (CODE)
                                     80 	.area GSINIT3 (CODE)
                                     81 	.area GSINIT4 (CODE)
                                     82 	.area GSINIT5 (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area CSEG    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; global & static initialisations
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; Home
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area HOME    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; code
                                    100 ;--------------------------------------------------------
                                    101 	.area CSEG    (CODE)
                                    102 ;------------------------------------------------------------
                                    103 ;Allocation info for local variables in function 'wcstombs'
                                    104 ;------------------------------------------------------------
                                    105 ;pwcs                      Allocated with name '_wcstombs_PARM_2'
                                    106 ;n                         Allocated with name '_wcstombs_PARM_3'
                                    107 ;s                         Allocated with name '_wcstombs_s_65536_39'
                                    108 ;m                         Allocated with name '_wcstombs_m_65536_40'
                                    109 ;buffer                    Allocated with name '_wcstombs_buffer_65536_40'
                                    110 ;b                         Allocated to registers r3 r4 
                                    111 ;------------------------------------------------------------
                                    112 ;	wcstombs.c:33: size_t wcstombs(char *restrict s, const wchar_t *restrict pwcs, size_t n)
                                    113 ;	-----------------------------------------
                                    114 ;	 function wcstombs
                                    115 ;	-----------------------------------------
      000000                        116 _wcstombs:
                           000007   117 	ar7 = 0x07
                           000006   118 	ar6 = 0x06
                           000005   119 	ar5 = 0x05
                           000004   120 	ar4 = 0x04
                           000003   121 	ar3 = 0x03
                           000002   122 	ar2 = 0x02
                           000001   123 	ar1 = 0x01
                           000000   124 	ar0 = 0x00
      000000 85 82*05         [24]  125 	mov	_wcstombs_s_65536_39,dpl
      000003 85 83*06         [24]  126 	mov	(_wcstombs_s_65536_39 + 1),dph
      000006 85 F0*07         [24]  127 	mov	(_wcstombs_s_65536_39 + 2),b
                                    128 ;	wcstombs.c:35: size_t m = 0;
      000009 E4               [12]  129 	clr	a
      00000A F5*08            [12]  130 	mov	_wcstombs_m_65536_40,a
      00000C F5*09            [12]  131 	mov	(_wcstombs_m_65536_40 + 1),a
                                    132 ;	wcstombs.c:38: while(n > MB_LEN_MAX || n >= wctomb(buffer, *pwcs))
      00000E A8*00            [24]  133 	mov	r0,_wcstombs_PARM_2
      000010 A9*01            [24]  134 	mov	r1,(_wcstombs_PARM_2 + 1)
      000012 AA*02            [24]  135 	mov	r2,(_wcstombs_PARM_2 + 2)
      000014                        136 00107$:
      000014 C3               [12]  137 	clr	c
      000015 74 04            [12]  138 	mov	a,#0x04
      000017 95*03            [12]  139 	subb	a,_wcstombs_PARM_3
      000019 E4               [12]  140 	clr	a
      00001A 95*04            [12]  141 	subb	a,(_wcstombs_PARM_3 + 1)
      00001C 40 42            [24]  142 	jc	00108$
      00001E 88 82            [24]  143 	mov	dpl,r0
      000020 89 83            [24]  144 	mov	dph,r1
      000022 8A F0            [24]  145 	mov	b,r2
      000024 12r00r00         [24]  146 	lcall	__gptrget
      000027 F5*00            [12]  147 	mov	_wctomb_PARM_2,a
      000029 A3               [24]  148 	inc	dptr
      00002A 12r00r00         [24]  149 	lcall	__gptrget
      00002D F5*01            [12]  150 	mov	(_wctomb_PARM_2 + 1),a
      00002F A3               [24]  151 	inc	dptr
      000030 12r00r00         [24]  152 	lcall	__gptrget
      000033 F5*02            [12]  153 	mov	(_wctomb_PARM_2 + 2),a
      000035 A3               [24]  154 	inc	dptr
      000036 12r00r00         [24]  155 	lcall	__gptrget
      000039 F5*03            [12]  156 	mov	(_wctomb_PARM_2 + 3),a
      00003B 90r00r0A         [24]  157 	mov	dptr,#_wcstombs_buffer_65536_40
      00003E 75 F0 40         [24]  158 	mov	b,#0x40
      000041 C0 02            [24]  159 	push	ar2
      000043 C0 01            [24]  160 	push	ar1
      000045 C0 00            [24]  161 	push	ar0
      000047 12r00r00         [24]  162 	lcall	_wctomb
      00004A AB 82            [24]  163 	mov	r3,dpl
      00004C AC 83            [24]  164 	mov	r4,dph
      00004E D0 00            [24]  165 	pop	ar0
      000050 D0 01            [24]  166 	pop	ar1
      000052 D0 02            [24]  167 	pop	ar2
      000054 C3               [12]  168 	clr	c
      000055 E5*03            [12]  169 	mov	a,_wcstombs_PARM_3
      000057 9B               [12]  170 	subb	a,r3
      000058 E5*04            [12]  171 	mov	a,(_wcstombs_PARM_3 + 1)
      00005A 9C               [12]  172 	subb	a,r4
      00005B 50 03            [24]  173 	jnc	00129$
      00005D 02r00rE2         [24]  174 	ljmp	00109$
      000060                        175 00129$:
      000060                        176 00108$:
                                    177 ;	wcstombs.c:40: int b = wctomb(s, *pwcs);
      000060 88 82            [24]  178 	mov	dpl,r0
      000062 89 83            [24]  179 	mov	dph,r1
      000064 8A F0            [24]  180 	mov	b,r2
      000066 12r00r00         [24]  181 	lcall	__gptrget
      000069 F5*00            [12]  182 	mov	_wctomb_PARM_2,a
      00006B A3               [24]  183 	inc	dptr
      00006C 12r00r00         [24]  184 	lcall	__gptrget
      00006F F5*01            [12]  185 	mov	(_wctomb_PARM_2 + 1),a
      000071 A3               [24]  186 	inc	dptr
      000072 12r00r00         [24]  187 	lcall	__gptrget
      000075 F5*02            [12]  188 	mov	(_wctomb_PARM_2 + 2),a
      000077 A3               [24]  189 	inc	dptr
      000078 12r00r00         [24]  190 	lcall	__gptrget
      00007B F5*03            [12]  191 	mov	(_wctomb_PARM_2 + 3),a
      00007D 85*05 82         [24]  192 	mov	dpl,_wcstombs_s_65536_39
      000080 85*06 83         [24]  193 	mov	dph,(_wcstombs_s_65536_39 + 1)
      000083 85*07 F0         [24]  194 	mov	b,(_wcstombs_s_65536_39 + 2)
      000086 C0 02            [24]  195 	push	ar2
      000088 C0 01            [24]  196 	push	ar1
      00008A C0 00            [24]  197 	push	ar0
      00008C 12r00r00         [24]  198 	lcall	_wctomb
      00008F AB 82            [24]  199 	mov	r3,dpl
      000091 AC 83            [24]  200 	mov	r4,dph
      000093 D0 00            [24]  201 	pop	ar0
      000095 D0 01            [24]  202 	pop	ar1
      000097 D0 02            [24]  203 	pop	ar2
                                    204 ;	wcstombs.c:42: if(b == 1 && !*s)
      000099 BB 01 11         [24]  205 	cjne	r3,#0x01,00102$
      00009C BC 00 0E         [24]  206 	cjne	r4,#0x00,00102$
      00009F 85*05 82         [24]  207 	mov	dpl,_wcstombs_s_65536_39
      0000A2 85*06 83         [24]  208 	mov	dph,(_wcstombs_s_65536_39 + 1)
      0000A5 85*07 F0         [24]  209 	mov	b,(_wcstombs_s_65536_39 + 2)
      0000A8 12r00r00         [24]  210 	lcall	__gptrget
      0000AB 60 35            [24]  211 	jz	00109$
                                    212 ;	wcstombs.c:43: break;
      0000AD                        213 00102$:
                                    214 ;	wcstombs.c:44: if(b < 0)
      0000AD EC               [12]  215 	mov	a,r4
      0000AE 30 E7 04         [24]  216 	jnb	acc.7,00105$
                                    217 ;	wcstombs.c:45: return(-1);
      0000B1 90 FF FF         [24]  218 	mov	dptr,#0xffff
      0000B4 22               [24]  219 	ret
      0000B5                        220 00105$:
                                    221 ;	wcstombs.c:47: n -= b;
      0000B5 8B 06            [24]  222 	mov	ar6,r3
      0000B7 8C 07            [24]  223 	mov	ar7,r4
      0000B9 E5*03            [12]  224 	mov	a,_wcstombs_PARM_3
      0000BB C3               [12]  225 	clr	c
      0000BC 9E               [12]  226 	subb	a,r6
      0000BD F5*03            [12]  227 	mov	_wcstombs_PARM_3,a
      0000BF E5*04            [12]  228 	mov	a,(_wcstombs_PARM_3 + 1)
      0000C1 9F               [12]  229 	subb	a,r7
      0000C2 F5*04            [12]  230 	mov	(_wcstombs_PARM_3 + 1),a
                                    231 ;	wcstombs.c:48: m += b;
      0000C4 EE               [12]  232 	mov	a,r6
      0000C5 25*08            [12]  233 	add	a,_wcstombs_m_65536_40
      0000C7 F5*08            [12]  234 	mov	_wcstombs_m_65536_40,a
      0000C9 EF               [12]  235 	mov	a,r7
      0000CA 35*09            [12]  236 	addc	a,(_wcstombs_m_65536_40 + 1)
      0000CC F5*09            [12]  237 	mov	(_wcstombs_m_65536_40 + 1),a
                                    238 ;	wcstombs.c:49: s += b;
      0000CE EB               [12]  239 	mov	a,r3
      0000CF 25*05            [12]  240 	add	a,_wcstombs_s_65536_39
      0000D1 F5*05            [12]  241 	mov	_wcstombs_s_65536_39,a
      0000D3 EC               [12]  242 	mov	a,r4
      0000D4 35*06            [12]  243 	addc	a,(_wcstombs_s_65536_39 + 1)
      0000D6 F5*06            [12]  244 	mov	(_wcstombs_s_65536_39 + 1),a
                                    245 ;	wcstombs.c:50: pwcs++;
      0000D8 74 04            [12]  246 	mov	a,#0x04
      0000DA 28               [12]  247 	add	a,r0
      0000DB F8               [12]  248 	mov	r0,a
      0000DC E4               [12]  249 	clr	a
      0000DD 39               [12]  250 	addc	a,r1
      0000DE F9               [12]  251 	mov	r1,a
      0000DF 02r00r14         [24]  252 	ljmp	00107$
      0000E2                        253 00109$:
                                    254 ;	wcstombs.c:53: return(m);
      0000E2 85*08 82         [24]  255 	mov	dpl,_wcstombs_m_65536_40
      0000E5 85*09 83         [24]  256 	mov	dph,(_wcstombs_m_65536_40 + 1)
                                    257 ;	wcstombs.c:54: }
      0000E8 22               [24]  258 	ret
                                    259 	.area CSEG    (CODE)
                                    260 	.area CONST   (CODE)
                                    261 	.area XINIT   (CODE)
                                    262 	.area CABS    (ABS,CODE)
