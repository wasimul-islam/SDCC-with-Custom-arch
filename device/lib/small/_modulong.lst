                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _modulong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 ;--------------------------------------------------------
                                     12 ; special function registers
                                     13 ;--------------------------------------------------------
                                     14 	.area RSEG    (ABS,DATA)
      000000                         15 	.org 0x0000
                                     16 ;--------------------------------------------------------
                                     17 ; special function bits
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; overlayable register banks
                                     23 ;--------------------------------------------------------
                                     24 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         25 	.ds 8
                                     26 ;--------------------------------------------------------
                                     27 ; internal ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area DSEG    (DATA)
                                     30 ;--------------------------------------------------------
                                     31 ; overlayable items in internal ram
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; indirectly addressable internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area ISEG    (DATA)
                                     37 ;--------------------------------------------------------
                                     38 ; absolute internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area IABS    (ABS,DATA)
                                     41 	.area IABS    (ABS,DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; bit data
                                     44 ;--------------------------------------------------------
                                     45 	.area BSEG    (BIT)
                                     46 ;--------------------------------------------------------
                                     47 ; paged external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area PSEG    (PAG,XDATA)
                                     50 ;--------------------------------------------------------
                                     51 ; uninitialized external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area XSEG    (XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XABS    (ABS,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; initialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XISEG   (XDATA)
                                     62 	.area HOME    (CODE)
                                     63 	.area GSINIT0 (CODE)
                                     64 	.area GSINIT1 (CODE)
                                     65 	.area GSINIT2 (CODE)
                                     66 	.area GSINIT3 (CODE)
                                     67 	.area GSINIT4 (CODE)
                                     68 	.area GSINIT5 (CODE)
                                     69 	.area GSINIT  (CODE)
                                     70 	.area GSFINAL (CODE)
                                     71 	.area CSEG    (CODE)
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area HOME    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; code
                                     86 ;--------------------------------------------------------
                                     87 	.area CSEG    (CODE)
                                     88 ;------------------------------------------------------------
                                     89 ;Allocation info for local variables in function '_modlong_dummy'
                                     90 ;------------------------------------------------------------
                                     91 ;	_modulong.c:56: _modlong_dummy (void) __naked
                                     92 ;	-----------------------------------------
                                     93 ;	 function _modlong_dummy
                                     94 ;	-----------------------------------------
      000000                         95 __modlong_dummy:
                                     96 ;	naked function: no prologue.
                                     97 ;	_modulong.c:191: __endasm;
                                     98 	.globl	__modulong
      000000                         99 __modulong:
                                    100 	.area	OSEG (OVR,DATA)
                                    101 	.globl	__modulong_PARM_2
                                    102 	.globl	__modslong_PARM_2
      000000                        103 __modulong_PARM_2:
      000000                        104 __modslong_PARM_2:
      000000                        105 	.ds	4
                                    106 	.area	CSEG (CODE)
                                    107 ;	parameter a comes in a, b, dph, dpl
      000000 F9               [12]  108 	mov	r1,a ; save parameter r1
      000001 E5*00            [12]  109 	mov	a,(__modulong_PARM_2) ; b == 0? avoid endless loop
      000003 45*01            [12]  110 	orl	a,(__modulong_PARM_2 + 1)
      000005 45*02            [12]  111 	orl	a,(__modulong_PARM_2 + 2)
      000007 45*03            [12]  112 	orl	a,(__modulong_PARM_2 + 3)
      000009 60 77            [24]  113 	jz	div_by_0
      00000B 78 00            [12]  114 	mov	r0,#0
      00000D C3               [12]  115 	clr	c ; when loop1 jumps immediately to loop2
      00000E                        116 loop1:
      00000E 08               [12]  117 	inc r0
      00000F E5*03            [12]  118 	mov	a,(__modulong_PARM_2 + 3) ; if (!MSB_SET(b))
      000011 20 E7 3B         [24]  119 	jb	acc.7,loop2
      000014 E5*00            [12]  120 	mov	a,(__modulong_PARM_2) ; b <<= 1
      000016 25 E0            [12]  121 	add	a,acc
      000018 F5*00            [12]  122 	mov	(__modulong_PARM_2),a
      00001A E5*01            [12]  123 	mov	a,(__modulong_PARM_2 + 1)
      00001C 33               [12]  124 	rlc	a
      00001D F5*01            [12]  125 	mov	(__modulong_PARM_2 + 1),a
      00001F E5*02            [12]  126 	mov	a,(__modulong_PARM_2 + 2)
      000021 33               [12]  127 	rlc	a
      000022 F5*02            [12]  128 	mov	(__modulong_PARM_2 + 2),a
      000024 E5*03            [12]  129 	mov	a,(__modulong_PARM_2 + 3)
      000026 33               [12]  130 	rlc	a
      000027 F5*03            [12]  131 	mov	(__modulong_PARM_2 + 3),a
      000029 E5 82            [12]  132 	mov	a,dpl ; a - b
      00002B 95*00            [12]  133 	subb	a,(__modulong_PARM_2) ; here carry is always clear
      00002D E5 83            [12]  134 	mov	a,dph
      00002F 95*01            [12]  135 	subb	a,(__modulong_PARM_2 + 1)
      000031 E5 F0            [12]  136 	mov	a,b
      000033 95*02            [12]  137 	subb	a,(__modulong_PARM_2 + 2)
      000035 E9               [12]  138 	mov	a,r1
      000036 95*03            [12]  139 	subb	a,(__modulong_PARM_2 + 3)
      000038 50 D4            [24]  140 	jnc	loop1
      00003A C3               [12]  141 	clr	c
      00003B E5*03            [12]  142 	mov	a,(__modulong_PARM_2 + 3) ; b >>= 1;
      00003D 13               [12]  143 	rrc	a
      00003E F5*03            [12]  144 	mov	(__modulong_PARM_2 + 3),a
      000040 E5*02            [12]  145 	mov	a,(__modulong_PARM_2 + 2)
      000042 13               [12]  146 	rrc	a
      000043 F5*02            [12]  147 	mov	(__modulong_PARM_2 + 2),a
      000045 E5*01            [12]  148 	mov	a,(__modulong_PARM_2 + 1)
      000047 13               [12]  149 	rrc	a
      000048 F5*01            [12]  150 	mov	(__modulong_PARM_2 + 1),a
      00004A E5*00            [12]  151 	mov	a,(__modulong_PARM_2)
      00004C 13               [12]  152 	rrc	a
      00004D F5*00            [12]  153 	mov	(__modulong_PARM_2),a
      00004F                        154 loop2:
                                    155 ; clr c never set
      00004F E5 82            [12]  156 	mov	a,dpl ; a - b
      000051 95*00            [12]  157 	subb	a,(__modulong_PARM_2)
      000053 FC               [12]  158 	mov	r4,a
      000054 E5 83            [12]  159 	mov	a,dph
      000056 95*01            [12]  160 	subb	a,(__modulong_PARM_2 + 1)
      000058 FD               [12]  161 	mov	r5,a
      000059 E5 F0            [12]  162 	mov	a,b
      00005B 95*02            [12]  163 	subb	a,(__modulong_PARM_2 + 2)
      00005D FE               [12]  164 	mov	r6,a
      00005E E9               [12]  165 	mov	a,r1
      00005F 95*03            [12]  166 	subb	a,(__modulong_PARM_2 + 3)
      000061 40 07            [24]  167 	jc	smaller ; a >= b?
      000063 F9               [12]  168 	mov	r1,a ; -> yes; a = a - b;
      000064 8E F0            [24]  169 	mov	b,r6
      000066 8D 83            [24]  170 	mov	dph,r5
      000068 8C 82            [24]  171 	mov	dpl,r4
      00006A                        172 smaller:
                                    173 ; -> no
      00006A C3               [12]  174 	clr	c
      00006B E5*03            [12]  175 	mov	a,(__modulong_PARM_2 + 3) ; b >>= 1;
      00006D 13               [12]  176 	rrc	a
      00006E F5*03            [12]  177 	mov	(__modulong_PARM_2 + 3),a
      000070 E5*02            [12]  178 	mov	a,(__modulong_PARM_2 + 2)
      000072 13               [12]  179 	rrc	a
      000073 F5*02            [12]  180 	mov	(__modulong_PARM_2 + 2),a
      000075 E5*01            [12]  181 	mov	a,(__modulong_PARM_2 + 1)
      000077 13               [12]  182 	rrc	a
      000078 F5*01            [12]  183 	mov	(__modulong_PARM_2 + 1),a
      00007A E5*00            [12]  184 	mov	a,(__modulong_PARM_2)
      00007C 13               [12]  185 	rrc	a
      00007D F5*00            [12]  186 	mov	(__modulong_PARM_2),a
      00007F D8 CE            [24]  187 	djnz	r0,loop2
      000081 E9               [12]  188 	mov	a,r1 ; prepare the return value
      000082                        189 div_by_0:
      000082 22               [24]  190 	ret
                                    191 ;	_modulong.c:192: }
                                    192 ;	naked function: no epilogue.
                                    193 	.area CSEG    (CODE)
                                    194 	.area CONST   (CODE)
                                    195 	.area XINIT   (CODE)
                                    196 	.area CABS    (ABS,CODE)
