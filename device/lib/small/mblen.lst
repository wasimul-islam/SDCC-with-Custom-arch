                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mblen
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mblen_PARM_2
                                     12 	.globl _mblen
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 _mblen_PARM_2:
      000000                         37 	.ds 2
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; uninitialized external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XABS    (ABS,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; initialized external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XISEG   (XDATA)
                                     67 	.area HOME    (CODE)
                                     68 	.area GSINIT0 (CODE)
                                     69 	.area GSINIT1 (CODE)
                                     70 	.area GSINIT2 (CODE)
                                     71 	.area GSINIT3 (CODE)
                                     72 	.area GSINIT4 (CODE)
                                     73 	.area GSINIT5 (CODE)
                                     74 	.area GSINIT  (CODE)
                                     75 	.area GSFINAL (CODE)
                                     76 	.area CSEG    (CODE)
                                     77 ;--------------------------------------------------------
                                     78 ; global & static initialisations
                                     79 ;--------------------------------------------------------
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; Home
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area HOME    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; code
                                     91 ;--------------------------------------------------------
                                     92 	.area CSEG    (CODE)
                                     93 ;------------------------------------------------------------
                                     94 ;Allocation info for local variables in function 'mblen'
                                     95 ;------------------------------------------------------------
                                     96 ;n                         Allocated with name '_mblen_PARM_2'
                                     97 ;s                         Allocated to registers r5 r6 r7 
                                     98 ;m                         Allocated to registers r3 
                                     99 ;c                         Allocated to registers r4 
                                    100 ;------------------------------------------------------------
                                    101 ;	mblen.c:31: int mblen(const char *s, size_t n)
                                    102 ;	-----------------------------------------
                                    103 ;	 function mblen
                                    104 ;	-----------------------------------------
      000000                        105 _mblen:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 AD 82            [24]  114 	mov	r5,dpl
      000002 AE 83            [24]  115 	mov	r6,dph
      000004 AF F0            [24]  116 	mov	r7,b
                                    117 ;	mblen.c:36: if(!s)
      000006 ED               [12]  118 	mov	a,r5
      000007 4E               [12]  119 	orl	a,r6
      000008 70 04            [24]  120 	jnz	00102$
                                    121 ;	mblen.c:37: return(0);
      00000A 90 00 00         [24]  122 	mov	dptr,#0x0000
      00000D 22               [24]  123 	ret
      00000E                        124 00102$:
                                    125 ;	mblen.c:39: if(!n)
      00000E E5*00            [12]  126 	mov	a,_mblen_PARM_2
      000010 45*01            [12]  127 	orl	a,(_mblen_PARM_2 + 1)
      000012 70 04            [24]  128 	jnz	00104$
                                    129 ;	mblen.c:40: return(-1);
      000014 90 FF FF         [24]  130 	mov	dptr,#0xffff
      000017 22               [24]  131 	ret
      000018                        132 00104$:
                                    133 ;	mblen.c:42: c = *s;
      000018 8D 82            [24]  134 	mov	dpl,r5
      00001A 8E 83            [24]  135 	mov	dph,r6
      00001C 8F F0            [24]  136 	mov	b,r7
      00001E 12r00r00         [24]  137 	lcall	__gptrget
                                    138 ;	mblen.c:44: if(!c)
      000021 FC               [12]  139 	mov	r4,a
      000022 70 04            [24]  140 	jnz	00106$
                                    141 ;	mblen.c:45: return(0);
      000024 90 00 00         [24]  142 	mov	dptr,#0x0000
      000027 22               [24]  143 	ret
      000028                        144 00106$:
                                    145 ;	mblen.c:47: if(c <= 0x7f)
      000028 EC               [12]  146 	mov	a,r4
      000029 24 80            [12]  147 	add	a,#0xff - 0x7f
      00002B 40 04            [24]  148 	jc	00126$
                                    149 ;	mblen.c:48: return(1);
      00002D 90 00 01         [24]  150 	mov	dptr,#0x0001
                                    151 ;	mblen.c:50: while(c & 0x80)
      000030 22               [24]  152 	ret
      000031                        153 00126$:
      000031 7B 00            [12]  154 	mov	r3,#0x00
      000033                        155 00109$:
      000033 EC               [12]  156 	mov	a,r4
      000034 30 E7 08         [24]  157 	jnb	acc.7,00111$
                                    158 ;	mblen.c:52: c <<= 1;
      000037 8C 02            [24]  159 	mov	ar2,r4
      000039 EA               [12]  160 	mov	a,r2
      00003A 2A               [12]  161 	add	a,r2
      00003B FC               [12]  162 	mov	r4,a
                                    163 ;	mblen.c:53: m++;
      00003C 0B               [12]  164 	inc	r3
      00003D 80 F4            [24]  165 	sjmp	00109$
      00003F                        166 00111$:
                                    167 ;	mblen.c:56: if(m > n)
      00003F 8B 02            [24]  168 	mov	ar2,r3
      000041 7C 00            [12]  169 	mov	r4,#0x00
      000043 C3               [12]  170 	clr	c
      000044 E5*00            [12]  171 	mov	a,_mblen_PARM_2
      000046 9A               [12]  172 	subb	a,r2
      000047 E5*01            [12]  173 	mov	a,(_mblen_PARM_2 + 1)
      000049 9C               [12]  174 	subb	a,r4
      00004A 50 04            [24]  175 	jnc	00129$
                                    176 ;	mblen.c:57: return(-1);
      00004C 90 FF FF         [24]  177 	mov	dptr,#0xffff
                                    178 ;	mblen.c:60: while(--m)
      00004F 22               [24]  179 	ret
      000050                        180 00129$:
      000050                        181 00116$:
      000050 1B               [12]  182 	dec	r3
      000051 EB               [12]  183 	mov	a,r3
      000052 60 20            [24]  184 	jz	00118$
                                    185 ;	mblen.c:61: if((*++s & 0xc0) != 0x80)
      000054 0D               [12]  186 	inc	r5
      000055 BD 00 01         [24]  187 	cjne	r5,#0x00,00169$
      000058 0E               [12]  188 	inc	r6
      000059                        189 00169$:
      000059 8D 82            [24]  190 	mov	dpl,r5
      00005B 8E 83            [24]  191 	mov	dph,r6
      00005D 8F F0            [24]  192 	mov	b,r7
      00005F 12r00r00         [24]  193 	lcall	__gptrget
      000062 F8               [12]  194 	mov	r0,a
      000063 53 00 C0         [24]  195 	anl	ar0,#0xc0
      000066 79 00            [12]  196 	mov	r1,#0x00
      000068 B8 80 05         [24]  197 	cjne	r0,#0x80,00170$
      00006B B9 00 02         [24]  198 	cjne	r1,#0x00,00170$
      00006E 80 E0            [24]  199 	sjmp	00116$
      000070                        200 00170$:
                                    201 ;	mblen.c:62: return(-1);
      000070 90 FF FF         [24]  202 	mov	dptr,#0xffff
      000073 22               [24]  203 	ret
      000074                        204 00118$:
                                    205 ;	mblen.c:64: return(n);
      000074 8A 82            [24]  206 	mov	dpl,r2
      000076 8C 83            [24]  207 	mov	dph,r4
                                    208 ;	mblen.c:65: }
      000078 22               [24]  209 	ret
                                    210 	.area CSEG    (CODE)
                                    211 	.area CONST   (CODE)
                                    212 	.area XINIT   (CODE)
                                    213 	.area CABS    (ABS,CODE)
