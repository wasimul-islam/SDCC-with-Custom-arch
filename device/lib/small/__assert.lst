                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __assert
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___assert
                                     12 	.globl _printf
                                     13 	.globl ___assert_PARM_4
                                     14 	.globl ___assert_PARM_3
                                     15 	.globl ___assert_PARM_2
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 ___assert_PARM_2:
      000000                         36 	.ds 3
      000003                         37 ___assert_PARM_3:
      000003                         38 	.ds 3
      000006                         39 ___assert_PARM_4:
      000006                         40 	.ds 2
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable items in internal ram
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; indirectly addressable internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area ISEG    (DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; absolute internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area IABS    (ABS,DATA)
                                     52 	.area IABS    (ABS,DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; bit data
                                     55 ;--------------------------------------------------------
                                     56 	.area BSEG    (BIT)
                                     57 ;--------------------------------------------------------
                                     58 ; paged external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area PSEG    (PAG,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; uninitialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XSEG    (XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XABS    (ABS,XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; initialized external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XISEG   (XDATA)
                                     73 	.area HOME    (CODE)
                                     74 	.area GSINIT0 (CODE)
                                     75 	.area GSINIT1 (CODE)
                                     76 	.area GSINIT2 (CODE)
                                     77 	.area GSINIT3 (CODE)
                                     78 	.area GSINIT4 (CODE)
                                     79 	.area GSINIT5 (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area CSEG    (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function '__assert'
                                    101 ;------------------------------------------------------------
                                    102 ;functionname              Allocated with name '___assert_PARM_2'
                                    103 ;filename                  Allocated with name '___assert_PARM_3'
                                    104 ;linenumber                Allocated with name '___assert_PARM_4'
                                    105 ;expression                Allocated to registers r5 r6 r7 
                                    106 ;------------------------------------------------------------
                                    107 ;	__assert.c:32: void __assert(const char *expression, const char *functionname, const char *filename, unsigned int linenumber)
                                    108 ;	-----------------------------------------
                                    109 ;	 function __assert
                                    110 ;	-----------------------------------------
      000000                        111 ___assert:
                           000007   112 	ar7 = 0x07
                           000006   113 	ar6 = 0x06
                           000005   114 	ar5 = 0x05
                           000004   115 	ar4 = 0x04
                           000003   116 	ar3 = 0x03
                           000002   117 	ar2 = 0x02
                           000001   118 	ar1 = 0x01
                           000000   119 	ar0 = 0x00
      000000 AD 82            [24]  120 	mov	r5,dpl
      000002 AE 83            [24]  121 	mov	r6,dph
      000004 AF F0            [24]  122 	mov	r7,b
                                    123 ;	__assert.c:34: printf("Assert(%s) failed in function %s at line %u in file %s.\n",
      000006 C0*03            [24]  124 	push	___assert_PARM_3
      000008 C0*04            [24]  125 	push	(___assert_PARM_3 + 1)
      00000A C0*05            [24]  126 	push	(___assert_PARM_3 + 2)
      00000C C0*06            [24]  127 	push	___assert_PARM_4
      00000E C0*07            [24]  128 	push	(___assert_PARM_4 + 1)
      000010 C0*00            [24]  129 	push	___assert_PARM_2
      000012 C0*01            [24]  130 	push	(___assert_PARM_2 + 1)
      000014 C0*02            [24]  131 	push	(___assert_PARM_2 + 2)
      000016 C0 05            [24]  132 	push	ar5
      000018 C0 06            [24]  133 	push	ar6
      00001A C0 07            [24]  134 	push	ar7
      00001C 74r00            [12]  135 	mov	a,#___str_0
      00001E C0 E0            [24]  136 	push	acc
      000020 74s00            [12]  137 	mov	a,#(___str_0 >> 8)
      000022 C0 E0            [24]  138 	push	acc
      000024 74 80            [12]  139 	mov	a,#0x80
      000026 C0 E0            [24]  140 	push	acc
      000028 12r00r00         [24]  141 	lcall	_printf
      00002B E5 81            [12]  142 	mov	a,sp
      00002D 24 F2            [12]  143 	add	a,#0xf2
      00002F F5 81            [12]  144 	mov	sp,a
      000031                        145 00103$:
                                    146 ;	__assert.c:37: }
      000031 80 FE            [24]  147 	sjmp	00103$
                                    148 	.area CSEG    (CODE)
                                    149 	.area CONST   (CODE)
                                    150 	.area CONST   (CODE)
      000000                        151 ___str_0:
      000000 41 73 73 65 72 74 28   152 	.ascii "Assert(%s) failed in function %s at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 69 6E 20
             66 75 6E 63 74 69 6F
             6E 20 25 73 20 61 74
             20 6C 69 6E 65 20 25
             75 20 69 6E 20 66 69
             6C 65 20 25 73 2E
      000037 0A                     153 	.db 0x0a
      000038 00                     154 	.db 0x00
                                    155 	.area CSEG    (CODE)
                                    156 	.area XINIT   (CODE)
                                    157 	.area CABS    (ABS,CODE)
