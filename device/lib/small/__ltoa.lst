                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __ltoa
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___ltoa_PARM_3
                                     12 	.globl ___ltoa_PARM_2
                                     13 	.globl ___ultoa_PARM_3
                                     14 	.globl ___ultoa_PARM_2
                                     15 	.globl ___ultoa
                                     16 	.globl ___ltoa
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; special function bits
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG    (ABS,DATA)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; overlayable register banks
                                     29 ;--------------------------------------------------------
                                     30 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         31 	.ds 8
                                     32 ;--------------------------------------------------------
                                     33 ; internal ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DSEG    (DATA)
      000000                         36 ___ultoa_PARM_2:
      000000                         37 	.ds 3
      000003                         38 ___ultoa_PARM_3:
      000003                         39 	.ds 1
      000004                         40 ___ultoa_value_65536_39:
      000004                         41 	.ds 4
      000008                         42 ___ltoa_PARM_2:
      000008                         43 	.ds 3
      00000B                         44 ___ltoa_PARM_3:
      00000B                         45 	.ds 1
                                     46 ;--------------------------------------------------------
                                     47 ; overlayable items in internal ram
                                     48 ;--------------------------------------------------------
                                     49 ;--------------------------------------------------------
                                     50 ; indirectly addressable internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area ISEG    (DATA)
      000000                         53 ___ultoa_buffer_65536_40:
      000000                         54 	.ds 32
                                     55 ;--------------------------------------------------------
                                     56 ; absolute internal ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area IABS    (ABS,DATA)
                                     59 	.area IABS    (ABS,DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; bit data
                                     62 ;--------------------------------------------------------
                                     63 	.area BSEG    (BIT)
                                     64 ;--------------------------------------------------------
                                     65 ; paged external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area PSEG    (PAG,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; uninitialized external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XSEG    (XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; absolute external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XABS    (ABS,XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; initialized external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XISEG   (XDATA)
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT0 (CODE)
                                     82 	.area GSINIT1 (CODE)
                                     83 	.area GSINIT2 (CODE)
                                     84 	.area GSINIT3 (CODE)
                                     85 	.area GSINIT4 (CODE)
                                     86 	.area GSINIT5 (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area CSEG    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 	.area GSFINAL (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area HOME    (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area CSEG    (CODE)
                                    106 ;------------------------------------------------------------
                                    107 ;Allocation info for local variables in function '__ultoa'
                                    108 ;------------------------------------------------------------
                                    109 ;string                    Allocated with name '___ultoa_PARM_2'
                                    110 ;radix                     Allocated with name '___ultoa_PARM_3'
                                    111 ;value                     Allocated with name '___ultoa_value_65536_39'
                                    112 ;index                     Allocated to registers 
                                    113 ;c                         Allocated to registers r7 
                                    114 ;buffer                    Allocated with name '___ultoa_buffer_65536_40'
                                    115 ;------------------------------------------------------------
                                    116 ;	__ltoa.c:58: void __ultoa(unsigned long value, char* string, unsigned char radix)
                                    117 ;	-----------------------------------------
                                    118 ;	 function __ultoa
                                    119 ;	-----------------------------------------
      000000                        120 ___ultoa:
                           000007   121 	ar7 = 0x07
                           000006   122 	ar6 = 0x06
                           000005   123 	ar5 = 0x05
                           000004   124 	ar4 = 0x04
                           000003   125 	ar3 = 0x03
                           000002   126 	ar2 = 0x02
                           000001   127 	ar1 = 0x01
                           000000   128 	ar0 = 0x00
      000000 85 82*04         [24]  129 	mov	___ultoa_value_65536_39,dpl
      000003 85 83*05         [24]  130 	mov	(___ultoa_value_65536_39 + 1),dph
      000006 85 F0*06         [24]  131 	mov	(___ultoa_value_65536_39 + 2),b
      000009 F5*07            [12]  132 	mov	(___ultoa_value_65536_39 + 3),a
                                    133 ;	__ltoa.c:61: unsigned char index = NUMBER_OF_DIGITS;
      00000B 7B 20            [12]  134 	mov	r3,#0x20
                                    135 ;	__ltoa.c:63: do {
      00000D                        136 00103$:
                                    137 ;	__ltoa.c:64: unsigned char c = '0' + (value % radix);
      00000D 85*03*00         [24]  138 	mov	__modulong_PARM_2,___ultoa_PARM_3
      000010 75*01 00         [24]  139 	mov	(__modulong_PARM_2 + 1),#0x00
      000013 75*02 00         [24]  140 	mov	(__modulong_PARM_2 + 2),#0x00
      000016 75*03 00         [24]  141 	mov	(__modulong_PARM_2 + 3),#0x00
      000019 85*04 82         [24]  142 	mov	dpl,___ultoa_value_65536_39
      00001C 85*05 83         [24]  143 	mov	dph,(___ultoa_value_65536_39 + 1)
      00001F 85*06 F0         [24]  144 	mov	b,(___ultoa_value_65536_39 + 2)
      000022 E5*07            [12]  145 	mov	a,(___ultoa_value_65536_39 + 3)
      000024 C0 03            [24]  146 	push	ar3
      000026 12r00r00         [24]  147 	lcall	__modulong
      000029 AA 82            [24]  148 	mov	r2,dpl
      00002B FF               [12]  149 	mov	r7,a
      00002C D0 03            [24]  150 	pop	ar3
      00002E 74 30            [12]  151 	mov	a,#0x30
      000030 2A               [12]  152 	add	a,r2
                                    153 ;	__ltoa.c:65: if (c > (unsigned char)'9')
      000031 FF               [12]  154 	mov  r7,a
      000032 24 C6            [12]  155 	add	a,#0xff - 0x39
      000034 50 06            [24]  156 	jnc	00102$
                                    157 ;	__ltoa.c:66: c += 'A' - '9' - 1;
      000036 8F 06            [24]  158 	mov	ar6,r7
      000038 74 07            [12]  159 	mov	a,#0x07
      00003A 2E               [12]  160 	add	a,r6
      00003B FF               [12]  161 	mov	r7,a
      00003C                        162 00102$:
                                    163 ;	__ltoa.c:67: buffer[--index] = c;
      00003C 1B               [12]  164 	dec	r3
      00003D EB               [12]  165 	mov	a,r3
      00003E 24r00            [12]  166 	add	a,#___ultoa_buffer_65536_40
      000040 F8               [12]  167 	mov	r0,a
      000041 A6 07            [24]  168 	mov	@r0,ar7
                                    169 ;	__ltoa.c:68: value /= radix;
      000043 85*03*00         [24]  170 	mov	__divulong_PARM_2,___ultoa_PARM_3
      000046 75*01 00         [24]  171 	mov	(__divulong_PARM_2 + 1),#0x00
      000049 75*02 00         [24]  172 	mov	(__divulong_PARM_2 + 2),#0x00
      00004C 75*03 00         [24]  173 	mov	(__divulong_PARM_2 + 3),#0x00
      00004F 85*04 82         [24]  174 	mov	dpl,___ultoa_value_65536_39
      000052 85*05 83         [24]  175 	mov	dph,(___ultoa_value_65536_39 + 1)
      000055 85*06 F0         [24]  176 	mov	b,(___ultoa_value_65536_39 + 2)
      000058 E5*07            [12]  177 	mov	a,(___ultoa_value_65536_39 + 3)
      00005A C0 03            [24]  178 	push	ar3
      00005C 12r00r00         [24]  179 	lcall	__divulong
      00005F 85 82*04         [24]  180 	mov	___ultoa_value_65536_39,dpl
      000062 85 83*05         [24]  181 	mov	(___ultoa_value_65536_39 + 1),dph
      000065 85 F0*06         [24]  182 	mov	(___ultoa_value_65536_39 + 2),b
      000068 F5*07            [12]  183 	mov	(___ultoa_value_65536_39 + 3),a
      00006A D0 03            [24]  184 	pop	ar3
                                    185 ;	__ltoa.c:69: } while (value);
      00006C E5*04            [12]  186 	mov	a,___ultoa_value_65536_39
      00006E 45*05            [12]  187 	orl	a,(___ultoa_value_65536_39 + 1)
      000070 45*06            [12]  188 	orl	a,(___ultoa_value_65536_39 + 2)
      000072 45*07            [12]  189 	orl	a,(___ultoa_value_65536_39 + 3)
      000074 70 97            [24]  190 	jnz	00103$
                                    191 ;	__ltoa.c:71: do {
      000076 8B 07            [24]  192 	mov	ar7,r3
      000078 AC*00            [24]  193 	mov	r4,___ultoa_PARM_2
      00007A AD*01            [24]  194 	mov	r5,(___ultoa_PARM_2 + 1)
      00007C AE*02            [24]  195 	mov	r6,(___ultoa_PARM_2 + 2)
      00007E                        196 00106$:
                                    197 ;	__ltoa.c:72: *string++ = buffer[index];
      00007E EF               [12]  198 	mov	a,r7
      00007F 24r00            [12]  199 	add	a,#___ultoa_buffer_65536_40
      000081 F9               [12]  200 	mov	r1,a
      000082 87 03            [24]  201 	mov	ar3,@r1
      000084 8C 82            [24]  202 	mov	dpl,r4
      000086 8D 83            [24]  203 	mov	dph,r5
      000088 8E F0            [24]  204 	mov	b,r6
      00008A EB               [12]  205 	mov	a,r3
      00008B 12r00r00         [24]  206 	lcall	__gptrput
      00008E A3               [24]  207 	inc	dptr
      00008F AC 82            [24]  208 	mov	r4,dpl
      000091 AD 83            [24]  209 	mov	r5,dph
                                    210 ;	__ltoa.c:73: } while ( ++index != NUMBER_OF_DIGITS );
      000093 0F               [12]  211 	inc	r7
      000094 BF 20 E7         [24]  212 	cjne	r7,#0x20,00106$
                                    213 ;	__ltoa.c:75: *string = 0;  /* string terminator */
      000097 8C*00            [24]  214 	mov	___ultoa_PARM_2,r4
      000099 8D*01            [24]  215 	mov	(___ultoa_PARM_2 + 1),r5
      00009B 8E*02            [24]  216 	mov	(___ultoa_PARM_2 + 2),r6
      00009D AD*00            [24]  217 	mov	r5,___ultoa_PARM_2
      00009F AE*01            [24]  218 	mov	r6,(___ultoa_PARM_2 + 1)
      0000A1 AF*02            [24]  219 	mov	r7,(___ultoa_PARM_2 + 2)
      0000A3 8D 82            [24]  220 	mov	dpl,r5
      0000A5 8E 83            [24]  221 	mov	dph,r6
      0000A7 8F F0            [24]  222 	mov	b,r7
      0000A9 E4               [12]  223 	clr	a
                                    224 ;	__ltoa.c:76: }
      0000AA 02r00r00         [24]  225 	ljmp	__gptrput
                                    226 ;------------------------------------------------------------
                                    227 ;Allocation info for local variables in function '__ltoa'
                                    228 ;------------------------------------------------------------
                                    229 ;string                    Allocated with name '___ltoa_PARM_2'
                                    230 ;radix                     Allocated with name '___ltoa_PARM_3'
                                    231 ;value                     Allocated to registers r4 r5 r6 r7 
                                    232 ;------------------------------------------------------------
                                    233 ;	__ltoa.c:78: void __ltoa(long value, char* string, unsigned char radix)
                                    234 ;	-----------------------------------------
                                    235 ;	 function __ltoa
                                    236 ;	-----------------------------------------
      0000AD                        237 ___ltoa:
      0000AD AC 82            [24]  238 	mov	r4,dpl
      0000AF AD 83            [24]  239 	mov	r5,dph
      0000B1 AE F0            [24]  240 	mov	r6,b
                                    241 ;	__ltoa.c:80: if (value < 0 && radix == 10) {
      0000B3 FF               [12]  242 	mov	r7,a
      0000B4 30 E7 2E         [24]  243 	jnb	acc.7,00102$
      0000B7 74 0A            [12]  244 	mov	a,#0x0a
      0000B9 B5*0B 29         [24]  245 	cjne	a,___ltoa_PARM_3,00102$
                                    246 ;	__ltoa.c:81: *string++ = '-';
      0000BC A9*08            [24]  247 	mov	r1,___ltoa_PARM_2
      0000BE AA*09            [24]  248 	mov	r2,(___ltoa_PARM_2 + 1)
      0000C0 AB*0A            [24]  249 	mov	r3,(___ltoa_PARM_2 + 2)
      0000C2 89 82            [24]  250 	mov	dpl,r1
      0000C4 8A 83            [24]  251 	mov	dph,r2
      0000C6 8B F0            [24]  252 	mov	b,r3
      0000C8 74 2D            [12]  253 	mov	a,#0x2d
      0000CA 12r00r00         [24]  254 	lcall	__gptrput
      0000CD 74 01            [12]  255 	mov	a,#0x01
      0000CF 29               [12]  256 	add	a,r1
      0000D0 F5*08            [12]  257 	mov	___ltoa_PARM_2,a
      0000D2 E4               [12]  258 	clr	a
      0000D3 3A               [12]  259 	addc	a,r2
      0000D4 F5*09            [12]  260 	mov	(___ltoa_PARM_2 + 1),a
      0000D6 8B*0A            [24]  261 	mov	(___ltoa_PARM_2 + 2),r3
                                    262 ;	__ltoa.c:82: value = -value;
      0000D8 C3               [12]  263 	clr	c
      0000D9 E4               [12]  264 	clr	a
      0000DA 9C               [12]  265 	subb	a,r4
      0000DB FC               [12]  266 	mov	r4,a
      0000DC E4               [12]  267 	clr	a
      0000DD 9D               [12]  268 	subb	a,r5
      0000DE FD               [12]  269 	mov	r5,a
      0000DF E4               [12]  270 	clr	a
      0000E0 9E               [12]  271 	subb	a,r6
      0000E1 FE               [12]  272 	mov	r6,a
      0000E2 E4               [12]  273 	clr	a
      0000E3 9F               [12]  274 	subb	a,r7
      0000E4 FF               [12]  275 	mov	r7,a
      0000E5                        276 00102$:
                                    277 ;	__ltoa.c:84: __ultoa(value, string, radix);
      0000E5 85*08*00         [24]  278 	mov	___ultoa_PARM_2,___ltoa_PARM_2
      0000E8 85*09*01         [24]  279 	mov	(___ultoa_PARM_2 + 1),(___ltoa_PARM_2 + 1)
      0000EB 85*0A*02         [24]  280 	mov	(___ultoa_PARM_2 + 2),(___ltoa_PARM_2 + 2)
      0000EE 85*0B*03         [24]  281 	mov	___ultoa_PARM_3,___ltoa_PARM_3
      0000F1 8C 82            [24]  282 	mov	dpl,r4
      0000F3 8D 83            [24]  283 	mov	dph,r5
      0000F5 8E F0            [24]  284 	mov	b,r6
      0000F7 EF               [12]  285 	mov	a,r7
                                    286 ;	__ltoa.c:85: }
      0000F8 02r00r00         [24]  287 	ljmp	___ultoa
                                    288 	.area CSEG    (CODE)
                                    289 	.area CONST   (CODE)
                                    290 	.area XINIT   (CODE)
                                    291 	.area CABS    (ABS,CODE)
