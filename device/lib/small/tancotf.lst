                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tancotf
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _tancotf
                                     12 	.globl _fabsf
                                     13 	.globl _tancotf_PARM_2
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
      000000                         33 _tancotf_PARM_2:
      000000                         34 	.ds 1
      000001                         35 _tancotf_x_65536_25:
      000001                         36 	.ds 4
      000005                         37 _tancotf_f_65536_26:
      000005                         38 	.ds 4
      000009                         39 _tancotf_g_65536_26:
      000009                         40 	.ds 4
      00000D                         41 _tancotf_xn_65536_26:
      00000D                         42 	.ds 4
      000011                         43 _tancotf_xnum_65536_26:
      000011                         44 	.ds 4
      000015                         45 _tancotf_n_65536_26:
      000015                         46 	.ds 2
      000017                         47 _tancotf_sloc0_1_0:
      000017                         48 	.ds 4
                                     49 ;--------------------------------------------------------
                                     50 ; overlayable items in internal ram
                                     51 ;--------------------------------------------------------
                                     52 ;--------------------------------------------------------
                                     53 ; indirectly addressable internal ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area ISEG    (DATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area IABS    (ABS,DATA)
                                     60 	.area IABS    (ABS,DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; bit data
                                     63 ;--------------------------------------------------------
                                     64 	.area BSEG    (BIT)
                                     65 ;--------------------------------------------------------
                                     66 ; paged external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area PSEG    (PAG,XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; uninitialized external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XSEG    (XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; absolute external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XABS    (ABS,XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; initialized external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XISEG   (XDATA)
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT0 (CODE)
                                     83 	.area GSINIT1 (CODE)
                                     84 	.area GSINIT2 (CODE)
                                     85 	.area GSINIT3 (CODE)
                                     86 	.area GSINIT4 (CODE)
                                     87 	.area GSINIT5 (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area CSEG    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; global & static initialisations
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 	.area GSFINAL (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; Home
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area HOME    (CODE)
                                    103 ;--------------------------------------------------------
                                    104 ; code
                                    105 ;--------------------------------------------------------
                                    106 	.area CSEG    (CODE)
                                    107 ;------------------------------------------------------------
                                    108 ;Allocation info for local variables in function 'tancotf'
                                    109 ;------------------------------------------------------------
                                    110 ;iscotan                   Allocated with name '_tancotf_PARM_2'
                                    111 ;x                         Allocated with name '_tancotf_x_65536_25'
                                    112 ;f                         Allocated with name '_tancotf_f_65536_26'
                                    113 ;g                         Allocated with name '_tancotf_g_65536_26'
                                    114 ;xn                        Allocated with name '_tancotf_xn_65536_26'
                                    115 ;xnum                      Allocated with name '_tancotf_xnum_65536_26'
                                    116 ;xden                      Allocated to registers r0 r1 r2 r3 
                                    117 ;n                         Allocated with name '_tancotf_n_65536_26'
                                    118 ;sloc0                     Allocated with name '_tancotf_sloc0_1_0'
                                    119 ;------------------------------------------------------------
                                    120 ;	tancotf.c:53: float tancotf(float x, bool iscotan)
                                    121 ;	-----------------------------------------
                                    122 ;	 function tancotf
                                    123 ;	-----------------------------------------
      000000                        124 _tancotf:
                           000007   125 	ar7 = 0x07
                           000006   126 	ar6 = 0x06
                           000005   127 	ar5 = 0x05
                           000004   128 	ar4 = 0x04
                           000003   129 	ar3 = 0x03
                           000002   130 	ar2 = 0x02
                           000001   131 	ar1 = 0x01
                           000000   132 	ar0 = 0x00
                                    133 ;	tancotf.c:58: if (fabsf(x) > YMAX)
      000000 85 82*01         [24]  134 	mov	_tancotf_x_65536_25,dpl
      000003 85 83*02         [24]  135 	mov	(_tancotf_x_65536_25 + 1),dph
      000006 85 F0*03         [24]  136 	mov	(_tancotf_x_65536_25 + 2),b
      000009 F5*04            [12]  137 	mov	(_tancotf_x_65536_25 + 3),a
      00000B 12r00r00         [24]  138 	lcall	_fabsf
      00000E A8 82            [24]  139 	mov	r0,dpl
      000010 A9 83            [24]  140 	mov	r1,dph
      000012 AA F0            [24]  141 	mov	r2,b
      000014 FB               [12]  142 	mov	r3,a
      000015 C0 00            [24]  143 	push	ar0
      000017 C0 01            [24]  144 	push	ar1
      000019 C0 02            [24]  145 	push	ar2
      00001B C0 03            [24]  146 	push	ar3
      00001D 90 08 00         [24]  147 	mov	dptr,#0x0800
      000020 75 F0 C9         [24]  148 	mov	b,#0xc9
      000023 74 45            [12]  149 	mov	a,#0x45
      000025 12r00r00         [24]  150 	lcall	___fslt
      000028 AB 82            [24]  151 	mov	r3,dpl
      00002A E5 81            [12]  152 	mov	a,sp
      00002C 24 FC            [12]  153 	add	a,#0xfc
      00002E F5 81            [12]  154 	mov	sp,a
      000030 EB               [12]  155 	mov	a,r3
      000031 60 0D            [24]  156 	jz	00102$
                                    157 ;	tancotf.c:60: errno = ERANGE;
      000033 75*00 22         [24]  158 	mov	_errno,#0x22
      000036 75*01 00         [24]  159 	mov	(_errno + 1),#0x00
                                    160 ;	tancotf.c:61: return 0.0;
      000039 90 00 00         [24]  161 	mov	dptr,#(0x00&0x00ff)
      00003C E4               [12]  162 	clr	a
      00003D F5 F0            [12]  163 	mov	b,a
      00003F 22               [24]  164 	ret
      000040                        165 00102$:
                                    166 ;	tancotf.c:65: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
      000040 C0*01            [24]  167 	push	_tancotf_x_65536_25
      000042 C0*02            [24]  168 	push	(_tancotf_x_65536_25 + 1)
      000044 C0*03            [24]  169 	push	(_tancotf_x_65536_25 + 2)
      000046 C0*04            [24]  170 	push	(_tancotf_x_65536_25 + 3)
      000048 90 F9 83         [24]  171 	mov	dptr,#0xf983
      00004B 75 F0 22         [24]  172 	mov	b,#0x22
      00004E 74 3F            [12]  173 	mov	a,#0x3f
      000050 12r00r00         [24]  174 	lcall	___fsmul
      000053 A8 82            [24]  175 	mov	r0,dpl
      000055 A9 83            [24]  176 	mov	r1,dph
      000057 AA F0            [24]  177 	mov	r2,b
      000059 FB               [12]  178 	mov	r3,a
      00005A E5 81            [12]  179 	mov	a,sp
      00005C 24 FC            [12]  180 	add	a,#0xfc
      00005E F5 81            [12]  181 	mov	sp,a
      000060 C0 03            [24]  182 	push	ar3
      000062 C0 02            [24]  183 	push	ar2
      000064 C0 01            [24]  184 	push	ar1
      000066 C0 00            [24]  185 	push	ar0
      000068 C0*01            [24]  186 	push	_tancotf_x_65536_25
      00006A C0*02            [24]  187 	push	(_tancotf_x_65536_25 + 1)
      00006C C0*03            [24]  188 	push	(_tancotf_x_65536_25 + 2)
      00006E C0*04            [24]  189 	push	(_tancotf_x_65536_25 + 3)
      000070 90 00 00         [24]  190 	mov	dptr,#(0x00&0x00ff)
      000073 E4               [12]  191 	clr	a
      000074 F5 F0            [12]  192 	mov	b,a
      000076 12r00r00         [24]  193 	lcall	___fslt
      000079 AF 82            [24]  194 	mov	r7,dpl
      00007B E5 81            [12]  195 	mov	a,sp
      00007D 24 FC            [12]  196 	add	a,#0xfc
      00007F F5 81            [12]  197 	mov	sp,a
      000081 D0 00            [24]  198 	pop	ar0
      000083 D0 01            [24]  199 	pop	ar1
      000085 D0 02            [24]  200 	pop	ar2
      000087 D0 03            [24]  201 	pop	ar3
      000089 EF               [12]  202 	mov	a,r7
      00008A 60 0A            [24]  203 	jz	00117$
      00008C 7C 00            [12]  204 	mov	r4,#0x00
      00008E 7D 00            [12]  205 	mov	r5,#0x00
      000090 7E 00            [12]  206 	mov	r6,#0x00
      000092 7F 3F            [12]  207 	mov	r7,#0x3f
      000094 80 08            [24]  208 	sjmp	00118$
      000096                        209 00117$:
      000096 7C 00            [12]  210 	mov	r4,#0x00
      000098 7D 00            [12]  211 	mov	r5,#0x00
      00009A 7E 00            [12]  212 	mov	r6,#0x00
      00009C 7F BF            [12]  213 	mov	r7,#0xbf
      00009E                        214 00118$:
      00009E C0 04            [24]  215 	push	ar4
      0000A0 C0 05            [24]  216 	push	ar5
      0000A2 C0 06            [24]  217 	push	ar6
      0000A4 C0 07            [24]  218 	push	ar7
      0000A6 88 82            [24]  219 	mov	dpl,r0
      0000A8 89 83            [24]  220 	mov	dph,r1
      0000AA 8A F0            [24]  221 	mov	b,r2
      0000AC EB               [12]  222 	mov	a,r3
      0000AD 12r00r00         [24]  223 	lcall	___fsadd
      0000B0 AC 82            [24]  224 	mov	r4,dpl
      0000B2 AD 83            [24]  225 	mov	r5,dph
      0000B4 AE F0            [24]  226 	mov	r6,b
      0000B6 FF               [12]  227 	mov	r7,a
      0000B7 E5 81            [12]  228 	mov	a,sp
      0000B9 24 FC            [12]  229 	add	a,#0xfc
      0000BB F5 81            [12]  230 	mov	sp,a
      0000BD 8C 82            [24]  231 	mov	dpl,r4
      0000BF 8D 83            [24]  232 	mov	dph,r5
      0000C1 8E F0            [24]  233 	mov	b,r6
      0000C3 EF               [12]  234 	mov	a,r7
      0000C4 12r00r00         [24]  235 	lcall	___fs2sint
                                    236 ;	tancotf.c:66: xn=n;
      0000C7 85 82*15         [24]  237 	mov	_tancotf_n_65536_26,dpl
      0000CA 85 83*16         [24]  238 	mov  (_tancotf_n_65536_26 + 1),dph
      0000CD 12r00r00         [24]  239 	lcall	___sint2fs
      0000D0 85 82*0D         [24]  240 	mov	_tancotf_xn_65536_26,dpl
      0000D3 85 83*0E         [24]  241 	mov	(_tancotf_xn_65536_26 + 1),dph
      0000D6 85 F0*0F         [24]  242 	mov	(_tancotf_xn_65536_26 + 2),b
      0000D9 F5*10            [12]  243 	mov	(_tancotf_xn_65536_26 + 3),a
                                    244 ;	tancotf.c:68: xnum=(int)x;
      0000DB 85*01 82         [24]  245 	mov	dpl,_tancotf_x_65536_25
      0000DE 85*02 83         [24]  246 	mov	dph,(_tancotf_x_65536_25 + 1)
      0000E1 85*03 F0         [24]  247 	mov	b,(_tancotf_x_65536_25 + 2)
      0000E4 E5*04            [12]  248 	mov	a,(_tancotf_x_65536_25 + 3)
      0000E6 12r00r00         [24]  249 	lcall	___fs2sint
      0000E9 12r00r00         [24]  250 	lcall	___sint2fs
      0000EC A8 82            [24]  251 	mov	r0,dpl
      0000EE A9 83            [24]  252 	mov	r1,dph
      0000F0 AE F0            [24]  253 	mov	r6,b
      0000F2 FF               [12]  254 	mov	r7,a
                                    255 ;	tancotf.c:69: xden=x-xnum;
      0000F3 C0 07            [24]  256 	push	ar7
      0000F5 C0 06            [24]  257 	push	ar6
      0000F7 C0 01            [24]  258 	push	ar1
      0000F9 C0 00            [24]  259 	push	ar0
      0000FB C0 00            [24]  260 	push	ar0
      0000FD C0 01            [24]  261 	push	ar1
      0000FF C0 06            [24]  262 	push	ar6
      000101 C0 07            [24]  263 	push	ar7
      000103 85*01 82         [24]  264 	mov	dpl,_tancotf_x_65536_25
      000106 85*02 83         [24]  265 	mov	dph,(_tancotf_x_65536_25 + 1)
      000109 85*03 F0         [24]  266 	mov	b,(_tancotf_x_65536_25 + 2)
      00010C E5*04            [12]  267 	mov	a,(_tancotf_x_65536_25 + 3)
      00010E 12r00r00         [24]  268 	lcall	___fssub
      000111 85 82*17         [24]  269 	mov	_tancotf_sloc0_1_0,dpl
      000114 85 83*18         [24]  270 	mov	(_tancotf_sloc0_1_0 + 1),dph
      000117 85 F0*19         [24]  271 	mov	(_tancotf_sloc0_1_0 + 2),b
      00011A F5*1A            [12]  272 	mov	(_tancotf_sloc0_1_0 + 3),a
      00011C E5 81            [12]  273 	mov	a,sp
      00011E 24 FC            [12]  274 	add	a,#0xfc
      000120 F5 81            [12]  275 	mov	sp,a
                                    276 ;	tancotf.c:70: f=((xnum-xn*C1)+xden)-xn*C2;
      000122 C0*0D            [24]  277 	push	_tancotf_xn_65536_26
      000124 C0*0E            [24]  278 	push	(_tancotf_xn_65536_26 + 1)
      000126 C0*0F            [24]  279 	push	(_tancotf_xn_65536_26 + 2)
      000128 C0*10            [24]  280 	push	(_tancotf_xn_65536_26 + 3)
      00012A 90 00 00         [24]  281 	mov	dptr,#0x0000
      00012D 75 F0 C9         [24]  282 	mov	b,#0xc9
      000130 74 3F            [12]  283 	mov	a,#0x3f
      000132 12r00r00         [24]  284 	lcall	___fsmul
      000135 AA 82            [24]  285 	mov	r2,dpl
      000137 AB 83            [24]  286 	mov	r3,dph
      000139 AC F0            [24]  287 	mov	r4,b
      00013B FD               [12]  288 	mov	r5,a
      00013C E5 81            [12]  289 	mov	a,sp
      00013E 24 FC            [12]  290 	add	a,#0xfc
      000140 F5 81            [12]  291 	mov	sp,a
      000142 D0 00            [24]  292 	pop	ar0
      000144 D0 01            [24]  293 	pop	ar1
      000146 D0 06            [24]  294 	pop	ar6
      000148 D0 07            [24]  295 	pop	ar7
      00014A C0 02            [24]  296 	push	ar2
      00014C C0 03            [24]  297 	push	ar3
      00014E C0 04            [24]  298 	push	ar4
      000150 C0 05            [24]  299 	push	ar5
      000152 88 82            [24]  300 	mov	dpl,r0
      000154 89 83            [24]  301 	mov	dph,r1
      000156 8E F0            [24]  302 	mov	b,r6
      000158 EF               [12]  303 	mov	a,r7
      000159 12r00r00         [24]  304 	lcall	___fssub
      00015C AC 82            [24]  305 	mov	r4,dpl
      00015E AD 83            [24]  306 	mov	r5,dph
      000160 AE F0            [24]  307 	mov	r6,b
      000162 FF               [12]  308 	mov	r7,a
      000163 E5 81            [12]  309 	mov	a,sp
      000165 24 FC            [12]  310 	add	a,#0xfc
      000167 F5 81            [12]  311 	mov	sp,a
      000169 C0*17            [24]  312 	push	_tancotf_sloc0_1_0
      00016B C0*18            [24]  313 	push	(_tancotf_sloc0_1_0 + 1)
      00016D C0*19            [24]  314 	push	(_tancotf_sloc0_1_0 + 2)
      00016F C0*1A            [24]  315 	push	(_tancotf_sloc0_1_0 + 3)
      000171 8C 82            [24]  316 	mov	dpl,r4
      000173 8D 83            [24]  317 	mov	dph,r5
      000175 8E F0            [24]  318 	mov	b,r6
      000177 EF               [12]  319 	mov	a,r7
      000178 12r00r00         [24]  320 	lcall	___fsadd
      00017B AC 82            [24]  321 	mov	r4,dpl
      00017D AD 83            [24]  322 	mov	r5,dph
      00017F AE F0            [24]  323 	mov	r6,b
      000181 FF               [12]  324 	mov	r7,a
      000182 E5 81            [12]  325 	mov	a,sp
      000184 24 FC            [12]  326 	add	a,#0xfc
      000186 F5 81            [12]  327 	mov	sp,a
      000188 C0 07            [24]  328 	push	ar7
      00018A C0 06            [24]  329 	push	ar6
      00018C C0 05            [24]  330 	push	ar5
      00018E C0 04            [24]  331 	push	ar4
      000190 C0*0D            [24]  332 	push	_tancotf_xn_65536_26
      000192 C0*0E            [24]  333 	push	(_tancotf_xn_65536_26 + 1)
      000194 C0*0F            [24]  334 	push	(_tancotf_xn_65536_26 + 2)
      000196 C0*10            [24]  335 	push	(_tancotf_xn_65536_26 + 3)
      000198 90 AA 22         [24]  336 	mov	dptr,#0xaa22
      00019B 75 F0 FD         [24]  337 	mov	b,#0xfd
      00019E 74 39            [12]  338 	mov	a,#0x39
      0001A0 12r00r00         [24]  339 	lcall	___fsmul
      0001A3 A8 82            [24]  340 	mov	r0,dpl
      0001A5 A9 83            [24]  341 	mov	r1,dph
      0001A7 AA F0            [24]  342 	mov	r2,b
      0001A9 FB               [12]  343 	mov	r3,a
      0001AA E5 81            [12]  344 	mov	a,sp
      0001AC 24 FC            [12]  345 	add	a,#0xfc
      0001AE F5 81            [12]  346 	mov	sp,a
      0001B0 D0 04            [24]  347 	pop	ar4
      0001B2 D0 05            [24]  348 	pop	ar5
      0001B4 D0 06            [24]  349 	pop	ar6
      0001B6 D0 07            [24]  350 	pop	ar7
      0001B8 C0 00            [24]  351 	push	ar0
      0001BA C0 01            [24]  352 	push	ar1
      0001BC C0 02            [24]  353 	push	ar2
      0001BE C0 03            [24]  354 	push	ar3
      0001C0 8C 82            [24]  355 	mov	dpl,r4
      0001C2 8D 83            [24]  356 	mov	dph,r5
      0001C4 8E F0            [24]  357 	mov	b,r6
      0001C6 EF               [12]  358 	mov	a,r7
      0001C7 12r00r00         [24]  359 	lcall	___fssub
      0001CA 85 82*05         [24]  360 	mov	_tancotf_f_65536_26,dpl
      0001CD 85 83*06         [24]  361 	mov	(_tancotf_f_65536_26 + 1),dph
      0001D0 85 F0*07         [24]  362 	mov	(_tancotf_f_65536_26 + 2),b
      0001D3 F5*08            [12]  363 	mov	(_tancotf_f_65536_26 + 3),a
      0001D5 E5 81            [12]  364 	mov	a,sp
      0001D7 24 FC            [12]  365 	add	a,#0xfc
      0001D9 F5 81            [12]  366 	mov	sp,a
                                    367 ;	tancotf.c:72: if (fabsf(f) < EPS)
      0001DB 85*05 82         [24]  368 	mov	dpl,_tancotf_f_65536_26
      0001DE 85*06 83         [24]  369 	mov	dph,(_tancotf_f_65536_26 + 1)
      0001E1 85*07 F0         [24]  370 	mov	b,(_tancotf_f_65536_26 + 2)
      0001E4 E5*08            [12]  371 	mov	a,(_tancotf_f_65536_26 + 3)
      0001E6 12r00r00         [24]  372 	lcall	_fabsf
      0001E9 A8 82            [24]  373 	mov	r0,dpl
      0001EB A9 83            [24]  374 	mov	r1,dph
      0001ED AA F0            [24]  375 	mov	r2,b
      0001EF FB               [12]  376 	mov	r3,a
      0001F0 E4               [12]  377 	clr	a
      0001F1 C0 E0            [24]  378 	push	acc
      0001F3 C0 E0            [24]  379 	push	acc
      0001F5 74 80            [12]  380 	mov	a,#0x80
      0001F7 C0 E0            [24]  381 	push	acc
      0001F9 74 39            [12]  382 	mov	a,#0x39
      0001FB C0 E0            [24]  383 	push	acc
      0001FD 88 82            [24]  384 	mov	dpl,r0
      0001FF 89 83            [24]  385 	mov	dph,r1
      000201 8A F0            [24]  386 	mov	b,r2
      000203 EB               [12]  387 	mov	a,r3
      000204 12r00r00         [24]  388 	lcall	___fslt
      000207 AB 82            [24]  389 	mov	r3,dpl
      000209 E5 81            [12]  390 	mov	a,sp
      00020B 24 FC            [12]  391 	add	a,#0xfc
      00020D F5 81            [12]  392 	mov	sp,a
      00020F EB               [12]  393 	mov	a,r3
      000210 60 17            [24]  394 	jz	00104$
                                    395 ;	tancotf.c:74: xnum = f;
      000212 85*05*11         [24]  396 	mov	_tancotf_xnum_65536_26,_tancotf_f_65536_26
      000215 85*06*12         [24]  397 	mov	(_tancotf_xnum_65536_26 + 1),(_tancotf_f_65536_26 + 1)
      000218 85*07*13         [24]  398 	mov	(_tancotf_xnum_65536_26 + 2),(_tancotf_f_65536_26 + 2)
      00021B 85*08*14         [24]  399 	mov	(_tancotf_xnum_65536_26 + 3),(_tancotf_f_65536_26 + 3)
                                    400 ;	tancotf.c:75: xden = 1.0;
      00021E 78 00            [12]  401 	mov	r0,#0x00
      000220 79 00            [12]  402 	mov	r1,#0x00
      000222 7A 80            [12]  403 	mov	r2,#0x80
      000224 7B 3F            [12]  404 	mov	r3,#0x3f
      000226 02r03r3B         [24]  405 	ljmp	00105$
      000229                        406 00104$:
                                    407 ;	tancotf.c:79: g = f*f;
      000229 C0*05            [24]  408 	push	_tancotf_f_65536_26
      00022B C0*06            [24]  409 	push	(_tancotf_f_65536_26 + 1)
      00022D C0*07            [24]  410 	push	(_tancotf_f_65536_26 + 2)
      00022F C0*08            [24]  411 	push	(_tancotf_f_65536_26 + 3)
      000231 85*05 82         [24]  412 	mov	dpl,_tancotf_f_65536_26
      000234 85*06 83         [24]  413 	mov	dph,(_tancotf_f_65536_26 + 1)
      000237 85*07 F0         [24]  414 	mov	b,(_tancotf_f_65536_26 + 2)
      00023A E5*08            [12]  415 	mov	a,(_tancotf_f_65536_26 + 3)
      00023C 12r00r00         [24]  416 	lcall	___fsmul
      00023F 85 82*09         [24]  417 	mov	_tancotf_g_65536_26,dpl
      000242 85 83*0A         [24]  418 	mov	(_tancotf_g_65536_26 + 1),dph
      000245 85 F0*0B         [24]  419 	mov	(_tancotf_g_65536_26 + 2),b
      000248 F5*0C            [12]  420 	mov	(_tancotf_g_65536_26 + 3),a
      00024A E5 81            [12]  421 	mov	a,sp
      00024C 24 FC            [12]  422 	add	a,#0xfc
      00024E F5 81            [12]  423 	mov	sp,a
                                    424 ;	tancotf.c:80: xnum = P(f,g);
      000250 C0*09            [24]  425 	push	_tancotf_g_65536_26
      000252 C0*0A            [24]  426 	push	(_tancotf_g_65536_26 + 1)
      000254 C0*0B            [24]  427 	push	(_tancotf_g_65536_26 + 2)
      000256 C0*0C            [24]  428 	push	(_tancotf_g_65536_26 + 3)
      000258 90 33 B8         [24]  429 	mov	dptr,#0x33b8
      00025B 75 F0 C4         [24]  430 	mov	b,#0xc4
      00025E 74 BD            [12]  431 	mov	a,#0xbd
      000260 12r00r00         [24]  432 	lcall	___fsmul
      000263 AC 82            [24]  433 	mov	r4,dpl
      000265 AD 83            [24]  434 	mov	r5,dph
      000267 AE F0            [24]  435 	mov	r6,b
      000269 FF               [12]  436 	mov	r7,a
      00026A E5 81            [12]  437 	mov	a,sp
      00026C 24 FC            [12]  438 	add	a,#0xfc
      00026E F5 81            [12]  439 	mov	sp,a
      000270 C0*05            [24]  440 	push	_tancotf_f_65536_26
      000272 C0*06            [24]  441 	push	(_tancotf_f_65536_26 + 1)
      000274 C0*07            [24]  442 	push	(_tancotf_f_65536_26 + 2)
      000276 C0*08            [24]  443 	push	(_tancotf_f_65536_26 + 3)
      000278 8C 82            [24]  444 	mov	dpl,r4
      00027A 8D 83            [24]  445 	mov	dph,r5
      00027C 8E F0            [24]  446 	mov	b,r6
      00027E EF               [12]  447 	mov	a,r7
      00027F 12r00r00         [24]  448 	lcall	___fsmul
      000282 AC 82            [24]  449 	mov	r4,dpl
      000284 AD 83            [24]  450 	mov	r5,dph
      000286 AE F0            [24]  451 	mov	r6,b
      000288 FF               [12]  452 	mov	r7,a
      000289 E5 81            [12]  453 	mov	a,sp
      00028B 24 FC            [12]  454 	add	a,#0xfc
      00028D F5 81            [12]  455 	mov	sp,a
      00028F C0*05            [24]  456 	push	_tancotf_f_65536_26
      000291 C0*06            [24]  457 	push	(_tancotf_f_65536_26 + 1)
      000293 C0*07            [24]  458 	push	(_tancotf_f_65536_26 + 2)
      000295 C0*08            [24]  459 	push	(_tancotf_f_65536_26 + 3)
      000297 8C 82            [24]  460 	mov	dpl,r4
      000299 8D 83            [24]  461 	mov	dph,r5
      00029B 8E F0            [24]  462 	mov	b,r6
      00029D EF               [12]  463 	mov	a,r7
      00029E 12r00r00         [24]  464 	lcall	___fsadd
      0002A1 85 82*11         [24]  465 	mov	_tancotf_xnum_65536_26,dpl
      0002A4 85 83*12         [24]  466 	mov	(_tancotf_xnum_65536_26 + 1),dph
      0002A7 85 F0*13         [24]  467 	mov	(_tancotf_xnum_65536_26 + 2),b
      0002AA F5*14            [12]  468 	mov	(_tancotf_xnum_65536_26 + 3),a
      0002AC E5 81            [12]  469 	mov	a,sp
      0002AE 24 FC            [12]  470 	add	a,#0xfc
      0002B0 F5 81            [12]  471 	mov	sp,a
                                    472 ;	tancotf.c:81: xden = Q(g);
      0002B2 C0*09            [24]  473 	push	_tancotf_g_65536_26
      0002B4 C0*0A            [24]  474 	push	(_tancotf_g_65536_26 + 1)
      0002B6 C0*0B            [24]  475 	push	(_tancotf_g_65536_26 + 2)
      0002B8 C0*0C            [24]  476 	push	(_tancotf_g_65536_26 + 3)
      0002BA 90 33 75         [24]  477 	mov	dptr,#0x3375
      0002BD 75 F0 1F         [24]  478 	mov	b,#0x1f
      0002C0 74 3C            [12]  479 	mov	a,#0x3c
      0002C2 12r00r00         [24]  480 	lcall	___fsmul
      0002C5 AC 82            [24]  481 	mov	r4,dpl
      0002C7 AD 83            [24]  482 	mov	r5,dph
      0002C9 AE F0            [24]  483 	mov	r6,b
      0002CB FF               [12]  484 	mov	r7,a
      0002CC E5 81            [12]  485 	mov	a,sp
      0002CE 24 FC            [12]  486 	add	a,#0xfc
      0002D0 F5 81            [12]  487 	mov	sp,a
      0002D2 74 AF            [12]  488 	mov	a,#0xaf
      0002D4 C0 E0            [24]  489 	push	acc
      0002D6 74 B7            [12]  490 	mov	a,#0xb7
      0002D8 C0 E0            [24]  491 	push	acc
      0002DA 03               [12]  492 	rr	a
      0002DB C0 E0            [24]  493 	push	acc
      0002DD 74 BE            [12]  494 	mov	a,#0xbe
      0002DF C0 E0            [24]  495 	push	acc
      0002E1 8C 82            [24]  496 	mov	dpl,r4
      0002E3 8D 83            [24]  497 	mov	dph,r5
      0002E5 8E F0            [24]  498 	mov	b,r6
      0002E7 EF               [12]  499 	mov	a,r7
      0002E8 12r00r00         [24]  500 	lcall	___fsadd
      0002EB AC 82            [24]  501 	mov	r4,dpl
      0002ED AD 83            [24]  502 	mov	r5,dph
      0002EF AE F0            [24]  503 	mov	r6,b
      0002F1 FF               [12]  504 	mov	r7,a
      0002F2 E5 81            [12]  505 	mov	a,sp
      0002F4 24 FC            [12]  506 	add	a,#0xfc
      0002F6 F5 81            [12]  507 	mov	sp,a
      0002F8 C0*09            [24]  508 	push	_tancotf_g_65536_26
      0002FA C0*0A            [24]  509 	push	(_tancotf_g_65536_26 + 1)
      0002FC C0*0B            [24]  510 	push	(_tancotf_g_65536_26 + 2)
      0002FE C0*0C            [24]  511 	push	(_tancotf_g_65536_26 + 3)
      000300 8C 82            [24]  512 	mov	dpl,r4
      000302 8D 83            [24]  513 	mov	dph,r5
      000304 8E F0            [24]  514 	mov	b,r6
      000306 EF               [12]  515 	mov	a,r7
      000307 12r00r00         [24]  516 	lcall	___fsmul
      00030A AC 82            [24]  517 	mov	r4,dpl
      00030C AD 83            [24]  518 	mov	r5,dph
      00030E AE F0            [24]  519 	mov	r6,b
      000310 FF               [12]  520 	mov	r7,a
      000311 E5 81            [12]  521 	mov	a,sp
      000313 24 FC            [12]  522 	add	a,#0xfc
      000315 F5 81            [12]  523 	mov	sp,a
      000317 E4               [12]  524 	clr	a
      000318 C0 E0            [24]  525 	push	acc
      00031A C0 E0            [24]  526 	push	acc
      00031C 74 80            [12]  527 	mov	a,#0x80
      00031E C0 E0            [24]  528 	push	acc
      000320 74 3F            [12]  529 	mov	a,#0x3f
      000322 C0 E0            [24]  530 	push	acc
      000324 8C 82            [24]  531 	mov	dpl,r4
      000326 8D 83            [24]  532 	mov	dph,r5
      000328 8E F0            [24]  533 	mov	b,r6
      00032A EF               [12]  534 	mov	a,r7
      00032B 12r00r00         [24]  535 	lcall	___fsadd
      00032E A8 82            [24]  536 	mov	r0,dpl
      000330 A9 83            [24]  537 	mov	r1,dph
      000332 AA F0            [24]  538 	mov	r2,b
      000334 FB               [12]  539 	mov	r3,a
      000335 E5 81            [12]  540 	mov	a,sp
      000337 24 FC            [12]  541 	add	a,#0xfc
      000339 F5 81            [12]  542 	mov	sp,a
      00033B                        543 00105$:
                                    544 ;	tancotf.c:84: if(n&1)
      00033B E5*15            [12]  545 	mov	a,_tancotf_n_65536_26
      00033D 30 E0 67         [24]  546 	jnb	acc.0,00113$
                                    547 ;	tancotf.c:87: if(iscotan) return (-xnum/xden);
      000340 E5*00            [12]  548 	mov	a,_tancotf_PARM_2
      000342 60 32            [24]  549 	jz	00107$
      000344 AC*11            [24]  550 	mov	r4,_tancotf_xnum_65536_26
      000346 AD*12            [24]  551 	mov	r5,(_tancotf_xnum_65536_26 + 1)
      000348 AE*13            [24]  552 	mov	r6,(_tancotf_xnum_65536_26 + 2)
      00034A E5*14            [12]  553 	mov	a,(_tancotf_xnum_65536_26 + 3)
      00034C B2 E7            [12]  554 	cpl	acc.7
      00034E FF               [12]  555 	mov	r7,a
      00034F C0 00            [24]  556 	push	ar0
      000351 C0 01            [24]  557 	push	ar1
      000353 C0 02            [24]  558 	push	ar2
      000355 C0 03            [24]  559 	push	ar3
      000357 8C 82            [24]  560 	mov	dpl,r4
      000359 8D 83            [24]  561 	mov	dph,r5
      00035B 8E F0            [24]  562 	mov	b,r6
      00035D EF               [12]  563 	mov	a,r7
      00035E 12r00r00         [24]  564 	lcall	___fsdiv
      000361 AC 82            [24]  565 	mov	r4,dpl
      000363 AD 83            [24]  566 	mov	r5,dph
      000365 AE F0            [24]  567 	mov	r6,b
      000367 FF               [12]  568 	mov	r7,a
      000368 E5 81            [12]  569 	mov	a,sp
      00036A 24 FC            [12]  570 	add	a,#0xfc
      00036C F5 81            [12]  571 	mov	sp,a
      00036E 8C 82            [24]  572 	mov	dpl,r4
      000370 8D 83            [24]  573 	mov	dph,r5
      000372 8E F0            [24]  574 	mov	b,r6
      000374 EF               [12]  575 	mov	a,r7
      000375 22               [24]  576 	ret
      000376                        577 00107$:
                                    578 ;	tancotf.c:88: else return (-xden/xnum);
      000376 88 04            [24]  579 	mov	ar4,r0
      000378 89 05            [24]  580 	mov	ar5,r1
      00037A 8A 06            [24]  581 	mov	ar6,r2
      00037C EB               [12]  582 	mov	a,r3
      00037D B2 E7            [12]  583 	cpl	acc.7
      00037F FF               [12]  584 	mov	r7,a
      000380 C0*11            [24]  585 	push	_tancotf_xnum_65536_26
      000382 C0*12            [24]  586 	push	(_tancotf_xnum_65536_26 + 1)
      000384 C0*13            [24]  587 	push	(_tancotf_xnum_65536_26 + 2)
      000386 C0*14            [24]  588 	push	(_tancotf_xnum_65536_26 + 3)
      000388 8C 82            [24]  589 	mov	dpl,r4
      00038A 8D 83            [24]  590 	mov	dph,r5
      00038C 8E F0            [24]  591 	mov	b,r6
      00038E EF               [12]  592 	mov	a,r7
      00038F 12r00r00         [24]  593 	lcall	___fsdiv
      000392 AC 82            [24]  594 	mov	r4,dpl
      000394 AD 83            [24]  595 	mov	r5,dph
      000396 AE F0            [24]  596 	mov	r6,b
      000398 FF               [12]  597 	mov	r7,a
      000399 E5 81            [12]  598 	mov	a,sp
      00039B 24 FC            [12]  599 	add	a,#0xfc
      00039D F5 81            [12]  600 	mov	sp,a
      00039F 8C 82            [24]  601 	mov	dpl,r4
      0003A1 8D 83            [24]  602 	mov	dph,r5
      0003A3 8E F0            [24]  603 	mov	b,r6
      0003A5 EF               [12]  604 	mov	a,r7
      0003A6 22               [24]  605 	ret
      0003A7                        606 00113$:
                                    607 ;	tancotf.c:92: if(iscotan) return (xden/xnum);
      0003A7 E5*00            [12]  608 	mov	a,_tancotf_PARM_2
      0003A9 60 27            [24]  609 	jz	00110$
      0003AB C0*11            [24]  610 	push	_tancotf_xnum_65536_26
      0003AD C0*12            [24]  611 	push	(_tancotf_xnum_65536_26 + 1)
      0003AF C0*13            [24]  612 	push	(_tancotf_xnum_65536_26 + 2)
      0003B1 C0*14            [24]  613 	push	(_tancotf_xnum_65536_26 + 3)
      0003B3 88 82            [24]  614 	mov	dpl,r0
      0003B5 89 83            [24]  615 	mov	dph,r1
      0003B7 8A F0            [24]  616 	mov	b,r2
      0003B9 EB               [12]  617 	mov	a,r3
      0003BA 12r00r00         [24]  618 	lcall	___fsdiv
      0003BD AC 82            [24]  619 	mov	r4,dpl
      0003BF AD 83            [24]  620 	mov	r5,dph
      0003C1 AE F0            [24]  621 	mov	r6,b
      0003C3 FF               [12]  622 	mov	r7,a
      0003C4 E5 81            [12]  623 	mov	a,sp
      0003C6 24 FC            [12]  624 	add	a,#0xfc
      0003C8 F5 81            [12]  625 	mov	sp,a
      0003CA 8C 82            [24]  626 	mov	dpl,r4
      0003CC 8D 83            [24]  627 	mov	dph,r5
      0003CE 8E F0            [24]  628 	mov	b,r6
      0003D0 EF               [12]  629 	mov	a,r7
      0003D1 22               [24]  630 	ret
      0003D2                        631 00110$:
                                    632 ;	tancotf.c:93: else return (xnum/xden);
      0003D2 C0 00            [24]  633 	push	ar0
      0003D4 C0 01            [24]  634 	push	ar1
      0003D6 C0 02            [24]  635 	push	ar2
      0003D8 C0 03            [24]  636 	push	ar3
      0003DA 85*11 82         [24]  637 	mov	dpl,_tancotf_xnum_65536_26
      0003DD 85*12 83         [24]  638 	mov	dph,(_tancotf_xnum_65536_26 + 1)
      0003E0 85*13 F0         [24]  639 	mov	b,(_tancotf_xnum_65536_26 + 2)
      0003E3 E5*14            [12]  640 	mov	a,(_tancotf_xnum_65536_26 + 3)
      0003E5 12r00r00         [24]  641 	lcall	___fsdiv
      0003E8 AC 82            [24]  642 	mov	r4,dpl
      0003EA AD 83            [24]  643 	mov	r5,dph
      0003EC AE F0            [24]  644 	mov	r6,b
      0003EE FF               [12]  645 	mov	r7,a
      0003EF E5 81            [12]  646 	mov	a,sp
      0003F1 24 FC            [12]  647 	add	a,#0xfc
      0003F3 F5 81            [12]  648 	mov	sp,a
      0003F5 8C 82            [24]  649 	mov	dpl,r4
      0003F7 8D 83            [24]  650 	mov	dph,r5
      0003F9 8E F0            [24]  651 	mov	b,r6
      0003FB EF               [12]  652 	mov	a,r7
                                    653 ;	tancotf.c:95: }
      0003FC 22               [24]  654 	ret
                                    655 	.area CSEG    (CODE)
                                    656 	.area CONST   (CODE)
                                    657 	.area XINIT   (CODE)
                                    658 	.area CABS    (ABS,CODE)
