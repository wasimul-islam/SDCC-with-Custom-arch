                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module asincosf
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _asincosf
                                     12 	.globl _ldexpf
                                     13 	.globl _fabsf
                                     14 	.globl _sqrtf
                                     15 	.globl _asincosf_PARM_2
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _asincosf_PARM_2:
      000000                         36 	.ds 1
      000001                         37 _asincosf_x_65536_25:
      000001                         38 	.ds 4
      000005                         39 _asincosf_y_65536_26:
      000005                         40 	.ds 4
      000009                         41 _asincosf_g_65536_26:
      000009                         42 	.ds 4
      00000D                         43 _asincosf_quartPI_65536_26:
      00000D                         44 	.ds 1
      00000E                         45 _asincosf_sloc0_1_0:
      00000E                         46 	.ds 4
      000012                         47 _asincosf_sloc1_1_0:
      000012                         48 	.ds 4
      000016                         49 _asincosf_sloc2_1_0:
      000016                         50 	.ds 4
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; uninitialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; absolute external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XABS    (ABS,XDATA)
                                     79 ;--------------------------------------------------------
                                     80 ; initialized external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XISEG   (XDATA)
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT0 (CODE)
                                     85 	.area GSINIT1 (CODE)
                                     86 	.area GSINIT2 (CODE)
                                     87 	.area GSINIT3 (CODE)
                                     88 	.area GSINIT4 (CODE)
                                     89 	.area GSINIT5 (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area CSEG    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; global & static initialisations
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 	.area GSFINAL (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME    (CODE)
                                    104 	.area HOME    (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CSEG    (CODE)
                                    109 ;------------------------------------------------------------
                                    110 ;Allocation info for local variables in function 'asincosf'
                                    111 ;------------------------------------------------------------
                                    112 ;isacos                    Allocated with name '_asincosf_PARM_2'
                                    113 ;x                         Allocated with name '_asincosf_x_65536_25'
                                    114 ;y                         Allocated with name '_asincosf_y_65536_26'
                                    115 ;g                         Allocated with name '_asincosf_g_65536_26'
                                    116 ;r                         Allocated to registers r4 r5 r6 r7 
                                    117 ;i                         Allocated to registers r3 
                                    118 ;quartPI                   Allocated with name '_asincosf_quartPI_65536_26'
                                    119 ;sloc0                     Allocated with name '_asincosf_sloc0_1_0'
                                    120 ;sloc1                     Allocated with name '_asincosf_sloc1_1_0'
                                    121 ;sloc2                     Allocated with name '_asincosf_sloc2_1_0'
                                    122 ;------------------------------------------------------------
                                    123 ;	asincosf.c:47: float asincosf(float x, bool isacos)
                                    124 ;	-----------------------------------------
                                    125 ;	 function asincosf
                                    126 ;	-----------------------------------------
      000000                        127 _asincosf:
                           000007   128 	ar7 = 0x07
                           000006   129 	ar6 = 0x06
                           000005   130 	ar5 = 0x05
                           000004   131 	ar4 = 0x04
                           000003   132 	ar3 = 0x03
                           000002   133 	ar2 = 0x02
                           000001   134 	ar1 = 0x01
                           000000   135 	ar0 = 0x00
      000000 85 82*01         [24]  136 	mov	_asincosf_x_65536_25,dpl
      000003 85 83*02         [24]  137 	mov	(_asincosf_x_65536_25 + 1),dph
      000006 85 F0*03         [24]  138 	mov	(_asincosf_x_65536_25 + 2),b
      000009 F5*04            [12]  139 	mov	(_asincosf_x_65536_25 + 3),a
                                    140 ;	asincosf.c:51: bool quartPI = isacos;
      00000B 85*00*0D         [24]  141 	mov	_asincosf_quartPI_65536_26,_asincosf_PARM_2
                                    142 ;	asincosf.c:56: y = fabsf(x);
      00000E 85*01 82         [24]  143 	mov	dpl,_asincosf_x_65536_25
      000011 85*02 83         [24]  144 	mov	dph,(_asincosf_x_65536_25 + 1)
      000014 85*03 F0         [24]  145 	mov	b,(_asincosf_x_65536_25 + 2)
      000017 E5*04            [12]  146 	mov	a,(_asincosf_x_65536_25 + 3)
      000019 12r00r00         [24]  147 	lcall	_fabsf
      00001C 85 82*0E         [24]  148 	mov	_asincosf_sloc0_1_0,dpl
      00001F 85 83*0F         [24]  149 	mov	(_asincosf_sloc0_1_0 + 1),dph
      000022 85 F0*10         [24]  150 	mov	(_asincosf_sloc0_1_0 + 2),b
      000025 F5*11            [12]  151 	mov	(_asincosf_sloc0_1_0 + 3),a
                                    152 ;	asincosf.c:57: if (y < EPS)
      000027 E4               [12]  153 	clr	a
      000028 C0 E0            [24]  154 	push	acc
      00002A C0 E0            [24]  155 	push	acc
      00002C 74 80            [12]  156 	mov	a,#0x80
      00002E C0 E0            [24]  157 	push	acc
      000030 74 39            [12]  158 	mov	a,#0x39
      000032 C0 E0            [24]  159 	push	acc
      000034 85*0E 82         [24]  160 	mov	dpl,_asincosf_sloc0_1_0
      000037 85*0F 83         [24]  161 	mov	dph,(_asincosf_sloc0_1_0 + 1)
      00003A 85*10 F0         [24]  162 	mov	b,(_asincosf_sloc0_1_0 + 2)
      00003D E5*11            [12]  163 	mov	a,(_asincosf_sloc0_1_0 + 3)
      00003F 12r00r00         [24]  164 	lcall	___fslt
      000042 AF 82            [24]  165 	mov	r7,dpl
      000044 E5 81            [12]  166 	mov	a,sp
      000046 24 FC            [12]  167 	add	a,#0xfc
      000048 F5 81            [12]  168 	mov	sp,a
      00004A EF               [12]  169 	mov	a,r7
      00004B 60 0F            [24]  170 	jz	00107$
                                    171 ;	asincosf.c:59: r = y;
      00004D 85*0E*12         [24]  172 	mov	_asincosf_sloc1_1_0,_asincosf_sloc0_1_0
      000050 85*0F*13         [24]  173 	mov	(_asincosf_sloc1_1_0 + 1),(_asincosf_sloc0_1_0 + 1)
      000053 85*10*14         [24]  174 	mov	(_asincosf_sloc1_1_0 + 2),(_asincosf_sloc0_1_0 + 2)
      000056 85*11*15         [24]  175 	mov	(_asincosf_sloc1_1_0 + 3),(_asincosf_sloc0_1_0 + 3)
      000059 02r02r99         [24]  176 	ljmp	00108$
      00005C                        177 00107$:
                                    178 ;	asincosf.c:63: if (y > 0.5)
      00005C C0*0E            [24]  179 	push	_asincosf_sloc0_1_0
      00005E C0*0F            [24]  180 	push	(_asincosf_sloc0_1_0 + 1)
      000060 C0*10            [24]  181 	push	(_asincosf_sloc0_1_0 + 2)
      000062 C0*11            [24]  182 	push	(_asincosf_sloc0_1_0 + 3)
      000064 90 00 00         [24]  183 	mov	dptr,#(0x00&0x00ff)
      000067 E4               [12]  184 	clr	a
      000068 F5 F0            [12]  185 	mov	b,a
      00006A 74 3F            [12]  186 	mov	a,#0x3f
      00006C 12r00r00         [24]  187 	lcall	___fslt
      00006F AB 82            [24]  188 	mov	r3,dpl
      000071 E5 81            [12]  189 	mov	a,sp
      000073 24 FC            [12]  190 	add	a,#0xfc
      000075 F5 81            [12]  191 	mov	sp,a
      000077 EB               [12]  192 	mov	a,r3
      000078 70 03            [24]  193 	jnz	00150$
      00007A 02r01r2A         [24]  194 	ljmp	00104$
      00007D                        195 00150$:
                                    196 ;	asincosf.c:65: quartPI = !isacos;
      00007D E5*0D            [12]  197 	mov	a,_asincosf_quartPI_65536_26
      00007F B4 01 00         [24]  198 	cjne	a,#0x01,00151$
      000082                        199 00151$:
      000082 E4               [12]  200 	clr	a
      000083 33               [12]  201 	rlc	a
      000084 F5*0D            [12]  202 	mov	_asincosf_quartPI_65536_26,a
                                    203 ;	asincosf.c:66: if (y > 1.0)
      000086 C0*0E            [24]  204 	push	_asincosf_sloc0_1_0
      000088 C0*0F            [24]  205 	push	(_asincosf_sloc0_1_0 + 1)
      00008A C0*10            [24]  206 	push	(_asincosf_sloc0_1_0 + 2)
      00008C C0*11            [24]  207 	push	(_asincosf_sloc0_1_0 + 3)
      00008E 90 00 00         [24]  208 	mov	dptr,#0x0000
      000091 75 F0 80         [24]  209 	mov	b,#0x80
      000094 74 3F            [12]  210 	mov	a,#0x3f
      000096 12r00r00         [24]  211 	lcall	___fslt
      000099 AB 82            [24]  212 	mov	r3,dpl
      00009B E5 81            [12]  213 	mov	a,sp
      00009D 24 FC            [12]  214 	add	a,#0xfc
      00009F F5 81            [12]  215 	mov	sp,a
      0000A1 EB               [12]  216 	mov	a,r3
      0000A2 60 0D            [24]  217 	jz	00102$
                                    218 ;	asincosf.c:68: errno = EDOM;
      0000A4 75*00 21         [24]  219 	mov	_errno,#0x21
      0000A7 75*01 00         [24]  220 	mov	(_errno + 1),#0x00
                                    221 ;	asincosf.c:69: return 0.0;
      0000AA 90 00 00         [24]  222 	mov	dptr,#(0x00&0x00ff)
      0000AD E4               [12]  223 	clr	a
      0000AE F5 F0            [12]  224 	mov	b,a
      0000B0 22               [24]  225 	ret
      0000B1                        226 00102$:
                                    227 ;	asincosf.c:71: g = (0.5 - y) + 0.5;
      0000B1 C0*0E            [24]  228 	push	_asincosf_sloc0_1_0
      0000B3 C0*0F            [24]  229 	push	(_asincosf_sloc0_1_0 + 1)
      0000B5 C0*10            [24]  230 	push	(_asincosf_sloc0_1_0 + 2)
      0000B7 C0*11            [24]  231 	push	(_asincosf_sloc0_1_0 + 3)
      0000B9 90 00 00         [24]  232 	mov	dptr,#0x0000
      0000BC 75 F0 80         [24]  233 	mov	b,#0x80
      0000BF 74 3F            [12]  234 	mov	a,#0x3f
      0000C1 12r00r00         [24]  235 	lcall	___fssub
      0000C4 A8 82            [24]  236 	mov	r0,dpl
      0000C6 A9 83            [24]  237 	mov	r1,dph
      0000C8 AA F0            [24]  238 	mov	r2,b
      0000CA FB               [12]  239 	mov	r3,a
      0000CB E5 81            [12]  240 	mov	a,sp
      0000CD 24 FC            [12]  241 	add	a,#0xfc
      0000CF F5 81            [12]  242 	mov	sp,a
                                    243 ;	asincosf.c:72: g = ldexpf(g, -1);
      0000D1 75*00 FF         [24]  244 	mov	_ldexpf_PARM_2,#0xff
      0000D4 75*01 FF         [24]  245 	mov	(_ldexpf_PARM_2 + 1),#0xff
      0000D7 88 82            [24]  246 	mov	dpl,r0
      0000D9 89 83            [24]  247 	mov	dph,r1
      0000DB 8A F0            [24]  248 	mov	b,r2
      0000DD EB               [12]  249 	mov	a,r3
      0000DE 12r00r00         [24]  250 	lcall	_ldexpf
                                    251 ;	asincosf.c:73: y = sqrtf(g);
      0000E1 85 82*09         [24]  252 	mov	_asincosf_g_65536_26,dpl
      0000E4 85 83*0A         [24]  253 	mov	(_asincosf_g_65536_26 + 1),dph
      0000E7 85 F0*0B         [24]  254 	mov	(_asincosf_g_65536_26 + 2),b
      0000EA F5*0C            [12]  255 	mov	(_asincosf_g_65536_26 + 3),a
      0000EC 12r00r00         [24]  256 	lcall	_sqrtf
      0000EF 85 82*05         [24]  257 	mov	_asincosf_y_65536_26,dpl
      0000F2 85 83*06         [24]  258 	mov	(_asincosf_y_65536_26 + 1),dph
      0000F5 85 F0*07         [24]  259 	mov	(_asincosf_y_65536_26 + 2),b
      0000F8 F5*08            [12]  260 	mov	(_asincosf_y_65536_26 + 3),a
                                    261 ;	asincosf.c:74: y = -(y + y);
      0000FA C0*05            [24]  262 	push	_asincosf_y_65536_26
      0000FC C0*06            [24]  263 	push	(_asincosf_y_65536_26 + 1)
      0000FE C0*07            [24]  264 	push	(_asincosf_y_65536_26 + 2)
      000100 C0*08            [24]  265 	push	(_asincosf_y_65536_26 + 3)
      000102 85*05 82         [24]  266 	mov	dpl,_asincosf_y_65536_26
      000105 85*06 83         [24]  267 	mov	dph,(_asincosf_y_65536_26 + 1)
      000108 85*07 F0         [24]  268 	mov	b,(_asincosf_y_65536_26 + 2)
      00010B E5*08            [12]  269 	mov	a,(_asincosf_y_65536_26 + 3)
      00010D 12r00r00         [24]  270 	lcall	___fsadd
      000110 A8 82            [24]  271 	mov	r0,dpl
      000112 A9 83            [24]  272 	mov	r1,dph
      000114 AA F0            [24]  273 	mov	r2,b
      000116 FB               [12]  274 	mov	r3,a
      000117 E5 81            [12]  275 	mov	a,sp
      000119 24 FC            [12]  276 	add	a,#0xfc
      00011B F5 81            [12]  277 	mov	sp,a
      00011D 88*0E            [24]  278 	mov	_asincosf_sloc0_1_0,r0
      00011F 89*0F            [24]  279 	mov	(_asincosf_sloc0_1_0 + 1),r1
      000121 8A*10            [24]  280 	mov	(_asincosf_sloc0_1_0 + 2),r2
      000123 EB               [12]  281 	mov	a,r3
      000124 B2 E7            [12]  282 	cpl	acc.7
      000126 F5*11            [12]  283 	mov	(_asincosf_sloc0_1_0 + 3),a
      000128 80 27            [24]  284 	sjmp	00105$
      00012A                        285 00104$:
                                    286 ;	asincosf.c:78: g = y * y;
      00012A C0*0E            [24]  287 	push	_asincosf_sloc0_1_0
      00012C C0*0F            [24]  288 	push	(_asincosf_sloc0_1_0 + 1)
      00012E C0*10            [24]  289 	push	(_asincosf_sloc0_1_0 + 2)
      000130 C0*11            [24]  290 	push	(_asincosf_sloc0_1_0 + 3)
      000132 85*0E 82         [24]  291 	mov	dpl,_asincosf_sloc0_1_0
      000135 85*0F 83         [24]  292 	mov	dph,(_asincosf_sloc0_1_0 + 1)
      000138 85*10 F0         [24]  293 	mov	b,(_asincosf_sloc0_1_0 + 2)
      00013B E5*11            [12]  294 	mov	a,(_asincosf_sloc0_1_0 + 3)
      00013D 12r00r00         [24]  295 	lcall	___fsmul
      000140 85 82*09         [24]  296 	mov	_asincosf_g_65536_26,dpl
      000143 85 83*0A         [24]  297 	mov	(_asincosf_g_65536_26 + 1),dph
      000146 85 F0*0B         [24]  298 	mov	(_asincosf_g_65536_26 + 2),b
      000149 F5*0C            [12]  299 	mov	(_asincosf_g_65536_26 + 3),a
      00014B E5 81            [12]  300 	mov	a,sp
      00014D 24 FC            [12]  301 	add	a,#0xfc
      00014F F5 81            [12]  302 	mov	sp,a
      000151                        303 00105$:
                                    304 ;	asincosf.c:80: r = y + y * ((P(g) * g) / Q(g));
      000151 C0*09            [24]  305 	push	_asincosf_g_65536_26
      000153 C0*0A            [24]  306 	push	(_asincosf_g_65536_26 + 1)
      000155 C0*0B            [24]  307 	push	(_asincosf_g_65536_26 + 2)
      000157 C0*0C            [24]  308 	push	(_asincosf_g_65536_26 + 3)
      000159 90 20 65         [24]  309 	mov	dptr,#0x2065
      00015C 75 F0 01         [24]  310 	mov	b,#0x01
      00015F 74 BF            [12]  311 	mov	a,#0xbf
      000161 12r00r00         [24]  312 	lcall	___fsmul
      000164 A8 82            [24]  313 	mov	r0,dpl
      000166 A9 83            [24]  314 	mov	r1,dph
      000168 AA F0            [24]  315 	mov	r2,b
      00016A FB               [12]  316 	mov	r3,a
      00016B E5 81            [12]  317 	mov	a,sp
      00016D 24 FC            [12]  318 	add	a,#0xfc
      00016F F5 81            [12]  319 	mov	sp,a
      000171 74 6B            [12]  320 	mov	a,#0x6b
      000173 C0 E0            [24]  321 	push	acc
      000175 74 16            [12]  322 	mov	a,#0x16
      000177 C0 E0            [24]  323 	push	acc
      000179 74 6F            [12]  324 	mov	a,#0x6f
      00017B C0 E0            [24]  325 	push	acc
      00017D 74 3F            [12]  326 	mov	a,#0x3f
      00017F C0 E0            [24]  327 	push	acc
      000181 88 82            [24]  328 	mov	dpl,r0
      000183 89 83            [24]  329 	mov	dph,r1
      000185 8A F0            [24]  330 	mov	b,r2
      000187 EB               [12]  331 	mov	a,r3
      000188 12r00r00         [24]  332 	lcall	___fsadd
      00018B A8 82            [24]  333 	mov	r0,dpl
      00018D A9 83            [24]  334 	mov	r1,dph
      00018F AA F0            [24]  335 	mov	r2,b
      000191 FB               [12]  336 	mov	r3,a
      000192 E5 81            [12]  337 	mov	a,sp
      000194 24 FC            [12]  338 	add	a,#0xfc
      000196 F5 81            [12]  339 	mov	sp,a
      000198 C0*09            [24]  340 	push	_asincosf_g_65536_26
      00019A C0*0A            [24]  341 	push	(_asincosf_g_65536_26 + 1)
      00019C C0*0B            [24]  342 	push	(_asincosf_g_65536_26 + 2)
      00019E C0*0C            [24]  343 	push	(_asincosf_g_65536_26 + 3)
      0001A0 88 82            [24]  344 	mov	dpl,r0
      0001A2 89 83            [24]  345 	mov	dph,r1
      0001A4 8A F0            [24]  346 	mov	b,r2
      0001A6 EB               [12]  347 	mov	a,r3
      0001A7 12r00r00         [24]  348 	lcall	___fsmul
      0001AA 85 82*12         [24]  349 	mov	_asincosf_sloc1_1_0,dpl
      0001AD 85 83*13         [24]  350 	mov	(_asincosf_sloc1_1_0 + 1),dph
      0001B0 85 F0*14         [24]  351 	mov	(_asincosf_sloc1_1_0 + 2),b
      0001B3 F5*15            [12]  352 	mov	(_asincosf_sloc1_1_0 + 3),a
      0001B5 E5 81            [12]  353 	mov	a,sp
      0001B7 24 FC            [12]  354 	add	a,#0xfc
      0001B9 F5 81            [12]  355 	mov	sp,a
      0001BB 74 0B            [12]  356 	mov	a,#0x0b
      0001BD C0 E0            [24]  357 	push	acc
      0001BF 74 8D            [12]  358 	mov	a,#0x8d
      0001C1 C0 E0            [24]  359 	push	acc
      0001C3 74 B1            [12]  360 	mov	a,#0xb1
      0001C5 C0 E0            [24]  361 	push	acc
      0001C7 74 C0            [12]  362 	mov	a,#0xc0
      0001C9 C0 E0            [24]  363 	push	acc
      0001CB 85*09 82         [24]  364 	mov	dpl,_asincosf_g_65536_26
      0001CE 85*0A 83         [24]  365 	mov	dph,(_asincosf_g_65536_26 + 1)
      0001D1 85*0B F0         [24]  366 	mov	b,(_asincosf_g_65536_26 + 2)
      0001D4 E5*0C            [12]  367 	mov	a,(_asincosf_g_65536_26 + 3)
      0001D6 12r00r00         [24]  368 	lcall	___fsadd
      0001D9 A8 82            [24]  369 	mov	r0,dpl
      0001DB A9 83            [24]  370 	mov	r1,dph
      0001DD AA F0            [24]  371 	mov	r2,b
      0001DF FB               [12]  372 	mov	r3,a
      0001E0 E5 81            [12]  373 	mov	a,sp
      0001E2 24 FC            [12]  374 	add	a,#0xfc
      0001E4 F5 81            [12]  375 	mov	sp,a
      0001E6 C0*09            [24]  376 	push	_asincosf_g_65536_26
      0001E8 C0*0A            [24]  377 	push	(_asincosf_g_65536_26 + 1)
      0001EA C0*0B            [24]  378 	push	(_asincosf_g_65536_26 + 2)
      0001EC C0*0C            [24]  379 	push	(_asincosf_g_65536_26 + 3)
      0001EE 88 82            [24]  380 	mov	dpl,r0
      0001F0 89 83            [24]  381 	mov	dph,r1
      0001F2 8A F0            [24]  382 	mov	b,r2
      0001F4 EB               [12]  383 	mov	a,r3
      0001F5 12r00r00         [24]  384 	lcall	___fsmul
      0001F8 A8 82            [24]  385 	mov	r0,dpl
      0001FA A9 83            [24]  386 	mov	r1,dph
      0001FC AA F0            [24]  387 	mov	r2,b
      0001FE FB               [12]  388 	mov	r3,a
      0001FF E5 81            [12]  389 	mov	a,sp
      000201 24 FC            [12]  390 	add	a,#0xfc
      000203 F5 81            [12]  391 	mov	sp,a
      000205 74 F0            [12]  392 	mov	a,#0xf0
      000207 C0 E0            [24]  393 	push	acc
      000209 74 50            [12]  394 	mov	a,#0x50
      00020B C0 E0            [24]  395 	push	acc
      00020D 74 B3            [12]  396 	mov	a,#0xb3
      00020F C0 E0            [24]  397 	push	acc
      000211 74 40            [12]  398 	mov	a,#0x40
      000213 C0 E0            [24]  399 	push	acc
      000215 88 82            [24]  400 	mov	dpl,r0
      000217 89 83            [24]  401 	mov	dph,r1
      000219 8A F0            [24]  402 	mov	b,r2
      00021B EB               [12]  403 	mov	a,r3
      00021C 12r00r00         [24]  404 	lcall	___fsadd
      00021F A8 82            [24]  405 	mov	r0,dpl
      000221 A9 83            [24]  406 	mov	r1,dph
      000223 AA F0            [24]  407 	mov	r2,b
      000225 FB               [12]  408 	mov	r3,a
      000226 E5 81            [12]  409 	mov	a,sp
      000228 24 FC            [12]  410 	add	a,#0xfc
      00022A F5 81            [12]  411 	mov	sp,a
      00022C C0 00            [24]  412 	push	ar0
      00022E C0 01            [24]  413 	push	ar1
      000230 C0 02            [24]  414 	push	ar2
      000232 C0 03            [24]  415 	push	ar3
      000234 85*12 82         [24]  416 	mov	dpl,_asincosf_sloc1_1_0
      000237 85*13 83         [24]  417 	mov	dph,(_asincosf_sloc1_1_0 + 1)
      00023A 85*14 F0         [24]  418 	mov	b,(_asincosf_sloc1_1_0 + 2)
      00023D E5*15            [12]  419 	mov	a,(_asincosf_sloc1_1_0 + 3)
      00023F 12r00r00         [24]  420 	lcall	___fsdiv
      000242 A8 82            [24]  421 	mov	r0,dpl
      000244 A9 83            [24]  422 	mov	r1,dph
      000246 AA F0            [24]  423 	mov	r2,b
      000248 FB               [12]  424 	mov	r3,a
      000249 E5 81            [12]  425 	mov	a,sp
      00024B 24 FC            [12]  426 	add	a,#0xfc
      00024D F5 81            [12]  427 	mov	sp,a
      00024F C0 00            [24]  428 	push	ar0
      000251 C0 01            [24]  429 	push	ar1
      000253 C0 02            [24]  430 	push	ar2
      000255 C0 03            [24]  431 	push	ar3
      000257 85*0E 82         [24]  432 	mov	dpl,_asincosf_sloc0_1_0
      00025A 85*0F 83         [24]  433 	mov	dph,(_asincosf_sloc0_1_0 + 1)
      00025D 85*10 F0         [24]  434 	mov	b,(_asincosf_sloc0_1_0 + 2)
      000260 E5*11            [12]  435 	mov	a,(_asincosf_sloc0_1_0 + 3)
      000262 12r00r00         [24]  436 	lcall	___fsmul
      000265 A8 82            [24]  437 	mov	r0,dpl
      000267 A9 83            [24]  438 	mov	r1,dph
      000269 AA F0            [24]  439 	mov	r2,b
      00026B FB               [12]  440 	mov	r3,a
      00026C E5 81            [12]  441 	mov	a,sp
      00026E 24 FC            [12]  442 	add	a,#0xfc
      000270 F5 81            [12]  443 	mov	sp,a
      000272 C0 00            [24]  444 	push	ar0
      000274 C0 01            [24]  445 	push	ar1
      000276 C0 02            [24]  446 	push	ar2
      000278 C0 03            [24]  447 	push	ar3
      00027A 85*0E 82         [24]  448 	mov	dpl,_asincosf_sloc0_1_0
      00027D 85*0F 83         [24]  449 	mov	dph,(_asincosf_sloc0_1_0 + 1)
      000280 85*10 F0         [24]  450 	mov	b,(_asincosf_sloc0_1_0 + 2)
      000283 E5*11            [12]  451 	mov	a,(_asincosf_sloc0_1_0 + 3)
      000285 12r00r00         [24]  452 	lcall	___fsadd
      000288 85 82*12         [24]  453 	mov	_asincosf_sloc1_1_0,dpl
      00028B 85 83*13         [24]  454 	mov	(_asincosf_sloc1_1_0 + 1),dph
      00028E 85 F0*14         [24]  455 	mov	(_asincosf_sloc1_1_0 + 2),b
      000291 F5*15            [12]  456 	mov	(_asincosf_sloc1_1_0 + 3),a
      000293 E5 81            [12]  457 	mov	a,sp
      000295 24 FC            [12]  458 	add	a,#0xfc
      000297 F5 81            [12]  459 	mov	sp,a
      000299                        460 00108$:
                                    461 ;	asincosf.c:82: i = quartPI;
      000299 AB*0D            [24]  462 	mov	r3,_asincosf_quartPI_65536_26
                                    463 ;	asincosf.c:83: if (isacos)
      00029B E5*00            [12]  464 	mov	a,_asincosf_PARM_2
      00029D 70 03            [24]  465 	jnz	00153$
      00029F 02r03r9E         [24]  466 	ljmp	00115$
      0002A2                        467 00153$:
                                    468 ;	asincosf.c:85: if (x < 0.0)
      0002A2 C0 03            [24]  469 	push	ar3
      0002A4 E4               [12]  470 	clr	a
      0002A5 C0 E0            [24]  471 	push	acc
      0002A7 C0 E0            [24]  472 	push	acc
      0002A9 C0 E0            [24]  473 	push	acc
      0002AB C0 E0            [24]  474 	push	acc
      0002AD 85*01 82         [24]  475 	mov	dpl,_asincosf_x_65536_25
      0002B0 85*02 83         [24]  476 	mov	dph,(_asincosf_x_65536_25 + 1)
      0002B3 85*03 F0         [24]  477 	mov	b,(_asincosf_x_65536_25 + 2)
      0002B6 E5*04            [12]  478 	mov	a,(_asincosf_x_65536_25 + 3)
      0002B8 12r00r00         [24]  479 	lcall	___fslt
      0002BB AA 82            [24]  480 	mov	r2,dpl
      0002BD E5 81            [12]  481 	mov	a,sp
      0002BF 24 FC            [12]  482 	add	a,#0xfc
      0002C1 F5 81            [12]  483 	mov	sp,a
      0002C3 D0 03            [24]  484 	pop	ar3
      0002C5 EA               [12]  485 	mov	a,r2
      0002C6 60 67            [24]  486 	jz	00110$
                                    487 ;	asincosf.c:86: r = (b[i] + r) + b[i];
      0002C8 EB               [12]  488 	mov	a,r3
      0002C9 75 F0 04         [24]  489 	mov	b,#0x04
      0002CC A4               [48]  490 	mul	ab
      0002CD 24r08            [12]  491 	add	a,#_asincosf_b_65536_26
      0002CF F5 82            [12]  492 	mov	dpl,a
      0002D1 74s00            [12]  493 	mov	a,#(_asincosf_b_65536_26 >> 8)
      0002D3 35 F0            [12]  494 	addc	a,b
      0002D5 F5 83            [12]  495 	mov	dph,a
      0002D7 E4               [12]  496 	clr	a
      0002D8 93               [24]  497 	movc	a,@a+dptr
      0002D9 F5*0E            [12]  498 	mov	_asincosf_sloc0_1_0,a
      0002DB A3               [24]  499 	inc	dptr
      0002DC E4               [12]  500 	clr	a
      0002DD 93               [24]  501 	movc	a,@a+dptr
      0002DE F5*0F            [12]  502 	mov	(_asincosf_sloc0_1_0 + 1),a
      0002E0 A3               [24]  503 	inc	dptr
      0002E1 E4               [12]  504 	clr	a
      0002E2 93               [24]  505 	movc	a,@a+dptr
      0002E3 F5*10            [12]  506 	mov	(_asincosf_sloc0_1_0 + 2),a
      0002E5 A3               [24]  507 	inc	dptr
      0002E6 E4               [12]  508 	clr	a
      0002E7 93               [24]  509 	movc	a,@a+dptr
      0002E8 F5*11            [12]  510 	mov	(_asincosf_sloc0_1_0 + 3),a
      0002EA C0*12            [24]  511 	push	_asincosf_sloc1_1_0
      0002EC C0*13            [24]  512 	push	(_asincosf_sloc1_1_0 + 1)
      0002EE C0*14            [24]  513 	push	(_asincosf_sloc1_1_0 + 2)
      0002F0 C0*15            [24]  514 	push	(_asincosf_sloc1_1_0 + 3)
      0002F2 85*0E 82         [24]  515 	mov	dpl,_asincosf_sloc0_1_0
      0002F5 85*0F 83         [24]  516 	mov	dph,(_asincosf_sloc0_1_0 + 1)
      0002F8 85*10 F0         [24]  517 	mov	b,(_asincosf_sloc0_1_0 + 2)
      0002FB E5*11            [12]  518 	mov	a,(_asincosf_sloc0_1_0 + 3)
      0002FD 12r00r00         [24]  519 	lcall	___fsadd
      000300 AC 82            [24]  520 	mov	r4,dpl
      000302 AD 83            [24]  521 	mov	r5,dph
      000304 AE F0            [24]  522 	mov	r6,b
      000306 FF               [12]  523 	mov	r7,a
      000307 E5 81            [12]  524 	mov	a,sp
      000309 24 FC            [12]  525 	add	a,#0xfc
      00030B F5 81            [12]  526 	mov	sp,a
      00030D C0*0E            [24]  527 	push	_asincosf_sloc0_1_0
      00030F C0*0F            [24]  528 	push	(_asincosf_sloc0_1_0 + 1)
      000311 C0*10            [24]  529 	push	(_asincosf_sloc0_1_0 + 2)
      000313 C0*11            [24]  530 	push	(_asincosf_sloc0_1_0 + 3)
      000315 8C 82            [24]  531 	mov	dpl,r4
      000317 8D 83            [24]  532 	mov	dph,r5
      000319 8E F0            [24]  533 	mov	b,r6
      00031B EF               [12]  534 	mov	a,r7
      00031C 12r00r00         [24]  535 	lcall	___fsadd
      00031F AC 82            [24]  536 	mov	r4,dpl
      000321 AD 83            [24]  537 	mov	r5,dph
      000323 AE F0            [24]  538 	mov	r6,b
      000325 FF               [12]  539 	mov	r7,a
      000326 E5 81            [12]  540 	mov	a,sp
      000328 24 FC            [12]  541 	add	a,#0xfc
      00032A F5 81            [12]  542 	mov	sp,a
      00032C 02r04r38         [24]  543 	ljmp	00116$
      00032F                        544 00110$:
                                    545 ;	asincosf.c:88: r = (a[i] - r) + a[i];
      00032F EB               [12]  546 	mov	a,r3
      000330 75 F0 04         [24]  547 	mov	b,#0x04
      000333 A4               [48]  548 	mul	ab
      000334 24r00            [12]  549 	add	a,#_asincosf_a_65536_26
      000336 F5 82            [12]  550 	mov	dpl,a
      000338 74s00            [12]  551 	mov	a,#(_asincosf_a_65536_26 >> 8)
      00033A 35 F0            [12]  552 	addc	a,b
      00033C F5 83            [12]  553 	mov	dph,a
      00033E E4               [12]  554 	clr	a
      00033F 93               [24]  555 	movc	a,@a+dptr
      000340 F5*0E            [12]  556 	mov	_asincosf_sloc0_1_0,a
      000342 A3               [24]  557 	inc	dptr
      000343 E4               [12]  558 	clr	a
      000344 93               [24]  559 	movc	a,@a+dptr
      000345 F5*0F            [12]  560 	mov	(_asincosf_sloc0_1_0 + 1),a
      000347 A3               [24]  561 	inc	dptr
      000348 E4               [12]  562 	clr	a
      000349 93               [24]  563 	movc	a,@a+dptr
      00034A F5*10            [12]  564 	mov	(_asincosf_sloc0_1_0 + 2),a
      00034C A3               [24]  565 	inc	dptr
      00034D E4               [12]  566 	clr	a
      00034E 93               [24]  567 	movc	a,@a+dptr
      00034F F5*11            [12]  568 	mov	(_asincosf_sloc0_1_0 + 3),a
      000351 C0*12            [24]  569 	push	_asincosf_sloc1_1_0
      000353 C0*13            [24]  570 	push	(_asincosf_sloc1_1_0 + 1)
      000355 C0*14            [24]  571 	push	(_asincosf_sloc1_1_0 + 2)
      000357 C0*15            [24]  572 	push	(_asincosf_sloc1_1_0 + 3)
      000359 85*0E 82         [24]  573 	mov	dpl,_asincosf_sloc0_1_0
      00035C 85*0F 83         [24]  574 	mov	dph,(_asincosf_sloc0_1_0 + 1)
      00035F 85*10 F0         [24]  575 	mov	b,(_asincosf_sloc0_1_0 + 2)
      000362 E5*11            [12]  576 	mov	a,(_asincosf_sloc0_1_0 + 3)
      000364 12r00r00         [24]  577 	lcall	___fssub
      000367 85 82*16         [24]  578 	mov	_asincosf_sloc2_1_0,dpl
      00036A 85 83*17         [24]  579 	mov	(_asincosf_sloc2_1_0 + 1),dph
      00036D 85 F0*18         [24]  580 	mov	(_asincosf_sloc2_1_0 + 2),b
      000370 F5*19            [12]  581 	mov	(_asincosf_sloc2_1_0 + 3),a
      000372 E5 81            [12]  582 	mov	a,sp
      000374 24 FC            [12]  583 	add	a,#0xfc
      000376 F5 81            [12]  584 	mov	sp,a
      000378 C0*0E            [24]  585 	push	_asincosf_sloc0_1_0
      00037A C0*0F            [24]  586 	push	(_asincosf_sloc0_1_0 + 1)
      00037C C0*10            [24]  587 	push	(_asincosf_sloc0_1_0 + 2)
      00037E C0*11            [24]  588 	push	(_asincosf_sloc0_1_0 + 3)
      000380 85*16 82         [24]  589 	mov	dpl,_asincosf_sloc2_1_0
      000383 85*17 83         [24]  590 	mov	dph,(_asincosf_sloc2_1_0 + 1)
      000386 85*18 F0         [24]  591 	mov	b,(_asincosf_sloc2_1_0 + 2)
      000389 E5*19            [12]  592 	mov	a,(_asincosf_sloc2_1_0 + 3)
      00038B 12r00r00         [24]  593 	lcall	___fsadd
      00038E AC 82            [24]  594 	mov	r4,dpl
      000390 AD 83            [24]  595 	mov	r5,dph
      000392 AE F0            [24]  596 	mov	r6,b
      000394 FF               [12]  597 	mov	r7,a
      000395 E5 81            [12]  598 	mov	a,sp
      000397 24 FC            [12]  599 	add	a,#0xfc
      000399 F5 81            [12]  600 	mov	sp,a
      00039B 02r04r38         [24]  601 	ljmp	00116$
      00039E                        602 00115$:
                                    603 ;	asincosf.c:92: r = (a[i] + r) + a[i];
      00039E EB               [12]  604 	mov	a,r3
      00039F 75 F0 04         [24]  605 	mov	b,#0x04
      0003A2 A4               [48]  606 	mul	ab
      0003A3 24r00            [12]  607 	add	a,#_asincosf_a_65536_26
      0003A5 F5 82            [12]  608 	mov	dpl,a
      0003A7 74s00            [12]  609 	mov	a,#(_asincosf_a_65536_26 >> 8)
      0003A9 35 F0            [12]  610 	addc	a,b
      0003AB F5 83            [12]  611 	mov	dph,a
      0003AD E4               [12]  612 	clr	a
      0003AE 93               [24]  613 	movc	a,@a+dptr
      0003AF F5*16            [12]  614 	mov	_asincosf_sloc2_1_0,a
      0003B1 A3               [24]  615 	inc	dptr
      0003B2 E4               [12]  616 	clr	a
      0003B3 93               [24]  617 	movc	a,@a+dptr
      0003B4 F5*17            [12]  618 	mov	(_asincosf_sloc2_1_0 + 1),a
      0003B6 A3               [24]  619 	inc	dptr
      0003B7 E4               [12]  620 	clr	a
      0003B8 93               [24]  621 	movc	a,@a+dptr
      0003B9 F5*18            [12]  622 	mov	(_asincosf_sloc2_1_0 + 2),a
      0003BB A3               [24]  623 	inc	dptr
      0003BC E4               [12]  624 	clr	a
      0003BD 93               [24]  625 	movc	a,@a+dptr
      0003BE F5*19            [12]  626 	mov	(_asincosf_sloc2_1_0 + 3),a
      0003C0 C0*12            [24]  627 	push	_asincosf_sloc1_1_0
      0003C2 C0*13            [24]  628 	push	(_asincosf_sloc1_1_0 + 1)
      0003C4 C0*14            [24]  629 	push	(_asincosf_sloc1_1_0 + 2)
      0003C6 C0*15            [24]  630 	push	(_asincosf_sloc1_1_0 + 3)
      0003C8 85*16 82         [24]  631 	mov	dpl,_asincosf_sloc2_1_0
      0003CB 85*17 83         [24]  632 	mov	dph,(_asincosf_sloc2_1_0 + 1)
      0003CE 85*18 F0         [24]  633 	mov	b,(_asincosf_sloc2_1_0 + 2)
      0003D1 E5*19            [12]  634 	mov	a,(_asincosf_sloc2_1_0 + 3)
      0003D3 12r00r00         [24]  635 	lcall	___fsadd
      0003D6 A8 82            [24]  636 	mov	r0,dpl
      0003D8 A9 83            [24]  637 	mov	r1,dph
      0003DA AA F0            [24]  638 	mov	r2,b
      0003DC FB               [12]  639 	mov	r3,a
      0003DD E5 81            [12]  640 	mov	a,sp
      0003DF 24 FC            [12]  641 	add	a,#0xfc
      0003E1 F5 81            [12]  642 	mov	sp,a
      0003E3 C0*16            [24]  643 	push	_asincosf_sloc2_1_0
      0003E5 C0*17            [24]  644 	push	(_asincosf_sloc2_1_0 + 1)
      0003E7 C0*18            [24]  645 	push	(_asincosf_sloc2_1_0 + 2)
      0003E9 C0*19            [24]  646 	push	(_asincosf_sloc2_1_0 + 3)
      0003EB 88 82            [24]  647 	mov	dpl,r0
      0003ED 89 83            [24]  648 	mov	dph,r1
      0003EF 8A F0            [24]  649 	mov	b,r2
      0003F1 EB               [12]  650 	mov	a,r3
      0003F2 12r00r00         [24]  651 	lcall	___fsadd
      0003F5 AC 82            [24]  652 	mov	r4,dpl
      0003F7 AD 83            [24]  653 	mov	r5,dph
      0003F9 AE F0            [24]  654 	mov	r6,b
      0003FB FF               [12]  655 	mov	r7,a
      0003FC E5 81            [12]  656 	mov	a,sp
      0003FE 24 FC            [12]  657 	add	a,#0xfc
      000400 F5 81            [12]  658 	mov	sp,a
                                    659 ;	asincosf.c:93: if (x < 0.0)
      000402 C0 07            [24]  660 	push	ar7
      000404 C0 06            [24]  661 	push	ar6
      000406 C0 05            [24]  662 	push	ar5
      000408 C0 04            [24]  663 	push	ar4
      00040A E4               [12]  664 	clr	a
      00040B C0 E0            [24]  665 	push	acc
      00040D C0 E0            [24]  666 	push	acc
      00040F C0 E0            [24]  667 	push	acc
      000411 C0 E0            [24]  668 	push	acc
      000413 85*01 82         [24]  669 	mov	dpl,_asincosf_x_65536_25
      000416 85*02 83         [24]  670 	mov	dph,(_asincosf_x_65536_25 + 1)
      000419 85*03 F0         [24]  671 	mov	b,(_asincosf_x_65536_25 + 2)
      00041C E5*04            [12]  672 	mov	a,(_asincosf_x_65536_25 + 3)
      00041E 12r00r00         [24]  673 	lcall	___fslt
      000421 AB 82            [24]  674 	mov	r3,dpl
      000423 E5 81            [12]  675 	mov	a,sp
      000425 24 FC            [12]  676 	add	a,#0xfc
      000427 F5 81            [12]  677 	mov	sp,a
      000429 D0 04            [24]  678 	pop	ar4
      00042B D0 05            [24]  679 	pop	ar5
      00042D D0 06            [24]  680 	pop	ar6
      00042F D0 07            [24]  681 	pop	ar7
      000431 EB               [12]  682 	mov	a,r3
      000432 60 04            [24]  683 	jz	00116$
                                    684 ;	asincosf.c:94: r = -r;
      000434 EF               [12]  685 	mov	a,r7
      000435 B2 E7            [12]  686 	cpl	acc.7
      000437 FF               [12]  687 	mov	r7,a
      000438                        688 00116$:
                                    689 ;	asincosf.c:96: return r;
      000438 8C 82            [24]  690 	mov	dpl,r4
      00043A 8D 83            [24]  691 	mov	dph,r5
      00043C 8E F0            [24]  692 	mov	b,r6
      00043E EF               [12]  693 	mov	a,r7
                                    694 ;	asincosf.c:97: }
      00043F 22               [24]  695 	ret
                                    696 	.area CSEG    (CODE)
                                    697 	.area CONST   (CODE)
      000000                        698 _asincosf_a_65536_26:
      000000 00 00 00 00            699 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000004 DB 0F 49 3F            700 	.byte #0xdb, #0x0f, #0x49, #0x3f	;  7.853982e-01
      000008                        701 _asincosf_b_65536_26:
      000008 DB 0F C9 3F            702 	.byte #0xdb, #0x0f, #0xc9, #0x3f	;  1.570796e+00
      00000C DB 0F 49 3F            703 	.byte #0xdb, #0x0f, #0x49, #0x3f	;  7.853982e-01
                                    704 	.area XINIT   (CODE)
                                    705 	.area CABS    (ABS,CODE)
