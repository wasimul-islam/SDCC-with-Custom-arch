                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _mullonglong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __mullonglong_PARM_2
                                     12 	.globl __mullonglong
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 __mullonglong_PARM_2:
      000000                         37 	.ds 8
      000008                         38 __mullonglong_ll_65536_1:
      000008                         39 	.ds 8
      000010                         40 __mullonglong_ret_65536_2:
      000010                         41 	.ds 8
      000018                         42 __mullonglong_i_65536_2:
      000018                         43 	.ds 1
      000019                         44 __mullonglong_j_65536_2:
      000019                         45 	.ds 1
      00001A                         46 __mullonglong_l_196608_4:
      00001A                         47 	.ds 1
      00001B                         48 __mullonglong_sloc0_1_0:
      00001B                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; indirectly addressable internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area ISEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area IABS    (ABS,DATA)
                                     58 	.area IABS    (ABS,DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; bit data
                                     61 ;--------------------------------------------------------
                                     62 	.area BSEG    (BIT)
                                     63 ;--------------------------------------------------------
                                     64 ; paged external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area PSEG    (PAG,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; uninitialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XSEG    (XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XABS    (ABS,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; initialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XISEG   (XDATA)
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function '_mullonglong'
                                    107 ;------------------------------------------------------------
                                    108 ;lr                        Allocated with name '__mullonglong_PARM_2'
                                    109 ;ll                        Allocated with name '__mullonglong_ll_65536_1'
                                    110 ;ret                       Allocated with name '__mullonglong_ret_65536_2'
                                    111 ;i                         Allocated with name '__mullonglong_i_65536_2'
                                    112 ;j                         Allocated with name '__mullonglong_j_65536_2'
                                    113 ;l                         Allocated with name '__mullonglong_l_196608_4'
                                    114 ;r                         Allocated to registers r0 
                                    115 ;sloc0                     Allocated with name '__mullonglong_sloc0_1_0'
                                    116 ;------------------------------------------------------------
                                    117 ;	_mullonglong.c:39: long long _mullonglong(long long ll, long long lr) __SDCC_NONBANKED
                                    118 ;	-----------------------------------------
                                    119 ;	 function _mullonglong
                                    120 ;	-----------------------------------------
      000000                        121 __mullonglong:
                           000007   122 	ar7 = 0x07
                           000006   123 	ar6 = 0x06
                           000005   124 	ar5 = 0x05
                           000004   125 	ar4 = 0x04
                           000003   126 	ar3 = 0x03
                           000002   127 	ar2 = 0x02
                           000001   128 	ar1 = 0x01
                           000000   129 	ar0 = 0x00
      000000 85 82*08         [24]  130 	mov	__mullonglong_ll_65536_1,dpl
      000003 85 83*09         [24]  131 	mov	(__mullonglong_ll_65536_1 + 1),dph
      000006 85 F0*0A         [24]  132 	mov	(__mullonglong_ll_65536_1 + 2),b
      000009 F5*0B            [12]  133 	mov	(__mullonglong_ll_65536_1 + 3),a
      00000B 8C*0C            [24]  134 	mov	(__mullonglong_ll_65536_1 + 4),r4
      00000D 8D*0D            [24]  135 	mov	(__mullonglong_ll_65536_1 + 5),r5
      00000F 8E*0E            [24]  136 	mov	(__mullonglong_ll_65536_1 + 6),r6
      000011 8F*0F            [24]  137 	mov	(__mullonglong_ll_65536_1 + 7),r7
                                    138 ;	_mullonglong.c:41: unsigned long long ret = 0ull;
      000013 E4               [12]  139 	clr	a
      000014 F5*10            [12]  140 	mov	__mullonglong_ret_65536_2,a
      000016 F5*11            [12]  141 	mov	(__mullonglong_ret_65536_2 + 1),a
      000018 F5*12            [12]  142 	mov	(__mullonglong_ret_65536_2 + 2),a
      00001A F5*13            [12]  143 	mov	(__mullonglong_ret_65536_2 + 3),a
      00001C F5*14            [12]  144 	mov	(__mullonglong_ret_65536_2 + 4),a
      00001E F5*15            [12]  145 	mov	(__mullonglong_ret_65536_2 + 5),a
      000020 F5*16            [12]  146 	mov	(__mullonglong_ret_65536_2 + 6),a
      000022 F5*17            [12]  147 	mov	(__mullonglong_ret_65536_2 + 7),a
                                    148 ;	_mullonglong.c:44: for (i = 0; i < sizeof (long long); i++)
      000024 F5*18            [12]  149 	mov	__mullonglong_i_65536_2,a
      000026                        150 00106$:
                                    151 ;	_mullonglong.c:46: unsigned char l = ll >> (i * 8);
      000026 E5*18            [12]  152 	mov	a,__mullonglong_i_65536_2
      000028 C4               [12]  153 	swap	a
      000029 03               [12]  154 	rr	a
      00002A 54 F8            [12]  155 	anl	a,#0xf8
      00002C FE               [12]  156 	mov	r6,a
      00002D 8E F0            [24]  157 	mov	b,r6
      00002F 05 F0            [12]  158 	inc	b
      000031 A8*08            [24]  159 	mov	r0,__mullonglong_ll_65536_1
      000033 A9*09            [24]  160 	mov	r1,(__mullonglong_ll_65536_1 + 1)
      000035 AA*0A            [24]  161 	mov	r2,(__mullonglong_ll_65536_1 + 2)
      000037 AB*0B            [24]  162 	mov	r3,(__mullonglong_ll_65536_1 + 3)
      000039 AC*0C            [24]  163 	mov	r4,(__mullonglong_ll_65536_1 + 4)
      00003B AD*0D            [24]  164 	mov	r5,(__mullonglong_ll_65536_1 + 5)
      00003D AE*0E            [24]  165 	mov	r6,(__mullonglong_ll_65536_1 + 6)
      00003F E5*0F            [12]  166 	mov	a,(__mullonglong_ll_65536_1 + 7)
      000041 FF               [12]  167 	mov	r7,a
      000042 33               [12]  168 	rlc	a
      000043 92 D2            [24]  169 	mov	ov,c
      000045 80 1A            [24]  170 	sjmp	00129$
      000047                        171 00128$:
      000047 A2 D2            [12]  172 	mov	c,ov
      000049 EF               [12]  173 	mov	a,r7
      00004A 13               [12]  174 	rrc	a
      00004B FF               [12]  175 	mov	r7,a
      00004C EE               [12]  176 	mov	a,r6
      00004D 13               [12]  177 	rrc	a
      00004E FE               [12]  178 	mov	r6,a
      00004F ED               [12]  179 	mov	a,r5
      000050 13               [12]  180 	rrc	a
      000051 FD               [12]  181 	mov	r5,a
      000052 EC               [12]  182 	mov	a,r4
      000053 13               [12]  183 	rrc	a
      000054 FC               [12]  184 	mov	r4,a
      000055 EB               [12]  185 	mov	a,r3
      000056 13               [12]  186 	rrc	a
      000057 FB               [12]  187 	mov	r3,a
      000058 EA               [12]  188 	mov	a,r2
      000059 13               [12]  189 	rrc	a
      00005A FA               [12]  190 	mov	r2,a
      00005B E9               [12]  191 	mov	a,r1
      00005C 13               [12]  192 	rrc	a
      00005D F9               [12]  193 	mov	r1,a
      00005E E8               [12]  194 	mov	a,r0
      00005F 13               [12]  195 	rrc	a
      000060 F8               [12]  196 	mov	r0,a
      000061                        197 00129$:
      000061 D5 F0 E3         [24]  198 	djnz	b,00128$
      000064 88*1A            [24]  199 	mov	__mullonglong_l_196608_4,r0
                                    200 ;	_mullonglong.c:47: for(j = 0; (i + j) < sizeof (long long); j++)
      000066 75*19 00         [24]  201 	mov	__mullonglong_j_65536_2,#0x00
      000069                        202 00104$:
      000069 AD*18            [24]  203 	mov	r5,__mullonglong_i_65536_2
      00006B 7E 00            [12]  204 	mov	r6,#0x00
      00006D AB*19            [24]  205 	mov	r3,__mullonglong_j_65536_2
      00006F 7C 00            [12]  206 	mov	r4,#0x00
      000071 EB               [12]  207 	mov	a,r3
      000072 2D               [12]  208 	add	a,r5
      000073 FD               [12]  209 	mov	r5,a
      000074 EC               [12]  210 	mov	a,r4
      000075 3E               [12]  211 	addc	a,r6
      000076 FE               [12]  212 	mov	r6,a
      000077 C3               [12]  213 	clr	c
      000078 ED               [12]  214 	mov	a,r5
      000079 94 08            [12]  215 	subb	a,#0x08
      00007B EE               [12]  216 	mov	a,r6
      00007C 64 80            [12]  217 	xrl	a,#0x80
      00007E 94 80            [12]  218 	subb	a,#0x80
      000080 40 03            [24]  219 	jc	00130$
      000082 02r01r43         [24]  220 	ljmp	00107$
      000085                        221 00130$:
                                    222 ;	_mullonglong.c:49: unsigned char r = lr >> (j * 8);
      000085 E5*19            [12]  223 	mov	a,__mullonglong_j_65536_2
      000087 C4               [12]  224 	swap	a
      000088 03               [12]  225 	rr	a
      000089 54 F8            [12]  226 	anl	a,#0xf8
      00008B FE               [12]  227 	mov	r6,a
      00008C 8E F0            [24]  228 	mov	b,r6
      00008E 05 F0            [12]  229 	inc	b
      000090 A8*00            [24]  230 	mov	r0,__mullonglong_PARM_2
      000092 A9*01            [24]  231 	mov	r1,(__mullonglong_PARM_2 + 1)
      000094 AA*02            [24]  232 	mov	r2,(__mullonglong_PARM_2 + 2)
      000096 AB*03            [24]  233 	mov	r3,(__mullonglong_PARM_2 + 3)
      000098 AC*04            [24]  234 	mov	r4,(__mullonglong_PARM_2 + 4)
      00009A AD*05            [24]  235 	mov	r5,(__mullonglong_PARM_2 + 5)
      00009C AE*06            [24]  236 	mov	r6,(__mullonglong_PARM_2 + 6)
      00009E E5*07            [12]  237 	mov	a,(__mullonglong_PARM_2 + 7)
      0000A0 FF               [12]  238 	mov	r7,a
      0000A1 33               [12]  239 	rlc	a
      0000A2 92 D2            [24]  240 	mov	ov,c
      0000A4 80 1A            [24]  241 	sjmp	00132$
      0000A6                        242 00131$:
      0000A6 A2 D2            [12]  243 	mov	c,ov
      0000A8 EF               [12]  244 	mov	a,r7
      0000A9 13               [12]  245 	rrc	a
      0000AA FF               [12]  246 	mov	r7,a
      0000AB EE               [12]  247 	mov	a,r6
      0000AC 13               [12]  248 	rrc	a
      0000AD FE               [12]  249 	mov	r6,a
      0000AE ED               [12]  250 	mov	a,r5
      0000AF 13               [12]  251 	rrc	a
      0000B0 FD               [12]  252 	mov	r5,a
      0000B1 EC               [12]  253 	mov	a,r4
      0000B2 13               [12]  254 	rrc	a
      0000B3 FC               [12]  255 	mov	r4,a
      0000B4 EB               [12]  256 	mov	a,r3
      0000B5 13               [12]  257 	rrc	a
      0000B6 FB               [12]  258 	mov	r3,a
      0000B7 EA               [12]  259 	mov	a,r2
      0000B8 13               [12]  260 	rrc	a
      0000B9 FA               [12]  261 	mov	r2,a
      0000BA E9               [12]  262 	mov	a,r1
      0000BB 13               [12]  263 	rrc	a
      0000BC F9               [12]  264 	mov	r1,a
      0000BD E8               [12]  265 	mov	a,r0
      0000BE 13               [12]  266 	rrc	a
      0000BF F8               [12]  267 	mov	r0,a
      0000C0                        268 00132$:
      0000C0 D5 F0 E3         [24]  269 	djnz	b,00131$
                                    270 ;	_mullonglong.c:50: ret += (unsigned long long)((unsigned short)(l * r)) << ((i + j) * 8);
      0000C3 85*1A F0         [24]  271 	mov	b,__mullonglong_l_196608_4
      0000C6 E8               [12]  272 	mov	a,r0
      0000C7 A4               [48]  273 	mul	ab
      0000C8 F8               [12]  274 	mov	r0,a
      0000C9 AF F0            [24]  275 	mov	r7,b
      0000CB 88*1B            [24]  276 	mov	__mullonglong_sloc0_1_0,r0
      0000CD 8F*1C            [24]  277 	mov	(__mullonglong_sloc0_1_0 + 1),r7
      0000CF E4               [12]  278 	clr	a
      0000D0 F5*1D            [12]  279 	mov	(__mullonglong_sloc0_1_0 + 2),a
      0000D2 F5*1E            [12]  280 	mov	(__mullonglong_sloc0_1_0 + 3),a
      0000D4 F5*1F            [12]  281 	mov	(__mullonglong_sloc0_1_0 + 4),a
      0000D6 F5*20            [12]  282 	mov	(__mullonglong_sloc0_1_0 + 5),a
      0000D8 F5*21            [12]  283 	mov	(__mullonglong_sloc0_1_0 + 6),a
      0000DA F5*22            [12]  284 	mov	(__mullonglong_sloc0_1_0 + 7),a
      0000DC E5*19            [12]  285 	mov	a,__mullonglong_j_65536_2
      0000DE 25*18            [12]  286 	add	a,__mullonglong_i_65536_2
      0000E0 C4               [12]  287 	swap	a
      0000E1 03               [12]  288 	rr	a
      0000E2 54 F8            [12]  289 	anl	a,#0xf8
      0000E4 FF               [12]  290 	mov	r7,a
      0000E5 8F F0            [24]  291 	mov	b,r7
      0000E7 05 F0            [12]  292 	inc	b
      0000E9 A8*1B            [24]  293 	mov	r0,__mullonglong_sloc0_1_0
      0000EB A9*1C            [24]  294 	mov	r1,(__mullonglong_sloc0_1_0 + 1)
      0000ED AA*1D            [24]  295 	mov	r2,(__mullonglong_sloc0_1_0 + 2)
      0000EF AB*1E            [24]  296 	mov	r3,(__mullonglong_sloc0_1_0 + 3)
      0000F1 AC*1F            [24]  297 	mov	r4,(__mullonglong_sloc0_1_0 + 4)
      0000F3 AD*20            [24]  298 	mov	r5,(__mullonglong_sloc0_1_0 + 5)
      0000F5 AE*21            [24]  299 	mov	r6,(__mullonglong_sloc0_1_0 + 6)
      0000F7 AF*22            [24]  300 	mov	r7,(__mullonglong_sloc0_1_0 + 7)
      0000F9 80 18            [24]  301 	sjmp	00134$
      0000FB                        302 00133$:
      0000FB E8               [12]  303 	mov	a,r0
      0000FC 28               [12]  304 	add	a,r0
      0000FD F8               [12]  305 	mov	r0,a
      0000FE E9               [12]  306 	mov	a,r1
      0000FF 33               [12]  307 	rlc	a
      000100 F9               [12]  308 	mov	r1,a
      000101 EA               [12]  309 	mov	a,r2
      000102 33               [12]  310 	rlc	a
      000103 FA               [12]  311 	mov	r2,a
      000104 EB               [12]  312 	mov	a,r3
      000105 33               [12]  313 	rlc	a
      000106 FB               [12]  314 	mov	r3,a
      000107 EC               [12]  315 	mov	a,r4
      000108 33               [12]  316 	rlc	a
      000109 FC               [12]  317 	mov	r4,a
      00010A ED               [12]  318 	mov	a,r5
      00010B 33               [12]  319 	rlc	a
      00010C FD               [12]  320 	mov	r5,a
      00010D EE               [12]  321 	mov	a,r6
      00010E 33               [12]  322 	rlc	a
      00010F FE               [12]  323 	mov	r6,a
      000110 EF               [12]  324 	mov	a,r7
      000111 33               [12]  325 	rlc	a
      000112 FF               [12]  326 	mov	r7,a
      000113                        327 00134$:
      000113 D5 F0 E5         [24]  328 	djnz	b,00133$
      000116 E8               [12]  329 	mov	a,r0
      000117 25*10            [12]  330 	add	a,__mullonglong_ret_65536_2
      000119 F5*10            [12]  331 	mov	__mullonglong_ret_65536_2,a
      00011B E9               [12]  332 	mov	a,r1
      00011C 35*11            [12]  333 	addc	a,(__mullonglong_ret_65536_2 + 1)
      00011E F5*11            [12]  334 	mov	(__mullonglong_ret_65536_2 + 1),a
      000120 EA               [12]  335 	mov	a,r2
      000121 35*12            [12]  336 	addc	a,(__mullonglong_ret_65536_2 + 2)
      000123 F5*12            [12]  337 	mov	(__mullonglong_ret_65536_2 + 2),a
      000125 EB               [12]  338 	mov	a,r3
      000126 35*13            [12]  339 	addc	a,(__mullonglong_ret_65536_2 + 3)
      000128 F5*13            [12]  340 	mov	(__mullonglong_ret_65536_2 + 3),a
      00012A EC               [12]  341 	mov	a,r4
      00012B 35*14            [12]  342 	addc	a,(__mullonglong_ret_65536_2 + 4)
      00012D F5*14            [12]  343 	mov	(__mullonglong_ret_65536_2 + 4),a
      00012F ED               [12]  344 	mov	a,r5
      000130 35*15            [12]  345 	addc	a,(__mullonglong_ret_65536_2 + 5)
      000132 F5*15            [12]  346 	mov	(__mullonglong_ret_65536_2 + 5),a
      000134 EE               [12]  347 	mov	a,r6
      000135 35*16            [12]  348 	addc	a,(__mullonglong_ret_65536_2 + 6)
      000137 F5*16            [12]  349 	mov	(__mullonglong_ret_65536_2 + 6),a
      000139 EF               [12]  350 	mov	a,r7
      00013A 35*17            [12]  351 	addc	a,(__mullonglong_ret_65536_2 + 7)
      00013C F5*17            [12]  352 	mov	(__mullonglong_ret_65536_2 + 7),a
                                    353 ;	_mullonglong.c:47: for(j = 0; (i + j) < sizeof (long long); j++)
      00013E 05*19            [12]  354 	inc	__mullonglong_j_65536_2
      000140 02r00r69         [24]  355 	ljmp	00104$
      000143                        356 00107$:
                                    357 ;	_mullonglong.c:44: for (i = 0; i < sizeof (long long); i++)
      000143 05*18            [12]  358 	inc	__mullonglong_i_65536_2
      000145 74 F8            [12]  359 	mov	a,#0x100 - 0x08
      000147 25*18            [12]  360 	add	a,__mullonglong_i_65536_2
      000149 40 03            [24]  361 	jc	00135$
      00014B 02r00r26         [24]  362 	ljmp	00106$
      00014E                        363 00135$:
                                    364 ;	_mullonglong.c:54: return(ret);
      00014E 85*10 82         [24]  365 	mov	dpl,__mullonglong_ret_65536_2
      000151 85*11 83         [24]  366 	mov	dph,(__mullonglong_ret_65536_2 + 1)
      000154 85*12 F0         [24]  367 	mov	b,(__mullonglong_ret_65536_2 + 2)
      000157 E5*13            [12]  368 	mov	a,(__mullonglong_ret_65536_2 + 3)
      000159 AC*14            [24]  369 	mov	r4,(__mullonglong_ret_65536_2 + 4)
      00015B AD*15            [24]  370 	mov	r5,(__mullonglong_ret_65536_2 + 5)
      00015D AE*16            [24]  371 	mov	r6,(__mullonglong_ret_65536_2 + 6)
      00015F AF*17            [24]  372 	mov	r7,(__mullonglong_ret_65536_2 + 7)
                                    373 ;	_mullonglong.c:55: }
      000161 22               [24]  374 	ret
                                    375 	.area CSEG    (CODE)
                                    376 	.area CONST   (CODE)
                                    377 	.area XINIT   (CODE)
                                    378 	.area CABS    (ABS,CODE)
