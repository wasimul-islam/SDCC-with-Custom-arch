                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _modulong
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __modulong
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '_modulong'
                             49 ;------------------------------------------------------------
                             50 ;a                         Allocated to stack - sp +8
                             51 ;b                         Allocated to stack - sp +12
                             52 ;count                     Allocated to stack - sp +5
                             53 ;sloc0                     Allocated to stack - sp +1
                             54 ;------------------------------------------------------------
                             55 ;	../_modulong.c: 346: _modulong (unsigned long a, unsigned long b) __SDCC_NONBANKED
                             56 ;	-----------------------------------------
                             57 ;	 function _modulong
                             58 ;	-----------------------------------------
                             59 ;	Register assignment is optimal.
                             60 ;	Stack space usage: 5 bytes.
   0000                      61 __modulong:
   0000 48            [ 3]   62 	pha
   0001 48            [ 3]   63 	pha
   0002 48            [ 3]   64 	pha
   0003 48            [ 3]   65 	pha
   0004 48            [ 3]   66 	pha
                             67 ;	../_modulong.c: 348: unsigned char count = 0;
   0005 A0 00         [ 2]   68 	ldy	#0x00
                             69 ;	../_modulong.c: 350: while (!MSB_SET(b))
   0007 BA            [ 2]   70 	tsx
   0008 98            [ 2]   71 	tya
   0009 9D 05 01      [ 5]   72 	sta	0x105,x
   000C                      73 00103$:
   000C BA            [ 2]   74 	tsx
   000D BD 0F 01      [ 5]   75 	lda	0x10f,x
   0010 2A            [ 2]   76 	rol	a
   0011 A9 00         [ 2]   77 	lda	#0x00
   0013 2A            [ 2]   78 	rol	a
   0014 9D 01 01      [ 5]   79 	sta	0x101,x
   0017 48            [ 3]   80 	pha
   0018 A9 00         [ 2]   81 	lda	#0x00
   001A 9D 02 01      [ 5]   82 	sta	0x102,x
   001D A9 00         [ 2]   83 	lda	#0x00
   001F 9D 03 01      [ 5]   84 	sta	0x103,x
   0022 A9 00         [ 2]   85 	lda	#0x00
   0024 9D 04 01      [ 5]   86 	sta	0x104,x
   0027 68            [ 4]   87 	pla
   0028 A9 01         [ 2]   88 	lda	#0x01
   002A 3D 01 01      [ 5]   89 	and	0x101,x
   002D D0 64         [ 4]   90 	bne	00117$
                             91 ;	../_modulong.c: 352: b <<= 1;
   002F BD 0C 01      [ 5]   92 	lda	0x10c,x
   0032 0A            [ 2]   93 	asl	a
   0033 9D 0C 01      [ 5]   94 	sta	0x10c,x
   0036 BD 0D 01      [ 5]   95 	lda	0x10d,x
   0039 2A            [ 2]   96 	rol	a
   003A 9D 0D 01      [ 5]   97 	sta	0x10d,x
   003D BD 0E 01      [ 5]   98 	lda	0x10e,x
   0040 2A            [ 2]   99 	rol	a
   0041 9D 0E 01      [ 5]  100 	sta	0x10e,x
   0044 BD 0F 01      [ 5]  101 	lda	0x10f,x
   0047 2A            [ 2]  102 	rol	a
   0048 9D 0F 01      [ 5]  103 	sta	0x10f,x
                            104 ;	../_modulong.c: 353: if (b > a)
   004B BD 08 01      [ 5]  105 	lda	0x108,x
   004E 38            [ 2]  106 	sec
   004F FD 0C 01      [ 5]  107 	sbc	0x10c,x
   0052 BD 09 01      [ 5]  108 	lda	0x109,x
   0055 FD 0D 01      [ 5]  109 	sbc	0x10d,x
   0058 BD 0A 01      [ 5]  110 	lda	0x10a,x
   005B FD 0E 01      [ 5]  111 	sbc	0x10e,x
   005E BD 0B 01      [ 5]  112 	lda	0x10b,x
   0061 FD 0F 01      [ 5]  113 	sbc	0x10f,x
   0064 B0 1F         [ 4]  114 	bcs	00102$
                            115 ;	../_modulong.c: 355: b >>=1;
   0066 BD 0F 01      [ 5]  116 	lda	0x10f,x
   0069 4A            [ 2]  117 	lsr	a
   006A 9D 0F 01      [ 5]  118 	sta	0x10f,x
   006D BD 0E 01      [ 5]  119 	lda	0x10e,x
   0070 6A            [ 2]  120 	ror	a
   0071 9D 0E 01      [ 5]  121 	sta	0x10e,x
   0074 BD 0D 01      [ 5]  122 	lda	0x10d,x
   0077 6A            [ 2]  123 	ror	a
   0078 9D 0D 01      [ 5]  124 	sta	0x10d,x
   007B BD 0C 01      [ 5]  125 	lda	0x10c,x
   007E 6A            [ 2]  126 	ror	a
   007F 9D 0C 01      [ 5]  127 	sta	0x10c,x
                            128 ;	../_modulong.c: 356: break;
   0082 4Cr93r00      [ 3]  129 	jmp	00117$
   0085                     130 00102$:
                            131 ;	../_modulong.c: 358: count++;
   0085 BA            [ 2]  132 	tsx
   0086 BD 05 01      [ 5]  133 	lda	0x105,x
   0089 18            [ 2]  134 	clc
   008A 69 01         [ 2]  135 	adc	#0x01
   008C 9D 05 01      [ 5]  136 	sta	0x105, x
   008F A8            [ 2]  137 	tay
   0090 4Cr0Cr00      [ 3]  138 	jmp	00103$
                            139 ;	../_modulong.c: 360: do
   0093                     140 00117$:
   0093                     141 00108$:
                            142 ;	../_modulong.c: 362: if (a >= b)
   0093 BA            [ 2]  143 	tsx
   0094 BD 08 01      [ 5]  144 	lda	0x108,x
   0097 38            [ 2]  145 	sec
   0098 FD 0C 01      [ 5]  146 	sbc	0x10c,x
   009B BD 09 01      [ 5]  147 	lda	0x109,x
   009E FD 0D 01      [ 5]  148 	sbc	0x10d,x
   00A1 BD 0A 01      [ 5]  149 	lda	0x10a,x
   00A4 FD 0E 01      [ 5]  150 	sbc	0x10e,x
   00A7 BD 0B 01      [ 5]  151 	lda	0x10b,x
   00AA FD 0F 01      [ 5]  152 	sbc	0x10f,x
   00AD 90 25         [ 4]  153 	bcc	00107$
                            154 ;	../_modulong.c: 363: a -= b;
   00AF BD 08 01      [ 5]  155 	lda	0x108,x
   00B2 38            [ 2]  156 	sec
   00B3 FD 0C 01      [ 5]  157 	sbc	0x10c,x
   00B6 9D 08 01      [ 5]  158 	sta	0x108,x
   00B9 BD 09 01      [ 5]  159 	lda	0x109,x
   00BC FD 0D 01      [ 5]  160 	sbc	0x10d,x
   00BF 9D 09 01      [ 5]  161 	sta	0x109,x
   00C2 BD 0A 01      [ 5]  162 	lda	0x10a,x
   00C5 FD 0E 01      [ 5]  163 	sbc	0x10e,x
   00C8 9D 0A 01      [ 5]  164 	sta	0x10a,x
   00CB BD 0B 01      [ 5]  165 	lda	0x10b,x
   00CE FD 0F 01      [ 5]  166 	sbc	0x10f,x
   00D1 9D 0B 01      [ 5]  167 	sta	0x10b,x
   00D4                     168 00107$:
                            169 ;	../_modulong.c: 364: b >>= 1;
   00D4 BA            [ 2]  170 	tsx
   00D5 BD 0F 01      [ 5]  171 	lda	0x10f,x
   00D8 4A            [ 2]  172 	lsr	a
   00D9 9D 0F 01      [ 5]  173 	sta	0x10f,x
   00DC BD 0E 01      [ 5]  174 	lda	0x10e,x
   00DF 6A            [ 2]  175 	ror	a
   00E0 9D 0E 01      [ 5]  176 	sta	0x10e,x
   00E3 BD 0D 01      [ 5]  177 	lda	0x10d,x
   00E6 6A            [ 2]  178 	ror	a
   00E7 9D 0D 01      [ 5]  179 	sta	0x10d,x
   00EA BD 0C 01      [ 5]  180 	lda	0x10c,x
   00ED 6A            [ 2]  181 	ror	a
   00EE 9D 0C 01      [ 5]  182 	sta	0x10c,x
                            183 ;	../_modulong.c: 366: while (count--);
   00F1 98            [ 2]  184 	tya
   00F2 88            [ 2]  185 	dey
   00F3 C9 00         [ 2]  186 	cmp	#0x00
   00F5 D0 9C         [ 4]  187 	bne	00108$
                            188 ;	../_modulong.c: 368: return a;
   00F7 BD 0B 01      [ 5]  189 	lda	0x10b,x
   00FA 85*00         [ 3]  190 	sta	*___SDCC_m6502_ret3
   00FC BD 0A 01      [ 5]  191 	lda	0x10a,x
   00FF 85*00         [ 3]  192 	sta	*___SDCC_m6502_ret2
   0101 BD 09 01      [ 5]  193 	lda	0x109,x
   0104 AA            [ 2]  194 	tax
   0105 86*00         [ 3]  195 	stx	*(__TEMP+0)
   0107 BA            [ 2]  196 	tsx
   0108 BD 08 01      [ 5]  197 	lda	0x108,x
   010B 08            [ 3]  198 	php
   010C A6*00         [ 3]  199 	ldx	*(__TEMP+0)
   010E 28            [ 4]  200 	plp
                            201 ;	../_modulong.c: 369: }
   010F 85*00         [ 3]  202 	sta	*(__TEMP+0)
   0111 68            [ 4]  203 	pla
   0112 68            [ 4]  204 	pla
   0113 68            [ 4]  205 	pla
   0114 68            [ 4]  206 	pla
   0115 68            [ 4]  207 	pla
   0116 A5*00         [ 3]  208 	lda	*(__TEMP+0)
   0118 60            [ 6]  209 	rts
                            210 	.area CODE
                            211 	.area RODATA
                            212 	.area XINIT
                            213 	.area CABS    (ABS)
