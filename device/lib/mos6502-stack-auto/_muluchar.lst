                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _muluchar
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __muluchar
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '_muluchar'
                             49 ;------------------------------------------------------------
                             50 ;y                         Allocated to stack - sp +6
                             51 ;x                         Allocated to stack - sp +5
                             52 ;result                    Allocated to stack - sp +3
                             53 ;i                         Allocated to registers y 
                             54 ;sloc0                     Allocated to stack - sp +1
                             55 ;------------------------------------------------------------
                             56 ;	../_muluchar.c: 30: _muluchar (unsigned char x, unsigned char y)
                             57 ;	-----------------------------------------
                             58 ;	 function _muluchar
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 6 bytes.
   0000                      62 __muluchar:
   0000 85*00         [ 3]   63 	sta	*(__TEMP+0)
   0002 8A            [ 2]   64 	txa
   0003 48            [ 3]   65 	pha
   0004 A5*00         [ 3]   66 	lda	*(__TEMP+0)
   0006 48            [ 3]   67 	pha
   0007 48            [ 3]   68 	pha
   0008 48            [ 3]   69 	pha
   0009 48            [ 3]   70 	pha
   000A 48            [ 3]   71 	pha
                             72 ;	../_muluchar.c: 32: unsigned int result = 0;
   000B BA            [ 2]   73 	tsx
   000C A9 00         [ 2]   74 	lda	#0x00
   000E 9D 03 01      [ 5]   75 	sta	0x103,x
   0011 9D 04 01      [ 5]   76 	sta	0x104,x
                             77 ;	../_muluchar.c: 34: for (unsigned char i = 0; i < 8; i++)
   0014 A8            [ 2]   78 	tay
   0015                      79 00105$:
   0015 C0 08         [ 2]   80 	cpy	#0x08
   0017 B0 52         [ 4]   81 	bcs	00103$
                             82 ;	../_muluchar.c: 36: result <<= 1;
   0019 BA            [ 2]   83 	tsx
   001A BD 03 01      [ 5]   84 	lda	0x103,x
   001D 85*00         [ 3]   85 	sta	*(__TEMP+0)
   001F BD 04 01      [ 5]   86 	lda	0x104,x
   0022 AA            [ 2]   87 	tax
   0023 A5*00         [ 3]   88 	lda	*(__TEMP+0)
   0025 86*00         [ 3]   89 	stx	*(__TEMP+0)
   0027 0A            [ 2]   90 	asl	a
   0028 26*00         [ 5]   91 	rol	*(__TEMP+0)
   002A A6*00         [ 3]   92 	ldx	*(__TEMP+0)
   002C 48            [ 3]   93 	pha
   002D 8A            [ 2]   94 	txa
   002E BA            [ 2]   95 	tsx
   002F 9D 05 01      [ 5]   96 	sta	0x105,x
   0032 68            [ 4]   97 	pla
   0033 9D 04 01      [ 5]   98 	sta	0x104,x
                             99 ;	../_muluchar.c: 37: if (x & 0x80)
   0036 A9 80         [ 2]  100 	lda	#0x80
   0038 3D 06 01      [ 5]  101 	and	0x106,x
   003B F0 22         [ 4]  102 	beq	00102$
                            103 ;	../_muluchar.c: 38: result += y;
   003D BD 07 01      [ 5]  104 	lda	0x107,x
   0040 A2 00         [ 2]  105 	ldx	#0x00
   0042 48            [ 3]  106 	pha
   0043 8A            [ 2]  107 	txa
   0044 BA            [ 2]  108 	tsx
   0045 9D 03 01      [ 5]  109 	sta	0x103,x
   0048 68            [ 4]  110 	pla
   0049 9D 02 01      [ 5]  111 	sta	0x102,x
   004C BD 04 01      [ 5]  112 	lda	0x104, x
   004F 18            [ 2]  113 	clc
   0050 7D 02 01      [ 5]  114 	adc	0x102,x
   0053 9D 04 01      [ 5]  115 	sta	0x104,x
   0056 BD 05 01      [ 5]  116 	lda	0x105,x
   0059 7D 03 01      [ 5]  117 	adc	0x103,x
   005C 9D 05 01      [ 5]  118 	sta	0x105,x
   005F                     119 00102$:
                            120 ;	../_muluchar.c: 39: x <<= 1;
   005F BA            [ 2]  121 	tsx
   0060 BD 05 01      [ 5]  122 	lda	0x105,x
   0063 0A            [ 2]  123 	asl	a
   0064 9D 05 01      [ 5]  124 	sta	0x105,x
                            125 ;	../_muluchar.c: 34: for (unsigned char i = 0; i < 8; i++)
   0067 C8            [ 2]  126 	iny
   0068 4Cr15r00      [ 3]  127 	jmp	00105$
   006B                     128 00103$:
                            129 ;	../_muluchar.c: 42: return result;
   006B BA            [ 2]  130 	tsx
   006C BD 04 01      [ 5]  131 	lda	0x104,x
   006F AA            [ 2]  132 	tax
   0070 86*00         [ 3]  133 	stx	*(__TEMP+0)
   0072 BA            [ 2]  134 	tsx
   0073 BD 03 01      [ 5]  135 	lda	0x103,x
   0076 08            [ 3]  136 	php
   0077 A6*00         [ 3]  137 	ldx	*(__TEMP+0)
   0079 28            [ 4]  138 	plp
                            139 ;	../_muluchar.c: 43: }
   007A 85*00         [ 3]  140 	sta	*(__TEMP+0)
   007C 68            [ 4]  141 	pla
   007D 68            [ 4]  142 	pla
   007E 68            [ 4]  143 	pla
   007F 68            [ 4]  144 	pla
   0080 68            [ 4]  145 	pla
   0081 68            [ 4]  146 	pla
   0082 A5*00         [ 3]  147 	lda	*(__TEMP+0)
   0084 60            [ 6]  148 	rts
                            149 	.area CODE
                            150 	.area RODATA
                            151 	.area XINIT
                            152 	.area CABS    (ABS)
