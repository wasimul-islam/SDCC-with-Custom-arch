                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module memalignment
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _memalignment
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'memalignment'
                             49 ;------------------------------------------------------------
                             50 ;p                         Allocated to registers a x 
                             51 ;ip                        Allocated to registers a x 
                             52 ;sloc0                     Allocated to stack - sp +1
                             53 ;------------------------------------------------------------
                             54 ;	../memalignment.c: 33: size_t memalignment(const void *p)
                             55 ;	-----------------------------------------
                             56 ;	 function memalignment
                             57 ;	-----------------------------------------
                             58 ;	Register assignment is optimal.
                             59 ;	Stack space usage: 2 bytes.
   0000                      60 _memalignment:
   0000 48            [ 3]   61 	pha
   0001 48            [ 3]   62 	pha
                             63 ;	../memalignment.c: 35: intptr_t ip = (intptr_t)p;
                             64 ;	../memalignment.c: 36: return(ip & -ip);
   0002 48            [ 3]   65 	pha
   0003 49 FF         [ 2]   66 	eor	#0xff
   0005 18            [ 2]   67 	clc
   0006 69 01         [ 2]   68 	adc	#0x01
   0008 86*00         [ 3]   69 	stx	*(__TEMP+0)
   000A BA            [ 2]   70 	tsx
   000B 9D 02 01      [ 5]   71 	sta	0x102,x
   000E A6*00         [ 3]   72 	ldx	*(__TEMP+0)
   0010 A9 00         [ 2]   73 	lda	#0x00
   0012 86*00         [ 3]   74 	stx	*(__TEMP+0)
   0014 E5*00         [ 3]   75 	sbc	*(__TEMP+0)
   0016 BA            [ 2]   76 	tsx
   0017 9D 03 01      [ 5]   77 	sta	0x103,x
   001A 68            [ 4]   78 	pla
   001B 86*00         [ 3]   79 	stx	*(__TEMP+0)
   001D 3D 02 01      [ 5]   80 	and	0x102,x
   0020 08            [ 3]   81 	php
   0021 A6*00         [ 3]   82 	ldx	*(__TEMP+0)
   0023 28            [ 4]   83 	plp
   0024 85*00         [ 3]   84 	sta	*(__TEMP+0)
   0026 8A            [ 2]   85 	txa
   0027 86*01         [ 3]   86 	stx	*(__TEMP+1)
   0029 BA            [ 2]   87 	tsx
   002A 3D 02 01      [ 5]   88 	and	0x102,x
   002D 08            [ 3]   89 	php
   002E A6*01         [ 3]   90 	ldx	*(__TEMP+1)
   0030 28            [ 4]   91 	plp
   0031 AA            [ 2]   92 	tax
                             93 ;	../memalignment.c: 37: }
   0032 68            [ 4]   94 	pla
   0033 68            [ 4]   95 	pla
   0034 A5*00         [ 3]   96 	lda	*(__TEMP+0)
   0036 60            [ 6]   97 	rts
                             98 	.area CODE
                             99 	.area RODATA
                            100 	.area XINIT
                            101 	.area CABS    (ABS)
