                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module isinf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _isinf
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'isinf'
                             49 ;------------------------------------------------------------
                             50 ;f                         Allocated to stack - sp +7
                             51 ;pl                        Allocated to registers a x 
                             52 ;sloc0                     Allocated to stack - sp +1
                             53 ;------------------------------------------------------------
                             54 ;	../isinf.c: 33: int isinf (float f)
                             55 ;	-----------------------------------------
                             56 ;	 function isinf
                             57 ;	-----------------------------------------
                             58 ;	Register assignment is optimal.
                             59 ;	Stack space usage: 4 bytes.
   0000                      60 _isinf:
   0000 48            [ 3]   61 	pha
   0001 48            [ 3]   62 	pha
   0002 48            [ 3]   63 	pha
   0003 48            [ 3]   64 	pha
                             65 ;	../isinf.c: 35: unsigned long *pl = (unsigned long *) &f;
   0004 BA            [ 2]   66 	tsx
   0005 8A            [ 2]   67 	txa
   0006 18            [ 2]   68 	clc
   0007 69 07         [ 2]   69 	adc	#0x07
   0009 A2 01         [ 2]   70 	ldx	#0x01
                             71 ;	../isinf.c: 36: return *pl == 0x7f800000 || *pl == 0xff800000;
   000B 85*00         [ 3]   72 	sta	*(__DPTR+0)
   000D 86*01         [ 3]   73 	stx	*(__DPTR+1)
   000F A0 00         [ 2]   74 	ldy	#0x00
   0011 B1*00         [ 6]   75 	lda	[__DPTR],y
   0013 BA            [ 2]   76 	tsx
   0014 9D 01 01      [ 5]   77 	sta	0x101,x
   0017 C8            [ 2]   78 	iny
   0018 B1*00         [ 6]   79 	lda	[__DPTR],y
   001A 9D 02 01      [ 5]   80 	sta	0x102,x
   001D C8            [ 2]   81 	iny
   001E B1*00         [ 6]   82 	lda	[__DPTR],y
   0020 9D 03 01      [ 5]   83 	sta	0x103,x
   0023 C8            [ 2]   84 	iny
   0024 B1*00         [ 6]   85 	lda	[__DPTR],y
   0026 9D 04 01      [ 5]   86 	sta	0x104,x
   0029 BD 01 01      [ 5]   87 	lda	0x101,x
   002C D0 13         [ 4]   88 	bne	00115$
   002E BD 02 01      [ 5]   89 	lda	0x102,x
   0031 D0 0E         [ 4]   90 	bne	00115$
   0033 BD 03 01      [ 5]   91 	lda	0x103,x
   0036 C9 80         [ 2]   92 	cmp	#0x80
   0038 D0 07         [ 4]   93 	bne	00115$
   003A BD 04 01      [ 5]   94 	lda	0x104,x
   003D C9 7F         [ 2]   95 	cmp	#0x7f
   003F F0 1D         [ 4]   96 	beq	00104$
   0041                      97 00115$:
   0041 BD 01 01      [ 5]   98 	lda	0x101,x
   0044 D0 13         [ 4]   99 	bne	00119$
   0046 BD 02 01      [ 5]  100 	lda	0x102,x
   0049 D0 0E         [ 4]  101 	bne	00119$
   004B BD 03 01      [ 5]  102 	lda	0x103,x
   004E C9 80         [ 2]  103 	cmp	#0x80
   0050 D0 07         [ 4]  104 	bne	00119$
   0052 BD 04 01      [ 5]  105 	lda	0x104,x
   0055 C9 FF         [ 2]  106 	cmp	#0xff
   0057 F0 05         [ 4]  107 	beq	00104$
   0059                     108 00119$:
   0059 A9 00         [ 2]  109 	lda	#0x00
   005B 4Cr60r00      [ 3]  110 	jmp	00105$
   005E                     111 00104$:
   005E A9 01         [ 2]  112 	lda	#0x01
   0060                     113 00105$:
   0060 A2 00         [ 2]  114 	ldx	#0x00
                            115 ;	../isinf.c: 37: }
   0062 85*00         [ 3]  116 	sta	*(__TEMP+0)
   0064 68            [ 4]  117 	pla
   0065 68            [ 4]  118 	pla
   0066 68            [ 4]  119 	pla
   0067 68            [ 4]  120 	pla
   0068 A5*00         [ 3]  121 	lda	*(__TEMP+0)
   006A 60            [ 6]  122 	rts
                            123 	.area CODE
                            124 	.area RODATA
                            125 	.area XINIT
                            126 	.area CABS    (ABS)
