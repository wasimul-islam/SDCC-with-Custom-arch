                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _rrslonglong
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __rrslonglong
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '_rrslonglong'
                             49 ;------------------------------------------------------------
                             50 ;l                         Allocated to stack - sp +16
                             51 ;s                         Allocated to stack - sp +24
                             52 ;b                         Allocated to stack - sp +12
                             53 ;shift                     Allocated to registers 
                             54 ;t1                        Allocated to registers y 
                             55 ;t2                        Allocated to stack - sp +5
                             56 ;sign                      Allocated to stack - sp +11
                             57 ;zb                        Allocated to stack - sp +10
                             58 ;i                         Allocated to stack - sp +9
                             59 ;sloc0                     Allocated to stack - sp +7
                             60 ;sloc1                     Allocated to stack - sp +5
                             61 ;sloc2                     Allocated to stack - sp +3
                             62 ;sloc3                     Allocated to stack - sp +1
                             63 ;------------------------------------------------------------
                             64 ;	_rrslonglong.c: 8: long long _rrslonglong(long long l, char s)
                             65 ;	-----------------------------------------
                             66 ;	 function _rrslonglong
                             67 ;	-----------------------------------------
                             68 ;	Register assignment is optimal.
                             69 ;	Stack space usage: 13 bytes.
   0000                      70 __rrslonglong:
   0000 85*00         [ 3]   71 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   72 	stx	*(__TEMP+1)
   0004 BA            [ 2]   73 	tsx
   0005 8A            [ 2]   74 	txa
   0006 18            [ 2]   75 	clc
   0007 69 F3         [ 2]   76 	adc	#0xf3
   0009 AA            [ 2]   77 	tax
   000A 9A            [ 2]   78 	txs
   000B A6*01         [ 3]   79 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   80 	lda	*(__TEMP+0)
                             81 ;	_rrslonglong.c: 11: uint8_t *const b = (uint8_t *)(&l);
   000F BA            [ 2]   82 	tsx
   0010 8A            [ 2]   83 	txa
   0011 18            [ 2]   84 	clc
   0012 69 10         [ 2]   85 	adc	#0x10
   0014 A2 01         [ 2]   86 	ldx	#0x01
   0016 48            [ 3]   87 	pha
   0017 8A            [ 2]   88 	txa
   0018 BA            [ 2]   89 	tsx
   0019 9D 0E 01      [ 5]   90 	sta	0x10e,x
   001C 68            [ 4]   91 	pla
                             92 ;	_rrslonglong.c: 15: sign=b[7]&0x80;
   001D 9D 0D 01      [ 5]   93 	sta	0x10d, x
   0020 9D 08 01      [ 5]   94 	sta	0x108,x
   0023 BD 0E 01      [ 5]   95 	lda	0x10e,x
   0026 9D 09 01      [ 5]   96 	sta	0x109,x
   0029 BD 08 01      [ 5]   97 	lda	0x108,x
   002C 85*00         [ 3]   98 	sta	*(__DPTR+0)
   002E BD 09 01      [ 5]   99 	lda	0x109,x
   0031 85*01         [ 3]  100 	sta	*(__DPTR+1)
   0033 A0 07         [ 2]  101 	ldy	#0x07
   0035 B1*00         [ 6]  102 	lda	[__DPTR],y
   0037 29 80         [ 2]  103 	and	#0x80
   0039 9D 0C 01      [ 5]  104 	sta	0x10c,x
                            105 ;	_rrslonglong.c: 17: zb=s>>3;
   003C BD 19 01      [ 5]  106 	lda	0x119,x
   003F C9 80         [ 2]  107 	cmp	#0x80
   0041 6A            [ 2]  108 	ror	a
   0042 C9 80         [ 2]  109 	cmp	#0x80
   0044 6A            [ 2]  110 	ror	a
   0045 C9 80         [ 2]  111 	cmp	#0x80
   0047 6A            [ 2]  112 	ror	a
                            113 ;	_rrslonglong.c: 18: if(zb) {
   0048 9D 0B 01      [ 5]  114 	sta	0x10b, x
   004B D0 03         [ 4]  115 	bne	00171$
   004D 4Cr54r01      [ 3]  116 	jmp	00104$
   0050                     117 00171$:
                            118 ;	_rrslonglong.c: 19: i=0;
   0050 A9 00         [ 2]  119 	lda	#0x00
   0052 9D 0A 01      [ 5]  120 	sta	0x10a,x
   0055                     121 00110$:
                            122 ;	_rrslonglong.c: 20: for(;i<(8-zb);i++) {
   0055 BA            [ 2]  123 	tsx
   0056 BD 0A 01      [ 5]  124 	lda	0x10a,x
   0059 9D 07 01      [ 5]  125 	sta	0x107,x
   005C 0A            [ 2]  126 	asl	a
   005D A9 00         [ 2]  127 	lda	#0x00
   005F 69 FF         [ 2]  128 	adc	#0xff
   0061 49 FF         [ 2]  129 	eor	#0xff
   0063 9D 08 01      [ 5]  130 	sta	0x108,x
   0066 A9 08         [ 2]  131 	lda	#0x08
   0068 38            [ 2]  132 	sec
   0069 FD 07 01      [ 5]  133 	sbc	0x107,x
   006C 9D 05 01      [ 5]  134 	sta	0x105,x
   006F A9 00         [ 2]  135 	lda	#0x00
   0071 FD 08 01      [ 5]  136 	sbc	0x108,x
   0074 9D 06 01      [ 5]  137 	sta	0x106,x
   0077 BD 09 01      [ 5]  138 	lda	0x109,x
   007A 9D 03 01      [ 5]  139 	sta	0x103,x
   007D 0A            [ 2]  140 	asl	a
   007E A9 00         [ 2]  141 	lda	#0x00
   0080 69 FF         [ 2]  142 	adc	#0xff
   0082 49 FF         [ 2]  143 	eor	#0xff
   0084 9D 04 01      [ 5]  144 	sta	0x104,x
   0087 BD 03 01      [ 5]  145 	lda	0x103,x
   008A 38            [ 2]  146 	sec
   008B FD 05 01      [ 5]  147 	sbc	0x105,x
   008E BD 04 01      [ 5]  148 	lda	0x104,x
   0091 FD 06 01      [ 5]  149 	sbc	0x106,x
   0094 50 04         [ 4]  150 	bvc	00173$
   0096 10 04         [ 4]  151 	bpl	00172$
   0098 30 5D         [ 4]  152 	bmi	00129$
   009A                     153 00173$:
   009A 10 5B         [ 4]  154 	bpl	00129$
   009C                     155 00172$:
                            156 ;	_rrslonglong.c: 21: b[i]=b[zb+i];
   009C BD 0C 01      [ 5]  157 	lda	0x10c,x
   009F 18            [ 2]  158 	clc
   00A0 7D 03 01      [ 5]  159 	adc	0x103,x
   00A3 9D 05 01      [ 5]  160 	sta	0x105,x
   00A6 BD 0D 01      [ 5]  161 	lda	0x10d,x
   00A9 7D 04 01      [ 5]  162 	adc	0x104,x
   00AC 9D 06 01      [ 5]  163 	sta	0x106,x
   00AF BD 07 01      [ 5]  164 	lda	0x107,x
   00B2 18            [ 2]  165 	clc
   00B3 7D 03 01      [ 5]  166 	adc	0x103,x
   00B6 9D 03 01      [ 5]  167 	sta	0x103,x
   00B9 BD 08 01      [ 5]  168 	lda	0x108,x
   00BC 7D 04 01      [ 5]  169 	adc	0x104,x
   00BF 9D 04 01      [ 5]  170 	sta	0x104,x
   00C2 BD 0C 01      [ 5]  171 	lda	0x10c,x
   00C5 18            [ 2]  172 	clc
   00C6 7D 03 01      [ 5]  173 	adc	0x103,x
   00C9 48            [ 3]  174 	pha
   00CA BD 0D 01      [ 5]  175 	lda	0x10d,x
   00CD 7D 04 01      [ 5]  176 	adc	0x104,x
   00D0 AA            [ 2]  177 	tax
   00D1 68            [ 4]  178 	pla
   00D2 85*00         [ 3]  179 	sta	*(__DPTR+0)
   00D4 86*01         [ 3]  180 	stx	*(__DPTR+1)
   00D6 A0 00         [ 2]  181 	ldy	#0x00
   00D8 B1*00         [ 6]  182 	lda	[__DPTR],y
   00DA 85*00         [ 3]  183 	sta	*(__TEMP+0)
   00DC BA            [ 2]  184 	tsx
   00DD BD 05 01      [ 5]  185 	lda	0x105,x
   00E0 85*00         [ 3]  186 	sta	*(__DPTR+0)
   00E2 BD 06 01      [ 5]  187 	lda	0x106,x
   00E5 85*01         [ 3]  188 	sta	*(__DPTR+1)
   00E7 A5*00         [ 3]  189 	lda	*(__TEMP+0)
   00E9 91*00         [ 6]  190 	sta	[__DPTR],y
                            191 ;	_rrslonglong.c: 20: for(;i<(8-zb);i++) {
   00EB BD 09 01      [ 5]  192 	lda	0x109,x
   00EE 18            [ 2]  193 	clc
   00EF 69 01         [ 2]  194 	adc	#0x01
   00F1 9D 09 01      [ 5]  195 	sta	0x109,x
   00F4 4Cr55r00      [ 3]  196 	jmp	00110$
   00F7                     197 00129$:
   00F7 BA            [ 2]  198 	tsx
   00F8 BD 09 01      [ 5]  199 	lda	0x109,x
   00FB A8            [ 2]  200 	tay
   00FC                     201 00113$:
                            202 ;	_rrslonglong.c: 23: for(;i<8;i++)
   00FC 98            [ 2]  203 	tya
   00FD 38            [ 2]  204 	sec
   00FE E9 08         [ 2]  205 	sbc	#0x08
   0100 50 04         [ 4]  206 	bvc	00176$
   0102 10 04         [ 4]  207 	bpl	00175$
   0104 30 4E         [ 4]  208 	bmi	00104$
   0106                     209 00176$:
   0106 10 4C         [ 4]  210 	bpl	00104$
   0108                     211 00175$:
                            212 ;	_rrslonglong.c: 24: b[i]=sign?0xff:0x00;
   0108 BA            [ 2]  213 	tsx
   0109 98            [ 2]  214 	tya
   010A 9D 03 01      [ 5]  215 	sta	0x103,x
   010D 0A            [ 2]  216 	asl	a
   010E A9 00         [ 2]  217 	lda	#0x00
   0110 69 FF         [ 2]  218 	adc	#0xff
   0112 49 FF         [ 2]  219 	eor	#0xff
   0114 9D 04 01      [ 5]  220 	sta	0x104,x
   0117 BD 0C 01      [ 5]  221 	lda	0x10c,x
   011A 18            [ 2]  222 	clc
   011B 7D 03 01      [ 5]  223 	adc	0x103,x
   011E 9D 03 01      [ 5]  224 	sta	0x103,x
   0121 BD 0D 01      [ 5]  225 	lda	0x10d,x
   0124 7D 04 01      [ 5]  226 	adc	0x104,x
   0127 9D 04 01      [ 5]  227 	sta	0x104,x
   012A BD 0B 01      [ 5]  228 	lda	0x10b,x
   012D F0 07         [ 4]  229 	beq	00120$
   012F A9 FF         [ 2]  230 	lda	#0xff
   0131 A2 00         [ 2]  231 	ldx	#0x00
   0133 4Cr39r01      [ 3]  232 	jmp	00121$
   0136                     233 00120$:
   0136 A9 00         [ 2]  234 	lda	#0x00
   0138 AA            [ 2]  235 	tax
   0139                     236 00121$:
   0139 85*00         [ 3]  237 	sta	*(__TEMP+0)
   013B 84*01         [ 3]  238 	sty	*(__TEMP+1)
   013D BA            [ 2]  239 	tsx
   013E BD 03 01      [ 5]  240 	lda	0x103,x
   0141 85*00         [ 3]  241 	sta	*(__DPTR+0)
   0143 BD 04 01      [ 5]  242 	lda	0x104,x
   0146 85*01         [ 3]  243 	sta	*(__DPTR+1)
   0148 A5*00         [ 3]  244 	lda	*(__TEMP+0)
   014A A0 00         [ 2]  245 	ldy	#0x00
   014C 91*00         [ 6]  246 	sta	[__DPTR],y
   014E A4*01         [ 3]  247 	ldy	*(__TEMP+1)
                            248 ;	_rrslonglong.c: 23: for(;i<8;i++)
   0150 C8            [ 2]  249 	iny
   0151 4CrFCr00      [ 3]  250 	jmp	00113$
   0154                     251 00104$:
                            252 ;	_rrslonglong.c: 27: shift=s&0x7;
   0154 BA            [ 2]  253 	tsx
   0155 BD 18 01      [ 5]  254 	lda	0x118,x
   0158 29 07         [ 2]  255 	and	#0x07
   015A 9D 03 01      [ 5]  256 	sta	0x103,x
                            257 ;	_rrslonglong.c: 28: while(shift--) {
   015D A9 07         [ 2]  258 	lda	#0x07
   015F 38            [ 2]  259 	sec
   0160 FD 0A 01      [ 5]  260 	sbc	0x10a,x
   0163 9D 09 01      [ 5]  261 	sta	0x109,x
   0166                     262 00106$:
   0166 BA            [ 2]  263 	tsx
   0167 BD 03 01      [ 5]  264 	lda	0x103,x
   016A 9D 05 01      [ 5]  265 	sta	0x105,x
   016D BD 03 01      [ 5]  266 	lda	0x103,x
   0170 38            [ 2]  267 	sec
   0171 E9 01         [ 2]  268 	sbc	#0x01
   0173 9D 03 01      [ 5]  269 	sta	0x103,x
   0176 BD 05 01      [ 5]  270 	lda	0x105,x
   0179 D0 03         [ 4]  271 	bne	00179$
   017B 4Cr09r02      [ 3]  272 	jmp	00108$
   017E                     273 00179$:
                            274 ;	_rrslonglong.c: 29: t2=sign;
   017E BD 0B 01      [ 5]  275 	lda	0x10b,x
   0181 9D 05 01      [ 5]  276 	sta	0x105,x
                            277 ;	_rrslonglong.c: 30: for(i=7-zb;i>=0;i--) {
   0184 BD 09 01      [ 5]  278 	lda	0x109,x
   0187 9D 07 01      [ 5]  279 	sta	0x107,x
   018A                     280 00116$:
   018A BA            [ 2]  281 	tsx
   018B BD 07 01      [ 5]  282 	lda	0x107,x
   018E 38            [ 2]  283 	sec
   018F E9 00         [ 2]  284 	sbc	#0x00
   0191 70 04         [ 4]  285 	bvs	00181$
   0193 10 04         [ 4]  286 	bpl	00180$
   0195 30 CF         [ 4]  287 	bmi	00106$
   0197                     288 00181$:
   0197 10 CD         [ 4]  289 	bpl	00106$
   0199                     290 00180$:
                            291 ;	_rrslonglong.c: 31: t1=b[i]&1;
   0199 BD 07 01      [ 5]  292 	lda	0x107,x
   019C 9D 01 01      [ 5]  293 	sta	0x101,x
   019F 0A            [ 2]  294 	asl	a
   01A0 A9 00         [ 2]  295 	lda	#0x00
   01A2 69 FF         [ 2]  296 	adc	#0xff
   01A4 49 FF         [ 2]  297 	eor	#0xff
   01A6 9D 02 01      [ 5]  298 	sta	0x102,x
   01A9 BD 0C 01      [ 5]  299 	lda	0x10c,x
   01AC 18            [ 2]  300 	clc
   01AD 7D 01 01      [ 5]  301 	adc	0x101,x
   01B0 9D 01 01      [ 5]  302 	sta	0x101,x
   01B3 BD 0D 01      [ 5]  303 	lda	0x10d,x
   01B6 7D 02 01      [ 5]  304 	adc	0x102,x
   01B9 9D 02 01      [ 5]  305 	sta	0x102,x
   01BC BD 01 01      [ 5]  306 	lda	0x101,x
   01BF 85*00         [ 3]  307 	sta	*(__DPTR+0)
   01C1 BD 02 01      [ 5]  308 	lda	0x102,x
   01C4 85*01         [ 3]  309 	sta	*(__DPTR+1)
   01C6 A0 00         [ 2]  310 	ldy	#0x00
   01C8 B1*00         [ 6]  311 	lda	[__DPTR],y
   01CA AA            [ 2]  312 	tax
   01CB 29 01         [ 2]  313 	and	#0x01
   01CD A8            [ 2]  314 	tay
                            315 ;	_rrslonglong.c: 32: b[i]=(b[i]>>1)|t2;
   01CE 8A            [ 2]  316 	txa
   01CF 4A            [ 2]  317 	lsr	a
   01D0 BA            [ 2]  318 	tsx
   01D1 1D 05 01      [ 5]  319 	ora	0x105,x
   01D4 85*00         [ 3]  320 	sta	*(__TEMP+0)
   01D6 84*01         [ 3]  321 	sty	*(__TEMP+1)
   01D8 BD 01 01      [ 5]  322 	lda	0x101,x
   01DB 85*00         [ 3]  323 	sta	*(__DPTR+0)
   01DD BD 02 01      [ 5]  324 	lda	0x102,x
   01E0 85*01         [ 3]  325 	sta	*(__DPTR+1)
   01E2 A5*00         [ 3]  326 	lda	*(__TEMP+0)
   01E4 A0 00         [ 2]  327 	ldy	#0x00
   01E6 91*00         [ 6]  328 	sta	[__DPTR],y
                            329 ;	_rrslonglong.c: 33: t2=t1?0x80:0;
   01E8 A4*01         [ 3]  330 	ldy	*(__TEMP+1)
   01EA F0 07         [ 4]  331 	beq	00122$
   01EC A9 80         [ 2]  332 	lda	#0x80
   01EE A2 00         [ 2]  333 	ldx	#0x00
   01F0 4CrF6r01      [ 3]  334 	jmp	00123$
   01F3                     335 00122$:
   01F3 A9 00         [ 2]  336 	lda	#0x00
   01F5 AA            [ 2]  337 	tax
   01F6                     338 00123$:
   01F6 86*00         [ 3]  339 	stx	*(__TEMP+0)
   01F8 BA            [ 2]  340 	tsx
   01F9 9D 05 01      [ 5]  341 	sta	0x105,x
                            342 ;	_rrslonglong.c: 30: for(i=7-zb;i>=0;i--) {
   01FC BA            [ 2]  343 	tsx
   01FD BD 07 01      [ 5]  344 	lda	0x107,x
   0200 38            [ 2]  345 	sec
   0201 E9 01         [ 2]  346 	sbc	#0x01
   0203 9D 07 01      [ 5]  347 	sta	0x107,x
   0206 4Cr8Ar01      [ 3]  348 	jmp	00116$
   0209                     349 00108$:
                            350 ;	_rrslonglong.c: 37: return(l);
   0209 BA            [ 2]  351 	tsx
   020A BD 17 01      [ 5]  352 	lda	0x117,x
   020D 85*00         [ 3]  353 	sta	*___SDCC_m6502_ret7
   020F BD 16 01      [ 5]  354 	lda	0x116,x
   0212 85*00         [ 3]  355 	sta	*___SDCC_m6502_ret6
   0214 BD 15 01      [ 5]  356 	lda	0x115,x
   0217 85*00         [ 3]  357 	sta	*___SDCC_m6502_ret5
   0219 BD 14 01      [ 5]  358 	lda	0x114,x
   021C 85*00         [ 3]  359 	sta	*___SDCC_m6502_ret4
   021E BD 13 01      [ 5]  360 	lda	0x113,x
   0221 85*00         [ 3]  361 	sta	*___SDCC_m6502_ret3
   0223 BD 12 01      [ 5]  362 	lda	0x112,x
   0226 85*00         [ 3]  363 	sta	*___SDCC_m6502_ret2
   0228 BD 11 01      [ 5]  364 	lda	0x111,x
   022B AA            [ 2]  365 	tax
   022C 86*00         [ 3]  366 	stx	*(__TEMP+0)
   022E BA            [ 2]  367 	tsx
   022F BD 10 01      [ 5]  368 	lda	0x110,x
   0232 08            [ 3]  369 	php
   0233 A6*00         [ 3]  370 	ldx	*(__TEMP+0)
   0235 28            [ 4]  371 	plp
                            372 ;	_rrslonglong.c: 38: }
   0236 85*00         [ 3]  373 	sta	*(__TEMP+0)
   0238 86*01         [ 3]  374 	stx	*(__TEMP+1)
   023A BA            [ 2]  375 	tsx
   023B 8A            [ 2]  376 	txa
   023C 18            [ 2]  377 	clc
   023D 69 0D         [ 2]  378 	adc	#0x0d
   023F AA            [ 2]  379 	tax
   0240 9A            [ 2]  380 	txs
   0241 A6*01         [ 3]  381 	ldx	*(__TEMP+1)
   0243 A5*00         [ 3]  382 	lda	*(__TEMP+0)
   0245 60            [ 6]  383 	rts
                            384 	.area CODE
                            385 	.area RODATA
                            386 	.area XINIT
                            387 	.area CABS    (ABS)
