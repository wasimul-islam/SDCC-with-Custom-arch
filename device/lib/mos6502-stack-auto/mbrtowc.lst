                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbrtowc
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _mbrtowc
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
   0000                      23 _mbrtowc_sps_65536_10:
   0000                      24 	.ds 3
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area DABS    (ABS)
                             29 ;--------------------------------------------------------
                             30 ; initialized external ram data
                             31 ;--------------------------------------------------------
                             32 	.area DATA
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 	.area GSINIT
                             38 	.area GSFINAL
                             39 	.area GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 	.area _CODE
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area CODE
                             49 ;------------------------------------------------------------
                             50 ;Allocation info for local variables in function 'mbrtowc'
                             51 ;------------------------------------------------------------
                             52 ;s                         Allocated to stack - sp +37
                             53 ;n                         Allocated to stack - sp +39
                             54 ;ps                        Allocated to stack - sp +41
                             55 ;pwc                       Allocated to stack - sp +33
                             56 ;first_byte                Allocated to stack - sp +32
                             57 ;seqlen                    Allocated to stack - sp +31
                             58 ;mbseq                     Allocated to stack - sp +5
                             59 ;codepoint                 Allocated to stack - sp +1
                             60 ;i                         Allocated to stack - sp +30
                             61 ;j                         Allocated to registers y 
                             62 ;sloc0                     Allocated to stack - sp +28
                             63 ;sloc1                     Allocated to stack - sp +26
                             64 ;sloc2                     Allocated to stack - sp +25
                             65 ;sloc3                     Allocated to stack - sp +23
                             66 ;sloc4                     Allocated to stack - sp +21
                             67 ;sloc5                     Allocated to stack - sp +19
                             68 ;sloc6                     Allocated to stack - sp +18
                             69 ;sloc7                     Allocated to stack - sp +16
                             70 ;sloc8                     Allocated to stack - sp +14
                             71 ;sloc9                     Allocated to stack - sp +13
                             72 ;sloc10                    Allocated to stack - sp +9
                             73 ;sps                       Allocated with name '_mbrtowc_sps_65536_10'
                             74 ;------------------------------------------------------------
                             75 ;	../mbrtowc.c: 32: size_t mbrtowc(wchar_t *restrict pwc, const char *restrict s, size_t n, mbstate_t *restrict ps)
                             76 ;	-----------------------------------------
                             77 ;	 function mbrtowc
                             78 ;	-----------------------------------------
                             79 ;	Register assignment is optimal.
                             80 ;	Stack space usage: 34 bytes.
   0000                      81 _mbrtowc:
   0000 85*00         [ 3]   82 	sta	*(__TEMP+0)
   0002 8A            [ 2]   83 	txa
   0003 48            [ 3]   84 	pha
   0004 A5*00         [ 3]   85 	lda	*(__TEMP+0)
   0006 48            [ 3]   86 	pha
   0007 86*01         [ 3]   87 	stx	*(__TEMP+1)
   0009 BA            [ 2]   88 	tsx
   000A 8A            [ 2]   89 	txa
   000B 18            [ 2]   90 	clc
   000C 69 E0         [ 2]   91 	adc	#0xe0
   000E AA            [ 2]   92 	tax
   000F 9A            [ 2]   93 	txs
   0010 A6*01         [ 3]   94 	ldx	*(__TEMP+1)
   0012 A5*00         [ 3]   95 	lda	*(__TEMP+0)
                             96 ;	../mbrtowc.c: 41: if(!s)
   0014 BA            [ 2]   97 	tsx
   0015 BD 25 01      [ 5]   98 	lda	0x125,x
   0018 1D 26 01      [ 5]   99 	ora	0x126,x
   001B D0 27         [ 4]  100 	bne	00102$
                            101 ;	../mbrtowc.c: 42: return(mbrtowc(0, "", 1, ps));
   001D BD 2A 01      [ 5]  102 	lda	0x12a,x
   0020 48            [ 3]  103 	pha
   0021 BD 29 01      [ 5]  104 	lda	0x129,x
   0024 48            [ 3]  105 	pha
   0025 A9 00         [ 2]  106 	lda	#0x00
   0027 48            [ 3]  107 	pha
   0028 A9 01         [ 2]  108 	lda	#0x01
   002A 48            [ 3]  109 	pha
   002B A9s00         [ 2]  110 	lda	#>___str_0
   002D 48            [ 3]  111 	pha
   002E A9r00         [ 2]  112 	lda	#___str_0
   0030 48            [ 3]  113 	pha
   0031 A2 00         [ 2]  114 	ldx	#0x00
   0033 8A            [ 2]  115 	txa
   0034 20r00r00      [ 6]  116 	jsr	_mbrtowc
   0037 85*00         [ 3]  117 	sta	*(__TEMP+0)
   0039 68            [ 4]  118 	pla
   003A 68            [ 4]  119 	pla
   003B 68            [ 4]  120 	pla
   003C 68            [ 4]  121 	pla
   003D 68            [ 4]  122 	pla
   003E 68            [ 4]  123 	pla
   003F A5*00         [ 3]  124 	lda	*(__TEMP+0)
   0041 4Cr4Dr05      [ 3]  125 	jmp	00145$
   0044                     126 00102$:
                            127 ;	../mbrtowc.c: 43: if(!n)
   0044 BA            [ 2]  128 	tsx
   0045 BD 27 01      [ 5]  129 	lda	0x127,x
   0048 1D 28 01      [ 5]  130 	ora	0x128,x
   004B D0 03         [ 4]  131 	bne	00280$
   004D 4Cr40r05      [ 3]  132 	jmp	00128$
   0050                     133 00280$:
                            134 ;	../mbrtowc.c: 45: if(!ps)
   0050 BD 29 01      [ 5]  135 	lda	0x129,x
   0053 1D 2A 01      [ 5]  136 	ora	0x12a,x
   0056 D0 0A         [ 4]  137 	bne	00106$
                            138 ;	../mbrtowc.c: 47: ps = &sps;
   0058 A9r00         [ 2]  139 	lda	#_mbrtowc_sps_65536_10
   005A 9D 29 01      [ 5]  140 	sta	0x129,x
   005D A9s00         [ 2]  141 	lda	#>_mbrtowc_sps_65536_10
   005F 9D 2A 01      [ 5]  142 	sta	0x12a,x
   0062                     143 00106$:
                            144 ;	../mbrtowc.c: 50: for(i = 0; ps->c[i] && i < 3; i++)
   0062 BA            [ 2]  145 	tsx
   0063 8A            [ 2]  146 	txa
   0064 18            [ 2]  147 	clc
   0065 69 05         [ 2]  148 	adc	#0x05
   0067 9D 1C 01      [ 5]  149 	sta	0x11c,x
   006A A9 01         [ 2]  150 	lda	#0x01
   006C 9D 1D 01      [ 5]  151 	sta	0x11d,x
   006F BD 29 01      [ 5]  152 	lda	0x129,x
   0072 9D 1A 01      [ 5]  153 	sta	0x11a,x
   0075 BD 2A 01      [ 5]  154 	lda	0x12a,x
   0078 9D 1B 01      [ 5]  155 	sta	0x11b,x
   007B A9 00         [ 2]  156 	lda	#0x00
   007D 9D 1E 01      [ 5]  157 	sta	0x11e,x
   0080                     158 00131$:
   0080 BA            [ 2]  159 	tsx
   0081 BD 1A 01      [ 5]  160 	lda	0x11a,x
   0084 18            [ 2]  161 	clc
   0085 7D 1E 01      [ 5]  162 	adc	0x11e,x
   0088 48            [ 3]  163 	pha
   0089 BD 1B 01      [ 5]  164 	lda	0x11b,x
   008C 69 00         [ 2]  165 	adc	#0x00
   008E AA            [ 2]  166 	tax
   008F 68            [ 4]  167 	pla
   0090 85*00         [ 3]  168 	sta	*(__DPTR+0)
   0092 86*01         [ 3]  169 	stx	*(__DPTR+1)
   0094 A0 00         [ 2]  170 	ldy	#0x00
   0096 B1*00         [ 6]  171 	lda	[__DPTR],y
   0098 A8            [ 2]  172 	tay
   0099 F0 33         [ 4]  173 	beq	00174$
   009B BA            [ 2]  174 	tsx
   009C BD 1E 01      [ 5]  175 	lda	0x11e,x
   009F C9 03         [ 2]  176 	cmp	#0x03
   00A1 B0 2B         [ 4]  177 	bcs	00174$
                            178 ;	../mbrtowc.c: 51: mbseq[i] = ps->c[i];
   00A3 BD 1C 01      [ 5]  179 	lda	0x11c,x
   00A6 18            [ 2]  180 	clc
   00A7 7D 1E 01      [ 5]  181 	adc	0x11e,x
   00AA 48            [ 3]  182 	pha
   00AB BD 1D 01      [ 5]  183 	lda	0x11d,x
   00AE 69 00         [ 2]  184 	adc	#0x00
   00B0 AA            [ 2]  185 	tax
   00B1 68            [ 4]  186 	pla
   00B2 84*00         [ 3]  187 	sty	*(__TEMP+0)
   00B4 85*00         [ 3]  188 	sta	*(__DPTR+0)
   00B6 86*01         [ 3]  189 	stx	*(__DPTR+1)
   00B8 A4*00         [ 3]  190 	ldy	*(__TEMP+0)
   00BA 98            [ 2]  191 	tya
   00BB A0 00         [ 2]  192 	ldy	#0x00
   00BD 91*00         [ 6]  193 	sta	[__DPTR],y
   00BF A4*00         [ 3]  194 	ldy	*(__TEMP+0)
                            195 ;	../mbrtowc.c: 50: for(i = 0; ps->c[i] && i < 3; i++)
   00C1 BA            [ 2]  196 	tsx
   00C2 BD 1E 01      [ 5]  197 	lda	0x11e,x
   00C5 18            [ 2]  198 	clc
   00C6 69 01         [ 2]  199 	adc	#0x01
   00C8 9D 1E 01      [ 5]  200 	sta	0x11e,x
   00CB 4Cr80r00      [ 3]  201 	jmp	00131$
   00CE                     202 00174$:
   00CE BA            [ 2]  203 	tsx
   00CF BD 1E 01      [ 5]  204 	lda	0x11e,x
   00D2 9D 1A 01      [ 5]  205 	sta	0x11a,x
                            206 ;	../mbrtowc.c: 53: seqlen = 1;
   00D5 A9 01         [ 2]  207 	lda	#0x01
   00D7 9D 19 01      [ 5]  208 	sta	0x119,x
                            209 ;	../mbrtowc.c: 54: first_byte = ps->c[0] ? ps->c[0] : *s;
   00DA BD 29 01      [ 5]  210 	lda	0x129,x
   00DD 85*00         [ 3]  211 	sta	*(__DPTR+0)
   00DF BD 2A 01      [ 5]  212 	lda	0x12a,x
   00E2 85*01         [ 3]  213 	sta	*(__DPTR+1)
   00E4 A0 00         [ 2]  214 	ldy	#0x00
   00E6 B1*00         [ 6]  215 	lda	[__DPTR],y
   00E8 D0 0F         [ 4]  216 	bne	00148$
   00EA BA            [ 2]  217 	tsx
   00EB BD 25 01      [ 5]  218 	lda	0x125,x
   00EE 85*00         [ 3]  219 	sta	*(__DPTR+0)
   00F0 BD 26 01      [ 5]  220 	lda	0x126,x
   00F3 85*01         [ 3]  221 	sta	*(__DPTR+1)
   00F5 A0 00         [ 2]  222 	ldy	#0x00
   00F7 B1*00         [ 6]  223 	lda	[__DPTR],y
   00F9                     224 00148$:
   00F9 BA            [ 2]  225 	tsx
   00FA 9D 20 01      [ 5]  226 	sta	0x120,x
                            227 ;	../mbrtowc.c: 56: if(first_byte & 0x80)
   00FD A9 80         [ 2]  228 	lda	#0x80
   00FF 3D 20 01      [ 5]  229 	and	0x120,x
   0102 F0 7A         [ 4]  230 	beq	00112$
                            231 ;	../mbrtowc.c: 58: while (first_byte & (0x80 >> seqlen))
   0104 A9 01         [ 2]  232 	lda	#0x01
   0106 9D 1F 01      [ 5]  233 	sta	0x11f,x
   0109                     234 00108$:
   0109 BA            [ 2]  235 	tsx
   010A BD 1F 01      [ 5]  236 	lda	0x11f,x
   010D A8            [ 2]  237 	tay
   010E A9 80         [ 2]  238 	lda	#0x80
   0110 9D 17 01      [ 5]  239 	sta	0x117,x
   0113 A9 00         [ 2]  240 	lda	#0x00
   0115 9D 18 01      [ 5]  241 	sta	0x118,x
   0118 C0 00         [ 2]  242 	cpy	#0x00
   011A F0 13         [ 4]  243 	beq	00287$
   011C                     244 00286$:
   011C BD 18 01      [ 5]  245 	lda	0x118,x
   011F C9 80         [ 2]  246 	cmp	#0x80
   0121 6A            [ 2]  247 	ror	a
   0122 9D 18 01      [ 5]  248 	sta	0x118,x
   0125 BD 17 01      [ 5]  249 	lda	0x117,x
   0128 6A            [ 2]  250 	ror	a
   0129 9D 17 01      [ 5]  251 	sta	0x117,x
   012C 88            [ 2]  252 	dey
   012D D0 ED         [ 4]  253 	bne	00286$
   012F                     254 00287$:
   012F BD 20 01      [ 5]  255 	lda	0x120,x
   0132 9D 15 01      [ 5]  256 	sta	0x115,x
   0135 A9 00         [ 2]  257 	lda	#0x00
   0137 9D 16 01      [ 5]  258 	sta	0x116,x
   013A BD 17 01      [ 5]  259 	lda	0x117,x
   013D 3D 15 01      [ 5]  260 	and	0x115,x
   0140 D0 06         [ 4]  261 	bne	00288$
   0142 BD 18 01      [ 5]  262 	lda	0x118,x
   0145 3D 16 01      [ 5]  263 	and	0x116,x
   0148                     264 00288$:
   0148 F0 0C         [ 4]  265 	beq	00175$
                            266 ;	../mbrtowc.c: 59: seqlen++;
   014A BD 1F 01      [ 5]  267 	lda	0x11f,x
   014D 18            [ 2]  268 	clc
   014E 69 01         [ 2]  269 	adc	#0x01
   0150 9D 1F 01      [ 5]  270 	sta	0x11f,x
   0153 4Cr09r01      [ 3]  271 	jmp	00108$
   0156                     272 00175$:
   0156 BA            [ 2]  273 	tsx
   0157 BD 1F 01      [ 5]  274 	lda	0x11f,x
   015A 9D 19 01      [ 5]  275 	sta	0x119,x
                            276 ;	../mbrtowc.c: 60: first_byte &= (0xff >> (seqlen + 1));
   015D BD 1F 01      [ 5]  277 	lda	0x11f,x
   0160 18            [ 2]  278 	clc
   0161 69 01         [ 2]  279 	adc	#0x01
   0163 A8            [ 2]  280 	tay
   0164 A9 FF         [ 2]  281 	lda	#0xff
   0166 A2 00         [ 2]  282 	ldx	#0x00
   0168 C0 00         [ 2]  283 	cpy	#0x00
   016A F0 0B         [ 4]  284 	beq	00291$
   016C                     285 00290$:
   016C 48            [ 3]  286 	pha
   016D 8A            [ 2]  287 	txa
   016E C9 80         [ 2]  288 	cmp	#0x80
   0170 6A            [ 2]  289 	ror	a
   0171 AA            [ 2]  290 	tax
   0172 68            [ 4]  291 	pla
   0173 6A            [ 2]  292 	ror	a
   0174 88            [ 2]  293 	dey
   0175 D0 F5         [ 4]  294 	bne	00290$
   0177                     295 00291$:
   0177 BA            [ 2]  296 	tsx
   0178 3D 20 01      [ 5]  297 	and	0x120,x
   017B 9D 20 01      [ 5]  298 	sta	0x120,x
   017E                     299 00112$:
                            300 ;	../mbrtowc.c: 63: if(seqlen > 4)
   017E BA            [ 2]  301 	tsx
   017F BD 19 01      [ 5]  302 	lda	0x119,x
   0182 C9 04         [ 2]  303 	cmp	#0x04
   0184 F0 05         [ 4]  304 	beq	00292$
   0186 90 03         [ 4]  305 	bcc	00292$
   0188 4Cr40r05      [ 3]  306 	jmp	00128$
   018B                     307 00292$:
                            308 ;	../mbrtowc.c: 66: if(i + n < seqlen) // Incomplete multibyte character
   018B BD 1A 01      [ 5]  309 	lda	0x11a,x
   018E 9D 15 01      [ 5]  310 	sta	0x115,x
   0191 A9 00         [ 2]  311 	lda	#0x00
   0193 9D 16 01      [ 5]  312 	sta	0x116,x
   0196 BD 15 01      [ 5]  313 	lda	0x115,x
   0199 9D 17 01      [ 5]  314 	sta	0x117,x
   019C BD 16 01      [ 5]  315 	lda	0x116,x
   019F 9D 18 01      [ 5]  316 	sta	0x118,x
   01A2 BD 17 01      [ 5]  317 	lda	0x117,x
   01A5 18            [ 2]  318 	clc
   01A6 7D 27 01      [ 5]  319 	adc	0x127,x
   01A9 9D 17 01      [ 5]  320 	sta	0x117,x
   01AC BD 18 01      [ 5]  321 	lda	0x118,x
   01AF 7D 28 01      [ 5]  322 	adc	0x128,x
   01B2 9D 18 01      [ 5]  323 	sta	0x118,x
   01B5 BD 19 01      [ 5]  324 	lda	0x119,x
   01B8 9D 13 01      [ 5]  325 	sta	0x113,x
   01BB A9 00         [ 2]  326 	lda	#0x00
   01BD 9D 14 01      [ 5]  327 	sta	0x114,x
   01C0 BD 17 01      [ 5]  328 	lda	0x117,x
   01C3 38            [ 2]  329 	sec
   01C4 FD 13 01      [ 5]  330 	sbc	0x113,x
   01C7 BD 18 01      [ 5]  331 	lda	0x118,x
   01CA FD 14 01      [ 5]  332 	sbc	0x114,x
   01CD 90 03         [ 4]  333 	bcc	00294$
   01CF 4Cr78r02      [ 3]  334 	jmp	00164$
   01D2                     335 00294$:
                            336 ;	../mbrtowc.c: 70: return(-2);
   01D2 BD 29 01      [ 5]  337 	lda	0x129,x
   01D5 9D 13 01      [ 5]  338 	sta	0x113,x
   01D8 BD 2A 01      [ 5]  339 	lda	0x12a,x
   01DB 9D 14 01      [ 5]  340 	sta	0x114,x
   01DE BD 25 01      [ 5]  341 	lda	0x125,x
   01E1 9D 17 01      [ 5]  342 	sta	0x117,x
   01E4 BD 26 01      [ 5]  343 	lda	0x126,x
   01E7 9D 18 01      [ 5]  344 	sta	0x118,x
   01EA BD 1A 01      [ 5]  345 	lda	0x11a,x
   01ED 9D 12 01      [ 5]  346 	sta	0x112,x
   01F0 BD 27 01      [ 5]  347 	lda	0x127,x
   01F3 9D 10 01      [ 5]  348 	sta	0x110,x
   01F6 BD 28 01      [ 5]  349 	lda	0x128,x
   01F9 9D 11 01      [ 5]  350 	sta	0x111,x
   01FC                     351 00134$:
                            352 ;	../mbrtowc.c: 68: for(;n-- ; i++)
   01FC BA            [ 2]  353 	tsx
   01FD BD 10 01      [ 5]  354 	lda	0x110,x
   0200 9D 0E 01      [ 5]  355 	sta	0x10e,x
   0203 BD 11 01      [ 5]  356 	lda	0x111,x
   0206 9D 0F 01      [ 5]  357 	sta	0x10f,x
   0209 BD 10 01      [ 5]  358 	lda	0x110,x
   020C 38            [ 2]  359 	sec
   020D E9 01         [ 2]  360 	sbc	#0x01
   020F 9D 10 01      [ 5]  361 	sta	0x110,x
   0212 BD 11 01      [ 5]  362 	lda	0x111,x
   0215 E9 00         [ 2]  363 	sbc	#0x00
   0217 9D 11 01      [ 5]  364 	sta	0x111,x
   021A BD 0E 01      [ 5]  365 	lda	0x10e,x
   021D 1D 0F 01      [ 5]  366 	ora	0x10f,x
   0220 F0 4F         [ 4]  367 	beq	00115$
                            368 ;	../mbrtowc.c: 69: ps->c[i] = *s++;
   0222 BD 13 01      [ 5]  369 	lda	0x113,x
   0225 18            [ 2]  370 	clc
   0226 7D 12 01      [ 5]  371 	adc	0x112,x
   0229 9D 0E 01      [ 5]  372 	sta	0x10e,x
   022C BD 14 01      [ 5]  373 	lda	0x114,x
   022F 69 00         [ 2]  374 	adc	#0x00
   0231 9D 0F 01      [ 5]  375 	sta	0x10f,x
   0234 BD 17 01      [ 5]  376 	lda	0x117,x
   0237 85*00         [ 3]  377 	sta	*(__DPTR+0)
   0239 BD 18 01      [ 5]  378 	lda	0x118,x
   023C 85*01         [ 3]  379 	sta	*(__DPTR+1)
   023E A0 00         [ 2]  380 	ldy	#0x00
   0240 B1*00         [ 6]  381 	lda	[__DPTR],y
   0242 9D 0D 01      [ 5]  382 	sta	0x10d,x
   0245 BD 17 01      [ 5]  383 	lda	0x117,x
   0248 18            [ 2]  384 	clc
   0249 69 01         [ 2]  385 	adc	#0x01
   024B 9D 17 01      [ 5]  386 	sta	0x117,x
   024E BD 18 01      [ 5]  387 	lda	0x118,x
   0251 69 00         [ 2]  388 	adc	#0x00
   0253 9D 18 01      [ 5]  389 	sta	0x118,x
   0256 BD 0E 01      [ 5]  390 	lda	0x10e,x
   0259 85*00         [ 3]  391 	sta	*(__DPTR+0)
   025B BD 0F 01      [ 5]  392 	lda	0x10f,x
   025E 85*01         [ 3]  393 	sta	*(__DPTR+1)
   0260 BD 0D 01      [ 5]  394 	lda	0x10d,x
   0263 91*00         [ 6]  395 	sta	[__DPTR],y
                            396 ;	../mbrtowc.c: 68: for(;n-- ; i++)
   0265 BD 12 01      [ 5]  397 	lda	0x112,x
   0268 18            [ 2]  398 	clc
   0269 69 01         [ 2]  399 	adc	#0x01
   026B 9D 12 01      [ 5]  400 	sta	0x112,x
   026E 4CrFCr01      [ 3]  401 	jmp	00134$
   0271                     402 00115$:
                            403 ;	../mbrtowc.c: 70: return(-2);
   0271 A9 FE         [ 2]  404 	lda	#0xfe
   0273 A2 FF         [ 2]  405 	ldx	#0xff
   0275 4Cr4Dr05      [ 3]  406 	jmp	00145$
                            407 ;	../mbrtowc.c: 73: for(j = 0; j < i; j++)
   0278                     408 00164$:
   0278 BA            [ 2]  409 	tsx
   0279 BD 29 01      [ 5]  410 	lda	0x129,x
   027C 9D 0E 01      [ 5]  411 	sta	0x10e,x
   027F BD 2A 01      [ 5]  412 	lda	0x12a,x
   0282 9D 0F 01      [ 5]  413 	sta	0x10f,x
   0285 A0 00         [ 2]  414 	ldy	#0x00
   0287                     415 00137$:
   0287 BA            [ 2]  416 	tsx
   0288 98            [ 2]  417 	tya
   0289 DD 1A 01      [ 5]  418 	cmp	0x11a,x
   028C B0 1E         [ 4]  419 	bcs	00118$
                            420 ;	../mbrtowc.c: 74: ps->c[j] = 0;
   028E 98            [ 2]  421 	tya
   028F 18            [ 2]  422 	clc
   0290 7D 0E 01      [ 5]  423 	adc	0x10e,x
   0293 48            [ 3]  424 	pha
   0294 A9 00         [ 2]  425 	lda	#0x00
   0296 7D 0F 01      [ 5]  426 	adc	0x10f,x
   0299 AA            [ 2]  427 	tax
   029A 68            [ 4]  428 	pla
   029B 84*00         [ 3]  429 	sty	*(__TEMP+0)
   029D 85*00         [ 3]  430 	sta	*(__DPTR+0)
   029F 86*01         [ 3]  431 	stx	*(__DPTR+1)
   02A1 A9 00         [ 2]  432 	lda	#0x00
   02A3 A8            [ 2]  433 	tay
   02A4 91*00         [ 6]  434 	sta	[__DPTR],y
   02A6 A4*00         [ 3]  435 	ldy	*(__TEMP+0)
                            436 ;	../mbrtowc.c: 73: for(j = 0; j < i; j++)
   02A8 C8            [ 2]  437 	iny
   02A9 4Cr87r02      [ 3]  438 	jmp	00137$
   02AC                     439 00118$:
                            440 ;	../mbrtowc.c: 76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
   02AC BA            [ 2]  441 	tsx
   02AD A9 01         [ 2]  442 	lda	#0x01
   02AF 9D 27 01      [ 5]  443 	sta	0x127,x
   02B2 A9 00         [ 2]  444 	lda	#0x00
   02B4 9D 28 01      [ 5]  445 	sta	0x128,x
   02B7 BD 1A 01      [ 5]  446 	lda	0x11a,x
   02BA F0 0F         [ 4]  447 	beq	00149$
   02BC BD 15 01      [ 5]  448 	lda	0x115,x
   02BF 9D 0E 01      [ 5]  449 	sta	0x10e,x
   02C2 BD 16 01      [ 5]  450 	lda	0x116,x
   02C5 9D 0F 01      [ 5]  451 	sta	0x10f,x
   02C8 4CrD6r02      [ 3]  452 	jmp	00150$
   02CB                     453 00149$:
   02CB BA            [ 2]  454 	tsx
   02CC A9 01         [ 2]  455 	lda	#0x01
   02CE 9D 0E 01      [ 5]  456 	sta	0x10e,x
   02D1 A9 00         [ 2]  457 	lda	#0x00
   02D3 9D 0F 01      [ 5]  458 	sta	0x10f,x
   02D6                     459 00150$:
   02D6 BA            [ 2]  460 	tsx
   02D7 BD 0E 01      [ 5]  461 	lda	0x10e,x
   02DA 9D 0D 01      [ 5]  462 	sta	0x10d,x
   02DD BD 1C 01      [ 5]  463 	lda	0x11c,x
   02E0 9D 0E 01      [ 5]  464 	sta	0x10e,x
   02E3 BD 1D 01      [ 5]  465 	lda	0x11d,x
   02E6 9D 0F 01      [ 5]  466 	sta	0x10f,x
   02E9 BD 25 01      [ 5]  467 	lda	0x125,x
   02EC 9D 10 01      [ 5]  468 	sta	0x110,x
   02EF BD 26 01      [ 5]  469 	lda	0x126,x
   02F2 9D 11 01      [ 5]  470 	sta	0x111,x
   02F5 A9 01         [ 2]  471 	lda	#0x01
   02F7 9D 13 01      [ 5]  472 	sta	0x113,x
   02FA A9 00         [ 2]  473 	lda	#0x00
   02FC 9D 14 01      [ 5]  474 	sta	0x114,x
   02FF                     475 00140$:
   02FF BA            [ 2]  476 	tsx
   0300 BD 0D 01      [ 5]  477 	lda	0x10d,x
   0303 DD 19 01      [ 5]  478 	cmp	0x119,x
   0306 90 03         [ 4]  479 	bcc	00298$
   0308 4Cr89r03      [ 3]  480 	jmp	00121$
   030B                     481 00298$:
                            482 ;	../mbrtowc.c: 78: mbseq[i] = *s++;
   030B BD 0E 01      [ 5]  483 	lda	0x10e,x
   030E 18            [ 2]  484 	clc
   030F 7D 0D 01      [ 5]  485 	adc	0x10d,x
   0312 9D 15 01      [ 5]  486 	sta	0x115,x
   0315 BD 0F 01      [ 5]  487 	lda	0x10f,x
   0318 69 00         [ 2]  488 	adc	#0x00
   031A 9D 16 01      [ 5]  489 	sta	0x116,x
   031D BD 10 01      [ 5]  490 	lda	0x110,x
   0320 85*00         [ 3]  491 	sta	*(__DPTR+0)
   0322 BD 11 01      [ 5]  492 	lda	0x111,x
   0325 85*01         [ 3]  493 	sta	*(__DPTR+1)
   0327 A0 00         [ 2]  494 	ldy	#0x00
   0329 B1*00         [ 6]  495 	lda	[__DPTR],y
   032B 48            [ 3]  496 	pha
   032C BD 10 01      [ 5]  497 	lda	0x110,x
   032F 18            [ 2]  498 	clc
   0330 69 01         [ 2]  499 	adc	#0x01
   0332 9D 10 01      [ 5]  500 	sta	0x110,x
   0335 BD 11 01      [ 5]  501 	lda	0x111,x
   0338 69 00         [ 2]  502 	adc	#0x00
   033A 9D 11 01      [ 5]  503 	sta	0x111,x
   033D 68            [ 4]  504 	pla
   033E 85*00         [ 3]  505 	sta	*(__TEMP+0)
   0340 BD 15 01      [ 5]  506 	lda	0x115,x
   0343 85*00         [ 3]  507 	sta	*(__DPTR+0)
   0345 BD 16 01      [ 5]  508 	lda	0x116,x
   0348 85*01         [ 3]  509 	sta	*(__DPTR+1)
   034A A5*00         [ 3]  510 	lda	*(__TEMP+0)
   034C 91*00         [ 6]  511 	sta	[__DPTR],y
   034E A5*00         [ 3]  512 	lda	*(__TEMP+0)
                            513 ;	../mbrtowc.c: 79: if((mbseq[i] & 0xc0) != 0x80)
   0350 A2 00         [ 2]  514 	ldx	#0x00
   0352 29 C0         [ 2]  515 	and	#0xc0
   0354 C9 80         [ 2]  516 	cmp	#0x80
   0356 D0 04         [ 4]  517 	bne	00300$
   0358 E0 00         [ 2]  518 	cpx	#0x00
   035A F0 03         [ 4]  519 	beq	00301$
   035C                     520 00300$:
   035C 4Cr40r05      [ 3]  521 	jmp	00128$
   035F                     522 00301$:
                            523 ;	../mbrtowc.c: 76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
   035F BA            [ 2]  524 	tsx
   0360 BD 0D 01      [ 5]  525 	lda	0x10d,x
   0363 18            [ 2]  526 	clc
   0364 69 01         [ 2]  527 	adc	#0x01
   0366 9D 0D 01      [ 5]  528 	sta	0x10d,x
   0369 BD 13 01      [ 5]  529 	lda	0x113,x
   036C 18            [ 2]  530 	clc
   036D 69 01         [ 2]  531 	adc	#0x01
   036F 9D 13 01      [ 5]  532 	sta	0x113,x
   0372 BD 14 01      [ 5]  533 	lda	0x114,x
   0375 69 00         [ 2]  534 	adc	#0x00
   0377 9D 14 01      [ 5]  535 	sta	0x114,x
   037A BD 13 01      [ 5]  536 	lda	0x113,x
   037D 9D 27 01      [ 5]  537 	sta	0x127,x
   0380 BD 14 01      [ 5]  538 	lda	0x114,x
   0383 9D 28 01      [ 5]  539 	sta	0x128,x
   0386 4CrFFr02      [ 3]  540 	jmp	00140$
   0389                     541 00121$:
                            542 ;	../mbrtowc.c: 83: codepoint = first_byte;
   0389 BA            [ 2]  543 	tsx
   038A BD 20 01      [ 5]  544 	lda	0x120,x
   038D 9D 01 01      [ 5]  545 	sta	0x101,x
   0390 A9 00         [ 2]  546 	lda	#0x00
   0392 9D 02 01      [ 5]  547 	sta	0x102,x
   0395 9D 03 01      [ 5]  548 	sta	0x103,x
   0398 9D 04 01      [ 5]  549 	sta	0x104,x
                            550 ;	../mbrtowc.c: 85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
   039B BD 1C 01      [ 5]  551 	lda	0x11c,x
   039E 18            [ 2]  552 	clc
   039F 69 01         [ 2]  553 	adc	#0x01
   03A1 9D 0E 01      [ 5]  554 	sta	0x10e,x
   03A4 BD 1D 01      [ 5]  555 	lda	0x11d,x
   03A7 69 00         [ 2]  556 	adc	#0x00
   03A9 9D 0F 01      [ 5]  557 	sta	0x10f,x
   03AC BD 19 01      [ 5]  558 	lda	0x119,x
   03AF 38            [ 2]  559 	sec
   03B0 E9 01         [ 2]  560 	sbc	#0x01
   03B2 9D 0D 01      [ 5]  561 	sta	0x10d,x
   03B5                     562 00143$:
   03B5 BA            [ 2]  563 	tsx
   03B6 BD 0D 01      [ 5]  564 	lda	0x10d,x
   03B9 D0 03         [ 4]  565 	bne	00302$
   03BB 4CrD2r04      [ 3]  566 	jmp	00122$
   03BE                     567 00302$:
                            568 ;	../mbrtowc.c: 87: codepoint <<= 6;
   03BE BD 01 01      [ 5]  569 	lda	0x101,x
   03C1 0A            [ 2]  570 	asl	a
   03C2 9D 01 01      [ 5]  571 	sta	0x101,x
   03C5 BD 02 01      [ 5]  572 	lda	0x102,x
   03C8 2A            [ 2]  573 	rol	a
   03C9 9D 02 01      [ 5]  574 	sta	0x102,x
   03CC BD 03 01      [ 5]  575 	lda	0x103,x
   03CF 2A            [ 2]  576 	rol	a
   03D0 9D 03 01      [ 5]  577 	sta	0x103,x
   03D3 BD 04 01      [ 5]  578 	lda	0x104,x
   03D6 2A            [ 2]  579 	rol	a
   03D7 9D 04 01      [ 5]  580 	sta	0x104,x
   03DA BD 01 01      [ 5]  581 	lda	0x101,x
   03DD 0A            [ 2]  582 	asl	a
   03DE 9D 01 01      [ 5]  583 	sta	0x101,x
   03E1 BD 02 01      [ 5]  584 	lda	0x102,x
   03E4 2A            [ 2]  585 	rol	a
   03E5 9D 02 01      [ 5]  586 	sta	0x102,x
   03E8 BD 03 01      [ 5]  587 	lda	0x103,x
   03EB 2A            [ 2]  588 	rol	a
   03EC 9D 03 01      [ 5]  589 	sta	0x103,x
   03EF BD 04 01      [ 5]  590 	lda	0x104,x
   03F2 2A            [ 2]  591 	rol	a
   03F3 9D 04 01      [ 5]  592 	sta	0x104,x
   03F6 BD 01 01      [ 5]  593 	lda	0x101,x
   03F9 0A            [ 2]  594 	asl	a
   03FA 9D 01 01      [ 5]  595 	sta	0x101,x
   03FD BD 02 01      [ 5]  596 	lda	0x102,x
   0400 2A            [ 2]  597 	rol	a
   0401 9D 02 01      [ 5]  598 	sta	0x102,x
   0404 BD 03 01      [ 5]  599 	lda	0x103,x
   0407 2A            [ 2]  600 	rol	a
   0408 9D 03 01      [ 5]  601 	sta	0x103,x
   040B BD 04 01      [ 5]  602 	lda	0x104,x
   040E 2A            [ 2]  603 	rol	a
   040F 9D 04 01      [ 5]  604 	sta	0x104,x
   0412 BD 01 01      [ 5]  605 	lda	0x101,x
   0415 0A            [ 2]  606 	asl	a
   0416 9D 01 01      [ 5]  607 	sta	0x101,x
   0419 BD 02 01      [ 5]  608 	lda	0x102,x
   041C 2A            [ 2]  609 	rol	a
   041D 9D 02 01      [ 5]  610 	sta	0x102,x
   0420 BD 03 01      [ 5]  611 	lda	0x103,x
   0423 2A            [ 2]  612 	rol	a
   0424 9D 03 01      [ 5]  613 	sta	0x103,x
   0427 BD 04 01      [ 5]  614 	lda	0x104,x
   042A 2A            [ 2]  615 	rol	a
   042B 9D 04 01      [ 5]  616 	sta	0x104,x
   042E BD 01 01      [ 5]  617 	lda	0x101,x
   0431 0A            [ 2]  618 	asl	a
   0432 9D 01 01      [ 5]  619 	sta	0x101,x
   0435 BD 02 01      [ 5]  620 	lda	0x102,x
   0438 2A            [ 2]  621 	rol	a
   0439 9D 02 01      [ 5]  622 	sta	0x102,x
   043C BD 03 01      [ 5]  623 	lda	0x103,x
   043F 2A            [ 2]  624 	rol	a
   0440 9D 03 01      [ 5]  625 	sta	0x103,x
   0443 BD 04 01      [ 5]  626 	lda	0x104,x
   0446 2A            [ 2]  627 	rol	a
   0447 9D 04 01      [ 5]  628 	sta	0x104,x
   044A BD 01 01      [ 5]  629 	lda	0x101,x
   044D 0A            [ 2]  630 	asl	a
   044E 9D 01 01      [ 5]  631 	sta	0x101,x
   0451 BD 02 01      [ 5]  632 	lda	0x102,x
   0454 2A            [ 2]  633 	rol	a
   0455 9D 02 01      [ 5]  634 	sta	0x102,x
   0458 BD 03 01      [ 5]  635 	lda	0x103,x
   045B 2A            [ 2]  636 	rol	a
   045C 9D 03 01      [ 5]  637 	sta	0x103,x
   045F BD 04 01      [ 5]  638 	lda	0x104,x
   0462 2A            [ 2]  639 	rol	a
   0463 9D 04 01      [ 5]  640 	sta	0x104,x
                            641 ;	../mbrtowc.c: 88: codepoint |= (*s & 0x3f);
   0466 BD 0E 01      [ 5]  642 	lda	0x10e,x
   0469 85*00         [ 3]  643 	sta	*(__DPTR+0)
   046B BD 0F 01      [ 5]  644 	lda	0x10f,x
   046E 85*01         [ 3]  645 	sta	*(__DPTR+1)
   0470 A0 00         [ 2]  646 	ldy	#0x00
   0472 B1*00         [ 6]  647 	lda	[__DPTR],y
   0474 A2 00         [ 2]  648 	ldx	#0x00
   0476 29 3F         [ 2]  649 	and	#0x3f
   0478 48            [ 3]  650 	pha
   0479 8A            [ 2]  651 	txa
   047A BA            [ 2]  652 	tsx
   047B 9D 0B 01      [ 5]  653 	sta	0x10b,x
   047E 68            [ 4]  654 	pla
   047F 9D 0A 01      [ 5]  655 	sta	0x10a,x
   0482 BD 0B 01      [ 5]  656 	lda	0x10b,x
   0485 0A            [ 2]  657 	asl	a
   0486 98            [ 2]  658 	tya
   0487 69 FF         [ 2]  659 	adc	#0xff
   0489 49 FF         [ 2]  660 	eor	#0xff
   048B 9D 0C 01      [ 5]  661 	sta	0x10c,x
   048E 9D 0D 01      [ 5]  662 	sta	0x10d,x
   0491 BD 02 01      [ 5]  663 	lda	0x102,x
   0494 1D 0A 01      [ 5]  664 	ora	0x10a,x
   0497 9D 02 01      [ 5]  665 	sta	0x102,x
   049A BD 03 01      [ 5]  666 	lda	0x103,x
   049D 1D 0B 01      [ 5]  667 	ora	0x10b,x
   04A0 9D 03 01      [ 5]  668 	sta	0x103,x
   04A3 BD 04 01      [ 5]  669 	lda	0x104,x
   04A6 1D 0C 01      [ 5]  670 	ora	0x10c,x
   04A9 9D 04 01      [ 5]  671 	sta	0x104,x
   04AC BD 05 01      [ 5]  672 	lda	0x105,x
   04AF 1D 0D 01      [ 5]  673 	ora	0x10d,x
   04B2 9D 05 01      [ 5]  674 	sta	0x105,x
                            675 ;	../mbrtowc.c: 89: s++;
   04B5 BD 0F 01      [ 5]  676 	lda	0x10f,x
   04B8 18            [ 2]  677 	clc
   04B9 69 01         [ 2]  678 	adc	#0x01
   04BB 9D 0F 01      [ 5]  679 	sta	0x10f,x
   04BE BD 10 01      [ 5]  680 	lda	0x110,x
   04C1 69 00         [ 2]  681 	adc	#0x00
   04C3 9D 10 01      [ 5]  682 	sta	0x110,x
                            683 ;	../mbrtowc.c: 85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
   04C6 BD 0E 01      [ 5]  684 	lda	0x10e,x
   04C9 38            [ 2]  685 	sec
   04CA E9 01         [ 2]  686 	sbc	#0x01
   04CC 9D 0E 01      [ 5]  687 	sta	0x10e,x
   04CF 4CrB5r03      [ 3]  688 	jmp	00143$
   04D2                     689 00122$:
                            690 ;	../mbrtowc.c: 92: if(codepoint >= 0xd800 && codepoint <= 0xdfff) // UTF-16 surrogate.
   04D2 BA            [ 2]  691 	tsx
   04D3 BD 02 01      [ 5]  692 	lda	0x102,x
   04D6 38            [ 2]  693 	sec
   04D7 E9 D8         [ 2]  694 	sbc	#0xd8
   04D9 BD 03 01      [ 5]  695 	lda	0x103,x
   04DC E9 00         [ 2]  696 	sbc	#0x00
   04DE BD 04 01      [ 5]  697 	lda	0x104,x
   04E1 E9 00         [ 2]  698 	sbc	#0x00
   04E3 90 1D         [ 4]  699 	bcc	00124$
   04E5 A9 FF         [ 2]  700 	lda	#0xff
   04E7 38            [ 2]  701 	sec
   04E8 FD 01 01      [ 5]  702 	sbc	0x101,x
   04EB A9 DF         [ 2]  703 	lda	#0xdf
   04ED FD 02 01      [ 5]  704 	sbc	0x102,x
   04F0 A9 00         [ 2]  705 	lda	#0x00
   04F2 FD 03 01      [ 5]  706 	sbc	0x103,x
   04F5 A9 00         [ 2]  707 	lda	#0x00
   04F7 FD 04 01      [ 5]  708 	sbc	0x104,x
   04FA 90 06         [ 4]  709 	bcc	00124$
                            710 ;	../mbrtowc.c: 93: return(-1);
   04FC A9 FF         [ 2]  711 	lda	#0xff
   04FE AA            [ 2]  712 	tax
   04FF 4Cr4Dr05      [ 3]  713 	jmp	00145$
   0502                     714 00124$:
                            715 ;	../mbrtowc.c: 95: if(pwc)
   0502 BA            [ 2]  716 	tsx
   0503 BD 21 01      [ 5]  717 	lda	0x121,x
   0506 1D 22 01      [ 5]  718 	ora	0x122,x
   0509 F0 23         [ 4]  719 	beq	00127$
                            720 ;	../mbrtowc.c: 96: *pwc = codepoint;
   050B BD 21 01      [ 5]  721 	lda	0x121,x
   050E 85*00         [ 3]  722 	sta	*(__DPTR+0)
   0510 BD 22 01      [ 5]  723 	lda	0x122,x
   0513 85*01         [ 3]  724 	sta	*(__DPTR+1)
   0515 BD 01 01      [ 5]  725 	lda	0x101,x
   0518 A0 00         [ 2]  726 	ldy	#0x00
   051A 91*00         [ 6]  727 	sta	[__DPTR],y
   051C BD 02 01      [ 5]  728 	lda	0x102,x
   051F C8            [ 2]  729 	iny
   0520 91*00         [ 6]  730 	sta	[__DPTR],y
   0522 BD 03 01      [ 5]  731 	lda	0x103,x
   0525 C8            [ 2]  732 	iny
   0526 91*00         [ 6]  733 	sta	[__DPTR],y
   0528 BD 04 01      [ 5]  734 	lda	0x104,x
   052B C8            [ 2]  735 	iny
   052C 91*00         [ 6]  736 	sta	[__DPTR],y
   052E                     737 00127$:
                            738 ;	../mbrtowc.c: 97: return(n);
   052E BA            [ 2]  739 	tsx
   052F BD 28 01      [ 5]  740 	lda	0x128,x
   0532 AA            [ 2]  741 	tax
   0533 86*00         [ 3]  742 	stx	*(__TEMP+0)
   0535 BA            [ 2]  743 	tsx
   0536 BD 27 01      [ 5]  744 	lda	0x127,x
   0539 08            [ 3]  745 	php
   053A A6*00         [ 3]  746 	ldx	*(__TEMP+0)
   053C 28            [ 4]  747 	plp
   053D 4Cr4Dr05      [ 3]  748 	jmp	00145$
                            749 ;	../mbrtowc.c: 99: eilseq:
   0540                     750 00128$:
                            751 ;	../mbrtowc.c: 100: errno = EILSEQ;
   0540 A2 54         [ 2]  752 	ldx	#0x54
   0542 8Er00r00      [ 4]  753 	stx	_errno
   0545 A2 00         [ 2]  754 	ldx	#0x00
   0547 8Er01r00      [ 4]  755 	stx	(_errno + 1)
                            756 ;	../mbrtowc.c: 101: return(-1);
   054A A9 FF         [ 2]  757 	lda	#0xff
   054C AA            [ 2]  758 	tax
   054D                     759 00145$:
                            760 ;	../mbrtowc.c: 102: }
   054D 85*00         [ 3]  761 	sta	*(__TEMP+0)
   054F 86*01         [ 3]  762 	stx	*(__TEMP+1)
   0551 BA            [ 2]  763 	tsx
   0552 8A            [ 2]  764 	txa
   0553 18            [ 2]  765 	clc
   0554 69 22         [ 2]  766 	adc	#0x22
   0556 AA            [ 2]  767 	tax
   0557 9A            [ 2]  768 	txs
   0558 A6*01         [ 3]  769 	ldx	*(__TEMP+1)
   055A A5*00         [ 3]  770 	lda	*(__TEMP+0)
   055C 60            [ 6]  771 	rts
                            772 	.area CODE
                            773 	.area RODATA
                            774 	.area RODATA
   0000                     775 ___str_0:
   0000 00                  776 	.db 0x00
                            777 	.area CODE
                            778 	.area XINIT
                            779 	.area CABS    (ABS)
