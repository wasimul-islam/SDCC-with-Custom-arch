                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module wcstombs
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _wctomb
                             12 	.globl _wcstombs
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; uninitialized external ram data
                             22 ;--------------------------------------------------------
                             23 	.area BSS
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area DABS    (ABS)
                             28 ;--------------------------------------------------------
                             29 ; initialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area DATA
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _CODE
                             36 	.area GSINIT
                             37 	.area GSFINAL
                             38 	.area GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 	.area _CODE
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area CODE
                             48 ;------------------------------------------------------------
                             49 ;Allocation info for local variables in function 'wcstombs'
                             50 ;------------------------------------------------------------
                             51 ;pwcs                      Allocated to stack - sp +23
                             52 ;n                         Allocated to stack - sp +25
                             53 ;s                         Allocated to stack - sp +19
                             54 ;m                         Allocated to stack - sp +17
                             55 ;buffer                    Allocated to stack - sp +1
                             56 ;b                         Allocated to stack - sp +15
                             57 ;sloc0                     Allocated to stack - sp +13
                             58 ;sloc1                     Allocated to stack - sp +11
                             59 ;sloc2                     Allocated to stack - sp +7
                             60 ;sloc3                     Allocated to stack - sp +5
                             61 ;------------------------------------------------------------
                             62 ;	../wcstombs.c: 33: size_t wcstombs(char *restrict s, const wchar_t *restrict pwcs, size_t n)
                             63 ;	-----------------------------------------
                             64 ;	 function wcstombs
                             65 ;	-----------------------------------------
                             66 ;	Register assignment is optimal.
                             67 ;	Stack space usage: 20 bytes.
   0000                      68 _wcstombs:
   0000 85*00         [ 3]   69 	sta	*(__TEMP+0)
   0002 8A            [ 2]   70 	txa
   0003 48            [ 3]   71 	pha
   0004 A5*00         [ 3]   72 	lda	*(__TEMP+0)
   0006 48            [ 3]   73 	pha
   0007 86*01         [ 3]   74 	stx	*(__TEMP+1)
   0009 BA            [ 2]   75 	tsx
   000A 8A            [ 2]   76 	txa
   000B 18            [ 2]   77 	clc
   000C 69 EE         [ 2]   78 	adc	#0xee
   000E AA            [ 2]   79 	tax
   000F 9A            [ 2]   80 	txs
                             81 ;	../wcstombs.c: 35: size_t m = 0;
   0010 BA            [ 2]   82 	tsx
   0011 A9 00         [ 2]   83 	lda	#0x00
   0013 9D 11 01      [ 5]   84 	sta	0x111,x
   0016 9D 12 01      [ 5]   85 	sta	0x112,x
                             86 ;	../wcstombs.c: 38: while(n > MB_LEN_MAX || n >= wctomb(buffer, *pwcs))
   0019 E8            [ 2]   87 	inx
   001A 8A            [ 2]   88 	txa
   001B 9D 0C 01      [ 5]   89 	sta	0x10c,x
   001E A9 01         [ 2]   90 	lda	#0x01
   0020 9D 0D 01      [ 5]   91 	sta	0x10d,x
   0023 BD 16 01      [ 5]   92 	lda	0x116,x
   0026 9D 0A 01      [ 5]   93 	sta	0x10a,x
   0029 BD 17 01      [ 5]   94 	lda	0x117,x
   002C 9D 0B 01      [ 5]   95 	sta	0x10b,x
   002F                      96 00107$:
   002F BA            [ 2]   97 	tsx
   0030 A9 04         [ 2]   98 	lda	#0x04
   0032 38            [ 2]   99 	sec
   0033 FD 19 01      [ 5]  100 	sbc	0x119,x
   0036 A9 00         [ 2]  101 	lda	#0x00
   0038 FD 1A 01      [ 5]  102 	sbc	0x11a,x
   003B 90 74         [ 4]  103 	bcc	00108$
   003D BD 0B 01      [ 5]  104 	lda	0x10b,x
   0040 85*00         [ 3]  105 	sta	*(__DPTR+0)
   0042 BD 0C 01      [ 5]  106 	lda	0x10c,x
   0045 85*01         [ 3]  107 	sta	*(__DPTR+1)
   0047 A0 00         [ 2]  108 	ldy	#0x00
   0049 B1*00         [ 6]  109 	lda	[__DPTR],y
   004B 9D 07 01      [ 5]  110 	sta	0x107,x
   004E C8            [ 2]  111 	iny
   004F B1*00         [ 6]  112 	lda	[__DPTR],y
   0051 9D 08 01      [ 5]  113 	sta	0x108,x
   0054 C8            [ 2]  114 	iny
   0055 B1*00         [ 6]  115 	lda	[__DPTR],y
   0057 9D 09 01      [ 5]  116 	sta	0x109,x
   005A C8            [ 2]  117 	iny
   005B B1*00         [ 6]  118 	lda	[__DPTR],y
   005D 9D 0A 01      [ 5]  119 	sta	0x10a,x
   0060 BD 0D 01      [ 5]  120 	lda	0x10d,x
   0063 9D 05 01      [ 5]  121 	sta	0x105,x
   0066 BD 0E 01      [ 5]  122 	lda	0x10e,x
   0069 9D 06 01      [ 5]  123 	sta	0x106,x
   006C BD 0A 01      [ 5]  124 	lda	0x10a,x
   006F 48            [ 3]  125 	pha
   0070 BD 09 01      [ 5]  126 	lda	0x109,x
   0073 48            [ 3]  127 	pha
   0074 BD 08 01      [ 5]  128 	lda	0x108,x
   0077 48            [ 3]  129 	pha
   0078 BD 07 01      [ 5]  130 	lda	0x107,x
   007B 48            [ 3]  131 	pha
   007C BD 06 01      [ 5]  132 	lda	0x106,x
   007F AA            [ 2]  133 	tax
   0080 86*00         [ 3]  134 	stx	*(__TEMP+0)
   0082 BA            [ 2]  135 	tsx
   0083 BD 09 01      [ 5]  136 	lda	0x109,x
   0086 08            [ 3]  137 	php
   0087 A6*00         [ 3]  138 	ldx	*(__TEMP+0)
   0089 28            [ 4]  139 	plp
   008A 20r00r00      [ 6]  140 	jsr	_wctomb
   008D 85*00         [ 3]  141 	sta	*(__TEMP+0)
   008F 68            [ 4]  142 	pla
   0090 68            [ 4]  143 	pla
   0091 68            [ 4]  144 	pla
   0092 68            [ 4]  145 	pla
   0093 A5*00         [ 3]  146 	lda	*(__TEMP+0)
   0095 48            [ 3]  147 	pha
   0096 8A            [ 2]  148 	txa
   0097 BA            [ 2]  149 	tsx
   0098 9D 07 01      [ 5]  150 	sta	0x107,x
   009B 68            [ 4]  151 	pla
   009C 9D 06 01      [ 5]  152 	sta	0x106,x
   009F BD 1A 01      [ 5]  153 	lda	0x11a, x
   00A2 38            [ 2]  154 	sec
   00A3 FD 06 01      [ 5]  155 	sbc	0x106,x
   00A6 BD 1B 01      [ 5]  156 	lda	0x11b,x
   00A9 FD 07 01      [ 5]  157 	sbc	0x107,x
   00AC B0 03         [ 4]  158 	bcs	00129$
   00AE 4Cr96r01      [ 3]  159 	jmp	00109$
   00B1                     160 00129$:
   00B1                     161 00108$:
                            162 ;	../wcstombs.c: 40: int b = wctomb(s, *pwcs);
   00B1 BA            [ 2]  163 	tsx
   00B2 BD 0B 01      [ 5]  164 	lda	0x10b,x
   00B5 85*00         [ 3]  165 	sta	*(__DPTR+0)
   00B7 BD 0C 01      [ 5]  166 	lda	0x10c,x
   00BA 85*01         [ 3]  167 	sta	*(__DPTR+1)
   00BC A0 00         [ 2]  168 	ldy	#0x00
   00BE B1*00         [ 6]  169 	lda	[__DPTR],y
   00C0 9D 07 01      [ 5]  170 	sta	0x107,x
   00C3 C8            [ 2]  171 	iny
   00C4 B1*00         [ 6]  172 	lda	[__DPTR],y
   00C6 9D 08 01      [ 5]  173 	sta	0x108,x
   00C9 C8            [ 2]  174 	iny
   00CA B1*00         [ 6]  175 	lda	[__DPTR],y
   00CC 9D 09 01      [ 5]  176 	sta	0x109,x
   00CF C8            [ 2]  177 	iny
   00D0 B1*00         [ 6]  178 	lda	[__DPTR],y
   00D2 9D 0A 01      [ 5]  179 	sta	0x10a, x
   00D5 48            [ 3]  180 	pha
   00D6 BD 09 01      [ 5]  181 	lda	0x109,x
   00D9 48            [ 3]  182 	pha
   00DA BD 08 01      [ 5]  183 	lda	0x108,x
   00DD 48            [ 3]  184 	pha
   00DE BD 07 01      [ 5]  185 	lda	0x107,x
   00E1 48            [ 3]  186 	pha
   00E2 BD 14 01      [ 5]  187 	lda	0x114,x
   00E5 AA            [ 2]  188 	tax
   00E6 86*00         [ 3]  189 	stx	*(__TEMP+0)
   00E8 BA            [ 2]  190 	tsx
   00E9 BD 17 01      [ 5]  191 	lda	0x117,x
   00EC 08            [ 3]  192 	php
   00ED A6*00         [ 3]  193 	ldx	*(__TEMP+0)
   00EF 28            [ 4]  194 	plp
   00F0 20r00r00      [ 6]  195 	jsr	_wctomb
   00F3 86*00         [ 3]  196 	stx	*(__TEMP+0)
   00F5 BA            [ 2]  197 	tsx
   00F6 9D 13 01      [ 5]  198 	sta	0x113,x
   00F9 A6*00         [ 3]  199 	ldx	*(__TEMP+0)
   00FB 8A            [ 2]  200 	txa
   00FC BA            [ 2]  201 	tsx
   00FD 9D 14 01      [ 5]  202 	sta	0x114,x
   0100 A6*00         [ 3]  203 	ldx	*(__TEMP+0)
   0102 85*00         [ 3]  204 	sta	*(__TEMP+0)
   0104 68            [ 4]  205 	pla
   0105 68            [ 4]  206 	pla
   0106 68            [ 4]  207 	pla
   0107 68            [ 4]  208 	pla
   0108 A5*00         [ 3]  209 	lda	*(__TEMP+0)
                            210 ;	../wcstombs.c: 42: if(b == 1 && !*s)
   010A BA            [ 2]  211 	tsx
   010B BD 0F 01      [ 5]  212 	lda	0x10f,x
   010E C9 01         [ 2]  213 	cmp	#0x01
   0110 D0 15         [ 4]  214 	bne	00102$
   0112 BD 10 01      [ 5]  215 	lda	0x110,x
   0115 D0 10         [ 4]  216 	bne	00102$
   0117 BD 13 01      [ 5]  217 	lda	0x113,x
   011A 85*00         [ 3]  218 	sta	*(__DPTR+0)
   011C BD 14 01      [ 5]  219 	lda	0x114,x
   011F 85*01         [ 3]  220 	sta	*(__DPTR+1)
   0121 A0 00         [ 2]  221 	ldy	#0x00
   0123 B1*00         [ 6]  222 	lda	[__DPTR],y
   0125 F0 6F         [ 4]  223 	beq	00109$
                            224 ;	../wcstombs.c: 43: break;
   0127                     225 00102$:
                            226 ;	../wcstombs.c: 44: if(b < 0)
   0127 BA            [ 2]  227 	tsx
   0128 BD 10 01      [ 5]  228 	lda	0x110,x
   012B 38            [ 2]  229 	sec
   012C E9 00         [ 2]  230 	sbc	#0x00
   012E 50 04         [ 4]  231 	bvc	00135$
   0130 10 04         [ 4]  232 	bpl	00134$
   0132 30 08         [ 4]  233 	bmi	00105$
   0134                     234 00135$:
   0134 10 06         [ 4]  235 	bpl	00105$
   0136                     236 00134$:
                            237 ;	../wcstombs.c: 45: return(-1);
   0136 A9 FF         [ 2]  238 	lda	#0xff
   0138 AA            [ 2]  239 	tax
   0139 4CrA5r01      [ 3]  240 	jmp	00110$
   013C                     241 00105$:
                            242 ;	../wcstombs.c: 47: n -= b;
   013C BA            [ 2]  243 	tsx
   013D BD 0F 01      [ 5]  244 	lda	0x10f,x
   0140 9D 05 01      [ 5]  245 	sta	0x105,x
   0143 BD 10 01      [ 5]  246 	lda	0x110,x
   0146 9D 06 01      [ 5]  247 	sta	0x106,x
   0149 BD 19 01      [ 5]  248 	lda	0x119,x
   014C 38            [ 2]  249 	sec
   014D FD 05 01      [ 5]  250 	sbc	0x105,x
   0150 9D 19 01      [ 5]  251 	sta	0x119,x
   0153 BD 1A 01      [ 5]  252 	lda	0x11a,x
   0156 FD 06 01      [ 5]  253 	sbc	0x106,x
   0159 9D 1A 01      [ 5]  254 	sta	0x11a,x
                            255 ;	../wcstombs.c: 48: m += b;
   015C BD 11 01      [ 5]  256 	lda	0x111,x
   015F 18            [ 2]  257 	clc
   0160 7D 05 01      [ 5]  258 	adc	0x105,x
   0163 9D 11 01      [ 5]  259 	sta	0x111,x
   0166 BD 12 01      [ 5]  260 	lda	0x112,x
   0169 7D 06 01      [ 5]  261 	adc	0x106,x
   016C 9D 12 01      [ 5]  262 	sta	0x112,x
                            263 ;	../wcstombs.c: 49: s += b;
   016F BD 13 01      [ 5]  264 	lda	0x113,x
   0172 18            [ 2]  265 	clc
   0173 7D 0F 01      [ 5]  266 	adc	0x10f,x
   0176 9D 13 01      [ 5]  267 	sta	0x113,x
   0179 BD 14 01      [ 5]  268 	lda	0x114,x
   017C 7D 10 01      [ 5]  269 	adc	0x110,x
   017F 9D 14 01      [ 5]  270 	sta	0x114,x
                            271 ;	../wcstombs.c: 50: pwcs++;
   0182 BD 0B 01      [ 5]  272 	lda	0x10b,x
   0185 18            [ 2]  273 	clc
   0186 69 04         [ 2]  274 	adc	#0x04
   0188 9D 0B 01      [ 5]  275 	sta	0x10b,x
   018B BD 0C 01      [ 5]  276 	lda	0x10c,x
   018E 69 00         [ 2]  277 	adc	#0x00
   0190 9D 0C 01      [ 5]  278 	sta	0x10c,x
   0193 4Cr2Fr00      [ 3]  279 	jmp	00107$
   0196                     280 00109$:
                            281 ;	../wcstombs.c: 53: return(m);
   0196 BA            [ 2]  282 	tsx
   0197 BD 12 01      [ 5]  283 	lda	0x112,x
   019A AA            [ 2]  284 	tax
   019B 86*00         [ 3]  285 	stx	*(__TEMP+0)
   019D BA            [ 2]  286 	tsx
   019E BD 11 01      [ 5]  287 	lda	0x111,x
   01A1 08            [ 3]  288 	php
   01A2 A6*00         [ 3]  289 	ldx	*(__TEMP+0)
   01A4 28            [ 4]  290 	plp
   01A5                     291 00110$:
                            292 ;	../wcstombs.c: 54: }
   01A5 85*00         [ 3]  293 	sta	*(__TEMP+0)
   01A7 86*01         [ 3]  294 	stx	*(__TEMP+1)
   01A9 BA            [ 2]  295 	tsx
   01AA 8A            [ 2]  296 	txa
   01AB 18            [ 2]  297 	clc
   01AC 69 14         [ 2]  298 	adc	#0x14
   01AE AA            [ 2]  299 	tax
   01AF 9A            [ 2]  300 	txs
   01B0 A6*01         [ 3]  301 	ldx	*(__TEMP+1)
   01B2 A5*00         [ 3]  302 	lda	*(__TEMP+0)
   01B4 60            [ 6]  303 	rts
                            304 	.area CODE
                            305 	.area RODATA
                            306 	.area XINIT
                            307 	.area CABS    (ABS)
