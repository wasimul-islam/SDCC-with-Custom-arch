                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module floorf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _floorf
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'floorf'
                             49 ;------------------------------------------------------------
                             50 ;x                         Allocated to stack - sp +11
                             51 ;r                         Allocated to stack - sp +5
                             52 ;sloc0                     Allocated to stack - sp +5
                             53 ;sloc1                     Allocated to stack - sp +1
                             54 ;------------------------------------------------------------
                             55 ;	../floorf.c: 33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                             56 ;	-----------------------------------------
                             57 ;	 function floorf
                             58 ;	-----------------------------------------
                             59 ;	Register assignment is optimal.
                             60 ;	Stack space usage: 8 bytes.
   0000                      61 _floorf:
   0000 85*00         [ 3]   62 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   63 	stx	*(__TEMP+1)
   0004 BA            [ 2]   64 	tsx
   0005 8A            [ 2]   65 	txa
   0006 18            [ 2]   66 	clc
   0007 69 F8         [ 2]   67 	adc	#0xf8
   0009 AA            [ 2]   68 	tax
   000A 9A            [ 2]   69 	txs
   000B A6*01         [ 3]   70 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   71 	lda	*(__TEMP+0)
                             72 ;	../floorf.c: 36: r=x;
   000F BA            [ 2]   73 	tsx
   0010 BD 0E 01      [ 5]   74 	lda	0x10e,x
   0013 48            [ 3]   75 	pha
   0014 BD 0D 01      [ 5]   76 	lda	0x10d,x
   0017 48            [ 3]   77 	pha
   0018 BD 0C 01      [ 5]   78 	lda	0x10c,x
   001B 48            [ 3]   79 	pha
   001C BD 0B 01      [ 5]   80 	lda	0x10b,x
   001F 48            [ 3]   81 	pha
   0020 20r00r00      [ 6]   82 	jsr	___fs2slong
   0023 86*00         [ 3]   83 	stx	*(__TEMP+0)
   0025 BA            [ 2]   84 	tsx
   0026 9D 09 01      [ 5]   85 	sta	0x109,x
   0029 A6*00         [ 3]   86 	ldx	*(__TEMP+0)
   002B 8A            [ 2]   87 	txa
   002C BA            [ 2]   88 	tsx
   002D 9D 0A 01      [ 5]   89 	sta	0x10a,x
   0030 A6*00         [ 3]   90 	ldx	*(__TEMP+0)
   0032 A5*00         [ 3]   91 	lda	*___SDCC_m6502_ret2
   0034 BA            [ 2]   92 	tsx
   0035 9D 0B 01      [ 5]   93 	sta	0x10b,x
   0038 A5*00         [ 3]   94 	lda	*___SDCC_m6502_ret3
   003A 9D 0C 01      [ 5]   95 	sta	0x10c,x
   003D 85*00         [ 3]   96 	sta	*(__TEMP+0)
   003F 68            [ 4]   97 	pla
   0040 68            [ 4]   98 	pla
   0041 68            [ 4]   99 	pla
   0042 68            [ 4]  100 	pla
                            101 ;	../floorf.c: 37: if (r<=0)
   0043 A9 00         [ 2]  102 	lda	#0x00
   0045 38            [ 2]  103 	sec
   0046 FD 09 01      [ 5]  104 	sbc	0x109,x
   0049 A9 00         [ 2]  105 	lda	#0x00
   004B FD 0A 01      [ 5]  106 	sbc	0x10a,x
   004E A9 00         [ 2]  107 	lda	#0x00
   0050 FD 0B 01      [ 5]  108 	sbc	0x10b,x
   0053 A9 00         [ 2]  109 	lda	#0x00
   0055 FD 0C 01      [ 5]  110 	sbc	0x10c,x
   0058 70 04         [ 4]  111 	bvs	00117$
   005A 10 07         [ 4]  112 	bpl	00116$
   005C 30 02         [ 4]  113 	bmi	00118$
   005E                     114 00117$:
   005E 30 03         [ 4]  115 	bmi	00116$
   0060                     116 00118$:
   0060 4Cr5Dr01      [ 3]  117 	jmp	00102$
   0063                     118 00116$:
                            119 ;	../floorf.c: 38: return (r+((r>x)?-1:0));
   0063 BD 0C 01      [ 5]  120 	lda	0x10c,x
   0066 48            [ 3]  121 	pha
   0067 BD 0B 01      [ 5]  122 	lda	0x10b,x
   006A 48            [ 3]  123 	pha
   006B BD 0A 01      [ 5]  124 	lda	0x10a,x
   006E 48            [ 3]  125 	pha
   006F BD 09 01      [ 5]  126 	lda	0x109,x
   0072 48            [ 3]  127 	pha
   0073 20r00r00      [ 6]  128 	jsr	___slong2fs
   0076 86*00         [ 3]  129 	stx	*(__TEMP+0)
   0078 BA            [ 2]  130 	tsx
   0079 9D 05 01      [ 5]  131 	sta	0x105,x
   007C A6*00         [ 3]  132 	ldx	*(__TEMP+0)
   007E 8A            [ 2]  133 	txa
   007F BA            [ 2]  134 	tsx
   0080 9D 06 01      [ 5]  135 	sta	0x106,x
   0083 A6*00         [ 3]  136 	ldx	*(__TEMP+0)
   0085 A5*00         [ 3]  137 	lda	*___SDCC_m6502_ret2
   0087 BA            [ 2]  138 	tsx
   0088 9D 07 01      [ 5]  139 	sta	0x107,x
   008B A5*00         [ 3]  140 	lda	*___SDCC_m6502_ret3
   008D 9D 08 01      [ 5]  141 	sta	0x108,x
   0090 85*00         [ 3]  142 	sta	*(__TEMP+0)
   0092 68            [ 4]  143 	pla
   0093 68            [ 4]  144 	pla
   0094 68            [ 4]  145 	pla
   0095 68            [ 4]  146 	pla
   0096 BD 08 01      [ 5]  147 	lda	0x108, x
   0099 48            [ 3]  148 	pha
   009A BD 07 01      [ 5]  149 	lda	0x107,x
   009D 48            [ 3]  150 	pha
   009E BD 06 01      [ 5]  151 	lda	0x106,x
   00A1 48            [ 3]  152 	pha
   00A2 BD 05 01      [ 5]  153 	lda	0x105,x
   00A5 48            [ 3]  154 	pha
   00A6 BD 12 01      [ 5]  155 	lda	0x112,x
   00A9 48            [ 3]  156 	pha
   00AA BD 11 01      [ 5]  157 	lda	0x111,x
   00AD 48            [ 3]  158 	pha
   00AE BD 10 01      [ 5]  159 	lda	0x110,x
   00B1 48            [ 3]  160 	pha
   00B2 BD 0F 01      [ 5]  161 	lda	0x10f,x
   00B5 48            [ 3]  162 	pha
   00B6 20r00r00      [ 6]  163 	jsr	___fslt
   00B9 85*00         [ 3]  164 	sta	*(__TEMP+0)
   00BB 86*01         [ 3]  165 	stx	*(__TEMP+1)
   00BD BA            [ 2]  166 	tsx
   00BE 8A            [ 2]  167 	txa
   00BF 18            [ 2]  168 	clc
   00C0 69 08         [ 2]  169 	adc	#0x08
   00C2 AA            [ 2]  170 	tax
   00C3 9A            [ 2]  171 	txs
   00C4 A6*01         [ 3]  172 	ldx	*(__TEMP+1)
   00C6 A5*00         [ 3]  173 	lda	*(__TEMP+0)
   00C8 F0 06         [ 4]  174 	beq	00106$
   00CA A9 FF         [ 2]  175 	lda	#0xff
   00CC AA            [ 2]  176 	tax
   00CD 4CrD3r00      [ 3]  177 	jmp	00107$
   00D0                     178 00106$:
   00D0 A9 00         [ 2]  179 	lda	#0x00
   00D2 AA            [ 2]  180 	tax
   00D3                     181 00107$:
   00D3 48            [ 3]  182 	pha
   00D4 8A            [ 2]  183 	txa
   00D5 BA            [ 2]  184 	tsx
   00D6 9D 03 01      [ 5]  185 	sta	0x103,x
   00D9 68            [ 4]  186 	pla
   00DA 9D 02 01      [ 5]  187 	sta	0x102,x
   00DD BD 03 01      [ 5]  188 	lda	0x103,x
   00E0 0A            [ 2]  189 	asl	a
   00E1 A9 00         [ 2]  190 	lda	#0x00
   00E3 69 FF         [ 2]  191 	adc	#0xff
   00E5 49 FF         [ 2]  192 	eor	#0xff
   00E7 9D 04 01      [ 5]  193 	sta	0x104,x
   00EA 9D 05 01      [ 5]  194 	sta	0x105,x
   00ED BD 06 01      [ 5]  195 	lda	0x106,x
   00F0 18            [ 2]  196 	clc
   00F1 7D 02 01      [ 5]  197 	adc	0x102,x
   00F4 9D 02 01      [ 5]  198 	sta	0x102,x
   00F7 BD 07 01      [ 5]  199 	lda	0x107,x
   00FA 7D 03 01      [ 5]  200 	adc	0x103,x
   00FD 9D 03 01      [ 5]  201 	sta	0x103,x
   0100 BD 08 01      [ 5]  202 	lda	0x108,x
   0103 7D 04 01      [ 5]  203 	adc	0x104,x
   0106 9D 04 01      [ 5]  204 	sta	0x104,x
   0109 BD 09 01      [ 5]  205 	lda	0x109,x
   010C 7D 05 01      [ 5]  206 	adc	0x105,x
   010F 9D 05 01      [ 5]  207 	sta	0x105, x
   0112 48            [ 3]  208 	pha
   0113 BD 04 01      [ 5]  209 	lda	0x104,x
   0116 48            [ 3]  210 	pha
   0117 BD 03 01      [ 5]  211 	lda	0x103,x
   011A 48            [ 3]  212 	pha
   011B BD 02 01      [ 5]  213 	lda	0x102,x
   011E 48            [ 3]  214 	pha
   011F 20r00r00      [ 6]  215 	jsr	___slong2fs
   0122 86*00         [ 3]  216 	stx	*(__TEMP+0)
   0124 BA            [ 2]  217 	tsx
   0125 9D 05 01      [ 5]  218 	sta	0x105,x
   0128 A6*00         [ 3]  219 	ldx	*(__TEMP+0)
   012A 8A            [ 2]  220 	txa
   012B BA            [ 2]  221 	tsx
   012C 9D 06 01      [ 5]  222 	sta	0x106,x
   012F A6*00         [ 3]  223 	ldx	*(__TEMP+0)
   0131 A5*00         [ 3]  224 	lda	*___SDCC_m6502_ret2
   0133 BA            [ 2]  225 	tsx
   0134 9D 07 01      [ 5]  226 	sta	0x107,x
   0137 A5*00         [ 3]  227 	lda	*___SDCC_m6502_ret3
   0139 9D 08 01      [ 5]  228 	sta	0x108,x
   013C 85*00         [ 3]  229 	sta	*(__TEMP+0)
   013E 68            [ 4]  230 	pla
   013F 68            [ 4]  231 	pla
   0140 68            [ 4]  232 	pla
   0141 68            [ 4]  233 	pla
   0142 BD 08 01      [ 5]  234 	lda	0x108, x
   0145 85*00         [ 3]  235 	sta	*___SDCC_m6502_ret3
   0147 BD 07 01      [ 5]  236 	lda	0x107,x
   014A 85*00         [ 3]  237 	sta	*___SDCC_m6502_ret2
   014C BD 06 01      [ 5]  238 	lda	0x106,x
   014F AA            [ 2]  239 	tax
   0150 86*00         [ 3]  240 	stx	*(__TEMP+0)
   0152 BA            [ 2]  241 	tsx
   0153 BD 01 01      [ 5]  242 	lda	0x101,x
   0156 08            [ 3]  243 	php
   0157 A6*00         [ 3]  244 	ldx	*(__TEMP+0)
   0159 28            [ 4]  245 	plp
   015A 4CrA9r01      [ 3]  246 	jmp	00104$
   015D                     247 00102$:
                            248 ;	../floorf.c: 40: return r;
   015D BA            [ 2]  249 	tsx
   015E BD 08 01      [ 5]  250 	lda	0x108,x
   0161 48            [ 3]  251 	pha
   0162 BD 07 01      [ 5]  252 	lda	0x107,x
   0165 48            [ 3]  253 	pha
   0166 BD 06 01      [ 5]  254 	lda	0x106,x
   0169 48            [ 3]  255 	pha
   016A BD 05 01      [ 5]  256 	lda	0x105,x
   016D 48            [ 3]  257 	pha
   016E 20r00r00      [ 6]  258 	jsr	___slong2fs
   0171 86*00         [ 3]  259 	stx	*(__TEMP+0)
   0173 BA            [ 2]  260 	tsx
   0174 9D 05 01      [ 5]  261 	sta	0x105,x
   0177 A6*00         [ 3]  262 	ldx	*(__TEMP+0)
   0179 8A            [ 2]  263 	txa
   017A BA            [ 2]  264 	tsx
   017B 9D 06 01      [ 5]  265 	sta	0x106,x
   017E A6*00         [ 3]  266 	ldx	*(__TEMP+0)
   0180 A5*00         [ 3]  267 	lda	*___SDCC_m6502_ret2
   0182 BA            [ 2]  268 	tsx
   0183 9D 07 01      [ 5]  269 	sta	0x107,x
   0186 A5*00         [ 3]  270 	lda	*___SDCC_m6502_ret3
   0188 9D 08 01      [ 5]  271 	sta	0x108,x
   018B 85*00         [ 3]  272 	sta	*(__TEMP+0)
   018D 68            [ 4]  273 	pla
   018E 68            [ 4]  274 	pla
   018F 68            [ 4]  275 	pla
   0190 68            [ 4]  276 	pla
   0191 BD 08 01      [ 5]  277 	lda	0x108, x
   0194 85*00         [ 3]  278 	sta	*___SDCC_m6502_ret3
   0196 BD 07 01      [ 5]  279 	lda	0x107,x
   0199 85*00         [ 3]  280 	sta	*___SDCC_m6502_ret2
   019B BD 06 01      [ 5]  281 	lda	0x106,x
   019E AA            [ 2]  282 	tax
   019F 86*00         [ 3]  283 	stx	*(__TEMP+0)
   01A1 BA            [ 2]  284 	tsx
   01A2 BD 01 01      [ 5]  285 	lda	0x101,x
   01A5 08            [ 3]  286 	php
   01A6 A6*00         [ 3]  287 	ldx	*(__TEMP+0)
   01A8 28            [ 4]  288 	plp
   01A9                     289 00104$:
                            290 ;	../floorf.c: 41: }
   01A9 85*00         [ 3]  291 	sta	*(__TEMP+0)
   01AB 86*01         [ 3]  292 	stx	*(__TEMP+1)
   01AD BA            [ 2]  293 	tsx
   01AE 8A            [ 2]  294 	txa
   01AF 18            [ 2]  295 	clc
   01B0 69 08         [ 2]  296 	adc	#0x08
   01B2 AA            [ 2]  297 	tax
   01B3 9A            [ 2]  298 	txs
   01B4 A6*01         [ 3]  299 	ldx	*(__TEMP+1)
   01B6 A5*00         [ 3]  300 	lda	*(__TEMP+0)
   01B8 60            [ 6]  301 	rts
                            302 	.area CODE
                            303 	.area RODATA
                            304 	.area XINIT
                            305 	.area CABS    (ABS)
