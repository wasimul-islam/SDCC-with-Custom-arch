                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _atof
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _atoi
                             12 	.globl _toupper
                             13 	.globl _isspace
                             14 	.globl _atof
                             15 ;--------------------------------------------------------
                             16 ; ZP ram data
                             17 ;--------------------------------------------------------
                             18 	.area ZP      (PAG)
                             19 ;--------------------------------------------------------
                             20 ; overlayable items in ram
                             21 ;--------------------------------------------------------
                             22 ;--------------------------------------------------------
                             23 ; uninitialized external ram data
                             24 ;--------------------------------------------------------
                             25 	.area BSS
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area DABS    (ABS)
                             30 ;--------------------------------------------------------
                             31 ; initialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area DATA
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 	.area GSINIT
                             39 	.area GSFINAL
                             40 	.area GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area _CODE
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area CODE
                             50 ;------------------------------------------------------------
                             51 ;Allocation info for local variables in function 'atof'
                             52 ;------------------------------------------------------------
                             53 ;s                         Allocated to registers 
                             54 ;__1310720004              Allocated to registers 
                             55 ;value                     Allocated to stack - sp +5
                             56 ;fraction                  Allocated to stack - sp +1
                             57 ;iexp                      Allocated to registers y 
                             58 ;sign                      Allocated to stack - sp +25
                             59 ;__1966080005              Allocated to registers 
                             60 ;c                         Allocated to registers 
                             61 ;__1966080007              Allocated to registers 
                             62 ;__2621440008              Allocated to registers 
                             63 ;c                         Allocated to registers 
                             64 ;sloc0                     Allocated to stack - sp +23
                             65 ;sloc1                     Allocated to stack - sp +21
                             66 ;sloc2                     Allocated to stack - sp +17
                             67 ;sloc3                     Allocated to stack - sp +13
                             68 ;sloc4                     Allocated to stack - sp +9
                             69 ;------------------------------------------------------------
                             70 ;	../_atof.c: 33: float atof(const char * s)
                             71 ;	-----------------------------------------
                             72 ;	 function atof
                             73 ;	-----------------------------------------
                             74 ;	Register assignment is optimal.
                             75 ;	Stack space usage: 25 bytes.
   0000                      76 _atof:
   0000 85*00         [ 3]   77 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   78 	stx	*(__TEMP+1)
   0004 BA            [ 2]   79 	tsx
   0005 8A            [ 2]   80 	txa
   0006 18            [ 2]   81 	clc
   0007 69 E7         [ 2]   82 	adc	#0xe7
   0009 AA            [ 2]   83 	tax
   000A 9A            [ 2]   84 	txs
   000B A6*01         [ 3]   85 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   86 	lda	*(__TEMP+0)
   000F 86*00         [ 3]   87 	stx	*(__TEMP+0)
   0011 BA            [ 2]   88 	tsx
   0012 9D 17 01      [ 5]   89 	sta	0x117,x
   0015 A6*00         [ 3]   90 	ldx	*(__TEMP+0)
   0017 8A            [ 2]   91 	txa
   0018 BA            [ 2]   92 	tsx
   0019 9D 18 01      [ 5]   93 	sta	0x118,x
   001C A6*00         [ 3]   94 	ldx	*(__TEMP+0)
                             95 ;	../_atof.c: 40: while (isspace(*s)) s++;
   001E                      96 00101$:
   001E BA            [ 2]   97 	tsx
   001F BD 17 01      [ 5]   98 	lda	0x117,x
   0022 85*00         [ 3]   99 	sta	*(__DPTR+0)
   0024 BD 18 01      [ 5]  100 	lda	0x118,x
   0027 85*01         [ 3]  101 	sta	*(__DPTR+1)
   0029 A0 00         [ 2]  102 	ldy	#0x00
   002B B1*00         [ 6]  103 	lda	[__DPTR],y
   002D A2 00         [ 2]  104 	ldx	#0x00
   002F 20r00r00      [ 6]  105 	jsr	_isspace
   0032 C9 00         [ 2]  106 	cmp	#0x00
   0034 D0 02         [ 4]  107 	bne	00220$
   0036 E0 00         [ 2]  108 	cpx	#0x00
   0038                     109 00220$:
   0038 F0 15         [ 4]  110 	beq	00155$
   003A BA            [ 2]  111 	tsx
   003B BD 17 01      [ 5]  112 	lda	0x117,x
   003E 18            [ 2]  113 	clc
   003F 69 01         [ 2]  114 	adc	#0x01
   0041 9D 17 01      [ 5]  115 	sta	0x117,x
   0044 BD 18 01      [ 5]  116 	lda	0x118,x
   0047 69 00         [ 2]  117 	adc	#0x00
   0049 9D 18 01      [ 5]  118 	sta	0x118,x
   004C 4Cr1Er00      [ 3]  119 	jmp	00101$
   004F                     120 00155$:
   004F BA            [ 2]  121 	tsx
   0050 BD 17 01      [ 5]  122 	lda	0x117,x
   0053 9D 15 01      [ 5]  123 	sta	0x115,x
   0056 BD 18 01      [ 5]  124 	lda	0x118,x
   0059 9D 16 01      [ 5]  125 	sta	0x116,x
                            126 ;	../_atof.c: 43: if (*s == '-')
   005C BD 17 01      [ 5]  127 	lda	0x117,x
   005F 85*00         [ 3]  128 	sta	*(__DPTR+0)
   0061 BD 18 01      [ 5]  129 	lda	0x118,x
   0064 85*01         [ 3]  130 	sta	*(__DPTR+1)
   0066 A0 00         [ 2]  131 	ldy	#0x00
   0068 B1*00         [ 6]  132 	lda	[__DPTR],y
   006A A8            [ 2]  133 	tay
   006B C0 2D         [ 2]  134 	cpy	#0x2d
   006D D0 19         [ 4]  135 	bne	00107$
                            136 ;	../_atof.c: 45: sign=1;
   006F A9 01         [ 2]  137 	lda	#0x01
   0071 9D 19 01      [ 5]  138 	sta	0x119,x
                            139 ;	../_atof.c: 46: s++;
   0074 BD 17 01      [ 5]  140 	lda	0x117,x
   0077 18            [ 2]  141 	clc
   0078 69 01         [ 2]  142 	adc	#0x01
   007A 9D 15 01      [ 5]  143 	sta	0x115,x
   007D BD 18 01      [ 5]  144 	lda	0x118,x
   0080 69 00         [ 2]  145 	adc	#0x00
   0082 9D 16 01      [ 5]  146 	sta	0x116,x
   0085 4CrA3r00      [ 3]  147 	jmp	00108$
   0088                     148 00107$:
                            149 ;	../_atof.c: 50: sign=0;
   0088 BA            [ 2]  150 	tsx
   0089 A9 00         [ 2]  151 	lda	#0x00
   008B 9D 19 01      [ 5]  152 	sta	0x119,x
                            153 ;	../_atof.c: 51: if (*s == '+') s++;
   008E C0 2B         [ 2]  154 	cpy	#0x2b
   0090 D0 11         [ 4]  155 	bne	00108$
   0092 BD 17 01      [ 5]  156 	lda	0x117,x
   0095 18            [ 2]  157 	clc
   0096 69 01         [ 2]  158 	adc	#0x01
   0098 9D 15 01      [ 5]  159 	sta	0x115,x
   009B BD 18 01      [ 5]  160 	lda	0x118,x
   009E 69 00         [ 2]  161 	adc	#0x00
   00A0 9D 16 01      [ 5]  162 	sta	0x116,x
   00A3                     163 00108$:
                            164 ;	../_atof.c: 55: for (value=0.0; isdigit(*s); s++)
   00A3 BA            [ 2]  165 	tsx
   00A4 A9 00         [ 2]  166 	lda	#0x00
   00A6 9D 05 01      [ 5]  167 	sta	0x105,x
   00A9 9D 06 01      [ 5]  168 	sta	0x106,x
   00AC 9D 07 01      [ 5]  169 	sta	0x107,x
   00AF 9D 08 01      [ 5]  170 	sta	0x108,x
   00B2                     171 00126$:
   00B2 BA            [ 2]  172 	tsx
   00B3 BD 15 01      [ 5]  173 	lda	0x115,x
   00B6 85*00         [ 3]  174 	sta	*(__DPTR+0)
   00B8 BD 16 01      [ 5]  175 	lda	0x116,x
   00BB 85*01         [ 3]  176 	sta	*(__DPTR+1)
   00BD A0 00         [ 2]  177 	ldy	#0x00
   00BF B1*00         [ 6]  178 	lda	[__DPTR],y
                            179 ;	./../../include/ctype.h: 62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   00C1 C9 30         [ 2]  180 	cmp	#0x30
   00C3 B0 03         [ 4]  181 	bcs	00224$
   00C5 4CrA8r01      [ 3]  182 	jmp	00156$
   00C8                     183 00224$:
   00C8 C9 39         [ 2]  184 	cmp	#0x39
   00CA F0 05         [ 4]  185 	beq	00225$
   00CC 90 03         [ 4]  186 	bcc	00225$
   00CE 4CrA8r01      [ 3]  187 	jmp	00156$
   00D1                     188 00225$:
                            189 ;	../_atof.c: 57: value=10.0*value+(*s-'0');
   00D1 BD 08 01      [ 5]  190 	lda	0x108,x
   00D4 48            [ 3]  191 	pha
   00D5 BD 07 01      [ 5]  192 	lda	0x107,x
   00D8 48            [ 3]  193 	pha
   00D9 BD 06 01      [ 5]  194 	lda	0x106,x
   00DC 48            [ 3]  195 	pha
   00DD BD 05 01      [ 5]  196 	lda	0x105,x
   00E0 48            [ 3]  197 	pha
   00E1 A9 41         [ 2]  198 	lda	#0x41
   00E3 48            [ 3]  199 	pha
   00E4 A9 20         [ 2]  200 	lda	#0x20
   00E6 48            [ 3]  201 	pha
   00E7 98            [ 2]  202 	tya
   00E8 48            [ 3]  203 	pha
   00E9 48            [ 3]  204 	pha
   00EA 20r00r00      [ 6]  205 	jsr	___fsmul
   00ED 86*00         [ 3]  206 	stx	*(__TEMP+0)
   00EF BA            [ 2]  207 	tsx
   00F0 9D 19 01      [ 5]  208 	sta	0x119,x
   00F3 A6*00         [ 3]  209 	ldx	*(__TEMP+0)
   00F5 8A            [ 2]  210 	txa
   00F6 BA            [ 2]  211 	tsx
   00F7 9D 1A 01      [ 5]  212 	sta	0x11a,x
   00FA A6*00         [ 3]  213 	ldx	*(__TEMP+0)
   00FC A5*00         [ 3]  214 	lda	*___SDCC_m6502_ret2
   00FE BA            [ 2]  215 	tsx
   00FF 9D 1B 01      [ 5]  216 	sta	0x11b,x
   0102 A5*00         [ 3]  217 	lda	*___SDCC_m6502_ret3
   0104 9D 1C 01      [ 5]  218 	sta	0x11c,x
   0107 85*00         [ 3]  219 	sta	*(__TEMP+0)
   0109 86*01         [ 3]  220 	stx	*(__TEMP+1)
   010B BA            [ 2]  221 	tsx
   010C 8A            [ 2]  222 	txa
   010D 18            [ 2]  223 	clc
   010E 69 08         [ 2]  224 	adc	#0x08
   0110 AA            [ 2]  225 	tax
   0111 9A            [ 2]  226 	txs
   0112 A6*01         [ 3]  227 	ldx	*(__TEMP+1)
   0114 A5*00         [ 3]  228 	lda	*(__TEMP+0)
   0116 BA            [ 2]  229 	tsx
   0117 BD 15 01      [ 5]  230 	lda	0x115,x
   011A 85*00         [ 3]  231 	sta	*(__DPTR+0)
   011C BD 16 01      [ 5]  232 	lda	0x116,x
   011F 85*01         [ 3]  233 	sta	*(__DPTR+1)
   0121 A0 00         [ 2]  234 	ldy	#0x00
   0123 B1*00         [ 6]  235 	lda	[__DPTR],y
   0125 A2 00         [ 2]  236 	ldx	#0x00
   0127 38            [ 2]  237 	sec
   0128 E9 30         [ 2]  238 	sbc	#0x30
   012A B0 01         [ 4]  239 	bcs	00227$
   012C CA            [ 2]  240 	dex
   012D                     241 00227$:
   012D 20r00r00      [ 6]  242 	jsr	___sint2fs
   0130 86*00         [ 3]  243 	stx	*(__TEMP+0)
   0132 BA            [ 2]  244 	tsx
   0133 9D 0D 01      [ 5]  245 	sta	0x10d,x
   0136 A6*00         [ 3]  246 	ldx	*(__TEMP+0)
   0138 8A            [ 2]  247 	txa
   0139 BA            [ 2]  248 	tsx
   013A 9D 0E 01      [ 5]  249 	sta	0x10e,x
   013D A6*00         [ 3]  250 	ldx	*(__TEMP+0)
   013F A5*00         [ 3]  251 	lda	*___SDCC_m6502_ret2
   0141 BA            [ 2]  252 	tsx
   0142 9D 0F 01      [ 5]  253 	sta	0x10f,x
   0145 A5*00         [ 3]  254 	lda	*___SDCC_m6502_ret3
   0147 9D 10 01      [ 5]  255 	sta	0x110, x
   014A 48            [ 3]  256 	pha
   014B BD 0F 01      [ 5]  257 	lda	0x10f,x
   014E 48            [ 3]  258 	pha
   014F BD 0E 01      [ 5]  259 	lda	0x10e,x
   0152 48            [ 3]  260 	pha
   0153 BD 0D 01      [ 5]  261 	lda	0x10d,x
   0156 48            [ 3]  262 	pha
   0157 BD 14 01      [ 5]  263 	lda	0x114,x
   015A 48            [ 3]  264 	pha
   015B BD 13 01      [ 5]  265 	lda	0x113,x
   015E 48            [ 3]  266 	pha
   015F BD 12 01      [ 5]  267 	lda	0x112,x
   0162 48            [ 3]  268 	pha
   0163 BD 11 01      [ 5]  269 	lda	0x111,x
   0166 48            [ 3]  270 	pha
   0167 20r00r00      [ 6]  271 	jsr	___fsadd
   016A 86*00         [ 3]  272 	stx	*(__TEMP+0)
   016C BA            [ 2]  273 	tsx
   016D 9D 0D 01      [ 5]  274 	sta	0x10d,x
   0170 A6*00         [ 3]  275 	ldx	*(__TEMP+0)
   0172 8A            [ 2]  276 	txa
   0173 BA            [ 2]  277 	tsx
   0174 9D 0E 01      [ 5]  278 	sta	0x10e,x
   0177 A6*00         [ 3]  279 	ldx	*(__TEMP+0)
   0179 A5*00         [ 3]  280 	lda	*___SDCC_m6502_ret2
   017B BA            [ 2]  281 	tsx
   017C 9D 0F 01      [ 5]  282 	sta	0x10f,x
   017F A5*00         [ 3]  283 	lda	*___SDCC_m6502_ret3
   0181 9D 10 01      [ 5]  284 	sta	0x110,x
   0184 85*00         [ 3]  285 	sta	*(__TEMP+0)
   0186 86*01         [ 3]  286 	stx	*(__TEMP+1)
   0188 BA            [ 2]  287 	tsx
   0189 8A            [ 2]  288 	txa
   018A 18            [ 2]  289 	clc
   018B 69 08         [ 2]  290 	adc	#0x08
   018D AA            [ 2]  291 	tax
   018E 9A            [ 2]  292 	txs
   018F A6*01         [ 3]  293 	ldx	*(__TEMP+1)
   0191 A5*00         [ 3]  294 	lda	*(__TEMP+0)
                            295 ;	../_atof.c: 55: for (value=0.0; isdigit(*s); s++)
   0193 BA            [ 2]  296 	tsx
   0194 BD 15 01      [ 5]  297 	lda	0x115,x
   0197 18            [ 2]  298 	clc
   0198 69 01         [ 2]  299 	adc	#0x01
   019A 9D 15 01      [ 5]  300 	sta	0x115,x
   019D BD 16 01      [ 5]  301 	lda	0x116,x
   01A0 69 00         [ 2]  302 	adc	#0x00
   01A2 9D 16 01      [ 5]  303 	sta	0x116,x
   01A5 4CrB2r00      [ 3]  304 	jmp	00126$
   01A8                     305 00156$:
   01A8 BA            [ 2]  306 	tsx
   01A9 BD 15 01      [ 5]  307 	lda	0x115,x
   01AC 9D 0D 01      [ 5]  308 	sta	0x10d,x
   01AF BD 16 01      [ 5]  309 	lda	0x116,x
   01B2 9D 0E 01      [ 5]  310 	sta	0x10e,x
                            311 ;	../_atof.c: 61: if (*s == '.')
   01B5 BD 15 01      [ 5]  312 	lda	0x115,x
   01B8 85*00         [ 3]  313 	sta	*(__DPTR+0)
   01BA BD 16 01      [ 5]  314 	lda	0x116,x
   01BD 85*01         [ 3]  315 	sta	*(__DPTR+1)
   01BF A0 00         [ 2]  316 	ldy	#0x00
   01C1 B1*00         [ 6]  317 	lda	[__DPTR],y
   01C3 C9 2E         [ 2]  318 	cmp	#0x2e
   01C5 F0 03         [ 4]  319 	beq	00228$
   01C7 4Cr3Fr03      [ 3]  320 	jmp	00112$
   01CA                     321 00228$:
                            322 ;	../_atof.c: 63: s++;
   01CA BD 15 01      [ 5]  323 	lda	0x115,x
   01CD 18            [ 2]  324 	clc
   01CE 69 01         [ 2]  325 	adc	#0x01
   01D0 9D 11 01      [ 5]  326 	sta	0x111,x
   01D3 BD 16 01      [ 5]  327 	lda	0x116,x
   01D6 69 00         [ 2]  328 	adc	#0x00
   01D8 9D 12 01      [ 5]  329 	sta	0x112,x
                            330 ;	../_atof.c: 64: for (fraction=0.1; isdigit(*s); s++)
   01DB A9 CD         [ 2]  331 	lda	#0xcd
   01DD 9D 01 01      [ 5]  332 	sta	0x101,x
   01E0 A9 CC         [ 2]  333 	lda	#0xcc
   01E2 9D 02 01      [ 5]  334 	sta	0x102,x
   01E5 9D 03 01      [ 5]  335 	sta	0x103,x
   01E8 A9 3D         [ 2]  336 	lda	#0x3d
   01EA 9D 04 01      [ 5]  337 	sta	0x104,x
   01ED                     338 00129$:
   01ED BA            [ 2]  339 	tsx
   01EE BD 11 01      [ 5]  340 	lda	0x111,x
   01F1 85*00         [ 3]  341 	sta	*(__DPTR+0)
   01F3 BD 12 01      [ 5]  342 	lda	0x112,x
   01F6 85*01         [ 3]  343 	sta	*(__DPTR+1)
   01F8 A0 00         [ 2]  344 	ldy	#0x00
   01FA B1*00         [ 6]  345 	lda	[__DPTR],y
                            346 ;	./../../include/ctype.h: 62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   01FC C9 30         [ 2]  347 	cmp	#0x30
   01FE B0 03         [ 4]  348 	bcs	00229$
   0200 4Cr32r03      [ 3]  349 	jmp	00157$
   0203                     350 00229$:
   0203 C9 39         [ 2]  351 	cmp	#0x39
   0205 F0 05         [ 4]  352 	beq	00230$
   0207 90 03         [ 4]  353 	bcc	00230$
   0209 4Cr32r03      [ 3]  354 	jmp	00157$
   020C                     355 00230$:
                            356 ;	../_atof.c: 66: value+=(*s-'0')*fraction;
   020C BD 11 01      [ 5]  357 	lda	0x111,x
   020F 85*00         [ 3]  358 	sta	*(__DPTR+0)
   0211 BD 12 01      [ 5]  359 	lda	0x112,x
   0214 85*01         [ 3]  360 	sta	*(__DPTR+1)
   0216 B1*00         [ 6]  361 	lda	[__DPTR],y
   0218 A2 00         [ 2]  362 	ldx	#0x00
   021A 38            [ 2]  363 	sec
   021B E9 30         [ 2]  364 	sbc	#0x30
   021D B0 01         [ 4]  365 	bcs	00232$
   021F CA            [ 2]  366 	dex
   0220                     367 00232$:
   0220 20r00r00      [ 6]  368 	jsr	___sint2fs
   0223 86*00         [ 3]  369 	stx	*(__TEMP+0)
   0225 BA            [ 2]  370 	tsx
   0226 9D 09 01      [ 5]  371 	sta	0x109,x
   0229 A6*00         [ 3]  372 	ldx	*(__TEMP+0)
   022B 8A            [ 2]  373 	txa
   022C BA            [ 2]  374 	tsx
   022D 9D 0A 01      [ 5]  375 	sta	0x10a,x
   0230 A6*00         [ 3]  376 	ldx	*(__TEMP+0)
   0232 A5*00         [ 3]  377 	lda	*___SDCC_m6502_ret2
   0234 BA            [ 2]  378 	tsx
   0235 9D 0B 01      [ 5]  379 	sta	0x10b,x
   0238 A5*00         [ 3]  380 	lda	*___SDCC_m6502_ret3
   023A 9D 0C 01      [ 5]  381 	sta	0x10c,x
   023D BD 04 01      [ 5]  382 	lda	0x104,x
   0240 48            [ 3]  383 	pha
   0241 BD 03 01      [ 5]  384 	lda	0x103,x
   0244 48            [ 3]  385 	pha
   0245 BD 02 01      [ 5]  386 	lda	0x102,x
   0248 48            [ 3]  387 	pha
   0249 BD 01 01      [ 5]  388 	lda	0x101,x
   024C 48            [ 3]  389 	pha
   024D BD 0C 01      [ 5]  390 	lda	0x10c,x
   0250 48            [ 3]  391 	pha
   0251 BD 0B 01      [ 5]  392 	lda	0x10b,x
   0254 48            [ 3]  393 	pha
   0255 BD 0A 01      [ 5]  394 	lda	0x10a,x
   0258 48            [ 3]  395 	pha
   0259 BD 09 01      [ 5]  396 	lda	0x109,x
   025C 48            [ 3]  397 	pha
   025D 20r00r00      [ 6]  398 	jsr	___fsmul
   0260 86*00         [ 3]  399 	stx	*(__TEMP+0)
   0262 BA            [ 2]  400 	tsx
   0263 9D 11 01      [ 5]  401 	sta	0x111,x
   0266 A6*00         [ 3]  402 	ldx	*(__TEMP+0)
   0268 8A            [ 2]  403 	txa
   0269 BA            [ 2]  404 	tsx
   026A 9D 12 01      [ 5]  405 	sta	0x112,x
   026D A6*00         [ 3]  406 	ldx	*(__TEMP+0)
   026F A5*00         [ 3]  407 	lda	*___SDCC_m6502_ret2
   0271 BA            [ 2]  408 	tsx
   0272 9D 13 01      [ 5]  409 	sta	0x113,x
   0275 A5*00         [ 3]  410 	lda	*___SDCC_m6502_ret3
   0277 9D 14 01      [ 5]  411 	sta	0x114,x
   027A 85*00         [ 3]  412 	sta	*(__TEMP+0)
   027C 86*01         [ 3]  413 	stx	*(__TEMP+1)
   027E BA            [ 2]  414 	tsx
   027F 8A            [ 2]  415 	txa
   0280 18            [ 2]  416 	clc
   0281 69 08         [ 2]  417 	adc	#0x08
   0283 AA            [ 2]  418 	tax
   0284 9A            [ 2]  419 	txs
   0285 A6*01         [ 3]  420 	ldx	*(__TEMP+1)
   0287 A5*00         [ 3]  421 	lda	*(__TEMP+0)
   0289 BA            [ 2]  422 	tsx
   028A BD 0C 01      [ 5]  423 	lda	0x10c,x
   028D 48            [ 3]  424 	pha
   028E BD 0B 01      [ 5]  425 	lda	0x10b,x
   0291 48            [ 3]  426 	pha
   0292 BD 0A 01      [ 5]  427 	lda	0x10a,x
   0295 48            [ 3]  428 	pha
   0296 BD 09 01      [ 5]  429 	lda	0x109,x
   0299 48            [ 3]  430 	pha
   029A BD 08 01      [ 5]  431 	lda	0x108,x
   029D 48            [ 3]  432 	pha
   029E BD 07 01      [ 5]  433 	lda	0x107,x
   02A1 48            [ 3]  434 	pha
   02A2 BD 06 01      [ 5]  435 	lda	0x106,x
   02A5 48            [ 3]  436 	pha
   02A6 BD 05 01      [ 5]  437 	lda	0x105,x
   02A9 48            [ 3]  438 	pha
   02AA 20r00r00      [ 6]  439 	jsr	___fsadd
   02AD 86*00         [ 3]  440 	stx	*(__TEMP+0)
   02AF BA            [ 2]  441 	tsx
   02B0 9D 0D 01      [ 5]  442 	sta	0x10d,x
   02B3 A6*00         [ 3]  443 	ldx	*(__TEMP+0)
   02B5 8A            [ 2]  444 	txa
   02B6 BA            [ 2]  445 	tsx
   02B7 9D 0E 01      [ 5]  446 	sta	0x10e,x
   02BA A6*00         [ 3]  447 	ldx	*(__TEMP+0)
   02BC A5*00         [ 3]  448 	lda	*___SDCC_m6502_ret2
   02BE BA            [ 2]  449 	tsx
   02BF 9D 0F 01      [ 5]  450 	sta	0x10f,x
   02C2 A5*00         [ 3]  451 	lda	*___SDCC_m6502_ret3
   02C4 9D 10 01      [ 5]  452 	sta	0x110,x
   02C7 85*00         [ 3]  453 	sta	*(__TEMP+0)
   02C9 86*01         [ 3]  454 	stx	*(__TEMP+1)
   02CB BA            [ 2]  455 	tsx
   02CC 8A            [ 2]  456 	txa
   02CD 18            [ 2]  457 	clc
   02CE 69 08         [ 2]  458 	adc	#0x08
   02D0 AA            [ 2]  459 	tax
   02D1 9A            [ 2]  460 	txs
   02D2 A6*01         [ 3]  461 	ldx	*(__TEMP+1)
   02D4 A5*00         [ 3]  462 	lda	*(__TEMP+0)
                            463 ;	../_atof.c: 67: fraction*=0.1;
   02D6 BA            [ 2]  464 	tsx
   02D7 BD 04 01      [ 5]  465 	lda	0x104,x
   02DA 48            [ 3]  466 	pha
   02DB BD 03 01      [ 5]  467 	lda	0x103,x
   02DE 48            [ 3]  468 	pha
   02DF BD 02 01      [ 5]  469 	lda	0x102,x
   02E2 48            [ 3]  470 	pha
   02E3 BD 01 01      [ 5]  471 	lda	0x101,x
   02E6 48            [ 3]  472 	pha
   02E7 A9 3D         [ 2]  473 	lda	#0x3d
   02E9 48            [ 3]  474 	pha
   02EA A9 CC         [ 2]  475 	lda	#0xcc
   02EC 48            [ 3]  476 	pha
   02ED 48            [ 3]  477 	pha
   02EE A9 CD         [ 2]  478 	lda	#0xcd
   02F0 48            [ 3]  479 	pha
   02F1 20r00r00      [ 6]  480 	jsr	___fsmul
   02F4 86*00         [ 3]  481 	stx	*(__TEMP+0)
   02F6 BA            [ 2]  482 	tsx
   02F7 9D 09 01      [ 5]  483 	sta	0x109,x
   02FA A6*00         [ 3]  484 	ldx	*(__TEMP+0)
   02FC 8A            [ 2]  485 	txa
   02FD BA            [ 2]  486 	tsx
   02FE 9D 0A 01      [ 5]  487 	sta	0x10a,x
   0301 A6*00         [ 3]  488 	ldx	*(__TEMP+0)
   0303 A5*00         [ 3]  489 	lda	*___SDCC_m6502_ret2
   0305 BA            [ 2]  490 	tsx
   0306 9D 0B 01      [ 5]  491 	sta	0x10b,x
   0309 A5*00         [ 3]  492 	lda	*___SDCC_m6502_ret3
   030B 9D 0C 01      [ 5]  493 	sta	0x10c,x
   030E 85*00         [ 3]  494 	sta	*(__TEMP+0)
   0310 86*01         [ 3]  495 	stx	*(__TEMP+1)
   0312 BA            [ 2]  496 	tsx
   0313 8A            [ 2]  497 	txa
   0314 18            [ 2]  498 	clc
   0315 69 08         [ 2]  499 	adc	#0x08
   0317 AA            [ 2]  500 	tax
   0318 9A            [ 2]  501 	txs
   0319 A6*01         [ 3]  502 	ldx	*(__TEMP+1)
   031B A5*00         [ 3]  503 	lda	*(__TEMP+0)
                            504 ;	../_atof.c: 64: for (fraction=0.1; isdigit(*s); s++)
   031D BA            [ 2]  505 	tsx
   031E BD 11 01      [ 5]  506 	lda	0x111,x
   0321 18            [ 2]  507 	clc
   0322 69 01         [ 2]  508 	adc	#0x01
   0324 9D 11 01      [ 5]  509 	sta	0x111,x
   0327 BD 12 01      [ 5]  510 	lda	0x112,x
   032A 69 00         [ 2]  511 	adc	#0x00
   032C 9D 12 01      [ 5]  512 	sta	0x112,x
   032F 4CrEDr01      [ 3]  513 	jmp	00129$
   0332                     514 00157$:
   0332 BA            [ 2]  515 	tsx
   0333 BD 11 01      [ 5]  516 	lda	0x111,x
   0336 9D 0D 01      [ 5]  517 	sta	0x10d,x
   0339 BD 12 01      [ 5]  518 	lda	0x112,x
   033C 9D 0E 01      [ 5]  519 	sta	0x10e,x
   033F                     520 00112$:
                            521 ;	../_atof.c: 72: if (toupper(*s)=='E')
   033F BA            [ 2]  522 	tsx
   0340 BD 0D 01      [ 5]  523 	lda	0x10d,x
   0343 85*00         [ 3]  524 	sta	*(__DPTR+0)
   0345 BD 0E 01      [ 5]  525 	lda	0x10e,x
   0348 85*01         [ 3]  526 	sta	*(__DPTR+1)
   034A A0 00         [ 2]  527 	ldy	#0x00
   034C B1*00         [ 6]  528 	lda	[__DPTR],y
   034E A2 00         [ 2]  529 	ldx	#0x00
   0350 20r00r00      [ 6]  530 	jsr	_toupper
   0353 C9 45         [ 2]  531 	cmp	#0x45
   0355 D0 04         [ 4]  532 	bne	00234$
   0357 E0 00         [ 2]  533 	cpx	#0x00
   0359 F0 03         [ 4]  534 	beq	00235$
   035B                     535 00234$:
   035B 4Cr2Dr04      [ 3]  536 	jmp	00120$
   035E                     537 00235$:
                            538 ;	../_atof.c: 74: s++;
   035E BA            [ 2]  539 	tsx
   035F BD 0D 01      [ 5]  540 	lda	0x10d,x
   0362 85*00         [ 3]  541 	sta	*(__TEMP+0)
   0364 BD 0E 01      [ 5]  542 	lda	0x10e,x
   0367 AA            [ 2]  543 	tax
   0368 A5*00         [ 3]  544 	lda	*(__TEMP+0)
   036A 18            [ 2]  545 	clc
   036B 69 01         [ 2]  546 	adc	#0x01
   036D 90 01         [ 4]  547 	bcc	00236$
   036F E8            [ 2]  548 	inx
   0370                     549 00236$:
                            550 ;	../_atof.c: 75: iexp=(signed char)atoi(s);
   0370 20r00r00      [ 6]  551 	jsr	_atoi
   0373 A8            [ 2]  552 	tay
                            553 ;	../_atof.c: 77: while(iexp!=0)
   0374                     554 00116$:
   0374 C0 00         [ 2]  555 	cpy	#0x00
   0376 D0 03         [ 4]  556 	bne	00237$
   0378 4Cr2Dr04      [ 3]  557 	jmp	00120$
   037B                     558 00237$:
                            559 ;	../_atof.c: 79: if(iexp<0)
   037B 98            [ 2]  560 	tya
   037C 38            [ 2]  561 	sec
   037D E9 00         [ 2]  562 	sbc	#0x00
   037F 50 04         [ 4]  563 	bvc	00239$
   0381 10 04         [ 4]  564 	bpl	00238$
   0383 30 55         [ 4]  565 	bmi	00114$
   0385                     566 00239$:
   0385 10 53         [ 4]  567 	bpl	00114$
   0387                     568 00238$:
                            569 ;	../_atof.c: 81: value*=0.1;
   0387 85*00         [ 3]  570 	sta	*(__TEMP+0)
   0389 98            [ 2]  571 	tya
   038A 48            [ 3]  572 	pha
   038B A5*00         [ 3]  573 	lda	*(__TEMP+0)
   038D BA            [ 2]  574 	tsx
   038E BD 09 01      [ 5]  575 	lda	0x109,x
   0391 48            [ 3]  576 	pha
   0392 BD 08 01      [ 5]  577 	lda	0x108,x
   0395 48            [ 3]  578 	pha
   0396 BD 07 01      [ 5]  579 	lda	0x107,x
   0399 48            [ 3]  580 	pha
   039A BD 06 01      [ 5]  581 	lda	0x106,x
   039D 48            [ 3]  582 	pha
   039E A9 3D         [ 2]  583 	lda	#0x3d
   03A0 48            [ 3]  584 	pha
   03A1 A9 CC         [ 2]  585 	lda	#0xcc
   03A3 48            [ 3]  586 	pha
   03A4 48            [ 3]  587 	pha
   03A5 A9 CD         [ 2]  588 	lda	#0xcd
   03A7 48            [ 3]  589 	pha
   03A8 20r00r00      [ 6]  590 	jsr	___fsmul
   03AB 86*00         [ 3]  591 	stx	*(__TEMP+0)
   03AD BA            [ 2]  592 	tsx
   03AE 9D 0E 01      [ 5]  593 	sta	0x10e,x
   03B1 A6*00         [ 3]  594 	ldx	*(__TEMP+0)
   03B3 8A            [ 2]  595 	txa
   03B4 BA            [ 2]  596 	tsx
   03B5 9D 0F 01      [ 5]  597 	sta	0x10f,x
   03B8 A6*00         [ 3]  598 	ldx	*(__TEMP+0)
   03BA A5*00         [ 3]  599 	lda	*___SDCC_m6502_ret2
   03BC BA            [ 2]  600 	tsx
   03BD 9D 10 01      [ 5]  601 	sta	0x110,x
   03C0 A5*00         [ 3]  602 	lda	*___SDCC_m6502_ret3
   03C2 9D 11 01      [ 5]  603 	sta	0x111,x
   03C5 85*00         [ 3]  604 	sta	*(__TEMP+0)
   03C7 86*01         [ 3]  605 	stx	*(__TEMP+1)
   03C9 BA            [ 2]  606 	tsx
   03CA 8A            [ 2]  607 	txa
   03CB 18            [ 2]  608 	clc
   03CC 69 08         [ 2]  609 	adc	#0x08
   03CE AA            [ 2]  610 	tax
   03CF 9A            [ 2]  611 	txs
   03D0 A6*01         [ 3]  612 	ldx	*(__TEMP+1)
   03D2 68            [ 4]  613 	pla
   03D3 A8            [ 2]  614 	tay
   03D4 A5*00         [ 3]  615 	lda	*(__TEMP+0)
                            616 ;	../_atof.c: 82: iexp++;
   03D6 C8            [ 2]  617 	iny
   03D7 4Cr74r03      [ 3]  618 	jmp	00116$
   03DA                     619 00114$:
                            620 ;	../_atof.c: 86: value*=10.0;
   03DA 85*00         [ 3]  621 	sta	*(__TEMP+0)
   03DC 98            [ 2]  622 	tya
   03DD 48            [ 3]  623 	pha
   03DE A5*00         [ 3]  624 	lda	*(__TEMP+0)
   03E0 BA            [ 2]  625 	tsx
   03E1 BD 09 01      [ 5]  626 	lda	0x109,x
   03E4 48            [ 3]  627 	pha
   03E5 BD 08 01      [ 5]  628 	lda	0x108,x
   03E8 48            [ 3]  629 	pha
   03E9 BD 07 01      [ 5]  630 	lda	0x107,x
   03EC 48            [ 3]  631 	pha
   03ED BD 06 01      [ 5]  632 	lda	0x106,x
   03F0 48            [ 3]  633 	pha
   03F1 A9 41         [ 2]  634 	lda	#0x41
   03F3 48            [ 3]  635 	pha
   03F4 A9 20         [ 2]  636 	lda	#0x20
   03F6 48            [ 3]  637 	pha
   03F7 A9 00         [ 2]  638 	lda	#0x00
   03F9 48            [ 3]  639 	pha
   03FA 48            [ 3]  640 	pha
   03FB 20r00r00      [ 6]  641 	jsr	___fsmul
   03FE 86*00         [ 3]  642 	stx	*(__TEMP+0)
   0400 BA            [ 2]  643 	tsx
   0401 9D 0E 01      [ 5]  644 	sta	0x10e,x
   0404 A6*00         [ 3]  645 	ldx	*(__TEMP+0)
   0406 8A            [ 2]  646 	txa
   0407 BA            [ 2]  647 	tsx
   0408 9D 0F 01      [ 5]  648 	sta	0x10f,x
   040B A6*00         [ 3]  649 	ldx	*(__TEMP+0)
   040D A5*00         [ 3]  650 	lda	*___SDCC_m6502_ret2
   040F BA            [ 2]  651 	tsx
   0410 9D 10 01      [ 5]  652 	sta	0x110,x
   0413 A5*00         [ 3]  653 	lda	*___SDCC_m6502_ret3
   0415 9D 11 01      [ 5]  654 	sta	0x111,x
   0418 85*00         [ 3]  655 	sta	*(__TEMP+0)
   041A 86*01         [ 3]  656 	stx	*(__TEMP+1)
   041C BA            [ 2]  657 	tsx
   041D 8A            [ 2]  658 	txa
   041E 18            [ 2]  659 	clc
   041F 69 08         [ 2]  660 	adc	#0x08
   0421 AA            [ 2]  661 	tax
   0422 9A            [ 2]  662 	txs
   0423 A6*01         [ 3]  663 	ldx	*(__TEMP+1)
   0425 68            [ 4]  664 	pla
   0426 A8            [ 2]  665 	tay
   0427 A5*00         [ 3]  666 	lda	*(__TEMP+0)
                            667 ;	../_atof.c: 87: iexp--;
   0429 88            [ 2]  668 	dey
   042A 4Cr74r03      [ 3]  669 	jmp	00116$
   042D                     670 00120$:
                            671 ;	../_atof.c: 93: if(sign) value*=-1.0;
   042D BA            [ 2]  672 	tsx
   042E BD 19 01      [ 5]  673 	lda	0x119,x
   0431 F0 08         [ 4]  674 	beq	00122$
   0433 BD 08 01      [ 5]  675 	lda	0x108,x
   0436 49 80         [ 2]  676 	eor	#0x80
   0438 9D 08 01      [ 5]  677 	sta	0x108,x
   043B                     678 00122$:
                            679 ;	../_atof.c: 94: return (value);
   043B BA            [ 2]  680 	tsx
   043C BD 08 01      [ 5]  681 	lda	0x108,x
   043F 85*00         [ 3]  682 	sta	*___SDCC_m6502_ret3
   0441 BD 07 01      [ 5]  683 	lda	0x107,x
   0444 85*00         [ 3]  684 	sta	*___SDCC_m6502_ret2
   0446 BD 06 01      [ 5]  685 	lda	0x106,x
   0449 AA            [ 2]  686 	tax
   044A 86*00         [ 3]  687 	stx	*(__TEMP+0)
   044C BA            [ 2]  688 	tsx
   044D BD 05 01      [ 5]  689 	lda	0x105,x
   0450 08            [ 3]  690 	php
   0451 A6*00         [ 3]  691 	ldx	*(__TEMP+0)
   0453 28            [ 4]  692 	plp
                            693 ;	../_atof.c: 95: }
   0454 85*00         [ 3]  694 	sta	*(__TEMP+0)
   0456 86*01         [ 3]  695 	stx	*(__TEMP+1)
   0458 BA            [ 2]  696 	tsx
   0459 8A            [ 2]  697 	txa
   045A 18            [ 2]  698 	clc
   045B 69 19         [ 2]  699 	adc	#0x19
   045D AA            [ 2]  700 	tax
   045E 9A            [ 2]  701 	txs
   045F A6*01         [ 3]  702 	ldx	*(__TEMP+1)
   0461 A5*00         [ 3]  703 	lda	*(__TEMP+0)
   0463 60            [ 6]  704 	rts
                            705 	.area CODE
                            706 	.area RODATA
                            707 	.area XINIT
                            708 	.area CABS    (ABS)
