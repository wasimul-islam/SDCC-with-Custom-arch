                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _mullonglong
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __mullonglong
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '_mullonglong'
                             49 ;------------------------------------------------------------
                             50 ;ll                        Allocated to stack - sp +24
                             51 ;lr                        Allocated to stack - sp +32
                             52 ;ret                       Allocated to stack - sp +1
                             53 ;i                         Allocated to stack - sp +21
                             54 ;j                         Allocated to stack - sp +20
                             55 ;l                         Allocated to stack - sp +19
                             56 ;r                         Allocated to registers a 
                             57 ;sloc0                     Allocated to stack - sp +11
                             58 ;sloc1                     Allocated to stack - sp +9
                             59 ;------------------------------------------------------------
                             60 ;	../_mullonglong.c: 39: long long _mullonglong(long long ll, long long lr) __SDCC_NONBANKED
                             61 ;	-----------------------------------------
                             62 ;	 function _mullonglong
                             63 ;	-----------------------------------------
                             64 ;	Register assignment is optimal.
                             65 ;	Stack space usage: 21 bytes.
   0000                      66 __mullonglong:
   0000 85*00         [ 3]   67 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   68 	stx	*(__TEMP+1)
   0004 BA            [ 2]   69 	tsx
   0005 8A            [ 2]   70 	txa
   0006 18            [ 2]   71 	clc
   0007 69 EB         [ 2]   72 	adc	#0xeb
   0009 AA            [ 2]   73 	tax
   000A 9A            [ 2]   74 	txs
                             75 ;	../_mullonglong.c: 41: unsigned long long ret = 0ull;
   000B BA            [ 2]   76 	tsx
   000C A9 00         [ 2]   77 	lda	#0x00
   000E 9D 01 01      [ 5]   78 	sta	0x101,x
   0011 9D 02 01      [ 5]   79 	sta	0x102,x
   0014 9D 03 01      [ 5]   80 	sta	0x103,x
   0017 9D 04 01      [ 5]   81 	sta	0x104,x
   001A 9D 05 01      [ 5]   82 	sta	0x105,x
   001D 9D 06 01      [ 5]   83 	sta	0x106,x
   0020 9D 07 01      [ 5]   84 	sta	0x107,x
   0023 9D 08 01      [ 5]   85 	sta	0x108,x
                             86 ;	../_mullonglong.c: 44: for (i = 0; i < sizeof (long long); i++)
   0026 9D 15 01      [ 5]   87 	sta	0x115,x
   0029                      88 00106$:
                             89 ;	../_mullonglong.c: 46: unsigned char l = ll >> (i * 8);
   0029 BA            [ 2]   90 	tsx
   002A BD 15 01      [ 5]   91 	lda	0x115,x
   002D 0A            [ 2]   92 	asl	a
   002E 0A            [ 2]   93 	asl	a
   002F 0A            [ 2]   94 	asl	a
   0030 48            [ 3]   95 	pha
   0031 BD 1F 01      [ 5]   96 	lda	0x11f,x
   0034 48            [ 3]   97 	pha
   0035 BD 1E 01      [ 5]   98 	lda	0x11e,x
   0038 48            [ 3]   99 	pha
   0039 BD 1D 01      [ 5]  100 	lda	0x11d,x
   003C 48            [ 3]  101 	pha
   003D BD 1C 01      [ 5]  102 	lda	0x11c,x
   0040 48            [ 3]  103 	pha
   0041 BD 1B 01      [ 5]  104 	lda	0x11b,x
   0044 48            [ 3]  105 	pha
   0045 BD 1A 01      [ 5]  106 	lda	0x11a,x
   0048 48            [ 3]  107 	pha
   0049 BD 19 01      [ 5]  108 	lda	0x119,x
   004C 48            [ 3]  109 	pha
   004D BD 18 01      [ 5]  110 	lda	0x118,x
   0050 48            [ 3]  111 	pha
   0051 20r00r00      [ 6]  112 	jsr	__rrslonglong
   0054 86*00         [ 3]  113 	stx	*(__TEMP+0)
   0056 BA            [ 2]  114 	tsx
   0057 9D 14 01      [ 5]  115 	sta	0x114,x
   005A A6*00         [ 3]  116 	ldx	*(__TEMP+0)
   005C 8A            [ 2]  117 	txa
   005D BA            [ 2]  118 	tsx
   005E 9D 15 01      [ 5]  119 	sta	0x115,x
   0061 A6*00         [ 3]  120 	ldx	*(__TEMP+0)
   0063 A5*00         [ 3]  121 	lda	*___SDCC_m6502_ret2
   0065 BA            [ 2]  122 	tsx
   0066 9D 16 01      [ 5]  123 	sta	0x116,x
   0069 A5*00         [ 3]  124 	lda	*___SDCC_m6502_ret3
   006B 9D 17 01      [ 5]  125 	sta	0x117,x
   006E A5*00         [ 3]  126 	lda	*___SDCC_m6502_ret4
   0070 9D 18 01      [ 5]  127 	sta	0x118,x
   0073 A5*00         [ 3]  128 	lda	*___SDCC_m6502_ret5
   0075 9D 19 01      [ 5]  129 	sta	0x119,x
   0078 A5*00         [ 3]  130 	lda	*___SDCC_m6502_ret6
   007A 9D 1A 01      [ 5]  131 	sta	0x11a,x
   007D A5*00         [ 3]  132 	lda	*___SDCC_m6502_ret7
   007F 9D 1B 01      [ 5]  133 	sta	0x11b,x
   0082 85*00         [ 3]  134 	sta	*(__TEMP+0)
   0084 86*01         [ 3]  135 	stx	*(__TEMP+1)
   0086 BA            [ 2]  136 	tsx
   0087 8A            [ 2]  137 	txa
   0088 18            [ 2]  138 	clc
   0089 69 09         [ 2]  139 	adc	#0x09
   008B AA            [ 2]  140 	tax
   008C 9A            [ 2]  141 	txs
   008D A6*01         [ 3]  142 	ldx	*(__TEMP+1)
   008F A5*00         [ 3]  143 	lda	*(__TEMP+0)
   0091 BA            [ 2]  144 	tsx
   0092 BD 0B 01      [ 5]  145 	lda	0x10b,x
   0095 9D 13 01      [ 5]  146 	sta	0x113,x
                            147 ;	../_mullonglong.c: 47: for(j = 0; (i + j) < sizeof (long long); j++)
   0098 A9 00         [ 2]  148 	lda	#0x00
   009A 9D 14 01      [ 5]  149 	sta	0x114,x
   009D                     150 00104$:
   009D BA            [ 2]  151 	tsx
   009E BD 15 01      [ 5]  152 	lda	0x115,x
   00A1 9D 0B 01      [ 5]  153 	sta	0x10b,x
   00A4 A9 00         [ 2]  154 	lda	#0x00
   00A6 9D 0C 01      [ 5]  155 	sta	0x10c,x
   00A9 BD 14 01      [ 5]  156 	lda	0x114,x
   00AC 9D 09 01      [ 5]  157 	sta	0x109,x
   00AF A9 00         [ 2]  158 	lda	#0x00
   00B1 9D 0A 01      [ 5]  159 	sta	0x10a,x
   00B4 BD 0B 01      [ 5]  160 	lda	0x10b,x
   00B7 18            [ 2]  161 	clc
   00B8 7D 09 01      [ 5]  162 	adc	0x109,x
   00BB 48            [ 3]  163 	pha
   00BC BD 0C 01      [ 5]  164 	lda	0x10c,x
   00BF 7D 0A 01      [ 5]  165 	adc	0x10a,x
   00C2 AA            [ 2]  166 	tax
   00C3 68            [ 4]  167 	pla
   00C4 38            [ 2]  168 	sec
   00C5 E9 08         [ 2]  169 	sbc	#0x08
   00C7 8A            [ 2]  170 	txa
   00C8 E9 00         [ 2]  171 	sbc	#0x00
   00CA 50 04         [ 4]  172 	bvc	00129$
   00CC 10 07         [ 4]  173 	bpl	00128$
   00CE 30 02         [ 4]  174 	bmi	00130$
   00D0                     175 00129$:
   00D0 30 03         [ 4]  176 	bmi	00128$
   00D2                     177 00130$:
   00D2 4Cr37r02      [ 3]  178 	jmp	00107$
   00D5                     179 00128$:
                            180 ;	../_mullonglong.c: 49: unsigned char r = lr >> (j * 8);
   00D5 BA            [ 2]  181 	tsx
   00D6 BD 14 01      [ 5]  182 	lda	0x114,x
   00D9 0A            [ 2]  183 	asl	a
   00DA 0A            [ 2]  184 	asl	a
   00DB 0A            [ 2]  185 	asl	a
   00DC 48            [ 3]  186 	pha
   00DD BD 27 01      [ 5]  187 	lda	0x127,x
   00E0 48            [ 3]  188 	pha
   00E1 BD 26 01      [ 5]  189 	lda	0x126,x
   00E4 48            [ 3]  190 	pha
   00E5 BD 25 01      [ 5]  191 	lda	0x125,x
   00E8 48            [ 3]  192 	pha
   00E9 BD 24 01      [ 5]  193 	lda	0x124,x
   00EC 48            [ 3]  194 	pha
   00ED BD 23 01      [ 5]  195 	lda	0x123,x
   00F0 48            [ 3]  196 	pha
   00F1 BD 22 01      [ 5]  197 	lda	0x122,x
   00F4 48            [ 3]  198 	pha
   00F5 BD 21 01      [ 5]  199 	lda	0x121,x
   00F8 48            [ 3]  200 	pha
   00F9 BD 20 01      [ 5]  201 	lda	0x120,x
   00FC 48            [ 3]  202 	pha
   00FD 20r00r00      [ 6]  203 	jsr	__rrslonglong
   0100 86*00         [ 3]  204 	stx	*(__TEMP+0)
   0102 BA            [ 2]  205 	tsx
   0103 9D 14 01      [ 5]  206 	sta	0x114,x
   0106 A6*00         [ 3]  207 	ldx	*(__TEMP+0)
   0108 8A            [ 2]  208 	txa
   0109 BA            [ 2]  209 	tsx
   010A 9D 15 01      [ 5]  210 	sta	0x115,x
   010D A6*00         [ 3]  211 	ldx	*(__TEMP+0)
   010F A5*00         [ 3]  212 	lda	*___SDCC_m6502_ret2
   0111 BA            [ 2]  213 	tsx
   0112 9D 16 01      [ 5]  214 	sta	0x116,x
   0115 A5*00         [ 3]  215 	lda	*___SDCC_m6502_ret3
   0117 9D 17 01      [ 5]  216 	sta	0x117,x
   011A A5*00         [ 3]  217 	lda	*___SDCC_m6502_ret4
   011C 9D 18 01      [ 5]  218 	sta	0x118,x
   011F A5*00         [ 3]  219 	lda	*___SDCC_m6502_ret5
   0121 9D 19 01      [ 5]  220 	sta	0x119,x
   0124 A5*00         [ 3]  221 	lda	*___SDCC_m6502_ret6
   0126 9D 1A 01      [ 5]  222 	sta	0x11a,x
   0129 A5*00         [ 3]  223 	lda	*___SDCC_m6502_ret7
   012B 9D 1B 01      [ 5]  224 	sta	0x11b,x
   012E 85*00         [ 3]  225 	sta	*(__TEMP+0)
   0130 86*01         [ 3]  226 	stx	*(__TEMP+1)
   0132 BA            [ 2]  227 	tsx
   0133 8A            [ 2]  228 	txa
   0134 18            [ 2]  229 	clc
   0135 69 09         [ 2]  230 	adc	#0x09
   0137 AA            [ 2]  231 	tax
   0138 9A            [ 2]  232 	txs
   0139 A6*01         [ 3]  233 	ldx	*(__TEMP+1)
   013B A5*00         [ 3]  234 	lda	*(__TEMP+0)
   013D BA            [ 2]  235 	tsx
   013E BD 0B 01      [ 5]  236 	lda	0x10b,x
                            237 ;	../_mullonglong.c: 50: ret += (unsigned long long)((unsigned short)(l * r)) << ((i + j) * 8);
   0141 AA            [ 2]  238 	tax
   0142 86*00         [ 3]  239 	stx	*(__TEMP+0)
   0144 BA            [ 2]  240 	tsx
   0145 BD 13 01      [ 5]  241 	lda	0x113,x
   0148 08            [ 3]  242 	php
   0149 A6*00         [ 3]  243 	ldx	*(__TEMP+0)
   014B 28            [ 4]  244 	plp
   014C 20r00r00      [ 6]  245 	jsr	__muluchar
   014F 48            [ 3]  246 	pha
   0150 8A            [ 2]  247 	txa
   0151 BA            [ 2]  248 	tsx
   0152 9D 0B 01      [ 5]  249 	sta	0x10b,x
   0155 68            [ 4]  250 	pla
   0156 9D 0A 01      [ 5]  251 	sta	0x10a, x
   0159 9D 0C 01      [ 5]  252 	sta	0x10c,x
   015C BD 0B 01      [ 5]  253 	lda	0x10b,x
   015F 9D 0D 01      [ 5]  254 	sta	0x10d,x
   0162 A9 00         [ 2]  255 	lda	#0x00
   0164 9D 0E 01      [ 5]  256 	sta	0x10e,x
   0167 9D 0F 01      [ 5]  257 	sta	0x10f,x
   016A 9D 10 01      [ 5]  258 	sta	0x110,x
   016D 9D 11 01      [ 5]  259 	sta	0x111,x
   0170 9D 12 01      [ 5]  260 	sta	0x112,x
   0173 9D 13 01      [ 5]  261 	sta	0x113,x
   0176 BD 16 01      [ 5]  262 	lda	0x116,x
   0179 18            [ 2]  263 	clc
   017A 7D 15 01      [ 5]  264 	adc	0x115,x
   017D 0A            [ 2]  265 	asl	a
   017E 0A            [ 2]  266 	asl	a
   017F 0A            [ 2]  267 	asl	a
   0180 48            [ 3]  268 	pha
   0181 BD 13 01      [ 5]  269 	lda	0x113,x
   0184 48            [ 3]  270 	pha
   0185 BD 12 01      [ 5]  271 	lda	0x112,x
   0188 48            [ 3]  272 	pha
   0189 BD 11 01      [ 5]  273 	lda	0x111,x
   018C 48            [ 3]  274 	pha
   018D BD 10 01      [ 5]  275 	lda	0x110,x
   0190 48            [ 3]  276 	pha
   0191 BD 0F 01      [ 5]  277 	lda	0x10f,x
   0194 48            [ 3]  278 	pha
   0195 BD 0E 01      [ 5]  279 	lda	0x10e,x
   0198 48            [ 3]  280 	pha
   0199 BD 0D 01      [ 5]  281 	lda	0x10d,x
   019C 48            [ 3]  282 	pha
   019D BD 0C 01      [ 5]  283 	lda	0x10c,x
   01A0 48            [ 3]  284 	pha
   01A1 20r00r00      [ 6]  285 	jsr	__rlulonglong
   01A4 86*00         [ 3]  286 	stx	*(__TEMP+0)
   01A6 BA            [ 2]  287 	tsx
   01A7 9D 14 01      [ 5]  288 	sta	0x114,x
   01AA A6*00         [ 3]  289 	ldx	*(__TEMP+0)
   01AC 8A            [ 2]  290 	txa
   01AD BA            [ 2]  291 	tsx
   01AE 9D 15 01      [ 5]  292 	sta	0x115,x
   01B1 A6*00         [ 3]  293 	ldx	*(__TEMP+0)
   01B3 A5*00         [ 3]  294 	lda	*___SDCC_m6502_ret2
   01B5 BA            [ 2]  295 	tsx
   01B6 9D 16 01      [ 5]  296 	sta	0x116,x
   01B9 A5*00         [ 3]  297 	lda	*___SDCC_m6502_ret3
   01BB 9D 17 01      [ 5]  298 	sta	0x117,x
   01BE A5*00         [ 3]  299 	lda	*___SDCC_m6502_ret4
   01C0 9D 18 01      [ 5]  300 	sta	0x118,x
   01C3 A5*00         [ 3]  301 	lda	*___SDCC_m6502_ret5
   01C5 9D 19 01      [ 5]  302 	sta	0x119,x
   01C8 A5*00         [ 3]  303 	lda	*___SDCC_m6502_ret6
   01CA 9D 1A 01      [ 5]  304 	sta	0x11a,x
   01CD A5*00         [ 3]  305 	lda	*___SDCC_m6502_ret7
   01CF 9D 1B 01      [ 5]  306 	sta	0x11b,x
   01D2 85*00         [ 3]  307 	sta	*(__TEMP+0)
   01D4 86*01         [ 3]  308 	stx	*(__TEMP+1)
   01D6 BA            [ 2]  309 	tsx
   01D7 8A            [ 2]  310 	txa
   01D8 18            [ 2]  311 	clc
   01D9 69 09         [ 2]  312 	adc	#0x09
   01DB AA            [ 2]  313 	tax
   01DC 9A            [ 2]  314 	txs
   01DD A6*01         [ 3]  315 	ldx	*(__TEMP+1)
   01DF A5*00         [ 3]  316 	lda	*(__TEMP+0)
   01E1 BA            [ 2]  317 	tsx
   01E2 BD 01 01      [ 5]  318 	lda	0x101,x
   01E5 18            [ 2]  319 	clc
   01E6 7D 0B 01      [ 5]  320 	adc	0x10b,x
   01E9 9D 01 01      [ 5]  321 	sta	0x101,x
   01EC BD 02 01      [ 5]  322 	lda	0x102,x
   01EF 7D 0C 01      [ 5]  323 	adc	0x10c,x
   01F2 9D 02 01      [ 5]  324 	sta	0x102,x
   01F5 BD 03 01      [ 5]  325 	lda	0x103,x
   01F8 7D 0D 01      [ 5]  326 	adc	0x10d,x
   01FB 9D 03 01      [ 5]  327 	sta	0x103,x
   01FE BD 04 01      [ 5]  328 	lda	0x104,x
   0201 7D 0E 01      [ 5]  329 	adc	0x10e,x
   0204 9D 04 01      [ 5]  330 	sta	0x104,x
   0207 BD 05 01      [ 5]  331 	lda	0x105,x
   020A 7D 0F 01      [ 5]  332 	adc	0x10f,x
   020D 9D 05 01      [ 5]  333 	sta	0x105,x
   0210 BD 06 01      [ 5]  334 	lda	0x106,x
   0213 7D 10 01      [ 5]  335 	adc	0x110,x
   0216 9D 06 01      [ 5]  336 	sta	0x106,x
   0219 BD 07 01      [ 5]  337 	lda	0x107,x
   021C 7D 11 01      [ 5]  338 	adc	0x111,x
   021F 9D 07 01      [ 5]  339 	sta	0x107,x
   0222 BD 08 01      [ 5]  340 	lda	0x108,x
   0225 7D 12 01      [ 5]  341 	adc	0x112,x
   0228 9D 08 01      [ 5]  342 	sta	0x108,x
                            343 ;	../_mullonglong.c: 47: for(j = 0; (i + j) < sizeof (long long); j++)
   022B BD 14 01      [ 5]  344 	lda	0x114,x
   022E 18            [ 2]  345 	clc
   022F 69 01         [ 2]  346 	adc	#0x01
   0231 9D 14 01      [ 5]  347 	sta	0x114,x
   0234 4Cr9Dr00      [ 3]  348 	jmp	00104$
   0237                     349 00107$:
                            350 ;	../_mullonglong.c: 44: for (i = 0; i < sizeof (long long); i++)
   0237 BA            [ 2]  351 	tsx
   0238 BD 15 01      [ 5]  352 	lda	0x115,x
   023B 18            [ 2]  353 	clc
   023C 69 01         [ 2]  354 	adc	#0x01
   023E 9D 15 01      [ 5]  355 	sta	0x115, x
   0241 C9 08         [ 2]  356 	cmp	#0x08
   0243 B0 03         [ 4]  357 	bcs	00131$
   0245 4Cr29r00      [ 3]  358 	jmp	00106$
   0248                     359 00131$:
                            360 ;	../_mullonglong.c: 54: return(ret);
   0248 BD 08 01      [ 5]  361 	lda	0x108,x
   024B 85*00         [ 3]  362 	sta	*___SDCC_m6502_ret7
   024D BD 07 01      [ 5]  363 	lda	0x107,x
   0250 85*00         [ 3]  364 	sta	*___SDCC_m6502_ret6
   0252 BD 06 01      [ 5]  365 	lda	0x106,x
   0255 85*00         [ 3]  366 	sta	*___SDCC_m6502_ret5
   0257 BD 05 01      [ 5]  367 	lda	0x105,x
   025A 85*00         [ 3]  368 	sta	*___SDCC_m6502_ret4
   025C BD 04 01      [ 5]  369 	lda	0x104,x
   025F 85*00         [ 3]  370 	sta	*___SDCC_m6502_ret3
   0261 BD 03 01      [ 5]  371 	lda	0x103,x
   0264 85*00         [ 3]  372 	sta	*___SDCC_m6502_ret2
   0266 BD 02 01      [ 5]  373 	lda	0x102,x
   0269 AA            [ 2]  374 	tax
   026A 86*00         [ 3]  375 	stx	*(__TEMP+0)
   026C BA            [ 2]  376 	tsx
   026D BD 01 01      [ 5]  377 	lda	0x101,x
   0270 08            [ 3]  378 	php
   0271 A6*00         [ 3]  379 	ldx	*(__TEMP+0)
   0273 28            [ 4]  380 	plp
                            381 ;	../_mullonglong.c: 55: }
   0274 85*00         [ 3]  382 	sta	*(__TEMP+0)
   0276 86*01         [ 3]  383 	stx	*(__TEMP+1)
   0278 BA            [ 2]  384 	tsx
   0279 8A            [ 2]  385 	txa
   027A 18            [ 2]  386 	clc
   027B 69 15         [ 2]  387 	adc	#0x15
   027D AA            [ 2]  388 	tax
   027E 9A            [ 2]  389 	txs
   027F A6*01         [ 3]  390 	ldx	*(__TEMP+1)
   0281 A5*00         [ 3]  391 	lda	*(__TEMP+0)
   0283 60            [ 6]  392 	rts
                            393 	.area CODE
                            394 	.area RODATA
                            395 	.area XINIT
                            396 	.area CABS    (ABS)
