                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module wcrtomb
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _wctomb
                             12 	.globl _wcrtomb
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; uninitialized external ram data
                             22 ;--------------------------------------------------------
                             23 	.area BSS
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area DABS    (ABS)
                             28 ;--------------------------------------------------------
                             29 ; initialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area DATA
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _CODE
                             36 	.area GSINIT
                             37 	.area GSFINAL
                             38 	.area GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 	.area _CODE
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area CODE
                             48 ;------------------------------------------------------------
                             49 ;Allocation info for local variables in function 'wcrtomb'
                             50 ;------------------------------------------------------------
                             51 ;wc                        Allocated to stack - sp +5
                             52 ;ps                        Allocated to stack - sp +9
                             53 ;s                         Allocated to stack - sp +1
                             54 ;ret                       Allocated to registers a x 
                             55 ;------------------------------------------------------------
                             56 ;	../wcrtomb.c: 34: size_t wcrtomb(char *restrict s, wchar_t wc, mbstate_t *restrict ps)
                             57 ;	-----------------------------------------
                             58 ;	 function wcrtomb
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 2 bytes.
   0000                      62 _wcrtomb:
   0000 85*00         [ 3]   63 	sta	*(__TEMP+0)
   0002 8A            [ 2]   64 	txa
   0003 48            [ 3]   65 	pha
   0004 A5*00         [ 3]   66 	lda	*(__TEMP+0)
   0006 48            [ 3]   67 	pha
                             68 ;	../wcrtomb.c: 40: ret = wctomb(s, wc);
   0007 BA            [ 2]   69 	tsx
   0008 BD 08 01      [ 5]   70 	lda	0x108,x
   000B 48            [ 3]   71 	pha
   000C BD 07 01      [ 5]   72 	lda	0x107,x
   000F 48            [ 3]   73 	pha
   0010 BD 06 01      [ 5]   74 	lda	0x106,x
   0013 48            [ 3]   75 	pha
   0014 BD 05 01      [ 5]   76 	lda	0x105,x
   0017 48            [ 3]   77 	pha
   0018 BD 02 01      [ 5]   78 	lda	0x102,x
   001B AA            [ 2]   79 	tax
   001C 86*00         [ 3]   80 	stx	*(__TEMP+0)
   001E BA            [ 2]   81 	tsx
   001F BD 05 01      [ 5]   82 	lda	0x105,x
   0022 08            [ 3]   83 	php
   0023 A6*00         [ 3]   84 	ldx	*(__TEMP+0)
   0025 28            [ 4]   85 	plp
   0026 20r00r00      [ 6]   86 	jsr	_wctomb
   0029 85*00         [ 3]   87 	sta	*(__TEMP+0)
   002B 68            [ 4]   88 	pla
   002C 68            [ 4]   89 	pla
   002D 68            [ 4]   90 	pla
   002E 68            [ 4]   91 	pla
   002F A5*00         [ 3]   92 	lda	*(__TEMP+0)
                             93 ;	../wcrtomb.c: 42: if(ret == (size_t)(-1))
   0031 C9 FF         [ 2]   94 	cmp	#0xff
   0033 D0 0E         [ 4]   95 	bne	00102$
   0035 E0 FF         [ 2]   96 	cpx	#0xff
   0037 D0 0A         [ 4]   97 	bne	00102$
                             98 ;	../wcrtomb.c: 43: errno = EILSEQ;
   0039 A0 54         [ 2]   99 	ldy	#0x54
   003B 8Cr00r00      [ 4]  100 	sty	_errno
   003E A0 00         [ 2]  101 	ldy	#0x00
   0040 8Cr01r00      [ 4]  102 	sty	(_errno + 1)
   0043                     103 00102$:
                            104 ;	../wcrtomb.c: 45: return(ret);
                            105 ;	../wcrtomb.c: 46: }
   0043 85*00         [ 3]  106 	sta	*(__TEMP+0)
   0045 68            [ 4]  107 	pla
   0046 68            [ 4]  108 	pla
   0047 A5*00         [ 3]  109 	lda	*(__TEMP+0)
   0049 60            [ 6]  110 	rts
                            111 	.area CODE
                            112 	.area RODATA
                            113 	.area XINIT
                            114 	.area CABS    (ABS)
