                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module modff
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _modff
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'modff'
                             49 ;------------------------------------------------------------
                             50 ;x                         Allocated to stack - sp +9
                             51 ;y                         Allocated to stack - sp +13
                             52 ;sloc0                     Allocated to stack - sp +5
                             53 ;sloc1                     Allocated to stack - sp +1
                             54 ;------------------------------------------------------------
                             55 ;	../modff.c: 33: float modff(float x, float * y)
                             56 ;	-----------------------------------------
                             57 ;	 function modff
                             58 ;	-----------------------------------------
                             59 ;	Register assignment is optimal.
                             60 ;	Stack space usage: 6 bytes.
   0000                      61 _modff:
   0000 48            [ 3]   62 	pha
   0001 48            [ 3]   63 	pha
   0002 48            [ 3]   64 	pha
   0003 48            [ 3]   65 	pha
   0004 48            [ 3]   66 	pha
   0005 48            [ 3]   67 	pha
                             68 ;	../modff.c: 35: *y=(long)x;
   0006 BA            [ 2]   69 	tsx
   0007 BD 0D 01      [ 5]   70 	lda	0x10d,x
   000A 9D 05 01      [ 5]   71 	sta	0x105,x
   000D BD 0E 01      [ 5]   72 	lda	0x10e,x
   0010 9D 06 01      [ 5]   73 	sta	0x106,x
   0013 BD 0C 01      [ 5]   74 	lda	0x10c,x
   0016 48            [ 3]   75 	pha
   0017 BD 0B 01      [ 5]   76 	lda	0x10b,x
   001A 48            [ 3]   77 	pha
   001B BD 0A 01      [ 5]   78 	lda	0x10a,x
   001E 48            [ 3]   79 	pha
   001F BD 09 01      [ 5]   80 	lda	0x109,x
   0022 48            [ 3]   81 	pha
   0023 20r00r00      [ 6]   82 	jsr	___fs2slong
   0026 86*00         [ 3]   83 	stx	*(__TEMP+0)
   0028 BA            [ 2]   84 	tsx
   0029 9D 05 01      [ 5]   85 	sta	0x105,x
   002C A6*00         [ 3]   86 	ldx	*(__TEMP+0)
   002E 8A            [ 2]   87 	txa
   002F BA            [ 2]   88 	tsx
   0030 9D 06 01      [ 5]   89 	sta	0x106,x
   0033 A6*00         [ 3]   90 	ldx	*(__TEMP+0)
   0035 A5*00         [ 3]   91 	lda	*___SDCC_m6502_ret2
   0037 BA            [ 2]   92 	tsx
   0038 9D 07 01      [ 5]   93 	sta	0x107,x
   003B A5*00         [ 3]   94 	lda	*___SDCC_m6502_ret3
   003D 9D 08 01      [ 5]   95 	sta	0x108,x
   0040 85*00         [ 3]   96 	sta	*(__TEMP+0)
   0042 68            [ 4]   97 	pla
   0043 68            [ 4]   98 	pla
   0044 68            [ 4]   99 	pla
   0045 68            [ 4]  100 	pla
   0046 BD 08 01      [ 5]  101 	lda	0x108, x
   0049 48            [ 3]  102 	pha
   004A BD 07 01      [ 5]  103 	lda	0x107,x
   004D 48            [ 3]  104 	pha
   004E BD 06 01      [ 5]  105 	lda	0x106,x
   0051 48            [ 3]  106 	pha
   0052 BD 05 01      [ 5]  107 	lda	0x105,x
   0055 48            [ 3]  108 	pha
   0056 20r00r00      [ 6]  109 	jsr	___slong2fs
   0059 86*00         [ 3]  110 	stx	*(__TEMP+0)
   005B BA            [ 2]  111 	tsx
   005C 9D 05 01      [ 5]  112 	sta	0x105,x
   005F A6*00         [ 3]  113 	ldx	*(__TEMP+0)
   0061 8A            [ 2]  114 	txa
   0062 BA            [ 2]  115 	tsx
   0063 9D 06 01      [ 5]  116 	sta	0x106,x
   0066 A6*00         [ 3]  117 	ldx	*(__TEMP+0)
   0068 A5*00         [ 3]  118 	lda	*___SDCC_m6502_ret2
   006A BA            [ 2]  119 	tsx
   006B 9D 07 01      [ 5]  120 	sta	0x107,x
   006E A5*00         [ 3]  121 	lda	*___SDCC_m6502_ret3
   0070 9D 08 01      [ 5]  122 	sta	0x108,x
   0073 85*00         [ 3]  123 	sta	*(__TEMP+0)
   0075 68            [ 4]  124 	pla
   0076 68            [ 4]  125 	pla
   0077 68            [ 4]  126 	pla
   0078 68            [ 4]  127 	pla
   0079 BD 09 01      [ 5]  128 	lda	0x109, x
   007C 85*00         [ 3]  129 	sta	*(__DPTR+0)
   007E BD 0A 01      [ 5]  130 	lda	0x10a,x
   0081 85*01         [ 3]  131 	sta	*(__DPTR+1)
   0083 BD 05 01      [ 5]  132 	lda	0x105,x
   0086 A0 00         [ 2]  133 	ldy	#0x00
   0088 91*00         [ 6]  134 	sta	[__DPTR],y
   008A BD 06 01      [ 5]  135 	lda	0x106,x
   008D C8            [ 2]  136 	iny
   008E 91*00         [ 6]  137 	sta	[__DPTR],y
   0090 BD 07 01      [ 5]  138 	lda	0x107,x
   0093 C8            [ 2]  139 	iny
   0094 91*00         [ 6]  140 	sta	[__DPTR],y
   0096 BD 08 01      [ 5]  141 	lda	0x108,x
   0099 C8            [ 2]  142 	iny
   009A 91*00         [ 6]  143 	sta	[__DPTR],y
                            144 ;	../modff.c: 36: return (x-*y);
   009C BD 08 01      [ 5]  145 	lda	0x108,x
   009F 48            [ 3]  146 	pha
   00A0 BD 07 01      [ 5]  147 	lda	0x107,x
   00A3 48            [ 3]  148 	pha
   00A4 BD 06 01      [ 5]  149 	lda	0x106,x
   00A7 48            [ 3]  150 	pha
   00A8 BD 05 01      [ 5]  151 	lda	0x105,x
   00AB 48            [ 3]  152 	pha
   00AC BD 10 01      [ 5]  153 	lda	0x110,x
   00AF 48            [ 3]  154 	pha
   00B0 BD 0F 01      [ 5]  155 	lda	0x10f,x
   00B3 48            [ 3]  156 	pha
   00B4 BD 0E 01      [ 5]  157 	lda	0x10e,x
   00B7 48            [ 3]  158 	pha
   00B8 BD 0D 01      [ 5]  159 	lda	0x10d,x
   00BB 48            [ 3]  160 	pha
   00BC 20r00r00      [ 6]  161 	jsr	___fssub
   00BF 86*00         [ 3]  162 	stx	*(__TEMP+0)
   00C1 BA            [ 2]  163 	tsx
   00C2 9D 09 01      [ 5]  164 	sta	0x109,x
   00C5 A6*00         [ 3]  165 	ldx	*(__TEMP+0)
   00C7 8A            [ 2]  166 	txa
   00C8 BA            [ 2]  167 	tsx
   00C9 9D 0A 01      [ 5]  168 	sta	0x10a,x
   00CC A6*00         [ 3]  169 	ldx	*(__TEMP+0)
   00CE A5*00         [ 3]  170 	lda	*___SDCC_m6502_ret2
   00D0 BA            [ 2]  171 	tsx
   00D1 9D 0B 01      [ 5]  172 	sta	0x10b,x
   00D4 A5*00         [ 3]  173 	lda	*___SDCC_m6502_ret3
   00D6 9D 0C 01      [ 5]  174 	sta	0x10c,x
   00D9 85*00         [ 3]  175 	sta	*(__TEMP+0)
   00DB 86*01         [ 3]  176 	stx	*(__TEMP+1)
   00DD BA            [ 2]  177 	tsx
   00DE 8A            [ 2]  178 	txa
   00DF 18            [ 2]  179 	clc
   00E0 69 08         [ 2]  180 	adc	#0x08
   00E2 AA            [ 2]  181 	tax
   00E3 9A            [ 2]  182 	txs
   00E4 A6*01         [ 3]  183 	ldx	*(__TEMP+1)
   00E6 A5*00         [ 3]  184 	lda	*(__TEMP+0)
   00E8 BA            [ 2]  185 	tsx
   00E9 BD 04 01      [ 5]  186 	lda	0x104,x
   00EC 85*00         [ 3]  187 	sta	*___SDCC_m6502_ret3
   00EE BD 03 01      [ 5]  188 	lda	0x103,x
   00F1 85*00         [ 3]  189 	sta	*___SDCC_m6502_ret2
   00F3 BD 02 01      [ 5]  190 	lda	0x102,x
   00F6 AA            [ 2]  191 	tax
   00F7 86*00         [ 3]  192 	stx	*(__TEMP+0)
   00F9 BA            [ 2]  193 	tsx
   00FA BD 01 01      [ 5]  194 	lda	0x101,x
   00FD 08            [ 3]  195 	php
   00FE A6*00         [ 3]  196 	ldx	*(__TEMP+0)
   0100 28            [ 4]  197 	plp
                            198 ;	../modff.c: 37: }
   0101 85*00         [ 3]  199 	sta	*(__TEMP+0)
   0103 68            [ 4]  200 	pla
   0104 68            [ 4]  201 	pla
   0105 68            [ 4]  202 	pla
   0106 68            [ 4]  203 	pla
   0107 68            [ 4]  204 	pla
   0108 68            [ 4]  205 	pla
   0109 A5*00         [ 3]  206 	lda	*(__TEMP+0)
   010B 60            [ 6]  207 	rts
                            208 	.area CODE
                            209 	.area RODATA
                            210 	.area XINIT
                            211 	.area CABS    (ABS)
