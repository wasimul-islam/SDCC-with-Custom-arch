                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module gets
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _gets
                             12 	.globl _putchar
                             13 	.globl _getchar
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; uninitialized external ram data
                             23 ;--------------------------------------------------------
                             24 	.area BSS
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area DABS    (ABS)
                             29 ;--------------------------------------------------------
                             30 ; initialized external ram data
                             31 ;--------------------------------------------------------
                             32 	.area DATA
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 	.area GSINIT
                             38 	.area GSFINAL
                             39 	.area GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 	.area _CODE
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area CODE
                             49 ;------------------------------------------------------------
                             50 ;Allocation info for local variables in function 'gets'
                             51 ;------------------------------------------------------------
                             52 ;s                         Allocated to stack - sp +3
                             53 ;c                         Allocated to registers y 
                             54 ;count                     Allocated to stack - sp +1
                             55 ;------------------------------------------------------------
                             56 ;	../gets.c: 32: gets (char *s)
                             57 ;	-----------------------------------------
                             58 ;	 function gets
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 4 bytes.
   0000                      62 _gets:
   0000 85*00         [ 3]   63 	sta	*(__TEMP+0)
   0002 8A            [ 2]   64 	txa
   0003 48            [ 3]   65 	pha
   0004 A5*00         [ 3]   66 	lda	*(__TEMP+0)
   0006 48            [ 3]   67 	pha
   0007 48            [ 3]   68 	pha
   0008 48            [ 3]   69 	pha
                             70 ;	../gets.c: 35: unsigned int count = 0;
   0009 BA            [ 2]   71 	tsx
   000A A9 00         [ 2]   72 	lda	#0x00
   000C 9D 01 01      [ 5]   73 	sta	0x101,x
   000F 9D 02 01      [ 5]   74 	sta	0x102,x
                             75 ;	../gets.c: 37: while (1)
   0012                      76 00109$:
                             77 ;	../gets.c: 39: c = getchar ();
   0012 20r00r00      [ 6]   78 	jsr	_getchar
   0015 A8            [ 2]   79 	tay
                             80 ;	../gets.c: 40: switch(c)
   0016 C0 08         [ 2]   81 	cpy	#0x08
   0018 F0 0B         [ 4]   82 	beq	00101$
   001A C0 0A         [ 2]   83 	cpy	#0x0a
   001C F0 4B         [ 4]   84 	beq	00105$
   001E C0 0D         [ 2]   85 	cpy	#0x0d
   0020 F0 47         [ 4]   86 	beq	00105$
   0022 4Cr98r00      [ 3]   87 	jmp	00106$
                             88 ;	../gets.c: 42: case '\b': /* backspace */
   0025                      89 00101$:
                             90 ;	../gets.c: 43: if (count)
   0025 BA            [ 2]   91 	tsx
   0026 BD 01 01      [ 5]   92 	lda	0x101,x
   0029 1D 02 01      [ 5]   93 	ora	0x102,x
   002C F0 E4         [ 4]   94 	beq	00109$
                             95 ;	../gets.c: 45: putchar ('\b');
   002E A2 00         [ 2]   96 	ldx	#0x00
   0030 A9 08         [ 2]   97 	lda	#0x08
   0032 20r00r00      [ 6]   98 	jsr	_putchar
                             99 ;	../gets.c: 46: putchar (' ');
   0035 A2 00         [ 2]  100 	ldx	#0x00
   0037 A9 20         [ 2]  101 	lda	#0x20
   0039 20r00r00      [ 6]  102 	jsr	_putchar
                            103 ;	../gets.c: 47: putchar ('\b');
   003C A2 00         [ 2]  104 	ldx	#0x00
   003E A9 08         [ 2]  105 	lda	#0x08
   0040 20r00r00      [ 6]  106 	jsr	_putchar
                            107 ;	../gets.c: 48: --s;
   0043 BA            [ 2]  108 	tsx
   0044 BD 03 01      [ 5]  109 	lda	0x103,x
   0047 38            [ 2]  110 	sec
   0048 E9 01         [ 2]  111 	sbc	#0x01
   004A 9D 03 01      [ 5]  112 	sta	0x103,x
   004D BD 04 01      [ 5]  113 	lda	0x104,x
   0050 E9 00         [ 2]  114 	sbc	#0x00
   0052 9D 04 01      [ 5]  115 	sta	0x104,x
                            116 ;	../gets.c: 49: --count;
   0055 BD 01 01      [ 5]  117 	lda	0x101,x
   0058 38            [ 2]  118 	sec
   0059 E9 01         [ 2]  119 	sbc	#0x01
   005B 9D 01 01      [ 5]  120 	sta	0x101,x
   005E BD 02 01      [ 5]  121 	lda	0x102,x
   0061 E9 00         [ 2]  122 	sbc	#0x00
   0063 9D 02 01      [ 5]  123 	sta	0x102,x
                            124 ;	../gets.c: 51: break;
   0066 4Cr12r00      [ 3]  125 	jmp	00109$
                            126 ;	../gets.c: 54: case '\r': /* CR or LF */
   0069                     127 00105$:
                            128 ;	../gets.c: 55: putchar ('\r');
   0069 A2 00         [ 2]  129 	ldx	#0x00
   006B A9 0D         [ 2]  130 	lda	#0x0d
   006D 20r00r00      [ 6]  131 	jsr	_putchar
                            132 ;	../gets.c: 56: putchar ('\n');
   0070 A2 00         [ 2]  133 	ldx	#0x00
   0072 A9 0A         [ 2]  134 	lda	#0x0a
   0074 20r00r00      [ 6]  135 	jsr	_putchar
                            136 ;	../gets.c: 57: *s = 0;
   0077 BA            [ 2]  137 	tsx
   0078 BD 03 01      [ 5]  138 	lda	0x103,x
   007B 85*00         [ 3]  139 	sta	*(__DPTR+0)
   007D BD 04 01      [ 5]  140 	lda	0x104,x
   0080 85*01         [ 3]  141 	sta	*(__DPTR+1)
   0082 A9 00         [ 2]  142 	lda	#0x00
   0084 A8            [ 2]  143 	tay
   0085 91*00         [ 6]  144 	sta	[__DPTR],y
                            145 ;	../gets.c: 58: return s;
   0087 BD 04 01      [ 5]  146 	lda	0x104,x
   008A AA            [ 2]  147 	tax
   008B 86*00         [ 3]  148 	stx	*(__TEMP+0)
   008D BA            [ 2]  149 	tsx
   008E BD 03 01      [ 5]  150 	lda	0x103,x
   0091 08            [ 3]  151 	php
   0092 A6*00         [ 3]  152 	ldx	*(__TEMP+0)
   0094 28            [ 4]  153 	plp
   0095 4CrD9r00      [ 3]  154 	jmp	00111$
                            155 ;	../gets.c: 60: default:
   0098                     156 00106$:
                            157 ;	../gets.c: 61: *s++ = c;
   0098 84*00         [ 3]  158 	sty	*(__TEMP+0)
   009A BA            [ 2]  159 	tsx
   009B BD 03 01      [ 5]  160 	lda	0x103,x
   009E 85*00         [ 3]  161 	sta	*(__DPTR+0)
   00A0 BD 04 01      [ 5]  162 	lda	0x104,x
   00A3 85*01         [ 3]  163 	sta	*(__DPTR+1)
   00A5 A4*00         [ 3]  164 	ldy	*(__TEMP+0)
   00A7 98            [ 2]  165 	tya
   00A8 A0 00         [ 2]  166 	ldy	#0x00
   00AA 91*00         [ 6]  167 	sta	[__DPTR],y
   00AC A4*00         [ 3]  168 	ldy	*(__TEMP+0)
   00AE BD 03 01      [ 5]  169 	lda	0x103,x
   00B1 18            [ 2]  170 	clc
   00B2 69 01         [ 2]  171 	adc	#0x01
   00B4 9D 03 01      [ 5]  172 	sta	0x103,x
   00B7 BD 04 01      [ 5]  173 	lda	0x104,x
   00BA 69 00         [ 2]  174 	adc	#0x00
   00BC 9D 04 01      [ 5]  175 	sta	0x104,x
                            176 ;	../gets.c: 62: ++count;
   00BF BD 01 01      [ 5]  177 	lda	0x101,x
   00C2 18            [ 2]  178 	clc
   00C3 69 01         [ 2]  179 	adc	#0x01
   00C5 9D 01 01      [ 5]  180 	sta	0x101,x
   00C8 BD 02 01      [ 5]  181 	lda	0x102,x
   00CB 69 00         [ 2]  182 	adc	#0x00
   00CD 9D 02 01      [ 5]  183 	sta	0x102,x
                            184 ;	../gets.c: 63: putchar (c);
   00D0 98            [ 2]  185 	tya
   00D1 A2 00         [ 2]  186 	ldx	#0x00
   00D3 20r00r00      [ 6]  187 	jsr	_putchar
                            188 ;	../gets.c: 65: }
   00D6 4Cr12r00      [ 3]  189 	jmp	00109$
   00D9                     190 00111$:
                            191 ;	../gets.c: 67: }
   00D9 85*00         [ 3]  192 	sta	*(__TEMP+0)
   00DB 68            [ 4]  193 	pla
   00DC 68            [ 4]  194 	pla
   00DD 68            [ 4]  195 	pla
   00DE 68            [ 4]  196 	pla
   00DF A5*00         [ 3]  197 	lda	*(__TEMP+0)
   00E1 60            [ 6]  198 	rts
                            199 	.area CODE
                            200 	.area RODATA
                            201 	.area XINIT
                            202 	.area CABS    (ABS)
