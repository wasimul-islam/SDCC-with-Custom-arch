                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module btowc
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _btowc
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'btowc'
                             49 ;------------------------------------------------------------
                             50 ;c                         Allocated to registers a x 
                             51 ;d                         Allocated to registers y 
                             52 ;sloc0                     Allocated to stack - sp +1
                             53 ;------------------------------------------------------------
                             54 ;	../btowc.c: 35: wint_t btowc(int c)
                             55 ;	-----------------------------------------
                             56 ;	 function btowc
                             57 ;	-----------------------------------------
                             58 ;	Register assignment is optimal.
                             59 ;	Stack space usage: 4 bytes.
   0000                      60 _btowc:
   0000 48            [ 3]   61 	pha
   0001 48            [ 3]   62 	pha
   0002 48            [ 3]   63 	pha
   0003 48            [ 3]   64 	pha
                             65 ;	../btowc.c: 37: char d = (unsigned char)c;
   0004 A8            [ 2]   66 	tay
                             67 ;	../btowc.c: 38: if(d & 0x80)
   0005 A9 80         [ 2]   68 	lda	#0x80
   0007 84*00         [ 3]   69 	sty	*(__TEMP+0)
   0009 25*00         [ 3]   70 	and	*(__TEMP+0)
   000B F0 0A         [ 4]   71 	beq	00102$
                             72 ;	../btowc.c: 39: return WEOF;
   000D A9 FF         [ 2]   73 	lda	#0xff
   000F AA            [ 2]   74 	tax
   0010 85*00         [ 3]   75 	sta	*___SDCC_m6502_ret2
   0012 85*00         [ 3]   76 	sta	*___SDCC_m6502_ret3
   0014 4Cr3Cr00      [ 3]   77 	jmp	00103$
   0017                      78 00102$:
                             79 ;	../btowc.c: 40: return d;
   0017 BA            [ 2]   80 	tsx
   0018 98            [ 2]   81 	tya
   0019 9D 01 01      [ 5]   82 	sta	0x101,x
   001C A9 00         [ 2]   83 	lda	#0x00
   001E 9D 02 01      [ 5]   84 	sta	0x102,x
   0021 9D 03 01      [ 5]   85 	sta	0x103,x
   0024 9D 04 01      [ 5]   86 	sta	0x104, x
   0027 85*00         [ 3]   87 	sta	*___SDCC_m6502_ret3
   0029 BD 03 01      [ 5]   88 	lda	0x103,x
   002C 85*00         [ 3]   89 	sta	*___SDCC_m6502_ret2
   002E BD 02 01      [ 5]   90 	lda	0x102,x
   0031 AA            [ 2]   91 	tax
   0032 86*00         [ 3]   92 	stx	*(__TEMP+0)
   0034 BA            [ 2]   93 	tsx
   0035 BD 01 01      [ 5]   94 	lda	0x101,x
   0038 08            [ 3]   95 	php
   0039 A6*00         [ 3]   96 	ldx	*(__TEMP+0)
   003B 28            [ 4]   97 	plp
   003C                      98 00103$:
                             99 ;	../btowc.c: 41: }
   003C 85*00         [ 3]  100 	sta	*(__TEMP+0)
   003E 68            [ 4]  101 	pla
   003F 68            [ 4]  102 	pla
   0040 68            [ 4]  103 	pla
   0041 68            [ 4]  104 	pla
   0042 A5*00         [ 3]  105 	lda	*(__TEMP+0)
   0044 60            [ 6]  106 	rts
                            107 	.area CODE
                            108 	.area RODATA
                            109 	.area XINIT
                            110 	.area CABS    (ABS)
