                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module fabsf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _fabsf
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'fabsf'
                             49 ;------------------------------------------------------------
                             50 ;x                         Allocated to stack - sp +13
                             51 ;fl                        Allocated to stack - sp +1
                             52 ;sloc0                     Allocated to stack - sp +9
                             53 ;sloc1                     Allocated to stack - sp +5
                             54 ;------------------------------------------------------------
                             55 ;	../fabsf.c: 34: float fabsf(float x) _FLOAT_FUNC_REENTRANT
                             56 ;	-----------------------------------------
                             57 ;	 function fabsf
                             58 ;	-----------------------------------------
                             59 ;	Register assignment is optimal.
                             60 ;	Stack space usage: 10 bytes.
   0000                      61 _fabsf:
   0000 85*00         [ 3]   62 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   63 	stx	*(__TEMP+1)
   0004 BA            [ 2]   64 	tsx
   0005 8A            [ 2]   65 	txa
   0006 18            [ 2]   66 	clc
   0007 69 F6         [ 2]   67 	adc	#0xf6
   0009 AA            [ 2]   68 	tax
   000A 9A            [ 2]   69 	txs
   000B A6*01         [ 3]   70 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   71 	lda	*(__TEMP+0)
                             72 ;	../fabsf.c: 38: fl.f = x;
   000F BA            [ 2]   73 	tsx
   0010 E8            [ 2]   74 	inx
   0011 8A            [ 2]   75 	txa
   0012 A2 01         [ 2]   76 	ldx	#0x01
   0014 85*00         [ 3]   77 	sta	*(__DPTR+0)
   0016 86*01         [ 3]   78 	stx	*(__DPTR+1)
   0018 BA            [ 2]   79 	tsx
   0019 BD 0D 01      [ 5]   80 	lda	0x10d,x
   001C A0 00         [ 2]   81 	ldy	#0x00
   001E 91*00         [ 6]   82 	sta	[__DPTR],y
   0020 BD 0E 01      [ 5]   83 	lda	0x10e,x
   0023 C8            [ 2]   84 	iny
   0024 91*00         [ 6]   85 	sta	[__DPTR],y
   0026 BD 0F 01      [ 5]   86 	lda	0x10f,x
   0029 C8            [ 2]   87 	iny
   002A 91*00         [ 6]   88 	sta	[__DPTR],y
   002C BD 10 01      [ 5]   89 	lda	0x110,x
   002F C8            [ 2]   90 	iny
   0030 91*00         [ 6]   91 	sta	[__DPTR],y
                             92 ;	../fabsf.c: 39: fl.l &= 0x7fffffff;
   0032 E8            [ 2]   93 	inx
   0033 8A            [ 2]   94 	txa
   0034 9D 08 01      [ 5]   95 	sta	0x108,x
   0037 A9 01         [ 2]   96 	lda	#0x01
   0039 9D 09 01      [ 5]   97 	sta	0x109,x
   003C BD 08 01      [ 5]   98 	lda	0x108,x
   003F 85*00         [ 3]   99 	sta	*(__DPTR+0)
   0041 BD 09 01      [ 5]  100 	lda	0x109,x
   0044 85*01         [ 3]  101 	sta	*(__DPTR+1)
   0046 A0 00         [ 2]  102 	ldy	#0x00
   0048 B1*00         [ 6]  103 	lda	[__DPTR],y
   004A 9D 04 01      [ 5]  104 	sta	0x104,x
   004D C8            [ 2]  105 	iny
   004E B1*00         [ 6]  106 	lda	[__DPTR],y
   0050 9D 05 01      [ 5]  107 	sta	0x105,x
   0053 C8            [ 2]  108 	iny
   0054 B1*00         [ 6]  109 	lda	[__DPTR],y
   0056 9D 06 01      [ 5]  110 	sta	0x106,x
   0059 C8            [ 2]  111 	iny
   005A B1*00         [ 6]  112 	lda	[__DPTR],y
   005C 9D 07 01      [ 5]  113 	sta	0x107, x
   005F 29 7F         [ 2]  114 	and	#0x7f
   0061 9D 07 01      [ 5]  115 	sta	0x107,x
   0064 BD 08 01      [ 5]  116 	lda	0x108,x
   0067 85*00         [ 3]  117 	sta	*(__DPTR+0)
   0069 BD 09 01      [ 5]  118 	lda	0x109,x
   006C 85*01         [ 3]  119 	sta	*(__DPTR+1)
   006E BD 04 01      [ 5]  120 	lda	0x104,x
   0071 A0 00         [ 2]  121 	ldy	#0x00
   0073 91*00         [ 6]  122 	sta	[__DPTR],y
   0075 BD 05 01      [ 5]  123 	lda	0x105,x
   0078 C8            [ 2]  124 	iny
   0079 91*00         [ 6]  125 	sta	[__DPTR],y
   007B BD 06 01      [ 5]  126 	lda	0x106,x
   007E C8            [ 2]  127 	iny
   007F 91*00         [ 6]  128 	sta	[__DPTR],y
   0081 BD 07 01      [ 5]  129 	lda	0x107,x
   0084 C8            [ 2]  130 	iny
   0085 91*00         [ 6]  131 	sta	[__DPTR],y
                            132 ;	../fabsf.c: 40: return fl.f;
   0087 8A            [ 2]  133 	txa
   0088 A2 01         [ 2]  134 	ldx	#0x01
   008A 85*00         [ 3]  135 	sta	*(__DPTR+0)
   008C 86*01         [ 3]  136 	stx	*(__DPTR+1)
   008E A0 00         [ 2]  137 	ldy	#0x00
   0090 B1*00         [ 6]  138 	lda	[__DPTR],y
   0092 BA            [ 2]  139 	tsx
   0093 9D 05 01      [ 5]  140 	sta	0x105,x
   0096 C8            [ 2]  141 	iny
   0097 B1*00         [ 6]  142 	lda	[__DPTR],y
   0099 9D 06 01      [ 5]  143 	sta	0x106,x
   009C C8            [ 2]  144 	iny
   009D B1*00         [ 6]  145 	lda	[__DPTR],y
   009F 9D 07 01      [ 5]  146 	sta	0x107,x
   00A2 C8            [ 2]  147 	iny
   00A3 B1*00         [ 6]  148 	lda	[__DPTR],y
   00A5 9D 08 01      [ 5]  149 	sta	0x108, x
   00A8 85*00         [ 3]  150 	sta	*___SDCC_m6502_ret3
   00AA BD 07 01      [ 5]  151 	lda	0x107,x
   00AD 85*00         [ 3]  152 	sta	*___SDCC_m6502_ret2
   00AF BD 06 01      [ 5]  153 	lda	0x106,x
   00B2 AA            [ 2]  154 	tax
   00B3 86*00         [ 3]  155 	stx	*(__TEMP+0)
   00B5 BA            [ 2]  156 	tsx
   00B6 BD 05 01      [ 5]  157 	lda	0x105,x
   00B9 08            [ 3]  158 	php
   00BA A6*00         [ 3]  159 	ldx	*(__TEMP+0)
   00BC 28            [ 4]  160 	plp
                            161 ;	../fabsf.c: 41: }
   00BD 85*00         [ 3]  162 	sta	*(__TEMP+0)
   00BF 86*01         [ 3]  163 	stx	*(__TEMP+1)
   00C1 BA            [ 2]  164 	tsx
   00C2 8A            [ 2]  165 	txa
   00C3 18            [ 2]  166 	clc
   00C4 69 0A         [ 2]  167 	adc	#0x0a
   00C6 AA            [ 2]  168 	tax
   00C7 9A            [ 2]  169 	txs
   00C8 A6*01         [ 3]  170 	ldx	*(__TEMP+1)
   00CA A5*00         [ 3]  171 	lda	*(__TEMP+0)
   00CC 60            [ 6]  172 	rts
                            173 	.area CODE
                            174 	.area RODATA
                            175 	.area XINIT
                            176 	.area CABS    (ABS)
