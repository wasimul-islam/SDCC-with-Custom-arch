                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strlen
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strlen
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'strlen'
                             49 ;------------------------------------------------------------
                             50 ;str                       Allocated to registers 
                             51 ;i                         Allocated to stack - sp +3
                             52 ;sloc0                     Allocated to stack - sp +1
                             53 ;------------------------------------------------------------
                             54 ;	../_strlen.c: 35: size_t strlen ( const char * str )
                             55 ;	-----------------------------------------
                             56 ;	 function strlen
                             57 ;	-----------------------------------------
                             58 ;	Register assignment is optimal.
                             59 ;	Stack space usage: 4 bytes.
   0000                      60 _strlen:
   0000 48            [ 3]   61 	pha
   0001 48            [ 3]   62 	pha
   0002 48            [ 3]   63 	pha
   0003 48            [ 3]   64 	pha
   0004 86*00         [ 3]   65 	stx	*(__TEMP+0)
   0006 BA            [ 2]   66 	tsx
   0007 9D 01 01      [ 5]   67 	sta	0x101,x
   000A A6*00         [ 3]   68 	ldx	*(__TEMP+0)
   000C 8A            [ 2]   69 	txa
   000D BA            [ 2]   70 	tsx
   000E 9D 02 01      [ 5]   71 	sta	0x102,x
                             72 ;	../_strlen.c: 39: while (*str++)
   0011 BA            [ 2]   73 	tsx
   0012 A9 00         [ 2]   74 	lda	#0x00
   0014 9D 03 01      [ 5]   75 	sta	0x103,x
   0017 9D 04 01      [ 5]   76 	sta	0x104,x
   001A                      77 00101$:
   001A BA            [ 2]   78 	tsx
   001B BD 01 01      [ 5]   79 	lda	0x101,x
   001E 85*00         [ 3]   80 	sta	*(__DPTR+0)
   0020 BD 02 01      [ 5]   81 	lda	0x102,x
   0023 85*01         [ 3]   82 	sta	*(__DPTR+1)
   0025 A0 00         [ 2]   83 	ldy	#0x00
   0027 B1*00         [ 6]   84 	lda	[__DPTR],y
   0029 A8            [ 2]   85 	tay
   002A BD 01 01      [ 5]   86 	lda	0x101,x
   002D 18            [ 2]   87 	clc
   002E 69 01         [ 2]   88 	adc	#0x01
   0030 9D 01 01      [ 5]   89 	sta	0x101,x
   0033 BD 02 01      [ 5]   90 	lda	0x102,x
   0036 69 00         [ 2]   91 	adc	#0x00
   0038 9D 02 01      [ 5]   92 	sta	0x102,x
   003B C0 00         [ 2]   93 	cpy	#0x00
   003D F0 14         [ 4]   94 	beq	00103$
                             95 ;	../_strlen.c: 40: i++ ;
   003F BD 03 01      [ 5]   96 	lda	0x103,x
   0042 18            [ 2]   97 	clc
   0043 69 01         [ 2]   98 	adc	#0x01
   0045 9D 03 01      [ 5]   99 	sta	0x103,x
   0048 BD 04 01      [ 5]  100 	lda	0x104,x
   004B 69 00         [ 2]  101 	adc	#0x00
   004D 9D 04 01      [ 5]  102 	sta	0x104,x
   0050 4Cr1Ar00      [ 3]  103 	jmp	00101$
   0053                     104 00103$:
                            105 ;	../_strlen.c: 42: return i;
   0053 BA            [ 2]  106 	tsx
   0054 BD 04 01      [ 5]  107 	lda	0x104,x
   0057 AA            [ 2]  108 	tax
   0058 86*00         [ 3]  109 	stx	*(__TEMP+0)
   005A BA            [ 2]  110 	tsx
   005B BD 03 01      [ 5]  111 	lda	0x103,x
   005E 08            [ 3]  112 	php
   005F A6*00         [ 3]  113 	ldx	*(__TEMP+0)
   0061 28            [ 4]  114 	plp
                            115 ;	../_strlen.c: 43: }
   0062 85*00         [ 3]  116 	sta	*(__TEMP+0)
   0064 68            [ 4]  117 	pla
   0065 68            [ 4]  118 	pla
   0066 68            [ 4]  119 	pla
   0067 68            [ 4]  120 	pla
   0068 A5*00         [ 3]  121 	lda	*(__TEMP+0)
   006A 60            [ 6]  122 	rts
                            123 	.area CODE
                            124 	.area RODATA
                            125 	.area XINIT
                            126 	.area CABS    (ABS)
