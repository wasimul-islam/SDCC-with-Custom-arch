                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __itoa
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___uitoa
                             12 	.globl ___itoa
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; uninitialized external ram data
                             22 ;--------------------------------------------------------
                             23 	.area BSS
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area DABS    (ABS)
                             28 ;--------------------------------------------------------
                             29 ; initialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area DATA
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _CODE
                             36 	.area GSINIT
                             37 	.area GSFINAL
                             38 	.area GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 	.area _CODE
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area CODE
                             48 ;------------------------------------------------------------
                             49 ;Allocation info for local variables in function '__uitoa'
                             50 ;------------------------------------------------------------
                             51 ;string                    Allocated to stack - sp +14
                             52 ;radix                     Allocated to stack - sp +16
                             53 ;value                     Allocated to stack - sp +10
                             54 ;index                     Allocated to stack - sp +9
                             55 ;i                         Allocated to stack - sp +8
                             56 ;tmp                       Allocated to stack - sp +7
                             57 ;sloc0                     Allocated to stack - sp +5
                             58 ;sloc1                     Allocated to stack - sp +3
                             59 ;sloc2                     Allocated to stack - sp +1
                             60 ;------------------------------------------------------------
                             61 ;	../__itoa.c: 42: void __uitoa(unsigned int value, char* string, unsigned char radix)
                             62 ;	-----------------------------------------
                             63 ;	 function __uitoa
                             64 ;	-----------------------------------------
                             65 ;	Register assignment is optimal.
                             66 ;	Stack space usage: 11 bytes.
   0000                      67 ___uitoa:
   0000 85*00         [ 3]   68 	sta	*(__TEMP+0)
   0002 8A            [ 2]   69 	txa
   0003 48            [ 3]   70 	pha
   0004 A5*00         [ 3]   71 	lda	*(__TEMP+0)
   0006 48            [ 3]   72 	pha
   0007 86*01         [ 3]   73 	stx	*(__TEMP+1)
   0009 BA            [ 2]   74 	tsx
   000A 8A            [ 2]   75 	txa
   000B 18            [ 2]   76 	clc
   000C 69 F7         [ 2]   77 	adc	#0xf7
   000E AA            [ 2]   78 	tax
   000F 9A            [ 2]   79 	txs
                             80 ;	../__itoa.c: 47: do {
   0010 BA            [ 2]   81 	tsx
   0011 A9 00         [ 2]   82 	lda	#0x00
   0013 9D 09 01      [ 5]   83 	sta	0x109,x
   0016                      84 00103$:
                             85 ;	../__itoa.c: 48: string[index] = '0' + (value % radix);
   0016 BA            [ 2]   86 	tsx
   0017 BD 09 01      [ 5]   87 	lda	0x109,x
   001A 9D 05 01      [ 5]   88 	sta	0x105,x
   001D 0A            [ 2]   89 	asl	a
   001E A9 00         [ 2]   90 	lda	#0x00
   0020 69 FF         [ 2]   91 	adc	#0xff
   0022 49 FF         [ 2]   92 	eor	#0xff
   0024 9D 06 01      [ 5]   93 	sta	0x106,x
   0027 BD 0E 01      [ 5]   94 	lda	0x10e,x
   002A 18            [ 2]   95 	clc
   002B 7D 05 01      [ 5]   96 	adc	0x105,x
   002E 9D 05 01      [ 5]   97 	sta	0x105,x
   0031 BD 0F 01      [ 5]   98 	lda	0x10f,x
   0034 7D 06 01      [ 5]   99 	adc	0x106,x
   0037 9D 06 01      [ 5]  100 	sta	0x106,x
   003A BD 10 01      [ 5]  101 	lda	0x110,x
   003D 9D 03 01      [ 5]  102 	sta	0x103,x
   0040 A9 00         [ 2]  103 	lda	#0x00
   0042 9D 04 01      [ 5]  104 	sta	0x104, x
   0045 48            [ 3]  105 	pha
   0046 BD 03 01      [ 5]  106 	lda	0x103,x
   0049 48            [ 3]  107 	pha
   004A BD 0B 01      [ 5]  108 	lda	0x10b,x
   004D AA            [ 2]  109 	tax
   004E 86*00         [ 3]  110 	stx	*(__TEMP+0)
   0050 BA            [ 2]  111 	tsx
   0051 BD 0C 01      [ 5]  112 	lda	0x10c,x
   0054 08            [ 3]  113 	php
   0055 A6*00         [ 3]  114 	ldx	*(__TEMP+0)
   0057 28            [ 4]  115 	plp
   0058 20r00r00      [ 6]  116 	jsr	__moduint
   005B 85*00         [ 3]  117 	sta	*(__TEMP+0)
   005D 68            [ 4]  118 	pla
   005E 68            [ 4]  119 	pla
   005F A5*00         [ 3]  120 	lda	*(__TEMP+0)
   0061 18            [ 2]  121 	clc
   0062 69 30         [ 2]  122 	adc	#0x30
   0064 85*00         [ 3]  123 	sta	*(__TEMP+0)
   0066 BA            [ 2]  124 	tsx
   0067 BD 05 01      [ 5]  125 	lda	0x105,x
   006A 85*00         [ 3]  126 	sta	*(__DPTR+0)
   006C BD 06 01      [ 5]  127 	lda	0x106,x
   006F 85*01         [ 3]  128 	sta	*(__DPTR+1)
   0071 A5*00         [ 3]  129 	lda	*(__TEMP+0)
   0073 A0 00         [ 2]  130 	ldy	#0x00
   0075 91*00         [ 6]  131 	sta	[__DPTR],y
                            132 ;	../__itoa.c: 49: if (string[index] > '9')
   0077 BD 05 01      [ 5]  133 	lda	0x105,x
   007A 85*00         [ 3]  134 	sta	*(__DPTR+0)
   007C BD 06 01      [ 5]  135 	lda	0x106,x
   007F 85*01         [ 3]  136 	sta	*(__DPTR+1)
   0081 B1*00         [ 6]  137 	lda	[__DPTR],y
   0083 C9 39         [ 2]  138 	cmp	#0x39
   0085 F0 21         [ 4]  139 	beq	00102$
   0087 90 1F         [ 4]  140 	bcc	00102$
                            141 ;	../__itoa.c: 50: string[index] += 'A' - '9' - 1;
   0089 BD 05 01      [ 5]  142 	lda	0x105,x
   008C 85*00         [ 3]  143 	sta	*(__DPTR+0)
   008E BD 06 01      [ 5]  144 	lda	0x106,x
   0091 85*01         [ 3]  145 	sta	*(__DPTR+1)
   0093 B1*00         [ 6]  146 	lda	[__DPTR],y
   0095 18            [ 2]  147 	clc
   0096 69 07         [ 2]  148 	adc	#0x07
   0098 85*00         [ 3]  149 	sta	*(__TEMP+0)
   009A BD 05 01      [ 5]  150 	lda	0x105,x
   009D 85*00         [ 3]  151 	sta	*(__DPTR+0)
   009F BD 06 01      [ 5]  152 	lda	0x106,x
   00A2 85*01         [ 3]  153 	sta	*(__DPTR+1)
   00A4 A5*00         [ 3]  154 	lda	*(__TEMP+0)
   00A6 91*00         [ 6]  155 	sta	[__DPTR],y
   00A8                     156 00102$:
                            157 ;	../__itoa.c: 51: value /= radix;
   00A8 BA            [ 2]  158 	tsx
   00A9 BD 04 01      [ 5]  159 	lda	0x104,x
   00AC 48            [ 3]  160 	pha
   00AD BD 03 01      [ 5]  161 	lda	0x103,x
   00B0 48            [ 3]  162 	pha
   00B1 BD 0B 01      [ 5]  163 	lda	0x10b,x
   00B4 AA            [ 2]  164 	tax
   00B5 86*00         [ 3]  165 	stx	*(__TEMP+0)
   00B7 BA            [ 2]  166 	tsx
   00B8 BD 0C 01      [ 5]  167 	lda	0x10c,x
   00BB 08            [ 3]  168 	php
   00BC A6*00         [ 3]  169 	ldx	*(__TEMP+0)
   00BE 28            [ 4]  170 	plp
   00BF 20r00r00      [ 6]  171 	jsr	__divuint
   00C2 86*00         [ 3]  172 	stx	*(__TEMP+0)
   00C4 BA            [ 2]  173 	tsx
   00C5 9D 0C 01      [ 5]  174 	sta	0x10c,x
   00C8 A6*00         [ 3]  175 	ldx	*(__TEMP+0)
   00CA 8A            [ 2]  176 	txa
   00CB BA            [ 2]  177 	tsx
   00CC 9D 0D 01      [ 5]  178 	sta	0x10d,x
   00CF A6*00         [ 3]  179 	ldx	*(__TEMP+0)
   00D1 85*00         [ 3]  180 	sta	*(__TEMP+0)
   00D3 68            [ 4]  181 	pla
   00D4 68            [ 4]  182 	pla
   00D5 A5*00         [ 3]  183 	lda	*(__TEMP+0)
                            184 ;	../__itoa.c: 52: ++index;
   00D7 BA            [ 2]  185 	tsx
   00D8 BD 09 01      [ 5]  186 	lda	0x109,x
   00DB 18            [ 2]  187 	clc
   00DC 69 01         [ 2]  188 	adc	#0x01
   00DE 9D 09 01      [ 5]  189 	sta	0x109,x
                            190 ;	../__itoa.c: 53: } while (value != 0);
   00E1 BD 0A 01      [ 5]  191 	lda	0x10a,x
   00E4 1D 0B 01      [ 5]  192 	ora	0x10b,x
   00E7 F0 03         [ 4]  193 	beq	00135$
   00E9 4Cr16r00      [ 3]  194 	jmp	00103$
   00EC                     195 00135$:
                            196 ;	../__itoa.c: 56: string[index--] = '\0';
   00EC BD 09 01      [ 5]  197 	lda	0x109,x
   00EF 38            [ 2]  198 	sec
   00F0 E9 01         [ 2]  199 	sbc	#0x01
   00F2 9D 03 01      [ 5]  200 	sta	0x103,x
   00F5 BD 09 01      [ 5]  201 	lda	0x109,x
   00F8 9D 05 01      [ 5]  202 	sta	0x105,x
   00FB 0A            [ 2]  203 	asl	a
   00FC A9 00         [ 2]  204 	lda	#0x00
   00FE 69 FF         [ 2]  205 	adc	#0xff
   0100 49 FF         [ 2]  206 	eor	#0xff
   0102 9D 06 01      [ 5]  207 	sta	0x106,x
   0105 BD 0E 01      [ 5]  208 	lda	0x10e,x
   0108 18            [ 2]  209 	clc
   0109 7D 05 01      [ 5]  210 	adc	0x105,x
   010C 48            [ 3]  211 	pha
   010D BD 0F 01      [ 5]  212 	lda	0x10f,x
   0110 7D 06 01      [ 5]  213 	adc	0x106,x
   0113 AA            [ 2]  214 	tax
   0114 68            [ 4]  215 	pla
   0115 85*00         [ 3]  216 	sta	*(__DPTR+0)
   0117 86*01         [ 3]  217 	stx	*(__DPTR+1)
   0119 A9 00         [ 2]  218 	lda	#0x00
   011B A8            [ 2]  219 	tay
   011C 91*00         [ 6]  220 	sta	[__DPTR],y
                            221 ;	../__itoa.c: 59: while (index > i) {
   011E BA            [ 2]  222 	tsx
   011F 9D 08 01      [ 5]  223 	sta	0x108,x
   0122                     224 00106$:
   0122 BA            [ 2]  225 	tsx
   0123 BD 08 01      [ 5]  226 	lda	0x108,x
   0126 38            [ 2]  227 	sec
   0127 FD 03 01      [ 5]  228 	sbc	0x103,x
   012A 50 04         [ 4]  229 	bvc	00137$
   012C 10 07         [ 4]  230 	bpl	00136$
   012E 30 02         [ 4]  231 	bmi	00138$
   0130                     232 00137$:
   0130 30 03         [ 4]  233 	bmi	00136$
   0132                     234 00138$:
   0132 4CrCBr01      [ 3]  235 	jmp	00109$
   0135                     236 00136$:
                            237 ;	../__itoa.c: 60: char tmp = string[i];
   0135 BD 08 01      [ 5]  238 	lda	0x108,x
   0138 9D 05 01      [ 5]  239 	sta	0x105,x
   013B 0A            [ 2]  240 	asl	a
   013C A9 00         [ 2]  241 	lda	#0x00
   013E 69 FF         [ 2]  242 	adc	#0xff
   0140 49 FF         [ 2]  243 	eor	#0xff
   0142 9D 06 01      [ 5]  244 	sta	0x106,x
   0145 BD 0E 01      [ 5]  245 	lda	0x10e,x
   0148 18            [ 2]  246 	clc
   0149 7D 05 01      [ 5]  247 	adc	0x105,x
   014C 9D 05 01      [ 5]  248 	sta	0x105,x
   014F BD 0F 01      [ 5]  249 	lda	0x10f,x
   0152 7D 06 01      [ 5]  250 	adc	0x106,x
   0155 9D 06 01      [ 5]  251 	sta	0x106,x
   0158 BD 05 01      [ 5]  252 	lda	0x105,x
   015B 85*00         [ 3]  253 	sta	*(__DPTR+0)
   015D BD 06 01      [ 5]  254 	lda	0x106,x
   0160 85*01         [ 3]  255 	sta	*(__DPTR+1)
   0162 A0 00         [ 2]  256 	ldy	#0x00
   0164 B1*00         [ 6]  257 	lda	[__DPTR],y
   0166 9D 07 01      [ 5]  258 	sta	0x107,x
                            259 ;	../__itoa.c: 61: string[i] = string[index];
   0169 BD 03 01      [ 5]  260 	lda	0x103,x
   016C 9D 01 01      [ 5]  261 	sta	0x101,x
   016F 0A            [ 2]  262 	asl	a
   0170 98            [ 2]  263 	tya
   0171 69 FF         [ 2]  264 	adc	#0xff
   0173 49 FF         [ 2]  265 	eor	#0xff
   0175 9D 02 01      [ 5]  266 	sta	0x102,x
   0178 BD 0E 01      [ 5]  267 	lda	0x10e,x
   017B 18            [ 2]  268 	clc
   017C 7D 01 01      [ 5]  269 	adc	0x101,x
   017F 9D 01 01      [ 5]  270 	sta	0x101,x
   0182 BD 0F 01      [ 5]  271 	lda	0x10f,x
   0185 7D 02 01      [ 5]  272 	adc	0x102,x
   0188 9D 02 01      [ 5]  273 	sta	0x102,x
   018B BD 01 01      [ 5]  274 	lda	0x101,x
   018E 85*00         [ 3]  275 	sta	*(__DPTR+0)
   0190 BD 02 01      [ 5]  276 	lda	0x102,x
   0193 85*01         [ 3]  277 	sta	*(__DPTR+1)
   0195 B1*00         [ 6]  278 	lda	[__DPTR],y
   0197 85*00         [ 3]  279 	sta	*(__TEMP+0)
   0199 BD 05 01      [ 5]  280 	lda	0x105,x
   019C 85*00         [ 3]  281 	sta	*(__DPTR+0)
   019E BD 06 01      [ 5]  282 	lda	0x106,x
   01A1 85*01         [ 3]  283 	sta	*(__DPTR+1)
   01A3 A5*00         [ 3]  284 	lda	*(__TEMP+0)
   01A5 91*00         [ 6]  285 	sta	[__DPTR],y
                            286 ;	../__itoa.c: 62: string[index] = tmp;
   01A7 BD 01 01      [ 5]  287 	lda	0x101,x
   01AA 85*00         [ 3]  288 	sta	*(__DPTR+0)
   01AC BD 02 01      [ 5]  289 	lda	0x102,x
   01AF 85*01         [ 3]  290 	sta	*(__DPTR+1)
   01B1 BD 07 01      [ 5]  291 	lda	0x107,x
   01B4 91*00         [ 6]  292 	sta	[__DPTR],y
                            293 ;	../__itoa.c: 63: ++i;
   01B6 BD 08 01      [ 5]  294 	lda	0x108,x
   01B9 18            [ 2]  295 	clc
   01BA 69 01         [ 2]  296 	adc	#0x01
   01BC 9D 08 01      [ 5]  297 	sta	0x108,x
                            298 ;	../__itoa.c: 64: --index;
   01BF BD 03 01      [ 5]  299 	lda	0x103,x
   01C2 38            [ 2]  300 	sec
   01C3 E9 01         [ 2]  301 	sbc	#0x01
   01C5 9D 03 01      [ 5]  302 	sta	0x103,x
   01C8 4Cr22r01      [ 3]  303 	jmp	00106$
   01CB                     304 00109$:
                            305 ;	../__itoa.c: 66: }
   01CB 85*00         [ 3]  306 	sta	*(__TEMP+0)
   01CD 86*01         [ 3]  307 	stx	*(__TEMP+1)
   01CF BA            [ 2]  308 	tsx
   01D0 8A            [ 2]  309 	txa
   01D1 18            [ 2]  310 	clc
   01D2 69 0B         [ 2]  311 	adc	#0x0b
   01D4 AA            [ 2]  312 	tax
   01D5 9A            [ 2]  313 	txs
   01D6 A6*01         [ 3]  314 	ldx	*(__TEMP+1)
   01D8 A5*00         [ 3]  315 	lda	*(__TEMP+0)
   01DA 60            [ 6]  316 	rts
                            317 ;------------------------------------------------------------
                            318 ;Allocation info for local variables in function '__itoa'
                            319 ;------------------------------------------------------------
                            320 ;string                    Allocated to stack - sp +7
                            321 ;radix                     Allocated to stack - sp +9
                            322 ;value                     Allocated to stack - sp +3
                            323 ;sloc0                     Allocated to stack - sp +1
                            324 ;------------------------------------------------------------
                            325 ;	../__itoa.c: 68: void __itoa(int value, char* string, unsigned char radix)
                            326 ;	-----------------------------------------
                            327 ;	 function __itoa
                            328 ;	-----------------------------------------
                            329 ;	Register assignment is optimal.
                            330 ;	Stack space usage: 4 bytes.
   01DB                     331 ___itoa:
   01DB 85*00         [ 3]  332 	sta	*(__TEMP+0)
   01DD 8A            [ 2]  333 	txa
   01DE 48            [ 3]  334 	pha
   01DF A5*00         [ 3]  335 	lda	*(__TEMP+0)
   01E1 48            [ 3]  336 	pha
   01E2 48            [ 3]  337 	pha
   01E3 48            [ 3]  338 	pha
                            339 ;	../__itoa.c: 70: if (value < 0 && radix == 10) {
   01E4 BA            [ 2]  340 	tsx
   01E5 BD 04 01      [ 5]  341 	lda	0x104,x
   01E8 38            [ 2]  342 	sec
   01E9 E9 00         [ 2]  343 	sbc	#0x00
   01EB 50 04         [ 4]  344 	bvc	00115$
   01ED 10 04         [ 4]  345 	bpl	00114$
   01EF 30 45         [ 4]  346 	bmi	00102$
   01F1                     347 00115$:
   01F1 10 43         [ 4]  348 	bpl	00102$
   01F3                     349 00114$:
   01F3 BD 09 01      [ 5]  350 	lda	0x109,x
   01F6 C9 0A         [ 2]  351 	cmp	#0x0a
   01F8 D0 3C         [ 4]  352 	bne	00102$
                            353 ;	../__itoa.c: 71: *string++ = '-';
   01FA BD 07 01      [ 5]  354 	lda	0x107,x
   01FD 9D 01 01      [ 5]  355 	sta	0x101,x
   0200 BD 08 01      [ 5]  356 	lda	0x108,x
   0203 9D 02 01      [ 5]  357 	sta	0x102,x
   0206 BD 01 01      [ 5]  358 	lda	0x101,x
   0209 85*00         [ 3]  359 	sta	*(__DPTR+0)
   020B BD 02 01      [ 5]  360 	lda	0x102,x
   020E 85*01         [ 3]  361 	sta	*(__DPTR+1)
   0210 A9 2D         [ 2]  362 	lda	#0x2d
   0212 A0 00         [ 2]  363 	ldy	#0x00
   0214 91*00         [ 6]  364 	sta	[__DPTR],y
   0216 BD 01 01      [ 5]  365 	lda	0x101,x
   0219 18            [ 2]  366 	clc
   021A 69 01         [ 2]  367 	adc	#0x01
   021C 9D 07 01      [ 5]  368 	sta	0x107,x
   021F BD 02 01      [ 5]  369 	lda	0x102,x
   0222 69 00         [ 2]  370 	adc	#0x00
   0224 9D 08 01      [ 5]  371 	sta	0x108,x
                            372 ;	../__itoa.c: 72: value = -value;
   0227 98            [ 2]  373 	tya
   0228 38            [ 2]  374 	sec
   0229 FD 03 01      [ 5]  375 	sbc	0x103,x
   022C 9D 03 01      [ 5]  376 	sta	0x103,x
   022F 98            [ 2]  377 	tya
   0230 FD 04 01      [ 5]  378 	sbc	0x104,x
   0233 9D 04 01      [ 5]  379 	sta	0x104,x
   0236                     380 00102$:
                            381 ;	../__itoa.c: 74: __uitoa(value, string, radix);
   0236 BA            [ 2]  382 	tsx
   0237 BD 09 01      [ 5]  383 	lda	0x109,x
   023A 48            [ 3]  384 	pha
   023B BD 08 01      [ 5]  385 	lda	0x108,x
   023E 48            [ 3]  386 	pha
   023F BD 07 01      [ 5]  387 	lda	0x107,x
   0242 48            [ 3]  388 	pha
   0243 BD 04 01      [ 5]  389 	lda	0x104,x
   0246 AA            [ 2]  390 	tax
   0247 86*00         [ 3]  391 	stx	*(__TEMP+0)
   0249 BA            [ 2]  392 	tsx
   024A BD 06 01      [ 5]  393 	lda	0x106,x
   024D 08            [ 3]  394 	php
   024E A6*00         [ 3]  395 	ldx	*(__TEMP+0)
   0250 28            [ 4]  396 	plp
   0251 20r00r00      [ 6]  397 	jsr	___uitoa
   0254 85*00         [ 3]  398 	sta	*(__TEMP+0)
   0256 68            [ 4]  399 	pla
   0257 68            [ 4]  400 	pla
   0258 68            [ 4]  401 	pla
                            402 ;	../__itoa.c: 75: }
   0259 68            [ 4]  403 	pla
   025A 68            [ 4]  404 	pla
   025B 68            [ 4]  405 	pla
   025C 68            [ 4]  406 	pla
   025D A5*00         [ 3]  407 	lda	*(__TEMP+0)
   025F 60            [ 6]  408 	rts
                            409 	.area CODE
                            410 	.area RODATA
                            411 	.area XINIT
                            412 	.area CABS    (ABS)
