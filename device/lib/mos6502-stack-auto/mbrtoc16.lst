                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbrtoc16
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _mbrtowc
                             12 	.globl _mbrtoc16
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; uninitialized external ram data
                             22 ;--------------------------------------------------------
                             23 	.area BSS
   0000                      24 _mbrtoc16_sps_65536_16:
   0000                      25 	.ds 3
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area DABS    (ABS)
                             30 ;--------------------------------------------------------
                             31 ; initialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area DATA
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 	.area GSINIT
                             39 	.area GSFINAL
                             40 	.area GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area _CODE
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area CODE
                             50 ;------------------------------------------------------------
                             51 ;Allocation info for local variables in function 'mbrtoc16'
                             52 ;------------------------------------------------------------
                             53 ;s                         Allocated to stack - sp +21
                             54 ;n                         Allocated to stack - sp +23
                             55 ;ps                        Allocated to stack - sp +25
                             56 ;pc16                      Allocated to stack - sp +17
                             57 ;codepoint                 Allocated to stack - sp +1
                             58 ;ret                       Allocated to stack - sp +15
                             59 ;low_surrogate             Allocated to stack - sp +13
                             60 ;sloc0                     Allocated to stack - sp +11
                             61 ;sloc1                     Allocated to stack - sp +9
                             62 ;sloc2                     Allocated to stack - sp +5
                             63 ;sps                       Allocated with name '_mbrtoc16_sps_65536_16'
                             64 ;------------------------------------------------------------
                             65 ;	../mbrtoc16.c: 34: size_t mbrtoc16(char16_t *restrict pc16, const char *restrict s, size_t n, mbstate_t *restrict ps)
                             66 ;	-----------------------------------------
                             67 ;	 function mbrtoc16
                             68 ;	-----------------------------------------
                             69 ;	Register assignment is optimal.
                             70 ;	Stack space usage: 18 bytes.
   0000                      71 _mbrtoc16:
   0000 85*00         [ 3]   72 	sta	*(__TEMP+0)
   0002 8A            [ 2]   73 	txa
   0003 48            [ 3]   74 	pha
   0004 A5*00         [ 3]   75 	lda	*(__TEMP+0)
   0006 48            [ 3]   76 	pha
   0007 86*01         [ 3]   77 	stx	*(__TEMP+1)
   0009 BA            [ 2]   78 	tsx
   000A 8A            [ 2]   79 	txa
   000B 18            [ 2]   80 	clc
   000C 69 F0         [ 2]   81 	adc	#0xf0
   000E AA            [ 2]   82 	tax
   000F 9A            [ 2]   83 	txs
   0010 A6*01         [ 3]   84 	ldx	*(__TEMP+1)
   0012 A5*00         [ 3]   85 	lda	*(__TEMP+0)
                             86 ;	../mbrtoc16.c: 41: if(!s)
   0014 BA            [ 2]   87 	tsx
   0015 BD 15 01      [ 5]   88 	lda	0x115,x
   0018 1D 16 01      [ 5]   89 	ora	0x116,x
   001B D0 27         [ 4]   90 	bne	00102$
                             91 ;	../mbrtoc16.c: 42: return(mbrtoc16(0, "", 1, ps));
   001D BD 1A 01      [ 5]   92 	lda	0x11a,x
   0020 48            [ 3]   93 	pha
   0021 BD 19 01      [ 5]   94 	lda	0x119,x
   0024 48            [ 3]   95 	pha
   0025 A9 00         [ 2]   96 	lda	#0x00
   0027 48            [ 3]   97 	pha
   0028 A9 01         [ 2]   98 	lda	#0x01
   002A 48            [ 3]   99 	pha
   002B A9s00         [ 2]  100 	lda	#>___str_0
   002D 48            [ 3]  101 	pha
   002E A9r00         [ 2]  102 	lda	#___str_0
   0030 48            [ 3]  103 	pha
   0031 A2 00         [ 2]  104 	ldx	#0x00
   0033 8A            [ 2]  105 	txa
   0034 20r00r00      [ 6]  106 	jsr	_mbrtoc16
   0037 85*00         [ 3]  107 	sta	*(__TEMP+0)
   0039 68            [ 4]  108 	pla
   003A 68            [ 4]  109 	pla
   003B 68            [ 4]  110 	pla
   003C 68            [ 4]  111 	pla
   003D 68            [ 4]  112 	pla
   003E 68            [ 4]  113 	pla
   003F A5*00         [ 3]  114 	lda	*(__TEMP+0)
   0041 4Cr59r03      [ 3]  115 	jmp	00119$
   0044                     116 00102$:
                            117 ;	../mbrtoc16.c: 44: if(!ps)
   0044 BA            [ 2]  118 	tsx
   0045 BD 19 01      [ 5]  119 	lda	0x119,x
   0048 1D 1A 01      [ 5]  120 	ora	0x11a,x
   004B D0 0A         [ 4]  121 	bne	00104$
                            122 ;	../mbrtoc16.c: 45: ps = &sps;
   004D A9r00         [ 2]  123 	lda	#_mbrtoc16_sps_65536_16
   004F 9D 19 01      [ 5]  124 	sta	0x119,x
   0052 A9s00         [ 2]  125 	lda	#>_mbrtoc16_sps_65536_16
   0054 9D 1A 01      [ 5]  126 	sta	0x11a,x
   0057                     127 00104$:
                            128 ;	../mbrtoc16.c: 47: if(!ps->c[0] && (ps->c[1] || ps->c[2]))
   0057 BA            [ 2]  129 	tsx
   0058 BD 19 01      [ 5]  130 	lda	0x119,x
   005B 9D 0B 01      [ 5]  131 	sta	0x10b,x
   005E BD 1A 01      [ 5]  132 	lda	0x11a,x
   0061 9D 0C 01      [ 5]  133 	sta	0x10c,x
   0064 BD 0B 01      [ 5]  134 	lda	0x10b,x
   0067 85*00         [ 3]  135 	sta	*(__DPTR+0)
   0069 BD 0C 01      [ 5]  136 	lda	0x10c,x
   006C 85*01         [ 3]  137 	sta	*(__DPTR+1)
   006E A0 00         [ 2]  138 	ldy	#0x00
   0070 B1*00         [ 6]  139 	lda	[__DPTR],y
   0072 F0 03         [ 4]  140 	beq	00159$
   0074 4Cr6Er01      [ 3]  141 	jmp	00108$
   0077                     142 00159$:
   0077 BD 0B 01      [ 5]  143 	lda	0x10b,x
   007A 9D 09 01      [ 5]  144 	sta	0x109,x
   007D BD 0C 01      [ 5]  145 	lda	0x10c,x
   0080 9D 0A 01      [ 5]  146 	sta	0x10a,x
   0083 BD 09 01      [ 5]  147 	lda	0x109,x
   0086 85*00         [ 3]  148 	sta	*(__DPTR+0)
   0088 BD 0A 01      [ 5]  149 	lda	0x10a,x
   008B 85*01         [ 3]  150 	sta	*(__DPTR+1)
   008D C8            [ 2]  151 	iny
   008E B1*00         [ 6]  152 	lda	[__DPTR],y
   0090 D0 1E         [ 4]  153 	bne	00107$
   0092 BD 0B 01      [ 5]  154 	lda	0x10b,x
   0095 9D 09 01      [ 5]  155 	sta	0x109,x
   0098 BD 0C 01      [ 5]  156 	lda	0x10c,x
   009B 9D 0A 01      [ 5]  157 	sta	0x10a,x
   009E BD 09 01      [ 5]  158 	lda	0x109,x
   00A1 85*00         [ 3]  159 	sta	*(__DPTR+0)
   00A3 BD 0A 01      [ 5]  160 	lda	0x10a,x
   00A6 85*01         [ 3]  161 	sta	*(__DPTR+1)
   00A8 C8            [ 2]  162 	iny
   00A9 B1*00         [ 6]  163 	lda	[__DPTR],y
   00AB D0 03         [ 4]  164 	bne	00161$
   00AD 4Cr6Er01      [ 3]  165 	jmp	00108$
   00B0                     166 00161$:
   00B0                     167 00107$:
                            168 ;	../mbrtoc16.c: 49: if(pc16)
   00B0 BA            [ 2]  169 	tsx
   00B1 BD 11 01      [ 5]  170 	lda	0x111,x
   00B4 1D 12 01      [ 5]  171 	ora	0x112,x
   00B7 F0 76         [ 4]  172 	beq	00106$
                            173 ;	../mbrtoc16.c: 50: *pc16 = ps->c[1] + (ps->c[2] << 8);
   00B9 BD 19 01      [ 5]  174 	lda	0x119,x
   00BC 9D 09 01      [ 5]  175 	sta	0x109,x
   00BF BD 1A 01      [ 5]  176 	lda	0x11a,x
   00C2 9D 0A 01      [ 5]  177 	sta	0x10a,x
   00C5 BD 09 01      [ 5]  178 	lda	0x109,x
   00C8 9D 0B 01      [ 5]  179 	sta	0x10b,x
   00CB BD 0A 01      [ 5]  180 	lda	0x10a,x
   00CE 9D 0C 01      [ 5]  181 	sta	0x10c,x
   00D1 BD 0B 01      [ 5]  182 	lda	0x10b,x
   00D4 85*00         [ 3]  183 	sta	*(__DPTR+0)
   00D6 BD 0C 01      [ 5]  184 	lda	0x10c,x
   00D9 85*01         [ 3]  185 	sta	*(__DPTR+1)
   00DB A0 01         [ 2]  186 	ldy	#0x01
   00DD B1*00         [ 6]  187 	lda	[__DPTR],y
   00DF A8            [ 2]  188 	tay
   00E0 9D 0B 01      [ 5]  189 	sta	0x10b,x
   00E3 A9 00         [ 2]  190 	lda	#0x00
   00E5 9D 0C 01      [ 5]  191 	sta	0x10c,x
   00E8 BD 09 01      [ 5]  192 	lda	0x109,x
   00EB 85*00         [ 3]  193 	sta	*(__DPTR+0)
   00ED BD 0A 01      [ 5]  194 	lda	0x10a,x
   00F0 85*01         [ 3]  195 	sta	*(__DPTR+1)
   00F2 A0 02         [ 2]  196 	ldy	#0x02
   00F4 B1*00         [ 6]  197 	lda	[__DPTR],y
   00F6 AA            [ 2]  198 	tax
   00F7 A9 00         [ 2]  199 	lda	#0x00
   00F9 18            [ 2]  200 	clc
   00FA 86*00         [ 3]  201 	stx	*(__TEMP+0)
   00FC BA            [ 2]  202 	tsx
   00FD 7D 0B 01      [ 5]  203 	adc	0x10b,x
   0100 08            [ 3]  204 	php
   0101 A6*00         [ 3]  205 	ldx	*(__TEMP+0)
   0103 28            [ 4]  206 	plp
   0104 48            [ 3]  207 	pha
   0105 8A            [ 2]  208 	txa
   0106 86*00         [ 3]  209 	stx	*(__TEMP+0)
   0108 BA            [ 2]  210 	tsx
   0109 7D 0D 01      [ 5]  211 	adc	0x10d,x
   010C 08            [ 3]  212 	php
   010D A6*00         [ 3]  213 	ldx	*(__TEMP+0)
   010F 28            [ 4]  214 	plp
   0110 AA            [ 2]  215 	tax
   0111 68            [ 4]  216 	pla
   0112 85*00         [ 3]  217 	sta	*(__TEMP+0)
   0114 86*01         [ 3]  218 	stx	*(__TEMP+1)
   0116 BA            [ 2]  219 	tsx
   0117 BD 11 01      [ 5]  220 	lda	0x111,x
   011A 85*00         [ 3]  221 	sta	*(__DPTR+0)
   011C BD 12 01      [ 5]  222 	lda	0x112,x
   011F 85*01         [ 3]  223 	sta	*(__DPTR+1)
   0121 A5*00         [ 3]  224 	lda	*(__TEMP+0)
   0123 A6*01         [ 3]  225 	ldx	*(__TEMP+1)
   0125 A0 00         [ 2]  226 	ldy	#0x00
   0127 91*00         [ 6]  227 	sta	[__DPTR],y
   0129 8A            [ 2]  228 	txa
   012A C8            [ 2]  229 	iny
   012B 91*00         [ 6]  230 	sta	[__DPTR],y
   012D A6*01         [ 3]  231 	ldx	*(__TEMP+1)
   012F                     232 00106$:
                            233 ;	../mbrtoc16.c: 51: ps->c[1] = ps->c[2] = 0;
   012F BA            [ 2]  234 	tsx
   0130 BD 19 01      [ 5]  235 	lda	0x119,x
   0133 9D 09 01      [ 5]  236 	sta	0x109,x
   0136 BD 1A 01      [ 5]  237 	lda	0x11a,x
   0139 9D 0A 01      [ 5]  238 	sta	0x10a,x
   013C BD 09 01      [ 5]  239 	lda	0x109,x
   013F 9D 0B 01      [ 5]  240 	sta	0x10b,x
   0142 BD 0A 01      [ 5]  241 	lda	0x10a,x
   0145 9D 0C 01      [ 5]  242 	sta	0x10c,x
   0148 BD 09 01      [ 5]  243 	lda	0x109,x
   014B 85*00         [ 3]  244 	sta	*(__DPTR+0)
   014D BD 0A 01      [ 5]  245 	lda	0x10a,x
   0150 85*01         [ 3]  246 	sta	*(__DPTR+1)
   0152 A9 00         [ 2]  247 	lda	#0x00
   0154 A0 02         [ 2]  248 	ldy	#0x02
   0156 91*00         [ 6]  249 	sta	[__DPTR],y
   0158 BD 0B 01      [ 5]  250 	lda	0x10b,x
   015B 85*00         [ 3]  251 	sta	*(__DPTR+0)
   015D BD 0C 01      [ 5]  252 	lda	0x10c,x
   0160 85*01         [ 3]  253 	sta	*(__DPTR+1)
   0162 A9 00         [ 2]  254 	lda	#0x00
   0164 88            [ 2]  255 	dey
   0165 91*00         [ 6]  256 	sta	[__DPTR],y
                            257 ;	../mbrtoc16.c: 52: return(-3);
   0167 A9 FD         [ 2]  258 	lda	#0xfd
   0169 A2 FF         [ 2]  259 	ldx	#0xff
   016B 4Cr59r03      [ 3]  260 	jmp	00119$
   016E                     261 00108$:
                            262 ;	../mbrtoc16.c: 55: ret = mbrtowc(&codepoint, s, n, ps);
   016E BA            [ 2]  263 	tsx
   016F E8            [ 2]  264 	inx
   0170 8A            [ 2]  265 	txa
   0171 A2 01         [ 2]  266 	ldx	#0x01
   0173 48            [ 3]  267 	pha
   0174 8A            [ 2]  268 	txa
   0175 BA            [ 2]  269 	tsx
   0176 9D 0B 01      [ 5]  270 	sta	0x10b,x
   0179 68            [ 4]  271 	pla
   017A 9D 0A 01      [ 5]  272 	sta	0x10a,x
   017D BD 1B 01      [ 5]  273 	lda	0x11b, x
   0180 48            [ 3]  274 	pha
   0181 BD 1A 01      [ 5]  275 	lda	0x11a,x
   0184 48            [ 3]  276 	pha
   0185 BD 19 01      [ 5]  277 	lda	0x119,x
   0188 48            [ 3]  278 	pha
   0189 BD 18 01      [ 5]  279 	lda	0x118,x
   018C 48            [ 3]  280 	pha
   018D BD 17 01      [ 5]  281 	lda	0x117,x
   0190 48            [ 3]  282 	pha
   0191 BD 16 01      [ 5]  283 	lda	0x116,x
   0194 48            [ 3]  284 	pha
   0195 BD 0B 01      [ 5]  285 	lda	0x10b,x
   0198 AA            [ 2]  286 	tax
   0199 86*00         [ 3]  287 	stx	*(__TEMP+0)
   019B BA            [ 2]  288 	tsx
   019C BD 0F 01      [ 5]  289 	lda	0x10f,x
   019F 08            [ 3]  290 	php
   01A0 A6*00         [ 3]  291 	ldx	*(__TEMP+0)
   01A2 28            [ 4]  292 	plp
   01A3 20r00r00      [ 6]  293 	jsr	_mbrtowc
   01A6 86*00         [ 3]  294 	stx	*(__TEMP+0)
   01A8 BA            [ 2]  295 	tsx
   01A9 9D 15 01      [ 5]  296 	sta	0x115,x
   01AC A6*00         [ 3]  297 	ldx	*(__TEMP+0)
   01AE 8A            [ 2]  298 	txa
   01AF BA            [ 2]  299 	tsx
   01B0 9D 16 01      [ 5]  300 	sta	0x116,x
   01B3 A6*00         [ 3]  301 	ldx	*(__TEMP+0)
   01B5 85*00         [ 3]  302 	sta	*(__TEMP+0)
   01B7 68            [ 4]  303 	pla
   01B8 68            [ 4]  304 	pla
   01B9 68            [ 4]  305 	pla
   01BA 68            [ 4]  306 	pla
   01BB 68            [ 4]  307 	pla
   01BC 68            [ 4]  308 	pla
                            309 ;	../mbrtoc16.c: 57: if(ret > MB_LEN_MAX)
   01BD BA            [ 2]  310 	tsx 
   01BE A9 04         [ 2]  311 	lda	#0x04
   01C0 38            [ 2]  312 	sec
   01C1 FD 0F 01      [ 5]  313 	sbc	0x10f,x
   01C4 A9 00         [ 2]  314 	lda	#0x00
   01C6 FD 10 01      [ 5]  315 	sbc	0x110,x
   01C9 B0 11         [ 4]  316 	bcs	00112$
                            317 ;	../mbrtoc16.c: 58: return(ret);
   01CB BD 10 01      [ 5]  318 	lda	0x110,x
   01CE AA            [ 2]  319 	tax
   01CF 86*00         [ 3]  320 	stx	*(__TEMP+0)
   01D1 BA            [ 2]  321 	tsx
   01D2 BD 0F 01      [ 5]  322 	lda	0x10f,x
   01D5 08            [ 3]  323 	php
   01D6 A6*00         [ 3]  324 	ldx	*(__TEMP+0)
   01D8 28            [ 4]  325 	plp
   01D9 4Cr59r03      [ 3]  326 	jmp	00119$
   01DC                     327 00112$:
                            328 ;	../mbrtoc16.c: 60: if (codepoint <= 0xffff) // Basic multilingual plane
   01DC BA            [ 2]  329 	tsx
   01DD A9 FF         [ 2]  330 	lda	#0xff
   01DF 38            [ 2]  331 	sec
   01E0 FD 01 01      [ 5]  332 	sbc	0x101,x
   01E3 A9 FF         [ 2]  333 	lda	#0xff
   01E5 FD 02 01      [ 5]  334 	sbc	0x102,x
   01E8 A9 00         [ 2]  335 	lda	#0x00
   01EA FD 03 01      [ 5]  336 	sbc	0x103,x
   01ED A9 00         [ 2]  337 	lda	#0x00
   01EF FD 04 01      [ 5]  338 	sbc	0x104,x
   01F2 90 3D         [ 4]  339 	bcc	00116$
                            340 ;	../mbrtoc16.c: 62: if(pc16)
   01F4 BD 11 01      [ 5]  341 	lda	0x111,x
   01F7 1D 12 01      [ 5]  342 	ora	0x112,x
   01FA F0 23         [ 4]  343 	beq	00114$
                            344 ;	../mbrtoc16.c: 63: *pc16 = codepoint;
   01FC BD 01 01      [ 5]  345 	lda	0x101,x
   01FF 9D 09 01      [ 5]  346 	sta	0x109,x
   0202 BD 02 01      [ 5]  347 	lda	0x102,x
   0205 9D 0A 01      [ 5]  348 	sta	0x10a,x
   0208 BD 11 01      [ 5]  349 	lda	0x111,x
   020B 85*00         [ 3]  350 	sta	*(__DPTR+0)
   020D BD 12 01      [ 5]  351 	lda	0x112,x
   0210 85*01         [ 3]  352 	sta	*(__DPTR+1)
   0212 BD 09 01      [ 5]  353 	lda	0x109,x
   0215 A0 00         [ 2]  354 	ldy	#0x00
   0217 91*00         [ 6]  355 	sta	[__DPTR],y
   0219 BD 0A 01      [ 5]  356 	lda	0x10a,x
   021C C8            [ 2]  357 	iny
   021D 91*00         [ 6]  358 	sta	[__DPTR],y
   021F                     359 00114$:
                            360 ;	../mbrtoc16.c: 64: return(ret);
   021F BA            [ 2]  361 	tsx
   0220 BD 10 01      [ 5]  362 	lda	0x110,x
   0223 AA            [ 2]  363 	tax
   0224 86*00         [ 3]  364 	stx	*(__TEMP+0)
   0226 BA            [ 2]  365 	tsx
   0227 BD 0F 01      [ 5]  366 	lda	0x10f,x
   022A 08            [ 3]  367 	php
   022B A6*00         [ 3]  368 	ldx	*(__TEMP+0)
   022D 28            [ 4]  369 	plp
   022E 4Cr59r03      [ 3]  370 	jmp	00119$
   0231                     371 00116$:
                            372 ;	../mbrtoc16.c: 67: codepoint -= 0x100000;
   0231 BA            [ 2]  373 	tsx
   0232 BD 01 01      [ 5]  374 	lda	0x101,x
   0235 38            [ 2]  375 	sec
   0236 E9 00         [ 2]  376 	sbc	#0x00
   0238 9D 01 01      [ 5]  377 	sta	0x101,x
   023B BD 02 01      [ 5]  378 	lda	0x102,x
   023E E9 00         [ 2]  379 	sbc	#0x00
   0240 9D 02 01      [ 5]  380 	sta	0x102,x
   0243 BD 03 01      [ 5]  381 	lda	0x103,x
   0246 E9 10         [ 2]  382 	sbc	#0x10
   0248 9D 03 01      [ 5]  383 	sta	0x103,x
   024B BD 04 01      [ 5]  384 	lda	0x104,x
   024E E9 00         [ 2]  385 	sbc	#0x00
   0250 9D 04 01      [ 5]  386 	sta	0x104,x
                            387 ;	../mbrtoc16.c: 68: if(pc16)
   0253 BD 11 01      [ 5]  388 	lda	0x111,x
   0256 1D 12 01      [ 5]  389 	ora	0x112,x
   0259 D0 03         [ 4]  390 	bne	00166$
   025B 4CrD9r02      [ 3]  391 	jmp	00118$
   025E                     392 00166$:
                            393 ;	../mbrtoc16.c: 69: *pc16 = ((codepoint >> 10) & 0x3ff) + 0xd800;
   025E BD 02 01      [ 5]  394 	lda	0x102,x
   0261 85*00         [ 3]  395 	sta	*(__TEMP+0)
   0263 BD 03 01      [ 5]  396 	lda	0x103,x
   0266 AA            [ 2]  397 	tax
   0267 A5*00         [ 3]  398 	lda	*(__TEMP+0)
   0269 86*00         [ 3]  399 	stx	*(__TEMP+0)
   026B 46*00         [ 5]  400 	lsr	*(__TEMP+0)
   026D 6A            [ 2]  401 	ror	a
   026E 46*00         [ 5]  402 	lsr	*(__TEMP+0)
   0270 6A            [ 2]  403 	ror	a
   0271 A6*00         [ 3]  404 	ldx	*(__TEMP+0)
   0273 48            [ 3]  405 	pha
   0274 8A            [ 2]  406 	txa
   0275 BA            [ 2]  407 	tsx
   0276 9D 07 01      [ 5]  408 	sta	0x107,x
   0279 68            [ 4]  409 	pla
   027A 9D 06 01      [ 5]  410 	sta	0x106,x
   027D 85*00         [ 3]  411 	sta	*(__TEMP+0)
   027F BD 05 01      [ 5]  412 	lda	0x105,x
   0282 AA            [ 2]  413 	tax
   0283 A9 00         [ 2]  414 	lda	#0x00
   0285 86*00         [ 3]  415 	stx	*(__TEMP+0)
   0287 46*00         [ 5]  416 	lsr	*(__TEMP+0)
   0289 6A            [ 2]  417 	ror	a
   028A 46*00         [ 5]  418 	lsr	*(__TEMP+0)
   028C 6A            [ 2]  419 	ror	a
   028D BA            [ 2]  420 	tsx
   028E 1D 06 01      [ 5]  421 	ora	0x106,x
   0291 08            [ 3]  422 	php
   0292 A6*00         [ 3]  423 	ldx	*(__TEMP+0)
   0294 28            [ 4]  424 	plp
   0295 48            [ 3]  425 	pha
   0296 8A            [ 2]  426 	txa
   0297 BA            [ 2]  427 	tsx
   0298 9D 08 01      [ 5]  428 	sta	0x108,x
   029B 68            [ 4]  429 	pla
   029C 9D 07 01      [ 5]  430 	sta	0x107,x
   029F 48            [ 3]  431 	pha
   02A0 A9 00         [ 2]  432 	lda	#0x00
   02A2 9D 09 01      [ 5]  433 	sta	0x109,x
   02A5 68            [ 4]  434 	pla
   02A6 BD 06 01      [ 5]  435 	lda	0x106,x
   02A9 85*00         [ 3]  436 	sta	*(__TEMP+0)
   02AB BD 07 01      [ 5]  437 	lda	0x107,x
   02AE AA            [ 2]  438 	tax
   02AF 29 03         [ 2]  439 	and	#0x03
   02B1 AA            [ 2]  440 	tax
   02B2 A5*00         [ 3]  441 	lda	*(__TEMP+0)
   02B4 18            [ 2]  442 	clc
   02B5 48            [ 3]  443 	pha
   02B6 8A            [ 2]  444 	txa
   02B7 18            [ 2]  445 	clc
   02B8 69 D8         [ 2]  446 	adc	#0xd8
   02BA AA            [ 2]  447 	tax
   02BB 68            [ 4]  448 	pla
   02BC 85*00         [ 3]  449 	sta	*(__TEMP+0)
   02BE 86*01         [ 3]  450 	stx	*(__TEMP+1)
   02C0 BA            [ 2]  451 	tsx
   02C1 BD 11 01      [ 5]  452 	lda	0x111,x
   02C4 85*00         [ 3]  453 	sta	*(__DPTR+0)
   02C6 BD 12 01      [ 5]  454 	lda	0x112,x
   02C9 85*01         [ 3]  455 	sta	*(__DPTR+1)
   02CB A5*00         [ 3]  456 	lda	*(__TEMP+0)
   02CD A6*01         [ 3]  457 	ldx	*(__TEMP+1)
   02CF A0 00         [ 2]  458 	ldy	#0x00
   02D1 91*00         [ 6]  459 	sta	[__DPTR],y
   02D3 8A            [ 2]  460 	txa
   02D4 C8            [ 2]  461 	iny
   02D5 91*00         [ 6]  462 	sta	[__DPTR],y
   02D7 A6*01         [ 3]  463 	ldx	*(__TEMP+1)
   02D9                     464 00118$:
                            465 ;	../mbrtoc16.c: 70: low_surrogate = (codepoint & 0x3ff) + 0xdc00;
   02D9 BA            [ 2]  466 	tsx
   02DA BD 01 01      [ 5]  467 	lda	0x101,x
   02DD 85*00         [ 3]  468 	sta	*(__TEMP+0)
   02DF BD 02 01      [ 5]  469 	lda	0x102,x
   02E2 AA            [ 2]  470 	tax
   02E3 29 03         [ 2]  471 	and	#0x03
   02E5 AA            [ 2]  472 	tax
   02E6 A5*00         [ 3]  473 	lda	*(__TEMP+0)
   02E8 18            [ 2]  474 	clc
   02E9 86*00         [ 3]  475 	stx	*(__TEMP+0)
   02EB BA            [ 2]  476 	tsx
   02EC 9D 0D 01      [ 5]  477 	sta	0x10d,x
   02EF A6*00         [ 3]  478 	ldx	*(__TEMP+0)
   02F1 8A            [ 2]  479 	txa
   02F2 18            [ 2]  480 	clc
   02F3 69 DC         [ 2]  481 	adc	#0xdc
   02F5 86*00         [ 3]  482 	stx	*(__TEMP+0)
   02F7 BA            [ 2]  483 	tsx
   02F8 9D 0E 01      [ 5]  484 	sta	0x10e,x
                            485 ;	../mbrtoc16.c: 71: ps->c[0] = 0;
   02FB BA            [ 2]  486 	tsx
   02FC BD 19 01      [ 5]  487 	lda	0x119,x
   02FF 9D 05 01      [ 5]  488 	sta	0x105,x
   0302 BD 1A 01      [ 5]  489 	lda	0x11a,x
   0305 9D 06 01      [ 5]  490 	sta	0x106,x
   0308 BD 05 01      [ 5]  491 	lda	0x105,x
   030B 85*00         [ 3]  492 	sta	*(__DPTR+0)
   030D BD 06 01      [ 5]  493 	lda	0x106,x
   0310 85*01         [ 3]  494 	sta	*(__DPTR+1)
   0312 A9 00         [ 2]  495 	lda	#0x00
   0314 A8            [ 2]  496 	tay
   0315 91*00         [ 6]  497 	sta	[__DPTR],y
                            498 ;	../mbrtoc16.c: 72: ps->c[1] = low_surrogate & 0xff;
   0317 BD 05 01      [ 5]  499 	lda	0x105,x
   031A 9D 09 01      [ 5]  500 	sta	0x109,x
   031D BD 06 01      [ 5]  501 	lda	0x106,x
   0320 9D 0A 01      [ 5]  502 	sta	0x10a,x
   0323 BD 0D 01      [ 5]  503 	lda	0x10d,x
   0326 85*00         [ 3]  504 	sta	*(__TEMP+0)
   0328 BD 09 01      [ 5]  505 	lda	0x109,x
   032B 85*00         [ 3]  506 	sta	*(__DPTR+0)
   032D BD 0A 01      [ 5]  507 	lda	0x10a,x
   0330 85*01         [ 3]  508 	sta	*(__DPTR+1)
   0332 A5*00         [ 3]  509 	lda	*(__TEMP+0)
   0334 C8            [ 2]  510 	iny
   0335 91*00         [ 6]  511 	sta	[__DPTR],y
                            512 ;	../mbrtoc16.c: 73: ps->c[2] = low_surrogate >> 8;
   0337 BD 0E 01      [ 5]  513 	lda	0x10e,x
   033A 85*00         [ 3]  514 	sta	*(__TEMP+0)
   033C BD 05 01      [ 5]  515 	lda	0x105,x
   033F 85*00         [ 3]  516 	sta	*(__DPTR+0)
   0341 BD 06 01      [ 5]  517 	lda	0x106,x
   0344 85*01         [ 3]  518 	sta	*(__DPTR+1)
   0346 A5*00         [ 3]  519 	lda	*(__TEMP+0)
   0348 C8            [ 2]  520 	iny
   0349 91*00         [ 6]  521 	sta	[__DPTR],y
                            522 ;	../mbrtoc16.c: 75: return(ret);
   034B BD 10 01      [ 5]  523 	lda	0x110,x
   034E AA            [ 2]  524 	tax
   034F 86*00         [ 3]  525 	stx	*(__TEMP+0)
   0351 BA            [ 2]  526 	tsx
   0352 BD 0F 01      [ 5]  527 	lda	0x10f,x
   0355 08            [ 3]  528 	php
   0356 A6*00         [ 3]  529 	ldx	*(__TEMP+0)
   0358 28            [ 4]  530 	plp
   0359                     531 00119$:
                            532 ;	../mbrtoc16.c: 76: }
   0359 85*00         [ 3]  533 	sta	*(__TEMP+0)
   035B 86*01         [ 3]  534 	stx	*(__TEMP+1)
   035D BA            [ 2]  535 	tsx
   035E 8A            [ 2]  536 	txa
   035F 18            [ 2]  537 	clc
   0360 69 12         [ 2]  538 	adc	#0x12
   0362 AA            [ 2]  539 	tax
   0363 9A            [ 2]  540 	txs
   0364 A6*01         [ 3]  541 	ldx	*(__TEMP+1)
   0366 A5*00         [ 3]  542 	lda	*(__TEMP+0)
   0368 60            [ 6]  543 	rts
                            544 	.area CODE
                            545 	.area RODATA
                            546 	.area RODATA
   0000                     547 ___str_0:
   0000 00                  548 	.db 0x00
                            549 	.area CODE
                            550 	.area XINIT
                            551 	.area CABS    (ABS)
