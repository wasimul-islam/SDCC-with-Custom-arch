                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module cotf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _tancotf
                             12 	.globl _fabsf
                             13 	.globl _cotf
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; uninitialized external ram data
                             23 ;--------------------------------------------------------
                             24 	.area BSS
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area DABS    (ABS)
                             29 ;--------------------------------------------------------
                             30 ; initialized external ram data
                             31 ;--------------------------------------------------------
                             32 	.area DATA
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 	.area GSINIT
                             38 	.area GSFINAL
                             39 	.area GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 	.area _CODE
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area CODE
                             49 ;------------------------------------------------------------
                             50 ;Allocation info for local variables in function 'cotf'
                             51 ;------------------------------------------------------------
                             52 ;x                         Allocated to stack - sp +7
                             53 ;y                         Allocated to stack - sp +1
                             54 ;sloc0                     Allocated to stack - sp +1
                             55 ;------------------------------------------------------------
                             56 ;	../cotf.c: 37: float cotf(float x) _FLOAT_FUNC_REENTRANT
                             57 ;	-----------------------------------------
                             58 ;	 function cotf
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 4 bytes.
   0000                      62 _cotf:
   0000 48            [ 3]   63 	pha
   0001 48            [ 3]   64 	pha
   0002 48            [ 3]   65 	pha
   0003 48            [ 3]   66 	pha
                             67 ;	../cotf.c: 41: y=fabsf(x);
   0004 BA            [ 2]   68 	tsx
   0005 BD 0A 01      [ 5]   69 	lda	0x10a,x
   0008 48            [ 3]   70 	pha
   0009 BD 09 01      [ 5]   71 	lda	0x109,x
   000C 48            [ 3]   72 	pha
   000D BD 08 01      [ 5]   73 	lda	0x108,x
   0010 48            [ 3]   74 	pha
   0011 BD 07 01      [ 5]   75 	lda	0x107,x
   0014 48            [ 3]   76 	pha
   0015 20r00r00      [ 6]   77 	jsr	_fabsf
   0018 86*00         [ 3]   78 	stx	*(__TEMP+0)
   001A BA            [ 2]   79 	tsx
   001B 9D 05 01      [ 5]   80 	sta	0x105,x
   001E A6*00         [ 3]   81 	ldx	*(__TEMP+0)
   0020 8A            [ 2]   82 	txa
   0021 BA            [ 2]   83 	tsx
   0022 9D 06 01      [ 5]   84 	sta	0x106,x
   0025 A6*00         [ 3]   85 	ldx	*(__TEMP+0)
   0027 A5*00         [ 3]   86 	lda	*___SDCC_m6502_ret2
   0029 BA            [ 2]   87 	tsx
   002A 9D 07 01      [ 5]   88 	sta	0x107,x
   002D A5*00         [ 3]   89 	lda	*___SDCC_m6502_ret3
   002F 9D 08 01      [ 5]   90 	sta	0x108,x
   0032 85*00         [ 3]   91 	sta	*(__TEMP+0)
   0034 68            [ 4]   92 	pla
   0035 68            [ 4]   93 	pla
   0036 68            [ 4]   94 	pla
   0037 68            [ 4]   95 	pla
                             96 ;	../cotf.c: 42: if (y<1.0E-30) //This one requires more thinking...
   0038 A9 0D         [ 2]   97 	lda	#0x0d
   003A 48            [ 3]   98 	pha
   003B A9 A2         [ 2]   99 	lda	#0xa2
   003D 48            [ 3]  100 	pha
   003E A9 42         [ 2]  101 	lda	#0x42
   0040 48            [ 3]  102 	pha
   0041 A9 60         [ 2]  103 	lda	#0x60
   0043 48            [ 3]  104 	pha
   0044 BD 08 01      [ 5]  105 	lda	0x108,x
   0047 48            [ 3]  106 	pha
   0048 BD 07 01      [ 5]  107 	lda	0x107,x
   004B 48            [ 3]  108 	pha
   004C BD 06 01      [ 5]  109 	lda	0x106,x
   004F 48            [ 3]  110 	pha
   0050 BD 05 01      [ 5]  111 	lda	0x105,x
   0053 48            [ 3]  112 	pha
   0054 20r00r00      [ 6]  113 	jsr	___fslt
   0057 85*00         [ 3]  114 	sta	*(__TEMP+0)
   0059 86*01         [ 3]  115 	stx	*(__TEMP+1)
   005B BA            [ 2]  116 	tsx
   005C 8A            [ 2]  117 	txa
   005D 18            [ 2]  118 	clc
   005E 69 08         [ 2]  119 	adc	#0x08
   0060 AA            [ 2]  120 	tax
   0061 9A            [ 2]  121 	txs
   0062 A6*01         [ 3]  122 	ldx	*(__TEMP+1)
   0064 A5*00         [ 3]  123 	lda	*(__TEMP+0)
   0066 F0 4C         [ 4]  124 	beq	00105$
                            125 ;	../cotf.c: 44: errno = ERANGE;
   0068 A2 22         [ 2]  126 	ldx	#0x22
   006A 8Er00r00      [ 4]  127 	stx	_errno
   006D A2 00         [ 2]  128 	ldx	#0x00
   006F 8Er01r00      [ 4]  129 	stx	(_errno + 1)
                            130 ;	../cotf.c: 45: if (x<0.0)
   0072 8A            [ 2]  131 	txa
   0073 48            [ 3]  132 	pha
   0074 48            [ 3]  133 	pha
   0075 48            [ 3]  134 	pha
   0076 48            [ 3]  135 	pha
   0077 BA            [ 2]  136 	tsx
   0078 BD 0E 01      [ 5]  137 	lda	0x10e,x
   007B 48            [ 3]  138 	pha
   007C BD 0D 01      [ 5]  139 	lda	0x10d,x
   007F 48            [ 3]  140 	pha
   0080 BD 0C 01      [ 5]  141 	lda	0x10c,x
   0083 48            [ 3]  142 	pha
   0084 BD 0B 01      [ 5]  143 	lda	0x10b,x
   0087 48            [ 3]  144 	pha
   0088 20r00r00      [ 6]  145 	jsr	___fslt
   008B 85*00         [ 3]  146 	sta	*(__TEMP+0)
   008D 86*01         [ 3]  147 	stx	*(__TEMP+1)
   008F BA            [ 2]  148 	tsx
   0090 8A            [ 2]  149 	txa
   0091 18            [ 2]  150 	clc
   0092 69 08         [ 2]  151 	adc	#0x08
   0094 AA            [ 2]  152 	tax
   0095 9A            [ 2]  153 	txs
   0096 A6*01         [ 3]  154 	ldx	*(__TEMP+1)
   0098 A5*00         [ 3]  155 	lda	*(__TEMP+0)
   009A F0 0C         [ 4]  156 	beq	00102$
                            157 ;	../cotf.c: 46: return -HUGE_VALF;
   009C A9 FF         [ 2]  158 	lda	#0xff
   009E AA            [ 2]  159 	tax
   009F A0 7F         [ 2]  160 	ldy	#0x7f
   00A1 84*00         [ 3]  161 	sty	*___SDCC_m6502_ret2
   00A3 85*00         [ 3]  162 	sta	*___SDCC_m6502_ret3
   00A5 4Cr04r01      [ 3]  163 	jmp	00106$
   00A8                     164 00102$:
                            165 ;	../cotf.c: 48: return +HUGE_VALF;
   00A8 A9 FF         [ 2]  166 	lda	#0xff
   00AA AA            [ 2]  167 	tax
   00AB A0 7F         [ 2]  168 	ldy	#0x7f
   00AD 84*00         [ 3]  169 	sty	*___SDCC_m6502_ret2
   00AF 84*00         [ 3]  170 	sty	*___SDCC_m6502_ret3
   00B1 4Cr04r01      [ 3]  171 	jmp	00106$
   00B4                     172 00105$:
                            173 ;	../cotf.c: 50: return tancotf(x, 1);
   00B4 A9 01         [ 2]  174 	lda	#0x01
   00B6 48            [ 3]  175 	pha
   00B7 BA            [ 2]  176 	tsx
   00B8 BD 0B 01      [ 5]  177 	lda	0x10b,x
   00BB 48            [ 3]  178 	pha
   00BC BD 0A 01      [ 5]  179 	lda	0x10a,x
   00BF 48            [ 3]  180 	pha
   00C0 BD 09 01      [ 5]  181 	lda	0x109,x
   00C3 48            [ 3]  182 	pha
   00C4 BD 08 01      [ 5]  183 	lda	0x108,x
   00C7 48            [ 3]  184 	pha
   00C8 20r00r00      [ 6]  185 	jsr	_tancotf
   00CB 86*00         [ 3]  186 	stx	*(__TEMP+0)
   00CD BA            [ 2]  187 	tsx
   00CE 9D 06 01      [ 5]  188 	sta	0x106,x
   00D1 A6*00         [ 3]  189 	ldx	*(__TEMP+0)
   00D3 8A            [ 2]  190 	txa
   00D4 BA            [ 2]  191 	tsx
   00D5 9D 07 01      [ 5]  192 	sta	0x107,x
   00D8 A6*00         [ 3]  193 	ldx	*(__TEMP+0)
   00DA A5*00         [ 3]  194 	lda	*___SDCC_m6502_ret2
   00DC BA            [ 2]  195 	tsx
   00DD 9D 08 01      [ 5]  196 	sta	0x108,x
   00E0 A5*00         [ 3]  197 	lda	*___SDCC_m6502_ret3
   00E2 9D 09 01      [ 5]  198 	sta	0x109,x
   00E5 85*00         [ 3]  199 	sta	*(__TEMP+0)
   00E7 68            [ 4]  200 	pla
   00E8 68            [ 4]  201 	pla
   00E9 68            [ 4]  202 	pla
   00EA 68            [ 4]  203 	pla
   00EB 68            [ 4]  204 	pla
   00EC BD 09 01      [ 5]  205 	lda	0x109, x
   00EF 85*00         [ 3]  206 	sta	*___SDCC_m6502_ret3
   00F1 BD 08 01      [ 5]  207 	lda	0x108,x
   00F4 85*00         [ 3]  208 	sta	*___SDCC_m6502_ret2
   00F6 BD 07 01      [ 5]  209 	lda	0x107,x
   00F9 AA            [ 2]  210 	tax
   00FA 86*00         [ 3]  211 	stx	*(__TEMP+0)
   00FC BA            [ 2]  212 	tsx
   00FD BD 01 01      [ 5]  213 	lda	0x101,x
   0100 08            [ 3]  214 	php
   0101 A6*00         [ 3]  215 	ldx	*(__TEMP+0)
   0103 28            [ 4]  216 	plp
   0104                     217 00106$:
                            218 ;	../cotf.c: 51: }
   0104 85*00         [ 3]  219 	sta	*(__TEMP+0)
   0106 68            [ 4]  220 	pla
   0107 68            [ 4]  221 	pla
   0108 68            [ 4]  222 	pla
   0109 68            [ 4]  223 	pla
   010A A5*00         [ 3]  224 	lda	*(__TEMP+0)
   010C 60            [ 6]  225 	rts
                            226 	.area CODE
                            227 	.area RODATA
                            228 	.area XINIT
                            229 	.area CABS    (ABS)
