                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _mulint
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __mulint
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '_mulint'
                             49 ;------------------------------------------------------------
                             50 ;b                         Allocated to stack - sp +19
                             51 ;a                         Allocated to stack - sp +15
                             52 ;x                         Allocated to stack - sp +13
                             53 ;y                         Allocated to stack - sp +11
                             54 ;t                         Allocated to stack - sp +1
                             55 ;sloc0                     Allocated to stack - sp +9
                             56 ;sloc1                     Allocated to stack - sp +8
                             57 ;sloc2                     Allocated to stack - sp +7
                             58 ;sloc3                     Allocated to stack - sp +5
                             59 ;sloc4                     Allocated to stack - sp +3
                             60 ;------------------------------------------------------------
                             61 ;	../_mulint.c: 232: _mulint (int a, int b) __SDCC_NONBANKED
                             62 ;	-----------------------------------------
                             63 ;	 function _mulint
                             64 ;	-----------------------------------------
                             65 ;	Register assignment is optimal.
                             66 ;	Stack space usage: 16 bytes.
   0000                      67 __mulint:
   0000 85*00         [ 3]   68 	sta	*(__TEMP+0)
   0002 8A            [ 2]   69 	txa
   0003 48            [ 3]   70 	pha
   0004 A5*00         [ 3]   71 	lda	*(__TEMP+0)
   0006 48            [ 3]   72 	pha
   0007 85*00         [ 3]   73 	sta	*(__TEMP+0)
   0009 86*01         [ 3]   74 	stx	*(__TEMP+1)
   000B BA            [ 2]   75 	tsx
   000C 8A            [ 2]   76 	txa
   000D 18            [ 2]   77 	clc
   000E 69 F2         [ 2]   78 	adc	#0xf2
   0010 AA            [ 2]   79 	tax
   0011 9A            [ 2]   80 	txs
   0012 A6*01         [ 3]   81 	ldx	*(__TEMP+1)
   0014 A5*00         [ 3]   82 	lda	*(__TEMP+0)
                             83 ;	../_mulint.c: 244: x = (union uu *)&a;
   0016 BA            [ 2]   84 	tsx
   0017 8A            [ 2]   85 	txa
   0018 18            [ 2]   86 	clc
   0019 69 0F         [ 2]   87 	adc	#0x0f
   001B A2 01         [ 2]   88 	ldx	#0x01
   001D 48            [ 3]   89 	pha
   001E 8A            [ 2]   90 	txa
   001F BA            [ 2]   91 	tsx
   0020 9D 0F 01      [ 5]   92 	sta	0x10f,x
   0023 68            [ 4]   93 	pla
   0024 9D 0E 01      [ 5]   94 	sta	0x10e,x
   0027 BD 0F 01      [ 5]   95 	lda	0x10f,x
                             96 ;	../_mulint.c: 245: y = (union uu *)&b;
   002A 8A            [ 2]   97 	txa
   002B 18            [ 2]   98 	clc
   002C 69 14         [ 2]   99 	adc	#0x14
   002E A2 01         [ 2]  100 	ldx	#0x01
   0030 48            [ 3]  101 	pha
   0031 8A            [ 2]  102 	txa
   0032 BA            [ 2]  103 	tsx
   0033 9D 0D 01      [ 5]  104 	sta	0x10d,x
   0036 68            [ 4]  105 	pla
   0037 9D 0C 01      [ 5]  106 	sta	0x10c,x
   003A BD 0D 01      [ 5]  107 	lda	0x10d,x
                            108 ;	../_mulint.c: 249: t.t = (unsigned char)a * (unsigned char)b;
   003D E8            [ 2]  109 	inx
   003E E8            [ 2]  110 	inx
   003F 8A            [ 2]  111 	txa
   0040 9D 08 01      [ 5]  112 	sta	0x108,x
   0043 A9 01         [ 2]  113 	lda	#0x01
   0045 9D 09 01      [ 5]  114 	sta	0x109,x
   0048 BD 0E 01      [ 5]  115 	lda	0x10e,x
   004B A8            [ 2]  116 	tay
   004C BD 12 01      [ 5]  117 	lda	0x112,x
   004F AA            [ 2]  118 	tax
   0050 98            [ 2]  119 	tya
   0051 20r00r00      [ 6]  120 	jsr	__muluchar
   0054 85*00         [ 3]  121 	sta	*(__TEMP+0)
   0056 86*01         [ 3]  122 	stx	*(__TEMP+1)
   0058 BA            [ 2]  123 	tsx
   0059 BD 09 01      [ 5]  124 	lda	0x109,x
   005C 85*00         [ 3]  125 	sta	*(__DPTR+0)
   005E BD 0A 01      [ 5]  126 	lda	0x10a,x
   0061 85*01         [ 3]  127 	sta	*(__DPTR+1)
   0063 A5*00         [ 3]  128 	lda	*(__TEMP+0)
   0065 A6*01         [ 3]  129 	ldx	*(__TEMP+1)
   0067 A0 00         [ 2]  130 	ldy	#0x00
   0069 91*00         [ 6]  131 	sta	[__DPTR],y
   006B 8A            [ 2]  132 	txa
   006C C8            [ 2]  133 	iny
   006D 91*00         [ 6]  134 	sta	[__DPTR],y
                            135 ;	../_mulint.c: 250: t.s.hi += ((unsigned char)a * y->s.hi) + (x->s.hi * (unsigned char)b);
   006F BA            [ 2]  136 	tsx
   0070 E8            [ 2]  137 	inx
   0071 8A            [ 2]  138 	txa
   0072 9D 08 01      [ 5]  139 	sta	0x108,x
   0075 98            [ 2]  140 	tya
   0076 9D 09 01      [ 5]  141 	sta	0x109,x
   0079 BD 08 01      [ 5]  142 	lda	0x108,x
   007C 85*00         [ 3]  143 	sta	*(__DPTR+0)
   007E BD 09 01      [ 5]  144 	lda	0x109,x
   0081 85*01         [ 3]  145 	sta	*(__DPTR+1)
   0083 B1*00         [ 6]  146 	lda	[__DPTR],y
   0085 9D 07 01      [ 5]  147 	sta	0x107,x
   0088 BD 0E 01      [ 5]  148 	lda	0x10e,x
   008B 9D 06 01      [ 5]  149 	sta	0x106,x
   008E BD 0A 01      [ 5]  150 	lda	0x10a,x
   0091 9D 04 01      [ 5]  151 	sta	0x104,x
   0094 BD 0B 01      [ 5]  152 	lda	0x10b,x
   0097 9D 05 01      [ 5]  153 	sta	0x105,x
   009A BD 04 01      [ 5]  154 	lda	0x104,x
   009D 85*00         [ 3]  155 	sta	*(__DPTR+0)
   009F BD 05 01      [ 5]  156 	lda	0x105,x
   00A2 85*01         [ 3]  157 	sta	*(__DPTR+1)
   00A4 B1*00         [ 6]  158 	lda	[__DPTR],y
   00A6 AA            [ 2]  159 	tax
   00A7 86*00         [ 3]  160 	stx	*(__TEMP+0)
   00A9 BA            [ 2]  161 	tsx
   00AA BD 07 01      [ 5]  162 	lda	0x107,x
   00AD 08            [ 3]  163 	php
   00AE A6*00         [ 3]  164 	ldx	*(__TEMP+0)
   00B0 28            [ 4]  165 	plp
   00B1 20r00r00      [ 6]  166 	jsr	__muluchar
   00B4 86*00         [ 3]  167 	stx	*(__TEMP+0)
   00B6 BA            [ 2]  168 	tsx
   00B7 9D 05 01      [ 5]  169 	sta	0x105,x
   00BA BA            [ 2]  170 	tsx
   00BB BD 0D 01      [ 5]  171 	lda	0x10d,x
   00BE 9D 03 01      [ 5]  172 	sta	0x103,x
   00C1 BD 0E 01      [ 5]  173 	lda	0x10e,x
   00C4 9D 04 01      [ 5]  174 	sta	0x104,x
   00C7 BD 03 01      [ 5]  175 	lda	0x103,x
   00CA 85*00         [ 3]  176 	sta	*(__DPTR+0)
   00CC BD 04 01      [ 5]  177 	lda	0x104,x
   00CF 85*01         [ 3]  178 	sta	*(__DPTR+1)
   00D1 A0 01         [ 2]  179 	ldy	#0x01
   00D3 B1*00         [ 6]  180 	lda	[__DPTR],y
   00D5 A8            [ 2]  181 	tay
   00D6 BD 13 01      [ 5]  182 	lda	0x113,x
   00D9 AA            [ 2]  183 	tax
   00DA 98            [ 2]  184 	tya
   00DB 20r00r00      [ 6]  185 	jsr	__muluchar
   00DE BA            [ 2]  186 	tsx
   00DF 18            [ 2]  187 	clc
   00E0 7D 05 01      [ 5]  188 	adc	0x105,x
   00E3 18            [ 2]  189 	clc
   00E4 7D 08 01      [ 5]  190 	adc	0x108,x
   00E7 85*00         [ 3]  191 	sta	*(__TEMP+0)
   00E9 BD 09 01      [ 5]  192 	lda	0x109,x
   00EC 85*00         [ 3]  193 	sta	*(__DPTR+0)
   00EE BD 0A 01      [ 5]  194 	lda	0x10a,x
   00F1 85*01         [ 3]  195 	sta	*(__DPTR+1)
   00F3 A5*00         [ 3]  196 	lda	*(__TEMP+0)
   00F5 A0 01         [ 2]  197 	ldy	#0x01
   00F7 91*00         [ 6]  198 	sta	[__DPTR],y
                            199 ;	../_mulint.c: 252: return t.t;
   00F9 E8            [ 2]  200 	inx
   00FA 8A            [ 2]  201 	txa
   00FB A2 01         [ 2]  202 	ldx	#0x01
   00FD 85*00         [ 3]  203 	sta	*(__DPTR+0)
   00FF 86*01         [ 3]  204 	stx	*(__DPTR+1)
   0101 B1*00         [ 6]  205 	lda	[__DPTR],y
   0103 AA            [ 2]  206 	tax
   0104 88            [ 2]  207 	dey
   0105 B1*00         [ 6]  208 	lda	[__DPTR],y
                            209 ;	../_mulint.c: 253: }
   0107 85*00         [ 3]  210 	sta	*(__TEMP+0)
   0109 86*01         [ 3]  211 	stx	*(__TEMP+1)
   010B BA            [ 2]  212 	tsx
   010C 8A            [ 2]  213 	txa
   010D 18            [ 2]  214 	clc
   010E 69 10         [ 2]  215 	adc	#0x10
   0110 AA            [ 2]  216 	tax
   0111 9A            [ 2]  217 	txs
   0112 A6*01         [ 3]  218 	ldx	*(__TEMP+1)
   0114 A5*00         [ 3]  219 	lda	*(__TEMP+0)
   0116 60            [ 6]  220 	rts
                            221 	.area CODE
                            222 	.area RODATA
                            223 	.area XINIT
                            224 	.area CABS    (ABS)
