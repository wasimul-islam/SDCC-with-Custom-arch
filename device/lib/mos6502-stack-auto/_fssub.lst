                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _fssub
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___fssub
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '__fssub'
                             49 ;------------------------------------------------------------
                             50 ;a1                        Allocated to stack - sp +7
                             51 ;a2                        Allocated to stack - sp +11
                             52 ;neg                       Allocated to stack - sp +1
                             53 ;sloc0                     Allocated to stack - sp +1
                             54 ;------------------------------------------------------------
                             55 ;	../_fssub.c: 73: float __fssub (float a1, float a2)
                             56 ;	-----------------------------------------
                             57 ;	 function __fssub
                             58 ;	-----------------------------------------
                             59 ;	Register assignment is optimal.
                             60 ;	Stack space usage: 4 bytes.
   0000                      61 ___fssub:
   0000 48            [ 3]   62 	pha
   0001 48            [ 3]   63 	pha
   0002 48            [ 3]   64 	pha
   0003 48            [ 3]   65 	pha
                             66 ;	../_fssub.c: 75: float neg = -a1;
   0004 BA            [ 2]   67 	tsx
   0005 BD 07 01      [ 5]   68 	lda	0x107,x
   0008 9D 01 01      [ 5]   69 	sta	0x101,x
   000B BD 08 01      [ 5]   70 	lda	0x108,x
   000E 9D 02 01      [ 5]   71 	sta	0x102,x
   0011 BD 09 01      [ 5]   72 	lda	0x109,x
   0014 9D 03 01      [ 5]   73 	sta	0x103,x
   0017 BD 0A 01      [ 5]   74 	lda	0x10a,x
   001A 49 80         [ 2]   75 	eor	#0x80
   001C 9D 04 01      [ 5]   76 	sta	0x104,x
                             77 ;	../_fssub.c: 76: return -(neg + a2);
   001F BD 0E 01      [ 5]   78 	lda	0x10e,x
   0022 48            [ 3]   79 	pha
   0023 BD 0D 01      [ 5]   80 	lda	0x10d,x
   0026 48            [ 3]   81 	pha
   0027 BD 0C 01      [ 5]   82 	lda	0x10c,x
   002A 48            [ 3]   83 	pha
   002B BD 0B 01      [ 5]   84 	lda	0x10b,x
   002E 48            [ 3]   85 	pha
   002F BD 04 01      [ 5]   86 	lda	0x104,x
   0032 48            [ 3]   87 	pha
   0033 BD 03 01      [ 5]   88 	lda	0x103,x
   0036 48            [ 3]   89 	pha
   0037 BD 02 01      [ 5]   90 	lda	0x102,x
   003A 48            [ 3]   91 	pha
   003B BD 01 01      [ 5]   92 	lda	0x101,x
   003E 48            [ 3]   93 	pha
   003F 20r00r00      [ 6]   94 	jsr	___fsadd
   0042 86*00         [ 3]   95 	stx	*(__TEMP+0)
   0044 BA            [ 2]   96 	tsx
   0045 9D 09 01      [ 5]   97 	sta	0x109,x
   0048 A6*00         [ 3]   98 	ldx	*(__TEMP+0)
   004A 8A            [ 2]   99 	txa
   004B BA            [ 2]  100 	tsx
   004C 9D 0A 01      [ 5]  101 	sta	0x10a,x
   004F A6*00         [ 3]  102 	ldx	*(__TEMP+0)
   0051 A5*00         [ 3]  103 	lda	*___SDCC_m6502_ret2
   0053 BA            [ 2]  104 	tsx
   0054 9D 0B 01      [ 5]  105 	sta	0x10b,x
   0057 A5*00         [ 3]  106 	lda	*___SDCC_m6502_ret3
   0059 9D 0C 01      [ 5]  107 	sta	0x10c,x
   005C 85*00         [ 3]  108 	sta	*(__TEMP+0)
   005E 86*01         [ 3]  109 	stx	*(__TEMP+1)
   0060 BA            [ 2]  110 	tsx
   0061 8A            [ 2]  111 	txa
   0062 18            [ 2]  112 	clc
   0063 69 08         [ 2]  113 	adc	#0x08
   0065 AA            [ 2]  114 	tax
   0066 9A            [ 2]  115 	txs
   0067 A6*01         [ 3]  116 	ldx	*(__TEMP+1)
   0069 A5*00         [ 3]  117 	lda	*(__TEMP+0)
   006B BA            [ 2]  118 	tsx
   006C BD 04 01      [ 5]  119 	lda	0x104,x
   006F 49 80         [ 2]  120 	eor	#0x80
   0071 9D 04 01      [ 5]  121 	sta	0x104, x
   0074 85*00         [ 3]  122 	sta	*___SDCC_m6502_ret3
   0076 BD 03 01      [ 5]  123 	lda	0x103,x
   0079 85*00         [ 3]  124 	sta	*___SDCC_m6502_ret2
   007B BD 02 01      [ 5]  125 	lda	0x102,x
   007E AA            [ 2]  126 	tax
   007F 86*00         [ 3]  127 	stx	*(__TEMP+0)
   0081 BA            [ 2]  128 	tsx
   0082 BD 01 01      [ 5]  129 	lda	0x101,x
   0085 08            [ 3]  130 	php
   0086 A6*00         [ 3]  131 	ldx	*(__TEMP+0)
   0088 28            [ 4]  132 	plp
                            133 ;	../_fssub.c: 77: }
   0089 85*00         [ 3]  134 	sta	*(__TEMP+0)
   008B 68            [ 4]  135 	pla
   008C 68            [ 4]  136 	pla
   008D 68            [ 4]  137 	pla
   008E 68            [ 4]  138 	pla
   008F A5*00         [ 3]  139 	lda	*(__TEMP+0)
   0091 60            [ 6]  140 	rts
                            141 	.area CODE
                            142 	.area RODATA
                            143 	.area XINIT
                            144 	.area CABS    (ABS)
