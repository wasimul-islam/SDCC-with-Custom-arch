                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __stdc_first_leading_one
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___stdc_first_leading_one
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '__stdc_first_leading_one'
                             49 ;------------------------------------------------------------
                             50 ;value                     Allocated to stack - sp +14
                             51 ;width                     Allocated to stack - sp +22
                             52 ;i                         Allocated to stack - sp +11
                             53 ;sloc0                     Allocated to stack - sp +10
                             54 ;sloc1                     Allocated to stack - sp +9
                             55 ;sloc2                     Allocated to stack - sp +1
                             56 ;------------------------------------------------------------
                             57 ;	../__stdc_first_leading_one.c: 36: int_fast8_t __stdc_first_leading_one(unsigned long long value, uint_fast8_t width)
                             58 ;	-----------------------------------------
                             59 ;	 function __stdc_first_leading_one
                             60 ;	-----------------------------------------
                             61 ;	Register assignment is optimal.
                             62 ;	Stack space usage: 11 bytes.
   0000                      63 ___stdc_first_leading_one:
   0000 85*00         [ 3]   64 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   65 	stx	*(__TEMP+1)
   0004 BA            [ 2]   66 	tsx
   0005 8A            [ 2]   67 	txa
   0006 18            [ 2]   68 	clc
   0007 69 F5         [ 2]   69 	adc	#0xf5
   0009 AA            [ 2]   70 	tax
   000A 9A            [ 2]   71 	txs
   000B A6*01         [ 3]   72 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   73 	lda	*(__TEMP+0)
                             74 ;	../__stdc_first_leading_one.c: 38: for(int_fast8_t i = width - 1; i >= 0; i--)
   000F BA            [ 2]   75 	tsx
   0010 BD 16 01      [ 5]   76 	lda	0x116,x
   0013 9D 0A 01      [ 5]   77 	sta	0x10a, x
   0016 38            [ 2]   78 	sec
   0017 E9 01         [ 2]   79 	sbc	#0x01
   0019 9D 0B 01      [ 5]   80 	sta	0x10b, x
   001C 9D 09 01      [ 5]   81 	sta	0x109,x
   001F                      82 00105$:
   001F BA            [ 2]   83 	tsx
   0020 BD 09 01      [ 5]   84 	lda	0x109,x
   0023 38            [ 2]   85 	sec
   0024 E9 00         [ 2]   86 	sbc	#0x00
   0026 70 04         [ 4]   87 	bvs	00122$
   0028 10 07         [ 4]   88 	bpl	00121$
   002A 30 02         [ 4]   89 	bmi	00123$
   002C                      90 00122$:
   002C 30 03         [ 4]   91 	bmi	00121$
   002E                      92 00123$:
   002E 4CrDCr00      [ 3]   93 	jmp	00103$
   0031                      94 00121$:
                             95 ;	../__stdc_first_leading_one.c: 39: if(value & (1ull << i))
   0031 BD 09 01      [ 5]   96 	lda	0x109,x
   0034 48            [ 3]   97 	pha
   0035 A9 00         [ 2]   98 	lda	#0x00
   0037 48            [ 3]   99 	pha
   0038 48            [ 3]  100 	pha
   0039 48            [ 3]  101 	pha
   003A 48            [ 3]  102 	pha
   003B 48            [ 3]  103 	pha
   003C 48            [ 3]  104 	pha
   003D 48            [ 3]  105 	pha
   003E A9 01         [ 2]  106 	lda	#0x01
   0040 48            [ 3]  107 	pha
   0041 20r00r00      [ 6]  108 	jsr	__rlulonglong
   0044 86*00         [ 3]  109 	stx	*(__TEMP+0)
   0046 BA            [ 2]  110 	tsx
   0047 9D 0A 01      [ 5]  111 	sta	0x10a,x
   004A A6*00         [ 3]  112 	ldx	*(__TEMP+0)
   004C 8A            [ 2]  113 	txa
   004D BA            [ 2]  114 	tsx
   004E 9D 0B 01      [ 5]  115 	sta	0x10b,x
   0051 A6*00         [ 3]  116 	ldx	*(__TEMP+0)
   0053 A5*00         [ 3]  117 	lda	*___SDCC_m6502_ret2
   0055 BA            [ 2]  118 	tsx
   0056 9D 0C 01      [ 5]  119 	sta	0x10c,x
   0059 A5*00         [ 3]  120 	lda	*___SDCC_m6502_ret3
   005B 9D 0D 01      [ 5]  121 	sta	0x10d,x
   005E A5*00         [ 3]  122 	lda	*___SDCC_m6502_ret4
   0060 9D 0E 01      [ 5]  123 	sta	0x10e,x
   0063 A5*00         [ 3]  124 	lda	*___SDCC_m6502_ret5
   0065 9D 0F 01      [ 5]  125 	sta	0x10f,x
   0068 A5*00         [ 3]  126 	lda	*___SDCC_m6502_ret6
   006A 9D 10 01      [ 5]  127 	sta	0x110,x
   006D A5*00         [ 3]  128 	lda	*___SDCC_m6502_ret7
   006F 9D 11 01      [ 5]  129 	sta	0x111,x
   0072 85*00         [ 3]  130 	sta	*(__TEMP+0)
   0074 86*01         [ 3]  131 	stx	*(__TEMP+1)
   0076 BA            [ 2]  132 	tsx
   0077 8A            [ 2]  133 	txa
   0078 18            [ 2]  134 	clc
   0079 69 09         [ 2]  135 	adc	#0x09
   007B AA            [ 2]  136 	tax
   007C 9A            [ 2]  137 	txs
   007D A6*01         [ 3]  138 	ldx	*(__TEMP+1)
   007F A5*00         [ 3]  139 	lda	*(__TEMP+0)
   0081 BA            [ 2]  140 	tsx
   0082 BD 01 01      [ 5]  141 	lda	0x101,x
   0085 3D 0E 01      [ 5]  142 	and	0x10e,x
   0088 D0 36         [ 4]  143 	bne	00124$
   008A BD 02 01      [ 5]  144 	lda	0x102,x
   008D 3D 0F 01      [ 5]  145 	and	0x10f,x
   0090 D0 2E         [ 4]  146 	bne	00124$
   0092 BD 03 01      [ 5]  147 	lda	0x103,x
   0095 3D 10 01      [ 5]  148 	and	0x110,x
   0098 D0 26         [ 4]  149 	bne	00124$
   009A BD 04 01      [ 5]  150 	lda	0x104,x
   009D 3D 11 01      [ 5]  151 	and	0x111,x
   00A0 D0 1E         [ 4]  152 	bne	00124$
   00A2 BD 05 01      [ 5]  153 	lda	0x105,x
   00A5 3D 12 01      [ 5]  154 	and	0x112,x
   00A8 D0 16         [ 4]  155 	bne	00124$
   00AA BD 06 01      [ 5]  156 	lda	0x106,x
   00AD 3D 13 01      [ 5]  157 	and	0x113,x
   00B0 D0 0E         [ 4]  158 	bne	00124$
   00B2 BD 07 01      [ 5]  159 	lda	0x107,x
   00B5 3D 14 01      [ 5]  160 	and	0x114,x
   00B8 D0 06         [ 4]  161 	bne	00124$
   00BA BD 08 01      [ 5]  162 	lda	0x108,x
   00BD 3D 15 01      [ 5]  163 	and	0x115,x
   00C0                     164 00124$:
   00C0 F0 0A         [ 4]  165 	beq	00106$
                            166 ;	../__stdc_first_leading_one.c: 40: return (width - i);
   00C2 BD 0A 01      [ 5]  167 	lda	0x10a,x
   00C5 38            [ 2]  168 	sec
   00C6 FD 0B 01      [ 5]  169 	sbc	0x10b,x
   00C9 4CrDEr00      [ 3]  170 	jmp	00107$
   00CC                     171 00106$:
                            172 ;	../__stdc_first_leading_one.c: 38: for(int_fast8_t i = width - 1; i >= 0; i--)
   00CC BA            [ 2]  173 	tsx
   00CD BD 09 01      [ 5]  174 	lda	0x109,x
   00D0 38            [ 2]  175 	sec
   00D1 E9 01         [ 2]  176 	sbc	#0x01
   00D3 9D 09 01      [ 5]  177 	sta	0x109, x
   00D6 9D 0B 01      [ 5]  178 	sta	0x10b,x
   00D9 4Cr1Fr00      [ 3]  179 	jmp	00105$
   00DC                     180 00103$:
                            181 ;	../__stdc_first_leading_one.c: 41: return 0;
   00DC A9 00         [ 2]  182 	lda	#0x00
   00DE                     183 00107$:
                            184 ;	../__stdc_first_leading_one.c: 42: }
   00DE 85*00         [ 3]  185 	sta	*(__TEMP+0)
   00E0 86*01         [ 3]  186 	stx	*(__TEMP+1)
   00E2 BA            [ 2]  187 	tsx
   00E3 8A            [ 2]  188 	txa
   00E4 18            [ 2]  189 	clc
   00E5 69 0B         [ 2]  190 	adc	#0x0b
   00E7 AA            [ 2]  191 	tax
   00E8 9A            [ 2]  192 	txs
   00E9 A6*01         [ 3]  193 	ldx	*(__TEMP+1)
   00EB A5*00         [ 3]  194 	lda	*(__TEMP+0)
   00ED 60            [ 6]  195 	rts
                            196 	.area CODE
                            197 	.area RODATA
                            198 	.area XINIT
                            199 	.area CABS    (ABS)
