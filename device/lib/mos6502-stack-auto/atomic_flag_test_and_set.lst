                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module atomic_flag_test_and_set
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _atomic_flag_test_and_set
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'atomic_flag_test_and_set'
                             49 ;------------------------------------------------------------
                             50 ;object                    Allocated to stack - sp +1
                             51 ;t                         Allocated to registers y 
                             52 ;------------------------------------------------------------
                             53 ;	atomic_flag_test_and_set.c: 31: _Bool atomic_flag_test_and_set(volatile atomic_flag *object)
                             54 ;	-----------------------------------------
                             55 ;	 function atomic_flag_test_and_set
                             56 ;	-----------------------------------------
                             57 ;	Register assignment is optimal.
                             58 ;	Stack space usage: 2 bytes.
   0000                      59 _atomic_flag_test_and_set:
   0000 85*00         [ 3]   60 	sta	*(__TEMP+0)
   0002 8A            [ 2]   61 	txa
   0003 48            [ 3]   62 	pha
   0004 A5*00         [ 3]   63 	lda	*(__TEMP+0)
   0006 48            [ 3]   64 	pha
                             65 ;	atomic_flag_test_and_set.c: 34: t=object->flag;
   0007 BA            [ 2]   66 	tsx
   0008 BD 01 01      [ 5]   67 	lda	0x101,x
   000B 85*00         [ 3]   68 	sta	*(__TEMP+0)
   000D BD 02 01      [ 5]   69 	lda	0x102,x
   0010 AA            [ 2]   70 	tax
   0011 A5*00         [ 3]   71 	lda	*(__TEMP+0)
   0013 86*01         [ 3]   72 	stx	*(__TEMP+1)
   0015 85*00         [ 3]   73 	sta	*(__DPTR+0)
   0017 86*01         [ 3]   74 	stx	*(__DPTR+1)
   0019 A0 00         [ 2]   75 	ldy	#0x00
   001B B1*00         [ 6]   76 	lda	[__DPTR],y
   001D A8            [ 2]   77 	tay
   001E A6*01         [ 3]   78 	ldx	*(__TEMP+1)
   0020 A5*00         [ 3]   79 	lda	*(__TEMP+0)
                             80 ;	atomic_flag_test_and_set.c: 35: object->flag=0;
   0022 84*00         [ 3]   81 	sty	*(__TEMP+0)
   0024 85*00         [ 3]   82 	sta	*(__DPTR+0)
   0026 86*01         [ 3]   83 	stx	*(__DPTR+1)
   0028 A9 00         [ 2]   84 	lda	#0x00
   002A A8            [ 2]   85 	tay
   002B 91*00         [ 6]   86 	sta	[__DPTR],y
   002D A4*00         [ 3]   87 	ldy	*(__TEMP+0)
                             88 ;	atomic_flag_test_and_set.c: 36: return t^0x01;
   002F 98            [ 2]   89 	tya
   0030 49 01         [ 2]   90 	eor	#0x01
   0032 C9 01         [ 2]   91 	cmp	#0x01
   0034 A9 00         [ 2]   92 	lda	#0x00
   0036 2A            [ 2]   93 	rol	a
                             94 ;	atomic_flag_test_and_set.c: 37: }
   0037 85*00         [ 3]   95 	sta	*(__TEMP+0)
   0039 68            [ 4]   96 	pla
   003A 68            [ 4]   97 	pla
   003B A5*00         [ 3]   98 	lda	*(__TEMP+0)
   003D 60            [ 6]   99 	rts
                            100 	.area CODE
                            101 	.area RODATA
                            102 	.area XINIT
                            103 	.area CABS    (ABS)
