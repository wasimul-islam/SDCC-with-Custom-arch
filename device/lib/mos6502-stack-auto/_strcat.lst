                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strcat
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strcat
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'strcat'
                             49 ;------------------------------------------------------------
                             50 ;src                       Allocated to stack - sp +10
                             51 ;dst                       Allocated to stack - sp +6
                             52 ;cp                        Allocated to stack - sp +4
                             53 ;sloc0                     Allocated to stack - sp +2
                             54 ;sloc1                     Allocated to stack - sp +1
                             55 ;------------------------------------------------------------
                             56 ;	../_strcat.c: 31: char * strcat ( char * dst, const char * src )
                             57 ;	-----------------------------------------
                             58 ;	 function strcat
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 7 bytes.
   0000                      62 _strcat:
   0000 85*00         [ 3]   63 	sta	*(__TEMP+0)
   0002 8A            [ 2]   64 	txa
   0003 48            [ 3]   65 	pha
   0004 A5*00         [ 3]   66 	lda	*(__TEMP+0)
   0006 48            [ 3]   67 	pha
   0007 48            [ 3]   68 	pha
   0008 48            [ 3]   69 	pha
   0009 48            [ 3]   70 	pha
   000A 48            [ 3]   71 	pha
   000B 48            [ 3]   72 	pha
                             73 ;	../_strcat.c: 35: while( *cp )
   000C BA            [ 2]   74 	tsx
   000D BD 06 01      [ 5]   75 	lda	0x106,x
   0010 9D 04 01      [ 5]   76 	sta	0x104,x
   0013 BD 07 01      [ 5]   77 	lda	0x107,x
   0016 9D 05 01      [ 5]   78 	sta	0x105,x
   0019                      79 00101$:
   0019 BA            [ 2]   80 	tsx
   001A BD 04 01      [ 5]   81 	lda	0x104,x
   001D 85*00         [ 3]   82 	sta	*(__DPTR+0)
   001F BD 05 01      [ 5]   83 	lda	0x105,x
   0022 85*01         [ 3]   84 	sta	*(__DPTR+1)
   0024 A0 00         [ 2]   85 	ldy	#0x00
   0026 B1*00         [ 6]   86 	lda	[__DPTR],y
   0028 F0 14         [ 4]   87 	beq	00111$
                             88 ;	../_strcat.c: 36: cp++;                   /* find end of dst */
   002A BD 04 01      [ 5]   89 	lda	0x104,x
   002D 18            [ 2]   90 	clc
   002E 69 01         [ 2]   91 	adc	#0x01
   0030 9D 04 01      [ 5]   92 	sta	0x104,x
   0033 BD 05 01      [ 5]   93 	lda	0x105,x
   0036 69 00         [ 2]   94 	adc	#0x00
   0038 9D 05 01      [ 5]   95 	sta	0x105,x
   003B 4Cr19r00      [ 3]   96 	jmp	00101$
                             97 ;	../_strcat.c: 38: while( *cp++ = *src++ ) ;       /* Copy src to end of dst */
   003E                      98 00111$:
   003E BA            [ 2]   99 	tsx
   003F BD 0A 01      [ 5]  100 	lda	0x10a,x
   0042 9D 02 01      [ 5]  101 	sta	0x102,x
   0045 BD 0B 01      [ 5]  102 	lda	0x10b,x
   0048 9D 03 01      [ 5]  103 	sta	0x103,x
   004B                     104 00104$:
   004B BA            [ 2]  105 	tsx
   004C BD 02 01      [ 5]  106 	lda	0x102,x
   004F 85*00         [ 3]  107 	sta	*(__DPTR+0)
   0051 BD 03 01      [ 5]  108 	lda	0x103,x
   0054 85*01         [ 3]  109 	sta	*(__DPTR+1)
   0056 A0 00         [ 2]  110 	ldy	#0x00
   0058 B1*00         [ 6]  111 	lda	[__DPTR],y
   005A 9D 01 01      [ 5]  112 	sta	0x101,x
   005D BD 02 01      [ 5]  113 	lda	0x102,x
   0060 18            [ 2]  114 	clc
   0061 69 01         [ 2]  115 	adc	#0x01
   0063 9D 02 01      [ 5]  116 	sta	0x102,x
   0066 BD 03 01      [ 5]  117 	lda	0x103,x
   0069 69 00         [ 2]  118 	adc	#0x00
   006B 9D 03 01      [ 5]  119 	sta	0x103,x
   006E BD 04 01      [ 5]  120 	lda	0x104,x
   0071 85*00         [ 3]  121 	sta	*(__DPTR+0)
   0073 BD 05 01      [ 5]  122 	lda	0x105,x
   0076 85*01         [ 3]  123 	sta	*(__DPTR+1)
   0078 BD 01 01      [ 5]  124 	lda	0x101,x
   007B 91*00         [ 6]  125 	sta	[__DPTR],y
   007D BD 04 01      [ 5]  126 	lda	0x104,x
   0080 18            [ 2]  127 	clc
   0081 69 01         [ 2]  128 	adc	#0x01
   0083 9D 04 01      [ 5]  129 	sta	0x104,x
   0086 BD 05 01      [ 5]  130 	lda	0x105,x
   0089 69 00         [ 2]  131 	adc	#0x00
   008B 9D 05 01      [ 5]  132 	sta	0x105,x
   008E BD 01 01      [ 5]  133 	lda	0x101,x
   0091 D0 B8         [ 4]  134 	bne	00104$
                            135 ;	../_strcat.c: 40: return( dst );                  /* return dst */
   0093 BD 07 01      [ 5]  136 	lda	0x107,x
   0096 AA            [ 2]  137 	tax
   0097 86*00         [ 3]  138 	stx	*(__TEMP+0)
   0099 BA            [ 2]  139 	tsx
   009A BD 06 01      [ 5]  140 	lda	0x106,x
   009D 08            [ 3]  141 	php
   009E A6*00         [ 3]  142 	ldx	*(__TEMP+0)
   00A0 28            [ 4]  143 	plp
                            144 ;	../_strcat.c: 41: }
   00A1 85*00         [ 3]  145 	sta	*(__TEMP+0)
   00A3 68            [ 4]  146 	pla
   00A4 68            [ 4]  147 	pla
   00A5 68            [ 4]  148 	pla
   00A6 68            [ 4]  149 	pla
   00A7 68            [ 4]  150 	pla
   00A8 68            [ 4]  151 	pla
   00A9 68            [ 4]  152 	pla
   00AA A5*00         [ 3]  153 	lda	*(__TEMP+0)
   00AC 60            [ 6]  154 	rts
                            155 	.area CODE
                            156 	.area RODATA
                            157 	.area XINIT
                            158 	.area CABS    (ABS)
