                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module abs
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _abs
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'abs'
                             49 ;------------------------------------------------------------
                             50 ;j                         Allocated to registers a x 
                             51 ;------------------------------------------------------------
                             52 ;	../abs.c: 54: int abs(int j)
                             53 ;	-----------------------------------------
                             54 ;	 function abs
                             55 ;	-----------------------------------------
                             56 ;	Register assignment is optimal.
                             57 ;	Stack space usage: 0 bytes.
   0000                      58 _abs:
                             59 ;	../abs.c: 56: return (j < 0) ? -j : j;
   0000 85*00         [ 3]   60 	sta	*(__TEMP+0)
   0002 8A            [ 2]   61 	txa
   0003 38            [ 2]   62 	sec
   0004 E9 00         [ 2]   63 	sbc	#0x00
   0006 08            [ 3]   64 	php
   0007 A5*00         [ 3]   65 	lda	*(__TEMP+0)
   0009 28            [ 4]   66 	plp
   000A 50 04         [ 4]   67 	bvc	00110$
   000C 10 05         [ 4]   68 	bpl	00109$
   000E 30 11         [ 4]   69 	bmi	00103$
   0010                      70 00110$:
   0010 30 01         [ 4]   71 	bmi	00109$
   0012 60            [ 6]   72 	rts
   0013                      73 00109$:
   0013 49 FF         [ 2]   74 	eor	#0xff
   0015 18            [ 2]   75 	clc
   0016 69 01         [ 2]   76 	adc	#0x01
   0018 48            [ 3]   77 	pha
   0019 A9 00         [ 2]   78 	lda	#0x00
   001B 86*00         [ 3]   79 	stx	*(__TEMP+0)
   001D E5*00         [ 3]   80 	sbc	*(__TEMP+0)
   001F AA            [ 2]   81 	tax
   0020 68            [ 4]   82 	pla
                             83 ;	../abs.c: 57: }
   0021                      84 00103$:
   0021 60            [ 6]   85 	rts
                             86 	.area CODE
                             87 	.area RODATA
                             88 	.area XINIT
                             89 	.area CABS    (ABS)
