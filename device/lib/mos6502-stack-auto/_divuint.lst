                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _divuint
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __divuint
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '_divuint'
                             49 ;------------------------------------------------------------
                             50 ;y                         Allocated to stack - sp +7
                             51 ;x                         Allocated to stack - sp +3
                             52 ;reste                     Allocated to stack - sp +1
                             53 ;count                     Allocated to registers y 
                             54 ;c                         Allocated to registers a 
                             55 ;------------------------------------------------------------
                             56 ;	../_divuint.c: 161: _divuint (unsigned int x, unsigned int y) __SDCC_NONBANKED
                             57 ;	-----------------------------------------
                             58 ;	 function _divuint
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 4 bytes.
   0000                      62 __divuint:
   0000 85*00         [ 3]   63 	sta	*(__TEMP+0)
   0002 8A            [ 2]   64 	txa
   0003 48            [ 3]   65 	pha
   0004 A5*00         [ 3]   66 	lda	*(__TEMP+0)
   0006 48            [ 3]   67 	pha
   0007 48            [ 3]   68 	pha
   0008 48            [ 3]   69 	pha
                             70 ;	../_divuint.c: 163: unsigned int reste = 0;
   0009 BA            [ 2]   71 	tsx
   000A A9 00         [ 2]   72 	lda	#0x00
   000C 9D 01 01      [ 5]   73 	sta	0x101,x
   000F 9D 02 01      [ 5]   74 	sta	0x102,x
                             75 ;	../_divuint.c: 167: do
   0012 A0 10         [ 2]   76 	ldy	#0x10
   0014                      77 00105$:
                             78 ;	../_divuint.c: 170: c = MSB_SET(x);
   0014 BA            [ 2]   79 	tsx
   0015 BD 04 01      [ 5]   80 	lda	0x104,x
   0018 2A            [ 2]   81 	rol	a
   0019 A9 00         [ 2]   82 	lda	#0x00
   001B 2A            [ 2]   83 	rol	a
   001C A2 00         [ 2]   84 	ldx	#0x00
   001E 29 01         [ 2]   85 	and	#0x01
                             86 ;	../_divuint.c: 171: x <<= 1;
   0020 BA            [ 2]   87 	tsx
   0021 85*00         [ 3]   88 	sta	*(__TEMP+0)
   0023 BD 03 01      [ 5]   89 	lda	0x103,x
   0026 85*01         [ 3]   90 	sta	*(__TEMP+1)
   0028 BD 04 01      [ 5]   91 	lda	0x104,x
   002B AA            [ 2]   92 	tax
   002C A5*01         [ 3]   93 	lda	*(__TEMP+1)
   002E 86*01         [ 3]   94 	stx	*(__TEMP+1)
   0030 0A            [ 2]   95 	asl	a
   0031 26*01         [ 5]   96 	rol	*(__TEMP+1)
   0033 A6*01         [ 3]   97 	ldx	*(__TEMP+1)
   0035 48            [ 3]   98 	pha
   0036 8A            [ 2]   99 	txa
   0037 BA            [ 2]  100 	tsx
   0038 9D 05 01      [ 5]  101 	sta	0x105,x
   003B 68            [ 4]  102 	pla
   003C 9D 04 01      [ 5]  103 	sta	0x104,x
                            104 ;	../_divuint.c: 172: reste <<= 1;
   003F BD 02 01      [ 5]  105 	lda	0x102, x
   0042 85*01         [ 3]  106 	sta	*(__TEMP+1)
   0044 BD 03 01      [ 5]  107 	lda	0x103,x
   0047 AA            [ 2]  108 	tax
   0048 A5*01         [ 3]  109 	lda	*(__TEMP+1)
   004A 86*01         [ 3]  110 	stx	*(__TEMP+1)
   004C 0A            [ 2]  111 	asl	a
   004D 26*01         [ 5]  112 	rol	*(__TEMP+1)
   004F A6*01         [ 3]  113 	ldx	*(__TEMP+1)
   0051 48            [ 3]  114 	pha
   0052 8A            [ 2]  115 	txa
   0053 BA            [ 2]  116 	tsx
   0054 9D 03 01      [ 5]  117 	sta	0x103,x
   0057 68            [ 4]  118 	pla
   0058 9D 02 01      [ 5]  119 	sta	0x102,x
                            120 ;	../_divuint.c: 173: if (c)
   005B A5*00         [ 3]  121 	lda	*(__TEMP+0)
   005D F0 08         [ 4]  122 	beq	00102$
                            123 ;	../_divuint.c: 174: reste |= 1;
   005F BD 02 01      [ 5]  124 	lda	0x102,x
   0062 09 01         [ 2]  125 	ora	#0x01
   0064 9D 02 01      [ 5]  126 	sta	0x102,x
   0067                     127 00102$:
                            128 ;	../_divuint.c: 176: if (reste >= y)
   0067 BA            [ 2]  129 	tsx
   0068 BD 01 01      [ 5]  130 	lda	0x101,x
   006B 38            [ 2]  131 	sec
   006C FD 07 01      [ 5]  132 	sbc	0x107,x
   006F BD 02 01      [ 5]  133 	lda	0x102,x
   0072 FD 08 01      [ 5]  134 	sbc	0x108,x
   0075 90 1B         [ 4]  135 	bcc	00106$
                            136 ;	../_divuint.c: 178: reste -= y;
   0077 BD 01 01      [ 5]  137 	lda	0x101,x
   007A 38            [ 2]  138 	sec
   007B FD 07 01      [ 5]  139 	sbc	0x107,x
   007E 9D 01 01      [ 5]  140 	sta	0x101,x
   0081 BD 02 01      [ 5]  141 	lda	0x102,x
   0084 FD 08 01      [ 5]  142 	sbc	0x108,x
   0087 9D 02 01      [ 5]  143 	sta	0x102,x
                            144 ;	../_divuint.c: 180: x |= 1;
   008A BD 03 01      [ 5]  145 	lda	0x103,x
   008D 09 01         [ 2]  146 	ora	#0x01
   008F 9D 03 01      [ 5]  147 	sta	0x103,x
   0092                     148 00106$:
                            149 ;	../_divuint.c: 183: while (--count);
   0092 88            [ 2]  150 	dey
   0093 F0 03         [ 4]  151 	beq	00129$
   0095 4Cr14r00      [ 3]  152 	jmp	00105$
   0098                     153 00129$:
                            154 ;	../_divuint.c: 184: return x;
   0098 BA            [ 2]  155 	tsx
   0099 BD 04 01      [ 5]  156 	lda	0x104,x
   009C AA            [ 2]  157 	tax
   009D 86*00         [ 3]  158 	stx	*(__TEMP+0)
   009F BA            [ 2]  159 	tsx
   00A0 BD 03 01      [ 5]  160 	lda	0x103,x
   00A3 08            [ 3]  161 	php
   00A4 A6*00         [ 3]  162 	ldx	*(__TEMP+0)
   00A6 28            [ 4]  163 	plp
                            164 ;	../_divuint.c: 185: }
   00A7 85*00         [ 3]  165 	sta	*(__TEMP+0)
   00A9 68            [ 4]  166 	pla
   00AA 68            [ 4]  167 	pla
   00AB 68            [ 4]  168 	pla
   00AC 68            [ 4]  169 	pla
   00AD A5*00         [ 3]  170 	lda	*(__TEMP+0)
   00AF 60            [ 6]  171 	rts
                            172 	.area CODE
                            173 	.area RODATA
                            174 	.area XINIT
                            175 	.area CABS    (ABS)
