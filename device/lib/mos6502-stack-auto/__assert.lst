                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __assert
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___assert
                             12 	.globl _printf
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; uninitialized external ram data
                             22 ;--------------------------------------------------------
                             23 	.area BSS
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area DABS    (ABS)
                             28 ;--------------------------------------------------------
                             29 ; initialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area DATA
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _CODE
                             36 	.area GSINIT
                             37 	.area GSFINAL
                             38 	.area GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 	.area _CODE
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area CODE
                             48 ;------------------------------------------------------------
                             49 ;Allocation info for local variables in function '__assert'
                             50 ;------------------------------------------------------------
                             51 ;functionname              Allocated to stack - sp +5
                             52 ;filename                  Allocated to stack - sp +7
                             53 ;linenumber                Allocated to stack - sp +9
                             54 ;expression                Allocated to stack - sp +1
                             55 ;------------------------------------------------------------
                             56 ;	../__assert.c: 32: void __assert(const char *expression, const char *functionname, const char *filename, unsigned int linenumber)
                             57 ;	-----------------------------------------
                             58 ;	 function __assert
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 2 bytes.
   0000                      62 ___assert:
   0000 85*00         [ 3]   63 	sta	*(__TEMP+0)
   0002 8A            [ 2]   64 	txa
   0003 48            [ 3]   65 	pha
   0004 A5*00         [ 3]   66 	lda	*(__TEMP+0)
   0006 48            [ 3]   67 	pha
                             68 ;	../__assert.c: 34: printf("Assert(%s) failed in function %s at line %u in file %s.\n",
   0007 BA            [ 2]   69 	tsx
   0008 BD 08 01      [ 5]   70 	lda	0x108,x
   000B 48            [ 3]   71 	pha
   000C BD 07 01      [ 5]   72 	lda	0x107,x
   000F 48            [ 3]   73 	pha
   0010 BD 0A 01      [ 5]   74 	lda	0x10a,x
   0013 48            [ 3]   75 	pha
   0014 BD 09 01      [ 5]   76 	lda	0x109,x
   0017 48            [ 3]   77 	pha
   0018 BD 06 01      [ 5]   78 	lda	0x106,x
   001B 48            [ 3]   79 	pha
   001C BD 05 01      [ 5]   80 	lda	0x105,x
   001F 48            [ 3]   81 	pha
   0020 BD 02 01      [ 5]   82 	lda	0x102,x
   0023 48            [ 3]   83 	pha
   0024 BD 01 01      [ 5]   84 	lda	0x101,x
   0027 48            [ 3]   85 	pha
   0028 A9s00         [ 2]   86 	lda	#>___str_0
   002A 48            [ 3]   87 	pha
   002B A9r00         [ 2]   88 	lda	#___str_0
   002D 48            [ 3]   89 	pha
   002E 20r00r00      [ 6]   90 	jsr	_printf
   0031 85*00         [ 3]   91 	sta	*(__TEMP+0)
   0033 86*01         [ 3]   92 	stx	*(__TEMP+1)
   0035 BA            [ 2]   93 	tsx
   0036 8A            [ 2]   94 	txa
   0037 18            [ 2]   95 	clc
   0038 69 0A         [ 2]   96 	adc	#0x0a
   003A AA            [ 2]   97 	tax
   003B 9A            [ 2]   98 	txs
   003C A6*01         [ 3]   99 	ldx	*(__TEMP+1)
   003E A5*00         [ 3]  100 	lda	*(__TEMP+0)
   0040                     101 00103$:
   0040 4Cr40r00      [ 3]  102 	jmp	00103$
                            103 ;	../__assert.c: 37: }
   0043 85*00         [ 3]  104 	sta	*(__TEMP+0)
   0045 68            [ 4]  105 	pla
   0046 68            [ 4]  106 	pla
   0047 A5*00         [ 3]  107 	lda	*(__TEMP+0)
   0049 60            [ 6]  108 	rts
                            109 	.area CODE
                            110 	.area RODATA
                            111 	.area RODATA
   0000                     112 ___str_0:
   0000 41 73 73 65 72 74   113 	.ascii "Assert(%s) failed in function %s at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        69 6E 20 66 75 6E
        63 74 69 6F 6E 20
        25 73 20 61 74 20
        6C 69 6E 65 20 25
        75 20 69 6E 20 66
        69 6C 65 20 25 73
        2E
   0037 0A                  114 	.db 0x0a
   0038 00                  115 	.db 0x00
                            116 	.area CODE
                            117 	.area XINIT
                            118 	.area CABS    (ABS)
