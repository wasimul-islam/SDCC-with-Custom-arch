                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module sinf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _sincosf
                             12 	.globl _sinf
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; uninitialized external ram data
                             22 ;--------------------------------------------------------
                             23 	.area BSS
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area DABS    (ABS)
                             28 ;--------------------------------------------------------
                             29 ; initialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area DATA
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _CODE
                             36 	.area GSINIT
                             37 	.area GSFINAL
                             38 	.area GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 	.area _CODE
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area CODE
                             48 ;------------------------------------------------------------
                             49 ;Allocation info for local variables in function 'sinf'
                             50 ;------------------------------------------------------------
                             51 ;x                         Allocated to stack - sp +7
                             52 ;sloc0                     Allocated to stack - sp +1
                             53 ;------------------------------------------------------------
                             54 ;	../sinf.c: 36: float sinf(float x) _FLOAT_FUNC_REENTRANT
                             55 ;	-----------------------------------------
                             56 ;	 function sinf
                             57 ;	-----------------------------------------
                             58 ;	Register assignment is optimal.
                             59 ;	Stack space usage: 4 bytes.
   0000                      60 _sinf:
   0000 48            [ 3]   61 	pha
   0001 48            [ 3]   62 	pha
   0002 48            [ 3]   63 	pha
   0003 48            [ 3]   64 	pha
                             65 ;	../sinf.c: 38: if (x==0.0) return 0.0;
   0004 BA            [ 2]   66 	tsx
   0005 BD 0A 01      [ 5]   67 	lda	0x10a,x
   0008 29 7F         [ 2]   68 	and	#0x7F
   000A 1D 09 01      [ 5]   69 	ora	0x109,x
   000D 1D 08 01      [ 5]   70 	ora	0x108,x
   0010 1D 07 01      [ 5]   71 	ora	0x107,x
   0013 D0 0A         [ 4]   72 	bne	00102$
   0015 A9 00         [ 2]   73 	lda	#0x00
   0017 AA            [ 2]   74 	tax
   0018 85*00         [ 3]   75 	sta	*___SDCC_m6502_ret2
   001A 85*00         [ 3]   76 	sta	*___SDCC_m6502_ret3
   001C 4Cr6Fr00      [ 3]   77 	jmp	00103$
   001F                      78 00102$:
                             79 ;	../sinf.c: 39: return sincosf(x, 0);
   001F A9 00         [ 2]   80 	lda	#0x00
   0021 48            [ 3]   81 	pha
   0022 BA            [ 2]   82 	tsx
   0023 BD 0B 01      [ 5]   83 	lda	0x10b,x
   0026 48            [ 3]   84 	pha
   0027 BD 0A 01      [ 5]   85 	lda	0x10a,x
   002A 48            [ 3]   86 	pha
   002B BD 09 01      [ 5]   87 	lda	0x109,x
   002E 48            [ 3]   88 	pha
   002F BD 08 01      [ 5]   89 	lda	0x108,x
   0032 48            [ 3]   90 	pha
   0033 20r00r00      [ 6]   91 	jsr	_sincosf
   0036 86*00         [ 3]   92 	stx	*(__TEMP+0)
   0038 BA            [ 2]   93 	tsx
   0039 9D 06 01      [ 5]   94 	sta	0x106,x
   003C A6*00         [ 3]   95 	ldx	*(__TEMP+0)
   003E 8A            [ 2]   96 	txa
   003F BA            [ 2]   97 	tsx
   0040 9D 07 01      [ 5]   98 	sta	0x107,x
   0043 A6*00         [ 3]   99 	ldx	*(__TEMP+0)
   0045 A5*00         [ 3]  100 	lda	*___SDCC_m6502_ret2
   0047 BA            [ 2]  101 	tsx
   0048 9D 08 01      [ 5]  102 	sta	0x108,x
   004B A5*00         [ 3]  103 	lda	*___SDCC_m6502_ret3
   004D 9D 09 01      [ 5]  104 	sta	0x109,x
   0050 85*00         [ 3]  105 	sta	*(__TEMP+0)
   0052 68            [ 4]  106 	pla
   0053 68            [ 4]  107 	pla
   0054 68            [ 4]  108 	pla
   0055 68            [ 4]  109 	pla
   0056 68            [ 4]  110 	pla
   0057 BD 09 01      [ 5]  111 	lda	0x109, x
   005A 85*00         [ 3]  112 	sta	*___SDCC_m6502_ret3
   005C BD 08 01      [ 5]  113 	lda	0x108,x
   005F 85*00         [ 3]  114 	sta	*___SDCC_m6502_ret2
   0061 BD 07 01      [ 5]  115 	lda	0x107,x
   0064 AA            [ 2]  116 	tax
   0065 86*00         [ 3]  117 	stx	*(__TEMP+0)
   0067 BA            [ 2]  118 	tsx
   0068 BD 01 01      [ 5]  119 	lda	0x101,x
   006B 08            [ 3]  120 	php
   006C A6*00         [ 3]  121 	ldx	*(__TEMP+0)
   006E 28            [ 4]  122 	plp
   006F                     123 00103$:
                            124 ;	../sinf.c: 40: }
   006F 85*00         [ 3]  125 	sta	*(__TEMP+0)
   0071 68            [ 4]  126 	pla
   0072 68            [ 4]  127 	pla
   0073 68            [ 4]  128 	pla
   0074 68            [ 4]  129 	pla
   0075 A5*00         [ 3]  130 	lda	*(__TEMP+0)
   0077 60            [ 6]  131 	rts
                            132 	.area CODE
                            133 	.area RODATA
                            134 	.area XINIT
                            135 	.area CABS    (ABS)
