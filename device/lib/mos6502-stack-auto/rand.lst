                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module rand
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rand
                             12 	.globl _srand
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; uninitialized external ram data
                             22 ;--------------------------------------------------------
                             23 	.area BSS
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area DABS    (ABS)
                             28 ;--------------------------------------------------------
                             29 ; initialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area DATA
   0000                      32 _s:
   0000                      33 	.ds 4
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 	.area GSINIT
                             39 	.area GSFINAL
                             40 	.area GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area _CODE
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area CODE
                             50 ;------------------------------------------------------------
                             51 ;Allocation info for local variables in function 'rand'
                             52 ;------------------------------------------------------------
                             53 ;t                         Allocated to stack - sp +1
                             54 ;sloc0                     Allocated to stack - sp +9
                             55 ;sloc1                     Allocated to stack - sp +5
                             56 ;------------------------------------------------------------
                             57 ;	../rand.c: 40: int rand(void)
                             58 ;	-----------------------------------------
                             59 ;	 function rand
                             60 ;	-----------------------------------------
                             61 ;	Register assignment is optimal.
                             62 ;	Stack space usage: 12 bytes.
   0000                      63 _rand:
   0000 85*00         [ 3]   64 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   65 	stx	*(__TEMP+1)
   0004 BA            [ 2]   66 	tsx
   0005 8A            [ 2]   67 	txa
   0006 18            [ 2]   68 	clc
   0007 69 F4         [ 2]   69 	adc	#0xf4
   0009 AA            [ 2]   70 	tax
   000A 9A            [ 2]   71 	txs
                             72 ;	../rand.c: 44: t ^= t >> 10;
   000B BA            [ 2]   73 	tsx
   000C ADr01r00      [ 4]   74 	lda	(_s + 1)
   000F AEr02r00      [ 4]   75 	ldx	(_s + 2)
   0012 86*00         [ 3]   76 	stx	*(__TEMP+0)
   0014 46*00         [ 5]   77 	lsr	*(__TEMP+0)
   0016 6A            [ 2]   78 	ror	a
   0017 46*00         [ 5]   79 	lsr	*(__TEMP+0)
   0019 6A            [ 2]   80 	ror	a
   001A A6*00         [ 3]   81 	ldx	*(__TEMP+0)
   001C 48            [ 3]   82 	pha
   001D 8A            [ 2]   83 	txa
   001E BA            [ 2]   84 	tsx
   001F 9D 0B 01      [ 5]   85 	sta	0x10b,x
   0022 68            [ 4]   86 	pla
   0023 9D 0A 01      [ 5]   87 	sta	0x10a,x
   0026 AEr03r00      [ 4]   88 	ldx	(_s + 3)
   0029 A9 00         [ 2]   89 	lda	#0x00
   002B 86*00         [ 3]   90 	stx	*(__TEMP+0)
   002D 46*00         [ 5]   91 	lsr	*(__TEMP+0)
   002F 6A            [ 2]   92 	ror	a
   0030 46*00         [ 5]   93 	lsr	*(__TEMP+0)
   0032 6A            [ 2]   94 	ror	a
   0033 BA            [ 2]   95 	tsx
   0034 1D 0A 01      [ 5]   96 	ora	0x10a,x
   0037 08            [ 3]   97 	php
   0038 A6*00         [ 3]   98 	ldx	*(__TEMP+0)
   003A 28            [ 4]   99 	plp
   003B 48            [ 3]  100 	pha
   003C 8A            [ 2]  101 	txa
   003D BA            [ 2]  102 	tsx
   003E 9D 0C 01      [ 5]  103 	sta	0x10c,x
   0041 68            [ 4]  104 	pla
   0042 9D 0B 01      [ 5]  105 	sta	0x10b,x
   0045 48            [ 3]  106 	pha
   0046 A9 00         [ 2]  107 	lda	#0x00
   0048 9D 0D 01      [ 5]  108 	sta	0x10d,x
   004B 68            [ 4]  109 	pla
   004C ADr00r00      [ 4]  110 	lda	_s
   004F 5D 0A 01      [ 5]  111 	eor	0x10a,x
   0052 9D 0A 01      [ 5]  112 	sta	0x10a,x
   0055 ADr01r00      [ 4]  113 	lda	(_s + 1)
   0058 5D 0B 01      [ 5]  114 	eor	0x10b,x
   005B 9D 0B 01      [ 5]  115 	sta	0x10b,x
   005E ADr02r00      [ 4]  116 	lda	(_s + 2)
   0061 5D 0C 01      [ 5]  117 	eor	0x10c,x
   0064 9D 0C 01      [ 5]  118 	sta	0x10c,x
   0067 ADr03r00      [ 4]  119 	lda	(_s + 3)
   006A 5D 0D 01      [ 5]  120 	eor	0x10d,x
   006D 9D 0D 01      [ 5]  121 	sta	0x10d,x
                            122 ;	../rand.c: 45: t ^= t << 9;
   0070 BD 0A 01      [ 5]  123 	lda	0x10a,x
   0073 0A            [ 2]  124 	asl	a
   0074 85*00         [ 3]  125 	sta	*(__TEMP+0)
   0076 BD 0B 01      [ 5]  126 	lda	0x10b,x
   0079 AA            [ 2]  127 	tax
   007A A5*00         [ 3]  128 	lda	*(__TEMP+0)
   007C 86*00         [ 3]  129 	stx	*(__TEMP+0)
   007E BA            [ 2]  130 	tsx
   007F 9D 06 01      [ 5]  131 	sta	0x106,x
   0082 A6*00         [ 3]  132 	ldx	*(__TEMP+0)
   0084 8A            [ 2]  133 	txa
   0085 2A            [ 2]  134 	rol	a
   0086 85*00         [ 3]  135 	sta	*(__TEMP+0)
   0088 BA            [ 2]  136 	tsx
   0089 BD 0B 01      [ 5]  137 	lda	0x10b,x
   008C AA            [ 2]  138 	tax
   008D A5*00         [ 3]  139 	lda	*(__TEMP+0)
   008F 86*00         [ 3]  140 	stx	*(__TEMP+0)
   0091 BA            [ 2]  141 	tsx
   0092 9D 07 01      [ 5]  142 	sta	0x107,x
   0095 A6*00         [ 3]  143 	ldx	*(__TEMP+0)
   0097 8A            [ 2]  144 	txa
   0098 2A            [ 2]  145 	rol	a
   0099 BA            [ 2]  146 	tsx
   009A 9D 08 01      [ 5]  147 	sta	0x108,x
   009D 48            [ 3]  148 	pha
   009E A9 00         [ 2]  149 	lda	#0x00
   00A0 9D 05 01      [ 5]  150 	sta	0x105,x
   00A3 68            [ 4]  151 	pla
   00A4 BD 09 01      [ 5]  152 	lda	0x109,x
   00A7 5D 05 01      [ 5]  153 	eor	0x105,x
   00AA 9D 05 01      [ 5]  154 	sta	0x105,x
   00AD BD 0A 01      [ 5]  155 	lda	0x10a,x
   00B0 5D 06 01      [ 5]  156 	eor	0x106,x
   00B3 9D 06 01      [ 5]  157 	sta	0x106,x
   00B6 BD 0B 01      [ 5]  158 	lda	0x10b,x
   00B9 5D 07 01      [ 5]  159 	eor	0x107,x
   00BC 9D 07 01      [ 5]  160 	sta	0x107,x
   00BF BD 0C 01      [ 5]  161 	lda	0x10c,x
   00C2 5D 08 01      [ 5]  162 	eor	0x108,x
                            163 ;	../rand.c: 46: t ^= t >> 25;
   00C5 9D 08 01      [ 5]  164 	sta	0x108, x
   00C8 4A            [ 2]  165 	lsr	a
   00C9 9D 09 01      [ 5]  166 	sta	0x109,x
   00CC 48            [ 3]  167 	pha
   00CD A9 00         [ 2]  168 	lda	#0x00
   00CF 9D 0A 01      [ 5]  169 	sta	0x10a,x
   00D2 A9 00         [ 2]  170 	lda	#0x00
   00D4 9D 0B 01      [ 5]  171 	sta	0x10b,x
   00D7 A9 00         [ 2]  172 	lda	#0x00
   00D9 9D 0C 01      [ 5]  173 	sta	0x10c,x
   00DC 68            [ 4]  174 	pla
   00DD BD 05 01      [ 5]  175 	lda	0x105,x
   00E0 5D 09 01      [ 5]  176 	eor	0x109,x
   00E3 9D 05 01      [ 5]  177 	sta	0x105,x
   00E6 BD 06 01      [ 5]  178 	lda	0x106,x
   00E9 5D 0A 01      [ 5]  179 	eor	0x10a,x
   00EC 9D 06 01      [ 5]  180 	sta	0x106,x
   00EF BD 07 01      [ 5]  181 	lda	0x107,x
   00F2 5D 0B 01      [ 5]  182 	eor	0x10b,x
   00F5 9D 07 01      [ 5]  183 	sta	0x107,x
   00F8 BD 08 01      [ 5]  184 	lda	0x108,x
   00FB 5D 0C 01      [ 5]  185 	eor	0x10c,x
   00FE 9D 08 01      [ 5]  186 	sta	0x108,x
   0101 BD 05 01      [ 5]  187 	lda	0x105,x
   0104 9D 01 01      [ 5]  188 	sta	0x101,x
   0107 BD 06 01      [ 5]  189 	lda	0x106,x
   010A 9D 02 01      [ 5]  190 	sta	0x102,x
   010D BD 07 01      [ 5]  191 	lda	0x107,x
   0110 9D 03 01      [ 5]  192 	sta	0x103,x
   0113 BD 08 01      [ 5]  193 	lda	0x108,x
   0116 9D 04 01      [ 5]  194 	sta	0x104,x
                            195 ;	../rand.c: 48: s = t;
   0119 BD 05 01      [ 5]  196 	lda	0x105,x
   011C 8Dr00r00      [ 4]  197 	sta	_s
   011F BD 06 01      [ 5]  198 	lda	0x106,x
   0122 8Dr01r00      [ 4]  199 	sta	(_s + 1)
   0125 BD 07 01      [ 5]  200 	lda	0x107,x
   0128 8Dr02r00      [ 4]  201 	sta	(_s + 2)
   012B BD 08 01      [ 5]  202 	lda	0x108,x
   012E 8Dr03r00      [ 4]  203 	sta	(_s + 3)
                            204 ;	../rand.c: 50: return(t & RAND_MAX);
   0131 BD 01 01      [ 5]  205 	lda	0x101,x
   0134 85*00         [ 3]  206 	sta	*(__TEMP+0)
   0136 BD 02 01      [ 5]  207 	lda	0x102,x
   0139 AA            [ 2]  208 	tax
   013A 29 7F         [ 2]  209 	and	#0x7f
   013C AA            [ 2]  210 	tax
                            211 ;	../rand.c: 51: }
   013D A5*00         [ 3]  212 	lda	*(__TEMP+0)
   013F 86*01         [ 3]  213 	stx	*(__TEMP+1)
   0141 BA            [ 2]  214 	tsx
   0142 8A            [ 2]  215 	txa
   0143 18            [ 2]  216 	clc
   0144 69 0C         [ 2]  217 	adc	#0x0c
   0146 AA            [ 2]  218 	tax
   0147 9A            [ 2]  219 	txs
   0148 A6*01         [ 3]  220 	ldx	*(__TEMP+1)
   014A A5*00         [ 3]  221 	lda	*(__TEMP+0)
   014C 60            [ 6]  222 	rts
                            223 ;------------------------------------------------------------
                            224 ;Allocation info for local variables in function 'srand'
                            225 ;------------------------------------------------------------
                            226 ;seed                      Allocated to registers a x 
                            227 ;sloc0                     Allocated to stack - sp +1
                            228 ;------------------------------------------------------------
                            229 ;	../rand.c: 53: void srand(unsigned int seed)
                            230 ;	-----------------------------------------
                            231 ;	 function srand
                            232 ;	-----------------------------------------
                            233 ;	Register assignment is optimal.
                            234 ;	Stack space usage: 4 bytes.
   014D                     235 _srand:
   014D 48            [ 3]  236 	pha
   014E 48            [ 3]  237 	pha
   014F 48            [ 3]  238 	pha
   0150 48            [ 3]  239 	pha
                            240 ;	../rand.c: 55: s = seed | 0x80000000; /* s shall not become 0 */
   0151 48            [ 3]  241 	pha
   0152 8A            [ 2]  242 	txa
   0153 BA            [ 2]  243 	tsx
   0154 9D 03 01      [ 5]  244 	sta	0x103,x
   0157 68            [ 4]  245 	pla
   0158 9D 02 01      [ 5]  246 	sta	0x102,x
   015B BD 03 01      [ 5]  247 	lda	0x103,x
   015E 48            [ 3]  248 	pha
   015F A9 00         [ 2]  249 	lda	#0x00
   0161 9D 04 01      [ 5]  250 	sta	0x104,x
   0164 A9 00         [ 2]  251 	lda	#0x00
   0166 9D 05 01      [ 5]  252 	sta	0x105,x
   0169 68            [ 4]  253 	pla
   016A BD 02 01      [ 5]  254 	lda	0x102,x
   016D 8Dr00r00      [ 4]  255 	sta	_s
   0170 BD 03 01      [ 5]  256 	lda	0x103,x
   0173 8Dr01r00      [ 4]  257 	sta	(_s + 1)
   0176 BD 04 01      [ 5]  258 	lda	0x104,x
   0179 8Dr02r00      [ 4]  259 	sta	(_s + 2)
   017C BD 05 01      [ 5]  260 	lda	0x105,x
   017F 09 80         [ 2]  261 	ora	#0x80
   0181 8Dr03r00      [ 4]  262 	sta	(_s + 3)
                            263 ;	../rand.c: 56: }
   0184 85*00         [ 3]  264 	sta	*(__TEMP+0)
   0186 68            [ 4]  265 	pla
   0187 68            [ 4]  266 	pla
   0188 68            [ 4]  267 	pla
   0189 68            [ 4]  268 	pla
   018A A5*00         [ 3]  269 	lda	*(__TEMP+0)
   018C 60            [ 6]  270 	rts
                            271 	.area CODE
                            272 	.area RODATA
                            273 	.area XINIT
   0000                     274 __xinit__s:
   0000 01 00 00 80         275 	.byte #0x01, #0x00, #0x00, #0x80	; 2147483649
                            276 	.area CABS    (ABS)
