                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strcpy
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strcpy
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'strcpy'
                             49 ;------------------------------------------------------------
                             50 ;s                         Allocated to stack - sp +10
                             51 ;d                         Allocated to stack - sp +6
                             52 ;d1                        Allocated to stack - sp +4
                             53 ;sloc0                     Allocated to stack - sp +2
                             54 ;sloc1                     Allocated to stack - sp +1
                             55 ;------------------------------------------------------------
                             56 ;	../_strcpy.c: 36: char * strcpy ( char * d, const char * s )
                             57 ;	-----------------------------------------
                             58 ;	 function strcpy
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 7 bytes.
   0000                      62 _strcpy:
   0000 85*00         [ 3]   63 	sta	*(__TEMP+0)
   0002 8A            [ 2]   64 	txa
   0003 48            [ 3]   65 	pha
   0004 A5*00         [ 3]   66 	lda	*(__TEMP+0)
   0006 48            [ 3]   67 	pha
   0007 48            [ 3]   68 	pha
   0008 48            [ 3]   69 	pha
   0009 48            [ 3]   70 	pha
   000A 48            [ 3]   71 	pha
   000B 48            [ 3]   72 	pha
                             73 ;	../_strcpy.c: 48: while (*d1++ = *s++) ;
   000C BA            [ 2]   74 	tsx
   000D BD 0A 01      [ 5]   75 	lda	0x10a,x
   0010 9D 02 01      [ 5]   76 	sta	0x102,x
   0013 BD 0B 01      [ 5]   77 	lda	0x10b,x
   0016 9D 03 01      [ 5]   78 	sta	0x103,x
   0019 BD 06 01      [ 5]   79 	lda	0x106,x
   001C 9D 04 01      [ 5]   80 	sta	0x104,x
   001F BD 07 01      [ 5]   81 	lda	0x107,x
   0022 9D 05 01      [ 5]   82 	sta	0x105,x
   0025                      83 00101$:
   0025 BA            [ 2]   84 	tsx
   0026 BD 02 01      [ 5]   85 	lda	0x102,x
   0029 85*00         [ 3]   86 	sta	*(__DPTR+0)
   002B BD 03 01      [ 5]   87 	lda	0x103,x
   002E 85*01         [ 3]   88 	sta	*(__DPTR+1)
   0030 A0 00         [ 2]   89 	ldy	#0x00
   0032 B1*00         [ 6]   90 	lda	[__DPTR],y
   0034 9D 01 01      [ 5]   91 	sta	0x101,x
   0037 BD 02 01      [ 5]   92 	lda	0x102,x
   003A 18            [ 2]   93 	clc
   003B 69 01         [ 2]   94 	adc	#0x01
   003D 9D 02 01      [ 5]   95 	sta	0x102,x
   0040 BD 03 01      [ 5]   96 	lda	0x103,x
   0043 69 00         [ 2]   97 	adc	#0x00
   0045 9D 03 01      [ 5]   98 	sta	0x103,x
   0048 BD 04 01      [ 5]   99 	lda	0x104,x
   004B 85*00         [ 3]  100 	sta	*(__DPTR+0)
   004D BD 05 01      [ 5]  101 	lda	0x105,x
   0050 85*01         [ 3]  102 	sta	*(__DPTR+1)
   0052 BD 01 01      [ 5]  103 	lda	0x101,x
   0055 91*00         [ 6]  104 	sta	[__DPTR],y
   0057 BD 04 01      [ 5]  105 	lda	0x104,x
   005A 18            [ 2]  106 	clc
   005B 69 01         [ 2]  107 	adc	#0x01
   005D 9D 04 01      [ 5]  108 	sta	0x104,x
   0060 BD 05 01      [ 5]  109 	lda	0x105,x
   0063 69 00         [ 2]  110 	adc	#0x00
   0065 9D 05 01      [ 5]  111 	sta	0x105,x
   0068 BD 01 01      [ 5]  112 	lda	0x101,x
   006B D0 B8         [ 4]  113 	bne	00101$
                            114 ;	../_strcpy.c: 50: return d;
   006D BD 07 01      [ 5]  115 	lda	0x107,x
   0070 AA            [ 2]  116 	tax
   0071 86*00         [ 3]  117 	stx	*(__TEMP+0)
   0073 BA            [ 2]  118 	tsx
   0074 BD 06 01      [ 5]  119 	lda	0x106,x
   0077 08            [ 3]  120 	php
   0078 A6*00         [ 3]  121 	ldx	*(__TEMP+0)
   007A 28            [ 4]  122 	plp
                            123 ;	../_strcpy.c: 52: }
   007B 85*00         [ 3]  124 	sta	*(__TEMP+0)
   007D 68            [ 4]  125 	pla
   007E 68            [ 4]  126 	pla
   007F 68            [ 4]  127 	pla
   0080 68            [ 4]  128 	pla
   0081 68            [ 4]  129 	pla
   0082 68            [ 4]  130 	pla
   0083 68            [ 4]  131 	pla
   0084 A5*00         [ 3]  132 	lda	*(__TEMP+0)
   0086 60            [ 6]  133 	rts
                            134 	.area CODE
                            135 	.area RODATA
                            136 	.area XINIT
                            137 	.area CABS    (ABS)
