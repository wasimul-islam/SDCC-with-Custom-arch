                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module strdup
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _malloc
                             12 	.globl _strlen
                             13 	.globl _strcpy
                             14 	.globl _strdup
                             15 ;--------------------------------------------------------
                             16 ; ZP ram data
                             17 ;--------------------------------------------------------
                             18 	.area ZP      (PAG)
                             19 ;--------------------------------------------------------
                             20 ; overlayable items in ram
                             21 ;--------------------------------------------------------
                             22 ;--------------------------------------------------------
                             23 ; uninitialized external ram data
                             24 ;--------------------------------------------------------
                             25 	.area BSS
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area DABS    (ABS)
                             30 ;--------------------------------------------------------
                             31 ; initialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area DATA
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 	.area GSINIT
                             39 	.area GSFINAL
                             40 	.area GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area _CODE
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area CODE
                             50 ;------------------------------------------------------------
                             51 ;Allocation info for local variables in function 'strdup'
                             52 ;------------------------------------------------------------
                             53 ;s                         Allocated to stack - sp +3
                             54 ;r                         Allocated to stack - sp +1
                             55 ;------------------------------------------------------------
                             56 ;	../strdup.c: 33: char *strdup (const char *s)
                             57 ;	-----------------------------------------
                             58 ;	 function strdup
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 4 bytes.
   0000                      62 _strdup:
   0000 85*00         [ 3]   63 	sta	*(__TEMP+0)
   0002 8A            [ 2]   64 	txa
   0003 48            [ 3]   65 	pha
   0004 A5*00         [ 3]   66 	lda	*(__TEMP+0)
   0006 48            [ 3]   67 	pha
   0007 48            [ 3]   68 	pha
   0008 48            [ 3]   69 	pha
                             70 ;	../strdup.c: 35: char *r = malloc(strlen(s) + 1);
   0009 BA            [ 2]   71 	tsx
   000A BD 04 01      [ 5]   72 	lda	0x104,x
   000D AA            [ 2]   73 	tax
   000E 86*00         [ 3]   74 	stx	*(__TEMP+0)
   0010 BA            [ 2]   75 	tsx
   0011 BD 03 01      [ 5]   76 	lda	0x103,x
   0014 08            [ 3]   77 	php
   0015 A6*00         [ 3]   78 	ldx	*(__TEMP+0)
   0017 28            [ 4]   79 	plp
   0018 20r00r00      [ 6]   80 	jsr	_strlen
   001B 18            [ 2]   81 	clc
   001C 69 01         [ 2]   82 	adc	#0x01
   001E 90 01         [ 4]   83 	bcc	00109$
   0020 E8            [ 2]   84 	inx
   0021                      85 00109$:
   0021 20r00r00      [ 6]   86 	jsr	_malloc
   0024 48            [ 3]   87 	pha
   0025 8A            [ 2]   88 	txa
   0026 BA            [ 2]   89 	tsx
   0027 9D 03 01      [ 5]   90 	sta	0x103,x
   002A 68            [ 4]   91 	pla
                             92 ;	../strdup.c: 36: if (r)
   002B 9D 02 01      [ 5]   93 	sta	0x102, x
   002E 1D 03 01      [ 5]   94 	ora	0x103,x
   0031 F0 1F         [ 4]   95 	beq	00102$
                             96 ;	../strdup.c: 37: strcpy(r, s);
   0033 BD 05 01      [ 5]   97 	lda	0x105,x
   0036 48            [ 3]   98 	pha
   0037 BD 04 01      [ 5]   99 	lda	0x104,x
   003A 48            [ 3]  100 	pha
   003B BD 03 01      [ 5]  101 	lda	0x103,x
   003E AA            [ 2]  102 	tax
   003F 86*00         [ 3]  103 	stx	*(__TEMP+0)
   0041 BA            [ 2]  104 	tsx
   0042 BD 03 01      [ 5]  105 	lda	0x103,x
   0045 08            [ 3]  106 	php
   0046 A6*00         [ 3]  107 	ldx	*(__TEMP+0)
   0048 28            [ 4]  108 	plp
   0049 20r00r00      [ 6]  109 	jsr	_strcpy
   004C 85*00         [ 3]  110 	sta	*(__TEMP+0)
   004E 68            [ 4]  111 	pla
   004F 68            [ 4]  112 	pla
   0050 A5*00         [ 3]  113 	lda	*(__TEMP+0)
   0052                     114 00102$:
                            115 ;	../strdup.c: 38: return (r);
   0052 BA            [ 2]  116 	tsx
   0053 BD 02 01      [ 5]  117 	lda	0x102,x
   0056 AA            [ 2]  118 	tax
   0057 86*00         [ 3]  119 	stx	*(__TEMP+0)
   0059 BA            [ 2]  120 	tsx
   005A BD 01 01      [ 5]  121 	lda	0x101,x
   005D 08            [ 3]  122 	php
   005E A6*00         [ 3]  123 	ldx	*(__TEMP+0)
   0060 28            [ 4]  124 	plp
                            125 ;	../strdup.c: 39: }
   0061 85*00         [ 3]  126 	sta	*(__TEMP+0)
   0063 68            [ 4]  127 	pla
   0064 68            [ 4]  128 	pla
   0065 68            [ 4]  129 	pla
   0066 68            [ 4]  130 	pla
   0067 A5*00         [ 3]  131 	lda	*(__TEMP+0)
   0069 60            [ 6]  132 	rts
                            133 	.area CODE
                            134 	.area RODATA
                            135 	.area XINIT
                            136 	.area CABS    (ABS)
