                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbsinit
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _mbsinit
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'mbsinit'
                             49 ;------------------------------------------------------------
                             50 ;ps                        Allocated to registers a x 
                             51 ;sloc0                     Allocated to stack - sp +1
                             52 ;------------------------------------------------------------
                             53 ;	../mbsinit.c: 31: int mbsinit(const mbstate_t *ps)
                             54 ;	-----------------------------------------
                             55 ;	 function mbsinit
                             56 ;	-----------------------------------------
                             57 ;	Register assignment is optimal.
                             58 ;	Stack space usage: 2 bytes.
   0000                      59 _mbsinit:
   0000 48            [ 3]   60 	pha
   0001 48            [ 3]   61 	pha
                             62 ;	../mbsinit.c: 33: return(!ps || !ps->c[0] && !ps->c[1] && !ps->c[2]);
   0002 C9 00         [ 2]   63 	cmp	#0x00
   0004 D0 02         [ 4]   64 	bne	00123$
   0006 E0 00         [ 2]   65 	cpx	#0x00
   0008                      66 00123$:
   0008 F0 4E         [ 4]   67 	beq	00104$
   000A 85*00         [ 3]   68 	sta	*(__TEMP+0)
   000C 86*01         [ 3]   69 	stx	*(__TEMP+1)
   000E 85*00         [ 3]   70 	sta	*(__DPTR+0)
   0010 86*01         [ 3]   71 	stx	*(__DPTR+1)
   0012 A0 00         [ 2]   72 	ldy	#0x00
   0014 B1*00         [ 6]   73 	lda	[__DPTR],y
   0016 A8            [ 2]   74 	tay
   0017 A6*01         [ 3]   75 	ldx	*(__TEMP+1)
   0019 A5*00         [ 3]   76 	lda	*(__TEMP+0)
   001B C0 00         [ 2]   77 	cpy	#0x00
   001D D0 34         [ 4]   78 	bne	00103$
   001F 48            [ 3]   79 	pha
   0020 86*00         [ 3]   80 	stx	*(__TEMP+0)
   0022 8A            [ 2]   81 	txa
   0023 BA            [ 2]   82 	tsx
   0024 9D 03 01      [ 5]   83 	sta	0x103,x
   0027 68            [ 4]   84 	pla
   0028 9D 02 01      [ 5]   85 	sta	0x102,x
   002B A6*00         [ 3]   86 	ldx	*(__TEMP+0)
   002D 85*00         [ 3]   87 	sta	*(__TEMP+0)
   002F 86*01         [ 3]   88 	stx	*(__TEMP+1)
   0031 BA            [ 2]   89 	tsx
   0032 BD 01 01      [ 5]   90 	lda	0x101,x
   0035 85*00         [ 3]   91 	sta	*(__DPTR+0)
   0037 BD 02 01      [ 5]   92 	lda	0x102,x
   003A 85*01         [ 3]   93 	sta	*(__DPTR+1)
   003C A0 01         [ 2]   94 	ldy	#0x01
   003E B1*00         [ 6]   95 	lda	[__DPTR],y
   0040 A8            [ 2]   96 	tay
   0041 A6*01         [ 3]   97 	ldx	*(__TEMP+1)
   0043 A5*00         [ 3]   98 	lda	*(__TEMP+0)
   0045 C0 00         [ 2]   99 	cpy	#0x00
   0047 D0 0A         [ 4]  100 	bne	00103$
   0049 85*00         [ 3]  101 	sta	*(__DPTR+0)
   004B 86*01         [ 3]  102 	stx	*(__DPTR+1)
   004D A0 02         [ 2]  103 	ldy	#0x02
   004F B1*00         [ 6]  104 	lda	[__DPTR],y
   0051 F0 05         [ 4]  105 	beq	00104$
   0053                     106 00103$:
   0053 A9 00         [ 2]  107 	lda	#0x00
   0055 4Cr5Ar00      [ 3]  108 	jmp	00105$
   0058                     109 00104$:
   0058 A9 01         [ 2]  110 	lda	#0x01
   005A                     111 00105$:
   005A A2 00         [ 2]  112 	ldx	#0x00
                            113 ;	../mbsinit.c: 34: }
   005C 85*00         [ 3]  114 	sta	*(__TEMP+0)
   005E 68            [ 4]  115 	pla
   005F 68            [ 4]  116 	pla
   0060 A5*00         [ 3]  117 	lda	*(__TEMP+0)
   0062 60            [ 6]  118 	rts
                            119 	.area CODE
                            120 	.area RODATA
                            121 	.area XINIT
                            122 	.area CABS    (ABS)
