                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _setjmp
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 ;--------------------------------------------------------
                             12 ; ZP ram data
                             13 ;--------------------------------------------------------
                             14 	.area ZP      (PAG)
                             15 ;--------------------------------------------------------
                             16 ; overlayable items in ram
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; uninitialized external ram data
                             20 ;--------------------------------------------------------
                             21 	.area BSS
                             22 ;--------------------------------------------------------
                             23 ; absolute external ram data
                             24 ;--------------------------------------------------------
                             25 	.area DABS    (ABS)
                             26 ;--------------------------------------------------------
                             27 ; initialized external ram data
                             28 ;--------------------------------------------------------
                             29 	.area DATA
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _CODE
                             34 	.area GSINIT
                             35 	.area GSFINAL
                             36 	.area GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 	.area _CODE
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area CODE
                             46 ;------------------------------------------------------------
                             47 ;Allocation info for local variables in function 'dummy'
                             48 ;------------------------------------------------------------
                             49 ;	_setjmp.c: 33: static void dummy (void) __naked
                             50 ;	-----------------------------------------
                             51 ;	 function dummy
                             52 ;	-----------------------------------------
                             53 ;	Register assignment is optimal.
                             54 ;	Stack space usage: 0 bytes.
   0000                      55 _dummy:
                             56 ;	naked function: no prologue.
                             57 ;	_setjmp.c: 132: __endasm;
                             58 ;--------------------------------------------------------
                             59 ;	overlayable items in ram
                             60 ;--------------------------------------------------------
                             61 	        .area	OSEG (PAG, OVR)
   0000                      62 	___setjmp_buf:
   0000                      63 	        .ds	2
                             64 	        .area	OSEG (PAG, OVR)
   0000                      65 	_longjmp_buf:
   0000                      66 	        .ds	2
                             67 ;--------------------------------------------------------
                             68 ;	extended address mode data
                             69 ;--------------------------------------------------------
                             70 	        .area	BSS
   0000                      71 	_longjmp_PARM_2:
   0000                      72 	        .ds	2
                             73 ;--------------------------------------------------------
                             74 ;	code
                             75 ;--------------------------------------------------------
                             76 	        .area	CODE
                             77 ;------------------------------------------------------------
                             78 ;Allocation	info for local variables in function '__setjmp'
                             79 ;------------------------------------------------------------
                             80 ;buf	Allocated with name '___setjmp_buf'
                             81 ;------------------------------------------------------------
                             82 ;_setjmp.c:205:	int __setjmp (jmp_buf buf)
                             83 ;	-----------------------------------------
                             84 ;	function __setjmp
                             85 ;	-----------------------------------------
                             86 ;	Stack space usage: 1 bytes.
                             87 	        .globl	___setjmp
   0000                      88 	___setjmp:
   0000 86*01         [ 3]   89 	        stx	*(___setjmp_buf + 1) ; msb(buf)
   0002 85*00         [ 3]   90 	        sta	*(___setjmp_buf + 0) ; lsb(buf)
                             91         ;	save stack pointer
   0004 BA            [ 2]   92 	        tsx
   0005 A0 00         [ 2]   93 	        ldy	#0
   0007 8A            [ 2]   94 	        txa
   0008 91*00         [ 6]   95 	        sta	[___setjmp_buf],y
                             96         ;	save return address
   000A BD 01 01      [ 5]   97 	        lda	0x101,x
   000D C8            [ 2]   98 	        iny
   000E 91*00         [ 6]   99 	        sta	[___setjmp_buf],y
   0010 BD 02 01      [ 5]  100 	        lda	0x102,x
   0013 C8            [ 2]  101 	        iny
   0014 91*00         [ 6]  102 	        sta	[___setjmp_buf],y
                            103         ;	return 0
   0016 A9 00         [ 2]  104 	        lda	#0
   0018 AA            [ 2]  105 	        tax
   0019 60            [ 6]  106 	        rts
                            107 ;------------------------------------------------------------
                            108 ;Allocation	info for local variables in function 'longjmp'
                            109 ;------------------------------------------------------------
                            110 ;rv	Allocated with name '_longjmp_PARM_2'
                            111 ;buf	Allocated with name '_longjmp_buf'
                            112 ;------------------------------------------------------------
                            113 ;_setjmp.c:216:	int longjmp (jmp_buf buf, int rv)
                            114 ;	-----------------------------------------
                            115 ;	function longjmp
                            116 ;	-----------------------------------------
                            117 ;	Stack space usage: 1 bytes.
                            118 	        .globl	_longjmp
                            119 	        .globl	_longjmp_PARM_2
   001A                     120 	_longjmp:
   001A 86*01         [ 3]  121 	        stx	*(_longjmp_buf + 1) ; msb(buf)
   001C 85*00         [ 3]  122 	        sta	*(_longjmp_buf + 0) ; lsb(buf)
                            123         ;	restore stack pointer
   001E A0 00         [ 2]  124 	        ldy	#0
   0020 B1*00         [ 6]  125 	        lda	[___setjmp_buf],y
   0022 AA            [ 2]  126 	        tax
   0023 9A            [ 2]  127 	        txs
                            128         ;	set return address
   0024 C8            [ 2]  129 	        iny
   0025 B1*00         [ 6]  130 	        lda	[___setjmp_buf],y
   0027 9D 01 01      [ 5]  131 	        sta	0x101,x
   002A C8            [ 2]  132 	        iny
   002B B1*00         [ 6]  133 	        lda	[___setjmp_buf],y
   002D 9D 02 01      [ 5]  134 	        sta	0x102,x
                            135 ;_setjmp.c:224:	return rv ? rv : 1;
   0030 AEr01r00      [ 4]  136 	        ldx	(_longjmp_PARM_2 + 1)
   0033 8A            [ 2]  137 	        txa
   0034 0Dr00r00      [ 4]  138 	        ora	(_longjmp_PARM_2 + 0)
   0037 F0 04         [ 4]  139 	        beq	0001$
   0039 ADr00r00      [ 4]  140 	        lda	(_longjmp_PARM_2 + 0)
   003C 60            [ 6]  141 	        rts
   003D                     142 	0001$:
   003D A9 01         [ 2]  143 	        lda	#0x01
   003F 60            [ 6]  144 	        rts
                            145 ;	_setjmp.c: 133: }
                            146 ;	naked function: no epilogue.
                            147 	.area CODE
                            148 	.area RODATA
                            149 	.area XINIT
                            150 	.area CABS    (ABS)
