                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strncpy
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strncpy
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'strncpy'
                             49 ;------------------------------------------------------------
                             50 ;s                         Allocated to stack - sp +13
                             51 ;n                         Allocated to stack - sp +15
                             52 ;d                         Allocated to stack - sp +9
                             53 ;d1                        Allocated to stack - sp +7
                             54 ;sloc0                     Allocated to stack - sp +5
                             55 ;sloc1                     Allocated to stack - sp +3
                             56 ;sloc2                     Allocated to stack - sp +1
                             57 ;------------------------------------------------------------
                             58 ;	../_strncpy.c: 33: char *strncpy ( char * d, const char * s, size_t n )
                             59 ;	-----------------------------------------
                             60 ;	 function strncpy
                             61 ;	-----------------------------------------
                             62 ;	Register assignment is optimal.
                             63 ;	Stack space usage: 10 bytes.
   0000                      64 _strncpy:
   0000 85*00         [ 3]   65 	sta	*(__TEMP+0)
   0002 8A            [ 2]   66 	txa
   0003 48            [ 3]   67 	pha
   0004 A5*00         [ 3]   68 	lda	*(__TEMP+0)
   0006 48            [ 3]   69 	pha
   0007 86*01         [ 3]   70 	stx	*(__TEMP+1)
   0009 BA            [ 2]   71 	tsx
   000A 8A            [ 2]   72 	txa
   000B 18            [ 2]   73 	clc
   000C 69 F8         [ 2]   74 	adc	#0xf8
   000E AA            [ 2]   75 	tax
   000F 9A            [ 2]   76 	txs
   0010 A6*01         [ 3]   77 	ldx	*(__TEMP+1)
   0012 A5*00         [ 3]   78 	lda	*(__TEMP+0)
                             79 ;	../_strncpy.c: 35: register char * d1 =  d;
   0014 BA            [ 2]   80 	tsx
   0015 BD 09 01      [ 5]   81 	lda	0x109,x
   0018 9D 07 01      [ 5]   82 	sta	0x107,x
   001B BD 0A 01      [ 5]   83 	lda	0x10a,x
   001E 9D 08 01      [ 5]   84 	sta	0x108,x
                             85 ;	../_strncpy.c: 37: while ( n && *s )
   0021 BD 0F 01      [ 5]   86 	lda	0x10f,x
   0024 9D 05 01      [ 5]   87 	sta	0x105,x
   0027 BD 10 01      [ 5]   88 	lda	0x110,x
   002A 9D 06 01      [ 5]   89 	sta	0x106,x
   002D BD 0D 01      [ 5]   90 	lda	0x10d,x
   0030 9D 03 01      [ 5]   91 	sta	0x103,x
   0033 BD 0E 01      [ 5]   92 	lda	0x10e,x
   0036 9D 04 01      [ 5]   93 	sta	0x104,x
   0039 BD 09 01      [ 5]   94 	lda	0x109,x
   003C 9D 01 01      [ 5]   95 	sta	0x101,x
   003F BD 0A 01      [ 5]   96 	lda	0x10a,x
   0042 9D 02 01      [ 5]   97 	sta	0x102,x
   0045                      98 00102$:
   0045 BA            [ 2]   99 	tsx
   0046 BD 05 01      [ 5]  100 	lda	0x105,x
   0049 1D 06 01      [ 5]  101 	ora	0x106,x
   004C F0 5C         [ 4]  102 	beq	00114$
   004E BD 03 01      [ 5]  103 	lda	0x103,x
   0051 85*00         [ 3]  104 	sta	*(__DPTR+0)
   0053 BD 04 01      [ 5]  105 	lda	0x104,x
   0056 85*01         [ 3]  106 	sta	*(__DPTR+1)
   0058 A0 00         [ 2]  107 	ldy	#0x00
   005A B1*00         [ 6]  108 	lda	[__DPTR],y
   005C A8            [ 2]  109 	tay
   005D F0 4B         [ 4]  110 	beq	00114$
                            111 ;	../_strncpy.c: 39: n-- ;
   005F BD 05 01      [ 5]  112 	lda	0x105,x
   0062 38            [ 2]  113 	sec
   0063 E9 01         [ 2]  114 	sbc	#0x01
   0065 9D 05 01      [ 5]  115 	sta	0x105,x
   0068 BD 06 01      [ 5]  116 	lda	0x106,x
   006B E9 00         [ 2]  117 	sbc	#0x00
   006D 9D 06 01      [ 5]  118 	sta	0x106,x
                            119 ;	../_strncpy.c: 40: *d++ = *s++ ;
   0070 BD 03 01      [ 5]  120 	lda	0x103,x
   0073 18            [ 2]  121 	clc
   0074 69 01         [ 2]  122 	adc	#0x01
   0076 9D 03 01      [ 5]  123 	sta	0x103,x
   0079 BD 04 01      [ 5]  124 	lda	0x104,x
   007C 69 00         [ 2]  125 	adc	#0x00
   007E 9D 04 01      [ 5]  126 	sta	0x104,x
   0081 84*00         [ 3]  127 	sty	*(__TEMP+0)
   0083 BD 01 01      [ 5]  128 	lda	0x101,x
   0086 85*00         [ 3]  129 	sta	*(__DPTR+0)
   0088 BD 02 01      [ 5]  130 	lda	0x102,x
   008B 85*01         [ 3]  131 	sta	*(__DPTR+1)
   008D A4*00         [ 3]  132 	ldy	*(__TEMP+0)
   008F 98            [ 2]  133 	tya
   0090 A0 00         [ 2]  134 	ldy	#0x00
   0092 91*00         [ 6]  135 	sta	[__DPTR],y
   0094 A4*00         [ 3]  136 	ldy	*(__TEMP+0)
   0096 BD 01 01      [ 5]  137 	lda	0x101,x
   0099 18            [ 2]  138 	clc
   009A 69 01         [ 2]  139 	adc	#0x01
   009C 9D 01 01      [ 5]  140 	sta	0x101,x
   009F BD 02 01      [ 5]  141 	lda	0x102,x
   00A2 69 00         [ 2]  142 	adc	#0x00
   00A4 9D 02 01      [ 5]  143 	sta	0x102,x
   00A7 4Cr45r00      [ 3]  144 	jmp	00102$
                            145 ;	../_strncpy.c: 42: while ( n-- )
   00AA                     146 00114$:
   00AA BA            [ 2]  147 	tsx
   00AB BD 01 01      [ 5]  148 	lda	0x101,x
   00AE 9D 09 01      [ 5]  149 	sta	0x109,x
   00B1 BD 02 01      [ 5]  150 	lda	0x102,x
   00B4 9D 0A 01      [ 5]  151 	sta	0x10a,x
   00B7 BD 05 01      [ 5]  152 	lda	0x105,x
   00BA 9D 01 01      [ 5]  153 	sta	0x101,x
   00BD BD 06 01      [ 5]  154 	lda	0x106,x
   00C0 9D 02 01      [ 5]  155 	sta	0x102,x
   00C3                     156 00105$:
   00C3 BA            [ 2]  157 	tsx
   00C4 BD 01 01      [ 5]  158 	lda	0x101,x
   00C7 9D 03 01      [ 5]  159 	sta	0x103,x
   00CA BD 02 01      [ 5]  160 	lda	0x102,x
   00CD 9D 04 01      [ 5]  161 	sta	0x104,x
   00D0 BD 01 01      [ 5]  162 	lda	0x101,x
   00D3 38            [ 2]  163 	sec
   00D4 E9 01         [ 2]  164 	sbc	#0x01
   00D6 9D 01 01      [ 5]  165 	sta	0x101,x
   00D9 BD 02 01      [ 5]  166 	lda	0x102,x
   00DC E9 00         [ 2]  167 	sbc	#0x00
   00DE 9D 02 01      [ 5]  168 	sta	0x102,x
   00E1 BD 03 01      [ 5]  169 	lda	0x103,x
   00E4 1D 04 01      [ 5]  170 	ora	0x104,x
   00E7 F0 23         [ 4]  171 	beq	00107$
                            172 ;	../_strncpy.c: 44: *d++ = '\0' ;
   00E9 BD 09 01      [ 5]  173 	lda	0x109,x
   00EC 85*00         [ 3]  174 	sta	*(__DPTR+0)
   00EE BD 0A 01      [ 5]  175 	lda	0x10a,x
   00F1 85*01         [ 3]  176 	sta	*(__DPTR+1)
   00F3 A9 00         [ 2]  177 	lda	#0x00
   00F5 A8            [ 2]  178 	tay
   00F6 91*00         [ 6]  179 	sta	[__DPTR],y
   00F8 BD 09 01      [ 5]  180 	lda	0x109,x
   00FB 18            [ 2]  181 	clc
   00FC 69 01         [ 2]  182 	adc	#0x01
   00FE 9D 09 01      [ 5]  183 	sta	0x109,x
   0101 BD 0A 01      [ 5]  184 	lda	0x10a,x
   0104 69 00         [ 2]  185 	adc	#0x00
   0106 9D 0A 01      [ 5]  186 	sta	0x10a,x
   0109 4CrC3r00      [ 3]  187 	jmp	00105$
   010C                     188 00107$:
                            189 ;	../_strncpy.c: 46: return d1;
   010C BA            [ 2]  190 	tsx
   010D BD 08 01      [ 5]  191 	lda	0x108,x
   0110 AA            [ 2]  192 	tax
   0111 86*00         [ 3]  193 	stx	*(__TEMP+0)
   0113 BA            [ 2]  194 	tsx
   0114 BD 07 01      [ 5]  195 	lda	0x107,x
   0117 08            [ 3]  196 	php
   0118 A6*00         [ 3]  197 	ldx	*(__TEMP+0)
   011A 28            [ 4]  198 	plp
                            199 ;	../_strncpy.c: 47: }
   011B 85*00         [ 3]  200 	sta	*(__TEMP+0)
   011D 86*01         [ 3]  201 	stx	*(__TEMP+1)
   011F BA            [ 2]  202 	tsx
   0120 8A            [ 2]  203 	txa
   0121 18            [ 2]  204 	clc
   0122 69 0A         [ 2]  205 	adc	#0x0a
   0124 AA            [ 2]  206 	tax
   0125 9A            [ 2]  207 	txs
   0126 A6*01         [ 3]  208 	ldx	*(__TEMP+1)
   0128 A5*00         [ 3]  209 	lda	*(__TEMP+0)
   012A 60            [ 6]  210 	rts
                            211 	.area CODE
                            212 	.area RODATA
                            213 	.area XINIT
                            214 	.area CABS    (ABS)
