                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _modslong
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __modslong
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '_modslong'
                             49 ;------------------------------------------------------------
                             50 ;a                         Allocated to stack - sp +12
                             51 ;b                         Allocated to stack - sp +16
                             52 ;r                         Allocated to stack - sp +6
                             53 ;sloc0                     Allocated to stack - sp +9
                             54 ;sloc1                     Allocated to stack - sp +5
                             55 ;sloc2                     Allocated to stack - sp +1
                             56 ;------------------------------------------------------------
                             57 ;	../_modslong.c: 265: _modslong (long a, long b) __SDCC_NONBANKED
                             58 ;	-----------------------------------------
                             59 ;	 function _modslong
                             60 ;	-----------------------------------------
                             61 ;	Register assignment is optimal.
                             62 ;	Stack space usage: 9 bytes.
   0000                      63 __modslong:
   0000 85*00         [ 3]   64 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   65 	stx	*(__TEMP+1)
   0004 BA            [ 2]   66 	tsx
   0005 8A            [ 2]   67 	txa
   0006 18            [ 2]   68 	clc
   0007 69 F7         [ 2]   69 	adc	#0xf7
   0009 AA            [ 2]   70 	tax
   000A 9A            [ 2]   71 	txs
   000B A6*01         [ 3]   72 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   73 	lda	*(__TEMP+0)
                             74 ;	../_modslong.c: 269: r = (unsigned long)(a < 0 ? -a : a) % (unsigned long)(b < 0 ? -b : b);
   000F BA            [ 2]   75 	tsx
   0010 BD 0F 01      [ 5]   76 	lda	0x10f,x
   0013 38            [ 2]   77 	sec
   0014 E9 00         [ 2]   78 	sbc	#0x00
   0016 50 04         [ 4]   79 	bvc	00124$
   0018 10 09         [ 4]   80 	bpl	00122$
   001A 30 02         [ 4]   81 	bmi	00125$
   001C                      82 00124$:
   001C 30 05         [ 4]   83 	bmi	00122$
   001E                      84 00125$:
   001E A9 00         [ 2]   85 	lda	#0x00
   0020 4Cr25r00      [ 3]   86 	jmp	00123$
   0023                      87 00122$:
   0023 A9 01         [ 2]   88 	lda	#0x01
   0025                      89 00123$:
   0025 9D 09 01      [ 5]   90 	sta	0x109, x
   0028 F0 24         [ 4]   91 	beq	00106$
   002A A9 00         [ 2]   92 	lda	#0x00
   002C 38            [ 2]   93 	sec
   002D FD 0C 01      [ 5]   94 	sbc	0x10c,x
   0030 9D 05 01      [ 5]   95 	sta	0x105,x
   0033 A9 00         [ 2]   96 	lda	#0x00
   0035 FD 0D 01      [ 5]   97 	sbc	0x10d,x
   0038 9D 06 01      [ 5]   98 	sta	0x106,x
   003B A9 00         [ 2]   99 	lda	#0x00
   003D FD 0E 01      [ 5]  100 	sbc	0x10e,x
   0040 9D 07 01      [ 5]  101 	sta	0x107,x
   0043 A9 00         [ 2]  102 	lda	#0x00
   0045 FD 0F 01      [ 5]  103 	sbc	0x10f,x
   0048 9D 08 01      [ 5]  104 	sta	0x108,x
   004B 4Cr67r00      [ 3]  105 	jmp	00107$
   004E                     106 00106$:
   004E BA            [ 2]  107 	tsx
   004F BD 0C 01      [ 5]  108 	lda	0x10c,x
   0052 9D 05 01      [ 5]  109 	sta	0x105,x
   0055 BD 0D 01      [ 5]  110 	lda	0x10d,x
   0058 9D 06 01      [ 5]  111 	sta	0x106,x
   005B BD 0E 01      [ 5]  112 	lda	0x10e,x
   005E 9D 07 01      [ 5]  113 	sta	0x107,x
   0061 BD 0F 01      [ 5]  114 	lda	0x10f,x
   0064 9D 08 01      [ 5]  115 	sta	0x108,x
   0067                     116 00107$:
   0067 BA            [ 2]  117 	tsx
   0068 BD 13 01      [ 5]  118 	lda	0x113,x
   006B 38            [ 2]  119 	sec
   006C E9 00         [ 2]  120 	sbc	#0x00
   006E 50 04         [ 4]  121 	bvc	00128$
   0070 10 04         [ 4]  122 	bpl	00127$
   0072 30 26         [ 4]  123 	bmi	00108$
   0074                     124 00128$:
   0074 10 24         [ 4]  125 	bpl	00108$
   0076                     126 00127$:
   0076 A9 00         [ 2]  127 	lda	#0x00
   0078 38            [ 2]  128 	sec
   0079 FD 10 01      [ 5]  129 	sbc	0x110,x
   007C 9D 01 01      [ 5]  130 	sta	0x101,x
   007F A9 00         [ 2]  131 	lda	#0x00
   0081 FD 11 01      [ 5]  132 	sbc	0x111,x
   0084 9D 02 01      [ 5]  133 	sta	0x102,x
   0087 A9 00         [ 2]  134 	lda	#0x00
   0089 FD 12 01      [ 5]  135 	sbc	0x112,x
   008C 9D 03 01      [ 5]  136 	sta	0x103,x
   008F A9 00         [ 2]  137 	lda	#0x00
   0091 FD 13 01      [ 5]  138 	sbc	0x113,x
   0094 9D 04 01      [ 5]  139 	sta	0x104,x
   0097 4CrB3r00      [ 3]  140 	jmp	00109$
   009A                     141 00108$:
   009A BA            [ 2]  142 	tsx
   009B BD 10 01      [ 5]  143 	lda	0x110,x
   009E 9D 01 01      [ 5]  144 	sta	0x101,x
   00A1 BD 11 01      [ 5]  145 	lda	0x111,x
   00A4 9D 02 01      [ 5]  146 	sta	0x102,x
   00A7 BD 12 01      [ 5]  147 	lda	0x112,x
   00AA 9D 03 01      [ 5]  148 	sta	0x103,x
   00AD BD 13 01      [ 5]  149 	lda	0x113,x
   00B0 9D 04 01      [ 5]  150 	sta	0x104,x
   00B3                     151 00109$:
   00B3 BA            [ 2]  152 	tsx
   00B4 BD 04 01      [ 5]  153 	lda	0x104,x
   00B7 48            [ 3]  154 	pha
   00B8 BD 03 01      [ 5]  155 	lda	0x103,x
   00BB 48            [ 3]  156 	pha
   00BC BD 02 01      [ 5]  157 	lda	0x102,x
   00BF 48            [ 3]  158 	pha
   00C0 BD 01 01      [ 5]  159 	lda	0x101,x
   00C3 48            [ 3]  160 	pha
   00C4 BD 08 01      [ 5]  161 	lda	0x108,x
   00C7 48            [ 3]  162 	pha
   00C8 BD 07 01      [ 5]  163 	lda	0x107,x
   00CB 48            [ 3]  164 	pha
   00CC BD 06 01      [ 5]  165 	lda	0x106,x
   00CF 48            [ 3]  166 	pha
   00D0 BD 05 01      [ 5]  167 	lda	0x105,x
   00D3 48            [ 3]  168 	pha
                            169 ;	../_modslong.c: 271: if (a < 0)
   00D4 20r00r00      [ 6]  170 	jsr	__modulong
   00D7 86*00         [ 3]  171 	stx	*(__TEMP+0)
   00D9 BA            [ 2]  172 	tsx
   00DA 9D 09 01      [ 5]  173 	sta	0x109,x
   00DD A6*00         [ 3]  174 	ldx	*(__TEMP+0)
   00DF 8A            [ 2]  175 	txa
   00E0 BA            [ 2]  176 	tsx
   00E1 9D 0A 01      [ 5]  177 	sta	0x10a,x
   00E4 A6*00         [ 3]  178 	ldx	*(__TEMP+0)
   00E6 A5*00         [ 3]  179 	lda	*___SDCC_m6502_ret2
   00E8 BA            [ 2]  180 	tsx
   00E9 9D 0B 01      [ 5]  181 	sta	0x10b,x
   00EC A5*00         [ 3]  182 	lda	*___SDCC_m6502_ret3
   00EE 9D 0C 01      [ 5]  183 	sta	0x10c,x
   00F1 85*00         [ 3]  184 	sta	*(__TEMP+0)
   00F3 86*01         [ 3]  185 	stx	*(__TEMP+1)
   00F5 BA            [ 2]  186 	tsx
   00F6 8A            [ 2]  187 	txa
   00F7 18            [ 2]  188 	clc
   00F8 69 08         [ 2]  189 	adc	#0x08
   00FA AA            [ 2]  190 	tax
   00FB 9A            [ 2]  191 	txs
   00FC A6*01         [ 3]  192 	ldx	*(__TEMP+1)
   00FE A5*00         [ 3]  193 	lda	*(__TEMP+0)
   0100 BA            [ 2]  194 	tsx
   0101 BD 09 01      [ 5]  195 	lda	0x109,x
   0104 F0 39         [ 4]  196 	beq	00102$
                            197 ;	../_modslong.c: 272: return -r;
   0106 A9 00         [ 2]  198 	lda	#0x00
   0108 38            [ 2]  199 	sec
   0109 FD 01 01      [ 5]  200 	sbc	0x101,x
   010C 9D 05 01      [ 5]  201 	sta	0x105,x
   010F A9 00         [ 2]  202 	lda	#0x00
   0111 FD 02 01      [ 5]  203 	sbc	0x102,x
   0114 9D 06 01      [ 5]  204 	sta	0x106,x
   0117 A9 00         [ 2]  205 	lda	#0x00
   0119 FD 03 01      [ 5]  206 	sbc	0x103,x
   011C 9D 07 01      [ 5]  207 	sta	0x107,x
   011F A9 00         [ 2]  208 	lda	#0x00
   0121 FD 04 01      [ 5]  209 	sbc	0x104,x
   0124 9D 08 01      [ 5]  210 	sta	0x108, x
   0127 85*00         [ 3]  211 	sta	*___SDCC_m6502_ret3
   0129 BD 07 01      [ 5]  212 	lda	0x107,x
   012C 85*00         [ 3]  213 	sta	*___SDCC_m6502_ret2
   012E BD 06 01      [ 5]  214 	lda	0x106,x
   0131 AA            [ 2]  215 	tax
   0132 86*00         [ 3]  216 	stx	*(__TEMP+0)
   0134 BA            [ 2]  217 	tsx
   0135 BD 05 01      [ 5]  218 	lda	0x105,x
   0138 08            [ 3]  219 	php
   0139 A6*00         [ 3]  220 	ldx	*(__TEMP+0)
   013B 28            [ 4]  221 	plp
   013C 4Cr58r01      [ 3]  222 	jmp	00104$
   013F                     223 00102$:
                            224 ;	../_modslong.c: 274: return r;
   013F BA            [ 2]  225 	tsx
   0140 BD 04 01      [ 5]  226 	lda	0x104,x
   0143 85*00         [ 3]  227 	sta	*___SDCC_m6502_ret3
   0145 BD 03 01      [ 5]  228 	lda	0x103,x
   0148 85*00         [ 3]  229 	sta	*___SDCC_m6502_ret2
   014A BD 02 01      [ 5]  230 	lda	0x102,x
   014D AA            [ 2]  231 	tax
   014E 86*00         [ 3]  232 	stx	*(__TEMP+0)
   0150 BA            [ 2]  233 	tsx
   0151 BD 01 01      [ 5]  234 	lda	0x101,x
   0154 08            [ 3]  235 	php
   0155 A6*00         [ 3]  236 	ldx	*(__TEMP+0)
   0157 28            [ 4]  237 	plp
   0158                     238 00104$:
                            239 ;	../_modslong.c: 275: }
   0158 85*00         [ 3]  240 	sta	*(__TEMP+0)
   015A 86*01         [ 3]  241 	stx	*(__TEMP+1)
   015C BA            [ 2]  242 	tsx
   015D 8A            [ 2]  243 	txa
   015E 18            [ 2]  244 	clc
   015F 69 09         [ 2]  245 	adc	#0x09
   0161 AA            [ 2]  246 	tax
   0162 9A            [ 2]  247 	txs
   0163 A6*01         [ 3]  248 	ldx	*(__TEMP+1)
   0165 A5*00         [ 3]  249 	lda	*(__TEMP+0)
   0167 60            [ 6]  250 	rts
                            251 	.area CODE
                            252 	.area RODATA
                            253 	.area XINIT
                            254 	.area CABS    (ABS)
