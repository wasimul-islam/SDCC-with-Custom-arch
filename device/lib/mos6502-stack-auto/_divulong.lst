                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _divulong
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __divulong
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '_divulong'
                             49 ;------------------------------------------------------------
                             50 ;x                         Allocated to stack - sp +12
                             51 ;y                         Allocated to stack - sp +16
                             52 ;reste                     Allocated to stack - sp +1
                             53 ;count                     Allocated to registers y 
                             54 ;c                         Allocated to stack - sp +9
                             55 ;sloc0                     Allocated to stack - sp +5
                             56 ;------------------------------------------------------------
                             57 ;	../_divulong.c: 337: _divulong (unsigned long x, unsigned long y) __SDCC_NONBANKED
                             58 ;	-----------------------------------------
                             59 ;	 function _divulong
                             60 ;	-----------------------------------------
                             61 ;	Register assignment is optimal.
                             62 ;	Stack space usage: 9 bytes.
   0000                      63 __divulong:
   0000 85*00         [ 3]   64 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   65 	stx	*(__TEMP+1)
   0004 BA            [ 2]   66 	tsx
   0005 8A            [ 2]   67 	txa
   0006 18            [ 2]   68 	clc
   0007 69 F7         [ 2]   69 	adc	#0xf7
   0009 AA            [ 2]   70 	tax
   000A 9A            [ 2]   71 	txs
                             72 ;	../_divulong.c: 339: unsigned long reste = 0L;
   000B BA            [ 2]   73 	tsx
   000C A9 00         [ 2]   74 	lda	#0x00
   000E 9D 01 01      [ 5]   75 	sta	0x101,x
   0011 9D 02 01      [ 5]   76 	sta	0x102,x
   0014 9D 03 01      [ 5]   77 	sta	0x103,x
   0017 9D 04 01      [ 5]   78 	sta	0x104,x
                             79 ;	../_divulong.c: 343: do
   001A A0 20         [ 2]   80 	ldy	#0x20
   001C                      81 00105$:
                             82 ;	../_divulong.c: 346: c = MSB_SET(x);
   001C BA            [ 2]   83 	tsx
   001D BD 0F 01      [ 5]   84 	lda	0x10f,x
   0020 2A            [ 2]   85 	rol	a
   0021 A9 00         [ 2]   86 	lda	#0x00
   0023 2A            [ 2]   87 	rol	a
   0024 9D 05 01      [ 5]   88 	sta	0x105,x
   0027 48            [ 3]   89 	pha
   0028 A9 00         [ 2]   90 	lda	#0x00
   002A 9D 06 01      [ 5]   91 	sta	0x106,x
   002D A9 00         [ 2]   92 	lda	#0x00
   002F 9D 07 01      [ 5]   93 	sta	0x107,x
   0032 A9 00         [ 2]   94 	lda	#0x00
   0034 9D 08 01      [ 5]   95 	sta	0x108,x
   0037 68            [ 4]   96 	pla
   0038 BD 05 01      [ 5]   97 	lda	0x105,x
   003B 29 01         [ 2]   98 	and	#0x01
   003D 9D 09 01      [ 5]   99 	sta	0x109,x
                            100 ;	../_divulong.c: 347: x <<= 1;
   0040 BD 0C 01      [ 5]  101 	lda	0x10c,x
   0043 0A            [ 2]  102 	asl	a
   0044 9D 0C 01      [ 5]  103 	sta	0x10c,x
   0047 BD 0D 01      [ 5]  104 	lda	0x10d,x
   004A 2A            [ 2]  105 	rol	a
   004B 9D 0D 01      [ 5]  106 	sta	0x10d,x
   004E BD 0E 01      [ 5]  107 	lda	0x10e,x
   0051 2A            [ 2]  108 	rol	a
   0052 9D 0E 01      [ 5]  109 	sta	0x10e,x
   0055 BD 0F 01      [ 5]  110 	lda	0x10f,x
   0058 2A            [ 2]  111 	rol	a
   0059 9D 0F 01      [ 5]  112 	sta	0x10f,x
                            113 ;	../_divulong.c: 348: reste <<= 1;
   005C BD 01 01      [ 5]  114 	lda	0x101,x
   005F 0A            [ 2]  115 	asl	a
   0060 9D 01 01      [ 5]  116 	sta	0x101,x
   0063 BD 02 01      [ 5]  117 	lda	0x102,x
   0066 2A            [ 2]  118 	rol	a
   0067 9D 02 01      [ 5]  119 	sta	0x102,x
   006A BD 03 01      [ 5]  120 	lda	0x103,x
   006D 2A            [ 2]  121 	rol	a
   006E 9D 03 01      [ 5]  122 	sta	0x103,x
   0071 BD 04 01      [ 5]  123 	lda	0x104,x
   0074 2A            [ 2]  124 	rol	a
   0075 9D 04 01      [ 5]  125 	sta	0x104,x
                            126 ;	../_divulong.c: 349: if (c)
   0078 BD 09 01      [ 5]  127 	lda	0x109,x
   007B F0 08         [ 4]  128 	beq	00102$
                            129 ;	../_divulong.c: 350: reste |= 1L;
   007D BD 01 01      [ 5]  130 	lda	0x101,x
   0080 09 01         [ 2]  131 	ora	#0x01
   0082 9D 01 01      [ 5]  132 	sta	0x101,x
   0085                     133 00102$:
                            134 ;	../_divulong.c: 352: if (reste >= y)
   0085 BA            [ 2]  135 	tsx
   0086 BD 01 01      [ 5]  136 	lda	0x101,x
   0089 38            [ 2]  137 	sec
   008A FD 10 01      [ 5]  138 	sbc	0x110,x
   008D BD 02 01      [ 5]  139 	lda	0x102,x
   0090 FD 11 01      [ 5]  140 	sbc	0x111,x
   0093 BD 03 01      [ 5]  141 	lda	0x103,x
   0096 FD 12 01      [ 5]  142 	sbc	0x112,x
   0099 BD 04 01      [ 5]  143 	lda	0x104,x
   009C FD 13 01      [ 5]  144 	sbc	0x113,x
   009F 90 2D         [ 4]  145 	bcc	00106$
                            146 ;	../_divulong.c: 354: reste -= y;
   00A1 BD 01 01      [ 5]  147 	lda	0x101,x
   00A4 38            [ 2]  148 	sec
   00A5 FD 10 01      [ 5]  149 	sbc	0x110,x
   00A8 9D 01 01      [ 5]  150 	sta	0x101,x
   00AB BD 02 01      [ 5]  151 	lda	0x102,x
   00AE FD 11 01      [ 5]  152 	sbc	0x111,x
   00B1 9D 02 01      [ 5]  153 	sta	0x102,x
   00B4 BD 03 01      [ 5]  154 	lda	0x103,x
   00B7 FD 12 01      [ 5]  155 	sbc	0x112,x
   00BA 9D 03 01      [ 5]  156 	sta	0x103,x
   00BD BD 04 01      [ 5]  157 	lda	0x104,x
   00C0 FD 13 01      [ 5]  158 	sbc	0x113,x
   00C3 9D 04 01      [ 5]  159 	sta	0x104,x
                            160 ;	../_divulong.c: 356: x |= 1L;
   00C6 BD 0C 01      [ 5]  161 	lda	0x10c,x
   00C9 09 01         [ 2]  162 	ora	#0x01
   00CB 9D 0C 01      [ 5]  163 	sta	0x10c,x
   00CE                     164 00106$:
                            165 ;	../_divulong.c: 359: while (--count);
   00CE 88            [ 2]  166 	dey
   00CF F0 03         [ 4]  167 	beq	00129$
   00D1 4Cr1Cr00      [ 3]  168 	jmp	00105$
   00D4                     169 00129$:
                            170 ;	../_divulong.c: 360: return x;
   00D4 BA            [ 2]  171 	tsx
   00D5 BD 0F 01      [ 5]  172 	lda	0x10f,x
   00D8 85*00         [ 3]  173 	sta	*___SDCC_m6502_ret3
   00DA BD 0E 01      [ 5]  174 	lda	0x10e,x
   00DD 85*00         [ 3]  175 	sta	*___SDCC_m6502_ret2
   00DF BD 0D 01      [ 5]  176 	lda	0x10d,x
   00E2 AA            [ 2]  177 	tax
   00E3 86*00         [ 3]  178 	stx	*(__TEMP+0)
   00E5 BA            [ 2]  179 	tsx
   00E6 BD 0C 01      [ 5]  180 	lda	0x10c,x
   00E9 08            [ 3]  181 	php
   00EA A6*00         [ 3]  182 	ldx	*(__TEMP+0)
   00EC 28            [ 4]  183 	plp
                            184 ;	../_divulong.c: 361: }
   00ED 85*00         [ 3]  185 	sta	*(__TEMP+0)
   00EF 86*01         [ 3]  186 	stx	*(__TEMP+1)
   00F1 BA            [ 2]  187 	tsx
   00F2 8A            [ 2]  188 	txa
   00F3 18            [ 2]  189 	clc
   00F4 69 09         [ 2]  190 	adc	#0x09
   00F6 AA            [ 2]  191 	tax
   00F7 9A            [ 2]  192 	txs
   00F8 A6*01         [ 3]  193 	ldx	*(__TEMP+1)
   00FA A5*00         [ 3]  194 	lda	*(__TEMP+0)
   00FC 60            [ 6]  195 	rts
                            196 	.area CODE
                            197 	.area RODATA
                            198 	.area XINIT
                            199 	.area CABS    (ABS)
