                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module ceilf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _ceilf
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'ceilf'
                             49 ;------------------------------------------------------------
                             50 ;x                         Allocated to stack - sp +11
                             51 ;r                         Allocated to stack - sp +5
                             52 ;sloc0                     Allocated to stack - sp +5
                             53 ;sloc1                     Allocated to stack - sp +1
                             54 ;------------------------------------------------------------
                             55 ;	../ceilf.c: 33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                             56 ;	-----------------------------------------
                             57 ;	 function ceilf
                             58 ;	-----------------------------------------
                             59 ;	Register assignment is optimal.
                             60 ;	Stack space usage: 8 bytes.
   0000                      61 _ceilf:
   0000 85*00         [ 3]   62 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   63 	stx	*(__TEMP+1)
   0004 BA            [ 2]   64 	tsx
   0005 8A            [ 2]   65 	txa
   0006 18            [ 2]   66 	clc
   0007 69 F8         [ 2]   67 	adc	#0xf8
   0009 AA            [ 2]   68 	tax
   000A 9A            [ 2]   69 	txs
   000B A6*01         [ 3]   70 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   71 	lda	*(__TEMP+0)
                             72 ;	../ceilf.c: 36: r=x;
   000F BA            [ 2]   73 	tsx
   0010 BD 0E 01      [ 5]   74 	lda	0x10e,x
   0013 48            [ 3]   75 	pha
   0014 BD 0D 01      [ 5]   76 	lda	0x10d,x
   0017 48            [ 3]   77 	pha
   0018 BD 0C 01      [ 5]   78 	lda	0x10c,x
   001B 48            [ 3]   79 	pha
   001C BD 0B 01      [ 5]   80 	lda	0x10b,x
   001F 48            [ 3]   81 	pha
   0020 20r00r00      [ 6]   82 	jsr	___fs2slong
   0023 86*00         [ 3]   83 	stx	*(__TEMP+0)
   0025 BA            [ 2]   84 	tsx
   0026 9D 09 01      [ 5]   85 	sta	0x109,x
   0029 A6*00         [ 3]   86 	ldx	*(__TEMP+0)
   002B 8A            [ 2]   87 	txa
   002C BA            [ 2]   88 	tsx
   002D 9D 0A 01      [ 5]   89 	sta	0x10a,x
   0030 A6*00         [ 3]   90 	ldx	*(__TEMP+0)
   0032 A5*00         [ 3]   91 	lda	*___SDCC_m6502_ret2
   0034 BA            [ 2]   92 	tsx
   0035 9D 0B 01      [ 5]   93 	sta	0x10b,x
   0038 A5*00         [ 3]   94 	lda	*___SDCC_m6502_ret3
   003A 9D 0C 01      [ 5]   95 	sta	0x10c,x
   003D 85*00         [ 3]   96 	sta	*(__TEMP+0)
   003F 68            [ 4]   97 	pla
   0040 68            [ 4]   98 	pla
   0041 68            [ 4]   99 	pla
   0042 68            [ 4]  100 	pla
                            101 ;	../ceilf.c: 37: if (r<0)
   0043 BD 0C 01      [ 5]  102 	lda	0x10c, x
   0046 38            [ 2]  103 	sec
   0047 E9 00         [ 2]  104 	sbc	#0x00
   0049 50 04         [ 4]  105 	bvc	00117$
   004B 10 04         [ 4]  106 	bpl	00116$
   004D 30 50         [ 4]  107 	bmi	00102$
   004F                     108 00117$:
   004F 10 4E         [ 4]  109 	bpl	00102$
   0051                     110 00116$:
                            111 ;	../ceilf.c: 38: return r;
   0051 BD 0C 01      [ 5]  112 	lda	0x10c,x
   0054 48            [ 3]  113 	pha
   0055 BD 0B 01      [ 5]  114 	lda	0x10b,x
   0058 48            [ 3]  115 	pha
   0059 BD 0A 01      [ 5]  116 	lda	0x10a,x
   005C 48            [ 3]  117 	pha
   005D BD 09 01      [ 5]  118 	lda	0x109,x
   0060 48            [ 3]  119 	pha
   0061 20r00r00      [ 6]  120 	jsr	___slong2fs
   0064 86*00         [ 3]  121 	stx	*(__TEMP+0)
   0066 BA            [ 2]  122 	tsx
   0067 9D 05 01      [ 5]  123 	sta	0x105,x
   006A A6*00         [ 3]  124 	ldx	*(__TEMP+0)
   006C 8A            [ 2]  125 	txa
   006D BA            [ 2]  126 	tsx
   006E 9D 06 01      [ 5]  127 	sta	0x106,x
   0071 A6*00         [ 3]  128 	ldx	*(__TEMP+0)
   0073 A5*00         [ 3]  129 	lda	*___SDCC_m6502_ret2
   0075 BA            [ 2]  130 	tsx
   0076 9D 07 01      [ 5]  131 	sta	0x107,x
   0079 A5*00         [ 3]  132 	lda	*___SDCC_m6502_ret3
   007B 9D 08 01      [ 5]  133 	sta	0x108,x
   007E 85*00         [ 3]  134 	sta	*(__TEMP+0)
   0080 68            [ 4]  135 	pla
   0081 68            [ 4]  136 	pla
   0082 68            [ 4]  137 	pla
   0083 68            [ 4]  138 	pla
   0084 BD 08 01      [ 5]  139 	lda	0x108, x
   0087 85*00         [ 3]  140 	sta	*___SDCC_m6502_ret3
   0089 BD 07 01      [ 5]  141 	lda	0x107,x
   008C 85*00         [ 3]  142 	sta	*___SDCC_m6502_ret2
   008E BD 06 01      [ 5]  143 	lda	0x106,x
   0091 AA            [ 2]  144 	tax
   0092 86*00         [ 3]  145 	stx	*(__TEMP+0)
   0094 BA            [ 2]  146 	tsx
   0095 BD 01 01      [ 5]  147 	lda	0x101,x
   0098 08            [ 3]  148 	php
   0099 A6*00         [ 3]  149 	ldx	*(__TEMP+0)
   009B 28            [ 4]  150 	plp
   009C 4Cr98r01      [ 3]  151 	jmp	00104$
   009F                     152 00102$:
                            153 ;	../ceilf.c: 40: return (r+((r<x)?1:0));
   009F BA            [ 2]  154 	tsx
   00A0 BD 08 01      [ 5]  155 	lda	0x108,x
   00A3 48            [ 3]  156 	pha
   00A4 BD 07 01      [ 5]  157 	lda	0x107,x
   00A7 48            [ 3]  158 	pha
   00A8 BD 06 01      [ 5]  159 	lda	0x106,x
   00AB 48            [ 3]  160 	pha
   00AC BD 05 01      [ 5]  161 	lda	0x105,x
   00AF 48            [ 3]  162 	pha
   00B0 20r00r00      [ 6]  163 	jsr	___slong2fs
   00B3 86*00         [ 3]  164 	stx	*(__TEMP+0)
   00B5 BA            [ 2]  165 	tsx
   00B6 9D 05 01      [ 5]  166 	sta	0x105,x
   00B9 A6*00         [ 3]  167 	ldx	*(__TEMP+0)
   00BB 8A            [ 2]  168 	txa
   00BC BA            [ 2]  169 	tsx
   00BD 9D 06 01      [ 5]  170 	sta	0x106,x
   00C0 A6*00         [ 3]  171 	ldx	*(__TEMP+0)
   00C2 A5*00         [ 3]  172 	lda	*___SDCC_m6502_ret2
   00C4 BA            [ 2]  173 	tsx
   00C5 9D 07 01      [ 5]  174 	sta	0x107,x
   00C8 A5*00         [ 3]  175 	lda	*___SDCC_m6502_ret3
   00CA 9D 08 01      [ 5]  176 	sta	0x108,x
   00CD 85*00         [ 3]  177 	sta	*(__TEMP+0)
   00CF 68            [ 4]  178 	pla
   00D0 68            [ 4]  179 	pla
   00D1 68            [ 4]  180 	pla
   00D2 68            [ 4]  181 	pla
   00D3 BD 12 01      [ 5]  182 	lda	0x112, x
   00D6 48            [ 3]  183 	pha
   00D7 BD 11 01      [ 5]  184 	lda	0x111,x
   00DA 48            [ 3]  185 	pha
   00DB BD 10 01      [ 5]  186 	lda	0x110,x
   00DE 48            [ 3]  187 	pha
   00DF BD 0F 01      [ 5]  188 	lda	0x10f,x
   00E2 48            [ 3]  189 	pha
   00E3 BD 08 01      [ 5]  190 	lda	0x108,x
   00E6 48            [ 3]  191 	pha
   00E7 BD 07 01      [ 5]  192 	lda	0x107,x
   00EA 48            [ 3]  193 	pha
   00EB BD 06 01      [ 5]  194 	lda	0x106,x
   00EE 48            [ 3]  195 	pha
   00EF BD 05 01      [ 5]  196 	lda	0x105,x
   00F2 48            [ 3]  197 	pha
   00F3 20r00r00      [ 6]  198 	jsr	___fslt
   00F6 85*00         [ 3]  199 	sta	*(__TEMP+0)
   00F8 86*01         [ 3]  200 	stx	*(__TEMP+1)
   00FA BA            [ 2]  201 	tsx
   00FB 8A            [ 2]  202 	txa
   00FC 18            [ 2]  203 	clc
   00FD 69 08         [ 2]  204 	adc	#0x08
   00FF AA            [ 2]  205 	tax
   0100 9A            [ 2]  206 	txs
   0101 A6*01         [ 3]  207 	ldx	*(__TEMP+1)
   0103 A5*00         [ 3]  208 	lda	*(__TEMP+0)
   0105 F0 07         [ 4]  209 	beq	00106$
   0107 A9 01         [ 2]  210 	lda	#0x01
   0109 A2 00         [ 2]  211 	ldx	#0x00
   010B 4Cr11r01      [ 3]  212 	jmp	00107$
   010E                     213 00106$:
   010E A9 00         [ 2]  214 	lda	#0x00
   0110 AA            [ 2]  215 	tax
   0111                     216 00107$:
   0111 48            [ 3]  217 	pha
   0112 8A            [ 2]  218 	txa
   0113 BA            [ 2]  219 	tsx
   0114 9D 03 01      [ 5]  220 	sta	0x103,x
   0117 68            [ 4]  221 	pla
   0118 9D 02 01      [ 5]  222 	sta	0x102,x
   011B BD 03 01      [ 5]  223 	lda	0x103,x
   011E 0A            [ 2]  224 	asl	a
   011F A9 00         [ 2]  225 	lda	#0x00
   0121 69 FF         [ 2]  226 	adc	#0xff
   0123 49 FF         [ 2]  227 	eor	#0xff
   0125 9D 04 01      [ 5]  228 	sta	0x104,x
   0128 9D 05 01      [ 5]  229 	sta	0x105,x
   012B BD 06 01      [ 5]  230 	lda	0x106,x
   012E 18            [ 2]  231 	clc
   012F 7D 02 01      [ 5]  232 	adc	0x102,x
   0132 9D 02 01      [ 5]  233 	sta	0x102,x
   0135 BD 07 01      [ 5]  234 	lda	0x107,x
   0138 7D 03 01      [ 5]  235 	adc	0x103,x
   013B 9D 03 01      [ 5]  236 	sta	0x103,x
   013E BD 08 01      [ 5]  237 	lda	0x108,x
   0141 7D 04 01      [ 5]  238 	adc	0x104,x
   0144 9D 04 01      [ 5]  239 	sta	0x104,x
   0147 BD 09 01      [ 5]  240 	lda	0x109,x
   014A 7D 05 01      [ 5]  241 	adc	0x105,x
   014D 9D 05 01      [ 5]  242 	sta	0x105, x
   0150 48            [ 3]  243 	pha
   0151 BD 04 01      [ 5]  244 	lda	0x104,x
   0154 48            [ 3]  245 	pha
   0155 BD 03 01      [ 5]  246 	lda	0x103,x
   0158 48            [ 3]  247 	pha
   0159 BD 02 01      [ 5]  248 	lda	0x102,x
   015C 48            [ 3]  249 	pha
   015D 20r00r00      [ 6]  250 	jsr	___slong2fs
   0160 86*00         [ 3]  251 	stx	*(__TEMP+0)
   0162 BA            [ 2]  252 	tsx
   0163 9D 05 01      [ 5]  253 	sta	0x105,x
   0166 A6*00         [ 3]  254 	ldx	*(__TEMP+0)
   0168 8A            [ 2]  255 	txa
   0169 BA            [ 2]  256 	tsx
   016A 9D 06 01      [ 5]  257 	sta	0x106,x
   016D A6*00         [ 3]  258 	ldx	*(__TEMP+0)
   016F A5*00         [ 3]  259 	lda	*___SDCC_m6502_ret2
   0171 BA            [ 2]  260 	tsx
   0172 9D 07 01      [ 5]  261 	sta	0x107,x
   0175 A5*00         [ 3]  262 	lda	*___SDCC_m6502_ret3
   0177 9D 08 01      [ 5]  263 	sta	0x108,x
   017A 85*00         [ 3]  264 	sta	*(__TEMP+0)
   017C 68            [ 4]  265 	pla
   017D 68            [ 4]  266 	pla
   017E 68            [ 4]  267 	pla
   017F 68            [ 4]  268 	pla
   0180 BD 08 01      [ 5]  269 	lda	0x108, x
   0183 85*00         [ 3]  270 	sta	*___SDCC_m6502_ret3
   0185 BD 07 01      [ 5]  271 	lda	0x107,x
   0188 85*00         [ 3]  272 	sta	*___SDCC_m6502_ret2
   018A BD 06 01      [ 5]  273 	lda	0x106,x
   018D AA            [ 2]  274 	tax
   018E 86*00         [ 3]  275 	stx	*(__TEMP+0)
   0190 BA            [ 2]  276 	tsx
   0191 BD 01 01      [ 5]  277 	lda	0x101,x
   0194 08            [ 3]  278 	php
   0195 A6*00         [ 3]  279 	ldx	*(__TEMP+0)
   0197 28            [ 4]  280 	plp
   0198                     281 00104$:
                            282 ;	../ceilf.c: 41: }
   0198 85*00         [ 3]  283 	sta	*(__TEMP+0)
   019A 86*01         [ 3]  284 	stx	*(__TEMP+1)
   019C BA            [ 2]  285 	tsx
   019D 8A            [ 2]  286 	txa
   019E 18            [ 2]  287 	clc
   019F 69 08         [ 2]  288 	adc	#0x08
   01A1 AA            [ 2]  289 	tax
   01A2 9A            [ 2]  290 	txs
   01A3 A6*01         [ 3]  291 	ldx	*(__TEMP+1)
   01A5 A5*00         [ 3]  292 	lda	*(__TEMP+0)
   01A7 60            [ 6]  293 	rts
                            294 	.area CODE
                            295 	.area RODATA
                            296 	.area XINIT
                            297 	.area CABS    (ABS)
