                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strtok
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strchr
                             12 	.globl _strtok
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; uninitialized external ram data
                             22 ;--------------------------------------------------------
                             23 	.area BSS
   0000                      24 _strtok_s_65536_27:
   0000                      25 	.ds 2
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area DABS    (ABS)
                             30 ;--------------------------------------------------------
                             31 ; initialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area DATA
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 	.area GSINIT
                             39 	.area GSFINAL
                             40 	.area GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area _CODE
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area CODE
                             50 ;------------------------------------------------------------
                             51 ;Allocation info for local variables in function 'strtok'
                             52 ;------------------------------------------------------------
                             53 ;control                   Allocated to stack - sp +5
                             54 ;str                       Allocated to registers a x 
                             55 ;s1                        Allocated to stack - sp +1
                             56 ;s                         Allocated with name '_strtok_s_65536_27'
                             57 ;------------------------------------------------------------
                             58 ;	../_strtok.c: 36: char * strtok ( char * str, const char * control )
                             59 ;	-----------------------------------------
                             60 ;	 function strtok
                             61 ;	-----------------------------------------
                             62 ;	Register assignment is optimal.
                             63 ;	Stack space usage: 2 bytes.
   0000                      64 _strtok:
   0000 48            [ 3]   65 	pha
   0001 48            [ 3]   66 	pha
                             67 ;	../_strtok.c: 41: if ( str )
   0002 C9 00         [ 2]   68 	cmp	#0x00
   0004 D0 02         [ 4]   69 	bne	00157$
   0006 E0 00         [ 2]   70 	cpx	#0x00
   0008                      71 00157$:
   0008 F0 06         [ 4]   72 	beq	00102$
                             73 ;	../_strtok.c: 42: s = str;
   000A 8Dr00r00      [ 4]   74 	sta	_strtok_s_65536_27
   000D 8Er01r00      [ 4]   75 	stx	(_strtok_s_65536_27 + 1)
   0010                      76 00102$:
                             77 ;	../_strtok.c: 43: if ( !s )
   0010 ADr01r00      [ 4]   78 	lda	(_strtok_s_65536_27 + 1)
   0013 0Dr00r00      [ 4]   79 	ora	_strtok_s_65536_27
   0016 D0 06         [ 4]   80 	bne	00108$
                             81 ;	../_strtok.c: 44: return NULL;
   0018 A9 00         [ 2]   82 	lda	#0x00
   001A AA            [ 2]   83 	tax
   001B 4CrF3r00      [ 3]   84 	jmp	00119$
                             85 ;	../_strtok.c: 46: while (*s) {
   001E                      86 00108$:
   001E ADr00r00      [ 4]   87 	lda	_strtok_s_65536_27
   0021 85*00         [ 3]   88 	sta	*(__DPTR+0)
   0023 ADr01r00      [ 4]   89 	lda	(_strtok_s_65536_27 + 1)
   0026 85*01         [ 3]   90 	sta	*(__DPTR+1)
   0028 A0 00         [ 2]   91 	ldy	#0x00
   002A B1*00         [ 6]   92 	lda	[__DPTR],y
   002C F0 29         [ 4]   93 	beq	00110$
                             94 ;	../_strtok.c: 47: if (strchr(control,*s))
   002E 48            [ 3]   95 	pha
   002F BA            [ 2]   96 	tsx
   0030 BD 07 01      [ 5]   97 	lda	0x107,x
   0033 AA            [ 2]   98 	tax
   0034 86*00         [ 3]   99 	stx	*(__TEMP+0)
   0036 BA            [ 2]  100 	tsx
   0037 BD 06 01      [ 5]  101 	lda	0x106,x
   003A 08            [ 3]  102 	php
   003B A6*00         [ 3]  103 	ldx	*(__TEMP+0)
   003D 28            [ 4]  104 	plp
   003E 20r00r00      [ 6]  105 	jsr	_strchr
   0041 85*00         [ 3]  106 	sta	*(__TEMP+0)
   0043 68            [ 4]  107 	pla
   0044 A5*00         [ 3]  108 	lda	*(__TEMP+0)
   0046 D0 02         [ 4]  109 	bne	00161$
   0048 E0 00         [ 2]  110 	cpx	#0x00
   004A                     111 00161$:
   004A F0 0B         [ 4]  112 	beq	00110$
                            113 ;	../_strtok.c: 48: s++;
   004C EEr00r00      [ 6]  114 	inc	_strtok_s_65536_27
   004F D0 CD         [ 4]  115 	bne	00108$
   0051 EEr01r00      [ 6]  116 	inc	(_strtok_s_65536_27 + 1)
   0054 4Cr1Er00      [ 3]  117 	jmp	00108$
                            118 ;	../_strtok.c: 50: break;
   0057                     119 00110$:
                            120 ;	../_strtok.c: 53: s1 = s;
   0057 BA            [ 2]  121 	tsx
   0058 ADr00r00      [ 4]  122 	lda	_strtok_s_65536_27
   005B 9D 01 01      [ 5]  123 	sta	0x101,x
   005E ADr01r00      [ 4]  124 	lda	(_strtok_s_65536_27 + 1)
   0061 9D 02 01      [ 5]  125 	sta	0x102,x
                            126 ;	../_strtok.c: 55: while (*s) {
   0064                     127 00113$:
   0064 ADr00r00      [ 4]  128 	lda	_strtok_s_65536_27
   0067 85*00         [ 3]  129 	sta	*(__DPTR+0)
   0069 ADr01r00      [ 4]  130 	lda	(_strtok_s_65536_27 + 1)
   006C 85*01         [ 3]  131 	sta	*(__DPTR+1)
   006E A0 00         [ 2]  132 	ldy	#0x00
   0070 B1*00         [ 6]  133 	lda	[__DPTR],y
   0072 F0 52         [ 4]  134 	beq	00115$
                            135 ;	../_strtok.c: 56: if (strchr(control,*s)) {
   0074 48            [ 3]  136 	pha
   0075 BA            [ 2]  137 	tsx
   0076 BD 07 01      [ 5]  138 	lda	0x107,x
   0079 AA            [ 2]  139 	tax
   007A 86*00         [ 3]  140 	stx	*(__TEMP+0)
   007C BA            [ 2]  141 	tsx
   007D BD 06 01      [ 5]  142 	lda	0x106,x
   0080 08            [ 3]  143 	php
   0081 A6*00         [ 3]  144 	ldx	*(__TEMP+0)
   0083 28            [ 4]  145 	plp
   0084 20r00r00      [ 6]  146 	jsr	_strchr
   0087 85*00         [ 3]  147 	sta	*(__TEMP+0)
   0089 68            [ 4]  148 	pla
   008A A5*00         [ 3]  149 	lda	*(__TEMP+0)
   008C D0 02         [ 4]  150 	bne	00165$
   008E E0 00         [ 2]  151 	cpx	#0x00
   0090                     152 00165$:
   0090 F0 29         [ 4]  153 	beq	00112$
                            154 ;	../_strtok.c: 57: *s++ = '\0';
   0092 ADr00r00      [ 4]  155 	lda	_strtok_s_65536_27
   0095 AEr01r00      [ 4]  156 	ldx	(_strtok_s_65536_27 + 1)
   0098 85*00         [ 3]  157 	sta	*(__DPTR+0)
   009A 86*01         [ 3]  158 	stx	*(__DPTR+1)
   009C A9 00         [ 2]  159 	lda	#0x00
   009E A8            [ 2]  160 	tay
   009F 91*00         [ 6]  161 	sta	[__DPTR],y
   00A1 EEr00r00      [ 6]  162 	inc	_strtok_s_65536_27
   00A4 D0 03         [ 4]  163 	bne	00167$
   00A6 EEr01r00      [ 6]  164 	inc	(_strtok_s_65536_27 + 1)
   00A9                     165 00167$:
                            166 ;	../_strtok.c: 58: return s1;
   00A9 BA            [ 2]  167 	tsx
   00AA BD 02 01      [ 5]  168 	lda	0x102,x
   00AD AA            [ 2]  169 	tax
   00AE 86*00         [ 3]  170 	stx	*(__TEMP+0)
   00B0 BA            [ 2]  171 	tsx
   00B1 BD 01 01      [ 5]  172 	lda	0x101,x
   00B4 08            [ 3]  173 	php
   00B5 A6*00         [ 3]  174 	ldx	*(__TEMP+0)
   00B7 28            [ 4]  175 	plp
   00B8 4CrF3r00      [ 3]  176 	jmp	00119$
   00BB                     177 00112$:
                            178 ;	../_strtok.c: 60: s++ ;
   00BB EEr00r00      [ 6]  179 	inc	_strtok_s_65536_27
   00BE D0 A4         [ 4]  180 	bne	00113$
   00C0 EEr01r00      [ 6]  181 	inc	(_strtok_s_65536_27 + 1)
   00C3 4Cr64r00      [ 3]  182 	jmp	00113$
   00C6                     183 00115$:
                            184 ;	../_strtok.c: 63: s = NULL;
   00C6 A2 00         [ 2]  185 	ldx	#0x00
   00C8 8Er00r00      [ 4]  186 	stx	_strtok_s_65536_27
   00CB 8Er01r00      [ 4]  187 	stx	(_strtok_s_65536_27 + 1)
                            188 ;	../_strtok.c: 65: if (*s1)
   00CE BA            [ 2]  189 	tsx
   00CF BD 01 01      [ 5]  190 	lda	0x101,x
   00D2 85*00         [ 3]  191 	sta	*(__DPTR+0)
   00D4 BD 02 01      [ 5]  192 	lda	0x102,x
   00D7 85*01         [ 3]  193 	sta	*(__DPTR+1)
   00D9 A0 00         [ 2]  194 	ldy	#0x00
   00DB B1*00         [ 6]  195 	lda	[__DPTR],y
   00DD F0 11         [ 4]  196 	beq	00117$
                            197 ;	../_strtok.c: 66: return s1;
   00DF BD 02 01      [ 5]  198 	lda	0x102,x
   00E2 AA            [ 2]  199 	tax
   00E3 86*00         [ 3]  200 	stx	*(__TEMP+0)
   00E5 BA            [ 2]  201 	tsx
   00E6 BD 01 01      [ 5]  202 	lda	0x101,x
   00E9 08            [ 3]  203 	php
   00EA A6*00         [ 3]  204 	ldx	*(__TEMP+0)
   00EC 28            [ 4]  205 	plp
   00ED 4CrF3r00      [ 3]  206 	jmp	00119$
   00F0                     207 00117$:
                            208 ;	../_strtok.c: 68: return NULL;
   00F0 A9 00         [ 2]  209 	lda	#0x00
   00F2 AA            [ 2]  210 	tax
   00F3                     211 00119$:
                            212 ;	../_strtok.c: 69: }
   00F3 85*00         [ 3]  213 	sta	*(__TEMP+0)
   00F5 68            [ 4]  214 	pla
   00F6 68            [ 4]  215 	pla
   00F7 A5*00         [ 3]  216 	lda	*(__TEMP+0)
   00F9 60            [ 6]  217 	rts
                            218 	.area CODE
                            219 	.area RODATA
                            220 	.area XINIT
                            221 	.area CABS    (ABS)
