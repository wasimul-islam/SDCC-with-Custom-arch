                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbrtoc32
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _mbrtowc
                             12 	.globl _mbrtoc32
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; uninitialized external ram data
                             22 ;--------------------------------------------------------
                             23 	.area BSS
   0000                      24 _mbrtoc32_sps_65536_16:
   0000                      25 	.ds 3
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area DABS    (ABS)
                             30 ;--------------------------------------------------------
                             31 ; initialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area DATA
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 	.area GSINIT
                             39 	.area GSFINAL
                             40 	.area GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area _CODE
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area CODE
                             50 ;------------------------------------------------------------
                             51 ;Allocation info for local variables in function 'mbrtoc32'
                             52 ;------------------------------------------------------------
                             53 ;s                         Allocated to stack - sp +11
                             54 ;n                         Allocated to stack - sp +13
                             55 ;ps                        Allocated to stack - sp +15
                             56 ;pc32                      Allocated to stack - sp +7
                             57 ;wc                        Allocated to stack - sp +1
                             58 ;ret                       Allocated to registers a x 
                             59 ;sloc0                     Allocated to stack - sp +5
                             60 ;sps                       Allocated with name '_mbrtoc32_sps_65536_16'
                             61 ;------------------------------------------------------------
                             62 ;	../mbrtoc32.c: 34: size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
                             63 ;	-----------------------------------------
                             64 ;	 function mbrtoc32
                             65 ;	-----------------------------------------
                             66 ;	Register assignment is optimal.
                             67 ;	Stack space usage: 8 bytes.
   0000                      68 _mbrtoc32:
   0000 85*00         [ 3]   69 	sta	*(__TEMP+0)
   0002 8A            [ 2]   70 	txa
   0003 48            [ 3]   71 	pha
   0004 A5*00         [ 3]   72 	lda	*(__TEMP+0)
   0006 48            [ 3]   73 	pha
   0007 48            [ 3]   74 	pha
   0008 48            [ 3]   75 	pha
   0009 48            [ 3]   76 	pha
   000A 48            [ 3]   77 	pha
   000B 48            [ 3]   78 	pha
   000C 48            [ 3]   79 	pha
                             80 ;	../mbrtoc32.c: 40: if(!ps)
   000D BA            [ 2]   81 	tsx
   000E BD 0F 01      [ 5]   82 	lda	0x10f,x
   0011 1D 10 01      [ 5]   83 	ora	0x110,x
   0014 D0 0A         [ 4]   84 	bne	00102$
                             85 ;	../mbrtoc32.c: 41: ps = &sps;
   0016 A9r00         [ 2]   86 	lda	#_mbrtoc32_sps_65536_16
   0018 9D 0F 01      [ 5]   87 	sta	0x10f,x
   001B A9s00         [ 2]   88 	lda	#>_mbrtoc32_sps_65536_16
   001D 9D 10 01      [ 5]   89 	sta	0x110,x
   0020                      90 00102$:
                             91 ;	../mbrtoc32.c: 43: if(!pc32)
   0020 BA            [ 2]   92 	tsx
   0021 BD 07 01      [ 5]   93 	lda	0x107,x
   0024 1D 08 01      [ 5]   94 	ora	0x108,x
   0027 D0 2B         [ 4]   95 	bne	00104$
                             96 ;	../mbrtoc32.c: 44: return(mbrtowc(0, s, n, ps));
   0029 BD 10 01      [ 5]   97 	lda	0x110,x
   002C 48            [ 3]   98 	pha
   002D BD 0F 01      [ 5]   99 	lda	0x10f,x
   0030 48            [ 3]  100 	pha
   0031 BD 0E 01      [ 5]  101 	lda	0x10e,x
   0034 48            [ 3]  102 	pha
   0035 BD 0D 01      [ 5]  103 	lda	0x10d,x
   0038 48            [ 3]  104 	pha
   0039 BD 0C 01      [ 5]  105 	lda	0x10c,x
   003C 48            [ 3]  106 	pha
   003D BD 0B 01      [ 5]  107 	lda	0x10b,x
   0040 48            [ 3]  108 	pha
   0041 A2 00         [ 2]  109 	ldx	#0x00
   0043 8A            [ 2]  110 	txa
   0044 20r00r00      [ 6]  111 	jsr	_mbrtowc
   0047 85*00         [ 3]  112 	sta	*(__TEMP+0)
   0049 68            [ 4]  113 	pla
   004A 68            [ 4]  114 	pla
   004B 68            [ 4]  115 	pla
   004C 68            [ 4]  116 	pla
   004D 68            [ 4]  117 	pla
   004E 68            [ 4]  118 	pla
   004F A5*00         [ 3]  119 	lda	*(__TEMP+0)
   0051 4CrD5r00      [ 3]  120 	jmp	00107$
   0054                     121 00104$:
                            122 ;	../mbrtoc32.c: 46: ret = mbrtowc(&wc, s, n, ps);
   0054 BA            [ 2]  123 	tsx
   0055 E8            [ 2]  124 	inx
   0056 8A            [ 2]  125 	txa
   0057 A2 01         [ 2]  126 	ldx	#0x01
   0059 48            [ 3]  127 	pha
   005A 8A            [ 2]  128 	txa
   005B BA            [ 2]  129 	tsx
   005C 9D 07 01      [ 5]  130 	sta	0x107,x
   005F 68            [ 4]  131 	pla
   0060 9D 06 01      [ 5]  132 	sta	0x106,x
   0063 BD 11 01      [ 5]  133 	lda	0x111, x
   0066 48            [ 3]  134 	pha
   0067 BD 10 01      [ 5]  135 	lda	0x110,x
   006A 48            [ 3]  136 	pha
   006B BD 0F 01      [ 5]  137 	lda	0x10f,x
   006E 48            [ 3]  138 	pha
   006F BD 0E 01      [ 5]  139 	lda	0x10e,x
   0072 48            [ 3]  140 	pha
   0073 BD 0D 01      [ 5]  141 	lda	0x10d,x
   0076 48            [ 3]  142 	pha
   0077 BD 0C 01      [ 5]  143 	lda	0x10c,x
   007A 48            [ 3]  144 	pha
   007B BD 07 01      [ 5]  145 	lda	0x107,x
   007E AA            [ 2]  146 	tax
   007F 86*00         [ 3]  147 	stx	*(__TEMP+0)
   0081 BA            [ 2]  148 	tsx
   0082 BD 0B 01      [ 5]  149 	lda	0x10b,x
   0085 08            [ 3]  150 	php
   0086 A6*00         [ 3]  151 	ldx	*(__TEMP+0)
   0088 28            [ 4]  152 	plp
   0089 20r00r00      [ 6]  153 	jsr	_mbrtowc
   008C 85*00         [ 3]  154 	sta	*(__TEMP+0)
   008E 68            [ 4]  155 	pla
   008F 68            [ 4]  156 	pla
   0090 68            [ 4]  157 	pla
   0091 68            [ 4]  158 	pla
   0092 68            [ 4]  159 	pla
   0093 68            [ 4]  160 	pla
                            161 ;	../mbrtoc32.c: 48: if(ret <= MB_LEN_MAX)
   0094 A5*00         [ 3]  162 	lda	*(__TEMP+0)
   0096 85*01         [ 3]  163 	sta	*(__TEMP+1)
   0098 A9 04         [ 2]  164 	lda	#0x04
   009A 38            [ 2]  165 	sec
   009B E5*01         [ 3]  166 	sbc	*(__TEMP+1)
   009D A9 00         [ 2]  167 	lda	#0x00
   009F 86*01         [ 3]  168 	stx	*(__TEMP+1)
   00A1 E5*01         [ 3]  169 	sbc	*(__TEMP+1)
   00A3 08            [ 3]  170 	php
   00A4 A5*00         [ 3]  171 	lda	*(__TEMP+0)
   00A6 28            [ 4]  172 	plp
   00A7 90 2C         [ 4]  173 	bcc	00106$
                            174 ;	../mbrtoc32.c: 49: *pc32 = wc;
   00A9 85*00         [ 3]  175 	sta	*(__TEMP+0)
   00AB 86*01         [ 3]  176 	stx	*(__TEMP+1)
   00AD BA            [ 2]  177 	tsx
   00AE BD 07 01      [ 5]  178 	lda	0x107,x
   00B1 85*00         [ 3]  179 	sta	*(__DPTR+0)
   00B3 BD 08 01      [ 5]  180 	lda	0x108,x
   00B6 85*01         [ 3]  181 	sta	*(__DPTR+1)
   00B8 BD 01 01      [ 5]  182 	lda	0x101,x
   00BB A0 00         [ 2]  183 	ldy	#0x00
   00BD 91*00         [ 6]  184 	sta	[__DPTR],y
   00BF BD 02 01      [ 5]  185 	lda	0x102,x
   00C2 C8            [ 2]  186 	iny
   00C3 91*00         [ 6]  187 	sta	[__DPTR],y
   00C5 BD 03 01      [ 5]  188 	lda	0x103,x
   00C8 C8            [ 2]  189 	iny
   00C9 91*00         [ 6]  190 	sta	[__DPTR],y
   00CB BD 04 01      [ 5]  191 	lda	0x104,x
   00CE C8            [ 2]  192 	iny
   00CF 91*00         [ 6]  193 	sta	[__DPTR],y
   00D1 A6*01         [ 3]  194 	ldx	*(__TEMP+1)
   00D3 A5*00         [ 3]  195 	lda	*(__TEMP+0)
   00D5                     196 00106$:
                            197 ;	../mbrtoc32.c: 51: return(ret);
   00D5                     198 00107$:
                            199 ;	../mbrtoc32.c: 52: }
   00D5 85*00         [ 3]  200 	sta	*(__TEMP+0)
   00D7 86*01         [ 3]  201 	stx	*(__TEMP+1)
   00D9 BA            [ 2]  202 	tsx
   00DA 8A            [ 2]  203 	txa
   00DB 18            [ 2]  204 	clc
   00DC 69 08         [ 2]  205 	adc	#0x08
   00DE AA            [ 2]  206 	tax
   00DF 9A            [ 2]  207 	txs
   00E0 A6*01         [ 3]  208 	ldx	*(__TEMP+1)
   00E2 A5*00         [ 3]  209 	lda	*(__TEMP+0)
   00E4 60            [ 6]  210 	rts
                            211 	.area CODE
                            212 	.area RODATA
                            213 	.area XINIT
                            214 	.area CABS    (ABS)
