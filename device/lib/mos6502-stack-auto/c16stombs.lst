                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module c16stombs
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___memcpy
                             12 	.globl _wctomb
                             13 	.globl ___c16stombs
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; uninitialized external ram data
                             23 ;--------------------------------------------------------
                             24 	.area BSS
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area DABS    (ABS)
                             29 ;--------------------------------------------------------
                             30 ; initialized external ram data
                             31 ;--------------------------------------------------------
                             32 	.area DATA
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 	.area GSINIT
                             38 	.area GSFINAL
                             39 	.area GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 	.area _CODE
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area CODE
                             49 ;------------------------------------------------------------
                             50 ;Allocation info for local variables in function '__c16stombs'
                             51 ;------------------------------------------------------------
                             52 ;c16s                      Allocated to stack - sp +33
                             53 ;n                         Allocated to stack - sp +35
                             54 ;s                         Allocated to stack - sp +29
                             55 ;m                         Allocated to stack - sp +27
                             56 ;b                         Allocated to stack - sp +5
                             57 ;l                         Allocated to stack - sp +25
                             58 ;codepoint                 Allocated to stack - sp +1
                             59 ;sloc0                     Allocated to stack - sp +23
                             60 ;sloc1                     Allocated to stack - sp +21
                             61 ;sloc2                     Allocated to stack - sp +19
                             62 ;sloc3                     Allocated to stack - sp +17
                             63 ;sloc4                     Allocated to stack - sp +13
                             64 ;sloc5                     Allocated to stack - sp +9
                             65 ;------------------------------------------------------------
                             66 ;	../c16stombs.c: 44: size_t __c16stombs(char *restrict s, const char16_t *restrict c16s, size_t n)
                             67 ;	-----------------------------------------
                             68 ;	 function __c16stombs
                             69 ;	-----------------------------------------
                             70 ;	Register assignment might be sub-optimal.
                             71 ;	Stack space usage: 30 bytes.
   0000                      72 ___c16stombs:
   0000 85*00         [ 3]   73 	sta	*(__TEMP+0)
   0002 8A            [ 2]   74 	txa
   0003 48            [ 3]   75 	pha
   0004 A5*00         [ 3]   76 	lda	*(__TEMP+0)
   0006 48            [ 3]   77 	pha
   0007 86*01         [ 3]   78 	stx	*(__TEMP+1)
   0009 BA            [ 2]   79 	tsx
   000A 8A            [ 2]   80 	txa
   000B 18            [ 2]   81 	clc
   000C 69 E4         [ 2]   82 	adc	#0xe4
   000E AA            [ 2]   83 	tax
   000F 9A            [ 2]   84 	txs
                             85 ;	../c16stombs.c: 46: size_t m = 0;
   0010 BA            [ 2]   86 	tsx
   0011 A9 00         [ 2]   87 	lda	#0x00
   0013 9D 1B 01      [ 5]   88 	sta	0x11b,x
   0016 9D 1C 01      [ 5]   89 	sta	0x11c,x
                             90 ;	../c16stombs.c: 87: return(m);
   0019                      91 00119$:
                             92 ;	../c16stombs.c: 54: if(c16s[0] < 0xd800 || c16s[0] >= 0xe000) // Basic multilingual plane
   0019 BA            [ 2]   93 	tsx
   001A BD 21 01      [ 5]   94 	lda	0x121,x
   001D 9D 17 01      [ 5]   95 	sta	0x117,x
   0020 BD 22 01      [ 5]   96 	lda	0x122,x
   0023 9D 18 01      [ 5]   97 	sta	0x118,x
   0026 BD 17 01      [ 5]   98 	lda	0x117,x
   0029 85*00         [ 3]   99 	sta	*(__DPTR+0)
   002B BD 18 01      [ 5]  100 	lda	0x118,x
   002E 85*01         [ 3]  101 	sta	*(__DPTR+1)
   0030 A0 00         [ 2]  102 	ldy	#0x00
   0032 B1*00         [ 6]  103 	lda	[__DPTR],y
   0034 9D 15 01      [ 5]  104 	sta	0x115,x
   0037 C8            [ 2]  105 	iny
   0038 B1*00         [ 6]  106 	lda	[__DPTR],y
   003A 9D 16 01      [ 5]  107 	sta	0x116, x
   003D 38            [ 2]  108 	sec
   003E E9 D8         [ 2]  109 	sbc	#0xd8
   0040 90 08         [ 4]  110 	bcc	00106$
   0042 BD 16 01      [ 5]  111 	lda	0x116,x
   0045 38            [ 2]  112 	sec
   0046 E9 E0         [ 2]  113 	sbc	#0xe0
   0048 90 4C         [ 4]  114 	bcc	00107$
   004A                     115 00106$:
                            116 ;	../c16stombs.c: 56: codepoint = c16s[0];
   004A BA            [ 2]  117 	tsx
   004B BD 21 01      [ 5]  118 	lda	0x121,x
   004E 9D 13 01      [ 5]  119 	sta	0x113,x
   0051 BD 22 01      [ 5]  120 	lda	0x122,x
   0054 9D 14 01      [ 5]  121 	sta	0x114,x
   0057 BD 13 01      [ 5]  122 	lda	0x113,x
   005A 85*00         [ 3]  123 	sta	*(__DPTR+0)
   005C BD 14 01      [ 5]  124 	lda	0x114,x
   005F 85*01         [ 3]  125 	sta	*(__DPTR+1)
   0061 A0 00         [ 2]  126 	ldy	#0x00
   0063 B1*00         [ 6]  127 	lda	[__DPTR],y
   0065 9D 11 01      [ 5]  128 	sta	0x111,x
   0068 C8            [ 2]  129 	iny
   0069 B1*00         [ 6]  130 	lda	[__DPTR],y
   006B 9D 12 01      [ 5]  131 	sta	0x112,x
   006E BD 11 01      [ 5]  132 	lda	0x111,x
   0071 9D 01 01      [ 5]  133 	sta	0x101,x
   0074 BD 12 01      [ 5]  134 	lda	0x112,x
   0077 9D 02 01      [ 5]  135 	sta	0x102,x
   007A A9 00         [ 2]  136 	lda	#0x00
   007C 9D 03 01      [ 5]  137 	sta	0x103,x
   007F 9D 04 01      [ 5]  138 	sta	0x104,x
                            139 ;	../c16stombs.c: 57: c16s++;
   0082 BD 13 01      [ 5]  140 	lda	0x113,x
   0085 18            [ 2]  141 	clc
   0086 69 02         [ 2]  142 	adc	#0x02
   0088 9D 21 01      [ 5]  143 	sta	0x121,x
   008B BD 14 01      [ 5]  144 	lda	0x114,x
   008E 69 00         [ 2]  145 	adc	#0x00
   0090 9D 22 01      [ 5]  146 	sta	0x122,x
   0093 4Cr96r01      [ 3]  147 	jmp	00108$
   0096                     148 00107$:
                            149 ;	../c16stombs.c: 59: else if(c16s[0] > 0xdbff || c16s[1] < 0xdc00 || c16s[1] > 0xdfff) // Unpaired surrogate
   0096 BA            [ 2]  150 	tsx
   0097 A9 FF         [ 2]  151 	lda	#0xff
   0099 38            [ 2]  152 	sec
   009A FD 15 01      [ 5]  153 	sbc	0x115,x
   009D A9 DB         [ 2]  154 	lda	#0xdb
   009F FD 16 01      [ 5]  155 	sbc	0x116,x
   00A2 90 35         [ 4]  156 	bcc	00101$
   00A4 BD 17 01      [ 5]  157 	lda	0x117,x
   00A7 9D 11 01      [ 5]  158 	sta	0x111,x
   00AA BD 18 01      [ 5]  159 	lda	0x118,x
   00AD 9D 12 01      [ 5]  160 	sta	0x112,x
   00B0 BD 11 01      [ 5]  161 	lda	0x111,x
   00B3 85*00         [ 3]  162 	sta	*(__DPTR+0)
   00B5 BD 12 01      [ 5]  163 	lda	0x112,x
   00B8 85*01         [ 3]  164 	sta	*(__DPTR+1)
   00BA A0 02         [ 2]  165 	ldy	#0x02
   00BC B1*00         [ 6]  166 	lda	[__DPTR],y
   00BE 9D 11 01      [ 5]  167 	sta	0x111,x
   00C1 C8            [ 2]  168 	iny
   00C2 B1*00         [ 6]  169 	lda	[__DPTR],y
   00C4 9D 12 01      [ 5]  170 	sta	0x112, x
   00C7 38            [ 2]  171 	sec
   00C8 E9 DC         [ 2]  172 	sbc	#0xdc
   00CA 90 0D         [ 4]  173 	bcc	00101$
   00CC A9 FF         [ 2]  174 	lda	#0xff
   00CE 38            [ 2]  175 	sec
   00CF FD 11 01      [ 5]  176 	sbc	0x111,x
   00D2 A9 DF         [ 2]  177 	lda	#0xdf
   00D4 FD 12 01      [ 5]  178 	sbc	0x112,x
   00D7 B0 06         [ 4]  179 	bcs	00102$
   00D9                     180 00101$:
                            181 ;	../c16stombs.c: 60: return(-1);
   00D9 A9 FF         [ 2]  182 	lda	#0xff
   00DB AA            [ 2]  183 	tax
   00DC 4CrD8r02      [ 3]  184 	jmp	00121$
   00DF                     185 00102$:
                            186 ;	../c16stombs.c: 63: codepoint = ((unsigned long)(c16s[0]) << 10) -(0xd800ul << 10) + (unsigned long)(c16s[1]) - 0xdc00ul + 0x10000ul;
   00DF BA            [ 2]  187 	tsx
   00E0 BD 15 01      [ 5]  188 	lda	0x115,x
   00E3 9D 0D 01      [ 5]  189 	sta	0x10d,x
   00E6 BD 16 01      [ 5]  190 	lda	0x116,x
   00E9 9D 0E 01      [ 5]  191 	sta	0x10e,x
   00EC A9 00         [ 2]  192 	lda	#0x00
   00EE 9D 0F 01      [ 5]  193 	sta	0x10f,x
   00F1 9D 10 01      [ 5]  194 	sta	0x110,x
   00F4 BD 0E 01      [ 5]  195 	lda	0x10e,x
   00F7 85*00         [ 3]  196 	sta	*(__TEMP+0)
   00F9 BD 0F 01      [ 5]  197 	lda	0x10f,x
   00FC AA            [ 2]  198 	tax
   00FD A5*00         [ 3]  199 	lda	*(__TEMP+0)
   00FF 0A            [ 2]  200 	asl	a
   0100 48            [ 3]  201 	pha
   0101 8A            [ 2]  202 	txa
   0102 2A            [ 2]  203 	rol	a
   0103 AA            [ 2]  204 	tax
   0104 68            [ 4]  205 	pla
   0105 0A            [ 2]  206 	asl	a
   0106 48            [ 3]  207 	pha
   0107 8A            [ 2]  208 	txa
   0108 2A            [ 2]  209 	rol	a
   0109 BA            [ 2]  210 	tsx
   010A 9D 11 01      [ 5]  211 	sta	0x111,x
   010D 68            [ 4]  212 	pla
   010E 9D 10 01      [ 5]  213 	sta	0x110,x
   0111 BD 0E 01      [ 5]  214 	lda	0x10e,x
   0114 0A            [ 2]  215 	asl	a
   0115 0A            [ 2]  216 	asl	a
   0116 9D 0F 01      [ 5]  217 	sta	0x10f,x
   0119 BD 0E 01      [ 5]  218 	lda	0x10e,x
   011C 2A            [ 2]  219 	rol	a
   011D 2A            [ 2]  220 	rol	a
   011E 2A            [ 2]  221 	rol	a
   011F 29 03         [ 2]  222 	and	#0x03
   0121 1D 10 01      [ 5]  223 	ora	0x110,x
   0124 9D 10 01      [ 5]  224 	sta	0x110,x
   0127 A9 00         [ 2]  225 	lda	#0x00
   0129 9D 0E 01      [ 5]  226 	sta	0x10e,x
   012C BD 12 01      [ 5]  227 	lda	0x112,x
   012F 9D 0A 01      [ 5]  228 	sta	0x10a,x
   0132 BD 13 01      [ 5]  229 	lda	0x113,x
   0135 9D 0B 01      [ 5]  230 	sta	0x10b,x
   0138 A9 00         [ 2]  231 	lda	#0x00
   013A 9D 0C 01      [ 5]  232 	sta	0x10c,x
   013D 9D 0D 01      [ 5]  233 	sta	0x10d,x
   0140 BD 0E 01      [ 5]  234 	lda	0x10e,x
   0143 18            [ 2]  235 	clc
   0144 7D 0A 01      [ 5]  236 	adc	0x10a,x
   0147 9D 0A 01      [ 5]  237 	sta	0x10a,x
   014A BD 0F 01      [ 5]  238 	lda	0x10f,x
   014D 7D 0B 01      [ 5]  239 	adc	0x10b,x
   0150 9D 0B 01      [ 5]  240 	sta	0x10b,x
   0153 BD 10 01      [ 5]  241 	lda	0x110,x
   0156 7D 0C 01      [ 5]  242 	adc	0x10c,x
   0159 9D 0C 01      [ 5]  243 	sta	0x10c,x
   015C BD 11 01      [ 5]  244 	lda	0x111,x
   015F 7D 0D 01      [ 5]  245 	adc	0x10d,x
   0162 9D 0D 01      [ 5]  246 	sta	0x10d,x
   0165 BD 0A 01      [ 5]  247 	lda	0x10a,x
   0168 18            [ 2]  248 	clc
   0169 9D 02 01      [ 5]  249 	sta	0x102,x
   016C BD 0B 01      [ 5]  250 	lda	0x10b,x
   016F 18            [ 2]  251 	clc
   0170 69 24         [ 2]  252 	adc	#0x24
   0172 9D 03 01      [ 5]  253 	sta	0x103,x
   0175 BD 0C 01      [ 5]  254 	lda	0x10c,x
   0178 69 A0         [ 2]  255 	adc	#0xa0
   017A 9D 04 01      [ 5]  256 	sta	0x104,x
   017D BD 0D 01      [ 5]  257 	lda	0x10d,x
   0180 69 FC         [ 2]  258 	adc	#0xfc
   0182 9D 05 01      [ 5]  259 	sta	0x105,x
                            260 ;	../c16stombs.c: 64: c16s += 2;
   0185 BD 18 01      [ 5]  261 	lda	0x118,x
   0188 18            [ 2]  262 	clc
   0189 69 04         [ 2]  263 	adc	#0x04
   018B 9D 22 01      [ 5]  264 	sta	0x122,x
   018E BD 19 01      [ 5]  265 	lda	0x119,x
   0191 69 00         [ 2]  266 	adc	#0x00
   0193 9D 23 01      [ 5]  267 	sta	0x123,x
   0196                     268 00108$:
                            269 ;	../c16stombs.c: 67: if(!codepoint)
   0196 BA            [ 2]  270 	tsx
   0197 BD 04 01      [ 5]  271 	lda	0x104,x
   019A 1D 03 01      [ 5]  272 	ora	0x103,x
   019D 1D 02 01      [ 5]  273 	ora	0x102,x
   01A0 1D 01 01      [ 5]  274 	ora	0x101,x
   01A3 D0 24         [ 4]  275 	bne	00113$
                            276 ;	../c16stombs.c: 69: if(m < n)
   01A5 BD 1B 01      [ 5]  277 	lda	0x11b,x
   01A8 38            [ 2]  278 	sec
   01A9 FD 23 01      [ 5]  279 	sbc	0x123,x
   01AC BD 1C 01      [ 5]  280 	lda	0x11c,x
   01AF FD 24 01      [ 5]  281 	sbc	0x124,x
   01B2 90 03         [ 4]  282 	bcc	00161$
   01B4 4CrC9r02      [ 3]  283 	jmp	00118$
   01B7                     284 00161$:
                            285 ;	../c16stombs.c: 70: *s = 0;
   01B7 BD 1D 01      [ 5]  286 	lda	0x11d,x
   01BA 85*00         [ 3]  287 	sta	*(__DPTR+0)
   01BC BD 1E 01      [ 5]  288 	lda	0x11e,x
   01BF 85*01         [ 3]  289 	sta	*(__DPTR+1)
   01C1 A9 00         [ 2]  290 	lda	#0x00
   01C3 A8            [ 2]  291 	tay
   01C4 91*00         [ 6]  292 	sta	[__DPTR],y
                            293 ;	../c16stombs.c: 71: break;
   01C6 4CrC9r02      [ 3]  294 	jmp	00118$
   01C9                     295 00113$:
                            296 ;	../c16stombs.c: 74: l = wctomb(b, codepoint);
   01C9 BA            [ 2]  297 	tsx
   01CA 8A            [ 2]  298 	txa
   01CB 18            [ 2]  299 	clc
   01CC 69 05         [ 2]  300 	adc	#0x05
   01CE 9D 09 01      [ 5]  301 	sta	0x109,x
   01D1 A9 01         [ 2]  302 	lda	#0x01
   01D3 9D 0A 01      [ 5]  303 	sta	0x10a,x
   01D6 BD 09 01      [ 5]  304 	lda	0x109,x
   01D9 9D 0D 01      [ 5]  305 	sta	0x10d,x
   01DC BD 0A 01      [ 5]  306 	lda	0x10a,x
   01DF 9D 0E 01      [ 5]  307 	sta	0x10e,x
   01E2 BD 04 01      [ 5]  308 	lda	0x104,x
   01E5 48            [ 3]  309 	pha
   01E6 BD 03 01      [ 5]  310 	lda	0x103,x
   01E9 48            [ 3]  311 	pha
   01EA BD 02 01      [ 5]  312 	lda	0x102,x
   01ED 48            [ 3]  313 	pha
   01EE BD 01 01      [ 5]  314 	lda	0x101,x
   01F1 48            [ 3]  315 	pha
   01F2 BD 0E 01      [ 5]  316 	lda	0x10e,x
   01F5 AA            [ 2]  317 	tax
   01F6 86*00         [ 3]  318 	stx	*(__TEMP+0)
   01F8 BA            [ 2]  319 	tsx
   01F9 BD 11 01      [ 5]  320 	lda	0x111,x
   01FC 08            [ 3]  321 	php
   01FD A6*00         [ 3]  322 	ldx	*(__TEMP+0)
   01FF 28            [ 4]  323 	plp
   0200 20r00r00      [ 6]  324 	jsr	_wctomb
   0203 86*00         [ 3]  325 	stx	*(__TEMP+0)
   0205 BA            [ 2]  326 	tsx
   0206 9D 1D 01      [ 5]  327 	sta	0x11d,x
   0209 A6*00         [ 3]  328 	ldx	*(__TEMP+0)
   020B 8A            [ 2]  329 	txa
   020C BA            [ 2]  330 	tsx
   020D 9D 1E 01      [ 5]  331 	sta	0x11e,x
   0210 A6*00         [ 3]  332 	ldx	*(__TEMP+0)
   0212 85*00         [ 3]  333 	sta	*(__TEMP+0)
   0214 68            [ 4]  334 	pla
   0215 68            [ 4]  335 	pla
   0216 68            [ 4]  336 	pla
   0217 68            [ 4]  337 	pla
   0218 A5*00         [ 3]  338 	lda	*(__TEMP+0)
                            339 ;	../c16stombs.c: 76: if(l < 0)
   021A BA            [ 2]  340 	tsx
   021B BD 1A 01      [ 5]  341 	lda	0x11a,x
   021E 38            [ 2]  342 	sec
   021F E9 00         [ 2]  343 	sbc	#0x00
   0221 50 04         [ 4]  344 	bvc	00163$
   0223 10 04         [ 4]  345 	bpl	00162$
   0225 30 08         [ 4]  346 	bmi	00115$
   0227                     347 00163$:
   0227 10 06         [ 4]  348 	bpl	00115$
   0229                     349 00162$:
                            350 ;	../c16stombs.c: 77: return(-1);
   0229 A9 FF         [ 2]  351 	lda	#0xff
   022B AA            [ 2]  352 	tax
   022C 4CrD8r02      [ 3]  353 	jmp	00121$
   022F                     354 00115$:
                            355 ;	../c16stombs.c: 79: if(m + l > n)
   022F BA            [ 2]  356 	tsx
   0230 BD 19 01      [ 5]  357 	lda	0x119,x
   0233 9D 0D 01      [ 5]  358 	sta	0x10d,x
   0236 BD 1A 01      [ 5]  359 	lda	0x11a,x
   0239 9D 0E 01      [ 5]  360 	sta	0x10e,x
   023C BD 1B 01      [ 5]  361 	lda	0x11b,x
   023F 18            [ 2]  362 	clc
   0240 7D 0D 01      [ 5]  363 	adc	0x10d,x
   0243 9D 11 01      [ 5]  364 	sta	0x111,x
   0246 BD 1C 01      [ 5]  365 	lda	0x11c,x
   0249 7D 0E 01      [ 5]  366 	adc	0x10e,x
   024C 9D 12 01      [ 5]  367 	sta	0x112,x
   024F BD 23 01      [ 5]  368 	lda	0x123,x
   0252 38            [ 2]  369 	sec
   0253 FD 11 01      [ 5]  370 	sbc	0x111,x
   0256 BD 24 01      [ 5]  371 	lda	0x124,x
   0259 FD 12 01      [ 5]  372 	sbc	0x112,x
   025C 90 6B         [ 4]  373 	bcc	00118$
                            374 ;	../c16stombs.c: 82: memcpy(s, b, l);
   025E BD 09 01      [ 5]  375 	lda	0x109,x
   0261 9D 09 01      [ 5]  376 	sta	0x109,x
   0264 BD 0A 01      [ 5]  377 	lda	0x10a,x
   0267 9D 0A 01      [ 5]  378 	sta	0x10a,x
   026A BD 1D 01      [ 5]  379 	lda	0x11d,x
   026D 9D 11 01      [ 5]  380 	sta	0x111,x
   0270 BD 1E 01      [ 5]  381 	lda	0x11e,x
   0273 9D 12 01      [ 5]  382 	sta	0x112,x
   0276 BD 1A 01      [ 5]  383 	lda	0x11a,x
   0279 48            [ 3]  384 	pha
   027A BD 19 01      [ 5]  385 	lda	0x119,x
   027D 48            [ 3]  386 	pha
   027E BD 0A 01      [ 5]  387 	lda	0x10a,x
   0281 48            [ 3]  388 	pha
   0282 BD 09 01      [ 5]  389 	lda	0x109,x
   0285 48            [ 3]  390 	pha
   0286 BD 12 01      [ 5]  391 	lda	0x112,x
   0289 AA            [ 2]  392 	tax
   028A 86*00         [ 3]  393 	stx	*(__TEMP+0)
   028C BA            [ 2]  394 	tsx
   028D BD 15 01      [ 5]  395 	lda	0x115,x
   0290 08            [ 3]  396 	php
   0291 A6*00         [ 3]  397 	ldx	*(__TEMP+0)
   0293 28            [ 4]  398 	plp
   0294 20r00r00      [ 6]  399 	jsr	___memcpy
   0297 85*00         [ 3]  400 	sta	*(__TEMP+0)
   0299 68            [ 4]  401 	pla
   029A 68            [ 4]  402 	pla
   029B 68            [ 4]  403 	pla
   029C 68            [ 4]  404 	pla
   029D A5*00         [ 3]  405 	lda	*(__TEMP+0)
                            406 ;	../c16stombs.c: 83: s += l;
   029F BA            [ 2]  407 	tsx
   02A0 BD 1D 01      [ 5]  408 	lda	0x11d,x
   02A3 18            [ 2]  409 	clc
   02A4 7D 19 01      [ 5]  410 	adc	0x119,x
   02A7 9D 1D 01      [ 5]  411 	sta	0x11d,x
   02AA BD 1E 01      [ 5]  412 	lda	0x11e,x
   02AD 7D 1A 01      [ 5]  413 	adc	0x11a,x
   02B0 9D 1E 01      [ 5]  414 	sta	0x11e,x
                            415 ;	../c16stombs.c: 84: m += l;
   02B3 BD 1B 01      [ 5]  416 	lda	0x11b,x
   02B6 18            [ 2]  417 	clc
   02B7 7D 0D 01      [ 5]  418 	adc	0x10d,x
   02BA 9D 1B 01      [ 5]  419 	sta	0x11b,x
   02BD BD 1C 01      [ 5]  420 	lda	0x11c,x
   02C0 7D 0E 01      [ 5]  421 	adc	0x10e,x
   02C3 9D 1C 01      [ 5]  422 	sta	0x11c,x
   02C6 4Cr19r00      [ 3]  423 	jmp	00119$
   02C9                     424 00118$:
                            425 ;	../c16stombs.c: 87: return(m);
   02C9 BA            [ 2]  426 	tsx
   02CA BD 1C 01      [ 5]  427 	lda	0x11c,x
   02CD AA            [ 2]  428 	tax
   02CE 86*00         [ 3]  429 	stx	*(__TEMP+0)
   02D0 BA            [ 2]  430 	tsx
   02D1 BD 1B 01      [ 5]  431 	lda	0x11b,x
   02D4 08            [ 3]  432 	php
   02D5 A6*00         [ 3]  433 	ldx	*(__TEMP+0)
   02D7 28            [ 4]  434 	plp
   02D8                     435 00121$:
                            436 ;	../c16stombs.c: 88: }
   02D8 85*00         [ 3]  437 	sta	*(__TEMP+0)
   02DA 86*01         [ 3]  438 	stx	*(__TEMP+1)
   02DC BA            [ 2]  439 	tsx
   02DD 8A            [ 2]  440 	txa
   02DE 18            [ 2]  441 	clc
   02DF 69 1E         [ 2]  442 	adc	#0x1e
   02E1 AA            [ 2]  443 	tax
   02E2 9A            [ 2]  444 	txs
   02E3 A6*01         [ 3]  445 	ldx	*(__TEMP+1)
   02E5 A5*00         [ 3]  446 	lda	*(__TEMP+0)
   02E7 60            [ 6]  447 	rts
                            448 	.area CODE
                            449 	.area RODATA
                            450 	.area XINIT
                            451 	.area CABS    (ABS)
