                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _divsint
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __divsint
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '_divsint'
                             49 ;------------------------------------------------------------
                             50 ;y                         Allocated to stack - sp +6
                             51 ;x                         Allocated to registers a x 
                             52 ;r                         Allocated to registers a x 
                             53 ;sloc0                     Allocated to stack - sp +2
                             54 ;sloc1                     Allocated to stack - sp +1
                             55 ;------------------------------------------------------------
                             56 ;	../_divsint.c: 213: _divsint (int x, int y) __SDCC_NONBANKED
                             57 ;	-----------------------------------------
                             58 ;	 function _divsint
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 3 bytes.
   0000                      62 __divsint:
   0000 48            [ 3]   63 	pha
   0001 48            [ 3]   64 	pha
   0002 48            [ 3]   65 	pha
                             66 ;	../_divsint.c: 217: r = (unsigned int)(x < 0 ? -x : x) / (unsigned int)(y < 0 ? -y : y);
   0003 85*00         [ 3]   67 	sta	*(__TEMP+0)
   0005 8A            [ 2]   68 	txa
   0006 38            [ 2]   69 	sec
   0007 E9 00         [ 2]   70 	sbc	#0x00
   0009 50 04         [ 4]   71 	bvc	00124$
   000B 10 09         [ 4]   72 	bpl	00122$
   000D 30 02         [ 4]   73 	bmi	00125$
   000F                      74 00124$:
   000F 30 05         [ 4]   75 	bmi	00122$
   0011                      76 00125$:
   0011 A9 00         [ 2]   77 	lda	#0x00
   0013 4Cr18r00      [ 3]   78 	jmp	00123$
   0016                      79 00122$:
   0016 A9 01         [ 2]   80 	lda	#0x01
   0018                      81 00123$:
   0018 A8            [ 2]   82 	tay
   0019 A5*00         [ 3]   83 	lda	*(__TEMP+0)
   001B C0 00         [ 2]   84 	cpy	#0x00
   001D F0 11         [ 4]   85 	beq	00106$
   001F 49 FF         [ 2]   86 	eor	#0xff
   0021 18            [ 2]   87 	clc
   0022 69 01         [ 2]   88 	adc	#0x01
   0024 48            [ 3]   89 	pha
   0025 A9 00         [ 2]   90 	lda	#0x00
   0027 86*00         [ 3]   91 	stx	*(__TEMP+0)
   0029 E5*00         [ 3]   92 	sbc	*(__TEMP+0)
   002B AA            [ 2]   93 	tax
   002C 68            [ 4]   94 	pla
   002D 4Cr30r00      [ 3]   95 	jmp	00107$
   0030                      96 00106$:
   0030                      97 00107$:
   0030 48            [ 3]   98 	pha
   0031 8A            [ 2]   99 	txa
   0032 BA            [ 2]  100 	tsx
   0033 9D 04 01      [ 5]  101 	sta	0x104,x
   0036 68            [ 4]  102 	pla
   0037 9D 03 01      [ 5]  103 	sta	0x103,x
   003A BD 08 01      [ 5]  104 	lda	0x108, x
   003D 38            [ 2]  105 	sec
   003E E9 00         [ 2]  106 	sbc	#0x00
   0040 50 04         [ 4]  107 	bvc	00129$
   0042 10 09         [ 4]  108 	bpl	00127$
   0044 30 02         [ 4]  109 	bmi	00130$
   0046                     110 00129$:
   0046 30 05         [ 4]  111 	bmi	00127$
   0048                     112 00130$:
   0048 A9 00         [ 2]  113 	lda	#0x00
   004A 4Cr4Fr00      [ 3]  114 	jmp	00128$
   004D                     115 00127$:
   004D A9 01         [ 2]  116 	lda	#0x01
   004F                     117 00128$:
   004F 9D 02 01      [ 5]  118 	sta	0x102, x
   0052 F0 11         [ 4]  119 	beq	00108$
   0054 A9 00         [ 2]  120 	lda	#0x00
   0056 38            [ 2]  121 	sec
   0057 FD 07 01      [ 5]  122 	sbc	0x107,x
   005A 48            [ 3]  123 	pha
   005B A9 00         [ 2]  124 	lda	#0x00
   005D FD 08 01      [ 5]  125 	sbc	0x108,x
   0060 AA            [ 2]  126 	tax
   0061 68            [ 4]  127 	pla
   0062 4Cr71r00      [ 3]  128 	jmp	00109$
   0065                     129 00108$:
   0065 BA            [ 2]  130 	tsx
   0066 BD 06 01      [ 5]  131 	lda	0x106,x
   0069 85*00         [ 3]  132 	sta	*(__TEMP+0)
   006B BD 07 01      [ 5]  133 	lda	0x107,x
   006E AA            [ 2]  134 	tax
   006F A5*00         [ 3]  135 	lda	*(__TEMP+0)
   0071                     136 00109$:
   0071 85*00         [ 3]  137 	sta	*(__TEMP+0)
   0073 98            [ 2]  138 	tya
   0074 48            [ 3]  139 	pha
   0075 8A            [ 2]  140 	txa
   0076 48            [ 3]  141 	pha
   0077 A5*00         [ 3]  142 	lda	*(__TEMP+0)
   0079 48            [ 3]  143 	pha
   007A BA            [ 2]  144 	tsx
   007B BD 06 01      [ 5]  145 	lda	0x106,x
   007E AA            [ 2]  146 	tax
   007F 86*00         [ 3]  147 	stx	*(__TEMP+0)
   0081 BA            [ 2]  148 	tsx
   0082 BD 05 01      [ 5]  149 	lda	0x105,x
   0085 08            [ 3]  150 	php
   0086 A6*00         [ 3]  151 	ldx	*(__TEMP+0)
   0088 28            [ 4]  152 	plp
   0089 20r00r00      [ 6]  153 	jsr	__divuint
   008C 85*00         [ 3]  154 	sta	*(__TEMP+0)
   008E 68            [ 4]  155 	pla
   008F 68            [ 4]  156 	pla
   0090 68            [ 4]  157 	pla
                            158 ;	../_divsint.c: 218: if ((x < 0) ^ (y < 0))
   0091 A8            [ 2]  159 	tay
   0092 86*01         [ 3]  160 	stx	*(__TEMP+1)
   0094 BA            [ 2]  161 	tsx
   0095 5D 01 01      [ 5]  162 	eor	0x101,x
   0098 08            [ 3]  163 	php
   0099 A6*01         [ 3]  164 	ldx	*(__TEMP+1)
   009B 28            [ 4]  165 	plp
   009C 08            [ 3]  166 	php
   009D A5*00         [ 3]  167 	lda	*(__TEMP+0)
   009F 28            [ 4]  168 	plp
   00A0 F0 11         [ 4]  169 	beq	00102$
                            170 ;	../_divsint.c: 219: return -r;
   00A2 49 FF         [ 2]  171 	eor	#0xff
   00A4 18            [ 2]  172 	clc
   00A5 69 01         [ 2]  173 	adc	#0x01
   00A7 48            [ 3]  174 	pha
   00A8 A9 00         [ 2]  175 	lda	#0x00
   00AA 86*00         [ 3]  176 	stx	*(__TEMP+0)
   00AC E5*00         [ 3]  177 	sbc	*(__TEMP+0)
   00AE AA            [ 2]  178 	tax
   00AF 68            [ 4]  179 	pla
   00B0 4CrB3r00      [ 3]  180 	jmp	00104$
   00B3                     181 00102$:
                            182 ;	../_divsint.c: 221: return r;
   00B3                     183 00104$:
                            184 ;	../_divsint.c: 222: }
   00B3 85*00         [ 3]  185 	sta	*(__TEMP+0)
   00B5 68            [ 4]  186 	pla
   00B6 68            [ 4]  187 	pla
   00B7 68            [ 4]  188 	pla
   00B8 A5*00         [ 3]  189 	lda	*(__TEMP+0)
   00BA 60            [ 6]  190 	rts
                            191 	.area CODE
                            192 	.area RODATA
                            193 	.area XINIT
                            194 	.area CABS    (ABS)
