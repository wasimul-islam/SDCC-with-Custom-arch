                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _fsneq
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___fsneq
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '__fsneq'
                             49 ;------------------------------------------------------------
                             50 ;a1                        Allocated to stack - sp +19
                             51 ;a2                        Allocated to stack - sp +23
                             52 ;fl1                       Allocated to stack - sp +5
                             53 ;fl2                       Allocated to stack - sp +1
                             54 ;sloc0                     Allocated to stack - sp +13
                             55 ;sloc1                     Allocated to stack - sp +9
                             56 ;------------------------------------------------------------
                             57 ;	../_fsneq.c: 80: _Bool __fsneq (float a1, float a2)
                             58 ;	-----------------------------------------
                             59 ;	 function __fsneq
                             60 ;	-----------------------------------------
                             61 ;	Register assignment is optimal.
                             62 ;	Stack space usage: 16 bytes.
   0000                      63 ___fsneq:
   0000 85*00         [ 3]   64 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   65 	stx	*(__TEMP+1)
   0004 BA            [ 2]   66 	tsx
   0005 8A            [ 2]   67 	txa
   0006 18            [ 2]   68 	clc
   0007 69 F0         [ 2]   69 	adc	#0xf0
   0009 AA            [ 2]   70 	tax
   000A 9A            [ 2]   71 	txs
   000B A6*01         [ 3]   72 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   73 	lda	*(__TEMP+0)
                             74 ;	../_fsneq.c: 84: fl1.f = a1;
   000F BA            [ 2]   75 	tsx
   0010 8A            [ 2]   76 	txa
   0011 18            [ 2]   77 	clc
   0012 69 05         [ 2]   78 	adc	#0x05
   0014 A2 01         [ 2]   79 	ldx	#0x01
   0016 85*00         [ 3]   80 	sta	*(__DPTR+0)
   0018 86*01         [ 3]   81 	stx	*(__DPTR+1)
   001A BA            [ 2]   82 	tsx
   001B BD 13 01      [ 5]   83 	lda	0x113,x
   001E A0 00         [ 2]   84 	ldy	#0x00
   0020 91*00         [ 6]   85 	sta	[__DPTR],y
   0022 BD 14 01      [ 5]   86 	lda	0x114,x
   0025 C8            [ 2]   87 	iny
   0026 91*00         [ 6]   88 	sta	[__DPTR],y
   0028 BD 15 01      [ 5]   89 	lda	0x115,x
   002B C8            [ 2]   90 	iny
   002C 91*00         [ 6]   91 	sta	[__DPTR],y
   002E BD 16 01      [ 5]   92 	lda	0x116,x
   0031 C8            [ 2]   93 	iny
   0032 91*00         [ 6]   94 	sta	[__DPTR],y
                             95 ;	../_fsneq.c: 85: fl2.f = a2;
   0034 E8            [ 2]   96 	inx
   0035 8A            [ 2]   97 	txa
   0036 A2 01         [ 2]   98 	ldx	#0x01
   0038 85*00         [ 3]   99 	sta	*(__DPTR+0)
   003A 86*00         [ 3]  100 	stx	*(__TEMP+0)
   003C BA            [ 2]  101 	tsx
   003D BD 17 01      [ 5]  102 	lda	0x117,x
   0040 08            [ 3]  103 	php
   0041 A2 01         [ 2]  104 	ldx	#0x01
   0043 28            [ 4]  105 	plp
   0044 A0 00         [ 2]  106 	ldy	#0x00
   0046 91*00         [ 6]  107 	sta	[__DPTR],y
   0048 86*00         [ 3]  108 	stx	*(__TEMP+0)
   004A BA            [ 2]  109 	tsx
   004B BD 18 01      [ 5]  110 	lda	0x118,x
   004E 08            [ 3]  111 	php
   004F A2 01         [ 2]  112 	ldx	#0x01
   0051 28            [ 4]  113 	plp
   0052 C8            [ 2]  114 	iny
   0053 91*00         [ 6]  115 	sta	[__DPTR],y
   0055 86*00         [ 3]  116 	stx	*(__TEMP+0)
   0057 BA            [ 2]  117 	tsx
   0058 BD 19 01      [ 5]  118 	lda	0x119,x
   005B 08            [ 3]  119 	php
   005C A2 01         [ 2]  120 	ldx	#0x01
   005E 28            [ 4]  121 	plp
   005F C8            [ 2]  122 	iny
   0060 91*00         [ 6]  123 	sta	[__DPTR],y
   0062 86*00         [ 3]  124 	stx	*(__TEMP+0)
   0064 BA            [ 2]  125 	tsx
   0065 BD 1A 01      [ 5]  126 	lda	0x11a,x
   0068 08            [ 3]  127 	php
   0069 A2 01         [ 2]  128 	ldx	#0x01
   006B 28            [ 4]  129 	plp
   006C C8            [ 2]  130 	iny
   006D 91*00         [ 6]  131 	sta	[__DPTR],y
                            132 ;	../_fsneq.c: 87: if (fl1.l == fl2.l)
   006F BA            [ 2]  133 	tsx
   0070 8A            [ 2]  134 	txa
   0071 18            [ 2]  135 	clc
   0072 69 05         [ 2]  136 	adc	#0x05
   0074 A2 01         [ 2]  137 	ldx	#0x01
   0076 85*00         [ 3]  138 	sta	*(__DPTR+0)
   0078 A0 00         [ 2]  139 	ldy	#0x00
   007A B1*00         [ 6]  140 	lda	[__DPTR],y
   007C 86*00         [ 3]  141 	stx	*(__TEMP+0)
   007E BA            [ 2]  142 	tsx
   007F 9D 0D 01      [ 5]  143 	sta	0x10d,x
   0082 A2 01         [ 2]  144 	ldx	#0x01
   0084 C8            [ 2]  145 	iny
   0085 B1*00         [ 6]  146 	lda	[__DPTR],y
   0087 86*00         [ 3]  147 	stx	*(__TEMP+0)
   0089 BA            [ 2]  148 	tsx
   008A 9D 0E 01      [ 5]  149 	sta	0x10e,x
   008D A2 01         [ 2]  150 	ldx	#0x01
   008F C8            [ 2]  151 	iny
   0090 B1*00         [ 6]  152 	lda	[__DPTR],y
   0092 86*00         [ 3]  153 	stx	*(__TEMP+0)
   0094 BA            [ 2]  154 	tsx
   0095 9D 0F 01      [ 5]  155 	sta	0x10f,x
   0098 A2 01         [ 2]  156 	ldx	#0x01
   009A C8            [ 2]  157 	iny
   009B B1*00         [ 6]  158 	lda	[__DPTR],y
   009D 86*00         [ 3]  159 	stx	*(__TEMP+0)
   009F BA            [ 2]  160 	tsx
   00A0 9D 10 01      [ 5]  161 	sta	0x110,x
   00A3 BA            [ 2]  162 	tsx
   00A4 E8            [ 2]  163 	inx
   00A5 8A            [ 2]  164 	txa
   00A6 A2 01         [ 2]  165 	ldx	#0x01
   00A8 85*00         [ 3]  166 	sta	*(__DPTR+0)
   00AA A0 00         [ 2]  167 	ldy	#0x00
   00AC B1*00         [ 6]  168 	lda	[__DPTR],y
   00AE 86*00         [ 3]  169 	stx	*(__TEMP+0)
   00B0 BA            [ 2]  170 	tsx
   00B1 9D 09 01      [ 5]  171 	sta	0x109,x
   00B4 A2 01         [ 2]  172 	ldx	#0x01
   00B6 C8            [ 2]  173 	iny
   00B7 B1*00         [ 6]  174 	lda	[__DPTR],y
   00B9 86*00         [ 3]  175 	stx	*(__TEMP+0)
   00BB BA            [ 2]  176 	tsx
   00BC 9D 0A 01      [ 5]  177 	sta	0x10a,x
   00BF A2 01         [ 2]  178 	ldx	#0x01
   00C1 C8            [ 2]  179 	iny
   00C2 B1*00         [ 6]  180 	lda	[__DPTR],y
   00C4 86*00         [ 3]  181 	stx	*(__TEMP+0)
   00C6 BA            [ 2]  182 	tsx
   00C7 9D 0B 01      [ 5]  183 	sta	0x10b,x
   00CA A2 01         [ 2]  184 	ldx	#0x01
   00CC C8            [ 2]  185 	iny
   00CD B1*00         [ 6]  186 	lda	[__DPTR],y
   00CF 86*00         [ 3]  187 	stx	*(__TEMP+0)
   00D1 BA            [ 2]  188 	tsx
   00D2 9D 0C 01      [ 5]  189 	sta	0x10c,x
   00D5 BA            [ 2]  190 	tsx
   00D6 BD 0D 01      [ 5]  191 	lda	0x10d,x
   00D9 DD 09 01      [ 5]  192 	cmp	0x109,x
   00DC D0 1D         [ 4]  193 	bne	00102$
   00DE BD 0E 01      [ 5]  194 	lda	0x10e,x
   00E1 DD 0A 01      [ 5]  195 	cmp	0x10a,x
   00E4 D0 15         [ 4]  196 	bne	00102$
   00E6 BD 0F 01      [ 5]  197 	lda	0x10f,x
   00E9 DD 0B 01      [ 5]  198 	cmp	0x10b,x
   00EC D0 0D         [ 4]  199 	bne	00102$
   00EE BD 10 01      [ 5]  200 	lda	0x110,x
   00F1 DD 0C 01      [ 5]  201 	cmp	0x10c,x
   00F4 D0 05         [ 4]  202 	bne	00102$
                            203 ;	../_fsneq.c: 88: return (0);
   00F6 A9 00         [ 2]  204 	lda	#0x00
   00F8 4Cr93r01      [ 3]  205 	jmp	00105$
   00FB                     206 00102$:
                            207 ;	../_fsneq.c: 89: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
   00FB BA            [ 2]  208 	tsx
   00FC 8A            [ 2]  209 	txa
   00FD 18            [ 2]  210 	clc
   00FE 69 05         [ 2]  211 	adc	#0x05
   0100 A2 01         [ 2]  212 	ldx	#0x01
   0102 85*00         [ 3]  213 	sta	*(__DPTR+0)
   0104 86*01         [ 3]  214 	stx	*(__DPTR+1)
   0106 A0 00         [ 2]  215 	ldy	#0x00
   0108 B1*00         [ 6]  216 	lda	[__DPTR],y
   010A BA            [ 2]  217 	tsx
   010B 9D 09 01      [ 5]  218 	sta	0x109,x
   010E C8            [ 2]  219 	iny
   010F B1*00         [ 6]  220 	lda	[__DPTR],y
   0111 9D 0A 01      [ 5]  221 	sta	0x10a,x
   0114 C8            [ 2]  222 	iny
   0115 B1*00         [ 6]  223 	lda	[__DPTR],y
   0117 9D 0B 01      [ 5]  224 	sta	0x10b,x
   011A C8            [ 2]  225 	iny
   011B B1*00         [ 6]  226 	lda	[__DPTR],y
   011D 9D 0C 01      [ 5]  227 	sta	0x10c,x
   0120 E8            [ 2]  228 	inx
   0121 8A            [ 2]  229 	txa
   0122 A2 01         [ 2]  230 	ldx	#0x01
   0124 85*00         [ 3]  231 	sta	*(__DPTR+0)
   0126 A0 00         [ 2]  232 	ldy	#0x00
   0128 B1*00         [ 6]  233 	lda	[__DPTR],y
   012A 86*00         [ 3]  234 	stx	*(__TEMP+0)
   012C BA            [ 2]  235 	tsx
   012D 9D 0D 01      [ 5]  236 	sta	0x10d,x
   0130 A2 01         [ 2]  237 	ldx	#0x01
   0132 C8            [ 2]  238 	iny
   0133 B1*00         [ 6]  239 	lda	[__DPTR],y
   0135 86*00         [ 3]  240 	stx	*(__TEMP+0)
   0137 BA            [ 2]  241 	tsx
   0138 9D 0E 01      [ 5]  242 	sta	0x10e,x
   013B A2 01         [ 2]  243 	ldx	#0x01
   013D C8            [ 2]  244 	iny
   013E B1*00         [ 6]  245 	lda	[__DPTR],y
   0140 86*00         [ 3]  246 	stx	*(__TEMP+0)
   0142 BA            [ 2]  247 	tsx
   0143 9D 0F 01      [ 5]  248 	sta	0x10f,x
   0146 A2 01         [ 2]  249 	ldx	#0x01
   0148 C8            [ 2]  250 	iny
   0149 B1*00         [ 6]  251 	lda	[__DPTR],y
   014B 86*00         [ 3]  252 	stx	*(__TEMP+0)
   014D BA            [ 2]  253 	tsx
   014E 9D 10 01      [ 5]  254 	sta	0x110,x
   0151 BA            [ 2]  255 	tsx
   0152 BD 09 01      [ 5]  256 	lda	0x109,x
   0155 1D 0D 01      [ 5]  257 	ora	0x10d,x
   0158 9D 09 01      [ 5]  258 	sta	0x109,x
   015B BD 0A 01      [ 5]  259 	lda	0x10a,x
   015E 1D 0E 01      [ 5]  260 	ora	0x10e,x
   0161 9D 0A 01      [ 5]  261 	sta	0x10a,x
   0164 BD 0B 01      [ 5]  262 	lda	0x10b,x
   0167 1D 0F 01      [ 5]  263 	ora	0x10f,x
   016A 9D 0B 01      [ 5]  264 	sta	0x10b,x
   016D BD 0C 01      [ 5]  265 	lda	0x10c,x
   0170 1D 10 01      [ 5]  266 	ora	0x110,x
   0173 9D 0C 01      [ 5]  267 	sta	0x10c,x
   0176 BD 09 01      [ 5]  268 	lda	0x109,x
   0179 D0 0F         [ 4]  269 	bne	00120$
   017B BD 0A 01      [ 5]  270 	lda	0x10a,x
   017E D0 0A         [ 4]  271 	bne	00120$
   0180 BD 0B 01      [ 5]  272 	lda	0x10b,x
   0183 D0 05         [ 4]  273 	bne	00120$
   0185 A9 7F         [ 2]  274 	lda	#0x7f
   0187 3D 0C 01      [ 5]  275 	and	0x10c,x
   018A                     276 00120$:
   018A D0 05         [ 4]  277 	bne	00104$
                            278 ;	../_fsneq.c: 90: return (0);
   018C A9 00         [ 2]  279 	lda	#0x00
   018E 4Cr93r01      [ 3]  280 	jmp	00105$
   0191                     281 00104$:
                            282 ;	../_fsneq.c: 91: return (1);
   0191 A9 01         [ 2]  283 	lda	#0x01
   0193                     284 00105$:
                            285 ;	../_fsneq.c: 92: }
   0193 85*00         [ 3]  286 	sta	*(__TEMP+0)
   0195 86*01         [ 3]  287 	stx	*(__TEMP+1)
   0197 BA            [ 2]  288 	tsx
   0198 8A            [ 2]  289 	txa
   0199 18            [ 2]  290 	clc
   019A 69 10         [ 2]  291 	adc	#0x10
   019C AA            [ 2]  292 	tax
   019D 9A            [ 2]  293 	txs
   019E A6*01         [ 3]  294 	ldx	*(__TEMP+1)
   01A0 A5*00         [ 3]  295 	lda	*(__TEMP+0)
   01A2 60            [ 6]  296 	rts
                            297 	.area CODE
                            298 	.area RODATA
                            299 	.area XINIT
                            300 	.area CABS    (ABS)
