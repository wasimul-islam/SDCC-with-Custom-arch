                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __stdc_bit_ceilull
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___stdc_bit_ceilull
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function '__stdc_bit_ceilull'
                             49 ;------------------------------------------------------------
                             50 ;value                     Allocated to stack - sp +11
                             51 ;i                         Allocated to registers y 
                             52 ;sloc0                     Allocated to stack - sp +1
                             53 ;------------------------------------------------------------
                             54 ;	../__stdc_bit_ceilull.c: 37: unsigned long long __stdc_bit_ceilull(unsigned long long value)
                             55 ;	-----------------------------------------
                             56 ;	 function __stdc_bit_ceilull
                             57 ;	-----------------------------------------
                             58 ;	Register assignment is optimal.
                             59 ;	Stack space usage: 8 bytes.
   0000                      60 ___stdc_bit_ceilull:
   0000 85*00         [ 3]   61 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   62 	stx	*(__TEMP+1)
   0004 BA            [ 2]   63 	tsx
   0005 8A            [ 2]   64 	txa
   0006 18            [ 2]   65 	clc
   0007 69 F8         [ 2]   66 	adc	#0xf8
   0009 AA            [ 2]   67 	tax
   000A 9A            [ 2]   68 	txs
   000B A6*01         [ 3]   69 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   70 	lda	*(__TEMP+0)
                             71 ;	../__stdc_bit_ceilull.c: 40: for(i = 0; i < ULLONG_WIDTH; i++)
   000F A0 00         [ 2]   72 	ldy	#0x00
   0011                      73 00104$:
                             74 ;	../__stdc_bit_ceilull.c: 41: if(value <= (1ull << i))
   0011 85*00         [ 3]   75 	sta	*(__TEMP+0)
   0013 98            [ 2]   76 	tya
   0014 48            [ 3]   77 	pha
   0015 98            [ 2]   78 	tya
   0016 48            [ 3]   79 	pha
   0017 A9 00         [ 2]   80 	lda	#0x00
   0019 48            [ 3]   81 	pha
   001A 48            [ 3]   82 	pha
   001B 48            [ 3]   83 	pha
   001C 48            [ 3]   84 	pha
   001D 48            [ 3]   85 	pha
   001E 48            [ 3]   86 	pha
   001F 48            [ 3]   87 	pha
   0020 A9 01         [ 2]   88 	lda	#0x01
   0022 48            [ 3]   89 	pha
   0023 20r00r00      [ 6]   90 	jsr	__rlulonglong
   0026 86*00         [ 3]   91 	stx	*(__TEMP+0)
   0028 BA            [ 2]   92 	tsx
   0029 9D 0B 01      [ 5]   93 	sta	0x10b,x
   002C A6*00         [ 3]   94 	ldx	*(__TEMP+0)
   002E 8A            [ 2]   95 	txa
   002F BA            [ 2]   96 	tsx
   0030 9D 0C 01      [ 5]   97 	sta	0x10c,x
   0033 A6*00         [ 3]   98 	ldx	*(__TEMP+0)
   0035 A5*00         [ 3]   99 	lda	*___SDCC_m6502_ret2
   0037 BA            [ 2]  100 	tsx
   0038 9D 0D 01      [ 5]  101 	sta	0x10d,x
   003B A5*00         [ 3]  102 	lda	*___SDCC_m6502_ret3
   003D 9D 0E 01      [ 5]  103 	sta	0x10e,x
   0040 A5*00         [ 3]  104 	lda	*___SDCC_m6502_ret4
   0042 9D 0F 01      [ 5]  105 	sta	0x10f,x
   0045 A5*00         [ 3]  106 	lda	*___SDCC_m6502_ret5
   0047 9D 10 01      [ 5]  107 	sta	0x110,x
   004A A5*00         [ 3]  108 	lda	*___SDCC_m6502_ret6
   004C 9D 11 01      [ 5]  109 	sta	0x111,x
   004F A5*00         [ 3]  110 	lda	*___SDCC_m6502_ret7
   0051 9D 12 01      [ 5]  111 	sta	0x112,x
   0054 85*00         [ 3]  112 	sta	*(__TEMP+0)
   0056 86*01         [ 3]  113 	stx	*(__TEMP+1)
   0058 BA            [ 2]  114 	tsx
   0059 8A            [ 2]  115 	txa
   005A 18            [ 2]  116 	clc
   005B 69 09         [ 2]  117 	adc	#0x09
   005D AA            [ 2]  118 	tax
   005E 9A            [ 2]  119 	txs
   005F A6*01         [ 3]  120 	ldx	*(__TEMP+1)
   0061 68            [ 4]  121 	pla
   0062 A8            [ 2]  122 	tay
   0063 A5*00         [ 3]  123 	lda	*(__TEMP+0)
   0065 BA            [ 2]  124 	tsx
   0066 BD 01 01      [ 5]  125 	lda	0x101,x
   0069 38            [ 2]  126 	sec
   006A FD 0B 01      [ 5]  127 	sbc	0x10b,x
   006D BD 02 01      [ 5]  128 	lda	0x102,x
   0070 FD 0C 01      [ 5]  129 	sbc	0x10c,x
   0073 BD 03 01      [ 5]  130 	lda	0x103,x
   0076 FD 0D 01      [ 5]  131 	sbc	0x10d,x
   0079 BD 04 01      [ 5]  132 	lda	0x104,x
   007C FD 0E 01      [ 5]  133 	sbc	0x10e,x
   007F BD 05 01      [ 5]  134 	lda	0x105,x
   0082 FD 0F 01      [ 5]  135 	sbc	0x10f,x
   0085 BD 06 01      [ 5]  136 	lda	0x106,x
   0088 FD 10 01      [ 5]  137 	sbc	0x110,x
   008B BD 07 01      [ 5]  138 	lda	0x107,x
   008E FD 11 01      [ 5]  139 	sbc	0x111,x
   0091 BD 08 01      [ 5]  140 	lda	0x108,x
   0094 FD 12 01      [ 5]  141 	sbc	0x112,x
   0097 B0 08         [ 4]  142 	bcs	00103$
                            143 ;	../__stdc_bit_ceilull.c: 40: for(i = 0; i < ULLONG_WIDTH; i++)
   0099 C8            [ 2]  144 	iny
   009A C0 40         [ 2]  145 	cpy	#0x40
   009C B0 03         [ 4]  146 	bcs	00118$
   009E 4Cr11r00      [ 3]  147 	jmp	00104$
   00A1                     148 00118$:
   00A1                     149 00103$:
                            150 ;	../__stdc_bit_ceilull.c: 43: return (1ull << i);
   00A1 98            [ 2]  151 	tya
   00A2 48            [ 3]  152 	pha
   00A3 A9 00         [ 2]  153 	lda	#0x00
   00A5 48            [ 3]  154 	pha
   00A6 48            [ 3]  155 	pha
   00A7 48            [ 3]  156 	pha
   00A8 48            [ 3]  157 	pha
   00A9 48            [ 3]  158 	pha
   00AA 48            [ 3]  159 	pha
   00AB 48            [ 3]  160 	pha
   00AC A9 01         [ 2]  161 	lda	#0x01
   00AE 48            [ 3]  162 	pha
   00AF 20r00r00      [ 6]  163 	jsr	__rlulonglong
   00B2 86*00         [ 3]  164 	stx	*(__TEMP+0)
   00B4 BA            [ 2]  165 	tsx
   00B5 9D 0A 01      [ 5]  166 	sta	0x10a,x
   00B8 A6*00         [ 3]  167 	ldx	*(__TEMP+0)
   00BA 8A            [ 2]  168 	txa
   00BB BA            [ 2]  169 	tsx
   00BC 9D 0B 01      [ 5]  170 	sta	0x10b,x
   00BF A6*00         [ 3]  171 	ldx	*(__TEMP+0)
   00C1 A5*00         [ 3]  172 	lda	*___SDCC_m6502_ret2
   00C3 BA            [ 2]  173 	tsx
   00C4 9D 0C 01      [ 5]  174 	sta	0x10c,x
   00C7 A5*00         [ 3]  175 	lda	*___SDCC_m6502_ret3
   00C9 9D 0D 01      [ 5]  176 	sta	0x10d,x
   00CC A5*00         [ 3]  177 	lda	*___SDCC_m6502_ret4
   00CE 9D 0E 01      [ 5]  178 	sta	0x10e,x
   00D1 A5*00         [ 3]  179 	lda	*___SDCC_m6502_ret5
   00D3 9D 0F 01      [ 5]  180 	sta	0x10f,x
   00D6 A5*00         [ 3]  181 	lda	*___SDCC_m6502_ret6
   00D8 9D 10 01      [ 5]  182 	sta	0x110,x
   00DB A5*00         [ 3]  183 	lda	*___SDCC_m6502_ret7
   00DD 9D 11 01      [ 5]  184 	sta	0x111,x
   00E0 85*00         [ 3]  185 	sta	*(__TEMP+0)
   00E2 86*01         [ 3]  186 	stx	*(__TEMP+1)
   00E4 BA            [ 2]  187 	tsx
   00E5 8A            [ 2]  188 	txa
   00E6 18            [ 2]  189 	clc
   00E7 69 09         [ 2]  190 	adc	#0x09
   00E9 AA            [ 2]  191 	tax
   00EA 9A            [ 2]  192 	txs
   00EB A6*01         [ 3]  193 	ldx	*(__TEMP+1)
   00ED A5*00         [ 3]  194 	lda	*(__TEMP+0)
   00EF BA            [ 2]  195 	tsx
   00F0 BD 08 01      [ 5]  196 	lda	0x108,x
   00F3 85*00         [ 3]  197 	sta	*___SDCC_m6502_ret7
   00F5 BD 07 01      [ 5]  198 	lda	0x107,x
   00F8 85*00         [ 3]  199 	sta	*___SDCC_m6502_ret6
   00FA BD 06 01      [ 5]  200 	lda	0x106,x
   00FD 85*00         [ 3]  201 	sta	*___SDCC_m6502_ret5
   00FF BD 05 01      [ 5]  202 	lda	0x105,x
   0102 85*00         [ 3]  203 	sta	*___SDCC_m6502_ret4
   0104 BD 04 01      [ 5]  204 	lda	0x104,x
   0107 85*00         [ 3]  205 	sta	*___SDCC_m6502_ret3
   0109 BD 03 01      [ 5]  206 	lda	0x103,x
   010C 85*00         [ 3]  207 	sta	*___SDCC_m6502_ret2
   010E BD 02 01      [ 5]  208 	lda	0x102,x
   0111 AA            [ 2]  209 	tax
   0112 86*00         [ 3]  210 	stx	*(__TEMP+0)
   0114 BA            [ 2]  211 	tsx
   0115 BD 01 01      [ 5]  212 	lda	0x101,x
   0118 08            [ 3]  213 	php
   0119 A6*00         [ 3]  214 	ldx	*(__TEMP+0)
   011B 28            [ 4]  215 	plp
                            216 ;	../__stdc_bit_ceilull.c: 44: }
   011C 85*00         [ 3]  217 	sta	*(__TEMP+0)
   011E 86*01         [ 3]  218 	stx	*(__TEMP+1)
   0120 BA            [ 2]  219 	tsx
   0121 8A            [ 2]  220 	txa
   0122 18            [ 2]  221 	clc
   0123 69 08         [ 2]  222 	adc	#0x08
   0125 AA            [ 2]  223 	tax
   0126 9A            [ 2]  224 	txs
   0127 A6*01         [ 3]  225 	ldx	*(__TEMP+1)
   0129 A5*00         [ 3]  226 	lda	*(__TEMP+0)
   012B 60            [ 6]  227 	rts
                            228 	.area CODE
                            229 	.area RODATA
                            230 	.area XINIT
                            231 	.area CABS    (ABS)
