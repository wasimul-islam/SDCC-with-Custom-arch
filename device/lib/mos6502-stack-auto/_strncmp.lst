                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strncmp
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strncmp
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'strncmp'
                             49 ;------------------------------------------------------------
                             50 ;last                      Allocated to stack - sp +11
                             51 ;count                     Allocated to stack - sp +13
                             52 ;first                     Allocated to stack - sp +7
                             53 ;sloc0                     Allocated to stack - sp +5
                             54 ;sloc1                     Allocated to stack - sp +3
                             55 ;sloc2                     Allocated to stack - sp +1
                             56 ;------------------------------------------------------------
                             57 ;	../_strncmp.c: 31: int strncmp ( const char * first, const char * last, size_t count )
                             58 ;	-----------------------------------------
                             59 ;	 function strncmp
                             60 ;	-----------------------------------------
                             61 ;	Register assignment is optimal.
                             62 ;	Stack space usage: 8 bytes.
   0000                      63 _strncmp:
   0000 85*00         [ 3]   64 	sta	*(__TEMP+0)
   0002 8A            [ 2]   65 	txa
   0003 48            [ 3]   66 	pha
   0004 A5*00         [ 3]   67 	lda	*(__TEMP+0)
   0006 48            [ 3]   68 	pha
   0007 48            [ 3]   69 	pha
   0008 48            [ 3]   70 	pha
   0009 48            [ 3]   71 	pha
   000A 48            [ 3]   72 	pha
   000B 48            [ 3]   73 	pha
   000C 48            [ 3]   74 	pha
                             75 ;	../_strncmp.c: 33: if (!count)
   000D BA            [ 2]   76 	tsx
   000E BD 0D 01      [ 5]   77 	lda	0x10d,x
   0011 1D 0E 01      [ 5]   78 	ora	0x10e,x
   0014 D0 06         [ 4]   79 	bne	00114$
                             80 ;	../_strncmp.c: 34: return(0);
   0016 A9 00         [ 2]   81 	lda	#0x00
   0018 AA            [ 2]   82 	tax
   0019 4CrE6r00      [ 3]   83 	jmp	00108$
                             84 ;	../_strncmp.c: 36: while (--count && *first && *first == *last) {
   001C                      85 00114$:
   001C BA            [ 2]   86 	tsx
   001D BD 07 01      [ 5]   87 	lda	0x107,x
   0020 9D 05 01      [ 5]   88 	sta	0x105,x
   0023 BD 08 01      [ 5]   89 	lda	0x108,x
   0026 9D 06 01      [ 5]   90 	sta	0x106,x
   0029 BD 0B 01      [ 5]   91 	lda	0x10b,x
   002C 9D 03 01      [ 5]   92 	sta	0x103,x
   002F BD 0C 01      [ 5]   93 	lda	0x10c,x
   0032 9D 04 01      [ 5]   94 	sta	0x104,x
   0035 BD 0D 01      [ 5]   95 	lda	0x10d,x
   0038 9D 01 01      [ 5]   96 	sta	0x101,x
   003B BD 0E 01      [ 5]   97 	lda	0x10e,x
   003E 9D 02 01      [ 5]   98 	sta	0x102,x
   0041                      99 00105$:
   0041 BA            [ 2]  100 	tsx
   0042 BD 01 01      [ 5]  101 	lda	0x101,x
   0045 38            [ 2]  102 	sec
   0046 E9 01         [ 2]  103 	sbc	#0x01
   0048 9D 01 01      [ 5]  104 	sta	0x101,x
   004B BD 02 01      [ 5]  105 	lda	0x102,x
   004E E9 00         [ 2]  106 	sbc	#0x00
   0050 9D 02 01      [ 5]  107 	sta	0x102,x
   0053 BD 01 01      [ 5]  108 	lda	0x101,x
   0056 1D 02 01      [ 5]  109 	ora	0x102,x
   0059 F0 4C         [ 4]  110 	beq	00107$
   005B BD 05 01      [ 5]  111 	lda	0x105,x
   005E 85*00         [ 3]  112 	sta	*(__DPTR+0)
   0060 BD 06 01      [ 5]  113 	lda	0x106,x
   0063 85*01         [ 3]  114 	sta	*(__DPTR+1)
   0065 A0 00         [ 2]  115 	ldy	#0x00
   0067 B1*00         [ 6]  116 	lda	[__DPTR],y
   0069 AA            [ 2]  117 	tax
   006A F0 3B         [ 4]  118 	beq	00107$
   006C 86*00         [ 3]  119 	stx	*(__TEMP+0)
   006E BA            [ 2]  120 	tsx
   006F BD 03 01      [ 5]  121 	lda	0x103,x
   0072 85*00         [ 3]  122 	sta	*(__DPTR+0)
   0074 BD 04 01      [ 5]  123 	lda	0x104,x
   0077 85*01         [ 3]  124 	sta	*(__DPTR+1)
   0079 B1*00         [ 6]  125 	lda	[__DPTR],y
   007B A6*00         [ 3]  126 	ldx	*(__TEMP+0)
   007D C5*00         [ 3]  127 	cmp	*(__TEMP+0)
   007F D0 26         [ 4]  128 	bne	00107$
                            129 ;	../_strncmp.c: 37: first++;
   0081 BA            [ 2]  130 	tsx
   0082 BD 05 01      [ 5]  131 	lda	0x105,x
   0085 18            [ 2]  132 	clc
   0086 69 01         [ 2]  133 	adc	#0x01
   0088 9D 05 01      [ 5]  134 	sta	0x105,x
   008B BD 06 01      [ 5]  135 	lda	0x106,x
   008E 69 00         [ 2]  136 	adc	#0x00
   0090 9D 06 01      [ 5]  137 	sta	0x106,x
                            138 ;	../_strncmp.c: 38: last++;
   0093 BD 03 01      [ 5]  139 	lda	0x103,x
   0096 18            [ 2]  140 	clc
   0097 69 01         [ 2]  141 	adc	#0x01
   0099 9D 03 01      [ 5]  142 	sta	0x103,x
   009C BD 04 01      [ 5]  143 	lda	0x104,x
   009F 69 00         [ 2]  144 	adc	#0x00
   00A1 9D 04 01      [ 5]  145 	sta	0x104,x
   00A4 4Cr41r00      [ 3]  146 	jmp	00105$
   00A7                     147 00107$:
                            148 ;	../_strncmp.c: 41: return( *first - *last );
   00A7 BA            [ 2]  149 	tsx
   00A8 BD 05 01      [ 5]  150 	lda	0x105,x
   00AB 85*00         [ 3]  151 	sta	*(__DPTR+0)
   00AD BD 06 01      [ 5]  152 	lda	0x106,x
   00B0 85*01         [ 3]  153 	sta	*(__DPTR+1)
   00B2 A0 00         [ 2]  154 	ldy	#0x00
   00B4 B1*00         [ 6]  155 	lda	[__DPTR],y
   00B6 A8            [ 2]  156 	tay
   00B7 9D 01 01      [ 5]  157 	sta	0x101,x
   00BA A9 00         [ 2]  158 	lda	#0x00
   00BC 9D 02 01      [ 5]  159 	sta	0x102,x
   00BF BD 03 01      [ 5]  160 	lda	0x103,x
   00C2 85*00         [ 3]  161 	sta	*(__DPTR+0)
   00C4 BD 04 01      [ 5]  162 	lda	0x104,x
   00C7 85*01         [ 3]  163 	sta	*(__DPTR+1)
   00C9 A0 00         [ 2]  164 	ldy	#0x00
   00CB B1*00         [ 6]  165 	lda	[__DPTR],y
   00CD A8            [ 2]  166 	tay
   00CE 9D 03 01      [ 5]  167 	sta	0x103,x
   00D1 A9 00         [ 2]  168 	lda	#0x00
   00D3 9D 04 01      [ 5]  169 	sta	0x104,x
   00D6 BD 01 01      [ 5]  170 	lda	0x101,x
   00D9 38            [ 2]  171 	sec
   00DA FD 03 01      [ 5]  172 	sbc	0x103,x
   00DD 48            [ 3]  173 	pha
   00DE BD 02 01      [ 5]  174 	lda	0x102,x
   00E1 FD 04 01      [ 5]  175 	sbc	0x104,x
   00E4 AA            [ 2]  176 	tax
   00E5 68            [ 4]  177 	pla
   00E6                     178 00108$:
                            179 ;	../_strncmp.c: 42: }
   00E6 85*00         [ 3]  180 	sta	*(__TEMP+0)
   00E8 86*01         [ 3]  181 	stx	*(__TEMP+1)
   00EA BA            [ 2]  182 	tsx
   00EB 8A            [ 2]  183 	txa
   00EC 18            [ 2]  184 	clc
   00ED 69 08         [ 2]  185 	adc	#0x08
   00EF AA            [ 2]  186 	tax
   00F0 9A            [ 2]  187 	txs
   00F1 A6*01         [ 3]  188 	ldx	*(__TEMP+1)
   00F3 A5*00         [ 3]  189 	lda	*(__TEMP+0)
   00F5 60            [ 6]  190 	rts
                            191 	.area CODE
                            192 	.area RODATA
                            193 	.area XINIT
                            194 	.area CABS    (ABS)
