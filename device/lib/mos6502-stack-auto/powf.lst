                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module powf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _logf
                             12 	.globl _expf
                             13 	.globl _powf
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; uninitialized external ram data
                             23 ;--------------------------------------------------------
                             24 	.area BSS
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area DABS    (ABS)
                             29 ;--------------------------------------------------------
                             30 ; initialized external ram data
                             31 ;--------------------------------------------------------
                             32 	.area DATA
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 	.area GSINIT
                             38 	.area GSFINAL
                             39 	.area GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 	.area _CODE
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area CODE
                             49 ;------------------------------------------------------------
                             50 ;Allocation info for local variables in function 'powf'
                             51 ;------------------------------------------------------------
                             52 ;x                         Allocated to stack - sp +7
                             53 ;y                         Allocated to stack - sp +11
                             54 ;sloc0                     Allocated to stack - sp +1
                             55 ;------------------------------------------------------------
                             56 ;	../powf.c: 35: float powf(float x, float y)
                             57 ;	-----------------------------------------
                             58 ;	 function powf
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 4 bytes.
   0000                      62 _powf:
   0000 48            [ 3]   63 	pha
   0001 48            [ 3]   64 	pha
   0002 48            [ 3]   65 	pha
   0003 48            [ 3]   66 	pha
                             67 ;	../powf.c: 37: if(y == 0.0) return 1.0;
   0004 BA            [ 2]   68 	tsx
   0005 BD 0E 01      [ 5]   69 	lda	0x10e,x
   0008 29 7F         [ 2]   70 	and	#0x7F
   000A 1D 0D 01      [ 5]   71 	ora	0x10d,x
   000D 1D 0C 01      [ 5]   72 	ora	0x10c,x
   0010 1D 0B 01      [ 5]   73 	ora	0x10b,x
   0013 D0 0E         [ 4]   74 	bne	00102$
   0015 A9 00         [ 2]   75 	lda	#0x00
   0017 AA            [ 2]   76 	tax
   0018 A0 80         [ 2]   77 	ldy	#0x80
   001A 84*00         [ 3]   78 	sty	*___SDCC_m6502_ret2
   001C A0 3F         [ 2]   79 	ldy	#0x3f
   001E 84*00         [ 3]   80 	sty	*___SDCC_m6502_ret3
   0020 4Cr6Fr01      [ 3]   81 	jmp	00107$
   0023                      82 00102$:
                             83 ;	../powf.c: 38: if(y == 1.0) return x;
   0023 A9 3F         [ 2]   84 	lda	#0x3f
   0025 48            [ 3]   85 	pha
   0026 A9 80         [ 2]   86 	lda	#0x80
   0028 48            [ 3]   87 	pha
   0029 A9 00         [ 2]   88 	lda	#0x00
   002B 48            [ 3]   89 	pha
   002C 48            [ 3]   90 	pha
   002D BA            [ 2]   91 	tsx
   002E BD 12 01      [ 5]   92 	lda	0x112,x
   0031 48            [ 3]   93 	pha
   0032 BD 11 01      [ 5]   94 	lda	0x111,x
   0035 48            [ 3]   95 	pha
   0036 BD 10 01      [ 5]   96 	lda	0x110,x
   0039 48            [ 3]   97 	pha
   003A BD 0F 01      [ 5]   98 	lda	0x10f,x
   003D 48            [ 3]   99 	pha
   003E 20r00r00      [ 6]  100 	jsr	___fseq
   0041 85*00         [ 3]  101 	sta	*(__TEMP+0)
   0043 86*01         [ 3]  102 	stx	*(__TEMP+1)
   0045 BA            [ 2]  103 	tsx
   0046 8A            [ 2]  104 	txa
   0047 18            [ 2]  105 	clc
   0048 69 08         [ 2]  106 	adc	#0x08
   004A AA            [ 2]  107 	tax
   004B 9A            [ 2]  108 	txs
   004C A6*01         [ 3]  109 	ldx	*(__TEMP+1)
   004E A5*00         [ 3]  110 	lda	*(__TEMP+0)
   0050 F0 1C         [ 4]  111 	beq	00104$
   0052 BA            [ 2]  112 	tsx
   0053 BD 0A 01      [ 5]  113 	lda	0x10a,x
   0056 85*00         [ 3]  114 	sta	*___SDCC_m6502_ret3
   0058 BD 09 01      [ 5]  115 	lda	0x109,x
   005B 85*00         [ 3]  116 	sta	*___SDCC_m6502_ret2
   005D BD 08 01      [ 5]  117 	lda	0x108,x
   0060 AA            [ 2]  118 	tax
   0061 86*00         [ 3]  119 	stx	*(__TEMP+0)
   0063 BA            [ 2]  120 	tsx
   0064 BD 07 01      [ 5]  121 	lda	0x107,x
   0067 08            [ 3]  122 	php
   0068 A6*00         [ 3]  123 	ldx	*(__TEMP+0)
   006A 28            [ 4]  124 	plp
   006B 4Cr6Fr01      [ 3]  125 	jmp	00107$
   006E                     126 00104$:
                            127 ;	../powf.c: 39: if(x <= 0.0) return 0.0;
   006E BA            [ 2]  128 	tsx
   006F BD 0A 01      [ 5]  129 	lda	0x10a,x
   0072 48            [ 3]  130 	pha
   0073 BD 09 01      [ 5]  131 	lda	0x109,x
   0076 48            [ 3]  132 	pha
   0077 BD 08 01      [ 5]  133 	lda	0x108,x
   007A 48            [ 3]  134 	pha
   007B BD 07 01      [ 5]  135 	lda	0x107,x
   007E 48            [ 3]  136 	pha
   007F A9 00         [ 2]  137 	lda	#0x00
   0081 48            [ 3]  138 	pha
   0082 48            [ 3]  139 	pha
   0083 48            [ 3]  140 	pha
   0084 48            [ 3]  141 	pha
   0085 20r00r00      [ 6]  142 	jsr	___fslt
   0088 85*00         [ 3]  143 	sta	*(__TEMP+0)
   008A 86*01         [ 3]  144 	stx	*(__TEMP+1)
   008C BA            [ 2]  145 	tsx
   008D 8A            [ 2]  146 	txa
   008E 18            [ 2]  147 	clc
   008F 69 08         [ 2]  148 	adc	#0x08
   0091 AA            [ 2]  149 	tax
   0092 9A            [ 2]  150 	txs
   0093 A6*01         [ 3]  151 	ldx	*(__TEMP+1)
   0095 A5*00         [ 3]  152 	lda	*(__TEMP+0)
   0097 D0 0A         [ 4]  153 	bne	00106$
   0099 A9 00         [ 2]  154 	lda	#0x00
   009B AA            [ 2]  155 	tax
   009C 85*00         [ 3]  156 	sta	*___SDCC_m6502_ret2
   009E 85*00         [ 3]  157 	sta	*___SDCC_m6502_ret3
   00A0 4Cr6Fr01      [ 3]  158 	jmp	00107$
   00A3                     159 00106$:
                            160 ;	../powf.c: 40: return expf(logf(x) * y);
   00A3 BA            [ 2]  161 	tsx
   00A4 BD 0A 01      [ 5]  162 	lda	0x10a,x
   00A7 48            [ 3]  163 	pha
   00A8 BD 09 01      [ 5]  164 	lda	0x109,x
   00AB 48            [ 3]  165 	pha
   00AC BD 08 01      [ 5]  166 	lda	0x108,x
   00AF 48            [ 3]  167 	pha
   00B0 BD 07 01      [ 5]  168 	lda	0x107,x
   00B3 48            [ 3]  169 	pha
   00B4 20r00r00      [ 6]  170 	jsr	_logf
   00B7 86*00         [ 3]  171 	stx	*(__TEMP+0)
   00B9 BA            [ 2]  172 	tsx
   00BA 9D 05 01      [ 5]  173 	sta	0x105,x
   00BD A6*00         [ 3]  174 	ldx	*(__TEMP+0)
   00BF 8A            [ 2]  175 	txa
   00C0 BA            [ 2]  176 	tsx
   00C1 9D 06 01      [ 5]  177 	sta	0x106,x
   00C4 A6*00         [ 3]  178 	ldx	*(__TEMP+0)
   00C6 A5*00         [ 3]  179 	lda	*___SDCC_m6502_ret2
   00C8 BA            [ 2]  180 	tsx
   00C9 9D 07 01      [ 5]  181 	sta	0x107,x
   00CC A5*00         [ 3]  182 	lda	*___SDCC_m6502_ret3
   00CE 9D 08 01      [ 5]  183 	sta	0x108,x
   00D1 85*00         [ 3]  184 	sta	*(__TEMP+0)
   00D3 68            [ 4]  185 	pla
   00D4 68            [ 4]  186 	pla
   00D5 68            [ 4]  187 	pla
   00D6 68            [ 4]  188 	pla
   00D7 BD 12 01      [ 5]  189 	lda	0x112, x
   00DA 48            [ 3]  190 	pha
   00DB BD 11 01      [ 5]  191 	lda	0x111,x
   00DE 48            [ 3]  192 	pha
   00DF BD 10 01      [ 5]  193 	lda	0x110,x
   00E2 48            [ 3]  194 	pha
   00E3 BD 0F 01      [ 5]  195 	lda	0x10f,x
   00E6 48            [ 3]  196 	pha
   00E7 BD 08 01      [ 5]  197 	lda	0x108,x
   00EA 48            [ 3]  198 	pha
   00EB BD 07 01      [ 5]  199 	lda	0x107,x
   00EE 48            [ 3]  200 	pha
   00EF BD 06 01      [ 5]  201 	lda	0x106,x
   00F2 48            [ 3]  202 	pha
   00F3 BD 05 01      [ 5]  203 	lda	0x105,x
   00F6 48            [ 3]  204 	pha
   00F7 20r00r00      [ 6]  205 	jsr	___fsmul
   00FA 86*00         [ 3]  206 	stx	*(__TEMP+0)
   00FC BA            [ 2]  207 	tsx
   00FD 9D 09 01      [ 5]  208 	sta	0x109,x
   0100 A6*00         [ 3]  209 	ldx	*(__TEMP+0)
   0102 8A            [ 2]  210 	txa
   0103 BA            [ 2]  211 	tsx
   0104 9D 0A 01      [ 5]  212 	sta	0x10a,x
   0107 A6*00         [ 3]  213 	ldx	*(__TEMP+0)
   0109 A5*00         [ 3]  214 	lda	*___SDCC_m6502_ret2
   010B BA            [ 2]  215 	tsx
   010C 9D 0B 01      [ 5]  216 	sta	0x10b,x
   010F A5*00         [ 3]  217 	lda	*___SDCC_m6502_ret3
   0111 9D 0C 01      [ 5]  218 	sta	0x10c,x
   0114 85*00         [ 3]  219 	sta	*(__TEMP+0)
   0116 86*01         [ 3]  220 	stx	*(__TEMP+1)
   0118 BA            [ 2]  221 	tsx
   0119 8A            [ 2]  222 	txa
   011A 18            [ 2]  223 	clc
   011B 69 08         [ 2]  224 	adc	#0x08
   011D AA            [ 2]  225 	tax
   011E 9A            [ 2]  226 	txs
   011F A6*01         [ 3]  227 	ldx	*(__TEMP+1)
   0121 A5*00         [ 3]  228 	lda	*(__TEMP+0)
   0123 BA            [ 2]  229 	tsx
   0124 BD 04 01      [ 5]  230 	lda	0x104,x
   0127 48            [ 3]  231 	pha
   0128 BD 03 01      [ 5]  232 	lda	0x103,x
   012B 48            [ 3]  233 	pha
   012C BD 02 01      [ 5]  234 	lda	0x102,x
   012F 48            [ 3]  235 	pha
   0130 BD 01 01      [ 5]  236 	lda	0x101,x
   0133 48            [ 3]  237 	pha
   0134 20r00r00      [ 6]  238 	jsr	_expf
   0137 86*00         [ 3]  239 	stx	*(__TEMP+0)
   0139 BA            [ 2]  240 	tsx
   013A 9D 05 01      [ 5]  241 	sta	0x105,x
   013D A6*00         [ 3]  242 	ldx	*(__TEMP+0)
   013F 8A            [ 2]  243 	txa
   0140 BA            [ 2]  244 	tsx
   0141 9D 06 01      [ 5]  245 	sta	0x106,x
   0144 A6*00         [ 3]  246 	ldx	*(__TEMP+0)
   0146 A5*00         [ 3]  247 	lda	*___SDCC_m6502_ret2
   0148 BA            [ 2]  248 	tsx
   0149 9D 07 01      [ 5]  249 	sta	0x107,x
   014C A5*00         [ 3]  250 	lda	*___SDCC_m6502_ret3
   014E 9D 08 01      [ 5]  251 	sta	0x108,x
   0151 85*00         [ 3]  252 	sta	*(__TEMP+0)
   0153 68            [ 4]  253 	pla
   0154 68            [ 4]  254 	pla
   0155 68            [ 4]  255 	pla
   0156 68            [ 4]  256 	pla
   0157 BD 08 01      [ 5]  257 	lda	0x108, x
   015A 85*00         [ 3]  258 	sta	*___SDCC_m6502_ret3
   015C BD 07 01      [ 5]  259 	lda	0x107,x
   015F 85*00         [ 3]  260 	sta	*___SDCC_m6502_ret2
   0161 BD 06 01      [ 5]  261 	lda	0x106,x
   0164 AA            [ 2]  262 	tax
   0165 86*00         [ 3]  263 	stx	*(__TEMP+0)
   0167 BA            [ 2]  264 	tsx
   0168 BD 01 01      [ 5]  265 	lda	0x101,x
   016B 08            [ 3]  266 	php
   016C A6*00         [ 3]  267 	ldx	*(__TEMP+0)
   016E 28            [ 4]  268 	plp
   016F                     269 00107$:
                            270 ;	../powf.c: 41: }
   016F 85*00         [ 3]  271 	sta	*(__TEMP+0)
   0171 68            [ 4]  272 	pla
   0172 68            [ 4]  273 	pla
   0173 68            [ 4]  274 	pla
   0174 68            [ 4]  275 	pla
   0175 A5*00         [ 3]  276 	lda	*(__TEMP+0)
   0177 60            [ 6]  277 	rts
                            278 	.area CODE
                            279 	.area RODATA
                            280 	.area XINIT
                            281 	.area CABS    (ABS)
