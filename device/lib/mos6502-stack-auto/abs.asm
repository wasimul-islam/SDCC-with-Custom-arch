;--------------------------------------------------------
; File Created by SDCC : free open source ISO C Compiler 
; Version 4.2.14 #0 (Linux)
;--------------------------------------------------------
	.module abs
	.optsdcc -mmos6502
	
;--------------------------------------------------------
; Public variables in this module
;--------------------------------------------------------
	.globl _abs
;--------------------------------------------------------
; ZP ram data
;--------------------------------------------------------
	.area ZP      (PAG)
;--------------------------------------------------------
; overlayable items in ram
;--------------------------------------------------------
;--------------------------------------------------------
; uninitialized external ram data
;--------------------------------------------------------
	.area BSS
;--------------------------------------------------------
; absolute external ram data
;--------------------------------------------------------
	.area DABS    (ABS)
;--------------------------------------------------------
; initialized external ram data
;--------------------------------------------------------
	.area DATA
;--------------------------------------------------------
; global & static initialisations
;--------------------------------------------------------
	.area _CODE
	.area GSINIT
	.area GSFINAL
	.area GSINIT
;--------------------------------------------------------
; Home
;--------------------------------------------------------
	.area _CODE
	.area _CODE
;--------------------------------------------------------
; code
;--------------------------------------------------------
	.area CODE
;------------------------------------------------------------
;Allocation info for local variables in function 'abs'
;------------------------------------------------------------
;j                         Allocated to registers a x 
;------------------------------------------------------------
;	../abs.c: 54: int abs(int j)
;	-----------------------------------------
;	 function abs
;	-----------------------------------------
;	Register assignment is optimal.
;	Stack space usage: 0 bytes.
_abs:
;	../abs.c: 56: return (j < 0) ? -j : j;
	sta	*(__TEMP+0)
	txa
	sec
	sbc	#0x00
	php
	lda	*(__TEMP+0)
	plp
	bvc	00110$
	bpl	00109$
	bmi	00103$
00110$:
	bmi	00109$
	rts
00109$:
	eor	#0xff
	clc
	adc	#0x01
	pha
	lda	#0x00
	stx	*(__TEMP+0)
	sbc	*(__TEMP+0)
	tax
	pla
;	../abs.c: 57: }
00103$:
	rts
	.area CODE
	.area RODATA
	.area XINIT
	.area CABS    (ABS)
