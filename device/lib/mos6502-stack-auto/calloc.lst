                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module calloc
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _memset
                             12 	.globl _malloc
                             13 	.globl _calloc
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; uninitialized external ram data
                             23 ;--------------------------------------------------------
                             24 	.area BSS
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area DABS    (ABS)
                             29 ;--------------------------------------------------------
                             30 ; initialized external ram data
                             31 ;--------------------------------------------------------
                             32 	.area DATA
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _CODE
                             37 	.area GSINIT
                             38 	.area GSFINAL
                             39 	.area GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 	.area _CODE
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area CODE
                             49 ;------------------------------------------------------------
                             50 ;Allocation info for local variables in function 'calloc'
                             51 ;------------------------------------------------------------
                             52 ;size                      Allocated to stack - sp +11
                             53 ;nmemb                     Allocated to registers a x 
                             54 ;ptr                       Allocated to stack - sp +5
                             55 ;msize                     Allocated to stack - sp +1
                             56 ;sloc0                     Allocated to stack - sp +5
                             57 ;sloc1                     Allocated to stack - sp +1
                             58 ;------------------------------------------------------------
                             59 ;	../calloc.c: 44: void *calloc (size_t nmemb, size_t size)
                             60 ;	-----------------------------------------
                             61 ;	 function calloc
                             62 ;	-----------------------------------------
                             63 ;	Register assignment is optimal.
                             64 ;	Stack space usage: 8 bytes.
   0000                      65 _calloc:
   0000 85*00         [ 3]   66 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   67 	stx	*(__TEMP+1)
   0004 BA            [ 2]   68 	tsx
   0005 8A            [ 2]   69 	txa
   0006 18            [ 2]   70 	clc
   0007 69 F8         [ 2]   71 	adc	#0xf8
   0009 AA            [ 2]   72 	tax
   000A 9A            [ 2]   73 	txs
   000B A6*01         [ 3]   74 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   75 	lda	*(__TEMP+0)
                             76 ;	../calloc.c: 49: unsigned long msize = (unsigned long)nmemb * (unsigned long)size;
   000F 48            [ 3]   77 	pha
   0010 8A            [ 2]   78 	txa
   0011 BA            [ 2]   79 	tsx
   0012 9D 07 01      [ 5]   80 	sta	0x107,x
   0015 68            [ 4]   81 	pla
   0016 9D 06 01      [ 5]   82 	sta	0x106,x
   0019 BD 07 01      [ 5]   83 	lda	0x107,x
   001C 48            [ 3]   84 	pha
   001D A9 00         [ 2]   85 	lda	#0x00
   001F 9D 08 01      [ 5]   86 	sta	0x108,x
   0022 A9 00         [ 2]   87 	lda	#0x00
   0024 9D 09 01      [ 5]   88 	sta	0x109,x
   0027 68            [ 4]   89 	pla
   0028 BD 0C 01      [ 5]   90 	lda	0x10c,x
   002B 9D 02 01      [ 5]   91 	sta	0x102,x
   002E BD 0D 01      [ 5]   92 	lda	0x10d,x
   0031 9D 03 01      [ 5]   93 	sta	0x103,x
   0034 A9 00         [ 2]   94 	lda	#0x00
   0036 9D 04 01      [ 5]   95 	sta	0x104,x
   0039 9D 05 01      [ 5]   96 	sta	0x105, x
   003C 48            [ 3]   97 	pha
   003D BD 04 01      [ 5]   98 	lda	0x104,x
   0040 48            [ 3]   99 	pha
   0041 BD 03 01      [ 5]  100 	lda	0x103,x
   0044 48            [ 3]  101 	pha
   0045 BD 02 01      [ 5]  102 	lda	0x102,x
   0048 48            [ 3]  103 	pha
   0049 BD 09 01      [ 5]  104 	lda	0x109,x
   004C 48            [ 3]  105 	pha
   004D BD 08 01      [ 5]  106 	lda	0x108,x
   0050 48            [ 3]  107 	pha
   0051 BD 07 01      [ 5]  108 	lda	0x107,x
   0054 48            [ 3]  109 	pha
   0055 BD 06 01      [ 5]  110 	lda	0x106,x
   0058 48            [ 3]  111 	pha
                            112 ;	../calloc.c: 54: if (msize > SIZE_MAX)
   0059 20r00r00      [ 6]  113 	jsr	__mullong
   005C 86*00         [ 3]  114 	stx	*(__TEMP+0)
   005E BA            [ 2]  115 	tsx
   005F 9D 09 01      [ 5]  116 	sta	0x109,x
   0062 A6*00         [ 3]  117 	ldx	*(__TEMP+0)
   0064 8A            [ 2]  118 	txa
   0065 BA            [ 2]  119 	tsx
   0066 9D 0A 01      [ 5]  120 	sta	0x10a,x
   0069 A6*00         [ 3]  121 	ldx	*(__TEMP+0)
   006B A5*00         [ 3]  122 	lda	*___SDCC_m6502_ret2
   006D BA            [ 2]  123 	tsx
   006E 9D 0B 01      [ 5]  124 	sta	0x10b,x
   0071 A5*00         [ 3]  125 	lda	*___SDCC_m6502_ret3
   0073 9D 0C 01      [ 5]  126 	sta	0x10c,x
   0076 85*00         [ 3]  127 	sta	*(__TEMP+0)
   0078 86*01         [ 3]  128 	stx	*(__TEMP+1)
   007A BA            [ 2]  129 	tsx
   007B 8A            [ 2]  130 	txa
   007C 18            [ 2]  131 	clc
   007D 69 08         [ 2]  132 	adc	#0x08
   007F AA            [ 2]  133 	tax
   0080 9A            [ 2]  134 	txs
   0081 BA            [ 2]  135 	tsx
   0082 A9 FF         [ 2]  136 	lda	#0xff
   0084 38            [ 2]  137 	sec
   0085 FD 01 01      [ 5]  138 	sbc	0x101,x
   0088 A9 FF         [ 2]  139 	lda	#0xff
   008A FD 02 01      [ 5]  140 	sbc	0x102,x
   008D A9 00         [ 2]  141 	lda	#0x00
   008F FD 03 01      [ 5]  142 	sbc	0x103,x
   0092 A9 00         [ 2]  143 	lda	#0x00
   0094 FD 04 01      [ 5]  144 	sbc	0x104,x
   0097 B0 06         [ 4]  145 	bcs	00102$
                            146 ;	../calloc.c: 55: return(0);
   0099 A9 00         [ 2]  147 	lda	#0x00
   009B AA            [ 2]  148 	tax
   009C 4Cr03r01      [ 3]  149 	jmp	00105$
   009F                     150 00102$:
                            151 ;	../calloc.c: 57: if (ptr = malloc(msize))
   009F BA            [ 2]  152 	tsx
   00A0 BD 01 01      [ 5]  153 	lda	0x101,x
   00A3 9D 01 01      [ 5]  154 	sta	0x101,x
   00A6 BD 02 01      [ 5]  155 	lda	0x102,x
   00A9 9D 02 01      [ 5]  156 	sta	0x102, x
   00AC AA            [ 2]  157 	tax
   00AD 86*00         [ 3]  158 	stx	*(__TEMP+0)
   00AF BA            [ 2]  159 	tsx
   00B0 BD 01 01      [ 5]  160 	lda	0x101,x
   00B3 08            [ 3]  161 	php
   00B4 A6*00         [ 3]  162 	ldx	*(__TEMP+0)
   00B6 28            [ 4]  163 	plp
   00B7 20r00r00      [ 6]  164 	jsr	_malloc
   00BA 48            [ 3]  165 	pha
   00BB 86*00         [ 3]  166 	stx	*(__TEMP+0)
   00BD 8A            [ 2]  167 	txa
   00BE BA            [ 2]  168 	tsx
   00BF 9D 07 01      [ 5]  169 	sta	0x107,x
   00C2 68            [ 4]  170 	pla
   00C3 9D 06 01      [ 5]  171 	sta	0x106,x
   00C6 A6*00         [ 3]  172 	ldx	*(__TEMP+0)
   00C8 C9 00         [ 2]  173 	cmp	#0x00
   00CA D0 02         [ 4]  174 	bne	00116$
   00CC E0 00         [ 2]  175 	cpx	#0x00
   00CE                     176 00116$:
   00CE F0 24         [ 4]  177 	beq	00104$
                            178 ;	../calloc.c: 58: memset(ptr, 0, msize);
   00D0 BA            [ 2]  179 	tsx
   00D1 BD 02 01      [ 5]  180 	lda	0x102,x
   00D4 48            [ 3]  181 	pha
   00D5 BD 01 01      [ 5]  182 	lda	0x101,x
   00D8 48            [ 3]  183 	pha
   00D9 A9 00         [ 2]  184 	lda	#0x00
   00DB 48            [ 3]  185 	pha
   00DC BD 06 01      [ 5]  186 	lda	0x106,x
   00DF AA            [ 2]  187 	tax
   00E0 86*00         [ 3]  188 	stx	*(__TEMP+0)
   00E2 BA            [ 2]  189 	tsx
   00E3 BD 08 01      [ 5]  190 	lda	0x108,x
   00E6 08            [ 3]  191 	php
   00E7 A6*00         [ 3]  192 	ldx	*(__TEMP+0)
   00E9 28            [ 4]  193 	plp
   00EA 20r00r00      [ 6]  194 	jsr	_memset
   00ED 85*00         [ 3]  195 	sta	*(__TEMP+0)
   00EF 68            [ 4]  196 	pla
   00F0 68            [ 4]  197 	pla
   00F1 68            [ 4]  198 	pla
   00F2 A5*00         [ 3]  199 	lda	*(__TEMP+0)
   00F4                     200 00104$:
                            201 ;	../calloc.c: 60: return(ptr);
   00F4 BA            [ 2]  202 	tsx
   00F5 BD 06 01      [ 5]  203 	lda	0x106,x
   00F8 AA            [ 2]  204 	tax
   00F9 86*00         [ 3]  205 	stx	*(__TEMP+0)
   00FB BA            [ 2]  206 	tsx
   00FC BD 05 01      [ 5]  207 	lda	0x105,x
   00FF 08            [ 3]  208 	php
   0100 A6*00         [ 3]  209 	ldx	*(__TEMP+0)
   0102 28            [ 4]  210 	plp
   0103                     211 00105$:
                            212 ;	../calloc.c: 61: }
   0103 85*00         [ 3]  213 	sta	*(__TEMP+0)
   0105 86*01         [ 3]  214 	stx	*(__TEMP+1)
   0107 BA            [ 2]  215 	tsx
   0108 8A            [ 2]  216 	txa
   0109 18            [ 2]  217 	clc
   010A 69 08         [ 2]  218 	adc	#0x08
   010C AA            [ 2]  219 	tax
   010D 9A            [ 2]  220 	txs
   010E A6*01         [ 3]  221 	ldx	*(__TEMP+1)
   0110 A5*00         [ 3]  222 	lda	*(__TEMP+0)
   0112 60            [ 6]  223 	rts
                            224 	.area CODE
                            225 	.area RODATA
                            226 	.area XINIT
                            227 	.area CABS    (ABS)
