                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wctomb
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wctomb_PARM_2
                                     12 	.globl _wctomb
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 _wctomb_sloc0_1_0:
      000000                         37 	.ds 3
      000003                         38 _wctomb_sloc1_1_0:
      000003                         39 	.ds 3
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
      000000                         61 _wctomb_PARM_2:
      000000                         62 	.ds 4
      000004                         63 _wctomb_s_65536_39:
      000004                         64 	.ds 3
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XABS    (ABS,XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; initialized external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XISEG   (XDATA)
                                     73 	.area HOME    (CODE)
                                     74 	.area GSINIT0 (CODE)
                                     75 	.area GSINIT1 (CODE)
                                     76 	.area GSINIT2 (CODE)
                                     77 	.area GSINIT3 (CODE)
                                     78 	.area GSINIT4 (CODE)
                                     79 	.area GSINIT5 (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area CSEG    (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'wctomb'
                                    101 ;------------------------------------------------------------
                                    102 ;wc                        Allocated with name '_wctomb_PARM_2'
                                    103 ;s                         Allocated with name '_wctomb_s_65536_39'
                                    104 ;sloc0                     Allocated with name '_wctomb_sloc0_1_0'
                                    105 ;sloc1                     Allocated with name '_wctomb_sloc1_1_0'
                                    106 ;------------------------------------------------------------
                                    107 ;	wctomb.c:31: int wctomb(char *s, wchar_t wc)
                                    108 ;	-----------------------------------------
                                    109 ;	 function wctomb
                                    110 ;	-----------------------------------------
      000000                        111 _wctomb:
                           000007   112 	ar7 = 0x07
                           000006   113 	ar6 = 0x06
                           000005   114 	ar5 = 0x05
                           000004   115 	ar4 = 0x04
                           000003   116 	ar3 = 0x03
                           000002   117 	ar2 = 0x02
                           000001   118 	ar1 = 0x01
                           000000   119 	ar0 = 0x00
      000000 AF F0            [24]  120 	mov	r7,b
      000002 AE 83            [24]  121 	mov	r6,dph
      000004 E5 82            [12]  122 	mov	a,dpl
      000006 90r00r04         [24]  123 	mov	dptr,#_wctomb_s_65536_39
      000009 F0               [24]  124 	movx	@dptr,a
      00000A EE               [12]  125 	mov	a,r6
      00000B A3               [24]  126 	inc	dptr
      00000C F0               [24]  127 	movx	@dptr,a
      00000D EF               [12]  128 	mov	a,r7
      00000E A3               [24]  129 	inc	dptr
      00000F F0               [24]  130 	movx	@dptr,a
                                    131 ;	wctomb.c:33: if(!s)
      000010 90r00r04         [24]  132 	mov	dptr,#_wctomb_s_65536_39
      000013 E0               [24]  133 	movx	a,@dptr
      000014 F5*00            [12]  134 	mov	_wctomb_sloc0_1_0,a
      000016 A3               [24]  135 	inc	dptr
      000017 E0               [24]  136 	movx	a,@dptr
      000018 F5*01            [12]  137 	mov	(_wctomb_sloc0_1_0 + 1),a
      00001A A3               [24]  138 	inc	dptr
      00001B E0               [24]  139 	movx	a,@dptr
      00001C F5*02            [12]  140 	mov	(_wctomb_sloc0_1_0 + 2),a
      00001E E5*00            [12]  141 	mov	a,_wctomb_sloc0_1_0
      000020 45*01            [12]  142 	orl	a,(_wctomb_sloc0_1_0 + 1)
      000022 70 04            [24]  143 	jnz	00102$
                                    144 ;	wctomb.c:34: return(0);
      000024 90 00 00         [24]  145 	mov	dptr,#0x0000
      000027 22               [24]  146 	ret
      000028                        147 00102$:
                                    148 ;	wctomb.c:36: if(wc < 0x80)
      000028 90r00r00         [24]  149 	mov	dptr,#_wctomb_PARM_2
      00002B E0               [24]  150 	movx	a,@dptr
      00002C F9               [12]  151 	mov	r1,a
      00002D A3               [24]  152 	inc	dptr
      00002E E0               [24]  153 	movx	a,@dptr
      00002F FA               [12]  154 	mov	r2,a
      000030 A3               [24]  155 	inc	dptr
      000031 E0               [24]  156 	movx	a,@dptr
      000032 FB               [12]  157 	mov	r3,a
      000033 A3               [24]  158 	inc	dptr
      000034 E0               [24]  159 	movx	a,@dptr
      000035 FC               [12]  160 	mov	r4,a
      000036 C3               [12]  161 	clr	c
      000037 E9               [12]  162 	mov	a,r1
      000038 94 80            [12]  163 	subb	a,#0x80
      00003A EA               [12]  164 	mov	a,r2
      00003B 94 00            [12]  165 	subb	a,#0x00
      00003D EB               [12]  166 	mov	a,r3
      00003E 94 00            [12]  167 	subb	a,#0x00
      000040 EC               [12]  168 	mov	a,r4
      000041 94 00            [12]  169 	subb	a,#0x00
      000043 50 13            [24]  170 	jnc	00117$
                                    171 ;	wctomb.c:38: s[0] = wc;
      000045 89 00            [24]  172 	mov	ar0,r1
      000047 85*00 82         [24]  173 	mov	dpl,_wctomb_sloc0_1_0
      00004A 85*01 83         [24]  174 	mov	dph,(_wctomb_sloc0_1_0 + 1)
      00004D 85*02 F0         [24]  175 	mov	b,(_wctomb_sloc0_1_0 + 2)
      000050 E8               [12]  176 	mov	a,r0
      000051 12r00r00         [24]  177 	lcall	__gptrput
                                    178 ;	wctomb.c:39: return(1);
      000054 90 00 01         [24]  179 	mov	dptr,#0x0001
      000057 22               [24]  180 	ret
      000058                        181 00117$:
                                    182 ;	wctomb.c:41: else if(wc < 0x800)
      000058 C3               [12]  183 	clr	c
      000059 EA               [12]  184 	mov	a,r2
      00005A 94 08            [12]  185 	subb	a,#0x08
      00005C EB               [12]  186 	mov	a,r3
      00005D 94 00            [12]  187 	subb	a,#0x00
      00005F EC               [12]  188 	mov	a,r4
      000060 94 00            [12]  189 	subb	a,#0x00
      000062 50 44            [24]  190 	jnc	00114$
                                    191 ;	wctomb.c:43: s[0] = (wc >> 6) & 0x1f | 0xc0;
      000064 89 00            [24]  192 	mov	ar0,r1
      000066 8A 07            [24]  193 	mov	ar7,r2
      000068 EF               [12]  194 	mov	a,r7
      000069 A2 E7            [12]  195 	mov	c,acc.7
      00006B C8               [12]  196 	xch	a,r0
      00006C 33               [12]  197 	rlc	a
      00006D C8               [12]  198 	xch	a,r0
      00006E 33               [12]  199 	rlc	a
      00006F A2 E7            [12]  200 	mov	c,acc.7
      000071 C8               [12]  201 	xch	a,r0
      000072 33               [12]  202 	rlc	a
      000073 C8               [12]  203 	xch	a,r0
      000074 33               [12]  204 	rlc	a
      000075 C8               [12]  205 	xch	a,r0
      000076 54 03            [12]  206 	anl	a,#0x03
      000078 74 1F            [12]  207 	mov	a,#0x1f
      00007A 58               [12]  208 	anl	a,r0
      00007B 44 C0            [12]  209 	orl	a,#0xc0
      00007D 85*00 82         [24]  210 	mov	dpl,_wctomb_sloc0_1_0
      000080 85*01 83         [24]  211 	mov	dph,(_wctomb_sloc0_1_0 + 1)
      000083 85*02 F0         [24]  212 	mov	b,(_wctomb_sloc0_1_0 + 2)
      000086 12r00r00         [24]  213 	lcall	__gptrput
                                    214 ;	wctomb.c:44: s[1] = (wc >> 0) & 0x3f | 0x80;
      000089 74 01            [12]  215 	mov	a,#0x01
      00008B 25*00            [12]  216 	add	a,_wctomb_sloc0_1_0
      00008D FD               [12]  217 	mov	r5,a
      00008E E4               [12]  218 	clr	a
      00008F 35*01            [12]  219 	addc	a,(_wctomb_sloc0_1_0 + 1)
      000091 FE               [12]  220 	mov	r6,a
      000092 AF*02            [24]  221 	mov	r7,(_wctomb_sloc0_1_0 + 2)
      000094 89 00            [24]  222 	mov	ar0,r1
      000096 74 3F            [12]  223 	mov	a,#0x3f
      000098 58               [12]  224 	anl	a,r0
      000099 44 80            [12]  225 	orl	a,#0x80
      00009B 8D 82            [24]  226 	mov	dpl,r5
      00009D 8E 83            [24]  227 	mov	dph,r6
      00009F 8F F0            [24]  228 	mov	b,r7
      0000A1 12r00r00         [24]  229 	lcall	__gptrput
                                    230 ;	wctomb.c:45: return(2);
      0000A4 90 00 02         [24]  231 	mov	dptr,#0x0002
      0000A7 22               [24]  232 	ret
      0000A8                        233 00114$:
                                    234 ;	wctomb.c:47: else if(wc >= 0xd800 && wc < 0xe000) // Unpaired surrogate
      0000A8 C3               [12]  235 	clr	c
      0000A9 EA               [12]  236 	mov	a,r2
      0000AA 94 D8            [12]  237 	subb	a,#0xd8
      0000AC EB               [12]  238 	mov	a,r3
      0000AD 94 00            [12]  239 	subb	a,#0x00
      0000AF EC               [12]  240 	mov	a,r4
      0000B0 94 00            [12]  241 	subb	a,#0x00
      0000B2 40 0F            [24]  242 	jc	00110$
      0000B4 EA               [12]  243 	mov	a,r2
      0000B5 94 E0            [12]  244 	subb	a,#0xe0
      0000B7 EB               [12]  245 	mov	a,r3
      0000B8 94 00            [12]  246 	subb	a,#0x00
      0000BA EC               [12]  247 	mov	a,r4
      0000BB 94 00            [12]  248 	subb	a,#0x00
      0000BD 50 04            [24]  249 	jnc	00110$
                                    250 ;	wctomb.c:48: return(-1);
      0000BF 90 FF FF         [24]  251 	mov	dptr,#0xffff
      0000C2 22               [24]  252 	ret
      0000C3                        253 00110$:
                                    254 ;	wctomb.c:49: else if(wc < 0x10000)
      0000C3 C3               [12]  255 	clr	c
      0000C4 EB               [12]  256 	mov	a,r3
      0000C5 94 01            [12]  257 	subb	a,#0x01
      0000C7 EC               [12]  258 	mov	a,r4
      0000C8 94 00            [12]  259 	subb	a,#0x00
      0000CA 40 03            [24]  260 	jc	00154$
      0000CC 02r01r59         [24]  261 	ljmp	00107$
      0000CF                        262 00154$:
                                    263 ;	wctomb.c:51: s[0] = (wc >> 12) & 0x0f | 0xe0;
      0000CF 90r00r04         [24]  264 	mov	dptr,#_wctomb_s_65536_39
      0000D2 E0               [24]  265 	movx	a,@dptr
      0000D3 F5*00            [12]  266 	mov	_wctomb_sloc0_1_0,a
      0000D5 A3               [24]  267 	inc	dptr
      0000D6 E0               [24]  268 	movx	a,@dptr
      0000D7 F5*01            [12]  269 	mov	(_wctomb_sloc0_1_0 + 1),a
      0000D9 A3               [24]  270 	inc	dptr
      0000DA E0               [24]  271 	movx	a,@dptr
      0000DB F5*02            [12]  272 	mov	(_wctomb_sloc0_1_0 + 2),a
      0000DD 8A 00            [24]  273 	mov	ar0,r2
      0000DF EB               [12]  274 	mov	a,r3
      0000E0 C4               [12]  275 	swap	a
      0000E1 C8               [12]  276 	xch	a,r0
      0000E2 C4               [12]  277 	swap	a
      0000E3 54 0F            [12]  278 	anl	a,#0x0f
      0000E5 68               [12]  279 	xrl	a,r0
      0000E6 C8               [12]  280 	xch	a,r0
      0000E7 54 0F            [12]  281 	anl	a,#0x0f
      0000E9 C8               [12]  282 	xch	a,r0
      0000EA 68               [12]  283 	xrl	a,r0
      0000EB C8               [12]  284 	xch	a,r0
      0000EC FD               [12]  285 	mov	r5,a
      0000ED EC               [12]  286 	mov	a,r4
      0000EE C4               [12]  287 	swap	a
      0000EF 54 F0            [12]  288 	anl	a,#0xf0
      0000F1 4D               [12]  289 	orl	a,r5
      0000F2 EC               [12]  290 	mov	a,r4
      0000F3 C4               [12]  291 	swap	a
      0000F4 54 0F            [12]  292 	anl	a,#0x0f
      0000F6 74 0F            [12]  293 	mov	a,#0x0f
      0000F8 58               [12]  294 	anl	a,r0
      0000F9 44 E0            [12]  295 	orl	a,#0xe0
      0000FB 85*00 82         [24]  296 	mov	dpl,_wctomb_sloc0_1_0
      0000FE 85*01 83         [24]  297 	mov	dph,(_wctomb_sloc0_1_0 + 1)
      000101 85*02 F0         [24]  298 	mov	b,(_wctomb_sloc0_1_0 + 2)
      000104 12r00r00         [24]  299 	lcall	__gptrput
                                    300 ;	wctomb.c:52: s[1] = (wc >> 6) & 0x3f  | 0x80;
      000107 74 01            [12]  301 	mov	a,#0x01
      000109 25*00            [12]  302 	add	a,_wctomb_sloc0_1_0
      00010B F5*03            [12]  303 	mov	_wctomb_sloc1_1_0,a
      00010D E4               [12]  304 	clr	a
      00010E 35*01            [12]  305 	addc	a,(_wctomb_sloc0_1_0 + 1)
      000110 F5*04            [12]  306 	mov	(_wctomb_sloc1_1_0 + 1),a
      000112 85*02*05         [24]  307 	mov	(_wctomb_sloc1_1_0 + 2),(_wctomb_sloc0_1_0 + 2)
      000115 89 00            [24]  308 	mov	ar0,r1
      000117 8A 07            [24]  309 	mov	ar7,r2
      000119 EF               [12]  310 	mov	a,r7
      00011A A2 E7            [12]  311 	mov	c,acc.7
      00011C C8               [12]  312 	xch	a,r0
      00011D 33               [12]  313 	rlc	a
      00011E C8               [12]  314 	xch	a,r0
      00011F 33               [12]  315 	rlc	a
      000120 A2 E7            [12]  316 	mov	c,acc.7
      000122 C8               [12]  317 	xch	a,r0
      000123 33               [12]  318 	rlc	a
      000124 C8               [12]  319 	xch	a,r0
      000125 33               [12]  320 	rlc	a
      000126 C8               [12]  321 	xch	a,r0
      000127 54 03            [12]  322 	anl	a,#0x03
      000129 74 3F            [12]  323 	mov	a,#0x3f
      00012B 58               [12]  324 	anl	a,r0
      00012C 44 80            [12]  325 	orl	a,#0x80
      00012E 85*03 82         [24]  326 	mov	dpl,_wctomb_sloc1_1_0
      000131 85*04 83         [24]  327 	mov	dph,(_wctomb_sloc1_1_0 + 1)
      000134 85*05 F0         [24]  328 	mov	b,(_wctomb_sloc1_1_0 + 2)
      000137 12r00r00         [24]  329 	lcall	__gptrput
                                    330 ;	wctomb.c:53: s[2] = (wc >> 0) & 0x3f  | 0x80;
      00013A 74 02            [12]  331 	mov	a,#0x02
      00013C 25*00            [12]  332 	add	a,_wctomb_sloc0_1_0
      00013E FD               [12]  333 	mov	r5,a
      00013F E4               [12]  334 	clr	a
      000140 35*01            [12]  335 	addc	a,(_wctomb_sloc0_1_0 + 1)
      000142 FE               [12]  336 	mov	r6,a
      000143 AF*02            [24]  337 	mov	r7,(_wctomb_sloc0_1_0 + 2)
      000145 89 00            [24]  338 	mov	ar0,r1
      000147 74 3F            [12]  339 	mov	a,#0x3f
      000149 58               [12]  340 	anl	a,r0
      00014A 44 80            [12]  341 	orl	a,#0x80
      00014C 8D 82            [24]  342 	mov	dpl,r5
      00014E 8E 83            [24]  343 	mov	dph,r6
      000150 8F F0            [24]  344 	mov	b,r7
      000152 12r00r00         [24]  345 	lcall	__gptrput
                                    346 ;	wctomb.c:54: return(3);
      000155 90 00 03         [24]  347 	mov	dptr,#0x0003
      000158 22               [24]  348 	ret
      000159                        349 00107$:
                                    350 ;	wctomb.c:56: else if(wc < 0x110000)
      000159 C3               [12]  351 	clr	c
      00015A EB               [12]  352 	mov	a,r3
      00015B 94 11            [12]  353 	subb	a,#0x11
      00015D EC               [12]  354 	mov	a,r4
      00015E 94 00            [12]  355 	subb	a,#0x00
      000160 40 03            [24]  356 	jc	00155$
      000162 02r02r1A         [24]  357 	ljmp	00104$
      000165                        358 00155$:
                                    359 ;	wctomb.c:58: s[0] = (wc >> 18) & 0x07 | 0xf0;
      000165 90r00r04         [24]  360 	mov	dptr,#_wctomb_s_65536_39
      000168 E0               [24]  361 	movx	a,@dptr
      000169 F5*03            [12]  362 	mov	_wctomb_sloc1_1_0,a
      00016B A3               [24]  363 	inc	dptr
      00016C E0               [24]  364 	movx	a,@dptr
      00016D F5*04            [12]  365 	mov	(_wctomb_sloc1_1_0 + 1),a
      00016F A3               [24]  366 	inc	dptr
      000170 E0               [24]  367 	movx	a,@dptr
      000171 F5*05            [12]  368 	mov	(_wctomb_sloc1_1_0 + 2),a
      000173 8B 00            [24]  369 	mov	ar0,r3
      000175 EC               [12]  370 	mov	a,r4
      000176 C3               [12]  371 	clr	c
      000177 13               [12]  372 	rrc	a
      000178 C8               [12]  373 	xch	a,r0
      000179 13               [12]  374 	rrc	a
      00017A C8               [12]  375 	xch	a,r0
      00017B C3               [12]  376 	clr	c
      00017C 13               [12]  377 	rrc	a
      00017D C8               [12]  378 	xch	a,r0
      00017E 13               [12]  379 	rrc	a
      00017F C8               [12]  380 	xch	a,r0
      000180 E4               [12]  381 	clr	a
      000181 74 07            [12]  382 	mov	a,#0x07
      000183 58               [12]  383 	anl	a,r0
      000184 44 F0            [12]  384 	orl	a,#0xf0
      000186 85*03 82         [24]  385 	mov	dpl,_wctomb_sloc1_1_0
      000189 85*04 83         [24]  386 	mov	dph,(_wctomb_sloc1_1_0 + 1)
      00018C 85*05 F0         [24]  387 	mov	b,(_wctomb_sloc1_1_0 + 2)
      00018F 12r00r00         [24]  388 	lcall	__gptrput
                                    389 ;	wctomb.c:59: s[1] = (wc >> 12) & 0x3f | 0x80;
      000192 74 01            [12]  390 	mov	a,#0x01
      000194 25*03            [12]  391 	add	a,_wctomb_sloc1_1_0
      000196 F5*00            [12]  392 	mov	_wctomb_sloc0_1_0,a
      000198 E4               [12]  393 	clr	a
      000199 35*04            [12]  394 	addc	a,(_wctomb_sloc1_1_0 + 1)
      00019B F5*01            [12]  395 	mov	(_wctomb_sloc0_1_0 + 1),a
      00019D 85*05*02         [24]  396 	mov	(_wctomb_sloc0_1_0 + 2),(_wctomb_sloc1_1_0 + 2)
      0001A0 8A 00            [24]  397 	mov	ar0,r2
      0001A2 EB               [12]  398 	mov	a,r3
      0001A3 C4               [12]  399 	swap	a
      0001A4 C8               [12]  400 	xch	a,r0
      0001A5 C4               [12]  401 	swap	a
      0001A6 54 0F            [12]  402 	anl	a,#0x0f
      0001A8 68               [12]  403 	xrl	a,r0
      0001A9 C8               [12]  404 	xch	a,r0
      0001AA 54 0F            [12]  405 	anl	a,#0x0f
      0001AC C8               [12]  406 	xch	a,r0
      0001AD 68               [12]  407 	xrl	a,r0
      0001AE C8               [12]  408 	xch	a,r0
      0001AF FD               [12]  409 	mov	r5,a
      0001B0 EC               [12]  410 	mov	a,r4
      0001B1 C4               [12]  411 	swap	a
      0001B2 54 F0            [12]  412 	anl	a,#0xf0
      0001B4 4D               [12]  413 	orl	a,r5
      0001B5 EC               [12]  414 	mov	a,r4
      0001B6 C4               [12]  415 	swap	a
      0001B7 54 0F            [12]  416 	anl	a,#0x0f
      0001B9 74 3F            [12]  417 	mov	a,#0x3f
      0001BB 58               [12]  418 	anl	a,r0
      0001BC 44 80            [12]  419 	orl	a,#0x80
      0001BE 85*00 82         [24]  420 	mov	dpl,_wctomb_sloc0_1_0
      0001C1 85*01 83         [24]  421 	mov	dph,(_wctomb_sloc0_1_0 + 1)
      0001C4 85*02 F0         [24]  422 	mov	b,(_wctomb_sloc0_1_0 + 2)
      0001C7 12r00r00         [24]  423 	lcall	__gptrput
                                    424 ;	wctomb.c:60: s[2] = (wc >> 6) & 0x3f  | 0x80;
      0001CA 74 02            [12]  425 	mov	a,#0x02
      0001CC 25*03            [12]  426 	add	a,_wctomb_sloc1_1_0
      0001CE F5*00            [12]  427 	mov	_wctomb_sloc0_1_0,a
      0001D0 E4               [12]  428 	clr	a
      0001D1 35*04            [12]  429 	addc	a,(_wctomb_sloc1_1_0 + 1)
      0001D3 F5*01            [12]  430 	mov	(_wctomb_sloc0_1_0 + 1),a
      0001D5 85*05*02         [24]  431 	mov	(_wctomb_sloc0_1_0 + 2),(_wctomb_sloc1_1_0 + 2)
      0001D8 89 00            [24]  432 	mov	ar0,r1
      0001DA 8A 07            [24]  433 	mov	ar7,r2
      0001DC EF               [12]  434 	mov	a,r7
      0001DD A2 E7            [12]  435 	mov	c,acc.7
      0001DF C8               [12]  436 	xch	a,r0
      0001E0 33               [12]  437 	rlc	a
      0001E1 C8               [12]  438 	xch	a,r0
      0001E2 33               [12]  439 	rlc	a
      0001E3 A2 E7            [12]  440 	mov	c,acc.7
      0001E5 C8               [12]  441 	xch	a,r0
      0001E6 33               [12]  442 	rlc	a
      0001E7 C8               [12]  443 	xch	a,r0
      0001E8 33               [12]  444 	rlc	a
      0001E9 C8               [12]  445 	xch	a,r0
      0001EA 54 03            [12]  446 	anl	a,#0x03
      0001EC 74 3F            [12]  447 	mov	a,#0x3f
      0001EE 58               [12]  448 	anl	a,r0
      0001EF 44 80            [12]  449 	orl	a,#0x80
      0001F1 85*00 82         [24]  450 	mov	dpl,_wctomb_sloc0_1_0
      0001F4 85*01 83         [24]  451 	mov	dph,(_wctomb_sloc0_1_0 + 1)
      0001F7 85*02 F0         [24]  452 	mov	b,(_wctomb_sloc0_1_0 + 2)
      0001FA 12r00r00         [24]  453 	lcall	__gptrput
                                    454 ;	wctomb.c:61: s[3] = (wc >> 0) & 0x3f  | 0x80;
      0001FD 74 03            [12]  455 	mov	a,#0x03
      0001FF 25*03            [12]  456 	add	a,_wctomb_sloc1_1_0
      000201 FD               [12]  457 	mov	r5,a
      000202 E4               [12]  458 	clr	a
      000203 35*04            [12]  459 	addc	a,(_wctomb_sloc1_1_0 + 1)
      000205 FE               [12]  460 	mov	r6,a
      000206 AF*05            [24]  461 	mov	r7,(_wctomb_sloc1_1_0 + 2)
      000208 74 3F            [12]  462 	mov	a,#0x3f
      00020A 59               [12]  463 	anl	a,r1
      00020B 44 80            [12]  464 	orl	a,#0x80
      00020D 8D 82            [24]  465 	mov	dpl,r5
      00020F 8E 83            [24]  466 	mov	dph,r6
      000211 8F F0            [24]  467 	mov	b,r7
      000213 12r00r00         [24]  468 	lcall	__gptrput
                                    469 ;	wctomb.c:62: return(4);
      000216 90 00 04         [24]  470 	mov	dptr,#0x0004
      000219 22               [24]  471 	ret
      00021A                        472 00104$:
                                    473 ;	wctomb.c:65: return(-1);
      00021A 90 FF FF         [24]  474 	mov	dptr,#0xffff
                                    475 ;	wctomb.c:66: }
      00021D 22               [24]  476 	ret
                                    477 	.area CSEG    (CODE)
                                    478 	.area CONST   (CODE)
                                    479 	.area XINIT   (CODE)
                                    480 	.area CABS    (ABS,CODE)
