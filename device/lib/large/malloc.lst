                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module malloc
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___sdcc_heap_init
                                     12 	.globl ___sdcc_heap_free
                                     13 	.globl _malloc
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
      000000                         33 _malloc_sloc0_1_0:
      000000                         34 	.ds 2
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; uninitialized external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
      000000                         59 ___sdcc_heap_free::
      000000                         60 	.ds 2
      000002                         61 _malloc_size_65536_42:
      000002                         62 	.ds 2
      000004                         63 _malloc_h_65536_43:
      000004                         64 	.ds 2
      000006                         65 _malloc_f_65536_43:
      000006                         66 	.ds 2
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; initialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function '__sdcc_heap_init'
                                    103 ;------------------------------------------------------------
                                    104 ;	malloc.c:65: void __sdcc_heap_init(void)
                                    105 ;	-----------------------------------------
                                    106 ;	 function __sdcc_heap_init
                                    107 ;	-----------------------------------------
      000000                        108 ___sdcc_heap_init:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
                                    117 ;	malloc.c:67: __sdcc_heap_free = HEAP_START;
      000000 90r00r00         [24]  118 	mov	dptr,#___sdcc_heap_free
      000003 74r00            [12]  119 	mov	a,#___sdcc_heap
      000005 F0               [24]  120 	movx	@dptr,a
      000006 74s00            [12]  121 	mov	a,#(___sdcc_heap >> 8)
      000008 A3               [24]  122 	inc	dptr
      000009 F0               [24]  123 	movx	@dptr,a
                                    124 ;	malloc.c:68: __sdcc_heap_free->next = HEAP_END;
      00000A 90r00r00         [24]  125 	mov	dptr,#___sdcc_heap_size
      00000D E4               [12]  126 	clr	a
      00000E 93               [24]  127 	movc	a,@a+dptr
      00000F FE               [12]  128 	mov	r6,a
      000010 74 01            [12]  129 	mov	a,#0x01
      000012 93               [24]  130 	movc	a,@a+dptr
      000013 FF               [12]  131 	mov	r7,a
      000014 1E               [12]  132 	dec	r6
      000015 BE FF 01         [24]  133 	cjne	r6,#0xff,00103$
      000018 1F               [12]  134 	dec	r7
      000019                        135 00103$:
      000019 EE               [12]  136 	mov	a,r6
      00001A 24r00            [12]  137 	add	a,#___sdcc_heap
      00001C FE               [12]  138 	mov	r6,a
      00001D EF               [12]  139 	mov	a,r7
      00001E 34s00            [12]  140 	addc	a,#(___sdcc_heap >> 8)
      000020 FF               [12]  141 	mov	r7,a
      000021 90r00r00         [24]  142 	mov	dptr,#___sdcc_heap
      000024 EE               [12]  143 	mov	a,r6
      000025 F0               [24]  144 	movx	@dptr,a
      000026 EF               [12]  145 	mov	a,r7
      000027 A3               [24]  146 	inc	dptr
      000028 F0               [24]  147 	movx	@dptr,a
                                    148 ;	malloc.c:69: __sdcc_heap_free->next_free = 0;
      000029 90r00r00         [24]  149 	mov	dptr,#___sdcc_heap_free
      00002C E0               [24]  150 	movx	a,@dptr
      00002D FE               [12]  151 	mov	r6,a
      00002E A3               [24]  152 	inc	dptr
      00002F E0               [24]  153 	movx	a,@dptr
      000030 FF               [12]  154 	mov	r7,a
      000031 8E 82            [24]  155 	mov	dpl,r6
      000033 8F 83            [24]  156 	mov	dph,r7
      000035 A3               [24]  157 	inc	dptr
      000036 A3               [24]  158 	inc	dptr
      000037 E4               [12]  159 	clr	a
      000038 F0               [24]  160 	movx	@dptr,a
      000039 A3               [24]  161 	inc	dptr
      00003A F0               [24]  162 	movx	@dptr,a
                                    163 ;	malloc.c:70: }
      00003B 22               [24]  164 	ret
                                    165 ;------------------------------------------------------------
                                    166 ;Allocation info for local variables in function 'malloc'
                                    167 ;------------------------------------------------------------
                                    168 ;sloc0                     Allocated with name '_malloc_sloc0_1_0'
                                    169 ;size                      Allocated with name '_malloc_size_65536_42'
                                    170 ;h                         Allocated with name '_malloc_h_65536_43'
                                    171 ;f                         Allocated with name '_malloc_f_65536_43'
                                    172 ;blocksize                 Allocated with name '_malloc_blocksize_196608_45'
                                    173 ;newheader                 Allocated with name '_malloc_newheader_327680_47'
                                    174 ;------------------------------------------------------------
                                    175 ;	malloc.c:73: void HEAPSPACE *malloc(size_t size)
                                    176 ;	-----------------------------------------
                                    177 ;	 function malloc
                                    178 ;	-----------------------------------------
      00003C                        179 _malloc:
      00003C AF 83            [24]  180 	mov	r7,dph
      00003E E5 82            [12]  181 	mov	a,dpl
      000040 90r00r02         [24]  182 	mov	dptr,#_malloc_size_65536_42
      000043 F0               [24]  183 	movx	@dptr,a
      000044 EF               [12]  184 	mov	a,r7
      000045 A3               [24]  185 	inc	dptr
      000046 F0               [24]  186 	movx	@dptr,a
                                    187 ;	malloc.c:82: if(!__sdcc_heap_free)
      000047 90r00r00         [24]  188 	mov	dptr,#___sdcc_heap_free
      00004A E0               [24]  189 	movx	a,@dptr
      00004B F5 F0            [12]  190 	mov	b,a
      00004D A3               [24]  191 	inc	dptr
      00004E E0               [24]  192 	movx	a,@dptr
      00004F 45 F0            [12]  193 	orl	a,b
      000051 70 03            [24]  194 	jnz	00102$
                                    195 ;	malloc.c:83: __sdcc_heap_init();
      000053 12r00r00         [24]  196 	lcall	___sdcc_heap_init
      000056                        197 00102$:
                                    198 ;	malloc.c:86: if(!size || size + offsetof(struct header, next_free) < size)
      000056 90r00r02         [24]  199 	mov	dptr,#_malloc_size_65536_42
      000059 E0               [24]  200 	movx	a,@dptr
      00005A FE               [12]  201 	mov	r6,a
      00005B A3               [24]  202 	inc	dptr
      00005C E0               [24]  203 	movx	a,@dptr
      00005D FF               [12]  204 	mov	r7,a
      00005E 4E               [12]  205 	orl	a,r6
      00005F 60 0E            [24]  206 	jz	00103$
      000061 74 02            [12]  207 	mov	a,#0x02
      000063 2E               [12]  208 	add	a,r6
      000064 FC               [12]  209 	mov	r4,a
      000065 E4               [12]  210 	clr	a
      000066 3F               [12]  211 	addc	a,r7
      000067 FD               [12]  212 	mov	r5,a
      000068 C3               [12]  213 	clr	c
      000069 EC               [12]  214 	mov	a,r4
      00006A 9E               [12]  215 	subb	a,r6
      00006B ED               [12]  216 	mov	a,r5
      00006C 9F               [12]  217 	subb	a,r7
      00006D 50 04            [24]  218 	jnc	00104$
      00006F                        219 00103$:
                                    220 ;	malloc.c:87: return(0);
      00006F 90 00 00         [24]  221 	mov	dptr,#0x0000
      000072 22               [24]  222 	ret
      000073                        223 00104$:
                                    224 ;	malloc.c:88: size += offsetof(struct header, next_free);
      000073 90r00r02         [24]  225 	mov	dptr,#_malloc_size_65536_42
      000076 74 02            [12]  226 	mov	a,#0x02
      000078 2E               [12]  227 	add	a,r6
      000079 F0               [24]  228 	movx	@dptr,a
      00007A E4               [12]  229 	clr	a
      00007B 3F               [12]  230 	addc	a,r7
      00007C A3               [24]  231 	inc	dptr
      00007D F0               [24]  232 	movx	@dptr,a
                                    233 ;	malloc.c:89: if(size < sizeof(struct header)) // Requiring a minimum size makes it easier to implement free(), and avoid memory leaks.
      00007E 90r00r02         [24]  234 	mov	dptr,#_malloc_size_65536_42
      000081 E0               [24]  235 	movx	a,@dptr
      000082 FE               [12]  236 	mov	r6,a
      000083 A3               [24]  237 	inc	dptr
      000084 E0               [24]  238 	movx	a,@dptr
      000085 FF               [12]  239 	mov	r7,a
      000086 C3               [12]  240 	clr	c
      000087 EE               [12]  241 	mov	a,r6
      000088 94 04            [12]  242 	subb	a,#0x04
      00008A EF               [12]  243 	mov	a,r7
      00008B 94 00            [12]  244 	subb	a,#0x00
      00008D 50 09            [24]  245 	jnc	00107$
                                    246 ;	malloc.c:90: size = sizeof(struct header);
      00008F 90r00r02         [24]  247 	mov	dptr,#_malloc_size_65536_42
      000092 74 04            [12]  248 	mov	a,#0x04
      000094 F0               [24]  249 	movx	@dptr,a
      000095 E4               [12]  250 	clr	a
      000096 A3               [24]  251 	inc	dptr
      000097 F0               [24]  252 	movx	@dptr,a
      000098                        253 00107$:
                                    254 ;	malloc.c:92: for(h = __sdcc_heap_free, f = &__sdcc_heap_free; h; f = &(h->next_free), h = h->next_free)
      000098 90r00r00         [24]  255 	mov	dptr,#___sdcc_heap_free
      00009B E0               [24]  256 	movx	a,@dptr
      00009C FE               [12]  257 	mov	r6,a
      00009D A3               [24]  258 	inc	dptr
      00009E E0               [24]  259 	movx	a,@dptr
      00009F FF               [12]  260 	mov	r7,a
      0000A0 90r00r04         [24]  261 	mov	dptr,#_malloc_h_65536_43
      0000A3 EE               [12]  262 	mov	a,r6
      0000A4 F0               [24]  263 	movx	@dptr,a
      0000A5 EF               [12]  264 	mov	a,r7
      0000A6 A3               [24]  265 	inc	dptr
      0000A7 F0               [24]  266 	movx	@dptr,a
      0000A8 90r00r06         [24]  267 	mov	dptr,#_malloc_f_65536_43
      0000AB 74r00            [12]  268 	mov	a,#___sdcc_heap_free
      0000AD F0               [24]  269 	movx	@dptr,a
      0000AE 74s00            [12]  270 	mov	a,#(___sdcc_heap_free >> 8)
      0000B0 A3               [24]  271 	inc	dptr
      0000B1 F0               [24]  272 	movx	@dptr,a
      0000B2                        273 00115$:
      0000B2 90r00r04         [24]  274 	mov	dptr,#_malloc_h_65536_43
      0000B5 E0               [24]  275 	movx	a,@dptr
      0000B6 FE               [12]  276 	mov	r6,a
      0000B7 A3               [24]  277 	inc	dptr
      0000B8 E0               [24]  278 	movx	a,@dptr
      0000B9 FF               [12]  279 	mov	r7,a
      0000BA 4E               [12]  280 	orl	a,r6
      0000BB 70 03            [24]  281 	jnz	00151$
      0000BD 02r01rA1         [24]  282 	ljmp	00113$
      0000C0                        283 00151$:
                                    284 ;	malloc.c:94: size_t blocksize = (char HEAPSPACE *)(h->next) - (char HEAPSPACE *)h;
      0000C0 8E 82            [24]  285 	mov	dpl,r6
      0000C2 8F 83            [24]  286 	mov	dph,r7
      0000C4 E0               [24]  287 	movx	a,@dptr
      0000C5 FC               [12]  288 	mov	r4,a
      0000C6 A3               [24]  289 	inc	dptr
      0000C7 E0               [24]  290 	movx	a,@dptr
      0000C8 FD               [12]  291 	mov	r5,a
      0000C9 8C 02            [24]  292 	mov	ar2,r4
      0000CB 8D 03            [24]  293 	mov	ar3,r5
      0000CD 8E 00            [24]  294 	mov	ar0,r6
      0000CF 8F 01            [24]  295 	mov	ar1,r7
      0000D1 EA               [12]  296 	mov	a,r2
      0000D2 C3               [12]  297 	clr	c
      0000D3 98               [12]  298 	subb	a,r0
      0000D4 FA               [12]  299 	mov	r2,a
      0000D5 EB               [12]  300 	mov	a,r3
      0000D6 99               [12]  301 	subb	a,r1
      0000D7 FB               [12]  302 	mov	r3,a
                                    303 ;	malloc.c:95: if(blocksize >= size) // Found free block of sufficient size.
      0000D8 8A 00            [24]  304 	mov	ar0,r2
      0000DA 8B 01            [24]  305 	mov	ar1,r3
      0000DC 90r00r02         [24]  306 	mov	dptr,#_malloc_size_65536_42
      0000DF E0               [24]  307 	movx	a,@dptr
      0000E0 F5*00            [12]  308 	mov	_malloc_sloc0_1_0,a
      0000E2 A3               [24]  309 	inc	dptr
      0000E3 E0               [24]  310 	movx	a,@dptr
      0000E4 F5*01            [12]  311 	mov	(_malloc_sloc0_1_0 + 1),a
      0000E6 C3               [12]  312 	clr	c
      0000E7 E8               [12]  313 	mov	a,r0
      0000E8 95*00            [12]  314 	subb	a,_malloc_sloc0_1_0
      0000EA E9               [12]  315 	mov	a,r1
      0000EB 95*01            [12]  316 	subb	a,(_malloc_sloc0_1_0 + 1)
      0000ED 50 03            [24]  317 	jnc	00152$
      0000EF 02r01r7E         [24]  318 	ljmp	00116$
      0000F2                        319 00152$:
                                    320 ;	malloc.c:97: if(blocksize >= size + sizeof(struct header)) // It is worth creating a new free block
      0000F2 74 04            [12]  321 	mov	a,#0x04
      0000F4 25*00            [12]  322 	add	a,_malloc_sloc0_1_0
      0000F6 F8               [12]  323 	mov	r0,a
      0000F7 E4               [12]  324 	clr	a
      0000F8 35*01            [12]  325 	addc	a,(_malloc_sloc0_1_0 + 1)
      0000FA F9               [12]  326 	mov	r1,a
      0000FB C3               [12]  327 	clr	c
      0000FC EA               [12]  328 	mov	a,r2
      0000FD 98               [12]  329 	subb	a,r0
      0000FE EB               [12]  330 	mov	a,r3
      0000FF 99               [12]  331 	subb	a,r1
      000100 40 4C            [24]  332 	jc	00109$
                                    333 ;	malloc.c:99: header_t *const newheader = (header_t *const)((char HEAPSPACE *)h + size);
      000102 8E 02            [24]  334 	mov	ar2,r6
      000104 8F 03            [24]  335 	mov	ar3,r7
      000106 E5*00            [12]  336 	mov	a,_malloc_sloc0_1_0
      000108 2A               [12]  337 	add	a,r2
      000109 FA               [12]  338 	mov	r2,a
      00010A E5*01            [12]  339 	mov	a,(_malloc_sloc0_1_0 + 1)
      00010C 3B               [12]  340 	addc	a,r3
      00010D FB               [12]  341 	mov	r3,a
                                    342 ;	malloc.c:100: newheader->next = h->next;
      00010E 8A 82            [24]  343 	mov	dpl,r2
      000110 8B 83            [24]  344 	mov	dph,r3
      000112 EC               [12]  345 	mov	a,r4
      000113 F0               [24]  346 	movx	@dptr,a
      000114 ED               [12]  347 	mov	a,r5
      000115 A3               [24]  348 	inc	dptr
      000116 F0               [24]  349 	movx	@dptr,a
                                    350 ;	malloc.c:101: newheader->next_free = h->next_free;
      000117 74 02            [12]  351 	mov	a,#0x02
      000119 2A               [12]  352 	add	a,r2
      00011A FC               [12]  353 	mov	r4,a
      00011B E4               [12]  354 	clr	a
      00011C 3B               [12]  355 	addc	a,r3
      00011D FD               [12]  356 	mov	r5,a
      00011E 8E 82            [24]  357 	mov	dpl,r6
      000120 8F 83            [24]  358 	mov	dph,r7
      000122 A3               [24]  359 	inc	dptr
      000123 A3               [24]  360 	inc	dptr
      000124 E0               [24]  361 	movx	a,@dptr
      000125 F8               [12]  362 	mov	r0,a
      000126 A3               [24]  363 	inc	dptr
      000127 E0               [24]  364 	movx	a,@dptr
      000128 F9               [12]  365 	mov	r1,a
      000129 8C 82            [24]  366 	mov	dpl,r4
      00012B 8D 83            [24]  367 	mov	dph,r5
      00012D E8               [12]  368 	mov	a,r0
      00012E F0               [24]  369 	movx	@dptr,a
      00012F E9               [12]  370 	mov	a,r1
      000130 A3               [24]  371 	inc	dptr
      000131 F0               [24]  372 	movx	@dptr,a
                                    373 ;	malloc.c:102: *f = newheader;
      000132 90r00r06         [24]  374 	mov	dptr,#_malloc_f_65536_43
      000135 E0               [24]  375 	movx	a,@dptr
      000136 FC               [12]  376 	mov	r4,a
      000137 A3               [24]  377 	inc	dptr
      000138 E0               [24]  378 	movx	a,@dptr
      000139 FD               [12]  379 	mov	r5,a
      00013A 8C 82            [24]  380 	mov	dpl,r4
      00013C 8D 83            [24]  381 	mov	dph,r5
      00013E EA               [12]  382 	mov	a,r2
      00013F F0               [24]  383 	movx	@dptr,a
      000140 EB               [12]  384 	mov	a,r3
      000141 A3               [24]  385 	inc	dptr
      000142 F0               [24]  386 	movx	@dptr,a
                                    387 ;	malloc.c:103: h->next = newheader;
      000143 8E 82            [24]  388 	mov	dpl,r6
      000145 8F 83            [24]  389 	mov	dph,r7
      000147 EA               [12]  390 	mov	a,r2
      000148 F0               [24]  391 	movx	@dptr,a
      000149 EB               [12]  392 	mov	a,r3
      00014A A3               [24]  393 	inc	dptr
      00014B F0               [24]  394 	movx	@dptr,a
      00014C 80 1C            [24]  395 	sjmp	00110$
      00014E                        396 00109$:
                                    397 ;	malloc.c:106: *f = h->next_free;
      00014E 90r00r06         [24]  398 	mov	dptr,#_malloc_f_65536_43
      000151 E0               [24]  399 	movx	a,@dptr
      000152 FC               [12]  400 	mov	r4,a
      000153 A3               [24]  401 	inc	dptr
      000154 E0               [24]  402 	movx	a,@dptr
      000155 FD               [12]  403 	mov	r5,a
      000156 8E 82            [24]  404 	mov	dpl,r6
      000158 8F 83            [24]  405 	mov	dph,r7
      00015A A3               [24]  406 	inc	dptr
      00015B A3               [24]  407 	inc	dptr
      00015C E0               [24]  408 	movx	a,@dptr
      00015D FA               [12]  409 	mov	r2,a
      00015E A3               [24]  410 	inc	dptr
      00015F E0               [24]  411 	movx	a,@dptr
      000160 FB               [12]  412 	mov	r3,a
      000161 8C 82            [24]  413 	mov	dpl,r4
      000163 8D 83            [24]  414 	mov	dph,r5
      000165 EA               [12]  415 	mov	a,r2
      000166 F0               [24]  416 	movx	@dptr,a
      000167 EB               [12]  417 	mov	a,r3
      000168 A3               [24]  418 	inc	dptr
      000169 F0               [24]  419 	movx	@dptr,a
      00016A                        420 00110$:
                                    421 ;	malloc.c:108: return(&(h->next_free));
      00016A 90r00r04         [24]  422 	mov	dptr,#_malloc_h_65536_43
      00016D E0               [24]  423 	movx	a,@dptr
      00016E FC               [12]  424 	mov	r4,a
      00016F A3               [24]  425 	inc	dptr
      000170 E0               [24]  426 	movx	a,@dptr
      000171 FD               [12]  427 	mov	r5,a
      000172 74 02            [12]  428 	mov	a,#0x02
      000174 2C               [12]  429 	add	a,r4
      000175 FC               [12]  430 	mov	r4,a
      000176 E4               [12]  431 	clr	a
      000177 3D               [12]  432 	addc	a,r5
      000178 FD               [12]  433 	mov	r5,a
      000179 8C 82            [24]  434 	mov	dpl,r4
      00017B 8D 83            [24]  435 	mov	dph,r5
      00017D 22               [24]  436 	ret
      00017E                        437 00116$:
                                    438 ;	malloc.c:92: for(h = __sdcc_heap_free, f = &__sdcc_heap_free; h; f = &(h->next_free), h = h->next_free)
      00017E 74 02            [12]  439 	mov	a,#0x02
      000180 2E               [12]  440 	add	a,r6
      000181 FE               [12]  441 	mov	r6,a
      000182 E4               [12]  442 	clr	a
      000183 3F               [12]  443 	addc	a,r7
      000184 FF               [12]  444 	mov	r7,a
      000185 90r00r06         [24]  445 	mov	dptr,#_malloc_f_65536_43
      000188 EE               [12]  446 	mov	a,r6
      000189 F0               [24]  447 	movx	@dptr,a
      00018A EF               [12]  448 	mov	a,r7
      00018B A3               [24]  449 	inc	dptr
      00018C F0               [24]  450 	movx	@dptr,a
      00018D 8E 82            [24]  451 	mov	dpl,r6
      00018F 8F 83            [24]  452 	mov	dph,r7
      000191 E0               [24]  453 	movx	a,@dptr
      000192 FE               [12]  454 	mov	r6,a
      000193 A3               [24]  455 	inc	dptr
      000194 E0               [24]  456 	movx	a,@dptr
      000195 FF               [12]  457 	mov	r7,a
      000196 90r00r04         [24]  458 	mov	dptr,#_malloc_h_65536_43
      000199 EE               [12]  459 	mov	a,r6
      00019A F0               [24]  460 	movx	@dptr,a
      00019B EF               [12]  461 	mov	a,r7
      00019C A3               [24]  462 	inc	dptr
      00019D F0               [24]  463 	movx	@dptr,a
      00019E 02r00rB2         [24]  464 	ljmp	00115$
      0001A1                        465 00113$:
                                    466 ;	malloc.c:112: return(0);
      0001A1 90 00 00         [24]  467 	mov	dptr,#0x0000
                                    468 ;	malloc.c:113: }
      0001A4 22               [24]  469 	ret
                                    470 	.area CSEG    (CODE)
                                    471 	.area CONST   (CODE)
                                    472 	.area XINIT   (CODE)
                                    473 	.area CABS    (ABS,CODE)
