                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module memccpy
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memccpy_PARM_4
                                     12 	.globl _memccpy_PARM_3
                                     13 	.globl _memccpy_PARM_2
                                     14 	.globl _memccpy
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 	.area	OSEG    (OVR,DATA)
      000000                         38 _memccpy_sloc0_1_0:
      000000                         39 	.ds 2
      000002                         40 _memccpy_sloc1_1_0:
      000002                         41 	.ds 2
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; uninitialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
      000000                         63 _memccpy_PARM_2:
      000000                         64 	.ds 3
      000003                         65 _memccpy_PARM_3:
      000003                         66 	.ds 2
      000005                         67 _memccpy_PARM_4:
      000005                         68 	.ds 2
      000007                         69 _memccpy_dst_65536_26:
      000007                         70 	.ds 3
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XABS    (ABS,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; initialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XISEG   (XDATA)
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'memccpy'
                                    107 ;------------------------------------------------------------
                                    108 ;src                       Allocated with name '_memccpy_PARM_2'
                                    109 ;c                         Allocated with name '_memccpy_PARM_3'
                                    110 ;n                         Allocated with name '_memccpy_PARM_4'
                                    111 ;dst                       Allocated with name '_memccpy_dst_65536_26'
                                    112 ;d                         Allocated with name '_memccpy_d_65536_27'
                                    113 ;s                         Allocated with name '_memccpy_s_65536_27'
                                    114 ;sloc0                     Allocated with name '_memccpy_sloc0_1_0'
                                    115 ;sloc1                     Allocated with name '_memccpy_sloc1_1_0'
                                    116 ;------------------------------------------------------------
                                    117 ;	memccpy.c:31: void *memccpy (void *restrict dst, const void *restrict src, int c, size_t n)
                                    118 ;	-----------------------------------------
                                    119 ;	 function memccpy
                                    120 ;	-----------------------------------------
      000000                        121 _memccpy:
                           000007   122 	ar7 = 0x07
                           000006   123 	ar6 = 0x06
                           000005   124 	ar5 = 0x05
                           000004   125 	ar4 = 0x04
                           000003   126 	ar3 = 0x03
                           000002   127 	ar2 = 0x02
                           000001   128 	ar1 = 0x01
                           000000   129 	ar0 = 0x00
      000000 AF F0            [24]  130 	mov	r7,b
      000002 AE 83            [24]  131 	mov	r6,dph
      000004 E5 82            [12]  132 	mov	a,dpl
      000006 90r00r07         [24]  133 	mov	dptr,#_memccpy_dst_65536_26
      000009 F0               [24]  134 	movx	@dptr,a
      00000A EE               [12]  135 	mov	a,r6
      00000B A3               [24]  136 	inc	dptr
      00000C F0               [24]  137 	movx	@dptr,a
      00000D EF               [12]  138 	mov	a,r7
      00000E A3               [24]  139 	inc	dptr
      00000F F0               [24]  140 	movx	@dptr,a
                                    141 ;	memccpy.c:33: char *d = dst;
      000010 90r00r07         [24]  142 	mov	dptr,#_memccpy_dst_65536_26
      000013 E0               [24]  143 	movx	a,@dptr
      000014 FD               [12]  144 	mov	r5,a
      000015 A3               [24]  145 	inc	dptr
      000016 E0               [24]  146 	movx	a,@dptr
      000017 FE               [12]  147 	mov	r6,a
      000018 A3               [24]  148 	inc	dptr
      000019 E0               [24]  149 	movx	a,@dptr
      00001A FF               [12]  150 	mov	r7,a
                                    151 ;	memccpy.c:34: const char *s = src;
      00001B 90r00r00         [24]  152 	mov	dptr,#_memccpy_PARM_2
      00001E E0               [24]  153 	movx	a,@dptr
      00001F FA               [12]  154 	mov	r2,a
      000020 A3               [24]  155 	inc	dptr
      000021 E0               [24]  156 	movx	a,@dptr
      000022 FB               [12]  157 	mov	r3,a
      000023 A3               [24]  158 	inc	dptr
      000024 E0               [24]  159 	movx	a,@dptr
      000025 FC               [12]  160 	mov	r4,a
                                    161 ;	memccpy.c:36: while (n--)
      000026 90r00r03         [24]  162 	mov	dptr,#_memccpy_PARM_3
      000029 E0               [24]  163 	movx	a,@dptr
      00002A F5*02            [12]  164 	mov	_memccpy_sloc1_1_0,a
      00002C A3               [24]  165 	inc	dptr
      00002D E0               [24]  166 	movx	a,@dptr
      00002E F5*03            [12]  167 	mov	(_memccpy_sloc1_1_0 + 1),a
      000030 90r00r05         [24]  168 	mov	dptr,#_memccpy_PARM_4
      000033 E0               [24]  169 	movx	a,@dptr
      000034 F5*00            [12]  170 	mov	_memccpy_sloc0_1_0,a
      000036 A3               [24]  171 	inc	dptr
      000037 E0               [24]  172 	movx	a,@dptr
      000038 F5*01            [12]  173 	mov	(_memccpy_sloc0_1_0 + 1),a
      00003A                        174 00103$:
      00003A A8*00            [24]  175 	mov	r0,_memccpy_sloc0_1_0
      00003C A9*01            [24]  176 	mov	r1,(_memccpy_sloc0_1_0 + 1)
      00003E 15*00            [12]  177 	dec	_memccpy_sloc0_1_0
      000040 74 FF            [12]  178 	mov	a,#0xff
      000042 B5*00 02         [24]  179 	cjne	a,_memccpy_sloc0_1_0,00120$
      000045 15*01            [12]  180 	dec	(_memccpy_sloc0_1_0 + 1)
      000047                        181 00120$:
      000047 E8               [12]  182 	mov	a,r0
      000048 49               [12]  183 	orl	a,r1
      000049 60 2B            [24]  184 	jz	00105$
                                    185 ;	memccpy.c:37: if ((*d++ = *s++) == (unsigned char)c)
      00004B 8A 82            [24]  186 	mov	dpl,r2
      00004D 8B 83            [24]  187 	mov	dph,r3
      00004F 8C F0            [24]  188 	mov	b,r4
      000051 12r00r00         [24]  189 	lcall	__gptrget
      000054 F9               [12]  190 	mov	r1,a
      000055 A3               [24]  191 	inc	dptr
      000056 AA 82            [24]  192 	mov	r2,dpl
      000058 AB 83            [24]  193 	mov	r3,dph
      00005A 8D 82            [24]  194 	mov	dpl,r5
      00005C 8E 83            [24]  195 	mov	dph,r6
      00005E 8F F0            [24]  196 	mov	b,r7
      000060 E9               [12]  197 	mov	a,r1
      000061 12r00r00         [24]  198 	lcall	__gptrput
      000064 A3               [24]  199 	inc	dptr
      000065 AD 82            [24]  200 	mov	r5,dpl
      000067 AE 83            [24]  201 	mov	r6,dph
      000069 A8*02            [24]  202 	mov	r0,_memccpy_sloc1_1_0
      00006B E9               [12]  203 	mov	a,r1
      00006C B5 00 CB         [24]  204 	cjne	a,ar0,00103$
                                    205 ;	memccpy.c:38: return (d);
      00006F 8D 82            [24]  206 	mov	dpl,r5
      000071 8E 83            [24]  207 	mov	dph,r6
      000073 8F F0            [24]  208 	mov	b,r7
      000075 22               [24]  209 	ret
      000076                        210 00105$:
                                    211 ;	memccpy.c:40: return (0);
      000076 90 00 00         [24]  212 	mov	dptr,#0x0000
      000079 75 F0 00         [24]  213 	mov	b,#0x00
                                    214 ;	memccpy.c:41: }
      00007C 22               [24]  215 	ret
                                    216 	.area CSEG    (CODE)
                                    217 	.area CONST   (CODE)
                                    218 	.area XINIT   (CODE)
                                    219 	.area CABS    (ABS,CODE)
