                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module qsort
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _qsort_PARM_4
                                     12 	.globl _qsort_PARM_3
                                     13 	.globl _qsort_PARM_2
                                     14 	.globl _qsort
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _qsort_sloc0_1_0:
      000000                         35 	.ds 2
      000002                         36 _qsort_sloc1_1_0:
      000002                         37 	.ds 3
      000005                         38 _qsort_sloc2_1_0:
      000005                         39 	.ds 3
      000008                         40 _qsort_sloc3_1_0:
      000008                         41 	.ds 3
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable items in internal ram
                                     44 ;--------------------------------------------------------
                                     45 	.area	OSEG    (OVR,DATA)
      000000                         46 _swap_sloc0_1_0:
      000000                         47 	.ds 2
                                     48 ;--------------------------------------------------------
                                     49 ; indirectly addressable internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area ISEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; absolute internal ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area IABS    (ABS,DATA)
                                     56 	.area IABS    (ABS,DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; bit data
                                     59 ;--------------------------------------------------------
                                     60 	.area BSEG    (BIT)
                                     61 ;--------------------------------------------------------
                                     62 ; paged external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area PSEG    (PAG,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; uninitialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XSEG    (XDATA)
      000000                         69 _swap_PARM_2:
      000000                         70 	.ds 3
      000003                         71 _swap_PARM_3:
      000003                         72 	.ds 2
      000005                         73 _swap_dst_65536_39:
      000005                         74 	.ds 3
      000008                         75 _qsort_PARM_2:
      000008                         76 	.ds 2
      00000A                         77 _qsort_PARM_3:
      00000A                         78 	.ds 2
      00000C                         79 _qsort_PARM_4:
      00000C                         80 	.ds 2
      00000E                         81 _qsort_base_65536_42:
      00000E                         82 	.ds 3
      000011                         83 _qsort_i_131072_45:
      000011                         84 	.ds 3
      000014                         85 _qsort_j_262144_47:
      000014                         86 	.ds 3
                                     87 ;--------------------------------------------------------
                                     88 ; absolute external ram data
                                     89 ;--------------------------------------------------------
                                     90 	.area XABS    (ABS,XDATA)
                                     91 ;--------------------------------------------------------
                                     92 ; initialized external ram data
                                     93 ;--------------------------------------------------------
                                     94 	.area XISEG   (XDATA)
                                     95 	.area HOME    (CODE)
                                     96 	.area GSINIT0 (CODE)
                                     97 	.area GSINIT1 (CODE)
                                     98 	.area GSINIT2 (CODE)
                                     99 	.area GSINIT3 (CODE)
                                    100 	.area GSINIT4 (CODE)
                                    101 	.area GSINIT5 (CODE)
                                    102 	.area GSINIT  (CODE)
                                    103 	.area GSFINAL (CODE)
                                    104 	.area CSEG    (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; global & static initialisations
                                    107 ;--------------------------------------------------------
                                    108 	.area HOME    (CODE)
                                    109 	.area GSINIT  (CODE)
                                    110 	.area GSFINAL (CODE)
                                    111 	.area GSINIT  (CODE)
                                    112 ;--------------------------------------------------------
                                    113 ; Home
                                    114 ;--------------------------------------------------------
                                    115 	.area HOME    (CODE)
                                    116 	.area HOME    (CODE)
                                    117 ;--------------------------------------------------------
                                    118 ; code
                                    119 ;--------------------------------------------------------
                                    120 	.area CSEG    (CODE)
                                    121 ;------------------------------------------------------------
                                    122 ;Allocation info for local variables in function 'swap'
                                    123 ;------------------------------------------------------------
                                    124 ;src                       Allocated with name '_swap_PARM_2'
                                    125 ;n                         Allocated with name '_swap_PARM_3'
                                    126 ;dst                       Allocated with name '_swap_dst_65536_39'
                                    127 ;d                         Allocated with name '_swap_d_65536_40'
                                    128 ;s                         Allocated with name '_swap_s_65536_40'
                                    129 ;tmp                       Allocated with name '_swap_tmp_131072_41'
                                    130 ;sloc0                     Allocated with name '_swap_sloc0_1_0'
                                    131 ;------------------------------------------------------------
                                    132 ;	qsort.c:33: static void swap(void *restrict dst, void *restrict src, size_t n)
                                    133 ;	-----------------------------------------
                                    134 ;	 function swap
                                    135 ;	-----------------------------------------
      000000                        136 _swap:
                           000007   137 	ar7 = 0x07
                           000006   138 	ar6 = 0x06
                           000005   139 	ar5 = 0x05
                           000004   140 	ar4 = 0x04
                           000003   141 	ar3 = 0x03
                           000002   142 	ar2 = 0x02
                           000001   143 	ar1 = 0x01
                           000000   144 	ar0 = 0x00
      000000 AF F0            [24]  145 	mov	r7,b
      000002 AE 83            [24]  146 	mov	r6,dph
      000004 E5 82            [12]  147 	mov	a,dpl
      000006 90r00r05         [24]  148 	mov	dptr,#_swap_dst_65536_39
      000009 F0               [24]  149 	movx	@dptr,a
      00000A EE               [12]  150 	mov	a,r6
      00000B A3               [24]  151 	inc	dptr
      00000C F0               [24]  152 	movx	@dptr,a
      00000D EF               [12]  153 	mov	a,r7
      00000E A3               [24]  154 	inc	dptr
      00000F F0               [24]  155 	movx	@dptr,a
                                    156 ;	qsort.c:35: unsigned char *restrict d = dst;
      000010 90r00r05         [24]  157 	mov	dptr,#_swap_dst_65536_39
      000013 E0               [24]  158 	movx	a,@dptr
      000014 FD               [12]  159 	mov	r5,a
      000015 A3               [24]  160 	inc	dptr
      000016 E0               [24]  161 	movx	a,@dptr
      000017 FE               [12]  162 	mov	r6,a
      000018 A3               [24]  163 	inc	dptr
      000019 E0               [24]  164 	movx	a,@dptr
      00001A FF               [12]  165 	mov	r7,a
                                    166 ;	qsort.c:36: unsigned char *restrict s = src;
      00001B 90r00r00         [24]  167 	mov	dptr,#_swap_PARM_2
      00001E E0               [24]  168 	movx	a,@dptr
      00001F FA               [12]  169 	mov	r2,a
      000020 A3               [24]  170 	inc	dptr
      000021 E0               [24]  171 	movx	a,@dptr
      000022 FB               [12]  172 	mov	r3,a
      000023 A3               [24]  173 	inc	dptr
      000024 E0               [24]  174 	movx	a,@dptr
      000025 FC               [12]  175 	mov	r4,a
                                    176 ;	qsort.c:38: while(n--)
      000026 90r00r03         [24]  177 	mov	dptr,#_swap_PARM_3
      000029 E0               [24]  178 	movx	a,@dptr
      00002A F5*00            [12]  179 	mov	_swap_sloc0_1_0,a
      00002C A3               [24]  180 	inc	dptr
      00002D E0               [24]  181 	movx	a,@dptr
      00002E F5*01            [12]  182 	mov	(_swap_sloc0_1_0 + 1),a
      000030                        183 00101$:
      000030 A8*00            [24]  184 	mov	r0,_swap_sloc0_1_0
      000032 A9*01            [24]  185 	mov	r1,(_swap_sloc0_1_0 + 1)
      000034 15*00            [12]  186 	dec	_swap_sloc0_1_0
      000036 74 FF            [12]  187 	mov	a,#0xff
      000038 B5*00 02         [24]  188 	cjne	a,_swap_sloc0_1_0,00115$
      00003B 15*01            [12]  189 	dec	(_swap_sloc0_1_0 + 1)
      00003D                        190 00115$:
      00003D E8               [12]  191 	mov	a,r0
      00003E 49               [12]  192 	orl	a,r1
      00003F 60 33            [24]  193 	jz	00104$
                                    194 ;	qsort.c:40: unsigned char tmp = *d;
      000041 8D 82            [24]  195 	mov	dpl,r5
      000043 8E 83            [24]  196 	mov	dph,r6
      000045 8F F0            [24]  197 	mov	b,r7
      000047 12r00r00         [24]  198 	lcall	__gptrget
      00004A F9               [12]  199 	mov	r1,a
                                    200 ;	qsort.c:41: *d = *s;
      00004B 8A 82            [24]  201 	mov	dpl,r2
      00004D 8B 83            [24]  202 	mov	dph,r3
      00004F 8C F0            [24]  203 	mov	b,r4
      000051 12r00r00         [24]  204 	lcall	__gptrget
      000054 F8               [12]  205 	mov	r0,a
      000055 8D 82            [24]  206 	mov	dpl,r5
      000057 8E 83            [24]  207 	mov	dph,r6
      000059 8F F0            [24]  208 	mov	b,r7
      00005B 12r00r00         [24]  209 	lcall	__gptrput
      00005E A3               [24]  210 	inc	dptr
      00005F AD 82            [24]  211 	mov	r5,dpl
      000061 AE 83            [24]  212 	mov	r6,dph
                                    213 ;	qsort.c:42: *s = tmp;
      000063 8A 82            [24]  214 	mov	dpl,r2
      000065 8B 83            [24]  215 	mov	dph,r3
      000067 8C F0            [24]  216 	mov	b,r4
      000069 E9               [12]  217 	mov	a,r1
      00006A 12r00r00         [24]  218 	lcall	__gptrput
      00006D A3               [24]  219 	inc	dptr
      00006E AA 82            [24]  220 	mov	r2,dpl
      000070 AB 83            [24]  221 	mov	r3,dph
                                    222 ;	qsort.c:43: d++;
                                    223 ;	qsort.c:44: s++;
      000072 80 BC            [24]  224 	sjmp	00101$
      000074                        225 00104$:
                                    226 ;	qsort.c:46: }
      000074 22               [24]  227 	ret
                                    228 ;------------------------------------------------------------
                                    229 ;Allocation info for local variables in function 'qsort'
                                    230 ;------------------------------------------------------------
                                    231 ;sloc0                     Allocated with name '_qsort_sloc0_1_0'
                                    232 ;sloc1                     Allocated with name '_qsort_sloc1_1_0'
                                    233 ;sloc2                     Allocated with name '_qsort_sloc2_1_0'
                                    234 ;sloc3                     Allocated with name '_qsort_sloc3_1_0'
                                    235 ;nmemb                     Allocated with name '_qsort_PARM_2'
                                    236 ;size                      Allocated with name '_qsort_PARM_3'
                                    237 ;compar                    Allocated with name '_qsort_PARM_4'
                                    238 ;base                      Allocated with name '_qsort_base_65536_42'
                                    239 ;b                         Allocated with name '_qsort_b_65536_44'
                                    240 ;i                         Allocated with name '_qsort_i_131072_45'
                                    241 ;j                         Allocated with name '_qsort_j_262144_47'
                                    242 ;------------------------------------------------------------
                                    243 ;	qsort.c:48: void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *) __reentrant)
                                    244 ;	-----------------------------------------
                                    245 ;	 function qsort
                                    246 ;	-----------------------------------------
      000075                        247 _qsort:
      000075 AF F0            [24]  248 	mov	r7,b
      000077 AE 83            [24]  249 	mov	r6,dph
      000079 E5 82            [12]  250 	mov	a,dpl
      00007B 90r00r0E         [24]  251 	mov	dptr,#_qsort_base_65536_42
      00007E F0               [24]  252 	movx	@dptr,a
      00007F EE               [12]  253 	mov	a,r6
      000080 A3               [24]  254 	inc	dptr
      000081 F0               [24]  255 	movx	@dptr,a
      000082 EF               [12]  256 	mov	a,r7
      000083 A3               [24]  257 	inc	dptr
      000084 F0               [24]  258 	movx	@dptr,a
                                    259 ;	qsort.c:50: unsigned char *b = base;
      000085 90r00r0E         [24]  260 	mov	dptr,#_qsort_base_65536_42
      000088 E0               [24]  261 	movx	a,@dptr
      000089 FD               [12]  262 	mov	r5,a
      00008A A3               [24]  263 	inc	dptr
      00008B E0               [24]  264 	movx	a,@dptr
      00008C FE               [12]  265 	mov	r6,a
      00008D A3               [24]  266 	inc	dptr
      00008E E0               [24]  267 	movx	a,@dptr
      00008F FF               [12]  268 	mov	r7,a
      000090 8D 02            [24]  269 	mov	ar2,r5
      000092 8E 03            [24]  270 	mov	ar3,r6
      000094 8F 04            [24]  271 	mov	ar4,r7
                                    272 ;	qsort.c:52: if(nmemb <= 1)
      000096 90r00r08         [24]  273 	mov	dptr,#_qsort_PARM_2
      000099 E0               [24]  274 	movx	a,@dptr
      00009A F8               [12]  275 	mov	r0,a
      00009B A3               [24]  276 	inc	dptr
      00009C E0               [24]  277 	movx	a,@dptr
      00009D F9               [12]  278 	mov	r1,a
      00009E C3               [12]  279 	clr	c
      00009F 74 01            [12]  280 	mov	a,#0x01
      0000A1 98               [12]  281 	subb	a,r0
      0000A2 E4               [12]  282 	clr	a
      0000A3 99               [12]  283 	subb	a,r1
      0000A4 40 01            [24]  284 	jc	00102$
                                    285 ;	qsort.c:53: return;
      0000A6 22               [24]  286 	ret
      0000A7                        287 00102$:
                                    288 ;	qsort.c:55: for(unsigned char *i = base; i < b + nmemb * size; i += size)
      0000A7 90r00r11         [24]  289 	mov	dptr,#_qsort_i_131072_45
      0000AA ED               [12]  290 	mov	a,r5
      0000AB F0               [24]  291 	movx	@dptr,a
      0000AC EE               [12]  292 	mov	a,r6
      0000AD A3               [24]  293 	inc	dptr
      0000AE F0               [24]  294 	movx	@dptr,a
      0000AF EF               [12]  295 	mov	a,r7
      0000B0 A3               [24]  296 	inc	dptr
      0000B1 F0               [24]  297 	movx	@dptr,a
      0000B2 8A 05            [24]  298 	mov	ar5,r2
      0000B4 8B 06            [24]  299 	mov	ar6,r3
      0000B6 8C 07            [24]  300 	mov	ar7,r4
      0000B8 90r00r0A         [24]  301 	mov	dptr,#_qsort_PARM_3
      0000BB E0               [24]  302 	movx	a,@dptr
      0000BC F5*00            [12]  303 	mov	_qsort_sloc0_1_0,a
      0000BE A3               [24]  304 	inc	dptr
      0000BF E0               [24]  305 	movx	a,@dptr
      0000C0 F5*01            [12]  306 	mov	(_qsort_sloc0_1_0 + 1),a
      0000C2 90r00r00         [24]  307 	mov	dptr,#__mulint_PARM_2
      0000C5 E5*00            [12]  308 	mov	a,_qsort_sloc0_1_0
      0000C7 F0               [24]  309 	movx	@dptr,a
      0000C8 E5*01            [12]  310 	mov	a,(_qsort_sloc0_1_0 + 1)
      0000CA A3               [24]  311 	inc	dptr
      0000CB F0               [24]  312 	movx	@dptr,a
      0000CC 88 82            [24]  313 	mov	dpl,r0
      0000CE 89 83            [24]  314 	mov	dph,r1
      0000D0 C0 07            [24]  315 	push	ar7
      0000D2 C0 06            [24]  316 	push	ar6
      0000D4 C0 05            [24]  317 	push	ar5
      0000D6 C0 04            [24]  318 	push	ar4
      0000D8 C0 03            [24]  319 	push	ar3
      0000DA C0 02            [24]  320 	push	ar2
      0000DC 12r00r00         [24]  321 	lcall	__mulint
      0000DF A8 82            [24]  322 	mov	r0,dpl
      0000E1 A9 83            [24]  323 	mov	r1,dph
      0000E3 D0 02            [24]  324 	pop	ar2
      0000E5 D0 03            [24]  325 	pop	ar3
      0000E7 D0 04            [24]  326 	pop	ar4
      0000E9 D0 05            [24]  327 	pop	ar5
      0000EB D0 06            [24]  328 	pop	ar6
      0000ED D0 07            [24]  329 	pop	ar7
      0000EF E8               [12]  330 	mov	a,r0
      0000F0 2A               [12]  331 	add	a,r2
      0000F1 FA               [12]  332 	mov	r2,a
      0000F2 E9               [12]  333 	mov	a,r1
      0000F3 3B               [12]  334 	addc	a,r3
      0000F4 FB               [12]  335 	mov	r3,a
      0000F5                        336 00110$:
      0000F5 90r00r11         [24]  337 	mov	dptr,#_qsort_i_131072_45
      0000F8 E0               [24]  338 	movx	a,@dptr
      0000F9 F5*02            [12]  339 	mov	_qsort_sloc1_1_0,a
      0000FB A3               [24]  340 	inc	dptr
      0000FC E0               [24]  341 	movx	a,@dptr
      0000FD F5*03            [12]  342 	mov	(_qsort_sloc1_1_0 + 1),a
      0000FF A3               [24]  343 	inc	dptr
      000100 E0               [24]  344 	movx	a,@dptr
      000101 F5*04            [12]  345 	mov	(_qsort_sloc1_1_0 + 2),a
      000103 C0 02            [24]  346 	push	ar2
      000105 C0 03            [24]  347 	push	ar3
      000107 C0 04            [24]  348 	push	ar4
      000109 85*02 82         [24]  349 	mov	dpl,_qsort_sloc1_1_0
      00010C 85*03 83         [24]  350 	mov	dph,(_qsort_sloc1_1_0 + 1)
      00010F 85*04 F0         [24]  351 	mov	b,(_qsort_sloc1_1_0 + 2)
      000112 12r00r00         [24]  352 	lcall	___gptr_cmp
      000115 15 81            [12]  353 	dec	sp
      000117 15 81            [12]  354 	dec	sp
      000119 15 81            [12]  355 	dec	sp
      00011B 40 01            [24]  356 	jc	00139$
      00011D 22               [24]  357 	ret
      00011E                        358 00139$:
                                    359 ;	qsort.c:57: for(unsigned char *j = i; (j > b) && (*compar)(j, j - size) < 0; j -= size)
      00011E 90r00r14         [24]  360 	mov	dptr,#_qsort_j_262144_47
      000121 E5*02            [12]  361 	mov	a,_qsort_sloc1_1_0
      000123 F0               [24]  362 	movx	@dptr,a
      000124 E5*03            [12]  363 	mov	a,(_qsort_sloc1_1_0 + 1)
      000126 A3               [24]  364 	inc	dptr
      000127 F0               [24]  365 	movx	@dptr,a
      000128 E5*04            [12]  366 	mov	a,(_qsort_sloc1_1_0 + 2)
      00012A A3               [24]  367 	inc	dptr
      00012B F0               [24]  368 	movx	@dptr,a
      00012C                        369 00107$:
      00012C 90r00r14         [24]  370 	mov	dptr,#_qsort_j_262144_47
      00012F E0               [24]  371 	movx	a,@dptr
      000130 F5*02            [12]  372 	mov	_qsort_sloc1_1_0,a
      000132 A3               [24]  373 	inc	dptr
      000133 E0               [24]  374 	movx	a,@dptr
      000134 F5*03            [12]  375 	mov	(_qsort_sloc1_1_0 + 1),a
      000136 A3               [24]  376 	inc	dptr
      000137 E0               [24]  377 	movx	a,@dptr
      000138 F5*04            [12]  378 	mov	(_qsort_sloc1_1_0 + 2),a
      00013A C0*02            [24]  379 	push	_qsort_sloc1_1_0
      00013C C0*03            [24]  380 	push	(_qsort_sloc1_1_0 + 1)
      00013E C0*04            [24]  381 	push	(_qsort_sloc1_1_0 + 2)
      000140 8D 82            [24]  382 	mov	dpl,r5
      000142 8E 83            [24]  383 	mov	dph,r6
      000144 8F F0            [24]  384 	mov	b,r7
      000146 12r00r00         [24]  385 	lcall	___gptr_cmp
      000149 15 81            [12]  386 	dec	sp
      00014B 15 81            [12]  387 	dec	sp
      00014D 15 81            [12]  388 	dec	sp
      00014F 40 03            [24]  389 	jc	00140$
      000151 02r02r1F         [24]  390 	ljmp	00111$
      000154                        391 00140$:
      000154 C0 02            [24]  392 	push	ar2
      000156 C0 03            [24]  393 	push	ar3
      000158 C0 04            [24]  394 	push	ar4
      00015A E5*02            [12]  395 	mov	a,_qsort_sloc1_1_0
      00015C C3               [12]  396 	clr	c
      00015D 95*00            [12]  397 	subb	a,_qsort_sloc0_1_0
      00015F F5*05            [12]  398 	mov	_qsort_sloc2_1_0,a
      000161 E5*03            [12]  399 	mov	a,(_qsort_sloc1_1_0 + 1)
      000163 95*01            [12]  400 	subb	a,(_qsort_sloc0_1_0 + 1)
      000165 F5*06            [12]  401 	mov	(_qsort_sloc2_1_0 + 1),a
      000167 85*04*07         [24]  402 	mov	(_qsort_sloc2_1_0 + 2),(_qsort_sloc1_1_0 + 2)
      00016A 85*05*08         [24]  403 	mov	_qsort_sloc3_1_0,_qsort_sloc2_1_0
      00016D 85*06*09         [24]  404 	mov	(_qsort_sloc3_1_0 + 1),(_qsort_sloc2_1_0 + 1)
      000170 85*07*0A         [24]  405 	mov	(_qsort_sloc3_1_0 + 2),(_qsort_sloc2_1_0 + 2)
      000173 AA*02            [24]  406 	mov	r2,_qsort_sloc1_1_0
      000175 AB*03            [24]  407 	mov	r3,(_qsort_sloc1_1_0 + 1)
      000177 AC*04            [24]  408 	mov	r4,(_qsort_sloc1_1_0 + 2)
      000179 C0 07            [24]  409 	push	ar7
      00017B C0 06            [24]  410 	push	ar6
      00017D C0 05            [24]  411 	push	ar5
      00017F C0 02            [24]  412 	push	ar2
      000181 C0*08            [24]  413 	push	_qsort_sloc3_1_0
      000183 C0*09            [24]  414 	push	(_qsort_sloc3_1_0 + 1)
      000185 C0*0A            [24]  415 	push	(_qsort_sloc3_1_0 + 2)
      000187 12r01r8C         [24]  416 	lcall	00141$
      00018A 80 11            [24]  417 	sjmp	00142$
      00018C                        418 00141$:
      00018C 90r00r0C         [24]  419 	mov	dptr,#_qsort_PARM_4
      00018F E0               [24]  420 	movx	a,@dptr
      000190 C0 E0            [24]  421 	push	acc
      000192 A3               [24]  422 	inc	dptr
      000193 E0               [24]  423 	movx	a,@dptr
      000194 C0 E0            [24]  424 	push	acc
      000196 8A 82            [24]  425 	mov	dpl,r2
      000198 8B 83            [24]  426 	mov	dph,r3
      00019A 8C F0            [24]  427 	mov	b,r4
      00019C 22               [24]  428 	ret
      00019D                        429 00142$:
      00019D AC 83            [24]  430 	mov	r4,dph
      00019F 15 81            [12]  431 	dec	sp
      0001A1 15 81            [12]  432 	dec	sp
      0001A3 15 81            [12]  433 	dec	sp
      0001A5 D0 02            [24]  434 	pop	ar2
      0001A7 D0 05            [24]  435 	pop	ar5
      0001A9 D0 06            [24]  436 	pop	ar6
      0001AB D0 07            [24]  437 	pop	ar7
      0001AD EC               [12]  438 	mov	a,r4
      0001AE D0 04            [24]  439 	pop	ar4
      0001B0 D0 03            [24]  440 	pop	ar3
      0001B2 D0 02            [24]  441 	pop	ar2
      0001B4 30 E7 68         [24]  442 	jnb	acc.7,00111$
                                    443 ;	qsort.c:58: swap(j, j - size, size);
      0001B7 C0 02            [24]  444 	push	ar2
      0001B9 C0 03            [24]  445 	push	ar3
      0001BB C0 04            [24]  446 	push	ar4
      0001BD A8*02            [24]  447 	mov	r0,_qsort_sloc1_1_0
      0001BF A9*03            [24]  448 	mov	r1,(_qsort_sloc1_1_0 + 1)
      0001C1 AC*04            [24]  449 	mov	r4,(_qsort_sloc1_1_0 + 2)
      0001C3 88*08            [24]  450 	mov	_qsort_sloc3_1_0,r0
      0001C5 89*09            [24]  451 	mov	(_qsort_sloc3_1_0 + 1),r1
      0001C7 8C*0A            [24]  452 	mov	(_qsort_sloc3_1_0 + 2),r4
      0001C9 AA*05            [24]  453 	mov	r2,_qsort_sloc2_1_0
      0001CB AB*06            [24]  454 	mov	r3,(_qsort_sloc2_1_0 + 1)
      0001CD AC*07            [24]  455 	mov	r4,(_qsort_sloc2_1_0 + 2)
      0001CF 90r00r00         [24]  456 	mov	dptr,#_swap_PARM_2
      0001D2 EA               [12]  457 	mov	a,r2
      0001D3 F0               [24]  458 	movx	@dptr,a
      0001D4 EB               [12]  459 	mov	a,r3
      0001D5 A3               [24]  460 	inc	dptr
      0001D6 F0               [24]  461 	movx	@dptr,a
      0001D7 EC               [12]  462 	mov	a,r4
      0001D8 A3               [24]  463 	inc	dptr
      0001D9 F0               [24]  464 	movx	@dptr,a
      0001DA 90r00r03         [24]  465 	mov	dptr,#_swap_PARM_3
      0001DD E5*00            [12]  466 	mov	a,_qsort_sloc0_1_0
      0001DF F0               [24]  467 	movx	@dptr,a
      0001E0 E5*01            [12]  468 	mov	a,(_qsort_sloc0_1_0 + 1)
      0001E2 A3               [24]  469 	inc	dptr
      0001E3 F0               [24]  470 	movx	@dptr,a
      0001E4 85*08 82         [24]  471 	mov	dpl,_qsort_sloc3_1_0
      0001E7 85*09 83         [24]  472 	mov	dph,(_qsort_sloc3_1_0 + 1)
      0001EA 85*0A F0         [24]  473 	mov	b,(_qsort_sloc3_1_0 + 2)
      0001ED C0 07            [24]  474 	push	ar7
      0001EF C0 06            [24]  475 	push	ar6
      0001F1 C0 05            [24]  476 	push	ar5
      0001F3 C0 04            [24]  477 	push	ar4
      0001F5 C0 03            [24]  478 	push	ar3
      0001F7 C0 02            [24]  479 	push	ar2
      0001F9 12r00r00         [24]  480 	lcall	_swap
      0001FC D0 02            [24]  481 	pop	ar2
      0001FE D0 03            [24]  482 	pop	ar3
      000200 D0 04            [24]  483 	pop	ar4
      000202 D0 05            [24]  484 	pop	ar5
      000204 D0 06            [24]  485 	pop	ar6
      000206 D0 07            [24]  486 	pop	ar7
                                    487 ;	qsort.c:57: for(unsigned char *j = i; (j > b) && (*compar)(j, j - size) < 0; j -= size)
      000208 90r00r14         [24]  488 	mov	dptr,#_qsort_j_262144_47
      00020B E5*05            [12]  489 	mov	a,_qsort_sloc2_1_0
      00020D F0               [24]  490 	movx	@dptr,a
      00020E E5*06            [12]  491 	mov	a,(_qsort_sloc2_1_0 + 1)
      000210 A3               [24]  492 	inc	dptr
      000211 F0               [24]  493 	movx	@dptr,a
      000212 E5*07            [12]  494 	mov	a,(_qsort_sloc2_1_0 + 2)
      000214 A3               [24]  495 	inc	dptr
      000215 F0               [24]  496 	movx	@dptr,a
      000216 D0 04            [24]  497 	pop	ar4
      000218 D0 03            [24]  498 	pop	ar3
      00021A D0 02            [24]  499 	pop	ar2
      00021C 02r01r2C         [24]  500 	ljmp	00107$
      00021F                        501 00111$:
                                    502 ;	qsort.c:55: for(unsigned char *i = base; i < b + nmemb * size; i += size)
      00021F C0 02            [24]  503 	push	ar2
      000221 C0 03            [24]  504 	push	ar3
      000223 C0 04            [24]  505 	push	ar4
      000225 90r00r11         [24]  506 	mov	dptr,#_qsort_i_131072_45
      000228 E0               [24]  507 	movx	a,@dptr
      000229 F8               [12]  508 	mov	r0,a
      00022A A3               [24]  509 	inc	dptr
      00022B E0               [24]  510 	movx	a,@dptr
      00022C F9               [12]  511 	mov	r1,a
      00022D A3               [24]  512 	inc	dptr
      00022E E0               [24]  513 	movx	a,@dptr
      00022F FC               [12]  514 	mov	r4,a
      000230 90r00r11         [24]  515 	mov	dptr,#_qsort_i_131072_45
      000233 E5*00            [12]  516 	mov	a,_qsort_sloc0_1_0
      000235 28               [12]  517 	add	a,r0
      000236 F0               [24]  518 	movx	@dptr,a
      000237 E5*01            [12]  519 	mov	a,(_qsort_sloc0_1_0 + 1)
      000239 39               [12]  520 	addc	a,r1
      00023A A3               [24]  521 	inc	dptr
      00023B F0               [24]  522 	movx	@dptr,a
      00023C EC               [12]  523 	mov	a,r4
      00023D A3               [24]  524 	inc	dptr
      00023E F0               [24]  525 	movx	@dptr,a
      00023F D0 04            [24]  526 	pop	ar4
      000241 D0 03            [24]  527 	pop	ar3
      000243 D0 02            [24]  528 	pop	ar2
                                    529 ;	qsort.c:60: }
      000245 02r00rF5         [24]  530 	ljmp	00110$
                                    531 	.area CSEG    (CODE)
                                    532 	.area CONST   (CODE)
                                    533 	.area XINIT   (CODE)
                                    534 	.area CABS    (ABS,CODE)
