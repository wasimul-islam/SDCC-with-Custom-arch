                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module sqrtf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ldexpf
                                     12 	.globl _frexpf
                                     13 	.globl _sqrtf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; uninitialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; initialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'sqrtf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to registers r4 r5 r6 r7 
                                     95 ;f                         Allocated to stack - _bp +5
                                     96 ;y                         Allocated to registers r4 r5 r6 r7 
                                     97 ;n                         Allocated to stack - _bp +9
                                     98 ;sloc0                     Allocated to stack - _bp +1
                                     99 ;------------------------------------------------------------
                                    100 ;	sqrtf.c:37: float sqrtf(float x) _FLOAT_FUNC_REENTRANT
                                    101 ;	-----------------------------------------
                                    102 ;	 function sqrtf
                                    103 ;	-----------------------------------------
      000000                        104 _sqrtf:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 AC 82            [24]  115 	mov	r4,dpl
      000007 AD 83            [24]  116 	mov	r5,dph
      000009 AE F0            [24]  117 	mov	r6,b
      00000B FF               [12]  118 	mov	r7,a
      00000C E5 81            [12]  119 	mov	a,sp
      00000E 24 0A            [12]  120 	add	a,#0x0a
      000010 F5 81            [12]  121 	mov	sp,a
                                    122 ;	sqrtf.c:42: if (x==0.0) return x;
      000012 8C F0            [24]  123 	mov	b,r4
      000014 ED               [12]  124 	mov	a,r5
      000015 42 F0            [12]  125 	orl	b,a
      000017 EE               [12]  126 	mov	a,r6
      000018 42 F0            [12]  127 	orl	b,a
      00001A EF               [12]  128 	mov	a,r7
      00001B 54 7F            [12]  129 	anl	a,#0x7F
      00001D 45 F0            [12]  130 	orl	a,b
      00001F 70 0A            [24]  131 	jnz	00107$
      000021 8C 82            [24]  132 	mov	dpl,r4
      000023 8D 83            [24]  133 	mov	dph,r5
      000025 8E F0            [24]  134 	mov	b,r6
      000027 EF               [12]  135 	mov	a,r7
      000028 02r02r78         [24]  136 	ljmp	00111$
      00002B                        137 00107$:
                                    138 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
      00002B C0 07            [24]  139 	push	ar7
      00002D C0 06            [24]  140 	push	ar6
      00002F C0 05            [24]  141 	push	ar5
      000031 C0 04            [24]  142 	push	ar4
      000033 E4               [12]  143 	clr	a
      000034 C0 E0            [24]  144 	push	acc
      000036 C0 E0            [24]  145 	push	acc
      000038 74 80            [12]  146 	mov	a,#0x80
      00003A C0 E0            [24]  147 	push	acc
      00003C 74 3F            [12]  148 	mov	a,#0x3f
      00003E C0 E0            [24]  149 	push	acc
      000040 8C 82            [24]  150 	mov	dpl,r4
      000042 8D 83            [24]  151 	mov	dph,r5
      000044 8E F0            [24]  152 	mov	b,r6
      000046 EF               [12]  153 	mov	a,r7
      000047 12r00r00         [24]  154 	lcall	___fseq
      00004A AB 82            [24]  155 	mov	r3,dpl
      00004C E5 81            [12]  156 	mov	a,sp
      00004E 24 FC            [12]  157 	add	a,#0xfc
      000050 F5 81            [12]  158 	mov	sp,a
      000052 D0 04            [24]  159 	pop	ar4
      000054 D0 05            [24]  160 	pop	ar5
      000056 D0 06            [24]  161 	pop	ar6
      000058 D0 07            [24]  162 	pop	ar7
      00005A EB               [12]  163 	mov	a,r3
      00005B 60 0B            [24]  164 	jz	00104$
      00005D 90 00 00         [24]  165 	mov	dptr,#0x0000
      000060 75 F0 80         [24]  166 	mov	b,#0x80
      000063 74 3F            [12]  167 	mov	a,#0x3f
      000065 02r02r78         [24]  168 	ljmp	00111$
      000068                        169 00104$:
                                    170 ;	sqrtf.c:44: else if (x<0.0)
      000068 C0 07            [24]  171 	push	ar7
      00006A C0 06            [24]  172 	push	ar6
      00006C C0 05            [24]  173 	push	ar5
      00006E C0 04            [24]  174 	push	ar4
      000070 E4               [12]  175 	clr	a
      000071 C0 E0            [24]  176 	push	acc
      000073 C0 E0            [24]  177 	push	acc
      000075 C0 E0            [24]  178 	push	acc
      000077 C0 E0            [24]  179 	push	acc
      000079 8C 82            [24]  180 	mov	dpl,r4
      00007B 8D 83            [24]  181 	mov	dph,r5
      00007D 8E F0            [24]  182 	mov	b,r6
      00007F EF               [12]  183 	mov	a,r7
      000080 12r00r00         [24]  184 	lcall	___fslt
      000083 AB 82            [24]  185 	mov	r3,dpl
      000085 E5 81            [12]  186 	mov	a,sp
      000087 24 FC            [12]  187 	add	a,#0xfc
      000089 F5 81            [12]  188 	mov	sp,a
      00008B D0 04            [24]  189 	pop	ar4
      00008D D0 05            [24]  190 	pop	ar5
      00008F D0 06            [24]  191 	pop	ar6
      000091 D0 07            [24]  192 	pop	ar7
      000093 EB               [12]  193 	mov	a,r3
      000094 60 11            [24]  194 	jz	00108$
                                    195 ;	sqrtf.c:46: errno=EDOM;
      000096 90r00r00         [24]  196 	mov	dptr,#_errno
      000099 74 21            [12]  197 	mov	a,#0x21
      00009B F0               [24]  198 	movx	@dptr,a
      00009C E4               [12]  199 	clr	a
      00009D A3               [24]  200 	inc	dptr
      00009E F0               [24]  201 	movx	@dptr,a
                                    202 ;	sqrtf.c:47: return 0.0;
      00009F 90 00 00         [24]  203 	mov	dptr,#0x0000
      0000A2 F5 F0            [12]  204 	mov	b,a
      0000A4 02r02r78         [24]  205 	ljmp	00111$
      0000A7                        206 00108$:
                                    207 ;	sqrtf.c:49: f=frexpf(x, &n);
      0000A7 E5*00            [12]  208 	mov	a,_bp
      0000A9 24 09            [12]  209 	add	a,#0x09
      0000AB 90r00r00         [24]  210 	mov	dptr,#_frexpf_PARM_2
      0000AE F0               [24]  211 	movx	@dptr,a
      0000AF E4               [12]  212 	clr	a
      0000B0 A3               [24]  213 	inc	dptr
      0000B1 F0               [24]  214 	movx	@dptr,a
      0000B2 74 40            [12]  215 	mov	a,#0x40
      0000B4 A3               [24]  216 	inc	dptr
      0000B5 F0               [24]  217 	movx	@dptr,a
      0000B6 8C 82            [24]  218 	mov	dpl,r4
      0000B8 8D 83            [24]  219 	mov	dph,r5
      0000BA 8E F0            [24]  220 	mov	b,r6
      0000BC EF               [12]  221 	mov	a,r7
      0000BD 12r00r00         [24]  222 	lcall	_frexpf
      0000C0 AC 82            [24]  223 	mov	r4,dpl
      0000C2 AD 83            [24]  224 	mov	r5,dph
      0000C4 AE F0            [24]  225 	mov	r6,b
      0000C6 FF               [12]  226 	mov	r7,a
      0000C7 E5*00            [12]  227 	mov	a,_bp
      0000C9 24 05            [12]  228 	add	a,#0x05
      0000CB F8               [12]  229 	mov	r0,a
      0000CC A6 04            [24]  230 	mov	@r0,ar4
      0000CE 08               [12]  231 	inc	r0
      0000CF A6 05            [24]  232 	mov	@r0,ar5
      0000D1 08               [12]  233 	inc	r0
      0000D2 A6 06            [24]  234 	mov	@r0,ar6
      0000D4 08               [12]  235 	inc	r0
      0000D5 A6 07            [24]  236 	mov	@r0,ar7
                                    237 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
      0000D7 E5*00            [12]  238 	mov	a,_bp
      0000D9 24 05            [12]  239 	add	a,#0x05
      0000DB F8               [12]  240 	mov	r0,a
      0000DC E6               [12]  241 	mov	a,@r0
      0000DD C0 E0            [24]  242 	push	acc
      0000DF 08               [12]  243 	inc	r0
      0000E0 E6               [12]  244 	mov	a,@r0
      0000E1 C0 E0            [24]  245 	push	acc
      0000E3 08               [12]  246 	inc	r0
      0000E4 E6               [12]  247 	mov	a,@r0
      0000E5 C0 E0            [24]  248 	push	acc
      0000E7 08               [12]  249 	inc	r0
      0000E8 E6               [12]  250 	mov	a,@r0
      0000E9 C0 E0            [24]  251 	push	acc
      0000EB 90 14 BA         [24]  252 	mov	dptr,#0x14ba
      0000EE 75 F0 17         [24]  253 	mov	b,#0x17
      0000F1 74 3F            [12]  254 	mov	a,#0x3f
      0000F3 12r00r00         [24]  255 	lcall	___fsmul
      0000F6 AA 82            [24]  256 	mov	r2,dpl
      0000F8 AB 83            [24]  257 	mov	r3,dph
      0000FA AE F0            [24]  258 	mov	r6,b
      0000FC FF               [12]  259 	mov	r7,a
      0000FD E5 81            [12]  260 	mov	a,sp
      0000FF 24 FC            [12]  261 	add	a,#0xfc
      000101 F5 81            [12]  262 	mov	sp,a
      000103 74 A8            [12]  263 	mov	a,#0xa8
      000105 C0 E0            [24]  264 	push	acc
      000107 04               [12]  265 	inc	a
      000108 C0 E0            [24]  266 	push	acc
      00010A 74 D5            [12]  267 	mov	a,#0xd5
      00010C C0 E0            [24]  268 	push	acc
      00010E 74 3E            [12]  269 	mov	a,#0x3e
      000110 C0 E0            [24]  270 	push	acc
      000112 8A 82            [24]  271 	mov	dpl,r2
      000114 8B 83            [24]  272 	mov	dph,r3
      000116 8E F0            [24]  273 	mov	b,r6
      000118 EF               [12]  274 	mov	a,r7
      000119 12r00r00         [24]  275 	lcall	___fsadd
      00011C A8*00            [24]  276 	mov	r0,_bp
      00011E 08               [12]  277 	inc	r0
      00011F A6 82            [24]  278 	mov	@r0,dpl
      000121 08               [12]  279 	inc	r0
      000122 A6 83            [24]  280 	mov	@r0,dph
      000124 08               [12]  281 	inc	r0
      000125 A6 F0            [24]  282 	mov	@r0,b
      000127 08               [12]  283 	inc	r0
      000128 F6               [12]  284 	mov	@r0,a
      000129 E5 81            [12]  285 	mov	a,sp
      00012B 24 FC            [12]  286 	add	a,#0xfc
      00012D F5 81            [12]  287 	mov	sp,a
                                    288 ;	sqrtf.c:52: y+=f/y;
      00012F A8*00            [24]  289 	mov	r0,_bp
      000131 08               [12]  290 	inc	r0
      000132 E6               [12]  291 	mov	a,@r0
      000133 C0 E0            [24]  292 	push	acc
      000135 08               [12]  293 	inc	r0
      000136 E6               [12]  294 	mov	a,@r0
      000137 C0 E0            [24]  295 	push	acc
      000139 08               [12]  296 	inc	r0
      00013A E6               [12]  297 	mov	a,@r0
      00013B C0 E0            [24]  298 	push	acc
      00013D 08               [12]  299 	inc	r0
      00013E E6               [12]  300 	mov	a,@r0
      00013F C0 E0            [24]  301 	push	acc
      000141 E5*00            [12]  302 	mov	a,_bp
      000143 24 05            [12]  303 	add	a,#0x05
      000145 F8               [12]  304 	mov	r0,a
      000146 86 82            [24]  305 	mov	dpl,@r0
      000148 08               [12]  306 	inc	r0
      000149 86 83            [24]  307 	mov	dph,@r0
      00014B 08               [12]  308 	inc	r0
      00014C 86 F0            [24]  309 	mov	b,@r0
      00014E 08               [12]  310 	inc	r0
      00014F E6               [12]  311 	mov	a,@r0
      000150 12r00r00         [24]  312 	lcall	___fsdiv
      000153 AA 82            [24]  313 	mov	r2,dpl
      000155 AB 83            [24]  314 	mov	r3,dph
      000157 AE F0            [24]  315 	mov	r6,b
      000159 FF               [12]  316 	mov	r7,a
      00015A E5 81            [12]  317 	mov	a,sp
      00015C 24 FC            [12]  318 	add	a,#0xfc
      00015E F5 81            [12]  319 	mov	sp,a
      000160 C0 02            [24]  320 	push	ar2
      000162 C0 03            [24]  321 	push	ar3
      000164 C0 06            [24]  322 	push	ar6
      000166 C0 07            [24]  323 	push	ar7
      000168 A8*00            [24]  324 	mov	r0,_bp
      00016A 08               [12]  325 	inc	r0
      00016B 86 82            [24]  326 	mov	dpl,@r0
      00016D 08               [12]  327 	inc	r0
      00016E 86 83            [24]  328 	mov	dph,@r0
      000170 08               [12]  329 	inc	r0
      000171 86 F0            [24]  330 	mov	b,@r0
      000173 08               [12]  331 	inc	r0
      000174 E6               [12]  332 	mov	a,@r0
      000175 12r00r00         [24]  333 	lcall	___fsadd
      000178 AC 82            [24]  334 	mov	r4,dpl
      00017A AD 83            [24]  335 	mov	r5,dph
      00017C AE F0            [24]  336 	mov	r6,b
      00017E FF               [12]  337 	mov	r7,a
      00017F E5 81            [12]  338 	mov	a,sp
      000181 24 FC            [12]  339 	add	a,#0xfc
      000183 F5 81            [12]  340 	mov	sp,a
                                    341 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
      000185 90r00r00         [24]  342 	mov	dptr,#_ldexpf_PARM_2
      000188 74 FE            [12]  343 	mov	a,#0xfe
      00018A F0               [24]  344 	movx	@dptr,a
      00018B 04               [12]  345 	inc	a
      00018C A3               [24]  346 	inc	dptr
      00018D F0               [24]  347 	movx	@dptr,a
      00018E 8C 82            [24]  348 	mov	dpl,r4
      000190 8D 83            [24]  349 	mov	dph,r5
      000192 8E F0            [24]  350 	mov	b,r6
      000194 EF               [12]  351 	mov	a,r7
      000195 C0 07            [24]  352 	push	ar7
      000197 C0 06            [24]  353 	push	ar6
      000199 C0 05            [24]  354 	push	ar5
      00019B C0 04            [24]  355 	push	ar4
      00019D 12r00r00         [24]  356 	lcall	_ldexpf
      0001A0 A8*00            [24]  357 	mov	r0,_bp
      0001A2 08               [12]  358 	inc	r0
      0001A3 A6 82            [24]  359 	mov	@r0,dpl
      0001A5 08               [12]  360 	inc	r0
      0001A6 A6 83            [24]  361 	mov	@r0,dph
      0001A8 08               [12]  362 	inc	r0
      0001A9 A6 F0            [24]  363 	mov	@r0,b
      0001AB 08               [12]  364 	inc	r0
      0001AC F6               [12]  365 	mov	@r0,a
      0001AD D0 04            [24]  366 	pop	ar4
      0001AF D0 05            [24]  367 	pop	ar5
      0001B1 D0 06            [24]  368 	pop	ar6
      0001B3 D0 07            [24]  369 	pop	ar7
      0001B5 C0 04            [24]  370 	push	ar4
      0001B7 C0 05            [24]  371 	push	ar5
      0001B9 C0 06            [24]  372 	push	ar6
      0001BB C0 07            [24]  373 	push	ar7
      0001BD E5*00            [12]  374 	mov	a,_bp
      0001BF 24 05            [12]  375 	add	a,#0x05
      0001C1 F8               [12]  376 	mov	r0,a
      0001C2 86 82            [24]  377 	mov	dpl,@r0
      0001C4 08               [12]  378 	inc	r0
      0001C5 86 83            [24]  379 	mov	dph,@r0
      0001C7 08               [12]  380 	inc	r0
      0001C8 86 F0            [24]  381 	mov	b,@r0
      0001CA 08               [12]  382 	inc	r0
      0001CB E6               [12]  383 	mov	a,@r0
      0001CC 12r00r00         [24]  384 	lcall	___fsdiv
      0001CF AC 82            [24]  385 	mov	r4,dpl
      0001D1 AD 83            [24]  386 	mov	r5,dph
      0001D3 AE F0            [24]  387 	mov	r6,b
      0001D5 FF               [12]  388 	mov	r7,a
      0001D6 E5 81            [12]  389 	mov	a,sp
      0001D8 24 FC            [12]  390 	add	a,#0xfc
      0001DA F5 81            [12]  391 	mov	sp,a
      0001DC C0 04            [24]  392 	push	ar4
      0001DE C0 05            [24]  393 	push	ar5
      0001E0 C0 06            [24]  394 	push	ar6
      0001E2 C0 07            [24]  395 	push	ar7
      0001E4 A8*00            [24]  396 	mov	r0,_bp
      0001E6 08               [12]  397 	inc	r0
      0001E7 86 82            [24]  398 	mov	dpl,@r0
      0001E9 08               [12]  399 	inc	r0
      0001EA 86 83            [24]  400 	mov	dph,@r0
      0001EC 08               [12]  401 	inc	r0
      0001ED 86 F0            [24]  402 	mov	b,@r0
      0001EF 08               [12]  403 	inc	r0
      0001F0 E6               [12]  404 	mov	a,@r0
      0001F1 12r00r00         [24]  405 	lcall	___fsadd
      0001F4 AC 82            [24]  406 	mov	r4,dpl
      0001F6 AD 83            [24]  407 	mov	r5,dph
      0001F8 AE F0            [24]  408 	mov	r6,b
      0001FA FF               [12]  409 	mov	r7,a
      0001FB E5 81            [12]  410 	mov	a,sp
      0001FD 24 FC            [12]  411 	add	a,#0xfc
      0001FF F5 81            [12]  412 	mov	sp,a
                                    413 ;	sqrtf.c:55: if (n&1)
      000201 E5*00            [12]  414 	mov	a,_bp
      000203 24 09            [12]  415 	add	a,#0x09
      000205 F8               [12]  416 	mov	r0,a
      000206 E6               [12]  417 	mov	a,@r0
      000207 30 E0 2B         [24]  418 	jnb	acc.0,00110$
                                    419 ;	sqrtf.c:57: y*=0.7071067812;
      00020A C0 04            [24]  420 	push	ar4
      00020C C0 05            [24]  421 	push	ar5
      00020E C0 06            [24]  422 	push	ar6
      000210 C0 07            [24]  423 	push	ar7
      000212 90 04 F3         [24]  424 	mov	dptr,#0x04f3
      000215 75 F0 35         [24]  425 	mov	b,#0x35
      000218 74 3F            [12]  426 	mov	a,#0x3f
      00021A 12r00r00         [24]  427 	lcall	___fsmul
      00021D AC 82            [24]  428 	mov	r4,dpl
      00021F AD 83            [24]  429 	mov	r5,dph
      000221 AE F0            [24]  430 	mov	r6,b
      000223 FF               [12]  431 	mov	r7,a
      000224 E5 81            [12]  432 	mov	a,sp
      000226 24 FC            [12]  433 	add	a,#0xfc
      000228 F5 81            [12]  434 	mov	sp,a
                                    435 ;	sqrtf.c:58: ++n;
      00022A E5*00            [12]  436 	mov	a,_bp
      00022C 24 09            [12]  437 	add	a,#0x09
      00022E F8               [12]  438 	mov	r0,a
      00022F 06               [12]  439 	inc	@r0
      000230 B6 00 02         [24]  440 	cjne	@r0,#0x00,00137$
      000233 08               [12]  441 	inc	r0
      000234 06               [12]  442 	inc	@r0
      000235                        443 00137$:
      000235                        444 00110$:
                                    445 ;	sqrtf.c:60: return ldexpf(y, n/2);
      000235 90r00r00         [24]  446 	mov	dptr,#__divsint_PARM_2
      000238 74 02            [12]  447 	mov	a,#0x02
      00023A F0               [24]  448 	movx	@dptr,a
      00023B E4               [12]  449 	clr	a
      00023C A3               [24]  450 	inc	dptr
      00023D F0               [24]  451 	movx	@dptr,a
      00023E E5*00            [12]  452 	mov	a,_bp
      000240 24 09            [12]  453 	add	a,#0x09
      000242 F8               [12]  454 	mov	r0,a
      000243 86 82            [24]  455 	mov	dpl,@r0
      000245 08               [12]  456 	inc	r0
      000246 86 83            [24]  457 	mov	dph,@r0
      000248 C0 07            [24]  458 	push	ar7
      00024A C0 06            [24]  459 	push	ar6
      00024C C0 05            [24]  460 	push	ar5
      00024E C0 04            [24]  461 	push	ar4
      000250 12r00r00         [24]  462 	lcall	__divsint
      000253 AA 82            [24]  463 	mov	r2,dpl
      000255 AB 83            [24]  464 	mov	r3,dph
      000257 D0 04            [24]  465 	pop	ar4
      000259 D0 05            [24]  466 	pop	ar5
      00025B D0 06            [24]  467 	pop	ar6
      00025D D0 07            [24]  468 	pop	ar7
      00025F 90r00r00         [24]  469 	mov	dptr,#_ldexpf_PARM_2
      000262 EA               [12]  470 	mov	a,r2
      000263 F0               [24]  471 	movx	@dptr,a
      000264 EB               [12]  472 	mov	a,r3
      000265 A3               [24]  473 	inc	dptr
      000266 F0               [24]  474 	movx	@dptr,a
      000267 8C 82            [24]  475 	mov	dpl,r4
      000269 8D 83            [24]  476 	mov	dph,r5
      00026B 8E F0            [24]  477 	mov	b,r6
      00026D EF               [12]  478 	mov	a,r7
      00026E 12r00r00         [24]  479 	lcall	_ldexpf
      000271 AC 82            [24]  480 	mov	r4,dpl
      000273 AD 83            [24]  481 	mov	r5,dph
      000275 AE F0            [24]  482 	mov	r6,b
      000277 FF               [12]  483 	mov	r7,a
      000278                        484 00111$:
                                    485 ;	sqrtf.c:61: }
      000278 85*00 81         [24]  486 	mov	sp,_bp
      00027B D0*00            [24]  487 	pop	_bp
      00027D 22               [24]  488 	ret
                                    489 	.area CSEG    (CODE)
                                    490 	.area CONST   (CODE)
                                    491 	.area XINIT   (CODE)
                                    492 	.area CABS    (ABS,CODE)
