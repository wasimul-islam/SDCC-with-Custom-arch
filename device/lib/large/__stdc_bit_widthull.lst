                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __stdc_bit_widthull
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___stdc_bit_widthull
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 	.area	OSEG    (OVR,DATA)
      000000                         35 ___stdc_bit_widthull_sloc0_1_0:
      000000                         36 	.ds 1
      000001                         37 ___stdc_bit_widthull_sloc1_1_0:
      000001                         38 	.ds 8
                                     39 ;--------------------------------------------------------
                                     40 ; indirectly addressable internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area ISEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; absolute internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area IABS    (ABS,DATA)
                                     47 	.area IABS    (ABS,DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; bit data
                                     50 ;--------------------------------------------------------
                                     51 	.area BSEG    (BIT)
                                     52 ;--------------------------------------------------------
                                     53 ; paged external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area PSEG    (PAG,XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; uninitialized external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XSEG    (XDATA)
      000000                         60 ___stdc_bit_widthull_value_65536_9:
      000000                         61 	.ds 8
      000008                         62 ___stdc_bit_widthull_width_65536_10:
      000008                         63 	.ds 1
                                     64 ;--------------------------------------------------------
                                     65 ; absolute external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XABS    (ABS,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; initialized external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XISEG   (XDATA)
                                     72 	.area HOME    (CODE)
                                     73 	.area GSINIT0 (CODE)
                                     74 	.area GSINIT1 (CODE)
                                     75 	.area GSINIT2 (CODE)
                                     76 	.area GSINIT3 (CODE)
                                     77 	.area GSINIT4 (CODE)
                                     78 	.area GSINIT5 (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area CSEG    (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function '__stdc_bit_widthull'
                                    100 ;------------------------------------------------------------
                                    101 ;value                     Allocated with name '___stdc_bit_widthull_value_65536_9'
                                    102 ;width                     Allocated with name '___stdc_bit_widthull_width_65536_10'
                                    103 ;i                         Allocated with name '___stdc_bit_widthull_i_131072_11'
                                    104 ;sloc0                     Allocated with name '___stdc_bit_widthull_sloc0_1_0'
                                    105 ;sloc1                     Allocated with name '___stdc_bit_widthull_sloc1_1_0'
                                    106 ;------------------------------------------------------------
                                    107 ;	__stdc_bit_widthull.c:37: int_fast8_t __stdc_bit_widthull(unsigned long long value)
                                    108 ;	-----------------------------------------
                                    109 ;	 function __stdc_bit_widthull
                                    110 ;	-----------------------------------------
      000000                        111 ___stdc_bit_widthull:
                           000007   112 	ar7 = 0x07
                           000006   113 	ar6 = 0x06
                           000005   114 	ar5 = 0x05
                           000004   115 	ar4 = 0x04
                           000003   116 	ar3 = 0x03
                           000002   117 	ar2 = 0x02
                           000001   118 	ar1 = 0x01
                           000000   119 	ar0 = 0x00
      000000 C0 07            [24]  120 	push	ar7
      000002 C0 06            [24]  121 	push	ar6
      000004 C0 05            [24]  122 	push	ar5
      000006 C0 04            [24]  123 	push	ar4
      000008 C0 E0            [24]  124 	push	acc
      00000A C0 F0            [24]  125 	push	b
      00000C C0 83            [24]  126 	push	dph
      00000E C0 82            [24]  127 	push	dpl
      000010 90r00r00         [24]  128 	mov	dptr,#___stdc_bit_widthull_value_65536_9
      000013 D0 E0            [24]  129 	pop	acc
      000015 F0               [24]  130 	movx	@dptr,a
      000016 D0 E0            [24]  131 	pop	acc
      000018 A3               [24]  132 	inc	dptr
      000019 F0               [24]  133 	movx	@dptr,a
      00001A D0 E0            [24]  134 	pop	acc
      00001C A3               [24]  135 	inc	dptr
      00001D F0               [24]  136 	movx	@dptr,a
      00001E D0 E0            [24]  137 	pop	acc
      000020 A3               [24]  138 	inc	dptr
      000021 F0               [24]  139 	movx	@dptr,a
      000022 D0 E0            [24]  140 	pop	acc
      000024 A3               [24]  141 	inc	dptr
      000025 F0               [24]  142 	movx	@dptr,a
      000026 D0 E0            [24]  143 	pop	acc
      000028 A3               [24]  144 	inc	dptr
      000029 F0               [24]  145 	movx	@dptr,a
      00002A D0 E0            [24]  146 	pop	acc
      00002C A3               [24]  147 	inc	dptr
      00002D F0               [24]  148 	movx	@dptr,a
      00002E D0 E0            [24]  149 	pop	acc
      000030 A3               [24]  150 	inc	dptr
      000031 F0               [24]  151 	movx	@dptr,a
                                    152 ;	__stdc_bit_widthull.c:39: int_fast8_t width = 0;
      000032 90r00r08         [24]  153 	mov	dptr,#___stdc_bit_widthull_width_65536_10
      000035 E4               [12]  154 	clr	a
      000036 F0               [24]  155 	movx	@dptr,a
                                    156 ;	__stdc_bit_widthull.c:40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
      000037 90r00r00         [24]  157 	mov	dptr,#___stdc_bit_widthull_value_65536_9
      00003A E0               [24]  158 	movx	a,@dptr
      00003B F5*01            [12]  159 	mov	___stdc_bit_widthull_sloc1_1_0,a
      00003D A3               [24]  160 	inc	dptr
      00003E E0               [24]  161 	movx	a,@dptr
      00003F F5*02            [12]  162 	mov	(___stdc_bit_widthull_sloc1_1_0 + 1),a
      000041 A3               [24]  163 	inc	dptr
      000042 E0               [24]  164 	movx	a,@dptr
      000043 F5*03            [12]  165 	mov	(___stdc_bit_widthull_sloc1_1_0 + 2),a
      000045 A3               [24]  166 	inc	dptr
      000046 E0               [24]  167 	movx	a,@dptr
      000047 F5*04            [12]  168 	mov	(___stdc_bit_widthull_sloc1_1_0 + 3),a
      000049 A3               [24]  169 	inc	dptr
      00004A E0               [24]  170 	movx	a,@dptr
      00004B F5*05            [12]  171 	mov	(___stdc_bit_widthull_sloc1_1_0 + 4),a
      00004D A3               [24]  172 	inc	dptr
      00004E E0               [24]  173 	movx	a,@dptr
      00004F F5*06            [12]  174 	mov	(___stdc_bit_widthull_sloc1_1_0 + 5),a
      000051 A3               [24]  175 	inc	dptr
      000052 E0               [24]  176 	movx	a,@dptr
      000053 F5*07            [12]  177 	mov	(___stdc_bit_widthull_sloc1_1_0 + 6),a
      000055 A3               [24]  178 	inc	dptr
      000056 E0               [24]  179 	movx	a,@dptr
      000057 F5*08            [12]  180 	mov	(___stdc_bit_widthull_sloc1_1_0 + 7),a
      000059 75*00 00         [24]  181 	mov	___stdc_bit_widthull_sloc0_1_0,#0x00
      00005C                        182 00105$:
      00005C 74 C0            [12]  183 	mov	a,#0x100 - 0x40
      00005E 25*00            [12]  184 	add	a,___stdc_bit_widthull_sloc0_1_0
      000060 40 68            [24]  185 	jc	00103$
                                    186 ;	__stdc_bit_widthull.c:41: if(value & (1ull << i))
      000062 85*00 F0         [24]  187 	mov	b,___stdc_bit_widthull_sloc0_1_0
      000065 05 F0            [12]  188 	inc	b
      000067 78 01            [12]  189 	mov	r0,#0x01
      000069 79 00            [12]  190 	mov	r1,#0x00
      00006B 7A 00            [12]  191 	mov	r2,#0x00
      00006D 7B 00            [12]  192 	mov	r3,#0x00
      00006F 7C 00            [12]  193 	mov	r4,#0x00
      000071 7D 00            [12]  194 	mov	r5,#0x00
      000073 7E 00            [12]  195 	mov	r6,#0x00
      000075 7F 00            [12]  196 	mov	r7,#0x00
      000077 80 18            [24]  197 	sjmp	00124$
      000079                        198 00123$:
      000079 E8               [12]  199 	mov	a,r0
      00007A 28               [12]  200 	add	a,r0
      00007B F8               [12]  201 	mov	r0,a
      00007C E9               [12]  202 	mov	a,r1
      00007D 33               [12]  203 	rlc	a
      00007E F9               [12]  204 	mov	r1,a
      00007F EA               [12]  205 	mov	a,r2
      000080 33               [12]  206 	rlc	a
      000081 FA               [12]  207 	mov	r2,a
      000082 EB               [12]  208 	mov	a,r3
      000083 33               [12]  209 	rlc	a
      000084 FB               [12]  210 	mov	r3,a
      000085 EC               [12]  211 	mov	a,r4
      000086 33               [12]  212 	rlc	a
      000087 FC               [12]  213 	mov	r4,a
      000088 ED               [12]  214 	mov	a,r5
      000089 33               [12]  215 	rlc	a
      00008A FD               [12]  216 	mov	r5,a
      00008B EE               [12]  217 	mov	a,r6
      00008C 33               [12]  218 	rlc	a
      00008D FE               [12]  219 	mov	r6,a
      00008E EF               [12]  220 	mov	a,r7
      00008F 33               [12]  221 	rlc	a
      000090 FF               [12]  222 	mov	r7,a
      000091                        223 00124$:
      000091 D5 F0 E5         [24]  224 	djnz	b,00123$
      000094 E5*01            [12]  225 	mov	a,___stdc_bit_widthull_sloc1_1_0
      000096 52 00            [12]  226 	anl	ar0,a
      000098 E5*02            [12]  227 	mov	a,(___stdc_bit_widthull_sloc1_1_0 + 1)
      00009A 52 01            [12]  228 	anl	ar1,a
      00009C E5*03            [12]  229 	mov	a,(___stdc_bit_widthull_sloc1_1_0 + 2)
      00009E 52 02            [12]  230 	anl	ar2,a
      0000A0 E5*04            [12]  231 	mov	a,(___stdc_bit_widthull_sloc1_1_0 + 3)
      0000A2 52 03            [12]  232 	anl	ar3,a
      0000A4 E5*05            [12]  233 	mov	a,(___stdc_bit_widthull_sloc1_1_0 + 4)
      0000A6 52 04            [12]  234 	anl	ar4,a
      0000A8 E5*06            [12]  235 	mov	a,(___stdc_bit_widthull_sloc1_1_0 + 5)
      0000AA 52 05            [12]  236 	anl	ar5,a
      0000AC E5*07            [12]  237 	mov	a,(___stdc_bit_widthull_sloc1_1_0 + 6)
      0000AE 52 06            [12]  238 	anl	ar6,a
      0000B0 E5*08            [12]  239 	mov	a,(___stdc_bit_widthull_sloc1_1_0 + 7)
      0000B2 52 07            [12]  240 	anl	ar7,a
      0000B4 E8               [12]  241 	mov	a,r0
      0000B5 49               [12]  242 	orl	a,r1
      0000B6 4A               [12]  243 	orl	a,r2
      0000B7 4B               [12]  244 	orl	a,r3
      0000B8 4C               [12]  245 	orl	a,r4
      0000B9 4D               [12]  246 	orl	a,r5
      0000BA 4E               [12]  247 	orl	a,r6
      0000BB 4F               [12]  248 	orl	a,r7
      0000BC 60 08            [24]  249 	jz	00106$
                                    250 ;	__stdc_bit_widthull.c:42: width = (i + 1);
      0000BE AF*00            [24]  251 	mov	r7,___stdc_bit_widthull_sloc0_1_0
      0000C0 90r00r08         [24]  252 	mov	dptr,#___stdc_bit_widthull_width_65536_10
      0000C3 EF               [12]  253 	mov	a,r7
      0000C4 04               [12]  254 	inc	a
      0000C5 F0               [24]  255 	movx	@dptr,a
      0000C6                        256 00106$:
                                    257 ;	__stdc_bit_widthull.c:40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
      0000C6 05*00            [12]  258 	inc	___stdc_bit_widthull_sloc0_1_0
      0000C8 80 92            [24]  259 	sjmp	00105$
      0000CA                        260 00103$:
                                    261 ;	__stdc_bit_widthull.c:43: return width;
      0000CA 90r00r08         [24]  262 	mov	dptr,#___stdc_bit_widthull_width_65536_10
      0000CD E0               [24]  263 	movx	a,@dptr
                                    264 ;	__stdc_bit_widthull.c:44: }
      0000CE F5 82            [12]  265 	mov	dpl,a
      0000D0 22               [24]  266 	ret
                                    267 	.area CSEG    (CODE)
                                    268 	.area CONST   (CODE)
                                    269 	.area XINIT   (CODE)
                                    270 	.area CABS    (ABS,CODE)
