                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module free
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _free
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
      000000                         55 _free_ptr_65536_40:
      000000                         56 	.ds 3
      000003                         57 _free_h_65536_41:
      000003                         58 	.ds 2
      000005                         59 _free_prev_free_65536_41:
      000005                         60 	.ds 2
      000007                         61 _free_f_65536_41:
      000007                         62 	.ds 2
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; initialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function 'free'
                                     99 ;------------------------------------------------------------
                                    100 ;ptr                       Allocated with name '_free_ptr_65536_40'
                                    101 ;h                         Allocated with name '_free_h_65536_41'
                                    102 ;next_free                 Allocated with name '_free_next_free_65536_41'
                                    103 ;prev_free                 Allocated with name '_free_prev_free_65536_41'
                                    104 ;f                         Allocated with name '_free_f_65536_41'
                                    105 ;------------------------------------------------------------
                                    106 ;	free.c:50: void free(void *ptr)
                                    107 ;	-----------------------------------------
                                    108 ;	 function free
                                    109 ;	-----------------------------------------
      000000                        110 _free:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 AF F0            [24]  119 	mov	r7,b
      000002 AE 83            [24]  120 	mov	r6,dph
      000004 E5 82            [12]  121 	mov	a,dpl
      000006 90r00r00         [24]  122 	mov	dptr,#_free_ptr_65536_40
      000009 F0               [24]  123 	movx	@dptr,a
      00000A EE               [12]  124 	mov	a,r6
      00000B A3               [24]  125 	inc	dptr
      00000C F0               [24]  126 	movx	@dptr,a
      00000D EF               [12]  127 	mov	a,r7
      00000E A3               [24]  128 	inc	dptr
      00000F F0               [24]  129 	movx	@dptr,a
                                    130 ;	free.c:55: if(!ptr)
      000010 90r00r00         [24]  131 	mov	dptr,#_free_ptr_65536_40
      000013 E0               [24]  132 	movx	a,@dptr
      000014 FD               [12]  133 	mov	r5,a
      000015 A3               [24]  134 	inc	dptr
      000016 E0               [24]  135 	movx	a,@dptr
      000017 FE               [12]  136 	mov	r6,a
      000018 A3               [24]  137 	inc	dptr
      000019 E0               [24]  138 	movx	a,@dptr
      00001A 90r00r00         [24]  139 	mov	dptr,#_free_ptr_65536_40
      00001D E0               [24]  140 	movx	a,@dptr
      00001E F5 F0            [12]  141 	mov	b,a
      000020 A3               [24]  142 	inc	dptr
      000021 E0               [24]  143 	movx	a,@dptr
      000022 45 F0            [12]  144 	orl	a,b
      000024 70 01            [24]  145 	jnz	00102$
                                    146 ;	free.c:56: return;
      000026 22               [24]  147 	ret
      000027                        148 00102$:
                                    149 ;	free.c:58: prev_free = 0;
      000027 90r00r05         [24]  150 	mov	dptr,#_free_prev_free_65536_41
      00002A E4               [12]  151 	clr	a
      00002B F0               [24]  152 	movx	@dptr,a
      00002C A3               [24]  153 	inc	dptr
      00002D F0               [24]  154 	movx	@dptr,a
                                    155 ;	free.c:59: for(h = __sdcc_heap_free, f = &__sdcc_heap_free; h && h < ptr; prev_free = h, f = &(h->next_free), h = h->next_free); // Find adjacent blocks in free list
      00002E 90r00r00         [24]  156 	mov	dptr,#___sdcc_heap_free
      000031 E0               [24]  157 	movx	a,@dptr
      000032 FB               [12]  158 	mov	r3,a
      000033 A3               [24]  159 	inc	dptr
      000034 E0               [24]  160 	movx	a,@dptr
      000035 FC               [12]  161 	mov	r4,a
      000036 90r00r03         [24]  162 	mov	dptr,#_free_h_65536_41
      000039 EB               [12]  163 	mov	a,r3
      00003A F0               [24]  164 	movx	@dptr,a
      00003B EC               [12]  165 	mov	a,r4
      00003C A3               [24]  166 	inc	dptr
      00003D F0               [24]  167 	movx	@dptr,a
      00003E 90r00r07         [24]  168 	mov	dptr,#_free_f_65536_41
      000041 74r00            [12]  169 	mov	a,#___sdcc_heap_free
      000043 F0               [24]  170 	movx	@dptr,a
      000044 74s00            [12]  171 	mov	a,#(___sdcc_heap_free >> 8)
      000046 A3               [24]  172 	inc	dptr
      000047 F0               [24]  173 	movx	@dptr,a
      000048                        174 00111$:
      000048 90r00r03         [24]  175 	mov	dptr,#_free_h_65536_41
      00004B E0               [24]  176 	movx	a,@dptr
      00004C FB               [12]  177 	mov	r3,a
      00004D A3               [24]  178 	inc	dptr
      00004E E0               [24]  179 	movx	a,@dptr
      00004F FC               [12]  180 	mov	r4,a
      000050 4B               [12]  181 	orl	a,r3
      000051 60 41            [24]  182 	jz	00103$
      000053 8B 01            [24]  183 	mov	ar1,r3
      000055 8C 02            [24]  184 	mov	ar2,r4
      000057 C0 03            [24]  185 	push	ar3
      000059 C0 04            [24]  186 	push	ar4
      00005B 8D 00            [24]  187 	mov	ar0,r5
      00005D 8E 04            [24]  188 	mov	ar4,r6
      00005F C3               [12]  189 	clr	c
      000060 E9               [12]  190 	mov	a,r1
      000061 98               [12]  191 	subb	a,r0
      000062 EA               [12]  192 	mov	a,r2
      000063 9C               [12]  193 	subb	a,r4
      000064 D0 04            [24]  194 	pop	ar4
      000066 D0 03            [24]  195 	pop	ar3
      000068 50 2A            [24]  196 	jnc	00103$
      00006A 90r00r05         [24]  197 	mov	dptr,#_free_prev_free_65536_41
      00006D EB               [12]  198 	mov	a,r3
      00006E F0               [24]  199 	movx	@dptr,a
      00006F EC               [12]  200 	mov	a,r4
      000070 A3               [24]  201 	inc	dptr
      000071 F0               [24]  202 	movx	@dptr,a
      000072 74 02            [12]  203 	mov	a,#0x02
      000074 2B               [12]  204 	add	a,r3
      000075 FB               [12]  205 	mov	r3,a
      000076 E4               [12]  206 	clr	a
      000077 3C               [12]  207 	addc	a,r4
      000078 FC               [12]  208 	mov	r4,a
      000079 90r00r07         [24]  209 	mov	dptr,#_free_f_65536_41
      00007C EB               [12]  210 	mov	a,r3
      00007D F0               [24]  211 	movx	@dptr,a
      00007E EC               [12]  212 	mov	a,r4
      00007F A3               [24]  213 	inc	dptr
      000080 F0               [24]  214 	movx	@dptr,a
      000081 8B 82            [24]  215 	mov	dpl,r3
      000083 8C 83            [24]  216 	mov	dph,r4
      000085 E0               [24]  217 	movx	a,@dptr
      000086 FB               [12]  218 	mov	r3,a
      000087 A3               [24]  219 	inc	dptr
      000088 E0               [24]  220 	movx	a,@dptr
      000089 FC               [12]  221 	mov	r4,a
      00008A 90r00r03         [24]  222 	mov	dptr,#_free_h_65536_41
      00008D EB               [12]  223 	mov	a,r3
      00008E F0               [24]  224 	movx	@dptr,a
      00008F EC               [12]  225 	mov	a,r4
      000090 A3               [24]  226 	inc	dptr
      000091 F0               [24]  227 	movx	@dptr,a
      000092 80 B4            [24]  228 	sjmp	00111$
      000094                        229 00103$:
                                    230 ;	free.c:60: next_free = h;
      000094 90r00r03         [24]  231 	mov	dptr,#_free_h_65536_41
      000097 E0               [24]  232 	movx	a,@dptr
      000098 FE               [12]  233 	mov	r6,a
      000099 A3               [24]  234 	inc	dptr
      00009A E0               [24]  235 	movx	a,@dptr
      00009B FF               [12]  236 	mov	r7,a
                                    237 ;	free.c:62: h = (void HEAPSPACE *)((char HEAPSPACE *)(ptr) - offsetof(struct header, next_free));
      00009C 90r00r00         [24]  238 	mov	dptr,#_free_ptr_65536_40
      00009F E0               [24]  239 	movx	a,@dptr
      0000A0 FB               [12]  240 	mov	r3,a
      0000A1 A3               [24]  241 	inc	dptr
      0000A2 E0               [24]  242 	movx	a,@dptr
      0000A3 FC               [12]  243 	mov	r4,a
      0000A4 A3               [24]  244 	inc	dptr
      0000A5 E0               [24]  245 	movx	a,@dptr
      0000A6 EB               [12]  246 	mov	a,r3
      0000A7 24 FE            [12]  247 	add	a,#0xfe
      0000A9 FB               [12]  248 	mov	r3,a
      0000AA EC               [12]  249 	mov	a,r4
      0000AB 34 FF            [12]  250 	addc	a,#0xff
      0000AD FC               [12]  251 	mov	r4,a
                                    252 ;	free.c:65: h->next_free = next_free;
      0000AE 74 02            [12]  253 	mov	a,#0x02
      0000B0 2B               [12]  254 	add	a,r3
      0000B1 FA               [12]  255 	mov	r2,a
      0000B2 E4               [12]  256 	clr	a
      0000B3 3C               [12]  257 	addc	a,r4
      0000B4 FD               [12]  258 	mov	r5,a
      0000B5 8A 82            [24]  259 	mov	dpl,r2
      0000B7 8D 83            [24]  260 	mov	dph,r5
      0000B9 EE               [12]  261 	mov	a,r6
      0000BA F0               [24]  262 	movx	@dptr,a
      0000BB EF               [12]  263 	mov	a,r7
      0000BC A3               [24]  264 	inc	dptr
      0000BD F0               [24]  265 	movx	@dptr,a
                                    266 ;	free.c:66: *f = h;
      0000BE 90r00r07         [24]  267 	mov	dptr,#_free_f_65536_41
      0000C1 E0               [24]  268 	movx	a,@dptr
      0000C2 F8               [12]  269 	mov	r0,a
      0000C3 A3               [24]  270 	inc	dptr
      0000C4 E0               [24]  271 	movx	a,@dptr
      0000C5 F9               [12]  272 	mov	r1,a
      0000C6 88 82            [24]  273 	mov	dpl,r0
      0000C8 89 83            [24]  274 	mov	dph,r1
      0000CA EB               [12]  275 	mov	a,r3
      0000CB F0               [24]  276 	movx	@dptr,a
      0000CC EC               [12]  277 	mov	a,r4
      0000CD A3               [24]  278 	inc	dptr
      0000CE F0               [24]  279 	movx	@dptr,a
                                    280 ;	free.c:68: if(next_free == h->next) // Merge with next block
      0000CF 8B 82            [24]  281 	mov	dpl,r3
      0000D1 8C 83            [24]  282 	mov	dph,r4
      0000D3 E0               [24]  283 	movx	a,@dptr
      0000D4 F8               [12]  284 	mov	r0,a
      0000D5 A3               [24]  285 	inc	dptr
      0000D6 E0               [24]  286 	movx	a,@dptr
      0000D7 F9               [12]  287 	mov	r1,a
      0000D8 EE               [12]  288 	mov	a,r6
      0000D9 B5 00 33         [24]  289 	cjne	a,ar0,00105$
      0000DC EF               [12]  290 	mov	a,r7
      0000DD B5 01 2F         [24]  291 	cjne	a,ar1,00105$
                                    292 ;	free.c:70: h->next_free = h->next->next_free;
      0000E0 88 82            [24]  293 	mov	dpl,r0
      0000E2 89 83            [24]  294 	mov	dph,r1
      0000E4 A3               [24]  295 	inc	dptr
      0000E5 A3               [24]  296 	inc	dptr
      0000E6 E0               [24]  297 	movx	a,@dptr
      0000E7 FE               [12]  298 	mov	r6,a
      0000E8 A3               [24]  299 	inc	dptr
      0000E9 E0               [24]  300 	movx	a,@dptr
      0000EA FF               [12]  301 	mov	r7,a
      0000EB 8A 82            [24]  302 	mov	dpl,r2
      0000ED 8D 83            [24]  303 	mov	dph,r5
      0000EF EE               [12]  304 	mov	a,r6
      0000F0 F0               [24]  305 	movx	@dptr,a
      0000F1 EF               [12]  306 	mov	a,r7
      0000F2 A3               [24]  307 	inc	dptr
      0000F3 F0               [24]  308 	movx	@dptr,a
                                    309 ;	free.c:71: h->next = h->next->next;
      0000F4 8B 82            [24]  310 	mov	dpl,r3
      0000F6 8C 83            [24]  311 	mov	dph,r4
      0000F8 E0               [24]  312 	movx	a,@dptr
      0000F9 FE               [12]  313 	mov	r6,a
      0000FA A3               [24]  314 	inc	dptr
      0000FB E0               [24]  315 	movx	a,@dptr
      0000FC FF               [12]  316 	mov	r7,a
      0000FD 8E 82            [24]  317 	mov	dpl,r6
      0000FF 8F 83            [24]  318 	mov	dph,r7
      000101 E0               [24]  319 	movx	a,@dptr
      000102 FE               [12]  320 	mov	r6,a
      000103 A3               [24]  321 	inc	dptr
      000104 E0               [24]  322 	movx	a,@dptr
      000105 FF               [12]  323 	mov	r7,a
      000106 8B 82            [24]  324 	mov	dpl,r3
      000108 8C 83            [24]  325 	mov	dph,r4
      00010A EE               [12]  326 	mov	a,r6
      00010B F0               [24]  327 	movx	@dptr,a
      00010C EF               [12]  328 	mov	a,r7
      00010D A3               [24]  329 	inc	dptr
      00010E F0               [24]  330 	movx	@dptr,a
      00010F                        331 00105$:
                                    332 ;	free.c:74: if (prev_free && prev_free->next == h) // Merge with previous block
      00010F 90r00r05         [24]  333 	mov	dptr,#_free_prev_free_65536_41
      000112 E0               [24]  334 	movx	a,@dptr
      000113 FE               [12]  335 	mov	r6,a
      000114 A3               [24]  336 	inc	dptr
      000115 E0               [24]  337 	movx	a,@dptr
      000116 FF               [12]  338 	mov	r7,a
      000117 4E               [12]  339 	orl	a,r6
      000118 60 3C            [24]  340 	jz	00113$
      00011A 8E 82            [24]  341 	mov	dpl,r6
      00011C 8F 83            [24]  342 	mov	dph,r7
      00011E E0               [24]  343 	movx	a,@dptr
      00011F F8               [12]  344 	mov	r0,a
      000120 A3               [24]  345 	inc	dptr
      000121 E0               [24]  346 	movx	a,@dptr
      000122 F9               [12]  347 	mov	r1,a
      000123 E8               [12]  348 	mov	a,r0
      000124 B5 03 2F         [24]  349 	cjne	a,ar3,00113$
      000127 E9               [12]  350 	mov	a,r1
      000128 B5 04 2B         [24]  351 	cjne	a,ar4,00113$
                                    352 ;	free.c:76: prev_free->next = h->next;
      00012B 8B 82            [24]  353 	mov	dpl,r3
      00012D 8C 83            [24]  354 	mov	dph,r4
      00012F E0               [24]  355 	movx	a,@dptr
      000130 FB               [12]  356 	mov	r3,a
      000131 A3               [24]  357 	inc	dptr
      000132 E0               [24]  358 	movx	a,@dptr
      000133 FC               [12]  359 	mov	r4,a
      000134 8E 82            [24]  360 	mov	dpl,r6
      000136 8F 83            [24]  361 	mov	dph,r7
      000138 EB               [12]  362 	mov	a,r3
      000139 F0               [24]  363 	movx	@dptr,a
      00013A EC               [12]  364 	mov	a,r4
      00013B A3               [24]  365 	inc	dptr
      00013C F0               [24]  366 	movx	@dptr,a
                                    367 ;	free.c:77: prev_free->next_free = h->next_free;
      00013D 74 02            [12]  368 	mov	a,#0x02
      00013F 2E               [12]  369 	add	a,r6
      000140 FE               [12]  370 	mov	r6,a
      000141 E4               [12]  371 	clr	a
      000142 3F               [12]  372 	addc	a,r7
      000143 FF               [12]  373 	mov	r7,a
      000144 8A 82            [24]  374 	mov	dpl,r2
      000146 8D 83            [24]  375 	mov	dph,r5
      000148 E0               [24]  376 	movx	a,@dptr
      000149 FA               [12]  377 	mov	r2,a
      00014A A3               [24]  378 	inc	dptr
      00014B E0               [24]  379 	movx	a,@dptr
      00014C FD               [12]  380 	mov	r5,a
      00014D 8E 82            [24]  381 	mov	dpl,r6
      00014F 8F 83            [24]  382 	mov	dph,r7
      000151 EA               [12]  383 	mov	a,r2
      000152 F0               [24]  384 	movx	@dptr,a
      000153 ED               [12]  385 	mov	a,r5
      000154 A3               [24]  386 	inc	dptr
      000155 F0               [24]  387 	movx	@dptr,a
      000156                        388 00113$:
                                    389 ;	free.c:79: }
      000156 22               [24]  390 	ret
                                    391 	.area CSEG    (CODE)
                                    392 	.area CONST   (CODE)
                                    393 	.area XINIT   (CODE)
                                    394 	.area CABS    (ABS,CODE)
