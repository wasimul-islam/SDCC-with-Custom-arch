                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtoc16
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbrtowc
                                     12 	.globl _mbrtoc16_PARM_4
                                     13 	.globl _mbrtoc16_PARM_3
                                     14 	.globl _mbrtoc16_PARM_2
                                     15 	.globl _mbrtoc16
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _mbrtoc16_sloc0_1_0:
      000000                         36 	.ds 3
      000003                         37 _mbrtoc16_sloc1_1_0:
      000003                         38 	.ds 3
                                     39 ;--------------------------------------------------------
                                     40 ; overlayable items in internal ram
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; uninitialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
      000000                         63 _mbrtoc16_PARM_2:
      000000                         64 	.ds 3
      000003                         65 _mbrtoc16_PARM_3:
      000003                         66 	.ds 2
      000005                         67 _mbrtoc16_PARM_4:
      000005                         68 	.ds 3
      000008                         69 _mbrtoc16_pc16_65536_15:
      000008                         70 	.ds 3
      00000B                         71 _mbrtoc16_codepoint_65536_16:
      00000B                         72 	.ds 4
      00000F                         73 _mbrtoc16_sps_65536_16:
      00000F                         74 	.ds 3
      000012                         75 _mbrtoc16_low_surrogate_65536_16:
      000012                         76 	.ds 2
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XABS    (ABS,XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; initialized external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XISEG   (XDATA)
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT0 (CODE)
                                     87 	.area GSINIT1 (CODE)
                                     88 	.area GSINIT2 (CODE)
                                     89 	.area GSINIT3 (CODE)
                                     90 	.area GSINIT4 (CODE)
                                     91 	.area GSINIT5 (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 	.area GSFINAL (CODE)
                                     94 	.area CSEG    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; global & static initialisations
                                     97 ;--------------------------------------------------------
                                     98 	.area HOME    (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 	.area GSFINAL (CODE)
                                    101 	.area GSINIT  (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; Home
                                    104 ;--------------------------------------------------------
                                    105 	.area HOME    (CODE)
                                    106 	.area HOME    (CODE)
                                    107 ;--------------------------------------------------------
                                    108 ; code
                                    109 ;--------------------------------------------------------
                                    110 	.area CSEG    (CODE)
                                    111 ;------------------------------------------------------------
                                    112 ;Allocation info for local variables in function 'mbrtoc16'
                                    113 ;------------------------------------------------------------
                                    114 ;sloc0                     Allocated with name '_mbrtoc16_sloc0_1_0'
                                    115 ;sloc1                     Allocated with name '_mbrtoc16_sloc1_1_0'
                                    116 ;s                         Allocated with name '_mbrtoc16_PARM_2'
                                    117 ;n                         Allocated with name '_mbrtoc16_PARM_3'
                                    118 ;ps                        Allocated with name '_mbrtoc16_PARM_4'
                                    119 ;pc16                      Allocated with name '_mbrtoc16_pc16_65536_15'
                                    120 ;codepoint                 Allocated with name '_mbrtoc16_codepoint_65536_16'
                                    121 ;ret                       Allocated with name '_mbrtoc16_ret_65536_16'
                                    122 ;sps                       Allocated with name '_mbrtoc16_sps_65536_16'
                                    123 ;low_surrogate             Allocated with name '_mbrtoc16_low_surrogate_65536_16'
                                    124 ;------------------------------------------------------------
                                    125 ;	mbrtoc16.c:34: size_t mbrtoc16(char16_t *restrict pc16, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    126 ;	-----------------------------------------
                                    127 ;	 function mbrtoc16
                                    128 ;	-----------------------------------------
      000000                        129 _mbrtoc16:
                           000007   130 	ar7 = 0x07
                           000006   131 	ar6 = 0x06
                           000005   132 	ar5 = 0x05
                           000004   133 	ar4 = 0x04
                           000003   134 	ar3 = 0x03
                           000002   135 	ar2 = 0x02
                           000001   136 	ar1 = 0x01
                           000000   137 	ar0 = 0x00
      000000 AF F0            [24]  138 	mov	r7,b
      000002 AE 83            [24]  139 	mov	r6,dph
      000004 E5 82            [12]  140 	mov	a,dpl
      000006 90r00r08         [24]  141 	mov	dptr,#_mbrtoc16_pc16_65536_15
      000009 F0               [24]  142 	movx	@dptr,a
      00000A EE               [12]  143 	mov	a,r6
      00000B A3               [24]  144 	inc	dptr
      00000C F0               [24]  145 	movx	@dptr,a
      00000D EF               [12]  146 	mov	a,r7
      00000E A3               [24]  147 	inc	dptr
      00000F F0               [24]  148 	movx	@dptr,a
                                    149 ;	mbrtoc16.c:41: if(!s)
      000010 90r00r00         [24]  150 	mov	dptr,#_mbrtoc16_PARM_2
      000013 E0               [24]  151 	movx	a,@dptr
      000014 FD               [12]  152 	mov	r5,a
      000015 A3               [24]  153 	inc	dptr
      000016 E0               [24]  154 	movx	a,@dptr
      000017 FE               [12]  155 	mov	r6,a
      000018 A3               [24]  156 	inc	dptr
      000019 E0               [24]  157 	movx	a,@dptr
      00001A FF               [12]  158 	mov	r7,a
      00001B 90r00r00         [24]  159 	mov	dptr,#_mbrtoc16_PARM_2
      00001E E0               [24]  160 	movx	a,@dptr
      00001F F5 F0            [12]  161 	mov	b,a
      000021 A3               [24]  162 	inc	dptr
      000022 E0               [24]  163 	movx	a,@dptr
      000023 45 F0            [12]  164 	orl	a,b
      000025 70 35            [24]  165 	jnz	00102$
                                    166 ;	mbrtoc16.c:42: return(mbrtoc16(0, "", 1, ps));
      000027 90r00r05         [24]  167 	mov	dptr,#_mbrtoc16_PARM_4
      00002A E0               [24]  168 	movx	a,@dptr
      00002B FA               [12]  169 	mov	r2,a
      00002C A3               [24]  170 	inc	dptr
      00002D E0               [24]  171 	movx	a,@dptr
      00002E FB               [12]  172 	mov	r3,a
      00002F A3               [24]  173 	inc	dptr
      000030 E0               [24]  174 	movx	a,@dptr
      000031 FC               [12]  175 	mov	r4,a
      000032 90r00r00         [24]  176 	mov	dptr,#_mbrtoc16_PARM_2
      000035 74r00            [12]  177 	mov	a,#___str_0
      000037 F0               [24]  178 	movx	@dptr,a
      000038 74s00            [12]  179 	mov	a,#(___str_0 >> 8)
      00003A A3               [24]  180 	inc	dptr
      00003B F0               [24]  181 	movx	@dptr,a
      00003C 74 80            [12]  182 	mov	a,#0x80
      00003E A3               [24]  183 	inc	dptr
      00003F F0               [24]  184 	movx	@dptr,a
      000040 90r00r03         [24]  185 	mov	dptr,#_mbrtoc16_PARM_3
      000043 23               [12]  186 	rl	a
      000044 F0               [24]  187 	movx	@dptr,a
      000045 E4               [12]  188 	clr	a
      000046 A3               [24]  189 	inc	dptr
      000047 F0               [24]  190 	movx	@dptr,a
      000048 90r00r05         [24]  191 	mov	dptr,#_mbrtoc16_PARM_4
      00004B EA               [12]  192 	mov	a,r2
      00004C F0               [24]  193 	movx	@dptr,a
      00004D EB               [12]  194 	mov	a,r3
      00004E A3               [24]  195 	inc	dptr
      00004F F0               [24]  196 	movx	@dptr,a
      000050 EC               [12]  197 	mov	a,r4
      000051 A3               [24]  198 	inc	dptr
      000052 F0               [24]  199 	movx	@dptr,a
      000053 90 00 00         [24]  200 	mov	dptr,#0x0000
      000056 75 F0 00         [24]  201 	mov	b,#0x00
      000059 02r00r00         [24]  202 	ljmp	_mbrtoc16
      00005C                        203 00102$:
                                    204 ;	mbrtoc16.c:44: if(!ps)
      00005C 90r00r05         [24]  205 	mov	dptr,#_mbrtoc16_PARM_4
      00005F E0               [24]  206 	movx	a,@dptr
      000060 F5 F0            [12]  207 	mov	b,a
      000062 A3               [24]  208 	inc	dptr
      000063 E0               [24]  209 	movx	a,@dptr
      000064 45 F0            [12]  210 	orl	a,b
      000066 70 0D            [24]  211 	jnz	00104$
                                    212 ;	mbrtoc16.c:45: ps = &sps;
      000068 90r00r05         [24]  213 	mov	dptr,#_mbrtoc16_PARM_4
      00006B 74r0F            [12]  214 	mov	a,#_mbrtoc16_sps_65536_16
      00006D F0               [24]  215 	movx	@dptr,a
      00006E 74s00            [12]  216 	mov	a,#(_mbrtoc16_sps_65536_16 >> 8)
      000070 A3               [24]  217 	inc	dptr
      000071 F0               [24]  218 	movx	@dptr,a
      000072 E4               [12]  219 	clr	a
      000073 A3               [24]  220 	inc	dptr
      000074 F0               [24]  221 	movx	@dptr,a
      000075                        222 00104$:
                                    223 ;	mbrtoc16.c:47: if(!ps->c[0] && (ps->c[1] || ps->c[2]))
      000075 90r00r05         [24]  224 	mov	dptr,#_mbrtoc16_PARM_4
      000078 E0               [24]  225 	movx	a,@dptr
      000079 FA               [12]  226 	mov	r2,a
      00007A A3               [24]  227 	inc	dptr
      00007B E0               [24]  228 	movx	a,@dptr
      00007C FB               [12]  229 	mov	r3,a
      00007D A3               [24]  230 	inc	dptr
      00007E E0               [24]  231 	movx	a,@dptr
      00007F FC               [12]  232 	mov	r4,a
      000080 8A 82            [24]  233 	mov	dpl,r2
      000082 8B 83            [24]  234 	mov	dph,r3
      000084 8C F0            [24]  235 	mov	b,r4
      000086 12r00r00         [24]  236 	lcall	__gptrget
      000089 60 03            [24]  237 	jz	00159$
      00008B 02r01r71         [24]  238 	ljmp	00108$
      00008E                        239 00159$:
      00008E C0 05            [24]  240 	push	ar5
      000090 C0 06            [24]  241 	push	ar6
      000092 C0 07            [24]  242 	push	ar7
      000094 74 01            [12]  243 	mov	a,#0x01
      000096 2A               [12]  244 	add	a,r2
      000097 F8               [12]  245 	mov	r0,a
      000098 E4               [12]  246 	clr	a
      000099 3B               [12]  247 	addc	a,r3
      00009A F9               [12]  248 	mov	r1,a
      00009B 8C 07            [24]  249 	mov	ar7,r4
      00009D 88 82            [24]  250 	mov	dpl,r0
      00009F 89 83            [24]  251 	mov	dph,r1
      0000A1 8F F0            [24]  252 	mov	b,r7
      0000A3 12r00r00         [24]  253 	lcall	__gptrget
      0000A6 D0 07            [24]  254 	pop	ar7
      0000A8 D0 06            [24]  255 	pop	ar6
      0000AA D0 05            [24]  256 	pop	ar5
      0000AC 70 15            [24]  257 	jnz	00107$
      0000AE 74 02            [12]  258 	mov	a,#0x02
      0000B0 2A               [12]  259 	add	a,r2
      0000B1 FA               [12]  260 	mov	r2,a
      0000B2 E4               [12]  261 	clr	a
      0000B3 3B               [12]  262 	addc	a,r3
      0000B4 FB               [12]  263 	mov	r3,a
      0000B5 8A 82            [24]  264 	mov	dpl,r2
      0000B7 8B 83            [24]  265 	mov	dph,r3
      0000B9 8C F0            [24]  266 	mov	b,r4
      0000BB 12r00r00         [24]  267 	lcall	__gptrget
      0000BE 70 03            [24]  268 	jnz	00161$
      0000C0 02r01r71         [24]  269 	ljmp	00108$
      0000C3                        270 00161$:
      0000C3                        271 00107$:
                                    272 ;	mbrtoc16.c:49: if(pc16)
      0000C3 90r00r08         [24]  273 	mov	dptr,#_mbrtoc16_pc16_65536_15
      0000C6 E0               [24]  274 	movx	a,@dptr
      0000C7 F5*00            [12]  275 	mov	_mbrtoc16_sloc0_1_0,a
      0000C9 A3               [24]  276 	inc	dptr
      0000CA E0               [24]  277 	movx	a,@dptr
      0000CB F5*01            [12]  278 	mov	(_mbrtoc16_sloc0_1_0 + 1),a
      0000CD A3               [24]  279 	inc	dptr
      0000CE E0               [24]  280 	movx	a,@dptr
      0000CF F5*02            [12]  281 	mov	(_mbrtoc16_sloc0_1_0 + 2),a
      0000D1 90r00r08         [24]  282 	mov	dptr,#_mbrtoc16_pc16_65536_15
      0000D4 E0               [24]  283 	movx	a,@dptr
      0000D5 F5 F0            [12]  284 	mov	b,a
      0000D7 A3               [24]  285 	inc	dptr
      0000D8 E0               [24]  286 	movx	a,@dptr
      0000D9 45 F0            [12]  287 	orl	a,b
      0000DB 60 53            [24]  288 	jz	00106$
                                    289 ;	mbrtoc16.c:50: *pc16 = ps->c[1] + (ps->c[2] << 8);
      0000DD 90r00r05         [24]  290 	mov	dptr,#_mbrtoc16_PARM_4
      0000E0 E0               [24]  291 	movx	a,@dptr
      0000E1 F5*03            [12]  292 	mov	_mbrtoc16_sloc1_1_0,a
      0000E3 A3               [24]  293 	inc	dptr
      0000E4 E0               [24]  294 	movx	a,@dptr
      0000E5 F5*04            [12]  295 	mov	(_mbrtoc16_sloc1_1_0 + 1),a
      0000E7 A3               [24]  296 	inc	dptr
      0000E8 E0               [24]  297 	movx	a,@dptr
      0000E9 F5*05            [12]  298 	mov	(_mbrtoc16_sloc1_1_0 + 2),a
      0000EB 74 01            [12]  299 	mov	a,#0x01
      0000ED 25*03            [12]  300 	add	a,_mbrtoc16_sloc1_1_0
      0000EF FA               [12]  301 	mov	r2,a
      0000F0 E4               [12]  302 	clr	a
      0000F1 35*04            [12]  303 	addc	a,(_mbrtoc16_sloc1_1_0 + 1)
      0000F3 FB               [12]  304 	mov	r3,a
      0000F4 AC*05            [24]  305 	mov	r4,(_mbrtoc16_sloc1_1_0 + 2)
      0000F6 8A 82            [24]  306 	mov	dpl,r2
      0000F8 8B 83            [24]  307 	mov	dph,r3
      0000FA 8C F0            [24]  308 	mov	b,r4
      0000FC 12r00r00         [24]  309 	lcall	__gptrget
      0000FF FA               [12]  310 	mov	r2,a
      000100 7C 00            [12]  311 	mov	r4,#0x00
      000102 74 02            [12]  312 	mov	a,#0x02
      000104 25*03            [12]  313 	add	a,_mbrtoc16_sloc1_1_0
      000106 F8               [12]  314 	mov	r0,a
      000107 E4               [12]  315 	clr	a
      000108 35*04            [12]  316 	addc	a,(_mbrtoc16_sloc1_1_0 + 1)
      00010A F9               [12]  317 	mov	r1,a
      00010B AB*05            [24]  318 	mov	r3,(_mbrtoc16_sloc1_1_0 + 2)
      00010D 88 82            [24]  319 	mov	dpl,r0
      00010F 89 83            [24]  320 	mov	dph,r1
      000111 8B F0            [24]  321 	mov	b,r3
      000113 12r00r00         [24]  322 	lcall	__gptrget
      000116 FB               [12]  323 	mov	r3,a
      000117 E4               [12]  324 	clr	a
      000118 F8               [12]  325 	mov	r0,a
      000119 2A               [12]  326 	add	a,r2
      00011A FA               [12]  327 	mov	r2,a
      00011B EB               [12]  328 	mov	a,r3
      00011C 3C               [12]  329 	addc	a,r4
      00011D FC               [12]  330 	mov	r4,a
      00011E 85*00 82         [24]  331 	mov	dpl,_mbrtoc16_sloc0_1_0
      000121 85*01 83         [24]  332 	mov	dph,(_mbrtoc16_sloc0_1_0 + 1)
      000124 85*02 F0         [24]  333 	mov	b,(_mbrtoc16_sloc0_1_0 + 2)
      000127 EA               [12]  334 	mov	a,r2
      000128 12r00r00         [24]  335 	lcall	__gptrput
      00012B A3               [24]  336 	inc	dptr
      00012C EC               [12]  337 	mov	a,r4
      00012D 12r00r00         [24]  338 	lcall	__gptrput
      000130                        339 00106$:
                                    340 ;	mbrtoc16.c:51: ps->c[1] = ps->c[2] = 0;
      000130 90r00r05         [24]  341 	mov	dptr,#_mbrtoc16_PARM_4
      000133 E0               [24]  342 	movx	a,@dptr
      000134 F5*03            [12]  343 	mov	_mbrtoc16_sloc1_1_0,a
      000136 A3               [24]  344 	inc	dptr
      000137 E0               [24]  345 	movx	a,@dptr
      000138 F5*04            [12]  346 	mov	(_mbrtoc16_sloc1_1_0 + 1),a
      00013A A3               [24]  347 	inc	dptr
      00013B E0               [24]  348 	movx	a,@dptr
      00013C F5*05            [12]  349 	mov	(_mbrtoc16_sloc1_1_0 + 2),a
      00013E 74 01            [12]  350 	mov	a,#0x01
      000140 25*03            [12]  351 	add	a,_mbrtoc16_sloc1_1_0
      000142 F5*00            [12]  352 	mov	_mbrtoc16_sloc0_1_0,a
      000144 E4               [12]  353 	clr	a
      000145 35*04            [12]  354 	addc	a,(_mbrtoc16_sloc1_1_0 + 1)
      000147 F5*01            [12]  355 	mov	(_mbrtoc16_sloc0_1_0 + 1),a
      000149 85*05*02         [24]  356 	mov	(_mbrtoc16_sloc0_1_0 + 2),(_mbrtoc16_sloc1_1_0 + 2)
      00014C 74 02            [12]  357 	mov	a,#0x02
      00014E 25*03            [12]  358 	add	a,_mbrtoc16_sloc1_1_0
      000150 FA               [12]  359 	mov	r2,a
      000151 E4               [12]  360 	clr	a
      000152 35*04            [12]  361 	addc	a,(_mbrtoc16_sloc1_1_0 + 1)
      000154 FB               [12]  362 	mov	r3,a
      000155 AC*05            [24]  363 	mov	r4,(_mbrtoc16_sloc1_1_0 + 2)
      000157 8A 82            [24]  364 	mov	dpl,r2
      000159 8B 83            [24]  365 	mov	dph,r3
      00015B 8C F0            [24]  366 	mov	b,r4
      00015D E4               [12]  367 	clr	a
      00015E 12r00r00         [24]  368 	lcall	__gptrput
      000161 85*00 82         [24]  369 	mov	dpl,_mbrtoc16_sloc0_1_0
      000164 85*01 83         [24]  370 	mov	dph,(_mbrtoc16_sloc0_1_0 + 1)
      000167 85*02 F0         [24]  371 	mov	b,(_mbrtoc16_sloc0_1_0 + 2)
      00016A 12r00r00         [24]  372 	lcall	__gptrput
                                    373 ;	mbrtoc16.c:52: return(-3);
      00016D 90 FF FD         [24]  374 	mov	dptr,#0xfffd
      000170 22               [24]  375 	ret
      000171                        376 00108$:
                                    377 ;	mbrtoc16.c:55: ret = mbrtowc(&codepoint, s, n, ps);
      000171 90r00r03         [24]  378 	mov	dptr,#_mbrtoc16_PARM_3
      000174 E0               [24]  379 	movx	a,@dptr
      000175 FB               [12]  380 	mov	r3,a
      000176 A3               [24]  381 	inc	dptr
      000177 E0               [24]  382 	movx	a,@dptr
      000178 FC               [12]  383 	mov	r4,a
      000179 90r00r05         [24]  384 	mov	dptr,#_mbrtoc16_PARM_4
      00017C E0               [24]  385 	movx	a,@dptr
      00017D F8               [12]  386 	mov	r0,a
      00017E A3               [24]  387 	inc	dptr
      00017F E0               [24]  388 	movx	a,@dptr
      000180 F9               [12]  389 	mov	r1,a
      000181 A3               [24]  390 	inc	dptr
      000182 E0               [24]  391 	movx	a,@dptr
      000183 FA               [12]  392 	mov	r2,a
      000184 90r00r00         [24]  393 	mov	dptr,#_mbrtowc_PARM_2
      000187 ED               [12]  394 	mov	a,r5
      000188 F0               [24]  395 	movx	@dptr,a
      000189 EE               [12]  396 	mov	a,r6
      00018A A3               [24]  397 	inc	dptr
      00018B F0               [24]  398 	movx	@dptr,a
      00018C EF               [12]  399 	mov	a,r7
      00018D A3               [24]  400 	inc	dptr
      00018E F0               [24]  401 	movx	@dptr,a
      00018F 90r00r00         [24]  402 	mov	dptr,#_mbrtowc_PARM_3
      000192 EB               [12]  403 	mov	a,r3
      000193 F0               [24]  404 	movx	@dptr,a
      000194 EC               [12]  405 	mov	a,r4
      000195 A3               [24]  406 	inc	dptr
      000196 F0               [24]  407 	movx	@dptr,a
      000197 90r00r00         [24]  408 	mov	dptr,#_mbrtowc_PARM_4
      00019A E8               [12]  409 	mov	a,r0
      00019B F0               [24]  410 	movx	@dptr,a
      00019C E9               [12]  411 	mov	a,r1
      00019D A3               [24]  412 	inc	dptr
      00019E F0               [24]  413 	movx	@dptr,a
      00019F EA               [12]  414 	mov	a,r2
      0001A0 A3               [24]  415 	inc	dptr
      0001A1 F0               [24]  416 	movx	@dptr,a
      0001A2 90r00r0B         [24]  417 	mov	dptr,#_mbrtoc16_codepoint_65536_16
      0001A5 75 F0 00         [24]  418 	mov	b,#0x00
      0001A8 12r00r00         [24]  419 	lcall	_mbrtowc
      0001AB AE 82            [24]  420 	mov	r6,dpl
      0001AD AF 83            [24]  421 	mov	r7,dph
                                    422 ;	mbrtoc16.c:57: if(ret > MB_LEN_MAX)
      0001AF C3               [12]  423 	clr	c
      0001B0 74 04            [12]  424 	mov	a,#0x04
      0001B2 9E               [12]  425 	subb	a,r6
      0001B3 E4               [12]  426 	clr	a
      0001B4 9F               [12]  427 	subb	a,r7
      0001B5 50 05            [24]  428 	jnc	00112$
                                    429 ;	mbrtoc16.c:58: return(ret);
      0001B7 8E 82            [24]  430 	mov	dpl,r6
      0001B9 8F 83            [24]  431 	mov	dph,r7
      0001BB 22               [24]  432 	ret
      0001BC                        433 00112$:
                                    434 ;	mbrtoc16.c:60: if (codepoint <= 0xffff) // Basic multilingual plane
      0001BC 90r00r0B         [24]  435 	mov	dptr,#_mbrtoc16_codepoint_65536_16
      0001BF E0               [24]  436 	movx	a,@dptr
      0001C0 FA               [12]  437 	mov	r2,a
      0001C1 A3               [24]  438 	inc	dptr
      0001C2 E0               [24]  439 	movx	a,@dptr
      0001C3 FB               [12]  440 	mov	r3,a
      0001C4 A3               [24]  441 	inc	dptr
      0001C5 E0               [24]  442 	movx	a,@dptr
      0001C6 FC               [12]  443 	mov	r4,a
      0001C7 A3               [24]  444 	inc	dptr
      0001C8 E0               [24]  445 	movx	a,@dptr
      0001C9 FD               [12]  446 	mov	r5,a
      0001CA C3               [12]  447 	clr	c
      0001CB 74 FF            [12]  448 	mov	a,#0xff
      0001CD 9A               [12]  449 	subb	a,r2
      0001CE 74 FF            [12]  450 	mov	a,#0xff
      0001D0 9B               [12]  451 	subb	a,r3
      0001D1 E4               [12]  452 	clr	a
      0001D2 9C               [12]  453 	subb	a,r4
      0001D3 E4               [12]  454 	clr	a
      0001D4 9D               [12]  455 	subb	a,r5
      0001D5 40 35            [24]  456 	jc	00116$
                                    457 ;	mbrtoc16.c:62: if(pc16)
      0001D7 90r00r08         [24]  458 	mov	dptr,#_mbrtoc16_pc16_65536_15
      0001DA E0               [24]  459 	movx	a,@dptr
      0001DB F5*03            [12]  460 	mov	_mbrtoc16_sloc1_1_0,a
      0001DD A3               [24]  461 	inc	dptr
      0001DE E0               [24]  462 	movx	a,@dptr
      0001DF F5*04            [12]  463 	mov	(_mbrtoc16_sloc1_1_0 + 1),a
      0001E1 A3               [24]  464 	inc	dptr
      0001E2 E0               [24]  465 	movx	a,@dptr
      0001E3 F5*05            [12]  466 	mov	(_mbrtoc16_sloc1_1_0 + 2),a
      0001E5 90r00r08         [24]  467 	mov	dptr,#_mbrtoc16_pc16_65536_15
      0001E8 E0               [24]  468 	movx	a,@dptr
      0001E9 F5 F0            [12]  469 	mov	b,a
      0001EB A3               [24]  470 	inc	dptr
      0001EC E0               [24]  471 	movx	a,@dptr
      0001ED 45 F0            [12]  472 	orl	a,b
      0001EF 60 16            [24]  473 	jz	00114$
                                    474 ;	mbrtoc16.c:63: *pc16 = codepoint;
      0001F1 8A 00            [24]  475 	mov	ar0,r2
      0001F3 8B 01            [24]  476 	mov	ar1,r3
      0001F5 85*03 82         [24]  477 	mov	dpl,_mbrtoc16_sloc1_1_0
      0001F8 85*04 83         [24]  478 	mov	dph,(_mbrtoc16_sloc1_1_0 + 1)
      0001FB 85*05 F0         [24]  479 	mov	b,(_mbrtoc16_sloc1_1_0 + 2)
      0001FE E8               [12]  480 	mov	a,r0
      0001FF 12r00r00         [24]  481 	lcall	__gptrput
      000202 A3               [24]  482 	inc	dptr
      000203 E9               [12]  483 	mov	a,r1
      000204 12r00r00         [24]  484 	lcall	__gptrput
      000207                        485 00114$:
                                    486 ;	mbrtoc16.c:64: return(ret);
      000207 8E 82            [24]  487 	mov	dpl,r6
      000209 8F 83            [24]  488 	mov	dph,r7
      00020B 22               [24]  489 	ret
      00020C                        490 00116$:
                                    491 ;	mbrtoc16.c:67: codepoint -= 0x100000;
      00020C EC               [12]  492 	mov	a,r4
      00020D 24 F0            [12]  493 	add	a,#0xf0
      00020F FC               [12]  494 	mov	r4,a
      000210 ED               [12]  495 	mov	a,r5
      000211 34 FF            [12]  496 	addc	a,#0xff
      000213 FD               [12]  497 	mov	r5,a
      000214 90r00r0B         [24]  498 	mov	dptr,#_mbrtoc16_codepoint_65536_16
      000217 EA               [12]  499 	mov	a,r2
      000218 F0               [24]  500 	movx	@dptr,a
      000219 EB               [12]  501 	mov	a,r3
      00021A A3               [24]  502 	inc	dptr
      00021B F0               [24]  503 	movx	@dptr,a
      00021C EC               [12]  504 	mov	a,r4
      00021D A3               [24]  505 	inc	dptr
      00021E F0               [24]  506 	movx	@dptr,a
      00021F ED               [12]  507 	mov	a,r5
      000220 A3               [24]  508 	inc	dptr
      000221 F0               [24]  509 	movx	@dptr,a
                                    510 ;	mbrtoc16.c:68: if(pc16)
      000222 90r00r08         [24]  511 	mov	dptr,#_mbrtoc16_pc16_65536_15
      000225 E0               [24]  512 	movx	a,@dptr
      000226 FB               [12]  513 	mov	r3,a
      000227 A3               [24]  514 	inc	dptr
      000228 E0               [24]  515 	movx	a,@dptr
      000229 FC               [12]  516 	mov	r4,a
      00022A A3               [24]  517 	inc	dptr
      00022B E0               [24]  518 	movx	a,@dptr
      00022C FD               [12]  519 	mov	r5,a
      00022D 90r00r08         [24]  520 	mov	dptr,#_mbrtoc16_pc16_65536_15
      000230 E0               [24]  521 	movx	a,@dptr
      000231 F5 F0            [12]  522 	mov	b,a
      000233 A3               [24]  523 	inc	dptr
      000234 E0               [24]  524 	movx	a,@dptr
      000235 45 F0            [12]  525 	orl	a,b
      000237 60 46            [24]  526 	jz	00118$
                                    527 ;	mbrtoc16.c:69: *pc16 = ((codepoint >> 10) & 0x3ff) + 0xd800;
      000239 C0 06            [24]  528 	push	ar6
      00023B C0 07            [24]  529 	push	ar7
      00023D 90r00r0B         [24]  530 	mov	dptr,#_mbrtoc16_codepoint_65536_16
      000240 E0               [24]  531 	movx	a,@dptr
      000241 A3               [24]  532 	inc	dptr
      000242 E0               [24]  533 	movx	a,@dptr
      000243 F9               [12]  534 	mov	r1,a
      000244 A3               [24]  535 	inc	dptr
      000245 E0               [24]  536 	movx	a,@dptr
      000246 FA               [12]  537 	mov	r2,a
      000247 A3               [24]  538 	inc	dptr
      000248 E0               [24]  539 	movx	a,@dptr
      000249 FF               [12]  540 	mov	r7,a
      00024A 89 00            [24]  541 	mov	ar0,r1
      00024C EA               [12]  542 	mov	a,r2
      00024D C3               [12]  543 	clr	c
      00024E 13               [12]  544 	rrc	a
      00024F C8               [12]  545 	xch	a,r0
      000250 13               [12]  546 	rrc	a
      000251 C8               [12]  547 	xch	a,r0
      000252 C3               [12]  548 	clr	c
      000253 13               [12]  549 	rrc	a
      000254 C8               [12]  550 	xch	a,r0
      000255 13               [12]  551 	rrc	a
      000256 C8               [12]  552 	xch	a,r0
      000257 F9               [12]  553 	mov	r1,a
      000258 EF               [12]  554 	mov	a,r7
      000259 03               [12]  555 	rr	a
      00025A 03               [12]  556 	rr	a
      00025B 54 C0            [12]  557 	anl	a,#0xc0
      00025D 49               [12]  558 	orl	a,r1
      00025E F9               [12]  559 	mov	r1,a
      00025F EF               [12]  560 	mov	a,r7
      000260 03               [12]  561 	rr	a
      000261 03               [12]  562 	rr	a
      000262 54 3F            [12]  563 	anl	a,#0x3f
      000264 FA               [12]  564 	mov	r2,a
      000265 53 01 03         [24]  565 	anl	ar1,#0x03
      000268 74 D8            [12]  566 	mov	a,#0xd8
      00026A 29               [12]  567 	add	a,r1
      00026B F9               [12]  568 	mov	r1,a
      00026C 8B 82            [24]  569 	mov	dpl,r3
      00026E 8C 83            [24]  570 	mov	dph,r4
      000270 8D F0            [24]  571 	mov	b,r5
      000272 E8               [12]  572 	mov	a,r0
      000273 12r00r00         [24]  573 	lcall	__gptrput
      000276 A3               [24]  574 	inc	dptr
      000277 E9               [12]  575 	mov	a,r1
      000278 12r00r00         [24]  576 	lcall	__gptrput
                                    577 ;	mbrtoc16.c:75: return(ret);
      00027B D0 07            [24]  578 	pop	ar7
      00027D D0 06            [24]  579 	pop	ar6
                                    580 ;	mbrtoc16.c:69: *pc16 = ((codepoint >> 10) & 0x3ff) + 0xd800;
      00027F                        581 00118$:
                                    582 ;	mbrtoc16.c:70: low_surrogate = (codepoint & 0x3ff) + 0xdc00;
      00027F 90r00r0B         [24]  583 	mov	dptr,#_mbrtoc16_codepoint_65536_16
      000282 E0               [24]  584 	movx	a,@dptr
      000283 FA               [12]  585 	mov	r2,a
      000284 A3               [24]  586 	inc	dptr
      000285 E0               [24]  587 	movx	a,@dptr
      000286 FB               [12]  588 	mov	r3,a
      000287 A3               [24]  589 	inc	dptr
      000288 E0               [24]  590 	movx	a,@dptr
      000289 A3               [24]  591 	inc	dptr
      00028A E0               [24]  592 	movx	a,@dptr
      00028B 53 03 03         [24]  593 	anl	ar3,#0x03
      00028E 90r00r12         [24]  594 	mov	dptr,#_mbrtoc16_low_surrogate_65536_16
      000291 EA               [12]  595 	mov	a,r2
      000292 F0               [24]  596 	movx	@dptr,a
      000293 74 DC            [12]  597 	mov	a,#0xdc
      000295 2B               [12]  598 	add	a,r3
      000296 A3               [24]  599 	inc	dptr
      000297 F0               [24]  600 	movx	@dptr,a
                                    601 ;	mbrtoc16.c:71: ps->c[0] = 0;
      000298 90r00r05         [24]  602 	mov	dptr,#_mbrtoc16_PARM_4
      00029B E0               [24]  603 	movx	a,@dptr
      00029C FB               [12]  604 	mov	r3,a
      00029D A3               [24]  605 	inc	dptr
      00029E E0               [24]  606 	movx	a,@dptr
      00029F FC               [12]  607 	mov	r4,a
      0002A0 A3               [24]  608 	inc	dptr
      0002A1 E0               [24]  609 	movx	a,@dptr
      0002A2 FD               [12]  610 	mov	r5,a
      0002A3 8B 82            [24]  611 	mov	dpl,r3
      0002A5 8C 83            [24]  612 	mov	dph,r4
      0002A7 8D F0            [24]  613 	mov	b,r5
      0002A9 E4               [12]  614 	clr	a
      0002AA 12r00r00         [24]  615 	lcall	__gptrput
                                    616 ;	mbrtoc16.c:72: ps->c[1] = low_surrogate & 0xff;
      0002AD 04               [12]  617 	inc	a
      0002AE 2B               [12]  618 	add	a,r3
      0002AF F5*03            [12]  619 	mov	_mbrtoc16_sloc1_1_0,a
      0002B1 E4               [12]  620 	clr	a
      0002B2 3C               [12]  621 	addc	a,r4
      0002B3 F5*04            [12]  622 	mov	(_mbrtoc16_sloc1_1_0 + 1),a
      0002B5 8D*05            [24]  623 	mov	(_mbrtoc16_sloc1_1_0 + 2),r5
      0002B7 90r00r12         [24]  624 	mov	dptr,#_mbrtoc16_low_surrogate_65536_16
      0002BA E0               [24]  625 	movx	a,@dptr
      0002BB F9               [12]  626 	mov	r1,a
      0002BC A3               [24]  627 	inc	dptr
      0002BD E0               [24]  628 	movx	a,@dptr
      0002BE FA               [12]  629 	mov	r2,a
      0002BF 89 00            [24]  630 	mov	ar0,r1
      0002C1 85*03 82         [24]  631 	mov	dpl,_mbrtoc16_sloc1_1_0
      0002C4 85*04 83         [24]  632 	mov	dph,(_mbrtoc16_sloc1_1_0 + 1)
      0002C7 85*05 F0         [24]  633 	mov	b,(_mbrtoc16_sloc1_1_0 + 2)
      0002CA E8               [12]  634 	mov	a,r0
      0002CB 12r00r00         [24]  635 	lcall	__gptrput
                                    636 ;	mbrtoc16.c:73: ps->c[2] = low_surrogate >> 8;
      0002CE 74 02            [12]  637 	mov	a,#0x02
      0002D0 2B               [12]  638 	add	a,r3
      0002D1 FB               [12]  639 	mov	r3,a
      0002D2 E4               [12]  640 	clr	a
      0002D3 3C               [12]  641 	addc	a,r4
      0002D4 FC               [12]  642 	mov	r4,a
      0002D5 8A 01            [24]  643 	mov	ar1,r2
      0002D7 8B 82            [24]  644 	mov	dpl,r3
      0002D9 8C 83            [24]  645 	mov	dph,r4
      0002DB 8D F0            [24]  646 	mov	b,r5
      0002DD E9               [12]  647 	mov	a,r1
      0002DE 12r00r00         [24]  648 	lcall	__gptrput
                                    649 ;	mbrtoc16.c:75: return(ret);
      0002E1 8E 82            [24]  650 	mov	dpl,r6
      0002E3 8F 83            [24]  651 	mov	dph,r7
                                    652 ;	mbrtoc16.c:76: }
      0002E5 22               [24]  653 	ret
                                    654 	.area CSEG    (CODE)
                                    655 	.area CONST   (CODE)
                                    656 	.area CONST   (CODE)
      000000                        657 ___str_0:
      000000 00                     658 	.db 0x00
                                    659 	.area CSEG    (CODE)
                                    660 	.area XINIT   (CODE)
                                    661 	.area CABS    (ABS,CODE)
