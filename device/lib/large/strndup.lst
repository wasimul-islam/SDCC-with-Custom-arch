                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strndup
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl ___memcpy
                                     13 	.globl _strlen
                                     14 	.globl _strndup_PARM_2
                                     15 	.globl _strndup
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _strndup_sloc0_1_0:
      000000                         36 	.ds 3
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
      000000                         61 _strndup_PARM_2:
      000000                         62 	.ds 2
      000002                         63 _strndup_s_65536_64:
      000002                         64 	.ds 3
      000005                         65 _strndup_l_65536_65:
      000005                         66 	.ds 2
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; initialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'strndup'
                                    103 ;------------------------------------------------------------
                                    104 ;sloc0                     Allocated with name '_strndup_sloc0_1_0'
                                    105 ;n                         Allocated with name '_strndup_PARM_2'
                                    106 ;s                         Allocated with name '_strndup_s_65536_64'
                                    107 ;l                         Allocated with name '_strndup_l_65536_65'
                                    108 ;r                         Allocated with name '_strndup_r_65537_66'
                                    109 ;------------------------------------------------------------
                                    110 ;	strndup.c:33: char *strndup (const char *s, size_t n)
                                    111 ;	-----------------------------------------
                                    112 ;	 function strndup
                                    113 ;	-----------------------------------------
      000000                        114 _strndup:
                           000007   115 	ar7 = 0x07
                           000006   116 	ar6 = 0x06
                           000005   117 	ar5 = 0x05
                           000004   118 	ar4 = 0x04
                           000003   119 	ar3 = 0x03
                           000002   120 	ar2 = 0x02
                           000001   121 	ar1 = 0x01
                           000000   122 	ar0 = 0x00
      000000 AF F0            [24]  123 	mov	r7,b
      000002 AE 83            [24]  124 	mov	r6,dph
      000004 E5 82            [12]  125 	mov	a,dpl
      000006 90r00r02         [24]  126 	mov	dptr,#_strndup_s_65536_64
      000009 F0               [24]  127 	movx	@dptr,a
      00000A EE               [12]  128 	mov	a,r6
      00000B A3               [24]  129 	inc	dptr
      00000C F0               [24]  130 	movx	@dptr,a
      00000D EF               [12]  131 	mov	a,r7
      00000E A3               [24]  132 	inc	dptr
      00000F F0               [24]  133 	movx	@dptr,a
                                    134 ;	strndup.c:35: size_t l = strlen (s);
      000010 90r00r02         [24]  135 	mov	dptr,#_strndup_s_65536_64
      000013 E0               [24]  136 	movx	a,@dptr
      000014 FD               [12]  137 	mov	r5,a
      000015 A3               [24]  138 	inc	dptr
      000016 E0               [24]  139 	movx	a,@dptr
      000017 FE               [12]  140 	mov	r6,a
      000018 A3               [24]  141 	inc	dptr
      000019 E0               [24]  142 	movx	a,@dptr
      00001A FF               [12]  143 	mov	r7,a
      00001B 8D 82            [24]  144 	mov	dpl,r5
      00001D 8E 83            [24]  145 	mov	dph,r6
      00001F 8F F0            [24]  146 	mov	b,r7
      000021 12r00r00         [24]  147 	lcall	_strlen
      000024 AE 82            [24]  148 	mov	r6,dpl
      000026 AF 83            [24]  149 	mov	r7,dph
      000028 90r00r05         [24]  150 	mov	dptr,#_strndup_l_65536_65
      00002B EE               [12]  151 	mov	a,r6
      00002C F0               [24]  152 	movx	@dptr,a
      00002D EF               [12]  153 	mov	a,r7
      00002E A3               [24]  154 	inc	dptr
      00002F F0               [24]  155 	movx	@dptr,a
                                    156 ;	strndup.c:36: if (l > n)
      000030 90r00r00         [24]  157 	mov	dptr,#_strndup_PARM_2
      000033 E0               [24]  158 	movx	a,@dptr
      000034 FC               [12]  159 	mov	r4,a
      000035 A3               [24]  160 	inc	dptr
      000036 E0               [24]  161 	movx	a,@dptr
      000037 FD               [12]  162 	mov	r5,a
      000038 C3               [12]  163 	clr	c
      000039 EC               [12]  164 	mov	a,r4
      00003A 9E               [12]  165 	subb	a,r6
      00003B ED               [12]  166 	mov	a,r5
      00003C 9F               [12]  167 	subb	a,r7
      00003D 50 08            [24]  168 	jnc	00102$
                                    169 ;	strndup.c:37: l = n;
      00003F 90r00r05         [24]  170 	mov	dptr,#_strndup_l_65536_65
      000042 EC               [12]  171 	mov	a,r4
      000043 F0               [24]  172 	movx	@dptr,a
      000044 ED               [12]  173 	mov	a,r5
      000045 A3               [24]  174 	inc	dptr
      000046 F0               [24]  175 	movx	@dptr,a
      000047                        176 00102$:
                                    177 ;	strndup.c:38: char *r = malloc (l + 1);
      000047 90r00r05         [24]  178 	mov	dptr,#_strndup_l_65536_65
      00004A E0               [24]  179 	movx	a,@dptr
      00004B FE               [12]  180 	mov	r6,a
      00004C A3               [24]  181 	inc	dptr
      00004D E0               [24]  182 	movx	a,@dptr
      00004E FF               [12]  183 	mov	r7,a
      00004F 74 01            [12]  184 	mov	a,#0x01
      000051 2E               [12]  185 	add	a,r6
      000052 FC               [12]  186 	mov	r4,a
      000053 E4               [12]  187 	clr	a
      000054 3F               [12]  188 	addc	a,r7
      000055 FD               [12]  189 	mov	r5,a
      000056 8C 82            [24]  190 	mov	dpl,r4
      000058 8D 83            [24]  191 	mov	dph,r5
      00005A C0 07            [24]  192 	push	ar7
      00005C C0 06            [24]  193 	push	ar6
      00005E 12r00r00         [24]  194 	lcall	_malloc
      000061 AC 82            [24]  195 	mov	r4,dpl
      000063 AD 83            [24]  196 	mov	r5,dph
      000065 D0 06            [24]  197 	pop	ar6
      000067 D0 07            [24]  198 	pop	ar7
      000069 8D 03            [24]  199 	mov	ar3,r5
      00006B 7D 00            [12]  200 	mov	r5,#0x00
                                    201 ;	strndup.c:39: if (r)
      00006D EC               [12]  202 	mov	a,r4
      00006E 4B               [12]  203 	orl	a,r3
      00006F 60 5C            [24]  204 	jz	00104$
                                    205 ;	strndup.c:41: memcpy (r, s, l);
      000071 8C 00            [24]  206 	mov	ar0,r4
      000073 8B 01            [24]  207 	mov	ar1,r3
      000075 8D 02            [24]  208 	mov	ar2,r5
      000077 88*00            [24]  209 	mov	_strndup_sloc0_1_0,r0
      000079 89*01            [24]  210 	mov	(_strndup_sloc0_1_0 + 1),r1
      00007B 8A*02            [24]  211 	mov	(_strndup_sloc0_1_0 + 2),r2
      00007D 90r00r02         [24]  212 	mov	dptr,#_strndup_s_65536_64
      000080 E0               [24]  213 	movx	a,@dptr
      000081 F8               [12]  214 	mov	r0,a
      000082 A3               [24]  215 	inc	dptr
      000083 E0               [24]  216 	movx	a,@dptr
      000084 F9               [12]  217 	mov	r1,a
      000085 A3               [24]  218 	inc	dptr
      000086 E0               [24]  219 	movx	a,@dptr
      000087 FA               [12]  220 	mov	r2,a
      000088 90r00r00         [24]  221 	mov	dptr,#___memcpy_PARM_2
      00008B E8               [12]  222 	mov	a,r0
      00008C F0               [24]  223 	movx	@dptr,a
      00008D E9               [12]  224 	mov	a,r1
      00008E A3               [24]  225 	inc	dptr
      00008F F0               [24]  226 	movx	@dptr,a
      000090 EA               [12]  227 	mov	a,r2
      000091 A3               [24]  228 	inc	dptr
      000092 F0               [24]  229 	movx	@dptr,a
      000093 90r00r00         [24]  230 	mov	dptr,#___memcpy_PARM_3
      000096 EE               [12]  231 	mov	a,r6
      000097 F0               [24]  232 	movx	@dptr,a
      000098 EF               [12]  233 	mov	a,r7
      000099 A3               [24]  234 	inc	dptr
      00009A F0               [24]  235 	movx	@dptr,a
      00009B 85*00 82         [24]  236 	mov	dpl,_strndup_sloc0_1_0
      00009E 85*01 83         [24]  237 	mov	dph,(_strndup_sloc0_1_0 + 1)
      0000A1 85*02 F0         [24]  238 	mov	b,(_strndup_sloc0_1_0 + 2)
      0000A4 C0 07            [24]  239 	push	ar7
      0000A6 C0 06            [24]  240 	push	ar6
      0000A8 C0 05            [24]  241 	push	ar5
      0000AA C0 04            [24]  242 	push	ar4
      0000AC C0 03            [24]  243 	push	ar3
      0000AE 12r00r00         [24]  244 	lcall	___memcpy
      0000B1 D0 03            [24]  245 	pop	ar3
      0000B3 D0 04            [24]  246 	pop	ar4
      0000B5 D0 05            [24]  247 	pop	ar5
      0000B7 D0 06            [24]  248 	pop	ar6
      0000B9 D0 07            [24]  249 	pop	ar7
                                    250 ;	strndup.c:42: r[l] = 0;
      0000BB EE               [12]  251 	mov	a,r6
      0000BC 2C               [12]  252 	add	a,r4
      0000BD FE               [12]  253 	mov	r6,a
      0000BE EF               [12]  254 	mov	a,r7
      0000BF 3B               [12]  255 	addc	a,r3
      0000C0 FF               [12]  256 	mov	r7,a
      0000C1 8D 02            [24]  257 	mov	ar2,r5
      0000C3 8E 82            [24]  258 	mov	dpl,r6
      0000C5 8F 83            [24]  259 	mov	dph,r7
      0000C7 8A F0            [24]  260 	mov	b,r2
      0000C9 E4               [12]  261 	clr	a
      0000CA 12r00r00         [24]  262 	lcall	__gptrput
      0000CD                        263 00104$:
                                    264 ;	strndup.c:44: return (r);
      0000CD 8C 82            [24]  265 	mov	dpl,r4
      0000CF 8B 83            [24]  266 	mov	dph,r3
      0000D1 8D F0            [24]  267 	mov	b,r5
                                    268 ;	strndup.c:45: }
      0000D3 22               [24]  269 	ret
                                    270 	.area CSEG    (CODE)
                                    271 	.area CONST   (CODE)
                                    272 	.area XINIT   (CODE)
                                    273 	.area CABS    (ABS,CODE)
