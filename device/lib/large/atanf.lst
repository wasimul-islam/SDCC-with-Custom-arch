                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atanf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _atanf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; initialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'atanf'
                                     92 ;------------------------------------------------------------
                                     93 ;x                         Allocated to stack - _bp +1
                                     94 ;f                         Allocated to stack - _bp +13
                                     95 ;r                         Allocated to registers r4 r5 r6 r7 
                                     96 ;g                         Allocated to registers r7 r6 r5 r4 
                                     97 ;n                         Allocated to stack - _bp +17
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;sloc1                     Allocated to stack - _bp +9
                                    100 ;------------------------------------------------------------
                                    101 ;	atanf.c:55: float atanf(float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function atanf
                                    104 ;	-----------------------------------------
      000000                        105 _atanf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C0 82            [24]  116 	push	dpl
      000007 C0 83            [24]  117 	push	dph
      000009 C0 F0            [24]  118 	push	b
      00000B C0 E0            [24]  119 	push	acc
      00000D E5 81            [12]  120 	mov	a,sp
      00000F 24 0E            [12]  121 	add	a,#0x0e
      000011 F5 81            [12]  122 	mov	sp,a
                                    123 ;	atanf.c:58: int n=0;
      000013 E5*00            [12]  124 	mov	a,_bp
      000015 24 11            [12]  125 	add	a,#0x11
      000017 F8               [12]  126 	mov	r0,a
      000018 E4               [12]  127 	clr	a
      000019 F6               [12]  128 	mov	@r0,a
      00001A 08               [12]  129 	inc	r0
      00001B F6               [12]  130 	mov	@r0,a
                                    131 ;	atanf.c:61: f=fabsf(x);
      00001C A8*00            [24]  132 	mov	r0,_bp
      00001E 08               [12]  133 	inc	r0
      00001F 86 82            [24]  134 	mov	dpl,@r0
      000021 08               [12]  135 	inc	r0
      000022 86 83            [24]  136 	mov	dph,@r0
      000024 08               [12]  137 	inc	r0
      000025 86 F0            [24]  138 	mov	b,@r0
      000027 08               [12]  139 	inc	r0
      000028 E6               [12]  140 	mov	a,@r0
      000029 12r00r00         [24]  141 	lcall	_fabsf
      00002C AC 82            [24]  142 	mov	r4,dpl
      00002E AD 83            [24]  143 	mov	r5,dph
      000030 AE F0            [24]  144 	mov	r6,b
      000032 FF               [12]  145 	mov	r7,a
      000033 E5*00            [12]  146 	mov	a,_bp
      000035 24 0D            [12]  147 	add	a,#0x0d
      000037 F8               [12]  148 	mov	r0,a
      000038 A6 04            [24]  149 	mov	@r0,ar4
      00003A 08               [12]  150 	inc	r0
      00003B A6 05            [24]  151 	mov	@r0,ar5
      00003D 08               [12]  152 	inc	r0
      00003E A6 06            [24]  153 	mov	@r0,ar6
      000040 08               [12]  154 	inc	r0
      000041 A6 07            [24]  155 	mov	@r0,ar7
                                    156 ;	atanf.c:62: if(f>1.0)
      000043 E5*00            [12]  157 	mov	a,_bp
      000045 24 0D            [12]  158 	add	a,#0x0d
      000047 F8               [12]  159 	mov	r0,a
      000048 E6               [12]  160 	mov	a,@r0
      000049 C0 E0            [24]  161 	push	acc
      00004B 08               [12]  162 	inc	r0
      00004C E6               [12]  163 	mov	a,@r0
      00004D C0 E0            [24]  164 	push	acc
      00004F 08               [12]  165 	inc	r0
      000050 E6               [12]  166 	mov	a,@r0
      000051 C0 E0            [24]  167 	push	acc
      000053 08               [12]  168 	inc	r0
      000054 E6               [12]  169 	mov	a,@r0
      000055 C0 E0            [24]  170 	push	acc
      000057 90 00 00         [24]  171 	mov	dptr,#0x0000
      00005A 75 F0 80         [24]  172 	mov	b,#0x80
      00005D 74 3F            [12]  173 	mov	a,#0x3f
      00005F 12r00r00         [24]  174 	lcall	___fslt
      000062 AB 82            [24]  175 	mov	r3,dpl
      000064 E5 81            [12]  176 	mov	a,sp
      000066 24 FC            [12]  177 	add	a,#0xfc
      000068 F5 81            [12]  178 	mov	sp,a
      00006A EB               [12]  179 	mov	a,r3
      00006B 60 46            [24]  180 	jz	00102$
                                    181 ;	atanf.c:64: f=1.0/f;
      00006D E5*00            [12]  182 	mov	a,_bp
      00006F 24 0D            [12]  183 	add	a,#0x0d
      000071 F8               [12]  184 	mov	r0,a
      000072 E6               [12]  185 	mov	a,@r0
      000073 C0 E0            [24]  186 	push	acc
      000075 08               [12]  187 	inc	r0
      000076 E6               [12]  188 	mov	a,@r0
      000077 C0 E0            [24]  189 	push	acc
      000079 08               [12]  190 	inc	r0
      00007A E6               [12]  191 	mov	a,@r0
      00007B C0 E0            [24]  192 	push	acc
      00007D 08               [12]  193 	inc	r0
      00007E E6               [12]  194 	mov	a,@r0
      00007F C0 E0            [24]  195 	push	acc
      000081 90 00 00         [24]  196 	mov	dptr,#0x0000
      000084 75 F0 80         [24]  197 	mov	b,#0x80
      000087 74 3F            [12]  198 	mov	a,#0x3f
      000089 12r00r00         [24]  199 	lcall	___fsdiv
      00008C AC 82            [24]  200 	mov	r4,dpl
      00008E AD 83            [24]  201 	mov	r5,dph
      000090 AE F0            [24]  202 	mov	r6,b
      000092 FF               [12]  203 	mov	r7,a
      000093 E5 81            [12]  204 	mov	a,sp
      000095 24 FC            [12]  205 	add	a,#0xfc
      000097 F5 81            [12]  206 	mov	sp,a
      000099 E5*00            [12]  207 	mov	a,_bp
      00009B 24 0D            [12]  208 	add	a,#0x0d
      00009D F8               [12]  209 	mov	r0,a
      00009E A6 04            [24]  210 	mov	@r0,ar4
      0000A0 08               [12]  211 	inc	r0
      0000A1 A6 05            [24]  212 	mov	@r0,ar5
      0000A3 08               [12]  213 	inc	r0
      0000A4 A6 06            [24]  214 	mov	@r0,ar6
      0000A6 08               [12]  215 	inc	r0
      0000A7 A6 07            [24]  216 	mov	@r0,ar7
                                    217 ;	atanf.c:65: n=2;
      0000A9 E5*00            [12]  218 	mov	a,_bp
      0000AB 24 11            [12]  219 	add	a,#0x11
      0000AD F8               [12]  220 	mov	r0,a
      0000AE 76 02            [12]  221 	mov	@r0,#0x02
      0000B0 08               [12]  222 	inc	r0
      0000B1 76 00            [12]  223 	mov	@r0,#0x00
      0000B3                        224 00102$:
                                    225 ;	atanf.c:67: if(f>K1)
      0000B3 E5*00            [12]  226 	mov	a,_bp
      0000B5 24 0D            [12]  227 	add	a,#0x0d
      0000B7 F8               [12]  228 	mov	r0,a
      0000B8 E6               [12]  229 	mov	a,@r0
      0000B9 C0 E0            [24]  230 	push	acc
      0000BB 08               [12]  231 	inc	r0
      0000BC E6               [12]  232 	mov	a,@r0
      0000BD C0 E0            [24]  233 	push	acc
      0000BF 08               [12]  234 	inc	r0
      0000C0 E6               [12]  235 	mov	a,@r0
      0000C1 C0 E0            [24]  236 	push	acc
      0000C3 08               [12]  237 	inc	r0
      0000C4 E6               [12]  238 	mov	a,@r0
      0000C5 C0 E0            [24]  239 	push	acc
      0000C7 90 30 A3         [24]  240 	mov	dptr,#0x30a3
      0000CA 75 F0 89         [24]  241 	mov	b,#0x89
      0000CD 74 3E            [12]  242 	mov	a,#0x3e
      0000CF 12r00r00         [24]  243 	lcall	___fslt
      0000D2 AB 82            [24]  244 	mov	r3,dpl
      0000D4 E5 81            [12]  245 	mov	a,sp
      0000D6 24 FC            [12]  246 	add	a,#0xfc
      0000D8 F5 81            [12]  247 	mov	sp,a
      0000DA EB               [12]  248 	mov	a,r3
      0000DB 70 03            [24]  249 	jnz	00140$
      0000DD 02r01rD5         [24]  250 	ljmp	00104$
      0000E0                        251 00140$:
                                    252 ;	atanf.c:69: f=((K2*f-1.0)+f)/(K3+f);
      0000E0 E5*00            [12]  253 	mov	a,_bp
      0000E2 24 0D            [12]  254 	add	a,#0x0d
      0000E4 F8               [12]  255 	mov	r0,a
      0000E5 E6               [12]  256 	mov	a,@r0
      0000E6 C0 E0            [24]  257 	push	acc
      0000E8 08               [12]  258 	inc	r0
      0000E9 E6               [12]  259 	mov	a,@r0
      0000EA C0 E0            [24]  260 	push	acc
      0000EC 08               [12]  261 	inc	r0
      0000ED E6               [12]  262 	mov	a,@r0
      0000EE C0 E0            [24]  263 	push	acc
      0000F0 08               [12]  264 	inc	r0
      0000F1 E6               [12]  265 	mov	a,@r0
      0000F2 C0 E0            [24]  266 	push	acc
      0000F4 90 67 AF         [24]  267 	mov	dptr,#0x67af
      0000F7 75 F0 3B         [24]  268 	mov	b,#0x3b
      0000FA 74 3F            [12]  269 	mov	a,#0x3f
      0000FC 12r00r00         [24]  270 	lcall	___fsmul
      0000FF AA 82            [24]  271 	mov	r2,dpl
      000101 AB 83            [24]  272 	mov	r3,dph
      000103 AE F0            [24]  273 	mov	r6,b
      000105 FF               [12]  274 	mov	r7,a
      000106 E5 81            [12]  275 	mov	a,sp
      000108 24 FC            [12]  276 	add	a,#0xfc
      00010A F5 81            [12]  277 	mov	sp,a
      00010C E4               [12]  278 	clr	a
      00010D C0 E0            [24]  279 	push	acc
      00010F C0 E0            [24]  280 	push	acc
      000111 74 80            [12]  281 	mov	a,#0x80
      000113 C0 E0            [24]  282 	push	acc
      000115 74 3F            [12]  283 	mov	a,#0x3f
      000117 C0 E0            [24]  284 	push	acc
      000119 8A 82            [24]  285 	mov	dpl,r2
      00011B 8B 83            [24]  286 	mov	dph,r3
      00011D 8E F0            [24]  287 	mov	b,r6
      00011F EF               [12]  288 	mov	a,r7
      000120 12r00r00         [24]  289 	lcall	___fssub
      000123 AC 82            [24]  290 	mov	r4,dpl
      000125 AD 83            [24]  291 	mov	r5,dph
      000127 AE F0            [24]  292 	mov	r6,b
      000129 FF               [12]  293 	mov	r7,a
      00012A E5 81            [12]  294 	mov	a,sp
      00012C 24 FC            [12]  295 	add	a,#0xfc
      00012E F5 81            [12]  296 	mov	sp,a
      000130 E5*00            [12]  297 	mov	a,_bp
      000132 24 0D            [12]  298 	add	a,#0x0d
      000134 F8               [12]  299 	mov	r0,a
      000135 E6               [12]  300 	mov	a,@r0
      000136 C0 E0            [24]  301 	push	acc
      000138 08               [12]  302 	inc	r0
      000139 E6               [12]  303 	mov	a,@r0
      00013A C0 E0            [24]  304 	push	acc
      00013C 08               [12]  305 	inc	r0
      00013D E6               [12]  306 	mov	a,@r0
      00013E C0 E0            [24]  307 	push	acc
      000140 08               [12]  308 	inc	r0
      000141 E6               [12]  309 	mov	a,@r0
      000142 C0 E0            [24]  310 	push	acc
      000144 8C 82            [24]  311 	mov	dpl,r4
      000146 8D 83            [24]  312 	mov	dph,r5
      000148 8E F0            [24]  313 	mov	b,r6
      00014A EF               [12]  314 	mov	a,r7
      00014B 12r00r00         [24]  315 	lcall	___fsadd
      00014E C8               [12]  316 	xch	a,r0
      00014F E5*00            [12]  317 	mov	a,_bp
      000151 24 05            [12]  318 	add	a,#0x05
      000153 C8               [12]  319 	xch	a,r0
      000154 A6 82            [24]  320 	mov	@r0,dpl
      000156 08               [12]  321 	inc	r0
      000157 A6 83            [24]  322 	mov	@r0,dph
      000159 08               [12]  323 	inc	r0
      00015A A6 F0            [24]  324 	mov	@r0,b
      00015C 08               [12]  325 	inc	r0
      00015D F6               [12]  326 	mov	@r0,a
      00015E E5 81            [12]  327 	mov	a,sp
      000160 24 FC            [12]  328 	add	a,#0xfc
      000162 F5 81            [12]  329 	mov	sp,a
      000164 74 D7            [12]  330 	mov	a,#0xd7
      000166 C0 E0            [24]  331 	push	acc
      000168 74 B3            [12]  332 	mov	a,#0xb3
      00016A C0 E0            [24]  333 	push	acc
      00016C 74 DD            [12]  334 	mov	a,#0xdd
      00016E C0 E0            [24]  335 	push	acc
      000170 74 3F            [12]  336 	mov	a,#0x3f
      000172 C0 E0            [24]  337 	push	acc
      000174 E5*00            [12]  338 	mov	a,_bp
      000176 24 0D            [12]  339 	add	a,#0x0d
      000178 F8               [12]  340 	mov	r0,a
      000179 86 82            [24]  341 	mov	dpl,@r0
      00017B 08               [12]  342 	inc	r0
      00017C 86 83            [24]  343 	mov	dph,@r0
      00017E 08               [12]  344 	inc	r0
      00017F 86 F0            [24]  345 	mov	b,@r0
      000181 08               [12]  346 	inc	r0
      000182 E6               [12]  347 	mov	a,@r0
      000183 12r00r00         [24]  348 	lcall	___fsadd
      000186 AA 82            [24]  349 	mov	r2,dpl
      000188 AB 83            [24]  350 	mov	r3,dph
      00018A AE F0            [24]  351 	mov	r6,b
      00018C FF               [12]  352 	mov	r7,a
      00018D E5 81            [12]  353 	mov	a,sp
      00018F 24 FC            [12]  354 	add	a,#0xfc
      000191 F5 81            [12]  355 	mov	sp,a
      000193 C0 02            [24]  356 	push	ar2
      000195 C0 03            [24]  357 	push	ar3
      000197 C0 06            [24]  358 	push	ar6
      000199 C0 07            [24]  359 	push	ar7
      00019B E5*00            [12]  360 	mov	a,_bp
      00019D 24 05            [12]  361 	add	a,#0x05
      00019F F8               [12]  362 	mov	r0,a
      0001A0 86 82            [24]  363 	mov	dpl,@r0
      0001A2 08               [12]  364 	inc	r0
      0001A3 86 83            [24]  365 	mov	dph,@r0
      0001A5 08               [12]  366 	inc	r0
      0001A6 86 F0            [24]  367 	mov	b,@r0
      0001A8 08               [12]  368 	inc	r0
      0001A9 E6               [12]  369 	mov	a,@r0
      0001AA 12r00r00         [24]  370 	lcall	___fsdiv
      0001AD AC 82            [24]  371 	mov	r4,dpl
      0001AF AD 83            [24]  372 	mov	r5,dph
      0001B1 AE F0            [24]  373 	mov	r6,b
      0001B3 FF               [12]  374 	mov	r7,a
      0001B4 E5 81            [12]  375 	mov	a,sp
      0001B6 24 FC            [12]  376 	add	a,#0xfc
      0001B8 F5 81            [12]  377 	mov	sp,a
      0001BA E5*00            [12]  378 	mov	a,_bp
      0001BC 24 0D            [12]  379 	add	a,#0x0d
      0001BE F8               [12]  380 	mov	r0,a
      0001BF A6 04            [24]  381 	mov	@r0,ar4
      0001C1 08               [12]  382 	inc	r0
      0001C2 A6 05            [24]  383 	mov	@r0,ar5
      0001C4 08               [12]  384 	inc	r0
      0001C5 A6 06            [24]  385 	mov	@r0,ar6
      0001C7 08               [12]  386 	inc	r0
      0001C8 A6 07            [24]  387 	mov	@r0,ar7
                                    388 ;	atanf.c:73: n++;
      0001CA E5*00            [12]  389 	mov	a,_bp
      0001CC 24 11            [12]  390 	add	a,#0x11
      0001CE F8               [12]  391 	mov	r0,a
      0001CF 06               [12]  392 	inc	@r0
      0001D0 B6 00 02         [24]  393 	cjne	@r0,#0x00,00141$
      0001D3 08               [12]  394 	inc	r0
      0001D4 06               [12]  395 	inc	@r0
      0001D5                        396 00141$:
      0001D5                        397 00104$:
                                    398 ;	atanf.c:75: if(fabsf(f)<EPS) r=f;
      0001D5 E5*00            [12]  399 	mov	a,_bp
      0001D7 24 0D            [12]  400 	add	a,#0x0d
      0001D9 F8               [12]  401 	mov	r0,a
      0001DA 86 82            [24]  402 	mov	dpl,@r0
      0001DC 08               [12]  403 	inc	r0
      0001DD 86 83            [24]  404 	mov	dph,@r0
      0001DF 08               [12]  405 	inc	r0
      0001E0 86 F0            [24]  406 	mov	b,@r0
      0001E2 08               [12]  407 	inc	r0
      0001E3 E6               [12]  408 	mov	a,@r0
      0001E4 12r00r00         [24]  409 	lcall	_fabsf
      0001E7 AC 82            [24]  410 	mov	r4,dpl
      0001E9 AD 83            [24]  411 	mov	r5,dph
      0001EB AE F0            [24]  412 	mov	r6,b
      0001ED FF               [12]  413 	mov	r7,a
      0001EE E4               [12]  414 	clr	a
      0001EF C0 E0            [24]  415 	push	acc
      0001F1 C0 E0            [24]  416 	push	acc
      0001F3 74 80            [12]  417 	mov	a,#0x80
      0001F5 C0 E0            [24]  418 	push	acc
      0001F7 74 39            [12]  419 	mov	a,#0x39
      0001F9 C0 E0            [24]  420 	push	acc
      0001FB 8C 82            [24]  421 	mov	dpl,r4
      0001FD 8D 83            [24]  422 	mov	dph,r5
      0001FF 8E F0            [24]  423 	mov	b,r6
      000201 EF               [12]  424 	mov	a,r7
      000202 12r00r00         [24]  425 	lcall	___fslt
      000205 AF 82            [24]  426 	mov	r7,dpl
      000207 E5 81            [12]  427 	mov	a,sp
      000209 24 FC            [12]  428 	add	a,#0xfc
      00020B F5 81            [12]  429 	mov	sp,a
      00020D EF               [12]  430 	mov	a,r7
      00020E 60 1B            [24]  431 	jz	00106$
      000210 E5*00            [12]  432 	mov	a,_bp
      000212 24 0D            [12]  433 	add	a,#0x0d
      000214 F8               [12]  434 	mov	r0,a
      000215 E5*00            [12]  435 	mov	a,_bp
      000217 24 09            [12]  436 	add	a,#0x09
      000219 F9               [12]  437 	mov	r1,a
      00021A E6               [12]  438 	mov	a,@r0
      00021B F7               [12]  439 	mov	@r1,a
      00021C 08               [12]  440 	inc	r0
      00021D E6               [12]  441 	mov	a,@r0
      00021E 09               [12]  442 	inc	r1
      00021F F7               [12]  443 	mov	@r1,a
      000220 08               [12]  444 	inc	r0
      000221 E6               [12]  445 	mov	a,@r0
      000222 09               [12]  446 	inc	r1
      000223 F7               [12]  447 	mov	@r1,a
      000224 08               [12]  448 	inc	r0
      000225 E6               [12]  449 	mov	a,@r0
      000226 09               [12]  450 	inc	r1
      000227 F7               [12]  451 	mov	@r1,a
      000228 02r03rC9         [24]  452 	ljmp	00107$
      00022B                        453 00106$:
                                    454 ;	atanf.c:78: g=f*f;
      00022B E5*00            [12]  455 	mov	a,_bp
      00022D 24 0D            [12]  456 	add	a,#0x0d
      00022F F8               [12]  457 	mov	r0,a
      000230 E6               [12]  458 	mov	a,@r0
      000231 C0 E0            [24]  459 	push	acc
      000233 08               [12]  460 	inc	r0
      000234 E6               [12]  461 	mov	a,@r0
      000235 C0 E0            [24]  462 	push	acc
      000237 08               [12]  463 	inc	r0
      000238 E6               [12]  464 	mov	a,@r0
      000239 C0 E0            [24]  465 	push	acc
      00023B 08               [12]  466 	inc	r0
      00023C E6               [12]  467 	mov	a,@r0
      00023D C0 E0            [24]  468 	push	acc
      00023F E5*00            [12]  469 	mov	a,_bp
      000241 24 0D            [12]  470 	add	a,#0x0d
      000243 F8               [12]  471 	mov	r0,a
      000244 86 82            [24]  472 	mov	dpl,@r0
      000246 08               [12]  473 	inc	r0
      000247 86 83            [24]  474 	mov	dph,@r0
      000249 08               [12]  475 	inc	r0
      00024A 86 F0            [24]  476 	mov	b,@r0
      00024C 08               [12]  477 	inc	r0
      00024D E6               [12]  478 	mov	a,@r0
      00024E 12r00r00         [24]  479 	lcall	___fsmul
      000251 AF 82            [24]  480 	mov	r7,dpl
      000253 AE 83            [24]  481 	mov	r6,dph
      000255 AD F0            [24]  482 	mov	r5,b
      000257 FC               [12]  483 	mov	r4,a
      000258 E5 81            [12]  484 	mov	a,sp
      00025A 24 FC            [12]  485 	add	a,#0xfc
      00025C F5 81            [12]  486 	mov	sp,a
                                    487 ;	atanf.c:79: r=f+P(g,f)/Q(g);
      00025E C0 07            [24]  488 	push	ar7
      000260 C0 06            [24]  489 	push	ar6
      000262 C0 05            [24]  490 	push	ar5
      000264 C0 04            [24]  491 	push	ar4
      000266 C0 07            [24]  492 	push	ar7
      000268 C0 06            [24]  493 	push	ar6
      00026A C0 05            [24]  494 	push	ar5
      00026C C0 04            [24]  495 	push	ar4
      00026E 90 86 91         [24]  496 	mov	dptr,#0x8691
      000271 75 F0 50         [24]  497 	mov	b,#0x50
      000274 74 BD            [12]  498 	mov	a,#0xbd
      000276 12r00r00         [24]  499 	lcall	___fsmul
      000279 C8               [12]  500 	xch	a,r0
      00027A E5*00            [12]  501 	mov	a,_bp
      00027C 24 05            [12]  502 	add	a,#0x05
      00027E C8               [12]  503 	xch	a,r0
      00027F A6 82            [24]  504 	mov	@r0,dpl
      000281 08               [12]  505 	inc	r0
      000282 A6 83            [24]  506 	mov	@r0,dph
      000284 08               [12]  507 	inc	r0
      000285 A6 F0            [24]  508 	mov	@r0,b
      000287 08               [12]  509 	inc	r0
      000288 F6               [12]  510 	mov	@r0,a
      000289 E5 81            [12]  511 	mov	a,sp
      00028B 24 FC            [12]  512 	add	a,#0xfc
      00028D F5 81            [12]  513 	mov	sp,a
      00028F 74 F6            [12]  514 	mov	a,#0xf6
      000291 C0 E0            [24]  515 	push	acc
      000293 74 10            [12]  516 	mov	a,#0x10
      000295 C0 E0            [24]  517 	push	acc
      000297 74 F1            [12]  518 	mov	a,#0xf1
      000299 C0 E0            [24]  519 	push	acc
      00029B 74 BE            [12]  520 	mov	a,#0xbe
      00029D C0 E0            [24]  521 	push	acc
      00029F E5*00            [12]  522 	mov	a,_bp
      0002A1 24 05            [12]  523 	add	a,#0x05
      0002A3 F8               [12]  524 	mov	r0,a
      0002A4 86 82            [24]  525 	mov	dpl,@r0
      0002A6 08               [12]  526 	inc	r0
      0002A7 86 83            [24]  527 	mov	dph,@r0
      0002A9 08               [12]  528 	inc	r0
      0002AA 86 F0            [24]  529 	mov	b,@r0
      0002AC 08               [12]  530 	inc	r0
      0002AD E6               [12]  531 	mov	a,@r0
      0002AE 12r00r00         [24]  532 	lcall	___fsadd
      0002B1 C8               [12]  533 	xch	a,r0
      0002B2 E5*00            [12]  534 	mov	a,_bp
      0002B4 24 05            [12]  535 	add	a,#0x05
      0002B6 C8               [12]  536 	xch	a,r0
      0002B7 A6 82            [24]  537 	mov	@r0,dpl
      0002B9 08               [12]  538 	inc	r0
      0002BA A6 83            [24]  539 	mov	@r0,dph
      0002BC 08               [12]  540 	inc	r0
      0002BD A6 F0            [24]  541 	mov	@r0,b
      0002BF 08               [12]  542 	inc	r0
      0002C0 F6               [12]  543 	mov	@r0,a
      0002C1 E5 81            [12]  544 	mov	a,sp
      0002C3 24 FC            [12]  545 	add	a,#0xfc
      0002C5 F5 81            [12]  546 	mov	sp,a
      0002C7 D0 04            [24]  547 	pop	ar4
      0002C9 D0 05            [24]  548 	pop	ar5
      0002CB D0 06            [24]  549 	pop	ar6
      0002CD D0 07            [24]  550 	pop	ar7
      0002CF C0 07            [24]  551 	push	ar7
      0002D1 C0 06            [24]  552 	push	ar6
      0002D3 C0 05            [24]  553 	push	ar5
      0002D5 C0 04            [24]  554 	push	ar4
      0002D7 C0 07            [24]  555 	push	ar7
      0002D9 C0 06            [24]  556 	push	ar6
      0002DB C0 05            [24]  557 	push	ar5
      0002DD C0 04            [24]  558 	push	ar4
      0002DF E5*00            [12]  559 	mov	a,_bp
      0002E1 24 05            [12]  560 	add	a,#0x05
      0002E3 F8               [12]  561 	mov	r0,a
      0002E4 86 82            [24]  562 	mov	dpl,@r0
      0002E6 08               [12]  563 	inc	r0
      0002E7 86 83            [24]  564 	mov	dph,@r0
      0002E9 08               [12]  565 	inc	r0
      0002EA 86 F0            [24]  566 	mov	b,@r0
      0002EC 08               [12]  567 	inc	r0
      0002ED E6               [12]  568 	mov	a,@r0
      0002EE 12r00r00         [24]  569 	lcall	___fsmul
      0002F1 C8               [12]  570 	xch	a,r0
      0002F2 E5*00            [12]  571 	mov	a,_bp
      0002F4 24 05            [12]  572 	add	a,#0x05
      0002F6 C8               [12]  573 	xch	a,r0
      0002F7 A6 82            [24]  574 	mov	@r0,dpl
      0002F9 08               [12]  575 	inc	r0
      0002FA A6 83            [24]  576 	mov	@r0,dph
      0002FC 08               [12]  577 	inc	r0
      0002FD A6 F0            [24]  578 	mov	@r0,b
      0002FF 08               [12]  579 	inc	r0
      000300 F6               [12]  580 	mov	@r0,a
      000301 E5 81            [12]  581 	mov	a,sp
      000303 24 FC            [12]  582 	add	a,#0xfc
      000305 F5 81            [12]  583 	mov	sp,a
      000307 E5*00            [12]  584 	mov	a,_bp
      000309 24 0D            [12]  585 	add	a,#0x0d
      00030B F8               [12]  586 	mov	r0,a
      00030C E6               [12]  587 	mov	a,@r0
      00030D C0 E0            [24]  588 	push	acc
      00030F 08               [12]  589 	inc	r0
      000310 E6               [12]  590 	mov	a,@r0
      000311 C0 E0            [24]  591 	push	acc
      000313 08               [12]  592 	inc	r0
      000314 E6               [12]  593 	mov	a,@r0
      000315 C0 E0            [24]  594 	push	acc
      000317 08               [12]  595 	inc	r0
      000318 E6               [12]  596 	mov	a,@r0
      000319 C0 E0            [24]  597 	push	acc
      00031B E5*00            [12]  598 	mov	a,_bp
      00031D 24 05            [12]  599 	add	a,#0x05
      00031F F8               [12]  600 	mov	r0,a
      000320 86 82            [24]  601 	mov	dpl,@r0
      000322 08               [12]  602 	inc	r0
      000323 86 83            [24]  603 	mov	dph,@r0
      000325 08               [12]  604 	inc	r0
      000326 86 F0            [24]  605 	mov	b,@r0
      000328 08               [12]  606 	inc	r0
      000329 E6               [12]  607 	mov	a,@r0
      00032A 12r00r00         [24]  608 	lcall	___fsmul
      00032D C8               [12]  609 	xch	a,r0
      00032E E5*00            [12]  610 	mov	a,_bp
      000330 24 05            [12]  611 	add	a,#0x05
      000332 C8               [12]  612 	xch	a,r0
      000333 A6 82            [24]  613 	mov	@r0,dpl
      000335 08               [12]  614 	inc	r0
      000336 A6 83            [24]  615 	mov	@r0,dph
      000338 08               [12]  616 	inc	r0
      000339 A6 F0            [24]  617 	mov	@r0,b
      00033B 08               [12]  618 	inc	r0
      00033C F6               [12]  619 	mov	@r0,a
      00033D E5 81            [12]  620 	mov	a,sp
      00033F 24 FC            [12]  621 	add	a,#0xfc
      000341 F5 81            [12]  622 	mov	sp,a
      000343 D0 04            [24]  623 	pop	ar4
      000345 D0 05            [24]  624 	pop	ar5
      000347 D0 06            [24]  625 	pop	ar6
      000349 D0 07            [24]  626 	pop	ar7
      00034B 74 D3            [12]  627 	mov	a,#0xd3
      00034D C0 E0            [24]  628 	push	acc
      00034F 74 CC            [12]  629 	mov	a,#0xcc
      000351 C0 E0            [24]  630 	push	acc
      000353 74 B4            [12]  631 	mov	a,#0xb4
      000355 C0 E0            [24]  632 	push	acc
      000357 74 3F            [12]  633 	mov	a,#0x3f
      000359 C0 E0            [24]  634 	push	acc
      00035B 8F 82            [24]  635 	mov	dpl,r7
      00035D 8E 83            [24]  636 	mov	dph,r6
      00035F 8D F0            [24]  637 	mov	b,r5
      000361 EC               [12]  638 	mov	a,r4
      000362 12r00r00         [24]  639 	lcall	___fsadd
      000365 AF 82            [24]  640 	mov	r7,dpl
      000367 AE 83            [24]  641 	mov	r6,dph
      000369 AD F0            [24]  642 	mov	r5,b
      00036B FC               [12]  643 	mov	r4,a
      00036C E5 81            [12]  644 	mov	a,sp
      00036E 24 FC            [12]  645 	add	a,#0xfc
      000370 F5 81            [12]  646 	mov	sp,a
      000372 C0 07            [24]  647 	push	ar7
      000374 C0 06            [24]  648 	push	ar6
      000376 C0 05            [24]  649 	push	ar5
      000378 C0 04            [24]  650 	push	ar4
      00037A E5*00            [12]  651 	mov	a,_bp
      00037C 24 05            [12]  652 	add	a,#0x05
      00037E F8               [12]  653 	mov	r0,a
      00037F 86 82            [24]  654 	mov	dpl,@r0
      000381 08               [12]  655 	inc	r0
      000382 86 83            [24]  656 	mov	dph,@r0
      000384 08               [12]  657 	inc	r0
      000385 86 F0            [24]  658 	mov	b,@r0
      000387 08               [12]  659 	inc	r0
      000388 E6               [12]  660 	mov	a,@r0
      000389 12r00r00         [24]  661 	lcall	___fsdiv
      00038C AF 82            [24]  662 	mov	r7,dpl
      00038E AE 83            [24]  663 	mov	r6,dph
      000390 AD F0            [24]  664 	mov	r5,b
      000392 FC               [12]  665 	mov	r4,a
      000393 E5 81            [12]  666 	mov	a,sp
      000395 24 FC            [12]  667 	add	a,#0xfc
      000397 F5 81            [12]  668 	mov	sp,a
      000399 C0 07            [24]  669 	push	ar7
      00039B C0 06            [24]  670 	push	ar6
      00039D C0 05            [24]  671 	push	ar5
      00039F C0 04            [24]  672 	push	ar4
      0003A1 E5*00            [12]  673 	mov	a,_bp
      0003A3 24 0D            [12]  674 	add	a,#0x0d
      0003A5 F8               [12]  675 	mov	r0,a
      0003A6 86 82            [24]  676 	mov	dpl,@r0
      0003A8 08               [12]  677 	inc	r0
      0003A9 86 83            [24]  678 	mov	dph,@r0
      0003AB 08               [12]  679 	inc	r0
      0003AC 86 F0            [24]  680 	mov	b,@r0
      0003AE 08               [12]  681 	inc	r0
      0003AF E6               [12]  682 	mov	a,@r0
      0003B0 12r00r00         [24]  683 	lcall	___fsadd
      0003B3 C8               [12]  684 	xch	a,r0
      0003B4 E5*00            [12]  685 	mov	a,_bp
      0003B6 24 09            [12]  686 	add	a,#0x09
      0003B8 C8               [12]  687 	xch	a,r0
      0003B9 A6 82            [24]  688 	mov	@r0,dpl
      0003BB 08               [12]  689 	inc	r0
      0003BC A6 83            [24]  690 	mov	@r0,dph
      0003BE 08               [12]  691 	inc	r0
      0003BF A6 F0            [24]  692 	mov	@r0,b
      0003C1 08               [12]  693 	inc	r0
      0003C2 F6               [12]  694 	mov	@r0,a
      0003C3 E5 81            [12]  695 	mov	a,sp
      0003C5 24 FC            [12]  696 	add	a,#0xfc
      0003C7 F5 81            [12]  697 	mov	sp,a
      0003C9                        698 00107$:
                                    699 ;	atanf.c:81: if(n>1) r=-r;
      0003C9 E5*00            [12]  700 	mov	a,_bp
      0003CB 24 11            [12]  701 	add	a,#0x11
      0003CD F8               [12]  702 	mov	r0,a
      0003CE C3               [12]  703 	clr	c
      0003CF 74 01            [12]  704 	mov	a,#0x01
      0003D1 96               [12]  705 	subb	a,@r0
      0003D2 74 80            [12]  706 	mov	a,#(0x00 ^ 0x80)
      0003D4 08               [12]  707 	inc	r0
      0003D5 86 F0            [24]  708 	mov	b,@r0
      0003D7 63 F0 80         [24]  709 	xrl	b,#0x80
      0003DA 95 F0            [12]  710 	subb	a,b
      0003DC 50 0F            [24]  711 	jnc	00109$
      0003DE E5*00            [12]  712 	mov	a,_bp
      0003E0 24 09            [12]  713 	add	a,#0x09
      0003E2 F8               [12]  714 	mov	r0,a
      0003E3 E6               [12]  715 	mov  a,@r0
      0003E4 08               [12]  716 	inc	r0
      0003E5 E6               [12]  717 	mov  a,@r0
      0003E6 08               [12]  718 	inc	r0
      0003E7 E6               [12]  719 	mov  a,@r0
      0003E8 08               [12]  720 	inc	r0
      0003E9 E6               [12]  721 	mov	a,@r0
      0003EA B2 E7            [12]  722 	cpl	acc.7
      0003EC F6               [12]  723 	mov	@r0,a
      0003ED                        724 00109$:
                                    725 ;	atanf.c:82: r+=a[n];
      0003ED E5*00            [12]  726 	mov	a,_bp
      0003EF 24 11            [12]  727 	add	a,#0x11
      0003F1 F8               [12]  728 	mov	r0,a
      0003F2 E6               [12]  729 	mov	a,@r0
      0003F3 26               [12]  730 	add	a,@r0
      0003F4 FA               [12]  731 	mov	r2,a
      0003F5 08               [12]  732 	inc	r0
      0003F6 E6               [12]  733 	mov	a,@r0
      0003F7 33               [12]  734 	rlc	a
      0003F8 FB               [12]  735 	mov	r3,a
      0003F9 EA               [12]  736 	mov	a,r2
      0003FA 2A               [12]  737 	add	a,r2
      0003FB FA               [12]  738 	mov	r2,a
      0003FC EB               [12]  739 	mov	a,r3
      0003FD 33               [12]  740 	rlc	a
      0003FE FB               [12]  741 	mov	r3,a
      0003FF EA               [12]  742 	mov	a,r2
      000400 24r00            [12]  743 	add	a,#_atanf_a_65536_26
      000402 F5 82            [12]  744 	mov	dpl,a
      000404 EB               [12]  745 	mov	a,r3
      000405 34s00            [12]  746 	addc	a,#(_atanf_a_65536_26 >> 8)
      000407 F5 83            [12]  747 	mov	dph,a
      000409 E4               [12]  748 	clr	a
      00040A 93               [24]  749 	movc	a,@a+dptr
      00040B FA               [12]  750 	mov	r2,a
      00040C A3               [24]  751 	inc	dptr
      00040D E4               [12]  752 	clr	a
      00040E 93               [24]  753 	movc	a,@a+dptr
      00040F FB               [12]  754 	mov	r3,a
      000410 A3               [24]  755 	inc	dptr
      000411 E4               [12]  756 	clr	a
      000412 93               [24]  757 	movc	a,@a+dptr
      000413 FE               [12]  758 	mov	r6,a
      000414 A3               [24]  759 	inc	dptr
      000415 E4               [12]  760 	clr	a
      000416 93               [24]  761 	movc	a,@a+dptr
      000417 FF               [12]  762 	mov	r7,a
      000418 C0 02            [24]  763 	push	ar2
      00041A C0 03            [24]  764 	push	ar3
      00041C C0 06            [24]  765 	push	ar6
      00041E C0 07            [24]  766 	push	ar7
      000420 E5*00            [12]  767 	mov	a,_bp
      000422 24 09            [12]  768 	add	a,#0x09
      000424 F8               [12]  769 	mov	r0,a
      000425 86 82            [24]  770 	mov	dpl,@r0
      000427 08               [12]  771 	inc	r0
      000428 86 83            [24]  772 	mov	dph,@r0
      00042A 08               [12]  773 	inc	r0
      00042B 86 F0            [24]  774 	mov	b,@r0
      00042D 08               [12]  775 	inc	r0
      00042E E6               [12]  776 	mov	a,@r0
      00042F 12r00r00         [24]  777 	lcall	___fsadd
      000432 AC 82            [24]  778 	mov	r4,dpl
      000434 AD 83            [24]  779 	mov	r5,dph
      000436 AE F0            [24]  780 	mov	r6,b
      000438 FF               [12]  781 	mov	r7,a
      000439 E5 81            [12]  782 	mov	a,sp
      00043B 24 FC            [12]  783 	add	a,#0xfc
      00043D F5 81            [12]  784 	mov	sp,a
                                    785 ;	atanf.c:83: if(x<0.0) r=-r;
      00043F C0 07            [24]  786 	push	ar7
      000441 C0 06            [24]  787 	push	ar6
      000443 C0 05            [24]  788 	push	ar5
      000445 C0 04            [24]  789 	push	ar4
      000447 E4               [12]  790 	clr	a
      000448 C0 E0            [24]  791 	push	acc
      00044A C0 E0            [24]  792 	push	acc
      00044C C0 E0            [24]  793 	push	acc
      00044E C0 E0            [24]  794 	push	acc
      000450 A8*00            [24]  795 	mov	r0,_bp
      000452 08               [12]  796 	inc	r0
      000453 86 82            [24]  797 	mov	dpl,@r0
      000455 08               [12]  798 	inc	r0
      000456 86 83            [24]  799 	mov	dph,@r0
      000458 08               [12]  800 	inc	r0
      000459 86 F0            [24]  801 	mov	b,@r0
      00045B 08               [12]  802 	inc	r0
      00045C E6               [12]  803 	mov	a,@r0
      00045D 12r00r00         [24]  804 	lcall	___fslt
      000460 AB 82            [24]  805 	mov	r3,dpl
      000462 E5 81            [12]  806 	mov	a,sp
      000464 24 FC            [12]  807 	add	a,#0xfc
      000466 F5 81            [12]  808 	mov	sp,a
      000468 D0 04            [24]  809 	pop	ar4
      00046A D0 05            [24]  810 	pop	ar5
      00046C D0 06            [24]  811 	pop	ar6
      00046E D0 07            [24]  812 	pop	ar7
      000470 EB               [12]  813 	mov	a,r3
      000471 60 04            [24]  814 	jz	00111$
      000473 EF               [12]  815 	mov	a,r7
      000474 B2 E7            [12]  816 	cpl	acc.7
      000476 FF               [12]  817 	mov	r7,a
      000477                        818 00111$:
                                    819 ;	atanf.c:84: return r;
      000477 8C 82            [24]  820 	mov	dpl,r4
      000479 8D 83            [24]  821 	mov	dph,r5
      00047B 8E F0            [24]  822 	mov	b,r6
      00047D EF               [12]  823 	mov	a,r7
                                    824 ;	atanf.c:85: }
      00047E 85*00 81         [24]  825 	mov	sp,_bp
      000481 D0*00            [24]  826 	pop	_bp
      000483 22               [24]  827 	ret
                                    828 	.area CSEG    (CODE)
                                    829 	.area CONST   (CODE)
      000000                        830 _atanf_a_65536_26:
      000000 00 00 00 00            831 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000004 92 0A 06 3F            832 	.byte #0x92, #0x0a, #0x06, #0x3f	;  5.235988e-01
      000008 DB 0F C9 3F            833 	.byte #0xdb, #0x0f, #0xc9, #0x3f	;  1.570796e+00
      00000C 92 0A 86 3F            834 	.byte #0x92, #0x0a, #0x86, #0x3f	;  1.047198e+00
                                    835 	.area XINIT   (CODE)
                                    836 	.area CABS    (ABS,CODE)
