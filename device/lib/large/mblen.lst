                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mblen
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mblen_PARM_2
                                     12 	.globl _mblen
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
      000000                         56 _mblen_PARM_2:
      000000                         57 	.ds 2
      000002                         58 _mblen_s_65536_39:
      000002                         59 	.ds 3
      000005                         60 _mblen_c_65536_40:
      000005                         61 	.ds 1
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; initialized external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function 'mblen'
                                     98 ;------------------------------------------------------------
                                     99 ;n                         Allocated with name '_mblen_PARM_2'
                                    100 ;s                         Allocated with name '_mblen_s_65536_39'
                                    101 ;m                         Allocated with name '_mblen_m_65536_40'
                                    102 ;c                         Allocated with name '_mblen_c_65536_40'
                                    103 ;------------------------------------------------------------
                                    104 ;	mblen.c:31: int mblen(const char *s, size_t n)
                                    105 ;	-----------------------------------------
                                    106 ;	 function mblen
                                    107 ;	-----------------------------------------
      000000                        108 _mblen:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 AF F0            [24]  117 	mov	r7,b
      000002 AE 83            [24]  118 	mov	r6,dph
      000004 E5 82            [12]  119 	mov	a,dpl
      000006 90r00r02         [24]  120 	mov	dptr,#_mblen_s_65536_39
      000009 F0               [24]  121 	movx	@dptr,a
      00000A EE               [12]  122 	mov	a,r6
      00000B A3               [24]  123 	inc	dptr
      00000C F0               [24]  124 	movx	@dptr,a
      00000D EF               [12]  125 	mov	a,r7
      00000E A3               [24]  126 	inc	dptr
      00000F F0               [24]  127 	movx	@dptr,a
                                    128 ;	mblen.c:36: if(!s)
      000010 90r00r02         [24]  129 	mov	dptr,#_mblen_s_65536_39
      000013 E0               [24]  130 	movx	a,@dptr
      000014 FD               [12]  131 	mov	r5,a
      000015 A3               [24]  132 	inc	dptr
      000016 E0               [24]  133 	movx	a,@dptr
      000017 FE               [12]  134 	mov	r6,a
      000018 A3               [24]  135 	inc	dptr
      000019 E0               [24]  136 	movx	a,@dptr
      00001A FF               [12]  137 	mov	r7,a
      00001B 90r00r02         [24]  138 	mov	dptr,#_mblen_s_65536_39
      00001E E0               [24]  139 	movx	a,@dptr
      00001F F5 F0            [12]  140 	mov	b,a
      000021 A3               [24]  141 	inc	dptr
      000022 E0               [24]  142 	movx	a,@dptr
      000023 45 F0            [12]  143 	orl	a,b
      000025 70 04            [24]  144 	jnz	00102$
                                    145 ;	mblen.c:37: return(0);
      000027 90 00 00         [24]  146 	mov	dptr,#0x0000
      00002A 22               [24]  147 	ret
      00002B                        148 00102$:
                                    149 ;	mblen.c:39: if(!n)
      00002B 90r00r00         [24]  150 	mov	dptr,#_mblen_PARM_2
      00002E E0               [24]  151 	movx	a,@dptr
      00002F FB               [12]  152 	mov	r3,a
      000030 A3               [24]  153 	inc	dptr
      000031 E0               [24]  154 	movx	a,@dptr
      000032 FC               [12]  155 	mov	r4,a
      000033 90r00r00         [24]  156 	mov	dptr,#_mblen_PARM_2
      000036 E0               [24]  157 	movx	a,@dptr
      000037 F5 F0            [12]  158 	mov	b,a
      000039 A3               [24]  159 	inc	dptr
      00003A E0               [24]  160 	movx	a,@dptr
      00003B 45 F0            [12]  161 	orl	a,b
      00003D 70 04            [24]  162 	jnz	00104$
                                    163 ;	mblen.c:40: return(-1);
      00003F 90 FF FF         [24]  164 	mov	dptr,#0xffff
      000042 22               [24]  165 	ret
      000043                        166 00104$:
                                    167 ;	mblen.c:42: c = *s;
      000043 8D 82            [24]  168 	mov	dpl,r5
      000045 8E 83            [24]  169 	mov	dph,r6
      000047 8F F0            [24]  170 	mov	b,r7
      000049 12r00r00         [24]  171 	lcall	__gptrget
      00004C FF               [12]  172 	mov	r7,a
      00004D 90r00r05         [24]  173 	mov	dptr,#_mblen_c_65536_40
      000050 F0               [24]  174 	movx	@dptr,a
                                    175 ;	mblen.c:44: if(!c)
      000051 EF               [12]  176 	mov	a,r7
      000052 70 04            [24]  177 	jnz	00106$
                                    178 ;	mblen.c:45: return(0);
      000054 90 00 00         [24]  179 	mov	dptr,#0x0000
      000057 22               [24]  180 	ret
      000058                        181 00106$:
                                    182 ;	mblen.c:47: if(c <= 0x7f)
      000058 EF               [12]  183 	mov	a,r7
      000059 24 80            [12]  184 	add	a,#0xff - 0x7f
      00005B 40 04            [24]  185 	jc	00126$
                                    186 ;	mblen.c:48: return(1);
      00005D 90 00 01         [24]  187 	mov	dptr,#0x0001
                                    188 ;	mblen.c:50: while(c & 0x80)
      000060 22               [24]  189 	ret
      000061                        190 00126$:
      000061 7F 00            [12]  191 	mov	r7,#0x00
      000063                        192 00109$:
      000063 90r00r05         [24]  193 	mov	dptr,#_mblen_c_65536_40
      000066 E0               [24]  194 	movx	a,@dptr
      000067 FE               [12]  195 	mov	r6,a
      000068 30 E7 0A         [24]  196 	jnb	acc.7,00111$
                                    197 ;	mblen.c:52: c <<= 1;
      00006B EE               [12]  198 	mov	a,r6
      00006C 2E               [12]  199 	add	a,r6
      00006D FE               [12]  200 	mov	r6,a
      00006E 90r00r05         [24]  201 	mov	dptr,#_mblen_c_65536_40
      000071 F0               [24]  202 	movx	@dptr,a
                                    203 ;	mblen.c:53: m++;
      000072 0F               [12]  204 	inc	r7
      000073 80 EE            [24]  205 	sjmp	00109$
      000075                        206 00111$:
                                    207 ;	mblen.c:56: if(m > n)
      000075 8F 05            [24]  208 	mov	ar5,r7
      000077 7E 00            [12]  209 	mov	r6,#0x00
      000079 C3               [12]  210 	clr	c
      00007A EB               [12]  211 	mov	a,r3
      00007B 9D               [12]  212 	subb	a,r5
      00007C EC               [12]  213 	mov	a,r4
      00007D 9E               [12]  214 	subb	a,r6
      00007E 50 04            [24]  215 	jnc	00129$
                                    216 ;	mblen.c:57: return(-1);
      000080 90 FF FF         [24]  217 	mov	dptr,#0xffff
                                    218 ;	mblen.c:60: while(--m)
      000083 22               [24]  219 	ret
      000084                        220 00129$:
      000084 90r00r02         [24]  221 	mov	dptr,#_mblen_s_65536_39
      000087 E0               [24]  222 	movx	a,@dptr
      000088 FA               [12]  223 	mov	r2,a
      000089 A3               [24]  224 	inc	dptr
      00008A E0               [24]  225 	movx	a,@dptr
      00008B FB               [12]  226 	mov	r3,a
      00008C A3               [24]  227 	inc	dptr
      00008D E0               [24]  228 	movx	a,@dptr
      00008E FC               [12]  229 	mov	r4,a
      00008F                        230 00116$:
      00008F 1F               [12]  231 	dec	r7
      000090 EF               [12]  232 	mov	a,r7
      000091 60 2B            [24]  233 	jz	00118$
                                    234 ;	mblen.c:61: if((*++s & 0xc0) != 0x80)
      000093 0A               [12]  235 	inc	r2
      000094 BA 00 01         [24]  236 	cjne	r2,#0x00,00169$
      000097 0B               [12]  237 	inc	r3
      000098                        238 00169$:
      000098 90r00r02         [24]  239 	mov	dptr,#_mblen_s_65536_39
      00009B EA               [12]  240 	mov	a,r2
      00009C F0               [24]  241 	movx	@dptr,a
      00009D EB               [12]  242 	mov	a,r3
      00009E A3               [24]  243 	inc	dptr
      00009F F0               [24]  244 	movx	@dptr,a
      0000A0 EC               [12]  245 	mov	a,r4
      0000A1 A3               [24]  246 	inc	dptr
      0000A2 F0               [24]  247 	movx	@dptr,a
      0000A3 8A 82            [24]  248 	mov	dpl,r2
      0000A5 8B 83            [24]  249 	mov	dph,r3
      0000A7 8C F0            [24]  250 	mov	b,r4
      0000A9 12r00r00         [24]  251 	lcall	__gptrget
      0000AC F8               [12]  252 	mov	r0,a
      0000AD 53 00 C0         [24]  253 	anl	ar0,#0xc0
      0000B0 79 00            [12]  254 	mov	r1,#0x00
      0000B2 B8 80 05         [24]  255 	cjne	r0,#0x80,00170$
      0000B5 B9 00 02         [24]  256 	cjne	r1,#0x00,00170$
      0000B8 80 D5            [24]  257 	sjmp	00116$
      0000BA                        258 00170$:
                                    259 ;	mblen.c:62: return(-1);
      0000BA 90 FF FF         [24]  260 	mov	dptr,#0xffff
      0000BD 22               [24]  261 	ret
      0000BE                        262 00118$:
                                    263 ;	mblen.c:64: return(n);
      0000BE 8D 82            [24]  264 	mov	dpl,r5
      0000C0 8E 83            [24]  265 	mov	dph,r6
                                    266 ;	mblen.c:65: }
      0000C2 22               [24]  267 	ret
                                    268 	.area CSEG    (CODE)
                                    269 	.area CONST   (CODE)
                                    270 	.area XINIT   (CODE)
                                    271 	.area CABS    (ABS,CODE)
