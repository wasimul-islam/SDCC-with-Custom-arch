                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module acosf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _asincosf
                                     12 	.globl _acosf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; initialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'acosf'
                                     92 ;------------------------------------------------------------
                                     93 ;x                         Allocated to registers r4 r5 r6 r7 
                                     94 ;------------------------------------------------------------
                                     95 ;	acosf.c:36: float acosf(float x) _FLOAT_FUNC_REENTRANT
                                     96 ;	-----------------------------------------
                                     97 ;	 function acosf
                                     98 ;	-----------------------------------------
      000000                         99 _acosf:
                           000007   100 	ar7 = 0x07
                           000006   101 	ar6 = 0x06
                           000005   102 	ar5 = 0x05
                           000004   103 	ar4 = 0x04
                           000003   104 	ar3 = 0x03
                           000002   105 	ar2 = 0x02
                           000001   106 	ar1 = 0x01
                           000000   107 	ar0 = 0x00
      000000 AC 82            [24]  108 	mov	r4,dpl
      000002 AD 83            [24]  109 	mov	r5,dph
      000004 AE F0            [24]  110 	mov	r6,b
      000006 FF               [12]  111 	mov	r7,a
                                    112 ;	acosf.c:38: if (x == 1.0) return 0.0;
      000007 C0 07            [24]  113 	push	ar7
      000009 C0 06            [24]  114 	push	ar6
      00000B C0 05            [24]  115 	push	ar5
      00000D C0 04            [24]  116 	push	ar4
      00000F E4               [12]  117 	clr	a
      000010 C0 E0            [24]  118 	push	acc
      000012 C0 E0            [24]  119 	push	acc
      000014 74 80            [12]  120 	mov	a,#0x80
      000016 C0 E0            [24]  121 	push	acc
      000018 74 3F            [12]  122 	mov	a,#0x3f
      00001A C0 E0            [24]  123 	push	acc
      00001C 8C 82            [24]  124 	mov	dpl,r4
      00001E 8D 83            [24]  125 	mov	dph,r5
      000020 8E F0            [24]  126 	mov	b,r6
      000022 EF               [12]  127 	mov	a,r7
      000023 12r00r00         [24]  128 	lcall	___fseq
      000026 AB 82            [24]  129 	mov	r3,dpl
      000028 E5 81            [12]  130 	mov	a,sp
      00002A 24 FC            [12]  131 	add	a,#0xfc
      00002C F5 81            [12]  132 	mov	sp,a
      00002E D0 04            [24]  133 	pop	ar4
      000030 D0 05            [24]  134 	pop	ar5
      000032 D0 06            [24]  135 	pop	ar6
      000034 D0 07            [24]  136 	pop	ar7
      000036 EB               [12]  137 	mov	a,r3
      000037 60 07            [24]  138 	jz	00108$
      000039 90 00 00         [24]  139 	mov	dptr,#(0x00&0x00ff)
      00003C E4               [12]  140 	clr	a
      00003D F5 F0            [12]  141 	mov	b,a
      00003F 22               [24]  142 	ret
      000040                        143 00108$:
                                    144 ;	acosf.c:39: else if (x ==-1.0) return PI;
      000040 C0 07            [24]  145 	push	ar7
      000042 C0 06            [24]  146 	push	ar6
      000044 C0 05            [24]  147 	push	ar5
      000046 C0 04            [24]  148 	push	ar4
      000048 E4               [12]  149 	clr	a
      000049 C0 E0            [24]  150 	push	acc
      00004B C0 E0            [24]  151 	push	acc
      00004D 74 80            [12]  152 	mov	a,#0x80
      00004F C0 E0            [24]  153 	push	acc
      000051 74 BF            [12]  154 	mov	a,#0xbf
      000053 C0 E0            [24]  155 	push	acc
      000055 8C 82            [24]  156 	mov	dpl,r4
      000057 8D 83            [24]  157 	mov	dph,r5
      000059 8E F0            [24]  158 	mov	b,r6
      00005B EF               [12]  159 	mov	a,r7
      00005C 12r00r00         [24]  160 	lcall	___fseq
      00005F AB 82            [24]  161 	mov	r3,dpl
      000061 E5 81            [12]  162 	mov	a,sp
      000063 24 FC            [12]  163 	add	a,#0xfc
      000065 F5 81            [12]  164 	mov	sp,a
      000067 D0 04            [24]  165 	pop	ar4
      000069 D0 05            [24]  166 	pop	ar5
      00006B D0 06            [24]  167 	pop	ar6
      00006D D0 07            [24]  168 	pop	ar7
      00006F EB               [12]  169 	mov	a,r3
      000070 60 09            [24]  170 	jz	00105$
      000072 90 0F DB         [24]  171 	mov	dptr,#0x0fdb
      000075 75 F0 49         [24]  172 	mov	b,#0x49
      000078 74 40            [12]  173 	mov	a,#0x40
      00007A 22               [24]  174 	ret
      00007B                        175 00105$:
                                    176 ;	acosf.c:40: else if (x == 0.0) return HALF_PI;
      00007B 8C F0            [24]  177 	mov	b,r4
      00007D ED               [12]  178 	mov	a,r5
      00007E 42 F0            [12]  179 	orl	b,a
      000080 EE               [12]  180 	mov	a,r6
      000081 42 F0            [12]  181 	orl	b,a
      000083 EF               [12]  182 	mov	a,r7
      000084 54 7F            [12]  183 	anl	a,#0x7F
      000086 45 F0            [12]  184 	orl	a,b
      000088 70 09            [24]  185 	jnz	00102$
      00008A 90 0F DB         [24]  186 	mov	dptr,#0x0fdb
      00008D 75 F0 C9         [24]  187 	mov	b,#0xc9
      000090 74 3F            [12]  188 	mov	a,#0x3f
      000092 22               [24]  189 	ret
      000093                        190 00102$:
                                    191 ;	acosf.c:41: else               return asincosf(x, true);
      000093 90r00r00         [24]  192 	mov	dptr,#_asincosf_PARM_2
      000096 74 01            [12]  193 	mov	a,#0x01
      000098 F0               [24]  194 	movx	@dptr,a
      000099 8C 82            [24]  195 	mov	dpl,r4
      00009B 8D 83            [24]  196 	mov	dph,r5
      00009D 8E F0            [24]  197 	mov	b,r6
      00009F EF               [12]  198 	mov	a,r7
                                    199 ;	acosf.c:42: }
      0000A0 02r00r00         [24]  200 	ljmp	_asincosf
                                    201 	.area CSEG    (CODE)
                                    202 	.area CONST   (CODE)
                                    203 	.area XINIT   (CODE)
                                    204 	.area CABS    (ABS,CODE)
