                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strstr
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strstr_PARM_2
                                     12 	.globl _strstr
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 	.area	OSEG    (OVR,DATA)
      000000                         36 _strstr_sloc0_1_0:
      000000                         37 	.ds 3
      000003                         38 _strstr_sloc1_1_0:
      000003                         39 	.ds 3
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
      000000                         61 _strstr_PARM_2:
      000000                         62 	.ds 3
      000003                         63 _strstr_str1_65536_26:
      000003                         64 	.ds 3
      000006                         65 _strstr_cp_65536_27:
      000006                         66 	.ds 3
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; initialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'strstr'
                                    103 ;------------------------------------------------------------
                                    104 ;str2                      Allocated with name '_strstr_PARM_2'
                                    105 ;str1                      Allocated with name '_strstr_str1_65536_26'
                                    106 ;cp                        Allocated with name '_strstr_cp_65536_27'
                                    107 ;s1                        Allocated with name '_strstr_s1_65536_27'
                                    108 ;s2                        Allocated with name '_strstr_s2_65536_27'
                                    109 ;sloc0                     Allocated with name '_strstr_sloc0_1_0'
                                    110 ;sloc1                     Allocated with name '_strstr_sloc1_1_0'
                                    111 ;------------------------------------------------------------
                                    112 ;	_strstr.c:31: char *strstr ( const char *str1, const char *str2 )
                                    113 ;	-----------------------------------------
                                    114 ;	 function strstr
                                    115 ;	-----------------------------------------
      000000                        116 _strstr:
                           000007   117 	ar7 = 0x07
                           000006   118 	ar6 = 0x06
                           000005   119 	ar5 = 0x05
                           000004   120 	ar4 = 0x04
                           000003   121 	ar3 = 0x03
                           000002   122 	ar2 = 0x02
                           000001   123 	ar1 = 0x01
                           000000   124 	ar0 = 0x00
      000000 AF F0            [24]  125 	mov	r7,b
      000002 AE 83            [24]  126 	mov	r6,dph
      000004 E5 82            [12]  127 	mov	a,dpl
      000006 90r00r03         [24]  128 	mov	dptr,#_strstr_str1_65536_26
      000009 F0               [24]  129 	movx	@dptr,a
      00000A EE               [12]  130 	mov	a,r6
      00000B A3               [24]  131 	inc	dptr
      00000C F0               [24]  132 	movx	@dptr,a
      00000D EF               [12]  133 	mov	a,r7
      00000E A3               [24]  134 	inc	dptr
      00000F F0               [24]  135 	movx	@dptr,a
                                    136 ;	_strstr.c:33: const char *cp = str1;
      000010 90r00r03         [24]  137 	mov	dptr,#_strstr_str1_65536_26
      000013 E0               [24]  138 	movx	a,@dptr
      000014 FD               [12]  139 	mov	r5,a
      000015 A3               [24]  140 	inc	dptr
      000016 E0               [24]  141 	movx	a,@dptr
      000017 FE               [12]  142 	mov	r6,a
      000018 A3               [24]  143 	inc	dptr
      000019 E0               [24]  144 	movx	a,@dptr
      00001A FF               [12]  145 	mov	r7,a
      00001B 90r00r06         [24]  146 	mov	dptr,#_strstr_cp_65536_27
      00001E ED               [12]  147 	mov	a,r5
      00001F F0               [24]  148 	movx	@dptr,a
      000020 EE               [12]  149 	mov	a,r6
      000021 A3               [24]  150 	inc	dptr
      000022 F0               [24]  151 	movx	@dptr,a
      000023 EF               [12]  152 	mov	a,r7
      000024 A3               [24]  153 	inc	dptr
      000025 F0               [24]  154 	movx	@dptr,a
                                    155 ;	_strstr.c:37: if (!*str2)
      000026 90r00r00         [24]  156 	mov	dptr,#_strstr_PARM_2
      000029 E0               [24]  157 	movx	a,@dptr
      00002A FA               [12]  158 	mov	r2,a
      00002B A3               [24]  159 	inc	dptr
      00002C E0               [24]  160 	movx	a,@dptr
      00002D FB               [12]  161 	mov	r3,a
      00002E A3               [24]  162 	inc	dptr
      00002F E0               [24]  163 	movx	a,@dptr
      000030 FC               [12]  164 	mov	r4,a
      000031 8A 82            [24]  165 	mov	dpl,r2
      000033 8B 83            [24]  166 	mov	dph,r3
      000035 8C F0            [24]  167 	mov	b,r4
      000037 12r00r00         [24]  168 	lcall	__gptrget
      00003A 70 07            [24]  169 	jnz	00122$
                                    170 ;	_strstr.c:38: return ((char*)str1);
      00003C 8D 82            [24]  171 	mov	dpl,r5
      00003E 8E 83            [24]  172 	mov	dph,r6
      000040 8F F0            [24]  173 	mov	b,r7
      000042 22               [24]  174 	ret
                                    175 ;	_strstr.c:40: while (*cp)
      000043                        176 00122$:
      000043                        177 00110$:
      000043 8D 82            [24]  178 	mov	dpl,r5
      000045 8E 83            [24]  179 	mov	dph,r6
      000047 8F F0            [24]  180 	mov	b,r7
      000049 12r00r00         [24]  181 	lcall	__gptrget
      00004C 70 03            [24]  182 	jnz	00149$
      00004E 02r00rDE         [24]  183 	ljmp	00112$
      000051                        184 00149$:
                                    185 ;	_strstr.c:45: while (*s1 && *s2 && !(*s1-*s2))
      000051 8D*00            [24]  186 	mov	_strstr_sloc0_1_0,r5
      000053 8E*01            [24]  187 	mov	(_strstr_sloc0_1_0 + 1),r6
      000055 8F*02            [24]  188 	mov	(_strstr_sloc0_1_0 + 2),r7
      000057 8A*03            [24]  189 	mov	_strstr_sloc1_1_0,r2
      000059 8B*04            [24]  190 	mov	(_strstr_sloc1_1_0 + 1),r3
      00005B 8C*05            [24]  191 	mov	(_strstr_sloc1_1_0 + 2),r4
      00005D                        192 00105$:
      00005D 85*00 82         [24]  193 	mov	dpl,_strstr_sloc0_1_0
      000060 85*01 83         [24]  194 	mov	dph,(_strstr_sloc0_1_0 + 1)
      000063 85*02 F0         [24]  195 	mov	b,(_strstr_sloc0_1_0 + 2)
      000066 12r00r00         [24]  196 	lcall	__gptrget
      000069 F9               [12]  197 	mov	r1,a
      00006A 60 39            [24]  198 	jz	00107$
      00006C 85*03 82         [24]  199 	mov	dpl,_strstr_sloc1_1_0
      00006F 85*04 83         [24]  200 	mov	dph,(_strstr_sloc1_1_0 + 1)
      000072 85*05 F0         [24]  201 	mov	b,(_strstr_sloc1_1_0 + 2)
      000075 12r00r00         [24]  202 	lcall	__gptrget
      000078 F8               [12]  203 	mov	r0,a
      000079 60 2A            [24]  204 	jz	00107$
      00007B C0 02            [24]  205 	push	ar2
      00007D C0 03            [24]  206 	push	ar3
      00007F C0 04            [24]  207 	push	ar4
      000081 E4               [12]  208 	clr	a
      000082 FC               [12]  209 	mov	r4,a
      000083 FB               [12]  210 	mov	r3,a
      000084 E9               [12]  211 	mov	a,r1
      000085 C3               [12]  212 	clr	c
      000086 98               [12]  213 	subb	a,r0
      000087 F9               [12]  214 	mov	r1,a
      000088 EC               [12]  215 	mov	a,r4
      000089 9B               [12]  216 	subb	a,r3
      00008A 49               [12]  217 	orl	a,r1
      00008B D0 04            [24]  218 	pop	ar4
      00008D D0 03            [24]  219 	pop	ar3
      00008F D0 02            [24]  220 	pop	ar2
      000091 70 12            [24]  221 	jnz	00107$
                                    222 ;	_strstr.c:46: s1++, s2++;
      000093 05*00            [12]  223 	inc	_strstr_sloc0_1_0
      000095 E4               [12]  224 	clr	a
      000096 B5*00 02         [24]  225 	cjne	a,_strstr_sloc0_1_0,00153$
      000099 05*01            [12]  226 	inc	(_strstr_sloc0_1_0 + 1)
      00009B                        227 00153$:
      00009B 05*03            [12]  228 	inc	_strstr_sloc1_1_0
      00009D E4               [12]  229 	clr	a
      00009E B5*03 BC         [24]  230 	cjne	a,_strstr_sloc1_1_0,00105$
      0000A1 05*04            [12]  231 	inc	(_strstr_sloc1_1_0 + 1)
      0000A3 80 B8            [24]  232 	sjmp	00105$
      0000A5                        233 00107$:
                                    234 ;	_strstr.c:48: if (!*s2)
      0000A5 85*03 82         [24]  235 	mov	dpl,_strstr_sloc1_1_0
      0000A8 85*04 83         [24]  236 	mov	dph,(_strstr_sloc1_1_0 + 1)
      0000AB 85*05 F0         [24]  237 	mov	b,(_strstr_sloc1_1_0 + 2)
      0000AE 12r00r00         [24]  238 	lcall	__gptrget
      0000B1 70 18            [24]  239 	jnz	00109$
                                    240 ;	_strstr.c:49: return ((char*)cp);
      0000B3 90r00r06         [24]  241 	mov	dptr,#_strstr_cp_65536_27
      0000B6 E0               [24]  242 	movx	a,@dptr
      0000B7 F5*03            [12]  243 	mov	_strstr_sloc1_1_0,a
      0000B9 A3               [24]  244 	inc	dptr
      0000BA E0               [24]  245 	movx	a,@dptr
      0000BB F5*04            [12]  246 	mov	(_strstr_sloc1_1_0 + 1),a
      0000BD A3               [24]  247 	inc	dptr
      0000BE E0               [24]  248 	movx	a,@dptr
      0000BF F5*05            [12]  249 	mov	(_strstr_sloc1_1_0 + 2),a
      0000C1 85*03 82         [24]  250 	mov	dpl,_strstr_sloc1_1_0
      0000C4 85*04 83         [24]  251 	mov	dph,(_strstr_sloc1_1_0 + 1)
      0000C7 85*05 F0         [24]  252 	mov	b,(_strstr_sloc1_1_0 + 2)
      0000CA 22               [24]  253 	ret
      0000CB                        254 00109$:
                                    255 ;	_strstr.c:51: cp++;
      0000CB 0D               [12]  256 	inc	r5
      0000CC BD 00 01         [24]  257 	cjne	r5,#0x00,00156$
      0000CF 0E               [12]  258 	inc	r6
      0000D0                        259 00156$:
      0000D0 90r00r06         [24]  260 	mov	dptr,#_strstr_cp_65536_27
      0000D3 ED               [12]  261 	mov	a,r5
      0000D4 F0               [24]  262 	movx	@dptr,a
      0000D5 EE               [12]  263 	mov	a,r6
      0000D6 A3               [24]  264 	inc	dptr
      0000D7 F0               [24]  265 	movx	@dptr,a
      0000D8 EF               [12]  266 	mov	a,r7
      0000D9 A3               [24]  267 	inc	dptr
      0000DA F0               [24]  268 	movx	@dptr,a
      0000DB 02r00r43         [24]  269 	ljmp	00110$
      0000DE                        270 00112$:
                                    271 ;	_strstr.c:54: return (NULL) ;
      0000DE 90 00 00         [24]  272 	mov	dptr,#0x0000
      0000E1 75 F0 00         [24]  273 	mov	b,#0x00
                                    274 ;	_strstr.c:55: }
      0000E4 22               [24]  275 	ret
                                    276 	.area CSEG    (CODE)
                                    277 	.area CONST   (CODE)
                                    278 	.area XINIT   (CODE)
                                    279 	.area CABS    (ABS,CODE)
