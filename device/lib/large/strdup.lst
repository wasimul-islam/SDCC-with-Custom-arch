                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strdup
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl _strlen
                                     13 	.globl _strcpy
                                     14 	.globl _strdup
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
      000000                         58 _strdup_s_65536_64:
      000000                         59 	.ds 3
                                     60 ;--------------------------------------------------------
                                     61 ; absolute external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XABS    (ABS,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; initialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XISEG   (XDATA)
                                     68 	.area HOME    (CODE)
                                     69 	.area GSINIT0 (CODE)
                                     70 	.area GSINIT1 (CODE)
                                     71 	.area GSINIT2 (CODE)
                                     72 	.area GSINIT3 (CODE)
                                     73 	.area GSINIT4 (CODE)
                                     74 	.area GSINIT5 (CODE)
                                     75 	.area GSINIT  (CODE)
                                     76 	.area GSFINAL (CODE)
                                     77 	.area CSEG    (CODE)
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; Home
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area HOME    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; code
                                     92 ;--------------------------------------------------------
                                     93 	.area CSEG    (CODE)
                                     94 ;------------------------------------------------------------
                                     95 ;Allocation info for local variables in function 'strdup'
                                     96 ;------------------------------------------------------------
                                     97 ;s                         Allocated with name '_strdup_s_65536_64'
                                     98 ;r                         Allocated with name '_strdup_r_65536_65'
                                     99 ;------------------------------------------------------------
                                    100 ;	strdup.c:33: char *strdup (const char *s)
                                    101 ;	-----------------------------------------
                                    102 ;	 function strdup
                                    103 ;	-----------------------------------------
      000000                        104 _strdup:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 AF F0            [24]  113 	mov	r7,b
      000002 AE 83            [24]  114 	mov	r6,dph
      000004 E5 82            [12]  115 	mov	a,dpl
      000006 90r00r00         [24]  116 	mov	dptr,#_strdup_s_65536_64
      000009 F0               [24]  117 	movx	@dptr,a
      00000A EE               [12]  118 	mov	a,r6
      00000B A3               [24]  119 	inc	dptr
      00000C F0               [24]  120 	movx	@dptr,a
      00000D EF               [12]  121 	mov	a,r7
      00000E A3               [24]  122 	inc	dptr
      00000F F0               [24]  123 	movx	@dptr,a
                                    124 ;	strdup.c:35: char *r = malloc(strlen(s) + 1);
      000010 90r00r00         [24]  125 	mov	dptr,#_strdup_s_65536_64
      000013 E0               [24]  126 	movx	a,@dptr
      000014 FD               [12]  127 	mov	r5,a
      000015 A3               [24]  128 	inc	dptr
      000016 E0               [24]  129 	movx	a,@dptr
      000017 FE               [12]  130 	mov	r6,a
      000018 A3               [24]  131 	inc	dptr
      000019 E0               [24]  132 	movx	a,@dptr
      00001A FF               [12]  133 	mov	r7,a
      00001B 8D 82            [24]  134 	mov	dpl,r5
      00001D 8E 83            [24]  135 	mov	dph,r6
      00001F 8F F0            [24]  136 	mov	b,r7
      000021 12r00r00         [24]  137 	lcall	_strlen
      000024 E5 82            [12]  138 	mov	a,dpl
      000026 85 83 F0         [24]  139 	mov	b,dph
      000029 24 01            [12]  140 	add	a,#0x01
      00002B FE               [12]  141 	mov	r6,a
      00002C E4               [12]  142 	clr	a
      00002D 35 F0            [12]  143 	addc	a,b
      00002F FF               [12]  144 	mov	r7,a
      000030 8E 82            [24]  145 	mov	dpl,r6
      000032 8F 83            [24]  146 	mov	dph,r7
      000034 12r00r00         [24]  147 	lcall	_malloc
      000037 AE 82            [24]  148 	mov	r6,dpl
      000039 AD 83            [24]  149 	mov	r5,dph
      00003B 7F 00            [12]  150 	mov	r7,#0x00
                                    151 ;	strdup.c:36: if (r)
      00003D EE               [12]  152 	mov	a,r6
      00003E 4D               [12]  153 	orl	a,r5
      00003F 60 2B            [24]  154 	jz	00102$
                                    155 ;	strdup.c:37: strcpy(r, s);
      000041 90r00r00         [24]  156 	mov	dptr,#_strdup_s_65536_64
      000044 E0               [24]  157 	movx	a,@dptr
      000045 FA               [12]  158 	mov	r2,a
      000046 A3               [24]  159 	inc	dptr
      000047 E0               [24]  160 	movx	a,@dptr
      000048 FB               [12]  161 	mov	r3,a
      000049 A3               [24]  162 	inc	dptr
      00004A E0               [24]  163 	movx	a,@dptr
      00004B FC               [12]  164 	mov	r4,a
      00004C 90r00r00         [24]  165 	mov	dptr,#_strcpy_PARM_2
      00004F EA               [12]  166 	mov	a,r2
      000050 F0               [24]  167 	movx	@dptr,a
      000051 EB               [12]  168 	mov	a,r3
      000052 A3               [24]  169 	inc	dptr
      000053 F0               [24]  170 	movx	@dptr,a
      000054 EC               [12]  171 	mov	a,r4
      000055 A3               [24]  172 	inc	dptr
      000056 F0               [24]  173 	movx	@dptr,a
      000057 8E 82            [24]  174 	mov	dpl,r6
      000059 8D 83            [24]  175 	mov	dph,r5
      00005B 8F F0            [24]  176 	mov	b,r7
      00005D C0 07            [24]  177 	push	ar7
      00005F C0 06            [24]  178 	push	ar6
      000061 C0 05            [24]  179 	push	ar5
      000063 12r00r00         [24]  180 	lcall	_strcpy
      000066 D0 05            [24]  181 	pop	ar5
      000068 D0 06            [24]  182 	pop	ar6
      00006A D0 07            [24]  183 	pop	ar7
      00006C                        184 00102$:
                                    185 ;	strdup.c:38: return (r);
      00006C 8E 82            [24]  186 	mov	dpl,r6
      00006E 8D 83            [24]  187 	mov	dph,r5
      000070 8F F0            [24]  188 	mov	b,r7
                                    189 ;	strdup.c:39: }
      000072 22               [24]  190 	ret
                                    191 	.area CSEG    (CODE)
                                    192 	.area CONST   (CODE)
                                    193 	.area XINIT   (CODE)
                                    194 	.area CABS    (ABS,CODE)
