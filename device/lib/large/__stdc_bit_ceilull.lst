                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __stdc_bit_ceilull
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___stdc_bit_ceilull
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 	.area	OSEG    (OVR,DATA)
      000000                         35 ___stdc_bit_ceilull_sloc0_1_0:
      000000                         36 	.ds 1
      000001                         37 ___stdc_bit_ceilull_sloc1_1_0:
      000001                         38 	.ds 8
                                     39 ;--------------------------------------------------------
                                     40 ; indirectly addressable internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area ISEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; absolute internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area IABS    (ABS,DATA)
                                     47 	.area IABS    (ABS,DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; bit data
                                     50 ;--------------------------------------------------------
                                     51 	.area BSEG    (BIT)
                                     52 ;--------------------------------------------------------
                                     53 ; paged external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area PSEG    (PAG,XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; uninitialized external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XSEG    (XDATA)
      000000                         60 ___stdc_bit_ceilull_value_65536_9:
      000000                         61 	.ds 8
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; initialized external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function '__stdc_bit_ceilull'
                                     98 ;------------------------------------------------------------
                                     99 ;value                     Allocated with name '___stdc_bit_ceilull_value_65536_9'
                                    100 ;i                         Allocated with name '___stdc_bit_ceilull_i_65536_10'
                                    101 ;sloc0                     Allocated with name '___stdc_bit_ceilull_sloc0_1_0'
                                    102 ;sloc1                     Allocated with name '___stdc_bit_ceilull_sloc1_1_0'
                                    103 ;------------------------------------------------------------
                                    104 ;	__stdc_bit_ceilull.c:37: unsigned long long __stdc_bit_ceilull(unsigned long long value)
                                    105 ;	-----------------------------------------
                                    106 ;	 function __stdc_bit_ceilull
                                    107 ;	-----------------------------------------
      000000                        108 ___stdc_bit_ceilull:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 C0 07            [24]  117 	push	ar7
      000002 C0 06            [24]  118 	push	ar6
      000004 C0 05            [24]  119 	push	ar5
      000006 C0 04            [24]  120 	push	ar4
      000008 C0 E0            [24]  121 	push	acc
      00000A C0 F0            [24]  122 	push	b
      00000C C0 83            [24]  123 	push	dph
      00000E C0 82            [24]  124 	push	dpl
      000010 90r00r00         [24]  125 	mov	dptr,#___stdc_bit_ceilull_value_65536_9
      000013 D0 E0            [24]  126 	pop	acc
      000015 F0               [24]  127 	movx	@dptr,a
      000016 D0 E0            [24]  128 	pop	acc
      000018 A3               [24]  129 	inc	dptr
      000019 F0               [24]  130 	movx	@dptr,a
      00001A D0 E0            [24]  131 	pop	acc
      00001C A3               [24]  132 	inc	dptr
      00001D F0               [24]  133 	movx	@dptr,a
      00001E D0 E0            [24]  134 	pop	acc
      000020 A3               [24]  135 	inc	dptr
      000021 F0               [24]  136 	movx	@dptr,a
      000022 D0 E0            [24]  137 	pop	acc
      000024 A3               [24]  138 	inc	dptr
      000025 F0               [24]  139 	movx	@dptr,a
      000026 D0 E0            [24]  140 	pop	acc
      000028 A3               [24]  141 	inc	dptr
      000029 F0               [24]  142 	movx	@dptr,a
      00002A D0 E0            [24]  143 	pop	acc
      00002C A3               [24]  144 	inc	dptr
      00002D F0               [24]  145 	movx	@dptr,a
      00002E D0 E0            [24]  146 	pop	acc
      000030 A3               [24]  147 	inc	dptr
      000031 F0               [24]  148 	movx	@dptr,a
                                    149 ;	__stdc_bit_ceilull.c:40: for(i = 0; i < ULLONG_WIDTH; i++)
      000032 90r00r00         [24]  150 	mov	dptr,#___stdc_bit_ceilull_value_65536_9
      000035 E0               [24]  151 	movx	a,@dptr
      000036 F5*01            [12]  152 	mov	___stdc_bit_ceilull_sloc1_1_0,a
      000038 A3               [24]  153 	inc	dptr
      000039 E0               [24]  154 	movx	a,@dptr
      00003A F5*02            [12]  155 	mov	(___stdc_bit_ceilull_sloc1_1_0 + 1),a
      00003C A3               [24]  156 	inc	dptr
      00003D E0               [24]  157 	movx	a,@dptr
      00003E F5*03            [12]  158 	mov	(___stdc_bit_ceilull_sloc1_1_0 + 2),a
      000040 A3               [24]  159 	inc	dptr
      000041 E0               [24]  160 	movx	a,@dptr
      000042 F5*04            [12]  161 	mov	(___stdc_bit_ceilull_sloc1_1_0 + 3),a
      000044 A3               [24]  162 	inc	dptr
      000045 E0               [24]  163 	movx	a,@dptr
      000046 F5*05            [12]  164 	mov	(___stdc_bit_ceilull_sloc1_1_0 + 4),a
      000048 A3               [24]  165 	inc	dptr
      000049 E0               [24]  166 	movx	a,@dptr
      00004A F5*06            [12]  167 	mov	(___stdc_bit_ceilull_sloc1_1_0 + 5),a
      00004C A3               [24]  168 	inc	dptr
      00004D E0               [24]  169 	movx	a,@dptr
      00004E F5*07            [12]  170 	mov	(___stdc_bit_ceilull_sloc1_1_0 + 6),a
      000050 A3               [24]  171 	inc	dptr
      000051 E0               [24]  172 	movx	a,@dptr
      000052 F5*08            [12]  173 	mov	(___stdc_bit_ceilull_sloc1_1_0 + 7),a
      000054 75*00 00         [24]  174 	mov	___stdc_bit_ceilull_sloc0_1_0,#0x00
      000057                        175 00104$:
                                    176 ;	__stdc_bit_ceilull.c:41: if(value <= (1ull << i))
      000057 85*00 F0         [24]  177 	mov	b,___stdc_bit_ceilull_sloc0_1_0
      00005A 05 F0            [12]  178 	inc	b
      00005C 78 01            [12]  179 	mov	r0,#0x01
      00005E 79 00            [12]  180 	mov	r1,#0x00
      000060 7A 00            [12]  181 	mov	r2,#0x00
      000062 7B 00            [12]  182 	mov	r3,#0x00
      000064 7C 00            [12]  183 	mov	r4,#0x00
      000066 7D 00            [12]  184 	mov	r5,#0x00
      000068 7E 00            [12]  185 	mov	r6,#0x00
      00006A 7F 00            [12]  186 	mov	r7,#0x00
      00006C 80 18            [24]  187 	sjmp	00118$
      00006E                        188 00117$:
      00006E E8               [12]  189 	mov	a,r0
      00006F 28               [12]  190 	add	a,r0
      000070 F8               [12]  191 	mov	r0,a
      000071 E9               [12]  192 	mov	a,r1
      000072 33               [12]  193 	rlc	a
      000073 F9               [12]  194 	mov	r1,a
      000074 EA               [12]  195 	mov	a,r2
      000075 33               [12]  196 	rlc	a
      000076 FA               [12]  197 	mov	r2,a
      000077 EB               [12]  198 	mov	a,r3
      000078 33               [12]  199 	rlc	a
      000079 FB               [12]  200 	mov	r3,a
      00007A EC               [12]  201 	mov	a,r4
      00007B 33               [12]  202 	rlc	a
      00007C FC               [12]  203 	mov	r4,a
      00007D ED               [12]  204 	mov	a,r5
      00007E 33               [12]  205 	rlc	a
      00007F FD               [12]  206 	mov	r5,a
      000080 EE               [12]  207 	mov	a,r6
      000081 33               [12]  208 	rlc	a
      000082 FE               [12]  209 	mov	r6,a
      000083 EF               [12]  210 	mov	a,r7
      000084 33               [12]  211 	rlc	a
      000085 FF               [12]  212 	mov	r7,a
      000086                        213 00118$:
      000086 D5 F0 E5         [24]  214 	djnz	b,00117$
      000089 C3               [12]  215 	clr	c
      00008A E8               [12]  216 	mov	a,r0
      00008B 95*01            [12]  217 	subb	a,___stdc_bit_ceilull_sloc1_1_0
      00008D E9               [12]  218 	mov	a,r1
      00008E 95*02            [12]  219 	subb	a,(___stdc_bit_ceilull_sloc1_1_0 + 1)
      000090 EA               [12]  220 	mov	a,r2
      000091 95*03            [12]  221 	subb	a,(___stdc_bit_ceilull_sloc1_1_0 + 2)
      000093 EB               [12]  222 	mov	a,r3
      000094 95*04            [12]  223 	subb	a,(___stdc_bit_ceilull_sloc1_1_0 + 3)
      000096 EC               [12]  224 	mov	a,r4
      000097 95*05            [12]  225 	subb	a,(___stdc_bit_ceilull_sloc1_1_0 + 4)
      000099 ED               [12]  226 	mov	a,r5
      00009A 95*06            [12]  227 	subb	a,(___stdc_bit_ceilull_sloc1_1_0 + 5)
      00009C EE               [12]  228 	mov	a,r6
      00009D 95*07            [12]  229 	subb	a,(___stdc_bit_ceilull_sloc1_1_0 + 6)
      00009F EF               [12]  230 	mov	a,r7
      0000A0 95*08            [12]  231 	subb	a,(___stdc_bit_ceilull_sloc1_1_0 + 7)
      0000A2 50 08            [24]  232 	jnc	00103$
                                    233 ;	__stdc_bit_ceilull.c:40: for(i = 0; i < ULLONG_WIDTH; i++)
      0000A4 05*00            [12]  234 	inc	___stdc_bit_ceilull_sloc0_1_0
      0000A6 74 C0            [12]  235 	mov	a,#0x100 - 0x40
      0000A8 25*00            [12]  236 	add	a,___stdc_bit_ceilull_sloc0_1_0
      0000AA 50 AB            [24]  237 	jnc	00104$
      0000AC                        238 00103$:
                                    239 ;	__stdc_bit_ceilull.c:43: return (1ull << i);
      0000AC 85*00 F0         [24]  240 	mov	b,___stdc_bit_ceilull_sloc0_1_0
      0000AF 05 F0            [12]  241 	inc	b
      0000B1 78 01            [12]  242 	mov	r0,#0x01
      0000B3 79 00            [12]  243 	mov	r1,#0x00
      0000B5 7A 00            [12]  244 	mov	r2,#0x00
      0000B7 7B 00            [12]  245 	mov	r3,#0x00
      0000B9 7C 00            [12]  246 	mov	r4,#0x00
      0000BB 7D 00            [12]  247 	mov	r5,#0x00
      0000BD 7E 00            [12]  248 	mov	r6,#0x00
      0000BF 7F 00            [12]  249 	mov	r7,#0x00
      0000C1 80 18            [24]  250 	sjmp	00122$
      0000C3                        251 00121$:
      0000C3 E8               [12]  252 	mov	a,r0
      0000C4 28               [12]  253 	add	a,r0
      0000C5 F8               [12]  254 	mov	r0,a
      0000C6 E9               [12]  255 	mov	a,r1
      0000C7 33               [12]  256 	rlc	a
      0000C8 F9               [12]  257 	mov	r1,a
      0000C9 EA               [12]  258 	mov	a,r2
      0000CA 33               [12]  259 	rlc	a
      0000CB FA               [12]  260 	mov	r2,a
      0000CC EB               [12]  261 	mov	a,r3
      0000CD 33               [12]  262 	rlc	a
      0000CE FB               [12]  263 	mov	r3,a
      0000CF EC               [12]  264 	mov	a,r4
      0000D0 33               [12]  265 	rlc	a
      0000D1 FC               [12]  266 	mov	r4,a
      0000D2 ED               [12]  267 	mov	a,r5
      0000D3 33               [12]  268 	rlc	a
      0000D4 FD               [12]  269 	mov	r5,a
      0000D5 EE               [12]  270 	mov	a,r6
      0000D6 33               [12]  271 	rlc	a
      0000D7 FE               [12]  272 	mov	r6,a
      0000D8 EF               [12]  273 	mov	a,r7
      0000D9 33               [12]  274 	rlc	a
      0000DA FF               [12]  275 	mov	r7,a
      0000DB                        276 00122$:
      0000DB D5 F0 E5         [24]  277 	djnz	b,00121$
      0000DE 88 82            [24]  278 	mov	dpl,r0
      0000E0 89 83            [24]  279 	mov	dph,r1
      0000E2 8A F0            [24]  280 	mov	b,r2
      0000E4 EB               [12]  281 	mov	a,r3
                                    282 ;	__stdc_bit_ceilull.c:44: }
      0000E5 22               [24]  283 	ret
                                    284 	.area CSEG    (CODE)
                                    285 	.area CONST   (CODE)
                                    286 	.area XINIT   (CODE)
                                    287 	.area CABS    (ABS,CODE)
