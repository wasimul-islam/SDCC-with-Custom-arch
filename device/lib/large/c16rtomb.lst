                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module c16rtomb
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wctomb
                                     12 	.globl _c16rtomb_PARM_3
                                     13 	.globl _c16rtomb_PARM_2
                                     14 	.globl _c16rtomb
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _c16rtomb_sloc0_1_0:
      000000                         35 	.ds 2
      000002                         36 _c16rtomb_sloc1_1_0:
      000002                         37 	.ds 3
      000005                         38 _c16rtomb_sloc2_1_0:
      000005                         39 	.ds 3
      000008                         40 _c16rtomb_sloc3_1_0:
      000008                         41 	.ds 2
      00000A                         42 _c16rtomb_sloc4_1_0:
      00000A                         43 	.ds 4
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable items in internal ram
                                     46 ;--------------------------------------------------------
                                     47 ;--------------------------------------------------------
                                     48 ; indirectly addressable internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area ISEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; absolute internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area IABS    (ABS,DATA)
                                     55 	.area IABS    (ABS,DATA)
                                     56 ;--------------------------------------------------------
                                     57 ; bit data
                                     58 ;--------------------------------------------------------
                                     59 	.area BSEG    (BIT)
                                     60 ;--------------------------------------------------------
                                     61 ; paged external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area PSEG    (PAG,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; uninitialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XSEG    (XDATA)
      000000                         68 _c16rtomb_PARM_2:
      000000                         69 	.ds 2
      000002                         70 _c16rtomb_PARM_3:
      000002                         71 	.ds 3
      000005                         72 _c16rtomb_s_65536_45:
      000005                         73 	.ds 3
      000008                         74 _c16rtomb_codepoint_65536_46:
      000008                         75 	.ds 4
      00000C                         76 _c16rtomb_buf_65536_46:
      00000C                         77 	.ds 4
      000010                         78 _c16rtomb_sps_65536_46:
      000010                         79 	.ds 3
                                     80 ;--------------------------------------------------------
                                     81 ; absolute external ram data
                                     82 ;--------------------------------------------------------
                                     83 	.area XABS    (ABS,XDATA)
                                     84 ;--------------------------------------------------------
                                     85 ; initialized external ram data
                                     86 ;--------------------------------------------------------
                                     87 	.area XISEG   (XDATA)
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT0 (CODE)
                                     90 	.area GSINIT1 (CODE)
                                     91 	.area GSINIT2 (CODE)
                                     92 	.area GSINIT3 (CODE)
                                     93 	.area GSINIT4 (CODE)
                                     94 	.area GSINIT5 (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 	.area GSFINAL (CODE)
                                     97 	.area CSEG    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; global & static initialisations
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area GSINIT  (CODE)
                                    103 	.area GSFINAL (CODE)
                                    104 	.area GSINIT  (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; Home
                                    107 ;--------------------------------------------------------
                                    108 	.area HOME    (CODE)
                                    109 	.area HOME    (CODE)
                                    110 ;--------------------------------------------------------
                                    111 ; code
                                    112 ;--------------------------------------------------------
                                    113 	.area CSEG    (CODE)
                                    114 ;------------------------------------------------------------
                                    115 ;Allocation info for local variables in function 'c16rtomb'
                                    116 ;------------------------------------------------------------
                                    117 ;sloc0                     Allocated with name '_c16rtomb_sloc0_1_0'
                                    118 ;sloc1                     Allocated with name '_c16rtomb_sloc1_1_0'
                                    119 ;sloc2                     Allocated with name '_c16rtomb_sloc2_1_0'
                                    120 ;sloc3                     Allocated with name '_c16rtomb_sloc3_1_0'
                                    121 ;sloc4                     Allocated with name '_c16rtomb_sloc4_1_0'
                                    122 ;c16                       Allocated with name '_c16rtomb_PARM_2'
                                    123 ;ps                        Allocated with name '_c16rtomb_PARM_3'
                                    124 ;s                         Allocated with name '_c16rtomb_s_65536_45'
                                    125 ;codepoint                 Allocated with name '_c16rtomb_codepoint_65536_46'
                                    126 ;buf                       Allocated with name '_c16rtomb_buf_65536_46'
                                    127 ;sps                       Allocated with name '_c16rtomb_sps_65536_46'
                                    128 ;high_surrogate            Allocated with name '_c16rtomb_high_surrogate_131072_48'
                                    129 ;------------------------------------------------------------
                                    130 ;	c16rtomb.c:35: size_t c16rtomb(char *restrict s, char16_t c16, mbstate_t *restrict ps)
                                    131 ;	-----------------------------------------
                                    132 ;	 function c16rtomb
                                    133 ;	-----------------------------------------
      000000                        134 _c16rtomb:
                           000007   135 	ar7 = 0x07
                           000006   136 	ar6 = 0x06
                           000005   137 	ar5 = 0x05
                           000004   138 	ar4 = 0x04
                           000003   139 	ar3 = 0x03
                           000002   140 	ar2 = 0x02
                           000001   141 	ar1 = 0x01
                           000000   142 	ar0 = 0x00
      000000 AF F0            [24]  143 	mov	r7,b
      000002 AE 83            [24]  144 	mov	r6,dph
      000004 E5 82            [12]  145 	mov	a,dpl
      000006 90r00r05         [24]  146 	mov	dptr,#_c16rtomb_s_65536_45
      000009 F0               [24]  147 	movx	@dptr,a
      00000A EE               [12]  148 	mov	a,r6
      00000B A3               [24]  149 	inc	dptr
      00000C F0               [24]  150 	movx	@dptr,a
      00000D EF               [12]  151 	mov	a,r7
      00000E A3               [24]  152 	inc	dptr
      00000F F0               [24]  153 	movx	@dptr,a
                                    154 ;	c16rtomb.c:41: if(!s)
      000010 90r00r05         [24]  155 	mov	dptr,#_c16rtomb_s_65536_45
      000013 E0               [24]  156 	movx	a,@dptr
      000014 F5 F0            [12]  157 	mov	b,a
      000016 A3               [24]  158 	inc	dptr
      000017 E0               [24]  159 	movx	a,@dptr
      000018 45 F0            [12]  160 	orl	a,b
      00001A 70 0D            [24]  161 	jnz	00102$
                                    162 ;	c16rtomb.c:42: s = buf;
      00001C 90r00r05         [24]  163 	mov	dptr,#_c16rtomb_s_65536_45
      00001F 74r0C            [12]  164 	mov	a,#_c16rtomb_buf_65536_46
      000021 F0               [24]  165 	movx	@dptr,a
      000022 74s00            [12]  166 	mov	a,#(_c16rtomb_buf_65536_46 >> 8)
      000024 A3               [24]  167 	inc	dptr
      000025 F0               [24]  168 	movx	@dptr,a
      000026 E4               [12]  169 	clr	a
      000027 A3               [24]  170 	inc	dptr
      000028 F0               [24]  171 	movx	@dptr,a
      000029                        172 00102$:
                                    173 ;	c16rtomb.c:44: if(!ps)
      000029 90r00r02         [24]  174 	mov	dptr,#_c16rtomb_PARM_3
      00002C E0               [24]  175 	movx	a,@dptr
      00002D F5 F0            [12]  176 	mov	b,a
      00002F A3               [24]  177 	inc	dptr
      000030 E0               [24]  178 	movx	a,@dptr
      000031 45 F0            [12]  179 	orl	a,b
      000033 70 0D            [24]  180 	jnz	00104$
                                    181 ;	c16rtomb.c:45: ps = &sps;
      000035 90r00r02         [24]  182 	mov	dptr,#_c16rtomb_PARM_3
      000038 74r10            [12]  183 	mov	a,#_c16rtomb_sps_65536_46
      00003A F0               [24]  184 	movx	@dptr,a
      00003B 74s00            [12]  185 	mov	a,#(_c16rtomb_sps_65536_46 >> 8)
      00003D A3               [24]  186 	inc	dptr
      00003E F0               [24]  187 	movx	@dptr,a
      00003F E4               [12]  188 	clr	a
      000040 A3               [24]  189 	inc	dptr
      000041 F0               [24]  190 	movx	@dptr,a
      000042                        191 00104$:
                                    192 ;	c16rtomb.c:47: if (!c16) // 0 always resets conversion state.
      000042 90r00r00         [24]  193 	mov	dptr,#_c16rtomb_PARM_2
      000045 E0               [24]  194 	movx	a,@dptr
      000046 F5*00            [12]  195 	mov	_c16rtomb_sloc0_1_0,a
      000048 A3               [24]  196 	inc	dptr
      000049 E0               [24]  197 	movx	a,@dptr
      00004A F5*01            [12]  198 	mov	(_c16rtomb_sloc0_1_0 + 1),a
      00004C E5*00            [12]  199 	mov	a,_c16rtomb_sloc0_1_0
      00004E 45*01            [12]  200 	orl	a,(_c16rtomb_sloc0_1_0 + 1)
      000050 70 3B            [24]  201 	jnz	00119$
                                    202 ;	c16rtomb.c:49: ps->c[1] = ps->c[2] = 0;
      000052 90r00r02         [24]  203 	mov	dptr,#_c16rtomb_PARM_3
      000055 E0               [24]  204 	movx	a,@dptr
      000056 FB               [12]  205 	mov	r3,a
      000057 A3               [24]  206 	inc	dptr
      000058 E0               [24]  207 	movx	a,@dptr
      000059 FC               [12]  208 	mov	r4,a
      00005A A3               [24]  209 	inc	dptr
      00005B E0               [24]  210 	movx	a,@dptr
      00005C FD               [12]  211 	mov	r5,a
      00005D 74 01            [12]  212 	mov	a,#0x01
      00005F 2B               [12]  213 	add	a,r3
      000060 F8               [12]  214 	mov	r0,a
      000061 E4               [12]  215 	clr	a
      000062 3C               [12]  216 	addc	a,r4
      000063 F9               [12]  217 	mov	r1,a
      000064 8D 02            [24]  218 	mov	ar2,r5
      000066 74 02            [12]  219 	mov	a,#0x02
      000068 2B               [12]  220 	add	a,r3
      000069 FB               [12]  221 	mov	r3,a
      00006A E4               [12]  222 	clr	a
      00006B 3C               [12]  223 	addc	a,r4
      00006C FC               [12]  224 	mov	r4,a
      00006D 8B 82            [24]  225 	mov	dpl,r3
      00006F 8C 83            [24]  226 	mov	dph,r4
      000071 8D F0            [24]  227 	mov	b,r5
      000073 E4               [12]  228 	clr	a
      000074 12r00r00         [24]  229 	lcall	__gptrput
      000077 88 82            [24]  230 	mov	dpl,r0
      000079 89 83            [24]  231 	mov	dph,r1
      00007B 8A F0            [24]  232 	mov	b,r2
      00007D 12r00r00         [24]  233 	lcall	__gptrput
                                    234 ;	c16rtomb.c:50: codepoint = 0;
      000080 90r00r08         [24]  235 	mov	dptr,#_c16rtomb_codepoint_65536_46
      000083 F0               [24]  236 	movx	@dptr,a
      000084 A3               [24]  237 	inc	dptr
      000085 F0               [24]  238 	movx	@dptr,a
      000086 A3               [24]  239 	inc	dptr
      000087 F0               [24]  240 	movx	@dptr,a
      000088 A3               [24]  241 	inc	dptr
      000089 F0               [24]  242 	movx	@dptr,a
      00008A 02r01rB8         [24]  243 	ljmp	00120$
      00008D                        244 00119$:
                                    245 ;	c16rtomb.c:52: else if(ps->c[1] || ps->c[2]) // We already have the high surrogate. Now get the low surrogate
      00008D 90r00r02         [24]  246 	mov	dptr,#_c16rtomb_PARM_3
      000090 E0               [24]  247 	movx	a,@dptr
      000091 FB               [12]  248 	mov	r3,a
      000092 A3               [24]  249 	inc	dptr
      000093 E0               [24]  250 	movx	a,@dptr
      000094 FC               [12]  251 	mov	r4,a
      000095 A3               [24]  252 	inc	dptr
      000096 E0               [24]  253 	movx	a,@dptr
      000097 FD               [12]  254 	mov	r5,a
      000098 74 01            [12]  255 	mov	a,#0x01
      00009A 2B               [12]  256 	add	a,r3
      00009B F8               [12]  257 	mov	r0,a
      00009C E4               [12]  258 	clr	a
      00009D 3C               [12]  259 	addc	a,r4
      00009E F9               [12]  260 	mov	r1,a
      00009F 8D 02            [24]  261 	mov	ar2,r5
      0000A1 88 82            [24]  262 	mov	dpl,r0
      0000A3 89 83            [24]  263 	mov	dph,r1
      0000A5 8A F0            [24]  264 	mov	b,r2
      0000A7 12r00r00         [24]  265 	lcall	__gptrget
      0000AA 70 15            [24]  266 	jnz	00114$
      0000AC 74 02            [12]  267 	mov	a,#0x02
      0000AE 2B               [12]  268 	add	a,r3
      0000AF FB               [12]  269 	mov	r3,a
      0000B0 E4               [12]  270 	clr	a
      0000B1 3C               [12]  271 	addc	a,r4
      0000B2 FC               [12]  272 	mov	r4,a
      0000B3 8B 82            [24]  273 	mov	dpl,r3
      0000B5 8C 83            [24]  274 	mov	dph,r4
      0000B7 8D F0            [24]  275 	mov	b,r5
      0000B9 12r00r00         [24]  276 	lcall	__gptrget
      0000BC 70 03            [24]  277 	jnz	00160$
      0000BE 02r01r6F         [24]  278 	ljmp	00115$
      0000C1                        279 00160$:
      0000C1                        280 00114$:
                                    281 ;	c16rtomb.c:56: if(c16 < 0xdc00 || c16 > 0xdfff)
      0000C1 74 24            [12]  282 	mov	a,#0x100 - 0xdc
      0000C3 25*01            [12]  283 	add	a,(_c16rtomb_sloc0_1_0 + 1)
      0000C5 40 03            [24]  284 	jc	00161$
      0000C7 02r01rE8         [24]  285 	ljmp	00121$
      0000CA                        286 00161$:
      0000CA C3               [12]  287 	clr	c
      0000CB 74 FF            [12]  288 	mov	a,#0xff
      0000CD 95*00            [12]  289 	subb	a,_c16rtomb_sloc0_1_0
      0000CF 74 DF            [12]  290 	mov	a,#0xdf
      0000D1 95*01            [12]  291 	subb	a,(_c16rtomb_sloc0_1_0 + 1)
      0000D3 50 03            [24]  292 	jnc	00162$
      0000D5 02r01rE8         [24]  293 	ljmp	00121$
      0000D8                        294 00162$:
                                    295 ;	c16rtomb.c:59: high_surrogate = ps->c[1] + (ps->c[2] << 8);
      0000D8 90r00r02         [24]  296 	mov	dptr,#_c16rtomb_PARM_3
      0000DB E0               [24]  297 	movx	a,@dptr
      0000DC F5*02            [12]  298 	mov	_c16rtomb_sloc1_1_0,a
      0000DE A3               [24]  299 	inc	dptr
      0000DF E0               [24]  300 	movx	a,@dptr
      0000E0 F5*03            [12]  301 	mov	(_c16rtomb_sloc1_1_0 + 1),a
      0000E2 A3               [24]  302 	inc	dptr
      0000E3 E0               [24]  303 	movx	a,@dptr
      0000E4 F5*04            [12]  304 	mov	(_c16rtomb_sloc1_1_0 + 2),a
      0000E6 74 01            [12]  305 	mov	a,#0x01
      0000E8 25*02            [12]  306 	add	a,_c16rtomb_sloc1_1_0
      0000EA F5*05            [12]  307 	mov	_c16rtomb_sloc2_1_0,a
      0000EC E4               [12]  308 	clr	a
      0000ED 35*03            [12]  309 	addc	a,(_c16rtomb_sloc1_1_0 + 1)
      0000EF F5*06            [12]  310 	mov	(_c16rtomb_sloc2_1_0 + 1),a
      0000F1 85*04*07         [24]  311 	mov	(_c16rtomb_sloc2_1_0 + 2),(_c16rtomb_sloc1_1_0 + 2)
      0000F4 85*05 82         [24]  312 	mov	dpl,_c16rtomb_sloc2_1_0
      0000F7 85*06 83         [24]  313 	mov	dph,(_c16rtomb_sloc2_1_0 + 1)
      0000FA 85*07 F0         [24]  314 	mov	b,(_c16rtomb_sloc2_1_0 + 2)
      0000FD 12r00r00         [24]  315 	lcall	__gptrget
      000100 FF               [12]  316 	mov	r7,a
      000101 8F*08            [24]  317 	mov	_c16rtomb_sloc3_1_0,r7
      000103 75*09 00         [24]  318 	mov	(_c16rtomb_sloc3_1_0 + 1),#0x00
      000106 74 02            [12]  319 	mov	a,#0x02
      000108 25*02            [12]  320 	add	a,_c16rtomb_sloc1_1_0
      00010A F5*02            [12]  321 	mov	_c16rtomb_sloc1_1_0,a
      00010C E4               [12]  322 	clr	a
      00010D 35*03            [12]  323 	addc	a,(_c16rtomb_sloc1_1_0 + 1)
      00010F F5*03            [12]  324 	mov	(_c16rtomb_sloc1_1_0 + 1),a
      000111 85*02 82         [24]  325 	mov	dpl,_c16rtomb_sloc1_1_0
      000114 85*03 83         [24]  326 	mov	dph,(_c16rtomb_sloc1_1_0 + 1)
      000117 85*04 F0         [24]  327 	mov	b,(_c16rtomb_sloc1_1_0 + 2)
      00011A 12r00r00         [24]  328 	lcall	__gptrget
      00011D FE               [12]  329 	mov	r6,a
      00011E E4               [12]  330 	clr	a
      00011F 25*08            [12]  331 	add	a,_c16rtomb_sloc3_1_0
      000121 FF               [12]  332 	mov	r7,a
      000122 EE               [12]  333 	mov	a,r6
      000123 35*09            [12]  334 	addc	a,(_c16rtomb_sloc3_1_0 + 1)
                                    335 ;	c16rtomb.c:60: ps->c[1] = ps->c[2] = 0;
      000125 85*02 82         [24]  336 	mov	dpl,_c16rtomb_sloc1_1_0
      000128 85*03 83         [24]  337 	mov	dph,(_c16rtomb_sloc1_1_0 + 1)
      00012B 85*04 F0         [24]  338 	mov	b,(_c16rtomb_sloc1_1_0 + 2)
      00012E E4               [12]  339 	clr	a
      00012F 12r00r00         [24]  340 	lcall	__gptrput
      000132 85*05 82         [24]  341 	mov	dpl,_c16rtomb_sloc2_1_0
      000135 85*06 83         [24]  342 	mov	dph,(_c16rtomb_sloc2_1_0 + 1)
      000138 85*07 F0         [24]  343 	mov	b,(_c16rtomb_sloc2_1_0 + 2)
      00013B 12r00r00         [24]  344 	lcall	__gptrput
                                    345 ;	c16rtomb.c:61: codepoint = (high_surrogate << 10) - (0xd800 << 10) + c16 - 0xdc00 + 0x10000;
      00013E EF               [12]  346 	mov	a,r7
      00013F 2F               [12]  347 	add	a,r7
      000140 25 E0            [12]  348 	add	a,acc
      000142 FE               [12]  349 	mov	r6,a
      000143 7F 00            [12]  350 	mov	r7,#0x00
      000145 E5*00            [12]  351 	mov	a,_c16rtomb_sloc0_1_0
      000147 2F               [12]  352 	add	a,r7
      000148 FF               [12]  353 	mov	r7,a
      000149 E5*01            [12]  354 	mov	a,(_c16rtomb_sloc0_1_0 + 1)
      00014B 3E               [12]  355 	addc	a,r6
      00014C FE               [12]  356 	mov	r6,a
      00014D 8F*0A            [24]  357 	mov	_c16rtomb_sloc4_1_0,r7
      00014F 8E*0B            [24]  358 	mov	(_c16rtomb_sloc4_1_0 + 1),r6
      000151 75*0C 00         [24]  359 	mov	(_c16rtomb_sloc4_1_0 + 2),#0x00
      000154 75*0D 00         [24]  360 	mov	(_c16rtomb_sloc4_1_0 + 3),#0x00
      000157 90r00r08         [24]  361 	mov	dptr,#_c16rtomb_codepoint_65536_46
      00015A E5*0A            [12]  362 	mov	a,_c16rtomb_sloc4_1_0
      00015C F0               [24]  363 	movx	@dptr,a
      00015D 74 24            [12]  364 	mov	a,#0x24
      00015F 25*0B            [12]  365 	add	a,(_c16rtomb_sloc4_1_0 + 1)
      000161 A3               [24]  366 	inc	dptr
      000162 F0               [24]  367 	movx	@dptr,a
      000163 E4               [12]  368 	clr	a
      000164 35*0C            [12]  369 	addc	a,(_c16rtomb_sloc4_1_0 + 2)
      000166 A3               [24]  370 	inc	dptr
      000167 F0               [24]  371 	movx	@dptr,a
      000168 E4               [12]  372 	clr	a
      000169 35*0D            [12]  373 	addc	a,(_c16rtomb_sloc4_1_0 + 3)
      00016B A3               [24]  374 	inc	dptr
      00016C F0               [24]  375 	movx	@dptr,a
      00016D 80 49            [24]  376 	sjmp	00120$
      00016F                        377 00115$:
                                    378 ;	c16rtomb.c:63: else if(c16 < 0xd7ff || c16 >= 0xe000) // Basic multilingual plane.
      00016F C3               [12]  379 	clr	c
      000170 E5*00            [12]  380 	mov	a,_c16rtomb_sloc0_1_0
      000172 94 FF            [12]  381 	subb	a,#0xff
      000174 E5*01            [12]  382 	mov	a,(_c16rtomb_sloc0_1_0 + 1)
      000176 94 D7            [12]  383 	subb	a,#0xd7
      000178 40 06            [24]  384 	jc	00110$
      00017A 74 20            [12]  385 	mov	a,#0x100 - 0xe0
      00017C 25*01            [12]  386 	add	a,(_c16rtomb_sloc0_1_0 + 1)
      00017E 50 11            [24]  387 	jnc	00111$
      000180                        388 00110$:
                                    389 ;	c16rtomb.c:64: codepoint = c16;
      000180 90r00r08         [24]  390 	mov	dptr,#_c16rtomb_codepoint_65536_46
      000183 E5*00            [12]  391 	mov	a,_c16rtomb_sloc0_1_0
      000185 F0               [24]  392 	movx	@dptr,a
      000186 E5*01            [12]  393 	mov	a,(_c16rtomb_sloc0_1_0 + 1)
      000188 A3               [24]  394 	inc	dptr
      000189 F0               [24]  395 	movx	@dptr,a
      00018A E4               [12]  396 	clr	a
      00018B A3               [24]  397 	inc	dptr
      00018C F0               [24]  398 	movx	@dptr,a
      00018D A3               [24]  399 	inc	dptr
      00018E F0               [24]  400 	movx	@dptr,a
      00018F 80 27            [24]  401 	sjmp	00120$
      000191                        402 00111$:
                                    403 ;	c16rtomb.c:67: if(c16 > 0xdbff)
      000191 C3               [12]  404 	clr	c
      000192 74 FF            [12]  405 	mov	a,#0xff
      000194 95*00            [12]  406 	subb	a,_c16rtomb_sloc0_1_0
      000196 74 DB            [12]  407 	mov	a,#0xdb
      000198 95*01            [12]  408 	subb	a,(_c16rtomb_sloc0_1_0 + 1)
      00019A 40 4C            [24]  409 	jc	00121$
                                    410 ;	c16rtomb.c:70: ps->c[1] = c16 & 0xff;
      00019C AE*00            [24]  411 	mov	r6,_c16rtomb_sloc0_1_0
      00019E 88 82            [24]  412 	mov	dpl,r0
      0001A0 89 83            [24]  413 	mov	dph,r1
      0001A2 8A F0            [24]  414 	mov	b,r2
      0001A4 EE               [12]  415 	mov	a,r6
      0001A5 12r00r00         [24]  416 	lcall	__gptrput
                                    417 ;	c16rtomb.c:71: ps->c[2] = c16 >> 8;
      0001A8 AF*01            [24]  418 	mov	r7,(_c16rtomb_sloc0_1_0 + 1)
      0001AA 8B 82            [24]  419 	mov	dpl,r3
      0001AC 8C 83            [24]  420 	mov	dph,r4
      0001AE 8D F0            [24]  421 	mov	b,r5
      0001B0 EF               [12]  422 	mov	a,r7
      0001B1 12r00r00         [24]  423 	lcall	__gptrput
                                    424 ;	c16rtomb.c:72: return(0);
      0001B4 90 00 00         [24]  425 	mov	dptr,#0x0000
      0001B7 22               [24]  426 	ret
      0001B8                        427 00120$:
                                    428 ;	c16rtomb.c:75: return(wctomb(s, codepoint));
      0001B8 90r00r05         [24]  429 	mov	dptr,#_c16rtomb_s_65536_45
      0001BB E0               [24]  430 	movx	a,@dptr
      0001BC FD               [12]  431 	mov	r5,a
      0001BD A3               [24]  432 	inc	dptr
      0001BE E0               [24]  433 	movx	a,@dptr
      0001BF FE               [12]  434 	mov	r6,a
      0001C0 A3               [24]  435 	inc	dptr
      0001C1 E0               [24]  436 	movx	a,@dptr
      0001C2 FF               [12]  437 	mov	r7,a
      0001C3 90r00r08         [24]  438 	mov	dptr,#_c16rtomb_codepoint_65536_46
      0001C6 E0               [24]  439 	movx	a,@dptr
      0001C7 F9               [12]  440 	mov	r1,a
      0001C8 A3               [24]  441 	inc	dptr
      0001C9 E0               [24]  442 	movx	a,@dptr
      0001CA FA               [12]  443 	mov	r2,a
      0001CB A3               [24]  444 	inc	dptr
      0001CC E0               [24]  445 	movx	a,@dptr
      0001CD FB               [12]  446 	mov	r3,a
      0001CE A3               [24]  447 	inc	dptr
      0001CF E0               [24]  448 	movx	a,@dptr
      0001D0 FC               [12]  449 	mov	r4,a
      0001D1 90r00r00         [24]  450 	mov	dptr,#_wctomb_PARM_2
      0001D4 E9               [12]  451 	mov	a,r1
      0001D5 F0               [24]  452 	movx	@dptr,a
      0001D6 EA               [12]  453 	mov	a,r2
      0001D7 A3               [24]  454 	inc	dptr
      0001D8 F0               [24]  455 	movx	@dptr,a
      0001D9 EB               [12]  456 	mov	a,r3
      0001DA A3               [24]  457 	inc	dptr
      0001DB F0               [24]  458 	movx	@dptr,a
      0001DC EC               [12]  459 	mov	a,r4
      0001DD A3               [24]  460 	inc	dptr
      0001DE F0               [24]  461 	movx	@dptr,a
      0001DF 8D 82            [24]  462 	mov	dpl,r5
      0001E1 8E 83            [24]  463 	mov	dph,r6
      0001E3 8F F0            [24]  464 	mov	b,r7
                                    465 ;	c16rtomb.c:77: eilseq:
      0001E5 02r00r00         [24]  466 	ljmp	_wctomb
      0001E8                        467 00121$:
                                    468 ;	c16rtomb.c:78: errno = EILSEQ;
      0001E8 90r00r00         [24]  469 	mov	dptr,#_errno
      0001EB 74 54            [12]  470 	mov	a,#0x54
      0001ED F0               [24]  471 	movx	@dptr,a
      0001EE E4               [12]  472 	clr	a
      0001EF A3               [24]  473 	inc	dptr
      0001F0 F0               [24]  474 	movx	@dptr,a
                                    475 ;	c16rtomb.c:79: return(-1);
      0001F1 90 FF FF         [24]  476 	mov	dptr,#0xffff
                                    477 ;	c16rtomb.c:80: }
      0001F4 22               [24]  478 	ret
                                    479 	.area CSEG    (CODE)
                                    480 	.area CONST   (CODE)
                                    481 	.area XINIT   (CODE)
                                    482 	.area CABS    (ABS,CODE)
