                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memmove
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memmove_PARM_3
                                     12 	.globl _memmove_PARM_2
                                     13 	.globl _memmove
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _memmove_sloc0_1_0:
      000000                         38 	.ds 3
      000003                         39 _memmove_sloc1_1_0:
      000003                         40 	.ds 3
      000006                         41 _memmove_sloc2_1_0:
      000006                         42 	.ds 2
      000008                         43 _memmove_sloc3_1_0:
      000008                         44 	.ds 3
                                     45 ;--------------------------------------------------------
                                     46 ; indirectly addressable internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area ISEG    (DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; absolute internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area IABS    (ABS,DATA)
                                     53 	.area IABS    (ABS,DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; bit data
                                     56 ;--------------------------------------------------------
                                     57 	.area BSEG    (BIT)
                                     58 ;--------------------------------------------------------
                                     59 ; paged external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area PSEG    (PAG,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; uninitialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XSEG    (XDATA)
      000000                         66 _memmove_PARM_2:
      000000                         67 	.ds 3
      000003                         68 _memmove_PARM_3:
      000003                         69 	.ds 2
      000005                         70 _memmove_dst_65536_26:
      000005                         71 	.ds 3
                                     72 ;--------------------------------------------------------
                                     73 ; absolute external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XABS    (ABS,XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; initialized external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XISEG   (XDATA)
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT0 (CODE)
                                     82 	.area GSINIT1 (CODE)
                                     83 	.area GSINIT2 (CODE)
                                     84 	.area GSINIT3 (CODE)
                                     85 	.area GSINIT4 (CODE)
                                     86 	.area GSINIT5 (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area CSEG    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 	.area GSFINAL (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area HOME    (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area CSEG    (CODE)
                                    106 ;------------------------------------------------------------
                                    107 ;Allocation info for local variables in function 'memmove'
                                    108 ;------------------------------------------------------------
                                    109 ;src                       Allocated with name '_memmove_PARM_2'
                                    110 ;size                      Allocated with name '_memmove_PARM_3'
                                    111 ;dst                       Allocated with name '_memmove_dst_65536_26'
                                    112 ;c                         Allocated with name '_memmove_c_65536_27'
                                    113 ;d                         Allocated with name '_memmove_d_65537_28'
                                    114 ;s                         Allocated with name '_memmove_s_65537_28'
                                    115 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                                    116 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                                    117 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                                    118 ;sloc3                     Allocated with name '_memmove_sloc3_1_0'
                                    119 ;------------------------------------------------------------
                                    120 ;	_memmove.c:35: void *memmove (void *dst, const void *src, size_t size)
                                    121 ;	-----------------------------------------
                                    122 ;	 function memmove
                                    123 ;	-----------------------------------------
      000000                        124 _memmove:
                           000007   125 	ar7 = 0x07
                           000006   126 	ar6 = 0x06
                           000005   127 	ar5 = 0x05
                           000004   128 	ar4 = 0x04
                           000003   129 	ar3 = 0x03
                           000002   130 	ar2 = 0x02
                           000001   131 	ar1 = 0x01
                           000000   132 	ar0 = 0x00
      000000 AF F0            [24]  133 	mov	r7,b
      000002 AE 83            [24]  134 	mov	r6,dph
      000004 E5 82            [12]  135 	mov	a,dpl
      000006 90r00r05         [24]  136 	mov	dptr,#_memmove_dst_65536_26
      000009 F0               [24]  137 	movx	@dptr,a
      00000A EE               [12]  138 	mov	a,r6
      00000B A3               [24]  139 	inc	dptr
      00000C F0               [24]  140 	movx	@dptr,a
      00000D EF               [12]  141 	mov	a,r7
      00000E A3               [24]  142 	inc	dptr
      00000F F0               [24]  143 	movx	@dptr,a
                                    144 ;	_memmove.c:37: size_t c = size;
      000010 90r00r03         [24]  145 	mov	dptr,#_memmove_PARM_3
      000013 E0               [24]  146 	movx	a,@dptr
      000014 FE               [12]  147 	mov	r6,a
      000015 A3               [24]  148 	inc	dptr
      000016 E0               [24]  149 	movx	a,@dptr
                                    150 ;	_memmove.c:38: if (c == 0 || dst == src)
      000017 FF               [12]  151 	mov	r7,a
      000018 4E               [12]  152 	orl	a,r6
      000019 60 2F            [24]  153 	jz	00101$
      00001B 90r00r05         [24]  154 	mov	dptr,#_memmove_dst_65536_26
      00001E E0               [24]  155 	movx	a,@dptr
      00001F FB               [12]  156 	mov	r3,a
      000020 A3               [24]  157 	inc	dptr
      000021 E0               [24]  158 	movx	a,@dptr
      000022 FC               [12]  159 	mov	r4,a
      000023 A3               [24]  160 	inc	dptr
      000024 E0               [24]  161 	movx	a,@dptr
      000025 FD               [12]  162 	mov	r5,a
      000026 90r00r00         [24]  163 	mov	dptr,#_memmove_PARM_2
      000029 E0               [24]  164 	movx	a,@dptr
      00002A F8               [12]  165 	mov	r0,a
      00002B A3               [24]  166 	inc	dptr
      00002C E0               [24]  167 	movx	a,@dptr
      00002D F9               [12]  168 	mov	r1,a
      00002E A3               [24]  169 	inc	dptr
      00002F E0               [24]  170 	movx	a,@dptr
      000030 FA               [12]  171 	mov	r2,a
      000031 C0 00            [24]  172 	push	ar0
      000033 C0 01            [24]  173 	push	ar1
      000035 C0 02            [24]  174 	push	ar2
      000037 8B 82            [24]  175 	mov	dpl,r3
      000039 8C 83            [24]  176 	mov	dph,r4
      00003B 8D F0            [24]  177 	mov	b,r5
      00003D 12r00r00         [24]  178 	lcall	___gptr_cmp
      000040 15 81            [12]  179 	dec	sp
      000042 15 81            [12]  180 	dec	sp
      000044 15 81            [12]  181 	dec	sp
      000046 60 02            [24]  182 	jz	00139$
      000048 80 18            [24]  183 	sjmp	00102$
      00004A                        184 00139$:
      00004A                        185 00101$:
                                    186 ;	_memmove.c:39: return dst;
      00004A 90r00r05         [24]  187 	mov	dptr,#_memmove_dst_65536_26
      00004D E0               [24]  188 	movx	a,@dptr
      00004E F5*00            [12]  189 	mov	_memmove_sloc0_1_0,a
      000050 A3               [24]  190 	inc	dptr
      000051 E0               [24]  191 	movx	a,@dptr
      000052 F5*01            [12]  192 	mov	(_memmove_sloc0_1_0 + 1),a
      000054 A3               [24]  193 	inc	dptr
      000055 E0               [24]  194 	movx	a,@dptr
      000056 F5*02            [12]  195 	mov	(_memmove_sloc0_1_0 + 2),a
      000058 85*00 82         [24]  196 	mov	dpl,_memmove_sloc0_1_0
      00005B 85*01 83         [24]  197 	mov	dph,(_memmove_sloc0_1_0 + 1)
      00005E 85*02 F0         [24]  198 	mov	b,(_memmove_sloc0_1_0 + 2)
      000061 22               [24]  199 	ret
      000062                        200 00102$:
                                    201 ;	_memmove.c:41: char *d = dst;
      000062 C0 06            [24]  202 	push	ar6
      000064 C0 07            [24]  203 	push	ar7
                                    204 ;	_memmove.c:42: const char *s = src;
      000066 88*00            [24]  205 	mov	_memmove_sloc0_1_0,r0
      000068 89*01            [24]  206 	mov	(_memmove_sloc0_1_0 + 1),r1
      00006A 8A*02            [24]  207 	mov	(_memmove_sloc0_1_0 + 2),r2
                                    208 ;	_memmove.c:43: if (s < d) {
      00006C 85*00*03         [24]  209 	mov	_memmove_sloc1_1_0,_memmove_sloc0_1_0
      00006F 85*01*04         [24]  210 	mov	(_memmove_sloc1_1_0 + 1),(_memmove_sloc0_1_0 + 1)
      000072 85*02*05         [24]  211 	mov	(_memmove_sloc1_1_0 + 2),(_memmove_sloc0_1_0 + 2)
      000075 8B 00            [24]  212 	mov	ar0,r3
      000077 8C 01            [24]  213 	mov	ar1,r4
      000079 8D 07            [24]  214 	mov	ar7,r5
      00007B C0 00            [24]  215 	push	ar0
      00007D C0 01            [24]  216 	push	ar1
      00007F C0 07            [24]  217 	push	ar7
      000081 85*03 82         [24]  218 	mov	dpl,_memmove_sloc1_1_0
      000084 85*04 83         [24]  219 	mov	dph,(_memmove_sloc1_1_0 + 1)
      000087 85*05 F0         [24]  220 	mov	b,(_memmove_sloc1_1_0 + 2)
      00008A 12r00r00         [24]  221 	lcall	___gptr_cmp
      00008D 15 81            [12]  222 	dec	sp
      00008F 15 81            [12]  223 	dec	sp
      000091 15 81            [12]  224 	dec	sp
      000093 D0 07            [24]  225 	pop	ar7
      000095 D0 06            [24]  226 	pop	ar6
      000097 50 57            [24]  227 	jnc	00119$
                                    228 ;	_memmove.c:50: s += c;
      000099 EE               [12]  229 	mov	a,r6
      00009A 25*00            [12]  230 	add	a,_memmove_sloc0_1_0
      00009C F5*08            [12]  231 	mov	_memmove_sloc3_1_0,a
      00009E EF               [12]  232 	mov	a,r7
      00009F 35*01            [12]  233 	addc	a,(_memmove_sloc0_1_0 + 1)
      0000A1 F5*09            [12]  234 	mov	(_memmove_sloc3_1_0 + 1),a
      0000A3 85*02*0A         [24]  235 	mov	(_memmove_sloc3_1_0 + 2),(_memmove_sloc0_1_0 + 2)
                                    236 ;	_memmove.c:51: d += c;
      0000A6 EE               [12]  237 	mov	a,r6
      0000A7 2B               [12]  238 	add	a,r3
      0000A8 F5*03            [12]  239 	mov	_memmove_sloc1_1_0,a
      0000AA EF               [12]  240 	mov	a,r7
      0000AB 3C               [12]  241 	addc	a,r4
      0000AC F5*04            [12]  242 	mov	(_memmove_sloc1_1_0 + 1),a
      0000AE 8D*05            [24]  243 	mov	(_memmove_sloc1_1_0 + 2),r5
                                    244 ;	_memmove.c:52: do {
      0000B0 8E*06            [24]  245 	mov	_memmove_sloc2_1_0,r6
      0000B2 8F*07            [24]  246 	mov	(_memmove_sloc2_1_0 + 1),r7
      0000B4                        247 00104$:
                                    248 ;	_memmove.c:53: *--d = *--s;
      0000B4 15*03            [12]  249 	dec	_memmove_sloc1_1_0
      0000B6 74 FF            [12]  250 	mov	a,#0xff
      0000B8 B5*03 02         [24]  251 	cjne	a,_memmove_sloc1_1_0,00141$
      0000BB 15*04            [12]  252 	dec	(_memmove_sloc1_1_0 + 1)
      0000BD                        253 00141$:
      0000BD 15*08            [12]  254 	dec	_memmove_sloc3_1_0
      0000BF 74 FF            [12]  255 	mov	a,#0xff
      0000C1 B5*08 02         [24]  256 	cjne	a,_memmove_sloc3_1_0,00142$
      0000C4 15*09            [12]  257 	dec	(_memmove_sloc3_1_0 + 1)
      0000C6                        258 00142$:
      0000C6 85*08 82         [24]  259 	mov	dpl,_memmove_sloc3_1_0
      0000C9 85*09 83         [24]  260 	mov	dph,(_memmove_sloc3_1_0 + 1)
      0000CC 85*0A F0         [24]  261 	mov	b,(_memmove_sloc3_1_0 + 2)
      0000CF 12r00r00         [24]  262 	lcall	__gptrget
      0000D2 FA               [12]  263 	mov	r2,a
      0000D3 85*03 82         [24]  264 	mov	dpl,_memmove_sloc1_1_0
      0000D6 85*04 83         [24]  265 	mov	dph,(_memmove_sloc1_1_0 + 1)
      0000D9 85*05 F0         [24]  266 	mov	b,(_memmove_sloc1_1_0 + 2)
      0000DC 12r00r00         [24]  267 	lcall	__gptrput
                                    268 ;	_memmove.c:54: } while (--c);
      0000DF 15*06            [12]  269 	dec	_memmove_sloc2_1_0
      0000E1 74 FF            [12]  270 	mov	a,#0xff
      0000E3 B5*06 02         [24]  271 	cjne	a,_memmove_sloc2_1_0,00143$
      0000E6 15*07            [12]  272 	dec	(_memmove_sloc2_1_0 + 1)
      0000E8                        273 00143$:
      0000E8 E5*06            [12]  274 	mov	a,_memmove_sloc2_1_0
      0000EA 45*07            [12]  275 	orl	a,(_memmove_sloc2_1_0 + 1)
      0000EC 70 C6            [24]  276 	jnz	00104$
                                    277 ;	_memmove.c:59: do {
      0000EE 80 37            [24]  278 	sjmp	00112$
      0000F0                        279 00119$:
      0000F0 A8*00            [24]  280 	mov	r0,_memmove_sloc0_1_0
      0000F2 A9*01            [24]  281 	mov	r1,(_memmove_sloc0_1_0 + 1)
      0000F4 AA*02            [24]  282 	mov	r2,(_memmove_sloc0_1_0 + 2)
      0000F6 8E*08            [24]  283 	mov	_memmove_sloc3_1_0,r6
      0000F8 8F*09            [24]  284 	mov	(_memmove_sloc3_1_0 + 1),r7
      0000FA                        285 00107$:
                                    286 ;	_memmove.c:60: *d++ = *s++;
      0000FA 88 82            [24]  287 	mov	dpl,r0
      0000FC 89 83            [24]  288 	mov	dph,r1
      0000FE 8A F0            [24]  289 	mov	b,r2
      000100 12r00r00         [24]  290 	lcall	__gptrget
      000103 FF               [12]  291 	mov	r7,a
      000104 A3               [24]  292 	inc	dptr
      000105 A8 82            [24]  293 	mov	r0,dpl
      000107 A9 83            [24]  294 	mov	r1,dph
      000109 8B 82            [24]  295 	mov	dpl,r3
      00010B 8C 83            [24]  296 	mov	dph,r4
      00010D 8D F0            [24]  297 	mov	b,r5
      00010F EF               [12]  298 	mov	a,r7
      000110 12r00r00         [24]  299 	lcall	__gptrput
      000113 A3               [24]  300 	inc	dptr
      000114 AB 82            [24]  301 	mov	r3,dpl
      000116 AC 83            [24]  302 	mov	r4,dph
                                    303 ;	_memmove.c:61: } while (--c);
      000118 15*08            [12]  304 	dec	_memmove_sloc3_1_0
      00011A 74 FF            [12]  305 	mov	a,#0xff
      00011C B5*08 02         [24]  306 	cjne	a,_memmove_sloc3_1_0,00145$
      00011F 15*09            [12]  307 	dec	(_memmove_sloc3_1_0 + 1)
      000121                        308 00145$:
      000121 E5*08            [12]  309 	mov	a,_memmove_sloc3_1_0
      000123 45*09            [12]  310 	orl	a,(_memmove_sloc3_1_0 + 1)
      000125 70 D3            [24]  311 	jnz	00107$
      000127                        312 00112$:
                                    313 ;	_memmove.c:65: return dst;
      000127 90r00r05         [24]  314 	mov	dptr,#_memmove_dst_65536_26
      00012A E0               [24]  315 	movx	a,@dptr
      00012B FD               [12]  316 	mov	r5,a
      00012C A3               [24]  317 	inc	dptr
      00012D E0               [24]  318 	movx	a,@dptr
      00012E FE               [12]  319 	mov	r6,a
      00012F A3               [24]  320 	inc	dptr
      000130 E0               [24]  321 	movx	a,@dptr
      000131 FF               [12]  322 	mov	r7,a
      000132 8D 82            [24]  323 	mov	dpl,r5
      000134 8E 83            [24]  324 	mov	dph,r6
      000136 8F F0            [24]  325 	mov	b,r7
                                    326 ;	_memmove.c:66: }
      000138 22               [24]  327 	ret
                                    328 	.area CSEG    (CODE)
                                    329 	.area CONST   (CODE)
                                    330 	.area XINIT   (CODE)
                                    331 	.area CABS    (ABS,CODE)
