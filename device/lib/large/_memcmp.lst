                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memcmp
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memcmp_PARM_3
                                     12 	.globl _memcmp_PARM_2
                                     13 	.globl _memcmp
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _memcmp_sloc0_1_0:
      000000                         38 	.ds 3
                                     39 ;--------------------------------------------------------
                                     40 ; indirectly addressable internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area ISEG    (DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; absolute internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area IABS    (ABS,DATA)
                                     47 	.area IABS    (ABS,DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; bit data
                                     50 ;--------------------------------------------------------
                                     51 	.area BSEG    (BIT)
                                     52 ;--------------------------------------------------------
                                     53 ; paged external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area PSEG    (PAG,XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; uninitialized external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XSEG    (XDATA)
      000000                         60 _memcmp_PARM_2:
      000000                         61 	.ds 3
      000003                         62 _memcmp_PARM_3:
      000003                         63 	.ds 2
      000005                         64 _memcmp_buf1_65536_26:
      000005                         65 	.ds 3
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; initialized external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'memcmp'
                                    102 ;------------------------------------------------------------
                                    103 ;buf2                      Allocated with name '_memcmp_PARM_2'
                                    104 ;count                     Allocated with name '_memcmp_PARM_3'
                                    105 ;buf1                      Allocated with name '_memcmp_buf1_65536_26'
                                    106 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                                    107 ;------------------------------------------------------------
                                    108 ;	_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                                    109 ;	-----------------------------------------
                                    110 ;	 function memcmp
                                    111 ;	-----------------------------------------
      000000                        112 _memcmp:
                           000007   113 	ar7 = 0x07
                           000006   114 	ar6 = 0x06
                           000005   115 	ar5 = 0x05
                           000004   116 	ar4 = 0x04
                           000003   117 	ar3 = 0x03
                           000002   118 	ar2 = 0x02
                           000001   119 	ar1 = 0x01
                           000000   120 	ar0 = 0x00
      000000 AF F0            [24]  121 	mov	r7,b
      000002 AE 83            [24]  122 	mov	r6,dph
      000004 E5 82            [12]  123 	mov	a,dpl
      000006 90r00r05         [24]  124 	mov	dptr,#_memcmp_buf1_65536_26
      000009 F0               [24]  125 	movx	@dptr,a
      00000A EE               [12]  126 	mov	a,r6
      00000B A3               [24]  127 	inc	dptr
      00000C F0               [24]  128 	movx	@dptr,a
      00000D EF               [12]  129 	mov	a,r7
      00000E A3               [24]  130 	inc	dptr
      00000F F0               [24]  131 	movx	@dptr,a
                                    132 ;	_memcmp.c:33: if (!count)
      000010 90r00r03         [24]  133 	mov	dptr,#_memcmp_PARM_3
      000013 E0               [24]  134 	movx	a,@dptr
      000014 FE               [12]  135 	mov	r6,a
      000015 A3               [24]  136 	inc	dptr
      000016 E0               [24]  137 	movx	a,@dptr
      000017 FF               [12]  138 	mov	r7,a
      000018 90r00r03         [24]  139 	mov	dptr,#_memcmp_PARM_3
      00001B E0               [24]  140 	movx	a,@dptr
      00001C F5 F0            [12]  141 	mov	b,a
      00001E A3               [24]  142 	inc	dptr
      00001F E0               [24]  143 	movx	a,@dptr
      000020 45 F0            [12]  144 	orl	a,b
      000022 70 04            [24]  145 	jnz	00112$
                                    146 ;	_memcmp.c:34: return(0);
      000024 90 00 00         [24]  147 	mov	dptr,#0x0000
      000027 22               [24]  148 	ret
                                    149 ;	_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
      000028                        150 00112$:
      000028                        151 00104$:
      000028 1E               [12]  152 	dec	r6
      000029 BE FF 01         [24]  153 	cjne	r6,#0xff,00127$
      00002C 1F               [12]  154 	dec	r7
      00002D                        155 00127$:
      00002D EE               [12]  156 	mov	a,r6
      00002E 4F               [12]  157 	orl	a,r7
      00002F 60 75            [24]  158 	jz	00106$
      000031 C0 06            [24]  159 	push	ar6
      000033 C0 07            [24]  160 	push	ar7
      000035 90r00r05         [24]  161 	mov	dptr,#_memcmp_buf1_65536_26
      000038 E0               [24]  162 	movx	a,@dptr
      000039 FB               [12]  163 	mov	r3,a
      00003A A3               [24]  164 	inc	dptr
      00003B E0               [24]  165 	movx	a,@dptr
      00003C FC               [12]  166 	mov	r4,a
      00003D A3               [24]  167 	inc	dptr
      00003E E0               [24]  168 	movx	a,@dptr
      00003F FD               [12]  169 	mov	r5,a
      000040 8B 00            [24]  170 	mov	ar0,r3
      000042 8C 01            [24]  171 	mov	ar1,r4
      000044 8D 02            [24]  172 	mov	ar2,r5
      000046 88 82            [24]  173 	mov	dpl,r0
      000048 89 83            [24]  174 	mov	dph,r1
      00004A 8A F0            [24]  175 	mov	b,r2
      00004C 12r00r00         [24]  176 	lcall	__gptrget
      00004F F8               [12]  177 	mov	r0,a
      000050 90r00r00         [24]  178 	mov	dptr,#_memcmp_PARM_2
      000053 E0               [24]  179 	movx	a,@dptr
      000054 F5*00            [12]  180 	mov	_memcmp_sloc0_1_0,a
      000056 A3               [24]  181 	inc	dptr
      000057 E0               [24]  182 	movx	a,@dptr
      000058 F5*01            [12]  183 	mov	(_memcmp_sloc0_1_0 + 1),a
      00005A A3               [24]  184 	inc	dptr
      00005B E0               [24]  185 	movx	a,@dptr
      00005C F5*02            [12]  186 	mov	(_memcmp_sloc0_1_0 + 2),a
      00005E A9*00            [24]  187 	mov	r1,_memcmp_sloc0_1_0
      000060 AA*01            [24]  188 	mov	r2,(_memcmp_sloc0_1_0 + 1)
      000062 AF*02            [24]  189 	mov	r7,(_memcmp_sloc0_1_0 + 2)
      000064 89 82            [24]  190 	mov	dpl,r1
      000066 8A 83            [24]  191 	mov	dph,r2
      000068 8F F0            [24]  192 	mov	b,r7
      00006A 12r00r00         [24]  193 	lcall	__gptrget
      00006D F9               [12]  194 	mov	r1,a
      00006E E8               [12]  195 	mov	a,r0
      00006F B5 01 02         [24]  196 	cjne	a,ar1,00129$
      000072 80 06            [24]  197 	sjmp	00130$
      000074                        198 00129$:
      000074 D0 07            [24]  199 	pop	ar7
      000076 D0 06            [24]  200 	pop	ar6
      000078 80 2C            [24]  201 	sjmp	00106$
      00007A                        202 00130$:
      00007A D0 07            [24]  203 	pop	ar7
      00007C D0 06            [24]  204 	pop	ar6
                                    205 ;	_memcmp.c:37: buf1 = (char *)buf1 + 1;
      00007E 0B               [12]  206 	inc	r3
      00007F BB 00 01         [24]  207 	cjne	r3,#0x00,00131$
      000082 0C               [12]  208 	inc	r4
      000083                        209 00131$:
      000083 90r00r05         [24]  210 	mov	dptr,#_memcmp_buf1_65536_26
      000086 EB               [12]  211 	mov	a,r3
      000087 F0               [24]  212 	movx	@dptr,a
      000088 EC               [12]  213 	mov	a,r4
      000089 A3               [24]  214 	inc	dptr
      00008A F0               [24]  215 	movx	@dptr,a
      00008B ED               [12]  216 	mov	a,r5
      00008C A3               [24]  217 	inc	dptr
      00008D F0               [24]  218 	movx	@dptr,a
                                    219 ;	_memcmp.c:38: buf2 = (char *)buf2 + 1;
      00008E AB*00            [24]  220 	mov	r3,_memcmp_sloc0_1_0
      000090 AC*01            [24]  221 	mov	r4,(_memcmp_sloc0_1_0 + 1)
      000092 AD*02            [24]  222 	mov	r5,(_memcmp_sloc0_1_0 + 2)
      000094 0B               [12]  223 	inc	r3
      000095 BB 00 01         [24]  224 	cjne	r3,#0x00,00132$
      000098 0C               [12]  225 	inc	r4
      000099                        226 00132$:
      000099 90r00r00         [24]  227 	mov	dptr,#_memcmp_PARM_2
      00009C EB               [12]  228 	mov	a,r3
      00009D F0               [24]  229 	movx	@dptr,a
      00009E EC               [12]  230 	mov	a,r4
      00009F A3               [24]  231 	inc	dptr
      0000A0 F0               [24]  232 	movx	@dptr,a
      0000A1 ED               [12]  233 	mov	a,r5
      0000A2 A3               [24]  234 	inc	dptr
      0000A3 F0               [24]  235 	movx	@dptr,a
      0000A4 80 82            [24]  236 	sjmp	00104$
      0000A6                        237 00106$:
                                    238 ;	_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
      0000A6 90r00r05         [24]  239 	mov	dptr,#_memcmp_buf1_65536_26
      0000A9 E0               [24]  240 	movx	a,@dptr
      0000AA FD               [12]  241 	mov	r5,a
      0000AB A3               [24]  242 	inc	dptr
      0000AC E0               [24]  243 	movx	a,@dptr
      0000AD FE               [12]  244 	mov	r6,a
      0000AE A3               [24]  245 	inc	dptr
      0000AF E0               [24]  246 	movx	a,@dptr
      0000B0 FF               [12]  247 	mov	r7,a
      0000B1 8D 82            [24]  248 	mov	dpl,r5
      0000B3 8E 83            [24]  249 	mov	dph,r6
      0000B5 8F F0            [24]  250 	mov	b,r7
      0000B7 12r00r00         [24]  251 	lcall	__gptrget
      0000BA FD               [12]  252 	mov	r5,a
      0000BB 7F 00            [12]  253 	mov	r7,#0x00
      0000BD 90r00r00         [24]  254 	mov	dptr,#_memcmp_PARM_2
      0000C0 E0               [24]  255 	movx	a,@dptr
      0000C1 FB               [12]  256 	mov	r3,a
      0000C2 A3               [24]  257 	inc	dptr
      0000C3 E0               [24]  258 	movx	a,@dptr
      0000C4 FC               [12]  259 	mov	r4,a
      0000C5 A3               [24]  260 	inc	dptr
      0000C6 E0               [24]  261 	movx	a,@dptr
      0000C7 FE               [12]  262 	mov	r6,a
      0000C8 8B 82            [24]  263 	mov	dpl,r3
      0000CA 8C 83            [24]  264 	mov	dph,r4
      0000CC 8E F0            [24]  265 	mov	b,r6
      0000CE 12r00r00         [24]  266 	lcall	__gptrget
      0000D1 FB               [12]  267 	mov	r3,a
      0000D2 7E 00            [12]  268 	mov	r6,#0x00
      0000D4 ED               [12]  269 	mov	a,r5
      0000D5 C3               [12]  270 	clr	c
      0000D6 9B               [12]  271 	subb	a,r3
      0000D7 FD               [12]  272 	mov	r5,a
      0000D8 EF               [12]  273 	mov	a,r7
      0000D9 9E               [12]  274 	subb	a,r6
                                    275 ;	_memcmp.c:42: }
      0000DA 8D 82            [24]  276 	mov	dpl,r5
      0000DC F5 83            [12]  277 	mov	dph,a
      0000DE 22               [24]  278 	ret
                                    279 	.area CSEG    (CODE)
                                    280 	.area CONST   (CODE)
                                    281 	.area XINIT   (CODE)
                                    282 	.area CABS    (ABS,CODE)
