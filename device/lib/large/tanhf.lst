                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tanhf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _expf
                                     13 	.globl _tanhf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; uninitialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; initialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'tanhf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;f                         Allocated to stack - _bp +9
                                     96 ;g                         Allocated to stack - _bp +13
                                     97 ;r                         Allocated to registers r7 r6 r5 r4 
                                     98 ;sloc0                     Allocated to stack - _bp +17
                                     99 ;sloc1                     Allocated to stack - _bp +5
                                    100 ;------------------------------------------------------------
                                    101 ;	tanhf.c:50: float tanhf(float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function tanhf
                                    104 ;	-----------------------------------------
      000000                        105 _tanhf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C0 82            [24]  116 	push	dpl
      000007 C0 83            [24]  117 	push	dph
      000009 C0 F0            [24]  118 	push	b
      00000B C0 E0            [24]  119 	push	acc
      00000D E5 81            [12]  120 	mov	a,sp
      00000F 24 0C            [12]  121 	add	a,#0x0c
      000011 F5 81            [12]  122 	mov	sp,a
                                    123 ;	tanhf.c:54: f=fabsf(x);
      000013 A8*00            [24]  124 	mov	r0,_bp
      000015 08               [12]  125 	inc	r0
      000016 86 82            [24]  126 	mov	dpl,@r0
      000018 08               [12]  127 	inc	r0
      000019 86 83            [24]  128 	mov	dph,@r0
      00001B 08               [12]  129 	inc	r0
      00001C 86 F0            [24]  130 	mov	b,@r0
      00001E 08               [12]  131 	inc	r0
      00001F E6               [12]  132 	mov	a,@r0
      000020 12r00r00         [24]  133 	lcall	_fabsf
      000023 AC 82            [24]  134 	mov	r4,dpl
      000025 AD 83            [24]  135 	mov	r5,dph
      000027 AE F0            [24]  136 	mov	r6,b
      000029 FF               [12]  137 	mov	r7,a
      00002A E5*00            [12]  138 	mov	a,_bp
      00002C 24 09            [12]  139 	add	a,#0x09
      00002E F8               [12]  140 	mov	r0,a
      00002F A6 04            [24]  141 	mov	@r0,ar4
      000031 08               [12]  142 	inc	r0
      000032 A6 05            [24]  143 	mov	@r0,ar5
      000034 08               [12]  144 	inc	r0
      000035 A6 06            [24]  145 	mov	@r0,ar6
      000037 08               [12]  146 	inc	r0
      000038 A6 07            [24]  147 	mov	@r0,ar7
                                    148 ;	tanhf.c:55: if(f>SBIG) r=1.0;
      00003A E5*00            [12]  149 	mov	a,_bp
      00003C 24 09            [12]  150 	add	a,#0x09
      00003E F8               [12]  151 	mov	r0,a
      00003F E6               [12]  152 	mov	a,@r0
      000040 C0 E0            [24]  153 	push	acc
      000042 08               [12]  154 	inc	r0
      000043 E6               [12]  155 	mov	a,@r0
      000044 C0 E0            [24]  156 	push	acc
      000046 08               [12]  157 	inc	r0
      000047 E6               [12]  158 	mov	a,@r0
      000048 C0 E0            [24]  159 	push	acc
      00004A 08               [12]  160 	inc	r0
      00004B E6               [12]  161 	mov	a,@r0
      00004C C0 E0            [24]  162 	push	acc
      00004E 90 2C B0         [24]  163 	mov	dptr,#0x2cb0
      000051 75 F0 10         [24]  164 	mov	b,#0x10
      000054 74 41            [12]  165 	mov	a,#0x41
      000056 12r00r00         [24]  166 	lcall	___fslt
      000059 AD 82            [24]  167 	mov	r5,dpl
      00005B E5 81            [12]  168 	mov	a,sp
      00005D 24 FC            [12]  169 	add	a,#0xfc
      00005F F5 81            [12]  170 	mov	sp,a
      000061 ED               [12]  171 	mov	a,r5
      000062 60 0B            [24]  172 	jz	00108$
      000064 7E 00            [12]  173 	mov	r6,#0x00
      000066 7D 00            [12]  174 	mov	r5,#0x00
      000068 7C 80            [12]  175 	mov	r4,#0x80
      00006A 7B 3F            [12]  176 	mov	r3,#0x3f
      00006C 02r03r11         [24]  177 	ljmp	00109$
      00006F                        178 00108$:
                                    179 ;	tanhf.c:56: else if(f>K1)
      00006F E5*00            [12]  180 	mov	a,_bp
      000071 24 09            [12]  181 	add	a,#0x09
      000073 F8               [12]  182 	mov	r0,a
      000074 E6               [12]  183 	mov	a,@r0
      000075 C0 E0            [24]  184 	push	acc
      000077 08               [12]  185 	inc	r0
      000078 E6               [12]  186 	mov	a,@r0
      000079 C0 E0            [24]  187 	push	acc
      00007B 08               [12]  188 	inc	r0
      00007C E6               [12]  189 	mov	a,@r0
      00007D C0 E0            [24]  190 	push	acc
      00007F 08               [12]  191 	inc	r0
      000080 E6               [12]  192 	mov	a,@r0
      000081 C0 E0            [24]  193 	push	acc
      000083 90 9F 54         [24]  194 	mov	dptr,#0x9f54
      000086 75 F0 0C         [24]  195 	mov	b,#0x0c
      000089 74 3F            [12]  196 	mov	a,#0x3f
      00008B 12r00r00         [24]  197 	lcall	___fslt
      00008E AD 82            [24]  198 	mov	r5,dpl
      000090 E5 81            [12]  199 	mov	a,sp
      000092 24 FC            [12]  200 	add	a,#0xfc
      000094 F5 81            [12]  201 	mov	sp,a
      000096 ED               [12]  202 	mov	a,r5
      000097 70 03            [24]  203 	jnz	00135$
      000099 02r01r66         [24]  204 	ljmp	00105$
      00009C                        205 00135$:
                                    206 ;	tanhf.c:58: r=0.5-1.0/(expf(f+f)+1.0);
      00009C E5*00            [12]  207 	mov	a,_bp
      00009E 24 09            [12]  208 	add	a,#0x09
      0000A0 F8               [12]  209 	mov	r0,a
      0000A1 E6               [12]  210 	mov	a,@r0
      0000A2 C0 E0            [24]  211 	push	acc
      0000A4 08               [12]  212 	inc	r0
      0000A5 E6               [12]  213 	mov	a,@r0
      0000A6 C0 E0            [24]  214 	push	acc
      0000A8 08               [12]  215 	inc	r0
      0000A9 E6               [12]  216 	mov	a,@r0
      0000AA C0 E0            [24]  217 	push	acc
      0000AC 08               [12]  218 	inc	r0
      0000AD E6               [12]  219 	mov	a,@r0
      0000AE C0 E0            [24]  220 	push	acc
      0000B0 E5*00            [12]  221 	mov	a,_bp
      0000B2 24 09            [12]  222 	add	a,#0x09
      0000B4 F8               [12]  223 	mov	r0,a
      0000B5 86 82            [24]  224 	mov	dpl,@r0
      0000B7 08               [12]  225 	inc	r0
      0000B8 86 83            [24]  226 	mov	dph,@r0
      0000BA 08               [12]  227 	inc	r0
      0000BB 86 F0            [24]  228 	mov	b,@r0
      0000BD 08               [12]  229 	inc	r0
      0000BE E6               [12]  230 	mov	a,@r0
      0000BF 12r00r00         [24]  231 	lcall	___fsadd
      0000C2 AF 82            [24]  232 	mov	r7,dpl
      0000C4 AE 83            [24]  233 	mov	r6,dph
      0000C6 AD F0            [24]  234 	mov	r5,b
      0000C8 FC               [12]  235 	mov	r4,a
      0000C9 E5 81            [12]  236 	mov	a,sp
      0000CB 24 FC            [12]  237 	add	a,#0xfc
      0000CD F5 81            [12]  238 	mov	sp,a
      0000CF 8F 82            [24]  239 	mov	dpl,r7
      0000D1 8E 83            [24]  240 	mov	dph,r6
      0000D3 8D F0            [24]  241 	mov	b,r5
      0000D5 EC               [12]  242 	mov	a,r4
      0000D6 12r00r00         [24]  243 	lcall	_expf
      0000D9 AF 82            [24]  244 	mov	r7,dpl
      0000DB AE 83            [24]  245 	mov	r6,dph
      0000DD AD F0            [24]  246 	mov	r5,b
      0000DF FC               [12]  247 	mov	r4,a
      0000E0 E4               [12]  248 	clr	a
      0000E1 C0 E0            [24]  249 	push	acc
      0000E3 C0 E0            [24]  250 	push	acc
      0000E5 74 80            [12]  251 	mov	a,#0x80
      0000E7 C0 E0            [24]  252 	push	acc
      0000E9 74 3F            [12]  253 	mov	a,#0x3f
      0000EB C0 E0            [24]  254 	push	acc
      0000ED 8F 82            [24]  255 	mov	dpl,r7
      0000EF 8E 83            [24]  256 	mov	dph,r6
      0000F1 8D F0            [24]  257 	mov	b,r5
      0000F3 EC               [12]  258 	mov	a,r4
      0000F4 12r00r00         [24]  259 	lcall	___fsadd
      0000F7 AF 82            [24]  260 	mov	r7,dpl
      0000F9 AE 83            [24]  261 	mov	r6,dph
      0000FB AD F0            [24]  262 	mov	r5,b
      0000FD FC               [12]  263 	mov	r4,a
      0000FE E5 81            [12]  264 	mov	a,sp
      000100 24 FC            [12]  265 	add	a,#0xfc
      000102 F5 81            [12]  266 	mov	sp,a
      000104 C0 07            [24]  267 	push	ar7
      000106 C0 06            [24]  268 	push	ar6
      000108 C0 05            [24]  269 	push	ar5
      00010A C0 04            [24]  270 	push	ar4
      00010C 90 00 00         [24]  271 	mov	dptr,#0x0000
      00010F 75 F0 80         [24]  272 	mov	b,#0x80
      000112 74 3F            [12]  273 	mov	a,#0x3f
      000114 12r00r00         [24]  274 	lcall	___fsdiv
      000117 AF 82            [24]  275 	mov	r7,dpl
      000119 AE 83            [24]  276 	mov	r6,dph
      00011B AD F0            [24]  277 	mov	r5,b
      00011D FC               [12]  278 	mov	r4,a
      00011E E5 81            [12]  279 	mov	a,sp
      000120 24 FC            [12]  280 	add	a,#0xfc
      000122 F5 81            [12]  281 	mov	sp,a
      000124 C0 07            [24]  282 	push	ar7
      000126 C0 06            [24]  283 	push	ar6
      000128 C0 05            [24]  284 	push	ar5
      00012A C0 04            [24]  285 	push	ar4
      00012C 90 00 00         [24]  286 	mov	dptr,#(0x00&0x00ff)
      00012F E4               [12]  287 	clr	a
      000130 F5 F0            [12]  288 	mov	b,a
      000132 74 3F            [12]  289 	mov	a,#0x3f
      000134 12r00r00         [24]  290 	lcall	___fssub
      000137 AF 82            [24]  291 	mov	r7,dpl
      000139 AE 83            [24]  292 	mov	r6,dph
      00013B AD F0            [24]  293 	mov	r5,b
      00013D FC               [12]  294 	mov	r4,a
      00013E E5 81            [12]  295 	mov	a,sp
      000140 24 FC            [12]  296 	add	a,#0xfc
      000142 F5 81            [12]  297 	mov	sp,a
                                    298 ;	tanhf.c:59: r+=r;
      000144 C0 07            [24]  299 	push	ar7
      000146 C0 06            [24]  300 	push	ar6
      000148 C0 05            [24]  301 	push	ar5
      00014A C0 04            [24]  302 	push	ar4
      00014C 8F 82            [24]  303 	mov	dpl,r7
      00014E 8E 83            [24]  304 	mov	dph,r6
      000150 8D F0            [24]  305 	mov	b,r5
      000152 EC               [12]  306 	mov	a,r4
      000153 12r00r00         [24]  307 	lcall	___fsadd
      000156 AE 82            [24]  308 	mov	r6,dpl
      000158 AD 83            [24]  309 	mov	r5,dph
      00015A AC F0            [24]  310 	mov	r4,b
      00015C FB               [12]  311 	mov	r3,a
      00015D E5 81            [12]  312 	mov	a,sp
      00015F 24 FC            [12]  313 	add	a,#0xfc
      000161 F5 81            [12]  314 	mov	sp,a
      000163 02r03r11         [24]  315 	ljmp	00109$
      000166                        316 00105$:
                                    317 ;	tanhf.c:61: else if(f<EPS) r=f;
      000166 E4               [12]  318 	clr	a
      000167 C0 E0            [24]  319 	push	acc
      000169 C0 E0            [24]  320 	push	acc
      00016B 74 80            [12]  321 	mov	a,#0x80
      00016D C0 E0            [24]  322 	push	acc
      00016F 74 39            [12]  323 	mov	a,#0x39
      000171 C0 E0            [24]  324 	push	acc
      000173 E5*00            [12]  325 	mov	a,_bp
      000175 24 09            [12]  326 	add	a,#0x09
      000177 F8               [12]  327 	mov	r0,a
      000178 86 82            [24]  328 	mov	dpl,@r0
      00017A 08               [12]  329 	inc	r0
      00017B 86 83            [24]  330 	mov	dph,@r0
      00017D 08               [12]  331 	inc	r0
      00017E 86 F0            [24]  332 	mov	b,@r0
      000180 08               [12]  333 	inc	r0
      000181 E6               [12]  334 	mov	a,@r0
      000182 12r00r00         [24]  335 	lcall	___fslt
      000185 AD 82            [24]  336 	mov	r5,dpl
      000187 E5 81            [12]  337 	mov	a,sp
      000189 24 FC            [12]  338 	add	a,#0xfc
      00018B F5 81            [12]  339 	mov	sp,a
      00018D ED               [12]  340 	mov	a,r5
      00018E 60 13            [24]  341 	jz	00102$
      000190 E5*00            [12]  342 	mov	a,_bp
      000192 24 09            [12]  343 	add	a,#0x09
      000194 F8               [12]  344 	mov	r0,a
      000195 86 06            [24]  345 	mov	ar6,@r0
      000197 08               [12]  346 	inc	r0
      000198 86 05            [24]  347 	mov	ar5,@r0
      00019A 08               [12]  348 	inc	r0
      00019B 86 04            [24]  349 	mov	ar4,@r0
      00019D 08               [12]  350 	inc	r0
      00019E 86 03            [24]  351 	mov	ar3,@r0
      0001A0 02r03r11         [24]  352 	ljmp	00109$
      0001A3                        353 00102$:
                                    354 ;	tanhf.c:64: g=f*f;
      0001A3 E5*00            [12]  355 	mov	a,_bp
      0001A5 24 09            [12]  356 	add	a,#0x09
      0001A7 F8               [12]  357 	mov	r0,a
      0001A8 E6               [12]  358 	mov	a,@r0
      0001A9 C0 E0            [24]  359 	push	acc
      0001AB 08               [12]  360 	inc	r0
      0001AC E6               [12]  361 	mov	a,@r0
      0001AD C0 E0            [24]  362 	push	acc
      0001AF 08               [12]  363 	inc	r0
      0001B0 E6               [12]  364 	mov	a,@r0
      0001B1 C0 E0            [24]  365 	push	acc
      0001B3 08               [12]  366 	inc	r0
      0001B4 E6               [12]  367 	mov	a,@r0
      0001B5 C0 E0            [24]  368 	push	acc
      0001B7 E5*00            [12]  369 	mov	a,_bp
      0001B9 24 09            [12]  370 	add	a,#0x09
      0001BB F8               [12]  371 	mov	r0,a
      0001BC 86 82            [24]  372 	mov	dpl,@r0
      0001BE 08               [12]  373 	inc	r0
      0001BF 86 83            [24]  374 	mov	dph,@r0
      0001C1 08               [12]  375 	inc	r0
      0001C2 86 F0            [24]  376 	mov	b,@r0
      0001C4 08               [12]  377 	inc	r0
      0001C5 E6               [12]  378 	mov	a,@r0
      0001C6 12r00r00         [24]  379 	lcall	___fsmul
      0001C9 AF 82            [24]  380 	mov	r7,dpl
      0001CB AE 83            [24]  381 	mov	r6,dph
      0001CD AD F0            [24]  382 	mov	r5,b
      0001CF FC               [12]  383 	mov	r4,a
      0001D0 E5 81            [12]  384 	mov	a,sp
      0001D2 24 FC            [12]  385 	add	a,#0xfc
      0001D4 F5 81            [12]  386 	mov	sp,a
      0001D6 E5*00            [12]  387 	mov	a,_bp
      0001D8 24 0D            [12]  388 	add	a,#0x0d
      0001DA F8               [12]  389 	mov	r0,a
      0001DB A6 07            [24]  390 	mov	@r0,ar7
      0001DD 08               [12]  391 	inc	r0
      0001DE A6 06            [24]  392 	mov	@r0,ar6
      0001E0 08               [12]  393 	inc	r0
      0001E1 A6 05            [24]  394 	mov	@r0,ar5
      0001E3 08               [12]  395 	inc	r0
      0001E4 A6 04            [24]  396 	mov	@r0,ar4
                                    397 ;	tanhf.c:65: r=f+f*(P(g)/Q(g));
      0001E6 E5*00            [12]  398 	mov	a,_bp
      0001E8 24 0D            [12]  399 	add	a,#0x0d
      0001EA F8               [12]  400 	mov	r0,a
      0001EB E6               [12]  401 	mov	a,@r0
      0001EC C0 E0            [24]  402 	push	acc
      0001EE 08               [12]  403 	inc	r0
      0001EF E6               [12]  404 	mov	a,@r0
      0001F0 C0 E0            [24]  405 	push	acc
      0001F2 08               [12]  406 	inc	r0
      0001F3 E6               [12]  407 	mov	a,@r0
      0001F4 C0 E0            [24]  408 	push	acc
      0001F6 08               [12]  409 	inc	r0
      0001F7 E6               [12]  410 	mov	a,@r0
      0001F8 C0 E0            [24]  411 	push	acc
      0001FA 90 11 B2         [24]  412 	mov	dptr,#0x11b2
      0001FD 75 F0 7B         [24]  413 	mov	b,#0x7b
      000200 74 BB            [12]  414 	mov	a,#0xbb
      000202 12r00r00         [24]  415 	lcall	___fsmul
      000205 AC 82            [24]  416 	mov	r4,dpl
      000207 AD 83            [24]  417 	mov	r5,dph
      000209 AE F0            [24]  418 	mov	r6,b
      00020B FF               [12]  419 	mov	r7,a
      00020C E5 81            [12]  420 	mov	a,sp
      00020E 24 FC            [12]  421 	add	a,#0xfc
      000210 F5 81            [12]  422 	mov	sp,a
      000212 74 C6            [12]  423 	mov	a,#0xc6
      000214 C0 E0            [24]  424 	push	acc
      000216 74 E2            [12]  425 	mov	a,#0xe2
      000218 C0 E0            [24]  426 	push	acc
      00021A 74 52            [12]  427 	mov	a,#0x52
      00021C C0 E0            [24]  428 	push	acc
      00021E 74 BF            [12]  429 	mov	a,#0xbf
      000220 C0 E0            [24]  430 	push	acc
      000222 8C 82            [24]  431 	mov	dpl,r4
      000224 8D 83            [24]  432 	mov	dph,r5
      000226 8E F0            [24]  433 	mov	b,r6
      000228 EF               [12]  434 	mov	a,r7
      000229 12r00r00         [24]  435 	lcall	___fsadd
      00022C AC 82            [24]  436 	mov	r4,dpl
      00022E AD 83            [24]  437 	mov	r5,dph
      000230 AE F0            [24]  438 	mov	r6,b
      000232 FF               [12]  439 	mov	r7,a
      000233 E5 81            [12]  440 	mov	a,sp
      000235 24 FC            [12]  441 	add	a,#0xfc
      000237 F5 81            [12]  442 	mov	sp,a
      000239 E5*00            [12]  443 	mov	a,_bp
      00023B 24 0D            [12]  444 	add	a,#0x0d
      00023D F8               [12]  445 	mov	r0,a
      00023E E6               [12]  446 	mov	a,@r0
      00023F C0 E0            [24]  447 	push	acc
      000241 08               [12]  448 	inc	r0
      000242 E6               [12]  449 	mov	a,@r0
      000243 C0 E0            [24]  450 	push	acc
      000245 08               [12]  451 	inc	r0
      000246 E6               [12]  452 	mov	a,@r0
      000247 C0 E0            [24]  453 	push	acc
      000249 08               [12]  454 	inc	r0
      00024A E6               [12]  455 	mov	a,@r0
      00024B C0 E0            [24]  456 	push	acc
      00024D 8C 82            [24]  457 	mov	dpl,r4
      00024F 8D 83            [24]  458 	mov	dph,r5
      000251 8E F0            [24]  459 	mov	b,r6
      000253 EF               [12]  460 	mov	a,r7
      000254 12r00r00         [24]  461 	lcall	___fsmul
      000257 C8               [12]  462 	xch	a,r0
      000258 E5*00            [12]  463 	mov	a,_bp
      00025A 24 05            [12]  464 	add	a,#0x05
      00025C C8               [12]  465 	xch	a,r0
      00025D A6 82            [24]  466 	mov	@r0,dpl
      00025F 08               [12]  467 	inc	r0
      000260 A6 83            [24]  468 	mov	@r0,dph
      000262 08               [12]  469 	inc	r0
      000263 A6 F0            [24]  470 	mov	@r0,b
      000265 08               [12]  471 	inc	r0
      000266 F6               [12]  472 	mov	@r0,a
      000267 E5 81            [12]  473 	mov	a,sp
      000269 24 FC            [12]  474 	add	a,#0xfc
      00026B F5 81            [12]  475 	mov	sp,a
      00026D 74 1A            [12]  476 	mov	a,#0x1a
      00026F C0 E0            [24]  477 	push	acc
      000271 74 2A            [12]  478 	mov	a,#0x2a
      000273 C0 E0            [24]  479 	push	acc
      000275 74 1E            [12]  480 	mov	a,#0x1e
      000277 C0 E0            [24]  481 	push	acc
      000279 74 40            [12]  482 	mov	a,#0x40
      00027B C0 E0            [24]  483 	push	acc
      00027D E5*00            [12]  484 	mov	a,_bp
      00027F 24 0D            [12]  485 	add	a,#0x0d
      000281 F8               [12]  486 	mov	r0,a
      000282 86 82            [24]  487 	mov	dpl,@r0
      000284 08               [12]  488 	inc	r0
      000285 86 83            [24]  489 	mov	dph,@r0
      000287 08               [12]  490 	inc	r0
      000288 86 F0            [24]  491 	mov	b,@r0
      00028A 08               [12]  492 	inc	r0
      00028B E6               [12]  493 	mov	a,@r0
      00028C 12r00r00         [24]  494 	lcall	___fsadd
      00028F AA 82            [24]  495 	mov	r2,dpl
      000291 AB 83            [24]  496 	mov	r3,dph
      000293 AE F0            [24]  497 	mov	r6,b
      000295 FF               [12]  498 	mov	r7,a
      000296 E5 81            [12]  499 	mov	a,sp
      000298 24 FC            [12]  500 	add	a,#0xfc
      00029A F5 81            [12]  501 	mov	sp,a
      00029C C0 02            [24]  502 	push	ar2
      00029E C0 03            [24]  503 	push	ar3
      0002A0 C0 06            [24]  504 	push	ar6
      0002A2 C0 07            [24]  505 	push	ar7
      0002A4 E5*00            [12]  506 	mov	a,_bp
      0002A6 24 05            [12]  507 	add	a,#0x05
      0002A8 F8               [12]  508 	mov	r0,a
      0002A9 86 82            [24]  509 	mov	dpl,@r0
      0002AB 08               [12]  510 	inc	r0
      0002AC 86 83            [24]  511 	mov	dph,@r0
      0002AE 08               [12]  512 	inc	r0
      0002AF 86 F0            [24]  513 	mov	b,@r0
      0002B1 08               [12]  514 	inc	r0
      0002B2 E6               [12]  515 	mov	a,@r0
      0002B3 12r00r00         [24]  516 	lcall	___fsdiv
      0002B6 AC 82            [24]  517 	mov	r4,dpl
      0002B8 AD 83            [24]  518 	mov	r5,dph
      0002BA AE F0            [24]  519 	mov	r6,b
      0002BC FF               [12]  520 	mov	r7,a
      0002BD E5 81            [12]  521 	mov	a,sp
      0002BF 24 FC            [12]  522 	add	a,#0xfc
      0002C1 F5 81            [12]  523 	mov	sp,a
      0002C3 C0 04            [24]  524 	push	ar4
      0002C5 C0 05            [24]  525 	push	ar5
      0002C7 C0 06            [24]  526 	push	ar6
      0002C9 C0 07            [24]  527 	push	ar7
      0002CB E5*00            [12]  528 	mov	a,_bp
      0002CD 24 09            [12]  529 	add	a,#0x09
      0002CF F8               [12]  530 	mov	r0,a
      0002D0 86 82            [24]  531 	mov	dpl,@r0
      0002D2 08               [12]  532 	inc	r0
      0002D3 86 83            [24]  533 	mov	dph,@r0
      0002D5 08               [12]  534 	inc	r0
      0002D6 86 F0            [24]  535 	mov	b,@r0
      0002D8 08               [12]  536 	inc	r0
      0002D9 E6               [12]  537 	mov	a,@r0
      0002DA 12r00r00         [24]  538 	lcall	___fsmul
      0002DD AC 82            [24]  539 	mov	r4,dpl
      0002DF AD 83            [24]  540 	mov	r5,dph
      0002E1 AE F0            [24]  541 	mov	r6,b
      0002E3 FF               [12]  542 	mov	r7,a
      0002E4 E5 81            [12]  543 	mov	a,sp
      0002E6 24 FC            [12]  544 	add	a,#0xfc
      0002E8 F5 81            [12]  545 	mov	sp,a
      0002EA C0 04            [24]  546 	push	ar4
      0002EC C0 05            [24]  547 	push	ar5
      0002EE C0 06            [24]  548 	push	ar6
      0002F0 C0 07            [24]  549 	push	ar7
      0002F2 E5*00            [12]  550 	mov	a,_bp
      0002F4 24 09            [12]  551 	add	a,#0x09
      0002F6 F8               [12]  552 	mov	r0,a
      0002F7 86 82            [24]  553 	mov	dpl,@r0
      0002F9 08               [12]  554 	inc	r0
      0002FA 86 83            [24]  555 	mov	dph,@r0
      0002FC 08               [12]  556 	inc	r0
      0002FD 86 F0            [24]  557 	mov	b,@r0
      0002FF 08               [12]  558 	inc	r0
      000300 E6               [12]  559 	mov	a,@r0
      000301 12r00r00         [24]  560 	lcall	___fsadd
      000304 AE 82            [24]  561 	mov	r6,dpl
      000306 AD 83            [24]  562 	mov	r5,dph
      000308 AC F0            [24]  563 	mov	r4,b
      00030A FB               [12]  564 	mov	r3,a
      00030B E5 81            [12]  565 	mov	a,sp
      00030D 24 FC            [12]  566 	add	a,#0xfc
      00030F F5 81            [12]  567 	mov	sp,a
      000311                        568 00109$:
                                    569 ;	tanhf.c:67: if(x<0.0) r=-r;
      000311 C0 06            [24]  570 	push	ar6
      000313 C0 05            [24]  571 	push	ar5
      000315 C0 04            [24]  572 	push	ar4
      000317 C0 03            [24]  573 	push	ar3
      000319 E4               [12]  574 	clr	a
      00031A C0 E0            [24]  575 	push	acc
      00031C C0 E0            [24]  576 	push	acc
      00031E C0 E0            [24]  577 	push	acc
      000320 C0 E0            [24]  578 	push	acc
      000322 A8*00            [24]  579 	mov	r0,_bp
      000324 08               [12]  580 	inc	r0
      000325 86 82            [24]  581 	mov	dpl,@r0
      000327 08               [12]  582 	inc	r0
      000328 86 83            [24]  583 	mov	dph,@r0
      00032A 08               [12]  584 	inc	r0
      00032B 86 F0            [24]  585 	mov	b,@r0
      00032D 08               [12]  586 	inc	r0
      00032E E6               [12]  587 	mov	a,@r0
      00032F 12r00r00         [24]  588 	lcall	___fslt
      000332 AF 82            [24]  589 	mov	r7,dpl
      000334 E5 81            [12]  590 	mov	a,sp
      000336 24 FC            [12]  591 	add	a,#0xfc
      000338 F5 81            [12]  592 	mov	sp,a
      00033A D0 03            [24]  593 	pop	ar3
      00033C D0 04            [24]  594 	pop	ar4
      00033E D0 05            [24]  595 	pop	ar5
      000340 D0 06            [24]  596 	pop	ar6
      000342 EF               [12]  597 	mov	a,r7
      000343 60 04            [24]  598 	jz	00111$
      000345 EB               [12]  599 	mov	a,r3
      000346 B2 E7            [12]  600 	cpl	acc.7
      000348 FB               [12]  601 	mov	r3,a
      000349                        602 00111$:
                                    603 ;	tanhf.c:68: return r;
      000349 8E 82            [24]  604 	mov	dpl,r6
      00034B 8D 83            [24]  605 	mov	dph,r5
      00034D 8C F0            [24]  606 	mov	b,r4
      00034F EB               [12]  607 	mov	a,r3
                                    608 ;	tanhf.c:69: }
      000350 85*00 81         [24]  609 	mov	sp,_bp
      000353 D0*00            [24]  610 	pop	_bp
      000355 22               [24]  611 	ret
                                    612 	.area CSEG    (CODE)
                                    613 	.area CONST   (CODE)
                                    614 	.area XINIT   (CODE)
                                    615 	.area CABS    (ABS,CODE)
