                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strtol
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strtoul
                                     12 	.globl _strtol_PARM_3
                                     13 	.globl _strtol_PARM_2
                                     14 	.globl _strtol
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _strtol_sloc0_1_0:
      000000                         35 	.ds 3
      000003                         36 _strtol_sloc1_1_0:
      000003                         37 	.ds 3
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in internal ram
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; uninitialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
      000000                         62 _strtol_PARM_2:
      000000                         63 	.ds 3
      000003                         64 _strtol_PARM_3:
      000003                         65 	.ds 2
      000005                         66 _strtol_nptr_65536_59:
      000005                         67 	.ds 3
      000008                         68 _strtol_ptr_65536_60:
      000008                         69 	.ds 3
      00000B                         70 _strtol_rptr_65536_60:
      00000B                         71 	.ds 3
      00000E                         72 _strtol_neg_65536_60:
      00000E                         73 	.ds 1
                                     74 ;--------------------------------------------------------
                                     75 ; absolute external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XABS    (ABS,XDATA)
                                     78 ;--------------------------------------------------------
                                     79 ; initialized external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XISEG   (XDATA)
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT0 (CODE)
                                     84 	.area GSINIT1 (CODE)
                                     85 	.area GSINIT2 (CODE)
                                     86 	.area GSINIT3 (CODE)
                                     87 	.area GSINIT4 (CODE)
                                     88 	.area GSINIT5 (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area CSEG    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; global & static initialisations
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 	.area GSFINAL (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; Home
                                    101 ;--------------------------------------------------------
                                    102 	.area HOME    (CODE)
                                    103 	.area HOME    (CODE)
                                    104 ;--------------------------------------------------------
                                    105 ; code
                                    106 ;--------------------------------------------------------
                                    107 	.area CSEG    (CODE)
                                    108 ;------------------------------------------------------------
                                    109 ;Allocation info for local variables in function 'strtol'
                                    110 ;------------------------------------------------------------
                                    111 ;sloc0                     Allocated with name '_strtol_sloc0_1_0'
                                    112 ;sloc1                     Allocated with name '_strtol_sloc1_1_0'
                                    113 ;endptr                    Allocated with name '_strtol_PARM_2'
                                    114 ;base                      Allocated with name '_strtol_PARM_3'
                                    115 ;nptr                      Allocated with name '_strtol_nptr_65536_59'
                                    116 ;__1310720007              Allocated with name '_strtol___1310720007_131072_60'
                                    117 ;__1310720004              Allocated with name '_strtol___1310720004_131072_60'
                                    118 ;ptr                       Allocated with name '_strtol_ptr_65536_60'
                                    119 ;rptr                      Allocated with name '_strtol_rptr_65536_60'
                                    120 ;u                         Allocated with name '_strtol_u_65536_60'
                                    121 ;neg                       Allocated with name '_strtol_neg_65536_60'
                                    122 ;__1310720005              Allocated with name '_strtol___1310720005_131072_66'
                                    123 ;c                         Allocated with name '_strtol_c_196608_67'
                                    124 ;__1310720008              Allocated with name '_strtol___1310720008_131072_69'
                                    125 ;c                         Allocated with name '_strtol_c_196608_70'
                                    126 ;------------------------------------------------------------
                                    127 ;	strtol.c:38: long int strtol(const char *nptr, char **endptr, int base)
                                    128 ;	-----------------------------------------
                                    129 ;	 function strtol
                                    130 ;	-----------------------------------------
      000000                        131 _strtol:
                           000007   132 	ar7 = 0x07
                           000006   133 	ar6 = 0x06
                           000005   134 	ar5 = 0x05
                           000004   135 	ar4 = 0x04
                           000003   136 	ar3 = 0x03
                           000002   137 	ar2 = 0x02
                           000001   138 	ar1 = 0x01
                           000000   139 	ar0 = 0x00
      000000 AF F0            [24]  140 	mov	r7,b
      000002 AE 83            [24]  141 	mov	r6,dph
      000004 E5 82            [12]  142 	mov	a,dpl
      000006 90r00r05         [24]  143 	mov	dptr,#_strtol_nptr_65536_59
      000009 F0               [24]  144 	movx	@dptr,a
      00000A EE               [12]  145 	mov	a,r6
      00000B A3               [24]  146 	inc	dptr
      00000C F0               [24]  147 	movx	@dptr,a
      00000D EF               [12]  148 	mov	a,r7
      00000E A3               [24]  149 	inc	dptr
      00000F F0               [24]  150 	movx	@dptr,a
                                    151 ;	strtol.c:40: const char *ptr = nptr;
      000010 90r00r05         [24]  152 	mov	dptr,#_strtol_nptr_65536_59
      000013 E0               [24]  153 	movx	a,@dptr
      000014 FD               [12]  154 	mov	r5,a
      000015 A3               [24]  155 	inc	dptr
      000016 E0               [24]  156 	movx	a,@dptr
      000017 FE               [12]  157 	mov	r6,a
      000018 A3               [24]  158 	inc	dptr
      000019 E0               [24]  159 	movx	a,@dptr
      00001A FF               [12]  160 	mov	r7,a
                                    161 ;	strtol.c:45: while (isblank (*ptr))
      00001B                        162 00101$:
      00001B 8D 82            [24]  163 	mov	dpl,r5
      00001D 8E 83            [24]  164 	mov	dph,r6
      00001F 8F F0            [24]  165 	mov	b,r7
      000021 12r00r00         [24]  166 	lcall	__gptrget
      000024 FC               [12]  167 	mov	r4,a
                                    168 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000025 BC 20 02         [24]  169 	cjne	r4,#0x20,00208$
      000028 80 03            [24]  170 	sjmp	00132$
      00002A                        171 00208$:
      00002A BC 09 07         [24]  172 	cjne	r4,#0x09,00158$
      00002D                        173 00132$:
                                    174 ;	strtol.c:46: ptr++;
      00002D 0D               [12]  175 	inc	r5
      00002E BD 00 EA         [24]  176 	cjne	r5,#0x00,00101$
      000031 0E               [12]  177 	inc	r6
      000032 80 E7            [24]  178 	sjmp	00101$
      000034                        179 00158$:
      000034 90r00r08         [24]  180 	mov	dptr,#_strtol_ptr_65536_60
      000037 ED               [12]  181 	mov	a,r5
      000038 F0               [24]  182 	movx	@dptr,a
      000039 EE               [12]  183 	mov	a,r6
      00003A A3               [24]  184 	inc	dptr
      00003B F0               [24]  185 	movx	@dptr,a
      00003C EF               [12]  186 	mov	a,r7
      00003D A3               [24]  187 	inc	dptr
      00003E F0               [24]  188 	movx	@dptr,a
                                    189 ;	strtol.c:50: if (*ptr == '-')
      00003F 8D 82            [24]  190 	mov	dpl,r5
      000041 8E 83            [24]  191 	mov	dph,r6
      000043 8F F0            [24]  192 	mov	b,r7
      000045 12r00r00         [24]  193 	lcall	__gptrget
      000048 FC               [12]  194 	mov	r4,a
      000049 BC 2D 14         [24]  195 	cjne	r4,#0x2d,00105$
                                    196 ;	strtol.c:52: neg = true;
      00004C 90r00r0E         [24]  197 	mov	dptr,#_strtol_neg_65536_60
      00004F 74 01            [12]  198 	mov	a,#0x01
      000051 F0               [24]  199 	movx	@dptr,a
                                    200 ;	strtol.c:53: ptr++;
      000052 90r00r08         [24]  201 	mov	dptr,#_strtol_ptr_65536_60
      000055 2D               [12]  202 	add	a,r5
      000056 F0               [24]  203 	movx	@dptr,a
      000057 E4               [12]  204 	clr	a
      000058 3E               [12]  205 	addc	a,r6
      000059 A3               [24]  206 	inc	dptr
      00005A F0               [24]  207 	movx	@dptr,a
      00005B EF               [12]  208 	mov	a,r7
      00005C A3               [24]  209 	inc	dptr
      00005D F0               [24]  210 	movx	@dptr,a
      00005E 80 05            [24]  211 	sjmp	00106$
      000060                        212 00105$:
                                    213 ;	strtol.c:56: neg = false;
      000060 90r00r0E         [24]  214 	mov	dptr,#_strtol_neg_65536_60
      000063 E4               [12]  215 	clr	a
      000064 F0               [24]  216 	movx	@dptr,a
      000065                        217 00106$:
                                    218 ;	strtol.c:59: if (neg && (isblank (*ptr) || *ptr == '-' || *ptr == '+'))
      000065 90r00r0E         [24]  219 	mov	dptr,#_strtol_neg_65536_60
      000068 E0               [24]  220 	movx	a,@dptr
      000069 60 79            [24]  221 	jz	00110$
      00006B 90r00r08         [24]  222 	mov	dptr,#_strtol_ptr_65536_60
      00006E E0               [24]  223 	movx	a,@dptr
      00006F FD               [12]  224 	mov	r5,a
      000070 A3               [24]  225 	inc	dptr
      000071 E0               [24]  226 	movx	a,@dptr
      000072 FE               [12]  227 	mov	r6,a
      000073 A3               [24]  228 	inc	dptr
      000074 E0               [24]  229 	movx	a,@dptr
      000075 FF               [12]  230 	mov	r7,a
      000076 8D 82            [24]  231 	mov	dpl,r5
      000078 8E 83            [24]  232 	mov	dph,r6
      00007A 8F F0            [24]  233 	mov	b,r7
      00007C 12r00r00         [24]  234 	lcall	__gptrget
      00007F FD               [12]  235 	mov	r5,a
                                    236 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      000080 BD 20 02         [24]  237 	cjne	r5,#0x20,00215$
      000083 80 22            [24]  238 	sjmp	00109$
      000085                        239 00215$:
      000085 BD 09 02         [24]  240 	cjne	r5,#0x09,00216$
      000088 80 1D            [24]  241 	sjmp	00109$
      00008A                        242 00216$:
                                    243 ;	strtol.c:59: if (neg && (isblank (*ptr) || *ptr == '-' || *ptr == '+'))
      00008A 90r00r08         [24]  244 	mov	dptr,#_strtol_ptr_65536_60
      00008D E0               [24]  245 	movx	a,@dptr
      00008E FD               [12]  246 	mov	r5,a
      00008F A3               [24]  247 	inc	dptr
      000090 E0               [24]  248 	movx	a,@dptr
      000091 FE               [12]  249 	mov	r6,a
      000092 A3               [24]  250 	inc	dptr
      000093 E0               [24]  251 	movx	a,@dptr
      000094 FF               [12]  252 	mov	r7,a
      000095 8D 82            [24]  253 	mov	dpl,r5
      000097 8E 83            [24]  254 	mov	dph,r6
      000099 8F F0            [24]  255 	mov	b,r7
      00009B 12r00r00         [24]  256 	lcall	__gptrget
      00009E FF               [12]  257 	mov	r7,a
      00009F BF 2D 02         [24]  258 	cjne	r7,#0x2d,00217$
      0000A2 80 03            [24]  259 	sjmp	00109$
      0000A4                        260 00217$:
      0000A4 BF 2B 3D         [24]  261 	cjne	r7,#0x2b,00110$
      0000A7                        262 00109$:
                                    263 ;	strtol.c:61: if (endptr)
      0000A7 90r00r00         [24]  264 	mov	dptr,#_strtol_PARM_2
      0000AA E0               [24]  265 	movx	a,@dptr
      0000AB FD               [12]  266 	mov	r5,a
      0000AC A3               [24]  267 	inc	dptr
      0000AD E0               [24]  268 	movx	a,@dptr
      0000AE FE               [12]  269 	mov	r6,a
      0000AF A3               [24]  270 	inc	dptr
      0000B0 E0               [24]  271 	movx	a,@dptr
      0000B1 FF               [12]  272 	mov	r7,a
      0000B2 90r00r00         [24]  273 	mov	dptr,#_strtol_PARM_2
      0000B5 E0               [24]  274 	movx	a,@dptr
      0000B6 F5 F0            [12]  275 	mov	b,a
      0000B8 A3               [24]  276 	inc	dptr
      0000B9 E0               [24]  277 	movx	a,@dptr
      0000BA 45 F0            [12]  278 	orl	a,b
      0000BC 60 1F            [24]  279 	jz	00108$
                                    280 ;	strtol.c:62: *endptr = nptr;
      0000BE 90r00r05         [24]  281 	mov	dptr,#_strtol_nptr_65536_59
      0000C1 E0               [24]  282 	movx	a,@dptr
      0000C2 FA               [12]  283 	mov	r2,a
      0000C3 A3               [24]  284 	inc	dptr
      0000C4 E0               [24]  285 	movx	a,@dptr
      0000C5 FB               [12]  286 	mov	r3,a
      0000C6 A3               [24]  287 	inc	dptr
      0000C7 E0               [24]  288 	movx	a,@dptr
      0000C8 FC               [12]  289 	mov	r4,a
      0000C9 8D 82            [24]  290 	mov	dpl,r5
      0000CB 8E 83            [24]  291 	mov	dph,r6
      0000CD 8F F0            [24]  292 	mov	b,r7
      0000CF EA               [12]  293 	mov	a,r2
      0000D0 12r00r00         [24]  294 	lcall	__gptrput
      0000D3 A3               [24]  295 	inc	dptr
      0000D4 EB               [12]  296 	mov	a,r3
      0000D5 12r00r00         [24]  297 	lcall	__gptrput
      0000D8 A3               [24]  298 	inc	dptr
      0000D9 EC               [12]  299 	mov	a,r4
      0000DA 12r00r00         [24]  300 	lcall	__gptrput
      0000DD                        301 00108$:
                                    302 ;	strtol.c:63: return (0);
      0000DD 90 00 00         [24]  303 	mov	dptr,#(0x00&0x00ff)
      0000E0 E4               [12]  304 	clr	a
      0000E1 F5 F0            [12]  305 	mov	b,a
      0000E3 22               [24]  306 	ret
      0000E4                        307 00110$:
                                    308 ;	strtol.c:66: u = strtoul(ptr, &rptr, base);
      0000E4 90r00r08         [24]  309 	mov	dptr,#_strtol_ptr_65536_60
      0000E7 E0               [24]  310 	movx	a,@dptr
      0000E8 FD               [12]  311 	mov	r5,a
      0000E9 A3               [24]  312 	inc	dptr
      0000EA E0               [24]  313 	movx	a,@dptr
      0000EB FE               [12]  314 	mov	r6,a
      0000EC A3               [24]  315 	inc	dptr
      0000ED E0               [24]  316 	movx	a,@dptr
      0000EE FF               [12]  317 	mov	r7,a
      0000EF 90r00r03         [24]  318 	mov	dptr,#_strtol_PARM_3
      0000F2 E0               [24]  319 	movx	a,@dptr
      0000F3 FB               [12]  320 	mov	r3,a
      0000F4 A3               [24]  321 	inc	dptr
      0000F5 E0               [24]  322 	movx	a,@dptr
      0000F6 FC               [12]  323 	mov	r4,a
      0000F7 90r00r00         [24]  324 	mov	dptr,#_strtoul_PARM_2
      0000FA 74r0B            [12]  325 	mov	a,#_strtol_rptr_65536_60
      0000FC F0               [24]  326 	movx	@dptr,a
      0000FD 74s00            [12]  327 	mov	a,#(_strtol_rptr_65536_60 >> 8)
      0000FF A3               [24]  328 	inc	dptr
      000100 F0               [24]  329 	movx	@dptr,a
      000101 E4               [12]  330 	clr	a
      000102 A3               [24]  331 	inc	dptr
      000103 F0               [24]  332 	movx	@dptr,a
      000104 90r00r00         [24]  333 	mov	dptr,#_strtoul_PARM_3
      000107 EB               [12]  334 	mov	a,r3
      000108 F0               [24]  335 	movx	@dptr,a
      000109 EC               [12]  336 	mov	a,r4
      00010A A3               [24]  337 	inc	dptr
      00010B F0               [24]  338 	movx	@dptr,a
      00010C 8D 82            [24]  339 	mov	dpl,r5
      00010E 8E 83            [24]  340 	mov	dph,r6
      000110 8F F0            [24]  341 	mov	b,r7
      000112 12r00r00         [24]  342 	lcall	_strtoul
      000115 AC 82            [24]  343 	mov	r4,dpl
      000117 AD 83            [24]  344 	mov	r5,dph
      000119 AE F0            [24]  345 	mov	r6,b
      00011B FF               [12]  346 	mov	r7,a
                                    347 ;	strtol.c:69: if (rptr == ptr)
      00011C 90r00r0B         [24]  348 	mov	dptr,#_strtol_rptr_65536_60
      00011F E0               [24]  349 	movx	a,@dptr
      000120 F5*00            [12]  350 	mov	_strtol_sloc0_1_0,a
      000122 A3               [24]  351 	inc	dptr
      000123 E0               [24]  352 	movx	a,@dptr
      000124 F5*01            [12]  353 	mov	(_strtol_sloc0_1_0 + 1),a
      000126 A3               [24]  354 	inc	dptr
      000127 E0               [24]  355 	movx	a,@dptr
      000128 F5*02            [12]  356 	mov	(_strtol_sloc0_1_0 + 2),a
      00012A 90r00r08         [24]  357 	mov	dptr,#_strtol_ptr_65536_60
      00012D E0               [24]  358 	movx	a,@dptr
      00012E F8               [12]  359 	mov	r0,a
      00012F A3               [24]  360 	inc	dptr
      000130 E0               [24]  361 	movx	a,@dptr
      000131 FA               [12]  362 	mov	r2,a
      000132 A3               [24]  363 	inc	dptr
      000133 E0               [24]  364 	movx	a,@dptr
      000134 FB               [12]  365 	mov	r3,a
      000135 C0*00            [24]  366 	push	_strtol_sloc0_1_0
      000137 C0*01            [24]  367 	push	(_strtol_sloc0_1_0 + 1)
      000139 C0*02            [24]  368 	push	(_strtol_sloc0_1_0 + 2)
      00013B 88 82            [24]  369 	mov	dpl,r0
      00013D 8A 83            [24]  370 	mov	dph,r2
      00013F 8B F0            [24]  371 	mov	b,r3
      000141 12r00r00         [24]  372 	lcall	___gptr_cmp
      000144 15 81            [12]  373 	dec	sp
      000146 15 81            [12]  374 	dec	sp
      000148 15 81            [12]  375 	dec	sp
      00014A 70 43            [24]  376 	jnz	00117$
                                    377 ;	strtol.c:71: if (endptr)
      00014C 90r00r00         [24]  378 	mov	dptr,#_strtol_PARM_2
      00014F E0               [24]  379 	movx	a,@dptr
      000150 F5*03            [12]  380 	mov	_strtol_sloc1_1_0,a
      000152 A3               [24]  381 	inc	dptr
      000153 E0               [24]  382 	movx	a,@dptr
      000154 F5*04            [12]  383 	mov	(_strtol_sloc1_1_0 + 1),a
      000156 A3               [24]  384 	inc	dptr
      000157 E0               [24]  385 	movx	a,@dptr
      000158 F5*05            [12]  386 	mov	(_strtol_sloc1_1_0 + 2),a
      00015A 90r00r00         [24]  387 	mov	dptr,#_strtol_PARM_2
      00015D E0               [24]  388 	movx	a,@dptr
      00015E F5 F0            [12]  389 	mov	b,a
      000160 A3               [24]  390 	inc	dptr
      000161 E0               [24]  391 	movx	a,@dptr
      000162 45 F0            [12]  392 	orl	a,b
      000164 60 22            [24]  393 	jz	00115$
                                    394 ;	strtol.c:72: *endptr = nptr;
      000166 90r00r05         [24]  395 	mov	dptr,#_strtol_nptr_65536_59
      000169 E0               [24]  396 	movx	a,@dptr
      00016A F8               [12]  397 	mov	r0,a
      00016B A3               [24]  398 	inc	dptr
      00016C E0               [24]  399 	movx	a,@dptr
      00016D FA               [12]  400 	mov	r2,a
      00016E A3               [24]  401 	inc	dptr
      00016F E0               [24]  402 	movx	a,@dptr
      000170 FB               [12]  403 	mov	r3,a
      000171 85*03 82         [24]  404 	mov	dpl,_strtol_sloc1_1_0
      000174 85*04 83         [24]  405 	mov	dph,(_strtol_sloc1_1_0 + 1)
      000177 85*05 F0         [24]  406 	mov	b,(_strtol_sloc1_1_0 + 2)
      00017A E8               [12]  407 	mov	a,r0
      00017B 12r00r00         [24]  408 	lcall	__gptrput
      00017E A3               [24]  409 	inc	dptr
      00017F EA               [12]  410 	mov	a,r2
      000180 12r00r00         [24]  411 	lcall	__gptrput
      000183 A3               [24]  412 	inc	dptr
      000184 EB               [12]  413 	mov	a,r3
      000185 12r00r00         [24]  414 	lcall	__gptrput
      000188                        415 00115$:
                                    416 ;	strtol.c:73: return (0);
      000188 90 00 00         [24]  417 	mov	dptr,#(0x00&0x00ff)
      00018B E4               [12]  418 	clr	a
      00018C F5 F0            [12]  419 	mov	b,a
      00018E 22               [24]  420 	ret
      00018F                        421 00117$:
                                    422 ;	strtol.c:76: if (endptr)
      00018F 90r00r00         [24]  423 	mov	dptr,#_strtol_PARM_2
      000192 E0               [24]  424 	movx	a,@dptr
      000193 F9               [12]  425 	mov	r1,a
      000194 A3               [24]  426 	inc	dptr
      000195 E0               [24]  427 	movx	a,@dptr
      000196 FA               [12]  428 	mov	r2,a
      000197 A3               [24]  429 	inc	dptr
      000198 E0               [24]  430 	movx	a,@dptr
      000199 FB               [12]  431 	mov	r3,a
      00019A 90r00r00         [24]  432 	mov	dptr,#_strtol_PARM_2
      00019D E0               [24]  433 	movx	a,@dptr
      00019E F5 F0            [12]  434 	mov	b,a
      0001A0 A3               [24]  435 	inc	dptr
      0001A1 E0               [24]  436 	movx	a,@dptr
      0001A2 45 F0            [12]  437 	orl	a,b
      0001A4 60 17            [24]  438 	jz	00119$
                                    439 ;	strtol.c:77: *endptr = rptr;
      0001A6 89 82            [24]  440 	mov	dpl,r1
      0001A8 8A 83            [24]  441 	mov	dph,r2
      0001AA 8B F0            [24]  442 	mov	b,r3
      0001AC E5*00            [12]  443 	mov	a,_strtol_sloc0_1_0
      0001AE 12r00r00         [24]  444 	lcall	__gptrput
      0001B1 A3               [24]  445 	inc	dptr
      0001B2 E5*01            [12]  446 	mov	a,(_strtol_sloc0_1_0 + 1)
      0001B4 12r00r00         [24]  447 	lcall	__gptrput
      0001B7 A3               [24]  448 	inc	dptr
      0001B8 E5*02            [12]  449 	mov	a,(_strtol_sloc0_1_0 + 2)
      0001BA 12r00r00         [24]  450 	lcall	__gptrput
      0001BD                        451 00119$:
                                    452 ;	strtol.c:80: if (!neg && u > LONG_MAX)
      0001BD 90r00r0E         [24]  453 	mov	dptr,#_strtol_neg_65536_60
      0001C0 E0               [24]  454 	movx	a,@dptr
      0001C1 70 21            [24]  455 	jnz	00124$
      0001C3 C3               [12]  456 	clr	c
      0001C4 74 FF            [12]  457 	mov	a,#0xff
      0001C6 9C               [12]  458 	subb	a,r4
      0001C7 74 FF            [12]  459 	mov	a,#0xff
      0001C9 9D               [12]  460 	subb	a,r5
      0001CA 74 FF            [12]  461 	mov	a,#0xff
      0001CC 9E               [12]  462 	subb	a,r6
      0001CD 74 7F            [12]  463 	mov	a,#0x7f
      0001CF 9F               [12]  464 	subb	a,r7
      0001D0 50 12            [24]  465 	jnc	00124$
                                    466 ;	strtol.c:82: errno = ERANGE;
      0001D2 90r00r00         [24]  467 	mov	dptr,#_errno
      0001D5 74 22            [12]  468 	mov	a,#0x22
      0001D7 F0               [24]  469 	movx	@dptr,a
      0001D8 E4               [12]  470 	clr	a
      0001D9 A3               [24]  471 	inc	dptr
      0001DA F0               [24]  472 	movx	@dptr,a
                                    473 ;	strtol.c:83: return (LONG_MAX);
      0001DB 90 FF FF         [24]  474 	mov	dptr,#0xffff
      0001DE 75 F0 FF         [24]  475 	mov	b,#0xff
      0001E1 74 7F            [12]  476 	mov	a,#0x7f
      0001E3 22               [24]  477 	ret
      0001E4                        478 00124$:
                                    479 ;	strtol.c:85: else if (neg && u > -LONG_MIN)
      0001E4 90r00r0E         [24]  480 	mov	dptr,#_strtol_neg_65536_60
      0001E7 E0               [24]  481 	movx	a,@dptr
      0001E8 60 1D            [24]  482 	jz	00125$
      0001EA C3               [12]  483 	clr	c
      0001EB E4               [12]  484 	clr	a
      0001EC 9C               [12]  485 	subb	a,r4
      0001ED E4               [12]  486 	clr	a
      0001EE 9D               [12]  487 	subb	a,r5
      0001EF E4               [12]  488 	clr	a
      0001F0 9E               [12]  489 	subb	a,r6
      0001F1 74 80            [12]  490 	mov	a,#0x80
      0001F3 9F               [12]  491 	subb	a,r7
      0001F4 50 11            [24]  492 	jnc	00125$
                                    493 ;	strtol.c:87: errno = ERANGE;
      0001F6 90r00r00         [24]  494 	mov	dptr,#_errno
      0001F9 74 22            [12]  495 	mov	a,#0x22
      0001FB F0               [24]  496 	movx	@dptr,a
      0001FC E4               [12]  497 	clr	a
      0001FD A3               [24]  498 	inc	dptr
      0001FE F0               [24]  499 	movx	@dptr,a
                                    500 ;	strtol.c:88: return (LONG_MIN);
      0001FF 90 00 00         [24]  501 	mov	dptr,#0x0000
      000202 F5 F0            [12]  502 	mov	b,a
      000204 74 80            [12]  503 	mov	a,#0x80
      000206 22               [24]  504 	ret
      000207                        505 00125$:
                                    506 ;	strtol.c:91: return (neg ? -u : u);
      000207 90r00r0E         [24]  507 	mov	dptr,#_strtol_neg_65536_60
      00020A E0               [24]  508 	movx	a,@dptr
      00020B 60 0F            [24]  509 	jz	00137$
      00020D C3               [12]  510 	clr	c
      00020E E4               [12]  511 	clr	a
      00020F 9C               [12]  512 	subb	a,r4
      000210 F8               [12]  513 	mov	r0,a
      000211 E4               [12]  514 	clr	a
      000212 9D               [12]  515 	subb	a,r5
      000213 F9               [12]  516 	mov	r1,a
      000214 E4               [12]  517 	clr	a
      000215 9E               [12]  518 	subb	a,r6
      000216 FA               [12]  519 	mov	r2,a
      000217 E4               [12]  520 	clr	a
      000218 9F               [12]  521 	subb	a,r7
      000219 FB               [12]  522 	mov	r3,a
      00021A 80 08            [24]  523 	sjmp	00138$
      00021C                        524 00137$:
      00021C 8C 00            [24]  525 	mov	ar0,r4
      00021E 8D 01            [24]  526 	mov	ar1,r5
      000220 8E 02            [24]  527 	mov	ar2,r6
      000222 8F 03            [24]  528 	mov	ar3,r7
      000224                        529 00138$:
      000224 88 82            [24]  530 	mov	dpl,r0
      000226 89 83            [24]  531 	mov	dph,r1
      000228 8A F0            [24]  532 	mov	b,r2
      00022A EB               [12]  533 	mov	a,r3
                                    534 ;	strtol.c:92: }
      00022B 22               [24]  535 	ret
                                    536 	.area CSEG    (CODE)
                                    537 	.area CONST   (CODE)
                                    538 	.area XINIT   (CODE)
                                    539 	.area CABS    (ABS,CODE)
