                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtowc
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbrtowc_PARM_4
                                     12 	.globl _mbrtowc_PARM_3
                                     13 	.globl _mbrtowc_PARM_2
                                     14 	.globl _mbrtowc
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _mbrtowc_sloc0_1_0:
      000000                         35 	.ds 1
      000001                         36 _mbrtowc_sloc1_1_0:
      000001                         37 	.ds 3
      000004                         38 _mbrtowc_sloc2_1_0:
      000004                         39 	.ds 1
      000005                         40 _mbrtowc_sloc3_1_0:
      000005                         41 	.ds 3
      000008                         42 _mbrtowc_sloc4_1_0:
      000008                         43 	.ds 4
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable items in internal ram
                                     46 ;--------------------------------------------------------
                                     47 ;--------------------------------------------------------
                                     48 ; indirectly addressable internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area ISEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; absolute internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area IABS    (ABS,DATA)
                                     55 	.area IABS    (ABS,DATA)
                                     56 ;--------------------------------------------------------
                                     57 ; bit data
                                     58 ;--------------------------------------------------------
                                     59 	.area BSEG    (BIT)
                                     60 ;--------------------------------------------------------
                                     61 ; paged external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area PSEG    (PAG,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; uninitialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XSEG    (XDATA)
      000000                         68 _mbrtowc_PARM_2:
      000000                         69 	.ds 3
      000003                         70 _mbrtowc_PARM_3:
      000003                         71 	.ds 2
      000005                         72 _mbrtowc_PARM_4:
      000005                         73 	.ds 3
      000008                         74 _mbrtowc_pwc_65536_9:
      000008                         75 	.ds 3
      00000B                         76 _mbrtowc_first_byte_65536_10:
      00000B                         77 	.ds 1
      00000C                         78 _mbrtowc_seqlen_65536_10:
      00000C                         79 	.ds 1
      00000D                         80 _mbrtowc_mbseq_65536_10:
      00000D                         81 	.ds 4
      000011                         82 _mbrtowc_codepoint_65536_10:
      000011                         83 	.ds 4
      000015                         84 _mbrtowc_i_65536_10:
      000015                         85 	.ds 1
      000016                         86 _mbrtowc_sps_65536_10:
      000016                         87 	.ds 3
                                     88 ;--------------------------------------------------------
                                     89 ; absolute external ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area XABS    (ABS,XDATA)
                                     92 ;--------------------------------------------------------
                                     93 ; initialized external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area XISEG   (XDATA)
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT0 (CODE)
                                     98 	.area GSINIT1 (CODE)
                                     99 	.area GSINIT2 (CODE)
                                    100 	.area GSINIT3 (CODE)
                                    101 	.area GSINIT4 (CODE)
                                    102 	.area GSINIT5 (CODE)
                                    103 	.area GSINIT  (CODE)
                                    104 	.area GSFINAL (CODE)
                                    105 	.area CSEG    (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; global & static initialisations
                                    108 ;--------------------------------------------------------
                                    109 	.area HOME    (CODE)
                                    110 	.area GSINIT  (CODE)
                                    111 	.area GSFINAL (CODE)
                                    112 	.area GSINIT  (CODE)
                                    113 ;--------------------------------------------------------
                                    114 ; Home
                                    115 ;--------------------------------------------------------
                                    116 	.area HOME    (CODE)
                                    117 	.area HOME    (CODE)
                                    118 ;--------------------------------------------------------
                                    119 ; code
                                    120 ;--------------------------------------------------------
                                    121 	.area CSEG    (CODE)
                                    122 ;------------------------------------------------------------
                                    123 ;Allocation info for local variables in function 'mbrtowc'
                                    124 ;------------------------------------------------------------
                                    125 ;sloc0                     Allocated with name '_mbrtowc_sloc0_1_0'
                                    126 ;sloc1                     Allocated with name '_mbrtowc_sloc1_1_0'
                                    127 ;sloc2                     Allocated with name '_mbrtowc_sloc2_1_0'
                                    128 ;sloc3                     Allocated with name '_mbrtowc_sloc3_1_0'
                                    129 ;sloc4                     Allocated with name '_mbrtowc_sloc4_1_0'
                                    130 ;s                         Allocated with name '_mbrtowc_PARM_2'
                                    131 ;n                         Allocated with name '_mbrtowc_PARM_3'
                                    132 ;ps                        Allocated with name '_mbrtowc_PARM_4'
                                    133 ;pwc                       Allocated with name '_mbrtowc_pwc_65536_9'
                                    134 ;first_byte                Allocated with name '_mbrtowc_first_byte_65536_10'
                                    135 ;seqlen                    Allocated with name '_mbrtowc_seqlen_65536_10'
                                    136 ;mbseq                     Allocated with name '_mbrtowc_mbseq_65536_10'
                                    137 ;codepoint                 Allocated with name '_mbrtowc_codepoint_65536_10'
                                    138 ;i                         Allocated with name '_mbrtowc_i_65536_10'
                                    139 ;j                         Allocated with name '_mbrtowc_j_65536_10'
                                    140 ;sps                       Allocated with name '_mbrtowc_sps_65536_10'
                                    141 ;------------------------------------------------------------
                                    142 ;	mbrtowc.c:32: size_t mbrtowc(wchar_t *restrict pwc, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    143 ;	-----------------------------------------
                                    144 ;	 function mbrtowc
                                    145 ;	-----------------------------------------
      000000                        146 _mbrtowc:
                           000007   147 	ar7 = 0x07
                           000006   148 	ar6 = 0x06
                           000005   149 	ar5 = 0x05
                           000004   150 	ar4 = 0x04
                           000003   151 	ar3 = 0x03
                           000002   152 	ar2 = 0x02
                           000001   153 	ar1 = 0x01
                           000000   154 	ar0 = 0x00
      000000 AF F0            [24]  155 	mov	r7,b
      000002 AE 83            [24]  156 	mov	r6,dph
      000004 E5 82            [12]  157 	mov	a,dpl
      000006 90r00r08         [24]  158 	mov	dptr,#_mbrtowc_pwc_65536_9
      000009 F0               [24]  159 	movx	@dptr,a
      00000A EE               [12]  160 	mov	a,r6
      00000B A3               [24]  161 	inc	dptr
      00000C F0               [24]  162 	movx	@dptr,a
      00000D EF               [12]  163 	mov	a,r7
      00000E A3               [24]  164 	inc	dptr
      00000F F0               [24]  165 	movx	@dptr,a
                                    166 ;	mbrtowc.c:41: if(!s)
      000010 90r00r00         [24]  167 	mov	dptr,#_mbrtowc_PARM_2
      000013 E0               [24]  168 	movx	a,@dptr
      000014 FD               [12]  169 	mov	r5,a
      000015 A3               [24]  170 	inc	dptr
      000016 E0               [24]  171 	movx	a,@dptr
      000017 FE               [12]  172 	mov	r6,a
      000018 A3               [24]  173 	inc	dptr
      000019 E0               [24]  174 	movx	a,@dptr
      00001A FF               [12]  175 	mov	r7,a
      00001B 90r00r00         [24]  176 	mov	dptr,#_mbrtowc_PARM_2
      00001E E0               [24]  177 	movx	a,@dptr
      00001F F5 F0            [12]  178 	mov	b,a
      000021 A3               [24]  179 	inc	dptr
      000022 E0               [24]  180 	movx	a,@dptr
      000023 45 F0            [12]  181 	orl	a,b
      000025 70 35            [24]  182 	jnz	00102$
                                    183 ;	mbrtowc.c:42: return(mbrtowc(0, "", 1, ps));
      000027 90r00r05         [24]  184 	mov	dptr,#_mbrtowc_PARM_4
      00002A E0               [24]  185 	movx	a,@dptr
      00002B FA               [12]  186 	mov	r2,a
      00002C A3               [24]  187 	inc	dptr
      00002D E0               [24]  188 	movx	a,@dptr
      00002E FB               [12]  189 	mov	r3,a
      00002F A3               [24]  190 	inc	dptr
      000030 E0               [24]  191 	movx	a,@dptr
      000031 FC               [12]  192 	mov	r4,a
      000032 90r00r00         [24]  193 	mov	dptr,#_mbrtowc_PARM_2
      000035 74r00            [12]  194 	mov	a,#___str_0
      000037 F0               [24]  195 	movx	@dptr,a
      000038 74s00            [12]  196 	mov	a,#(___str_0 >> 8)
      00003A A3               [24]  197 	inc	dptr
      00003B F0               [24]  198 	movx	@dptr,a
      00003C 74 80            [12]  199 	mov	a,#0x80
      00003E A3               [24]  200 	inc	dptr
      00003F F0               [24]  201 	movx	@dptr,a
      000040 90r00r03         [24]  202 	mov	dptr,#_mbrtowc_PARM_3
      000043 23               [12]  203 	rl	a
      000044 F0               [24]  204 	movx	@dptr,a
      000045 E4               [12]  205 	clr	a
      000046 A3               [24]  206 	inc	dptr
      000047 F0               [24]  207 	movx	@dptr,a
      000048 90r00r05         [24]  208 	mov	dptr,#_mbrtowc_PARM_4
      00004B EA               [12]  209 	mov	a,r2
      00004C F0               [24]  210 	movx	@dptr,a
      00004D EB               [12]  211 	mov	a,r3
      00004E A3               [24]  212 	inc	dptr
      00004F F0               [24]  213 	movx	@dptr,a
      000050 EC               [12]  214 	mov	a,r4
      000051 A3               [24]  215 	inc	dptr
      000052 F0               [24]  216 	movx	@dptr,a
      000053 90 00 00         [24]  217 	mov	dptr,#0x0000
      000056 75 F0 00         [24]  218 	mov	b,#0x00
      000059 02r00r00         [24]  219 	ljmp	_mbrtowc
      00005C                        220 00102$:
                                    221 ;	mbrtowc.c:43: if(!n)
      00005C 90r00r03         [24]  222 	mov	dptr,#_mbrtowc_PARM_3
      00005F E0               [24]  223 	movx	a,@dptr
      000060 FB               [12]  224 	mov	r3,a
      000061 A3               [24]  225 	inc	dptr
      000062 E0               [24]  226 	movx	a,@dptr
      000063 FC               [12]  227 	mov	r4,a
      000064 90r00r03         [24]  228 	mov	dptr,#_mbrtowc_PARM_3
      000067 E0               [24]  229 	movx	a,@dptr
      000068 F5 F0            [12]  230 	mov	b,a
      00006A A3               [24]  231 	inc	dptr
      00006B E0               [24]  232 	movx	a,@dptr
      00006C 45 F0            [12]  233 	orl	a,b
      00006E 70 03            [24]  234 	jnz	00255$
      000070 02r03rB6         [24]  235 	ljmp	00128$
      000073                        236 00255$:
                                    237 ;	mbrtowc.c:45: if(!ps)
      000073 90r00r05         [24]  238 	mov	dptr,#_mbrtowc_PARM_4
      000076 E0               [24]  239 	movx	a,@dptr
      000077 F5 F0            [12]  240 	mov	b,a
      000079 A3               [24]  241 	inc	dptr
      00007A E0               [24]  242 	movx	a,@dptr
      00007B 45 F0            [12]  243 	orl	a,b
      00007D 70 0D            [24]  244 	jnz	00106$
                                    245 ;	mbrtowc.c:47: ps = &sps;
      00007F 90r00r05         [24]  246 	mov	dptr,#_mbrtowc_PARM_4
      000082 74r16            [12]  247 	mov	a,#_mbrtowc_sps_65536_10
      000084 F0               [24]  248 	movx	@dptr,a
      000085 74s00            [12]  249 	mov	a,#(_mbrtowc_sps_65536_10 >> 8)
      000087 A3               [24]  250 	inc	dptr
      000088 F0               [24]  251 	movx	@dptr,a
      000089 E4               [12]  252 	clr	a
      00008A A3               [24]  253 	inc	dptr
      00008B F0               [24]  254 	movx	@dptr,a
      00008C                        255 00106$:
                                    256 ;	mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
      00008C 90r00r05         [24]  257 	mov	dptr,#_mbrtowc_PARM_4
      00008F E0               [24]  258 	movx	a,@dptr
      000090 F5*01            [12]  259 	mov	_mbrtowc_sloc1_1_0,a
      000092 A3               [24]  260 	inc	dptr
      000093 E0               [24]  261 	movx	a,@dptr
      000094 F5*02            [12]  262 	mov	(_mbrtowc_sloc1_1_0 + 1),a
      000096 A3               [24]  263 	inc	dptr
      000097 E0               [24]  264 	movx	a,@dptr
      000098 F5*03            [12]  265 	mov	(_mbrtowc_sloc1_1_0 + 2),a
      00009A 75*00 00         [24]  266 	mov	_mbrtowc_sloc0_1_0,#0x00
      00009D                        267 00131$:
      00009D C0 03            [24]  268 	push	ar3
      00009F C0 04            [24]  269 	push	ar4
      0000A1 E5*00            [12]  270 	mov	a,_mbrtowc_sloc0_1_0
      0000A3 25*01            [12]  271 	add	a,_mbrtowc_sloc1_1_0
      0000A5 FA               [12]  272 	mov	r2,a
      0000A6 E4               [12]  273 	clr	a
      0000A7 35*02            [12]  274 	addc	a,(_mbrtowc_sloc1_1_0 + 1)
      0000A9 FB               [12]  275 	mov	r3,a
      0000AA AC*03            [24]  276 	mov	r4,(_mbrtowc_sloc1_1_0 + 2)
      0000AC 8A 82            [24]  277 	mov	dpl,r2
      0000AE 8B 83            [24]  278 	mov	dph,r3
      0000B0 8C F0            [24]  279 	mov	b,r4
      0000B2 12r00r00         [24]  280 	lcall	__gptrget
      0000B5 F5*04            [12]  281 	mov	_mbrtowc_sloc2_1_0,a
      0000B7 D0 04            [24]  282 	pop	ar4
      0000B9 D0 03            [24]  283 	pop	ar3
      0000BB E5*04            [12]  284 	mov	a,_mbrtowc_sloc2_1_0
      0000BD 60 18            [24]  285 	jz	00174$
      0000BF 74 FD            [12]  286 	mov	a,#0x100 - 0x03
      0000C1 25*00            [12]  287 	add	a,_mbrtowc_sloc0_1_0
      0000C3 40 12            [24]  288 	jc	00174$
                                    289 ;	mbrtowc.c:51: mbseq[i] = ps->c[i];
      0000C5 E5*00            [12]  290 	mov	a,_mbrtowc_sloc0_1_0
      0000C7 24r0D            [12]  291 	add	a,#_mbrtowc_mbseq_65536_10
      0000C9 F5 82            [12]  292 	mov	dpl,a
      0000CB E4               [12]  293 	clr	a
      0000CC 34s00            [12]  294 	addc	a,#(_mbrtowc_mbseq_65536_10 >> 8)
      0000CE F5 83            [12]  295 	mov	dph,a
      0000D0 E5*04            [12]  296 	mov	a,_mbrtowc_sloc2_1_0
      0000D2 F0               [24]  297 	movx	@dptr,a
                                    298 ;	mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
      0000D3 05*00            [12]  299 	inc	_mbrtowc_sloc0_1_0
      0000D5 80 C6            [24]  300 	sjmp	00131$
      0000D7                        301 00174$:
      0000D7 90r00r15         [24]  302 	mov	dptr,#_mbrtowc_i_65536_10
      0000DA E5*00            [12]  303 	mov	a,_mbrtowc_sloc0_1_0
      0000DC F0               [24]  304 	movx	@dptr,a
                                    305 ;	mbrtowc.c:53: seqlen = 1;
      0000DD 90r00r0C         [24]  306 	mov	dptr,#_mbrtowc_seqlen_65536_10
      0000E0 74 01            [12]  307 	mov	a,#0x01
      0000E2 F0               [24]  308 	movx	@dptr,a
                                    309 ;	mbrtowc.c:54: first_byte = ps->c[0] ? ps->c[0] : *s;
      0000E3 90r00r05         [24]  310 	mov	dptr,#_mbrtowc_PARM_4
      0000E6 E0               [24]  311 	movx	a,@dptr
      0000E7 F8               [12]  312 	mov	r0,a
      0000E8 A3               [24]  313 	inc	dptr
      0000E9 E0               [24]  314 	movx	a,@dptr
      0000EA F9               [12]  315 	mov	r1,a
      0000EB A3               [24]  316 	inc	dptr
      0000EC E0               [24]  317 	movx	a,@dptr
      0000ED FA               [12]  318 	mov	r2,a
      0000EE 88 82            [24]  319 	mov	dpl,r0
      0000F0 89 83            [24]  320 	mov	dph,r1
      0000F2 8A F0            [24]  321 	mov	b,r2
      0000F4 12r00r00         [24]  322 	lcall	__gptrget
      0000F7 FA               [12]  323 	mov	r2,a
      0000F8 70 0A            [24]  324 	jnz	00148$
      0000FA 8D 82            [24]  325 	mov	dpl,r5
      0000FC 8E 83            [24]  326 	mov	dph,r6
      0000FE 8F F0            [24]  327 	mov	b,r7
      000100 12r00r00         [24]  328 	lcall	__gptrget
      000103 FA               [12]  329 	mov	r2,a
      000104                        330 00148$:
      000104 90r00r0B         [24]  331 	mov	dptr,#_mbrtowc_first_byte_65536_10
      000107 EA               [12]  332 	mov	a,r2
      000108 F0               [24]  333 	movx	@dptr,a
                                    334 ;	mbrtowc.c:56: if(first_byte & 0x80)
      000109 EA               [12]  335 	mov	a,r2
      00010A 30 E7 5F         [24]  336 	jnb	acc.7,00112$
                                    337 ;	mbrtowc.c:58: while (first_byte & (0x80 >> seqlen))
      00010D 79 01            [12]  338 	mov	r1,#0x01
      00010F                        339 00108$:
      00010F C0 03            [24]  340 	push	ar3
      000111 C0 04            [24]  341 	push	ar4
      000113 89 F0            [24]  342 	mov	b,r1
      000115 05 F0            [12]  343 	inc	b
      000117 75*01 80         [24]  344 	mov	_mbrtowc_sloc1_1_0,#0x80
      00011A E4               [12]  345 	clr	a
      00011B F5*02            [12]  346 	mov	(_mbrtowc_sloc1_1_0 + 1),a
      00011D 33               [12]  347 	rlc	a
      00011E 92 D2            [24]  348 	mov	ov,c
      000120 80 0C            [24]  349 	sjmp	00262$
      000122                        350 00261$:
      000122 A2 D2            [12]  351 	mov	c,ov
      000124 E5*02            [12]  352 	mov	a,(_mbrtowc_sloc1_1_0 + 1)
      000126 13               [12]  353 	rrc	a
      000127 F5*02            [12]  354 	mov	(_mbrtowc_sloc1_1_0 + 1),a
      000129 E5*01            [12]  355 	mov	a,_mbrtowc_sloc1_1_0
      00012B 13               [12]  356 	rrc	a
      00012C F5*01            [12]  357 	mov	_mbrtowc_sloc1_1_0,a
      00012E                        358 00262$:
      00012E D5 F0 F1         [24]  359 	djnz	b,00261$
      000131 8A 03            [24]  360 	mov	ar3,r2
      000133 7C 00            [12]  361 	mov	r4,#0x00
      000135 E5*01            [12]  362 	mov	a,_mbrtowc_sloc1_1_0
      000137 52 03            [12]  363 	anl	ar3,a
      000139 E5*02            [12]  364 	mov	a,(_mbrtowc_sloc1_1_0 + 1)
      00013B 52 04            [12]  365 	anl	ar4,a
      00013D EB               [12]  366 	mov	a,r3
      00013E 4C               [12]  367 	orl	a,r4
      00013F D0 04            [24]  368 	pop	ar4
      000141 D0 03            [24]  369 	pop	ar3
      000143 60 03            [24]  370 	jz	00175$
                                    371 ;	mbrtowc.c:59: seqlen++;
      000145 09               [12]  372 	inc	r1
      000146 80 C7            [24]  373 	sjmp	00108$
      000148                        374 00175$:
      000148 90r00r0C         [24]  375 	mov	dptr,#_mbrtowc_seqlen_65536_10
      00014B E9               [12]  376 	mov	a,r1
      00014C F0               [24]  377 	movx	@dptr,a
                                    378 ;	mbrtowc.c:60: first_byte &= (0xff >> (seqlen + 1));
      00014D 09               [12]  379 	inc	r1
      00014E 89 F0            [24]  380 	mov	b,r1
      000150 05 F0            [12]  381 	inc	b
      000152 78 FF            [12]  382 	mov	r0,#0xff
      000154 E4               [12]  383 	clr	a
      000155 F9               [12]  384 	mov	r1,a
      000156 33               [12]  385 	rlc	a
      000157 92 D2            [24]  386 	mov	ov,c
      000159 80 08            [24]  387 	sjmp	00265$
      00015B                        388 00264$:
      00015B A2 D2            [12]  389 	mov	c,ov
      00015D E9               [12]  390 	mov	a,r1
      00015E 13               [12]  391 	rrc	a
      00015F F9               [12]  392 	mov	r1,a
      000160 E8               [12]  393 	mov	a,r0
      000161 13               [12]  394 	rrc	a
      000162 F8               [12]  395 	mov	r0,a
      000163                        396 00265$:
      000163 D5 F0 F5         [24]  397 	djnz	b,00264$
      000166 90r00r0B         [24]  398 	mov	dptr,#_mbrtowc_first_byte_65536_10
      000169 E8               [12]  399 	mov	a,r0
      00016A 5A               [12]  400 	anl	a,r2
      00016B F0               [24]  401 	movx	@dptr,a
      00016C                        402 00112$:
                                    403 ;	mbrtowc.c:63: if(seqlen > 4)
      00016C 90r00r0C         [24]  404 	mov	dptr,#_mbrtowc_seqlen_65536_10
      00016F E0               [24]  405 	movx	a,@dptr
      000170 FA               [12]  406 	mov  r2,a
      000171 24 FB            [12]  407 	add	a,#0xff - 0x04
      000173 50 03            [24]  408 	jnc	00266$
      000175 02r03rB6         [24]  409 	ljmp	00128$
      000178                        410 00266$:
                                    411 ;	mbrtowc.c:66: if(i + n < seqlen) // Incomplete multibyte character
      000178 C0 05            [24]  412 	push	ar5
      00017A C0 06            [24]  413 	push	ar6
      00017C C0 07            [24]  414 	push	ar7
      00017E 90r00r15         [24]  415 	mov	dptr,#_mbrtowc_i_65536_10
      000181 E0               [24]  416 	movx	a,@dptr
      000182 F9               [12]  417 	mov	r1,a
      000183 F8               [12]  418 	mov	r0,a
      000184 7F 00            [12]  419 	mov	r7,#0x00
      000186 EB               [12]  420 	mov	a,r3
      000187 28               [12]  421 	add	a,r0
      000188 F8               [12]  422 	mov	r0,a
      000189 EC               [12]  423 	mov	a,r4
      00018A 3F               [12]  424 	addc	a,r7
      00018B FF               [12]  425 	mov	r7,a
      00018C 7E 00            [12]  426 	mov	r6,#0x00
      00018E C3               [12]  427 	clr	c
      00018F E8               [12]  428 	mov	a,r0
      000190 9A               [12]  429 	subb	a,r2
      000191 EF               [12]  430 	mov	a,r7
      000192 9E               [12]  431 	subb	a,r6
      000193 D0 07            [24]  432 	pop	ar7
      000195 D0 06            [24]  433 	pop	ar6
      000197 D0 05            [24]  434 	pop	ar5
      000199 50 5C            [24]  435 	jnc	00164$
                                    436 ;	mbrtowc.c:70: return(-2);
      00019B 90r00r05         [24]  437 	mov	dptr,#_mbrtowc_PARM_4
      00019E E0               [24]  438 	movx	a,@dptr
      00019F F5*01            [12]  439 	mov	_mbrtowc_sloc1_1_0,a
      0001A1 A3               [24]  440 	inc	dptr
      0001A2 E0               [24]  441 	movx	a,@dptr
      0001A3 F5*02            [12]  442 	mov	(_mbrtowc_sloc1_1_0 + 1),a
      0001A5 A3               [24]  443 	inc	dptr
      0001A6 E0               [24]  444 	movx	a,@dptr
      0001A7 F5*03            [12]  445 	mov	(_mbrtowc_sloc1_1_0 + 2),a
      0001A9 8D*05            [24]  446 	mov	_mbrtowc_sloc3_1_0,r5
      0001AB 8E*06            [24]  447 	mov	(_mbrtowc_sloc3_1_0 + 1),r6
      0001AD 8F*07            [24]  448 	mov	(_mbrtowc_sloc3_1_0 + 2),r7
      0001AF 89*04            [24]  449 	mov	_mbrtowc_sloc2_1_0,r1
      0001B1                        450 00134$:
                                    451 ;	mbrtowc.c:68: for(;n-- ; i++)
      0001B1 8B 00            [24]  452 	mov	ar0,r3
      0001B3 8C 02            [24]  453 	mov	ar2,r4
      0001B5 1B               [12]  454 	dec	r3
      0001B6 BB FF 01         [24]  455 	cjne	r3,#0xff,00268$
      0001B9 1C               [12]  456 	dec	r4
      0001BA                        457 00268$:
      0001BA E8               [12]  458 	mov	a,r0
      0001BB 4A               [12]  459 	orl	a,r2
      0001BC 60 35            [24]  460 	jz	00115$
                                    461 ;	mbrtowc.c:69: ps->c[i] = *s++;
      0001BE C0 03            [24]  462 	push	ar3
      0001C0 C0 04            [24]  463 	push	ar4
      0001C2 E5*04            [12]  464 	mov	a,_mbrtowc_sloc2_1_0
      0001C4 25*01            [12]  465 	add	a,_mbrtowc_sloc1_1_0
      0001C6 F8               [12]  466 	mov	r0,a
      0001C7 E4               [12]  467 	clr	a
      0001C8 35*02            [12]  468 	addc	a,(_mbrtowc_sloc1_1_0 + 1)
      0001CA FA               [12]  469 	mov	r2,a
      0001CB AC*03            [24]  470 	mov	r4,(_mbrtowc_sloc1_1_0 + 2)
      0001CD 85*05 82         [24]  471 	mov	dpl,_mbrtowc_sloc3_1_0
      0001D0 85*06 83         [24]  472 	mov	dph,(_mbrtowc_sloc3_1_0 + 1)
      0001D3 85*07 F0         [24]  473 	mov	b,(_mbrtowc_sloc3_1_0 + 2)
      0001D6 12r00r00         [24]  474 	lcall	__gptrget
      0001D9 FB               [12]  475 	mov	r3,a
      0001DA A3               [24]  476 	inc	dptr
      0001DB 85 82*05         [24]  477 	mov	_mbrtowc_sloc3_1_0,dpl
      0001DE 85 83*06         [24]  478 	mov	(_mbrtowc_sloc3_1_0 + 1),dph
      0001E1 88 82            [24]  479 	mov	dpl,r0
      0001E3 8A 83            [24]  480 	mov	dph,r2
      0001E5 8C F0            [24]  481 	mov	b,r4
      0001E7 EB               [12]  482 	mov	a,r3
      0001E8 12r00r00         [24]  483 	lcall	__gptrput
                                    484 ;	mbrtowc.c:68: for(;n-- ; i++)
      0001EB 05*04            [12]  485 	inc	_mbrtowc_sloc2_1_0
      0001ED D0 04            [24]  486 	pop	ar4
      0001EF D0 03            [24]  487 	pop	ar3
      0001F1 80 BE            [24]  488 	sjmp	00134$
      0001F3                        489 00115$:
                                    490 ;	mbrtowc.c:70: return(-2);
      0001F3 90 FF FE         [24]  491 	mov	dptr,#0xfffe
      0001F6 22               [24]  492 	ret
                                    493 ;	mbrtowc.c:73: for(j = 0; j < i; j++)
      0001F7                        494 00164$:
      0001F7 90r00r05         [24]  495 	mov	dptr,#_mbrtowc_PARM_4
      0001FA E0               [24]  496 	movx	a,@dptr
      0001FB FA               [12]  497 	mov	r2,a
      0001FC A3               [24]  498 	inc	dptr
      0001FD E0               [24]  499 	movx	a,@dptr
      0001FE FB               [12]  500 	mov	r3,a
      0001FF A3               [24]  501 	inc	dptr
      000200 E0               [24]  502 	movx	a,@dptr
      000201 FC               [12]  503 	mov	r4,a
      000202 78 00            [12]  504 	mov	r0,#0x00
      000204                        505 00137$:
      000204 C3               [12]  506 	clr	c
      000205 E8               [12]  507 	mov	a,r0
      000206 99               [12]  508 	subb	a,r1
      000207 50 21            [24]  509 	jnc	00118$
                                    510 ;	mbrtowc.c:74: ps->c[j] = 0;
      000209 C0 05            [24]  511 	push	ar5
      00020B C0 06            [24]  512 	push	ar6
      00020D C0 07            [24]  513 	push	ar7
      00020F E8               [12]  514 	mov	a,r0
      000210 2A               [12]  515 	add	a,r2
      000211 FD               [12]  516 	mov	r5,a
      000212 E4               [12]  517 	clr	a
      000213 3B               [12]  518 	addc	a,r3
      000214 FE               [12]  519 	mov	r6,a
      000215 8C 07            [24]  520 	mov	ar7,r4
      000217 8D 82            [24]  521 	mov	dpl,r5
      000219 8E 83            [24]  522 	mov	dph,r6
      00021B 8F F0            [24]  523 	mov	b,r7
      00021D E4               [12]  524 	clr	a
      00021E 12r00r00         [24]  525 	lcall	__gptrput
                                    526 ;	mbrtowc.c:73: for(j = 0; j < i; j++)
      000221 08               [12]  527 	inc	r0
      000222 D0 07            [24]  528 	pop	ar7
      000224 D0 06            [24]  529 	pop	ar6
      000226 D0 05            [24]  530 	pop	ar5
      000228 80 DA            [24]  531 	sjmp	00137$
      00022A                        532 00118$:
                                    533 ;	mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
      00022A 90r00r03         [24]  534 	mov	dptr,#_mbrtowc_PARM_3
      00022D 74 01            [12]  535 	mov	a,#0x01
      00022F F0               [24]  536 	movx	@dptr,a
      000230 E4               [12]  537 	clr	a
      000231 A3               [24]  538 	inc	dptr
      000232 F0               [24]  539 	movx	@dptr,a
      000233 E9               [12]  540 	mov	a,r1
      000234 60 04            [24]  541 	jz	00149$
      000236 7C 00            [12]  542 	mov	r4,#0x00
      000238 80 04            [24]  543 	sjmp	00150$
      00023A                        544 00149$:
      00023A 79 01            [12]  545 	mov	r1,#0x01
      00023C 7C 00            [12]  546 	mov	r4,#0x00
      00023E                        547 00150$:
      00023E 90r00r0C         [24]  548 	mov	dptr,#_mbrtowc_seqlen_65536_10
      000241 E0               [24]  549 	movx	a,@dptr
      000242 FC               [12]  550 	mov	r4,a
      000243 7A 01            [12]  551 	mov	r2,#0x01
      000245 7B 00            [12]  552 	mov	r3,#0x00
      000247                        553 00140$:
      000247 C3               [12]  554 	clr	c
      000248 E9               [12]  555 	mov	a,r1
      000249 9C               [12]  556 	subb	a,r4
      00024A 50 49            [24]  557 	jnc	00121$
                                    558 ;	mbrtowc.c:78: mbseq[i] = *s++;
      00024C C0 04            [24]  559 	push	ar4
      00024E E9               [12]  560 	mov	a,r1
      00024F 24r0D            [12]  561 	add	a,#_mbrtowc_mbseq_65536_10
      000251 F5*05            [12]  562 	mov	_mbrtowc_sloc3_1_0,a
      000253 E4               [12]  563 	clr	a
      000254 34s00            [12]  564 	addc	a,#(_mbrtowc_mbseq_65536_10 >> 8)
      000256 F5*06            [12]  565 	mov	(_mbrtowc_sloc3_1_0 + 1),a
      000258 8D 82            [24]  566 	mov	dpl,r5
      00025A 8E 83            [24]  567 	mov	dph,r6
      00025C 8F F0            [24]  568 	mov	b,r7
      00025E 12r00r00         [24]  569 	lcall	__gptrget
      000261 FC               [12]  570 	mov	r4,a
      000262 A3               [24]  571 	inc	dptr
      000263 AD 82            [24]  572 	mov	r5,dpl
      000265 AE 83            [24]  573 	mov	r6,dph
      000267 85*05 82         [24]  574 	mov	dpl,_mbrtowc_sloc3_1_0
      00026A 85*06 83         [24]  575 	mov	dph,(_mbrtowc_sloc3_1_0 + 1)
      00026D EC               [12]  576 	mov	a,r4
      00026E F0               [24]  577 	movx	@dptr,a
                                    578 ;	mbrtowc.c:79: if((mbseq[i] & 0xc0) != 0x80)
      00026F 8C 00            [24]  579 	mov	ar0,r4
      000271 53 00 C0         [24]  580 	anl	ar0,#0xc0
      000274 7C 00            [12]  581 	mov	r4,#0x00
      000276 B8 80 05         [24]  582 	cjne	r0,#0x80,00273$
      000279 BC 00 02         [24]  583 	cjne	r4,#0x00,00273$
      00027C 80 05            [24]  584 	sjmp	00274$
      00027E                        585 00273$:
      00027E D0 04            [24]  586 	pop	ar4
      000280 02r03rB6         [24]  587 	ljmp	00128$
      000283                        588 00274$:
      000283 D0 04            [24]  589 	pop	ar4
                                    590 ;	mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
      000285 09               [12]  591 	inc	r1
      000286 0A               [12]  592 	inc	r2
      000287 BA 00 01         [24]  593 	cjne	r2,#0x00,00275$
      00028A 0B               [12]  594 	inc	r3
      00028B                        595 00275$:
      00028B 90r00r03         [24]  596 	mov	dptr,#_mbrtowc_PARM_3
      00028E EA               [12]  597 	mov	a,r2
      00028F F0               [24]  598 	movx	@dptr,a
      000290 EB               [12]  599 	mov	a,r3
      000291 A3               [24]  600 	inc	dptr
      000292 F0               [24]  601 	movx	@dptr,a
      000293 80 B2            [24]  602 	sjmp	00140$
      000295                        603 00121$:
                                    604 ;	mbrtowc.c:83: codepoint = first_byte;
      000295 90r00r0B         [24]  605 	mov	dptr,#_mbrtowc_first_byte_65536_10
      000298 E0               [24]  606 	movx	a,@dptr
      000299 90r00r11         [24]  607 	mov	dptr,#_mbrtowc_codepoint_65536_10
      00029C F0               [24]  608 	movx	@dptr,a
      00029D E4               [12]  609 	clr	a
      00029E A3               [24]  610 	inc	dptr
      00029F F0               [24]  611 	movx	@dptr,a
      0002A0 A3               [24]  612 	inc	dptr
      0002A1 F0               [24]  613 	movx	@dptr,a
      0002A2 A3               [24]  614 	inc	dptr
      0002A3 F0               [24]  615 	movx	@dptr,a
                                    616 ;	mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
      0002A4 7Dr0E            [12]  617 	mov	r5,#(_mbrtowc_mbseq_65536_10 + 0x0001)
      0002A6 7Es00            [12]  618 	mov	r6,#((_mbrtowc_mbseq_65536_10 + 0x0001) >> 8)
      0002A8 FF               [12]  619 	mov	r7,a
      0002A9 1C               [12]  620 	dec	r4
      0002AA                        621 00143$:
      0002AA EC               [12]  622 	mov	a,r4
      0002AB 70 03            [24]  623 	jnz	00276$
      0002AD 02r03r41         [24]  624 	ljmp	00122$
      0002B0                        625 00276$:
                                    626 ;	mbrtowc.c:87: codepoint <<= 6;
      0002B0 90r00r11         [24]  627 	mov	dptr,#_mbrtowc_codepoint_65536_10
      0002B3 E0               [24]  628 	movx	a,@dptr
      0002B4 F8               [12]  629 	mov	r0,a
      0002B5 A3               [24]  630 	inc	dptr
      0002B6 E0               [24]  631 	movx	a,@dptr
      0002B7 F9               [12]  632 	mov	r1,a
      0002B8 A3               [24]  633 	inc	dptr
      0002B9 E0               [24]  634 	movx	a,@dptr
      0002BA FA               [12]  635 	mov	r2,a
      0002BB A3               [24]  636 	inc	dptr
      0002BC E0               [24]  637 	movx	a,@dptr
      0002BD 54 03            [12]  638 	anl	a,#0x03
      0002BF A2 E0            [12]  639 	mov	c,acc.0
      0002C1 CA               [12]  640 	xch	a,r2
      0002C2 13               [12]  641 	rrc	a
      0002C3 CA               [12]  642 	xch	a,r2
      0002C4 13               [12]  643 	rrc	a
      0002C5 A2 E0            [12]  644 	mov	c,acc.0
      0002C7 CA               [12]  645 	xch	a,r2
      0002C8 13               [12]  646 	rrc	a
      0002C9 CA               [12]  647 	xch	a,r2
      0002CA 13               [12]  648 	rrc	a
      0002CB CA               [12]  649 	xch	a,r2
      0002CC FB               [12]  650 	mov	r3,a
      0002CD E9               [12]  651 	mov	a,r1
      0002CE 03               [12]  652 	rr	a
      0002CF 03               [12]  653 	rr	a
      0002D0 54 3F            [12]  654 	anl	a,#0x3f
      0002D2 4A               [12]  655 	orl	a,r2
      0002D3 FA               [12]  656 	mov	r2,a
      0002D4 E9               [12]  657 	mov	a,r1
      0002D5 54 03            [12]  658 	anl	a,#0x03
      0002D7 A2 E0            [12]  659 	mov	c,acc.0
      0002D9 C8               [12]  660 	xch	a,r0
      0002DA 13               [12]  661 	rrc	a
      0002DB C8               [12]  662 	xch	a,r0
      0002DC 13               [12]  663 	rrc	a
      0002DD A2 E0            [12]  664 	mov	c,acc.0
      0002DF C8               [12]  665 	xch	a,r0
      0002E0 13               [12]  666 	rrc	a
      0002E1 C8               [12]  667 	xch	a,r0
      0002E2 13               [12]  668 	rrc	a
      0002E3 C8               [12]  669 	xch	a,r0
      0002E4 F9               [12]  670 	mov	r1,a
      0002E5 90r00r11         [24]  671 	mov	dptr,#_mbrtowc_codepoint_65536_10
      0002E8 E8               [12]  672 	mov	a,r0
      0002E9 F0               [24]  673 	movx	@dptr,a
      0002EA E9               [12]  674 	mov	a,r1
      0002EB A3               [24]  675 	inc	dptr
      0002EC F0               [24]  676 	movx	@dptr,a
      0002ED EA               [12]  677 	mov	a,r2
      0002EE A3               [24]  678 	inc	dptr
      0002EF F0               [24]  679 	movx	@dptr,a
      0002F0 EB               [12]  680 	mov	a,r3
      0002F1 A3               [24]  681 	inc	dptr
      0002F2 F0               [24]  682 	movx	@dptr,a
                                    683 ;	mbrtowc.c:88: codepoint |= (*s & 0x3f);
      0002F3 8D 82            [24]  684 	mov	dpl,r5
      0002F5 8E 83            [24]  685 	mov	dph,r6
      0002F7 8F F0            [24]  686 	mov	b,r7
      0002F9 12r00r00         [24]  687 	lcall	__gptrget
      0002FC FB               [12]  688 	mov	r3,a
      0002FD A3               [24]  689 	inc	dptr
      0002FE AD 82            [24]  690 	mov	r5,dpl
      000300 AE 83            [24]  691 	mov	r6,dph
      000302 7A 00            [12]  692 	mov	r2,#0x00
      000304 74 3F            [12]  693 	mov	a,#0x3f
      000306 5B               [12]  694 	anl	a,r3
      000307 F5*05            [12]  695 	mov	_mbrtowc_sloc3_1_0,a
      000309 8A*06            [24]  696 	mov	(_mbrtowc_sloc3_1_0 + 1),r2
      00030B 90r00r11         [24]  697 	mov	dptr,#_mbrtowc_codepoint_65536_10
      00030E E0               [24]  698 	movx	a,@dptr
      00030F F5*08            [12]  699 	mov	_mbrtowc_sloc4_1_0,a
      000311 A3               [24]  700 	inc	dptr
      000312 E0               [24]  701 	movx	a,@dptr
      000313 F5*09            [12]  702 	mov	(_mbrtowc_sloc4_1_0 + 1),a
      000315 A3               [24]  703 	inc	dptr
      000316 E0               [24]  704 	movx	a,@dptr
      000317 F5*0A            [12]  705 	mov	(_mbrtowc_sloc4_1_0 + 2),a
      000319 A3               [24]  706 	inc	dptr
      00031A E0               [24]  707 	movx	a,@dptr
      00031B F5*0B            [12]  708 	mov	(_mbrtowc_sloc4_1_0 + 3),a
      00031D A8*05            [24]  709 	mov	r0,_mbrtowc_sloc3_1_0
      00031F E5*06            [12]  710 	mov	a,(_mbrtowc_sloc3_1_0 + 1)
      000321 F9               [12]  711 	mov	r1,a
      000322 33               [12]  712 	rlc	a
      000323 95 E0            [12]  713 	subb	a,acc
      000325 FA               [12]  714 	mov	r2,a
      000326 FB               [12]  715 	mov	r3,a
      000327 90r00r11         [24]  716 	mov	dptr,#_mbrtowc_codepoint_65536_10
      00032A E8               [12]  717 	mov	a,r0
      00032B 45*08            [12]  718 	orl	a,_mbrtowc_sloc4_1_0
      00032D F0               [24]  719 	movx	@dptr,a
      00032E E9               [12]  720 	mov	a,r1
      00032F 45*09            [12]  721 	orl	a,(_mbrtowc_sloc4_1_0 + 1)
      000331 A3               [24]  722 	inc	dptr
      000332 F0               [24]  723 	movx	@dptr,a
      000333 EA               [12]  724 	mov	a,r2
      000334 45*0A            [12]  725 	orl	a,(_mbrtowc_sloc4_1_0 + 2)
      000336 A3               [24]  726 	inc	dptr
      000337 F0               [24]  727 	movx	@dptr,a
      000338 EB               [12]  728 	mov	a,r3
      000339 45*0B            [12]  729 	orl	a,(_mbrtowc_sloc4_1_0 + 3)
      00033B A3               [24]  730 	inc	dptr
      00033C F0               [24]  731 	movx	@dptr,a
                                    732 ;	mbrtowc.c:89: s++;
                                    733 ;	mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
      00033D 1C               [12]  734 	dec	r4
      00033E 02r02rAA         [24]  735 	ljmp	00143$
      000341                        736 00122$:
                                    737 ;	mbrtowc.c:92: if(codepoint >= 0xd800 && codepoint <= 0xdfff) // UTF-16 surrogate.
      000341 90r00r11         [24]  738 	mov	dptr,#_mbrtowc_codepoint_65536_10
      000344 E0               [24]  739 	movx	a,@dptr
      000345 FC               [12]  740 	mov	r4,a
      000346 A3               [24]  741 	inc	dptr
      000347 E0               [24]  742 	movx	a,@dptr
      000348 FD               [12]  743 	mov	r5,a
      000349 A3               [24]  744 	inc	dptr
      00034A E0               [24]  745 	movx	a,@dptr
      00034B FE               [12]  746 	mov	r6,a
      00034C A3               [24]  747 	inc	dptr
      00034D E0               [24]  748 	movx	a,@dptr
      00034E FF               [12]  749 	mov	r7,a
      00034F C3               [12]  750 	clr	c
      000350 ED               [12]  751 	mov	a,r5
      000351 94 D8            [12]  752 	subb	a,#0xd8
      000353 EE               [12]  753 	mov	a,r6
      000354 94 00            [12]  754 	subb	a,#0x00
      000356 EF               [12]  755 	mov	a,r7
      000357 94 00            [12]  756 	subb	a,#0x00
      000359 40 10            [24]  757 	jc	00124$
      00035B 74 FF            [12]  758 	mov	a,#0xff
      00035D 9C               [12]  759 	subb	a,r4
      00035E 74 DF            [12]  760 	mov	a,#0xdf
      000360 9D               [12]  761 	subb	a,r5
      000361 E4               [12]  762 	clr	a
      000362 9E               [12]  763 	subb	a,r6
      000363 E4               [12]  764 	clr	a
      000364 9F               [12]  765 	subb	a,r7
      000365 40 04            [24]  766 	jc	00124$
                                    767 ;	mbrtowc.c:93: return(-1);
      000367 90 FF FF         [24]  768 	mov	dptr,#0xffff
      00036A 22               [24]  769 	ret
      00036B                        770 00124$:
                                    771 ;	mbrtowc.c:95: if(pwc)
      00036B 90r00r08         [24]  772 	mov	dptr,#_mbrtowc_pwc_65536_9
      00036E E0               [24]  773 	movx	a,@dptr
      00036F FD               [12]  774 	mov	r5,a
      000370 A3               [24]  775 	inc	dptr
      000371 E0               [24]  776 	movx	a,@dptr
      000372 FE               [12]  777 	mov	r6,a
      000373 A3               [24]  778 	inc	dptr
      000374 E0               [24]  779 	movx	a,@dptr
      000375 FF               [12]  780 	mov	r7,a
      000376 90r00r08         [24]  781 	mov	dptr,#_mbrtowc_pwc_65536_9
      000379 E0               [24]  782 	movx	a,@dptr
      00037A F5 F0            [12]  783 	mov	b,a
      00037C A3               [24]  784 	inc	dptr
      00037D E0               [24]  785 	movx	a,@dptr
      00037E 45 F0            [12]  786 	orl	a,b
      000380 60 27            [24]  787 	jz	00127$
                                    788 ;	mbrtowc.c:96: *pwc = codepoint;
      000382 90r00r11         [24]  789 	mov	dptr,#_mbrtowc_codepoint_65536_10
      000385 E0               [24]  790 	movx	a,@dptr
      000386 F9               [12]  791 	mov	r1,a
      000387 A3               [24]  792 	inc	dptr
      000388 E0               [24]  793 	movx	a,@dptr
      000389 FA               [12]  794 	mov	r2,a
      00038A A3               [24]  795 	inc	dptr
      00038B E0               [24]  796 	movx	a,@dptr
      00038C FB               [12]  797 	mov	r3,a
      00038D A3               [24]  798 	inc	dptr
      00038E E0               [24]  799 	movx	a,@dptr
      00038F FC               [12]  800 	mov	r4,a
      000390 8D 82            [24]  801 	mov	dpl,r5
      000392 8E 83            [24]  802 	mov	dph,r6
      000394 8F F0            [24]  803 	mov	b,r7
      000396 E9               [12]  804 	mov	a,r1
      000397 12r00r00         [24]  805 	lcall	__gptrput
      00039A A3               [24]  806 	inc	dptr
      00039B EA               [12]  807 	mov	a,r2
      00039C 12r00r00         [24]  808 	lcall	__gptrput
      00039F A3               [24]  809 	inc	dptr
      0003A0 EB               [12]  810 	mov	a,r3
      0003A1 12r00r00         [24]  811 	lcall	__gptrput
      0003A4 A3               [24]  812 	inc	dptr
      0003A5 EC               [12]  813 	mov	a,r4
      0003A6 12r00r00         [24]  814 	lcall	__gptrput
      0003A9                        815 00127$:
                                    816 ;	mbrtowc.c:97: return(n);
      0003A9 90r00r03         [24]  817 	mov	dptr,#_mbrtowc_PARM_3
      0003AC E0               [24]  818 	movx	a,@dptr
      0003AD FE               [12]  819 	mov	r6,a
      0003AE A3               [24]  820 	inc	dptr
      0003AF E0               [24]  821 	movx	a,@dptr
      0003B0 FF               [12]  822 	mov	r7,a
      0003B1 8E 82            [24]  823 	mov	dpl,r6
      0003B3 8F 83            [24]  824 	mov	dph,r7
                                    825 ;	mbrtowc.c:99: eilseq:
      0003B5 22               [24]  826 	ret
      0003B6                        827 00128$:
                                    828 ;	mbrtowc.c:100: errno = EILSEQ;
      0003B6 90r00r00         [24]  829 	mov	dptr,#_errno
      0003B9 74 54            [12]  830 	mov	a,#0x54
      0003BB F0               [24]  831 	movx	@dptr,a
      0003BC E4               [12]  832 	clr	a
      0003BD A3               [24]  833 	inc	dptr
      0003BE F0               [24]  834 	movx	@dptr,a
                                    835 ;	mbrtowc.c:101: return(-1);
      0003BF 90 FF FF         [24]  836 	mov	dptr,#0xffff
                                    837 ;	mbrtowc.c:102: }
      0003C2 22               [24]  838 	ret
                                    839 	.area CSEG    (CODE)
                                    840 	.area CONST   (CODE)
                                    841 	.area CONST   (CODE)
      000000                        842 ___str_0:
      000000 00                     843 	.db 0x00
                                    844 	.area CSEG    (CODE)
                                    845 	.area XINIT   (CODE)
                                    846 	.area CABS    (ABS,CODE)
