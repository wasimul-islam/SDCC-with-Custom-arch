                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ceilf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ceilf
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'ceilf'
                                     91 ;------------------------------------------------------------
                                     92 ;x                         Allocated to stack - _bp +1
                                     93 ;r                         Allocated to stack - _bp +9
                                     94 ;sloc0                     Allocated to stack - _bp +5
                                     95 ;------------------------------------------------------------
                                     96 ;	ceilf.c:33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                                     97 ;	-----------------------------------------
                                     98 ;	 function ceilf
                                     99 ;	-----------------------------------------
      000000                        100 _ceilf:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 85 81*00         [24]  110 	mov	_bp,sp
      000005 C0 82            [24]  111 	push	dpl
      000007 C0 83            [24]  112 	push	dph
      000009 C0 F0            [24]  113 	push	b
      00000B C0 E0            [24]  114 	push	acc
      00000D E5 81            [12]  115 	mov	a,sp
      00000F 24 08            [12]  116 	add	a,#0x08
      000011 F5 81            [12]  117 	mov	sp,a
                                    118 ;	ceilf.c:36: r=x;
      000013 A8*00            [24]  119 	mov	r0,_bp
      000015 08               [12]  120 	inc	r0
      000016 86 82            [24]  121 	mov	dpl,@r0
      000018 08               [12]  122 	inc	r0
      000019 86 83            [24]  123 	mov	dph,@r0
      00001B 08               [12]  124 	inc	r0
      00001C 86 F0            [24]  125 	mov	b,@r0
      00001E 08               [12]  126 	inc	r0
      00001F E6               [12]  127 	mov	a,@r0
      000020 12r00r00         [24]  128 	lcall	___fs2slong
      000023 AC 82            [24]  129 	mov	r4,dpl
      000025 AD 83            [24]  130 	mov	r5,dph
      000027 AE F0            [24]  131 	mov	r6,b
      000029 FF               [12]  132 	mov	r7,a
      00002A E5*00            [12]  133 	mov	a,_bp
      00002C 24 09            [12]  134 	add	a,#0x09
      00002E F8               [12]  135 	mov	r0,a
      00002F A6 04            [24]  136 	mov	@r0,ar4
      000031 08               [12]  137 	inc	r0
      000032 A6 05            [24]  138 	mov	@r0,ar5
      000034 08               [12]  139 	inc	r0
      000035 A6 06            [24]  140 	mov	@r0,ar6
      000037 08               [12]  141 	inc	r0
      000038 A6 07            [24]  142 	mov	@r0,ar7
                                    143 ;	ceilf.c:37: if (r<0)
      00003A E5*00            [12]  144 	mov	a,_bp
      00003C 24 09            [12]  145 	add	a,#0x09
      00003E F8               [12]  146 	mov	r0,a
      00003F 08               [12]  147 	inc	r0
      000040 08               [12]  148 	inc	r0
      000041 08               [12]  149 	inc	r0
      000042 E6               [12]  150 	mov	a,@r0
      000043 30 E7 34         [24]  151 	jnb	acc.7,00102$
                                    152 ;	ceilf.c:38: return r;
      000046 E5*00            [12]  153 	mov	a,_bp
      000048 24 09            [12]  154 	add	a,#0x09
      00004A F8               [12]  155 	mov	r0,a
      00004B 86 82            [24]  156 	mov	dpl,@r0
      00004D 08               [12]  157 	inc	r0
      00004E 86 83            [24]  158 	mov	dph,@r0
      000050 08               [12]  159 	inc	r0
      000051 86 F0            [24]  160 	mov	b,@r0
      000053 08               [12]  161 	inc	r0
      000054 E6               [12]  162 	mov	a,@r0
      000055 12r00r00         [24]  163 	lcall	___slong2fs
      000058 C8               [12]  164 	xch	a,r0
      000059 E5*00            [12]  165 	mov	a,_bp
      00005B 24 05            [12]  166 	add	a,#0x05
      00005D C8               [12]  167 	xch	a,r0
      00005E A6 82            [24]  168 	mov	@r0,dpl
      000060 08               [12]  169 	inc	r0
      000061 A6 83            [24]  170 	mov	@r0,dph
      000063 08               [12]  171 	inc	r0
      000064 A6 F0            [24]  172 	mov	@r0,b
      000066 08               [12]  173 	inc	r0
      000067 F6               [12]  174 	mov	@r0,a
      000068 E5*00            [12]  175 	mov	a,_bp
      00006A 24 05            [12]  176 	add	a,#0x05
      00006C F8               [12]  177 	mov	r0,a
      00006D 86 82            [24]  178 	mov	dpl,@r0
      00006F 08               [12]  179 	inc	r0
      000070 86 83            [24]  180 	mov	dph,@r0
      000072 08               [12]  181 	inc	r0
      000073 86 F0            [24]  182 	mov	b,@r0
      000075 08               [12]  183 	inc	r0
      000076 E6               [12]  184 	mov	a,@r0
      000077 02r00rED         [24]  185 	ljmp	00104$
      00007A                        186 00102$:
                                    187 ;	ceilf.c:40: return (r+((r<x)?1:0));
      00007A E5*00            [12]  188 	mov	a,_bp
      00007C 24 09            [12]  189 	add	a,#0x09
      00007E F8               [12]  190 	mov	r0,a
      00007F 86 82            [24]  191 	mov	dpl,@r0
      000081 08               [12]  192 	inc	r0
      000082 86 83            [24]  193 	mov	dph,@r0
      000084 08               [12]  194 	inc	r0
      000085 86 F0            [24]  195 	mov	b,@r0
      000087 08               [12]  196 	inc	r0
      000088 E6               [12]  197 	mov	a,@r0
      000089 12r00r00         [24]  198 	lcall	___slong2fs
      00008C AC 82            [24]  199 	mov	r4,dpl
      00008E AD 83            [24]  200 	mov	r5,dph
      000090 AE F0            [24]  201 	mov	r6,b
      000092 FF               [12]  202 	mov	r7,a
      000093 A8*00            [24]  203 	mov	r0,_bp
      000095 08               [12]  204 	inc	r0
      000096 E6               [12]  205 	mov	a,@r0
      000097 C0 E0            [24]  206 	push	acc
      000099 08               [12]  207 	inc	r0
      00009A E6               [12]  208 	mov	a,@r0
      00009B C0 E0            [24]  209 	push	acc
      00009D 08               [12]  210 	inc	r0
      00009E E6               [12]  211 	mov	a,@r0
      00009F C0 E0            [24]  212 	push	acc
      0000A1 08               [12]  213 	inc	r0
      0000A2 E6               [12]  214 	mov	a,@r0
      0000A3 C0 E0            [24]  215 	push	acc
      0000A5 8C 82            [24]  216 	mov	dpl,r4
      0000A7 8D 83            [24]  217 	mov	dph,r5
      0000A9 8E F0            [24]  218 	mov	b,r6
      0000AB EF               [12]  219 	mov	a,r7
      0000AC 12r00r00         [24]  220 	lcall	___fslt
      0000AF AF 82            [24]  221 	mov	r7,dpl
      0000B1 E5 81            [12]  222 	mov	a,sp
      0000B3 24 FC            [12]  223 	add	a,#0xfc
      0000B5 F5 81            [12]  224 	mov	sp,a
      0000B7 EF               [12]  225 	mov	a,r7
      0000B8 60 06            [24]  226 	jz	00106$
      0000BA 7E 01            [12]  227 	mov	r6,#0x01
      0000BC 7F 00            [12]  228 	mov	r7,#0x00
      0000BE 80 04            [24]  229 	sjmp	00107$
      0000C0                        230 00106$:
      0000C0 7E 00            [12]  231 	mov	r6,#0x00
      0000C2 7F 00            [12]  232 	mov	r7,#0x00
      0000C4                        233 00107$:
      0000C4 EF               [12]  234 	mov	a,r7
      0000C5 33               [12]  235 	rlc	a
      0000C6 95 E0            [12]  236 	subb	a,acc
      0000C8 FD               [12]  237 	mov	r5,a
      0000C9 FC               [12]  238 	mov	r4,a
      0000CA E5*00            [12]  239 	mov	a,_bp
      0000CC 24 09            [12]  240 	add	a,#0x09
      0000CE F8               [12]  241 	mov	r0,a
      0000CF EE               [12]  242 	mov	a,r6
      0000D0 26               [12]  243 	add	a,@r0
      0000D1 FE               [12]  244 	mov	r6,a
      0000D2 EF               [12]  245 	mov	a,r7
      0000D3 08               [12]  246 	inc	r0
      0000D4 36               [12]  247 	addc	a,@r0
      0000D5 FF               [12]  248 	mov	r7,a
      0000D6 ED               [12]  249 	mov	a,r5
      0000D7 08               [12]  250 	inc	r0
      0000D8 36               [12]  251 	addc	a,@r0
      0000D9 FD               [12]  252 	mov	r5,a
      0000DA EC               [12]  253 	mov	a,r4
      0000DB 08               [12]  254 	inc	r0
      0000DC 36               [12]  255 	addc	a,@r0
      0000DD 8E 82            [24]  256 	mov	dpl,r6
      0000DF 8F 83            [24]  257 	mov	dph,r7
      0000E1 8D F0            [24]  258 	mov	b,r5
      0000E3 12r00r00         [24]  259 	lcall	___slong2fs
      0000E6 AC 82            [24]  260 	mov	r4,dpl
      0000E8 AD 83            [24]  261 	mov	r5,dph
      0000EA AE F0            [24]  262 	mov	r6,b
      0000EC FF               [12]  263 	mov	r7,a
      0000ED                        264 00104$:
                                    265 ;	ceilf.c:41: }
      0000ED 85*00 81         [24]  266 	mov	sp,_bp
      0000F0 D0*00            [24]  267 	pop	_bp
      0000F2 22               [24]  268 	ret
                                    269 	.area CSEG    (CODE)
                                    270 	.area CONST   (CODE)
                                    271 	.area XINIT   (CODE)
                                    272 	.area CABS    (ABS,CODE)
