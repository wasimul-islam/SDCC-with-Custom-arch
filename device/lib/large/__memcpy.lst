                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __memcpy
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___memcpy_PARM_3
                                     12 	.globl ___memcpy_PARM_2
                                     13 	.globl ___memcpy
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 ___memcpy_sloc0_1_0:
      000000                         38 	.ds 3
      000003                         39 ___memcpy_sloc1_1_0:
      000003                         40 	.ds 2
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; uninitialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
      000000                         62 ___memcpy_PARM_2:
      000000                         63 	.ds 3
      000003                         64 ___memcpy_PARM_3:
      000003                         65 	.ds 2
      000005                         66 ___memcpy_dst_65536_26:
      000005                         67 	.ds 3
                                     68 ;--------------------------------------------------------
                                     69 ; absolute external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XABS    (ABS,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; initialized external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XISEG   (XDATA)
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT0 (CODE)
                                     78 	.area GSINIT1 (CODE)
                                     79 	.area GSINIT2 (CODE)
                                     80 	.area GSINIT3 (CODE)
                                     81 	.area GSINIT4 (CODE)
                                     82 	.area GSINIT5 (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area CSEG    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; global & static initialisations
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; Home
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area HOME    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; code
                                    100 ;--------------------------------------------------------
                                    101 	.area CSEG    (CODE)
                                    102 ;------------------------------------------------------------
                                    103 ;Allocation info for local variables in function '__memcpy'
                                    104 ;------------------------------------------------------------
                                    105 ;src                       Allocated with name '___memcpy_PARM_2'
                                    106 ;n                         Allocated with name '___memcpy_PARM_3'
                                    107 ;dst                       Allocated with name '___memcpy_dst_65536_26'
                                    108 ;ret                       Allocated with name '___memcpy_ret_65536_27'
                                    109 ;d                         Allocated with name '___memcpy_d_65536_27'
                                    110 ;s                         Allocated with name '___memcpy_s_65536_27'
                                    111 ;sloc0                     Allocated with name '___memcpy_sloc0_1_0'
                                    112 ;sloc1                     Allocated with name '___memcpy_sloc1_1_0'
                                    113 ;------------------------------------------------------------
                                    114 ;	__memcpy.c:31: void *__memcpy (void *dst, const void *src, size_t n)
                                    115 ;	-----------------------------------------
                                    116 ;	 function __memcpy
                                    117 ;	-----------------------------------------
      000000                        118 ___memcpy:
                           000007   119 	ar7 = 0x07
                           000006   120 	ar6 = 0x06
                           000005   121 	ar5 = 0x05
                           000004   122 	ar4 = 0x04
                           000003   123 	ar3 = 0x03
                           000002   124 	ar2 = 0x02
                           000001   125 	ar1 = 0x01
                           000000   126 	ar0 = 0x00
      000000 AF F0            [24]  127 	mov	r7,b
      000002 AE 83            [24]  128 	mov	r6,dph
      000004 E5 82            [12]  129 	mov	a,dpl
      000006 90r00r05         [24]  130 	mov	dptr,#___memcpy_dst_65536_26
      000009 F0               [24]  131 	movx	@dptr,a
      00000A EE               [12]  132 	mov	a,r6
      00000B A3               [24]  133 	inc	dptr
      00000C F0               [24]  134 	movx	@dptr,a
      00000D EF               [12]  135 	mov	a,r7
      00000E A3               [24]  136 	inc	dptr
      00000F F0               [24]  137 	movx	@dptr,a
                                    138 ;	__memcpy.c:33: void *ret = dst;
      000010 90r00r05         [24]  139 	mov	dptr,#___memcpy_dst_65536_26
      000013 E0               [24]  140 	movx	a,@dptr
      000014 F5*00            [12]  141 	mov	___memcpy_sloc0_1_0,a
      000016 A3               [24]  142 	inc	dptr
      000017 E0               [24]  143 	movx	a,@dptr
      000018 F5*01            [12]  144 	mov	(___memcpy_sloc0_1_0 + 1),a
      00001A A3               [24]  145 	inc	dptr
      00001B E0               [24]  146 	movx	a,@dptr
      00001C F5*02            [12]  147 	mov	(___memcpy_sloc0_1_0 + 2),a
                                    148 ;	__memcpy.c:34: char *d = dst;
      00001E AA*00            [24]  149 	mov	r2,___memcpy_sloc0_1_0
      000020 AB*01            [24]  150 	mov	r3,(___memcpy_sloc0_1_0 + 1)
      000022 AC*02            [24]  151 	mov	r4,(___memcpy_sloc0_1_0 + 2)
                                    152 ;	__memcpy.c:35: const char *s = src;
      000024 90r00r00         [24]  153 	mov	dptr,#___memcpy_PARM_2
      000027 E0               [24]  154 	movx	a,@dptr
      000028 F8               [12]  155 	mov	r0,a
      000029 A3               [24]  156 	inc	dptr
      00002A E0               [24]  157 	movx	a,@dptr
      00002B F9               [12]  158 	mov	r1,a
      00002C A3               [24]  159 	inc	dptr
      00002D E0               [24]  160 	movx	a,@dptr
      00002E FF               [12]  161 	mov	r7,a
                                    162 ;	__memcpy.c:37: while (n--)
      00002F 90r00r03         [24]  163 	mov	dptr,#___memcpy_PARM_3
      000032 E0               [24]  164 	movx	a,@dptr
      000033 F5*03            [12]  165 	mov	___memcpy_sloc1_1_0,a
      000035 A3               [24]  166 	inc	dptr
      000036 E0               [24]  167 	movx	a,@dptr
      000037 F5*04            [12]  168 	mov	(___memcpy_sloc1_1_0 + 1),a
      000039                        169 00101$:
      000039 AD*03            [24]  170 	mov	r5,___memcpy_sloc1_1_0
      00003B AE*04            [24]  171 	mov	r6,(___memcpy_sloc1_1_0 + 1)
      00003D 15*03            [12]  172 	dec	___memcpy_sloc1_1_0
      00003F 74 FF            [12]  173 	mov	a,#0xff
      000041 B5*03 02         [24]  174 	cjne	a,___memcpy_sloc1_1_0,00115$
      000044 15*04            [12]  175 	dec	(___memcpy_sloc1_1_0 + 1)
      000046                        176 00115$:
      000046 ED               [12]  177 	mov	a,r5
      000047 4E               [12]  178 	orl	a,r6
      000048 60 20            [24]  179 	jz	00103$
                                    180 ;	__memcpy.c:38: *d++ = *s++;
      00004A 88 82            [24]  181 	mov	dpl,r0
      00004C 89 83            [24]  182 	mov	dph,r1
      00004E 8F F0            [24]  183 	mov	b,r7
      000050 12r00r00         [24]  184 	lcall	__gptrget
      000053 FE               [12]  185 	mov	r6,a
      000054 A3               [24]  186 	inc	dptr
      000055 A8 82            [24]  187 	mov	r0,dpl
      000057 A9 83            [24]  188 	mov	r1,dph
      000059 8A 82            [24]  189 	mov	dpl,r2
      00005B 8B 83            [24]  190 	mov	dph,r3
      00005D 8C F0            [24]  191 	mov	b,r4
      00005F EE               [12]  192 	mov	a,r6
      000060 12r00r00         [24]  193 	lcall	__gptrput
      000063 A3               [24]  194 	inc	dptr
      000064 AA 82            [24]  195 	mov	r2,dpl
      000066 AB 83            [24]  196 	mov	r3,dph
      000068 80 CF            [24]  197 	sjmp	00101$
      00006A                        198 00103$:
                                    199 ;	__memcpy.c:40: return(ret);
      00006A 85*00 82         [24]  200 	mov	dpl,___memcpy_sloc0_1_0
      00006D 85*01 83         [24]  201 	mov	dph,(___memcpy_sloc0_1_0 + 1)
      000070 85*02 F0         [24]  202 	mov	b,(___memcpy_sloc0_1_0 + 2)
                                    203 ;	__memcpy.c:41: }
      000073 22               [24]  204 	ret
                                    205 	.area CSEG    (CODE)
                                    206 	.area CONST   (CODE)
                                    207 	.area XINIT   (CODE)
                                    208 	.area CABS    (ABS,CODE)
