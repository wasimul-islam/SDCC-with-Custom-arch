                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbstoc16s
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbtowc
                                     12 	.globl ___mbstoc16s_PARM_3
                                     13 	.globl ___mbstoc16s_PARM_2
                                     14 	.globl ___mbstoc16s
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 ___mbstoc16s_sloc0_1_0:
      000000                         35 	.ds 3
      000003                         36 ___mbstoc16s_sloc1_1_0:
      000003                         37 	.ds 4
      000007                         38 ___mbstoc16s_sloc2_1_0:
      000007                         39 	.ds 2
                                     40 ;--------------------------------------------------------
                                     41 ; overlayable items in internal ram
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; indirectly addressable internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area ISEG    (DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; absolute internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area IABS    (ABS,DATA)
                                     51 	.area IABS    (ABS,DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; bit data
                                     54 ;--------------------------------------------------------
                                     55 	.area BSEG    (BIT)
                                     56 ;--------------------------------------------------------
                                     57 ; paged external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area PSEG    (PAG,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; uninitialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XSEG    (XDATA)
      000000                         64 ___mbstoc16s_PARM_2:
      000000                         65 	.ds 3
      000003                         66 ___mbstoc16s_PARM_3:
      000003                         67 	.ds 2
      000005                         68 ___mbstoc16s_c16s_65536_53:
      000005                         69 	.ds 3
      000008                         70 ___mbstoc16s_m_65536_54:
      000008                         71 	.ds 2
      00000A                         72 ___mbstoc16s_codepoint_196608_56:
      00000A                         73 	.ds 4
                                     74 ;--------------------------------------------------------
                                     75 ; absolute external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XABS    (ABS,XDATA)
                                     78 ;--------------------------------------------------------
                                     79 ; initialized external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XISEG   (XDATA)
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT0 (CODE)
                                     84 	.area GSINIT1 (CODE)
                                     85 	.area GSINIT2 (CODE)
                                     86 	.area GSINIT3 (CODE)
                                     87 	.area GSINIT4 (CODE)
                                     88 	.area GSINIT5 (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area CSEG    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; global & static initialisations
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 	.area GSFINAL (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; Home
                                    101 ;--------------------------------------------------------
                                    102 	.area HOME    (CODE)
                                    103 	.area HOME    (CODE)
                                    104 ;--------------------------------------------------------
                                    105 ; code
                                    106 ;--------------------------------------------------------
                                    107 	.area CSEG    (CODE)
                                    108 ;------------------------------------------------------------
                                    109 ;Allocation info for local variables in function '__mbstoc16s'
                                    110 ;------------------------------------------------------------
                                    111 ;sloc0                     Allocated with name '___mbstoc16s_sloc0_1_0'
                                    112 ;sloc1                     Allocated with name '___mbstoc16s_sloc1_1_0'
                                    113 ;sloc2                     Allocated with name '___mbstoc16s_sloc2_1_0'
                                    114 ;s                         Allocated with name '___mbstoc16s_PARM_2'
                                    115 ;n                         Allocated with name '___mbstoc16s_PARM_3'
                                    116 ;c16s                      Allocated with name '___mbstoc16s_c16s_65536_53'
                                    117 ;m                         Allocated with name '___mbstoc16s_m_65536_54'
                                    118 ;l                         Allocated with name '___mbstoc16s_l_196608_56'
                                    119 ;codepoint                 Allocated with name '___mbstoc16s_codepoint_196608_56'
                                    120 ;------------------------------------------------------------
                                    121 ;	mbstoc16s.c:44: size_t __mbstoc16s(char16_t *restrict c16s, const char *restrict s, size_t n)
                                    122 ;	-----------------------------------------
                                    123 ;	 function __mbstoc16s
                                    124 ;	-----------------------------------------
      000000                        125 ___mbstoc16s:
                           000007   126 	ar7 = 0x07
                           000006   127 	ar6 = 0x06
                           000005   128 	ar5 = 0x05
                           000004   129 	ar4 = 0x04
                           000003   130 	ar3 = 0x03
                           000002   131 	ar2 = 0x02
                           000001   132 	ar1 = 0x01
                           000000   133 	ar0 = 0x00
      000000 AF F0            [24]  134 	mov	r7,b
      000002 AE 83            [24]  135 	mov	r6,dph
      000004 E5 82            [12]  136 	mov	a,dpl
      000006 90r00r05         [24]  137 	mov	dptr,#___mbstoc16s_c16s_65536_53
      000009 F0               [24]  138 	movx	@dptr,a
      00000A EE               [12]  139 	mov	a,r6
      00000B A3               [24]  140 	inc	dptr
      00000C F0               [24]  141 	movx	@dptr,a
      00000D EF               [12]  142 	mov	a,r7
      00000E A3               [24]  143 	inc	dptr
      00000F F0               [24]  144 	movx	@dptr,a
                                    145 ;	mbstoc16s.c:46: size_t m = 0;
      000010 90r00r08         [24]  146 	mov	dptr,#___mbstoc16s_m_65536_54
      000013 E4               [12]  147 	clr	a
      000014 F0               [24]  148 	movx	@dptr,a
      000015 A3               [24]  149 	inc	dptr
      000016 F0               [24]  150 	movx	@dptr,a
                                    151 ;	mbstoc16s.c:85: return(m);
      000017 90r00r03         [24]  152 	mov	dptr,#___mbstoc16s_PARM_3
      00001A E0               [24]  153 	movx	a,@dptr
      00001B F5*00            [12]  154 	mov	___mbstoc16s_sloc0_1_0,a
      00001D A3               [24]  155 	inc	dptr
      00001E E0               [24]  156 	movx	a,@dptr
      00001F F5*01            [12]  157 	mov	(___mbstoc16s_sloc0_1_0 + 1),a
      000021 AC*00            [24]  158 	mov	r4,___mbstoc16s_sloc0_1_0
      000023 AD*01            [24]  159 	mov	r5,(___mbstoc16s_sloc0_1_0 + 1)
      000025                        160 00116$:
                                    161 ;	mbstoc16s.c:53: l = mbtowc(&codepoint, s, MB_LEN_MAX);
      000025 90r00r00         [24]  162 	mov	dptr,#___mbstoc16s_PARM_2
      000028 E0               [24]  163 	movx	a,@dptr
      000029 F9               [12]  164 	mov	r1,a
      00002A A3               [24]  165 	inc	dptr
      00002B E0               [24]  166 	movx	a,@dptr
      00002C FA               [12]  167 	mov	r2,a
      00002D A3               [24]  168 	inc	dptr
      00002E E0               [24]  169 	movx	a,@dptr
      00002F FB               [12]  170 	mov	r3,a
      000030 90r00r00         [24]  171 	mov	dptr,#_mbtowc_PARM_2
      000033 E9               [12]  172 	mov	a,r1
      000034 F0               [24]  173 	movx	@dptr,a
      000035 EA               [12]  174 	mov	a,r2
      000036 A3               [24]  175 	inc	dptr
      000037 F0               [24]  176 	movx	@dptr,a
      000038 EB               [12]  177 	mov	a,r3
      000039 A3               [24]  178 	inc	dptr
      00003A F0               [24]  179 	movx	@dptr,a
      00003B 90r00r00         [24]  180 	mov	dptr,#_mbtowc_PARM_3
      00003E 74 04            [12]  181 	mov	a,#0x04
      000040 F0               [24]  182 	movx	@dptr,a
      000041 E4               [12]  183 	clr	a
      000042 A3               [24]  184 	inc	dptr
      000043 F0               [24]  185 	movx	@dptr,a
      000044 90r00r0A         [24]  186 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      000047 F5 F0            [12]  187 	mov	b,a
      000049 C0 05            [24]  188 	push	ar5
      00004B C0 04            [24]  189 	push	ar4
      00004D 12r00r00         [24]  190 	lcall	_mbtowc
      000050 AA 82            [24]  191 	mov	r2,dpl
      000052 AB 83            [24]  192 	mov	r3,dph
      000054 D0 04            [24]  193 	pop	ar4
      000056 D0 05            [24]  194 	pop	ar5
                                    195 ;	mbstoc16s.c:55: if(l < 0)
      000058 EB               [12]  196 	mov	a,r3
      000059 30 E7 04         [24]  197 	jnb	acc.7,00106$
                                    198 ;	mbstoc16s.c:56: return(-1);
      00005C 90 FF FF         [24]  199 	mov	dptr,#0xffff
      00005F 22               [24]  200 	ret
      000060                        201 00106$:
                                    202 ;	mbstoc16s.c:57: else if(!l)
      000060 EA               [12]  203 	mov	a,r2
      000061 4B               [12]  204 	orl	a,r3
      000062 70 36            [24]  205 	jnz	00107$
                                    206 ;	mbstoc16s.c:59: if(m < n)
      000064 90r00r08         [24]  207 	mov	dptr,#___mbstoc16s_m_65536_54
      000067 E0               [24]  208 	movx	a,@dptr
      000068 F8               [12]  209 	mov	r0,a
      000069 A3               [24]  210 	inc	dptr
      00006A E0               [24]  211 	movx	a,@dptr
      00006B F9               [12]  212 	mov	r1,a
      00006C C3               [12]  213 	clr	c
      00006D E8               [12]  214 	mov	a,r0
      00006E 95*00            [12]  215 	subb	a,___mbstoc16s_sloc0_1_0
      000070 E9               [12]  216 	mov	a,r1
      000071 95*01            [12]  217 	subb	a,(___mbstoc16s_sloc0_1_0 + 1)
      000073 40 03            [24]  218 	jc	00150$
      000075 02r02r27         [24]  219 	ljmp	00115$
      000078                        220 00150$:
                                    221 ;	mbstoc16s.c:60: *c16s = 0;
      000078 90r00r05         [24]  222 	mov	dptr,#___mbstoc16s_c16s_65536_53
      00007B E0               [24]  223 	movx	a,@dptr
      00007C F5*00            [12]  224 	mov	___mbstoc16s_sloc0_1_0,a
      00007E A3               [24]  225 	inc	dptr
      00007F E0               [24]  226 	movx	a,@dptr
      000080 F5*01            [12]  227 	mov	(___mbstoc16s_sloc0_1_0 + 1),a
      000082 A3               [24]  228 	inc	dptr
      000083 E0               [24]  229 	movx	a,@dptr
      000084 F5*02            [12]  230 	mov	(___mbstoc16s_sloc0_1_0 + 2),a
      000086 85*00 82         [24]  231 	mov	dpl,___mbstoc16s_sloc0_1_0
      000089 85*01 83         [24]  232 	mov	dph,(___mbstoc16s_sloc0_1_0 + 1)
      00008C 85*02 F0         [24]  233 	mov	b,(___mbstoc16s_sloc0_1_0 + 2)
      00008F E4               [12]  234 	clr	a
      000090 12r00r00         [24]  235 	lcall	__gptrput
      000093 A3               [24]  236 	inc	dptr
      000094 12r00r00         [24]  237 	lcall	__gptrput
                                    238 ;	mbstoc16s.c:61: break;
      000097 02r02r27         [24]  239 	ljmp	00115$
      00009A                        240 00107$:
                                    241 ;	mbstoc16s.c:64: if (codepoint <= 0xffff) // Basic multilingual plane
      00009A 90r00r0A         [24]  242 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      00009D E0               [24]  243 	movx	a,@dptr
      00009E F5*03            [12]  244 	mov	___mbstoc16s_sloc1_1_0,a
      0000A0 A3               [24]  245 	inc	dptr
      0000A1 E0               [24]  246 	movx	a,@dptr
      0000A2 F5*04            [12]  247 	mov	(___mbstoc16s_sloc1_1_0 + 1),a
      0000A4 A3               [24]  248 	inc	dptr
      0000A5 E0               [24]  249 	movx	a,@dptr
      0000A6 F5*05            [12]  250 	mov	(___mbstoc16s_sloc1_1_0 + 2),a
      0000A8 A3               [24]  251 	inc	dptr
      0000A9 E0               [24]  252 	movx	a,@dptr
      0000AA F5*06            [12]  253 	mov	(___mbstoc16s_sloc1_1_0 + 3),a
      0000AC C3               [12]  254 	clr	c
      0000AD 74 FF            [12]  255 	mov	a,#0xff
      0000AF 95*03            [12]  256 	subb	a,___mbstoc16s_sloc1_1_0
      0000B1 74 FF            [12]  257 	mov	a,#0xff
      0000B3 95*04            [12]  258 	subb	a,(___mbstoc16s_sloc1_1_0 + 1)
      0000B5 E4               [12]  259 	clr	a
      0000B6 95*05            [12]  260 	subb	a,(___mbstoc16s_sloc1_1_0 + 2)
      0000B8 E4               [12]  261 	clr	a
      0000B9 95*06            [12]  262 	subb	a,(___mbstoc16s_sloc1_1_0 + 3)
      0000BB 40 5C            [24]  263 	jc	00113$
                                    264 ;	mbstoc16s.c:66: if (m >= n)
      0000BD 90r00r08         [24]  265 	mov	dptr,#___mbstoc16s_m_65536_54
      0000C0 E0               [24]  266 	movx	a,@dptr
      0000C1 F5*07            [12]  267 	mov	___mbstoc16s_sloc2_1_0,a
      0000C3 A3               [24]  268 	inc	dptr
      0000C4 E0               [24]  269 	movx	a,@dptr
      0000C5 F5*08            [12]  270 	mov	(___mbstoc16s_sloc2_1_0 + 1),a
      0000C7 C3               [12]  271 	clr	c
      0000C8 E5*07            [12]  272 	mov	a,___mbstoc16s_sloc2_1_0
      0000CA 95*00            [12]  273 	subb	a,___mbstoc16s_sloc0_1_0
      0000CC E5*08            [12]  274 	mov	a,(___mbstoc16s_sloc2_1_0 + 1)
      0000CE 95*01            [12]  275 	subb	a,(___mbstoc16s_sloc0_1_0 + 1)
      0000D0 40 03            [24]  276 	jc	00152$
      0000D2 02r02r27         [24]  277 	ljmp	00115$
      0000D5                        278 00152$:
                                    279 ;	mbstoc16s.c:69: *c16s++ = codepoint;
      0000D5 C0 04            [24]  280 	push	ar4
      0000D7 C0 05            [24]  281 	push	ar5
      0000D9 90r00r05         [24]  282 	mov	dptr,#___mbstoc16s_c16s_65536_53
      0000DC E0               [24]  283 	movx	a,@dptr
      0000DD FC               [12]  284 	mov	r4,a
      0000DE A3               [24]  285 	inc	dptr
      0000DF E0               [24]  286 	movx	a,@dptr
      0000E0 FD               [12]  287 	mov	r5,a
      0000E1 A3               [24]  288 	inc	dptr
      0000E2 E0               [24]  289 	movx	a,@dptr
      0000E3 FF               [12]  290 	mov	r7,a
      0000E4 A9*03            [24]  291 	mov	r1,___mbstoc16s_sloc1_1_0
      0000E6 AE*04            [24]  292 	mov	r6,(___mbstoc16s_sloc1_1_0 + 1)
      0000E8 8C 82            [24]  293 	mov	dpl,r4
      0000EA 8D 83            [24]  294 	mov	dph,r5
      0000EC 8F F0            [24]  295 	mov	b,r7
      0000EE E9               [12]  296 	mov	a,r1
      0000EF 12r00r00         [24]  297 	lcall	__gptrput
      0000F2 A3               [24]  298 	inc	dptr
      0000F3 EE               [12]  299 	mov	a,r6
      0000F4 12r00r00         [24]  300 	lcall	__gptrput
      0000F7 90r00r05         [24]  301 	mov	dptr,#___mbstoc16s_c16s_65536_53
      0000FA 74 02            [12]  302 	mov	a,#0x02
      0000FC 2C               [12]  303 	add	a,r4
      0000FD F0               [24]  304 	movx	@dptr,a
      0000FE E4               [12]  305 	clr	a
      0000FF 3D               [12]  306 	addc	a,r5
      000100 A3               [24]  307 	inc	dptr
      000101 F0               [24]  308 	movx	@dptr,a
      000102 EF               [12]  309 	mov	a,r7
      000103 A3               [24]  310 	inc	dptr
      000104 F0               [24]  311 	movx	@dptr,a
                                    312 ;	mbstoc16s.c:70: m++;
      000105 90r00r08         [24]  313 	mov	dptr,#___mbstoc16s_m_65536_54
      000108 74 01            [12]  314 	mov	a,#0x01
      00010A 25*07            [12]  315 	add	a,___mbstoc16s_sloc2_1_0
      00010C F0               [24]  316 	movx	@dptr,a
      00010D E4               [12]  317 	clr	a
      00010E 35*08            [12]  318 	addc	a,(___mbstoc16s_sloc2_1_0 + 1)
      000110 A3               [24]  319 	inc	dptr
      000111 F0               [24]  320 	movx	@dptr,a
      000112 D0 05            [24]  321 	pop	ar5
      000114 D0 04            [24]  322 	pop	ar4
      000116 02r02r0C         [24]  323 	ljmp	00114$
      000119                        324 00113$:
                                    325 ;	mbstoc16s.c:74: if (m + 1 >= n)
      000119 90r00r08         [24]  326 	mov	dptr,#___mbstoc16s_m_65536_54
      00011C E0               [24]  327 	movx	a,@dptr
      00011D F5*07            [12]  328 	mov	___mbstoc16s_sloc2_1_0,a
      00011F A3               [24]  329 	inc	dptr
      000120 E0               [24]  330 	movx	a,@dptr
      000121 F5*08            [12]  331 	mov	(___mbstoc16s_sloc2_1_0 + 1),a
      000123 74 01            [12]  332 	mov	a,#0x01
      000125 25*07            [12]  333 	add	a,___mbstoc16s_sloc2_1_0
      000127 F8               [12]  334 	mov	r0,a
      000128 E4               [12]  335 	clr	a
      000129 35*08            [12]  336 	addc	a,(___mbstoc16s_sloc2_1_0 + 1)
      00012B F9               [12]  337 	mov	r1,a
      00012C C3               [12]  338 	clr	c
      00012D E8               [12]  339 	mov	a,r0
      00012E 9C               [12]  340 	subb	a,r4
      00012F E9               [12]  341 	mov	a,r1
      000130 9D               [12]  342 	subb	a,r5
      000131 40 03            [24]  343 	jc	00153$
      000133 02r02r27         [24]  344 	ljmp	00115$
      000136                        345 00153$:
                                    346 ;	mbstoc16s.c:77: codepoint -= 0x100000;
      000136 C0 04            [24]  347 	push	ar4
      000138 C0 05            [24]  348 	push	ar5
      00013A A8*03            [24]  349 	mov	r0,___mbstoc16s_sloc1_1_0
      00013C A9*04            [24]  350 	mov	r1,(___mbstoc16s_sloc1_1_0 + 1)
      00013E E5*05            [12]  351 	mov	a,(___mbstoc16s_sloc1_1_0 + 2)
      000140 24 F0            [12]  352 	add	a,#0xf0
      000142 FC               [12]  353 	mov	r4,a
      000143 E5*06            [12]  354 	mov	a,(___mbstoc16s_sloc1_1_0 + 3)
      000145 34 FF            [12]  355 	addc	a,#0xff
      000147 FD               [12]  356 	mov	r5,a
      000148 90r00r0A         [24]  357 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      00014B E8               [12]  358 	mov	a,r0
      00014C F0               [24]  359 	movx	@dptr,a
      00014D E9               [12]  360 	mov	a,r1
      00014E A3               [24]  361 	inc	dptr
      00014F F0               [24]  362 	movx	@dptr,a
      000150 EC               [12]  363 	mov	a,r4
      000151 A3               [24]  364 	inc	dptr
      000152 F0               [24]  365 	movx	@dptr,a
      000153 ED               [12]  366 	mov	a,r5
      000154 A3               [24]  367 	inc	dptr
      000155 F0               [24]  368 	movx	@dptr,a
                                    369 ;	mbstoc16s.c:78: *c16s++ = ((codepoint >> 10) & 0x3ff) + 0xd800;
      000156 90r00r05         [24]  370 	mov	dptr,#___mbstoc16s_c16s_65536_53
      000159 E0               [24]  371 	movx	a,@dptr
      00015A F5*03            [12]  372 	mov	___mbstoc16s_sloc1_1_0,a
      00015C A3               [24]  373 	inc	dptr
      00015D E0               [24]  374 	movx	a,@dptr
      00015E F5*04            [12]  375 	mov	(___mbstoc16s_sloc1_1_0 + 1),a
      000160 A3               [24]  376 	inc	dptr
      000161 E0               [24]  377 	movx	a,@dptr
      000162 F5*05            [12]  378 	mov	(___mbstoc16s_sloc1_1_0 + 2),a
      000164 90r00r0A         [24]  379 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      000167 E0               [24]  380 	movx	a,@dptr
      000168 A3               [24]  381 	inc	dptr
      000169 E0               [24]  382 	movx	a,@dptr
      00016A FD               [12]  383 	mov	r5,a
      00016B A3               [24]  384 	inc	dptr
      00016C E0               [24]  385 	movx	a,@dptr
      00016D FE               [12]  386 	mov	r6,a
      00016E A3               [24]  387 	inc	dptr
      00016F E0               [24]  388 	movx	a,@dptr
      000170 FF               [12]  389 	mov	r7,a
      000171 8D 00            [24]  390 	mov	ar0,r5
      000173 EE               [12]  391 	mov	a,r6
      000174 C3               [12]  392 	clr	c
      000175 13               [12]  393 	rrc	a
      000176 C8               [12]  394 	xch	a,r0
      000177 13               [12]  395 	rrc	a
      000178 C8               [12]  396 	xch	a,r0
      000179 C3               [12]  397 	clr	c
      00017A 13               [12]  398 	rrc	a
      00017B C8               [12]  399 	xch	a,r0
      00017C 13               [12]  400 	rrc	a
      00017D C8               [12]  401 	xch	a,r0
      00017E FD               [12]  402 	mov	r5,a
      00017F EF               [12]  403 	mov	a,r7
      000180 03               [12]  404 	rr	a
      000181 03               [12]  405 	rr	a
      000182 54 C0            [12]  406 	anl	a,#0xc0
      000184 4D               [12]  407 	orl	a,r5
      000185 FD               [12]  408 	mov	r5,a
      000186 EF               [12]  409 	mov	a,r7
      000187 03               [12]  410 	rr	a
      000188 03               [12]  411 	rr	a
      000189 54 3F            [12]  412 	anl	a,#0x3f
      00018B FE               [12]  413 	mov	r6,a
      00018C 53 05 03         [24]  414 	anl	ar5,#0x03
      00018F 74 D8            [12]  415 	mov	a,#0xd8
      000191 2D               [12]  416 	add	a,r5
      000192 FD               [12]  417 	mov	r5,a
      000193 85*03 82         [24]  418 	mov	dpl,___mbstoc16s_sloc1_1_0
      000196 85*04 83         [24]  419 	mov	dph,(___mbstoc16s_sloc1_1_0 + 1)
      000199 85*05 F0         [24]  420 	mov	b,(___mbstoc16s_sloc1_1_0 + 2)
      00019C E8               [12]  421 	mov	a,r0
      00019D 12r00r00         [24]  422 	lcall	__gptrput
      0001A0 A3               [24]  423 	inc	dptr
      0001A1 ED               [12]  424 	mov	a,r5
      0001A2 12r00r00         [24]  425 	lcall	__gptrput
      0001A5 90r00r05         [24]  426 	mov	dptr,#___mbstoc16s_c16s_65536_53
      0001A8 74 02            [12]  427 	mov	a,#0x02
      0001AA 25*03            [12]  428 	add	a,___mbstoc16s_sloc1_1_0
      0001AC F0               [24]  429 	movx	@dptr,a
      0001AD E4               [12]  430 	clr	a
      0001AE 35*04            [12]  431 	addc	a,(___mbstoc16s_sloc1_1_0 + 1)
      0001B0 A3               [24]  432 	inc	dptr
      0001B1 F0               [24]  433 	movx	@dptr,a
      0001B2 E5*05            [12]  434 	mov	a,(___mbstoc16s_sloc1_1_0 + 2)
      0001B4 A3               [24]  435 	inc	dptr
      0001B5 F0               [24]  436 	movx	@dptr,a
                                    437 ;	mbstoc16s.c:79: *c16s++ = (codepoint & 0x3ff) + 0xdc00;
      0001B6 90r00r05         [24]  438 	mov	dptr,#___mbstoc16s_c16s_65536_53
      0001B9 E0               [24]  439 	movx	a,@dptr
      0001BA F5*03            [12]  440 	mov	___mbstoc16s_sloc1_1_0,a
      0001BC A3               [24]  441 	inc	dptr
      0001BD E0               [24]  442 	movx	a,@dptr
      0001BE F5*04            [12]  443 	mov	(___mbstoc16s_sloc1_1_0 + 1),a
      0001C0 A3               [24]  444 	inc	dptr
      0001C1 E0               [24]  445 	movx	a,@dptr
      0001C2 F5*05            [12]  446 	mov	(___mbstoc16s_sloc1_1_0 + 2),a
      0001C4 90r00r0A         [24]  447 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      0001C7 E0               [24]  448 	movx	a,@dptr
      0001C8 F8               [12]  449 	mov	r0,a
      0001C9 A3               [24]  450 	inc	dptr
      0001CA E0               [24]  451 	movx	a,@dptr
      0001CB F9               [12]  452 	mov	r1,a
      0001CC A3               [24]  453 	inc	dptr
      0001CD E0               [24]  454 	movx	a,@dptr
      0001CE A3               [24]  455 	inc	dptr
      0001CF E0               [24]  456 	movx	a,@dptr
      0001D0 FF               [12]  457 	mov	r7,a
      0001D1 53 01 03         [24]  458 	anl	ar1,#0x03
      0001D4 74 DC            [12]  459 	mov	a,#0xdc
      0001D6 29               [12]  460 	add	a,r1
      0001D7 F9               [12]  461 	mov	r1,a
      0001D8 85*03 82         [24]  462 	mov	dpl,___mbstoc16s_sloc1_1_0
      0001DB 85*04 83         [24]  463 	mov	dph,(___mbstoc16s_sloc1_1_0 + 1)
      0001DE 85*05 F0         [24]  464 	mov	b,(___mbstoc16s_sloc1_1_0 + 2)
      0001E1 E8               [12]  465 	mov	a,r0
      0001E2 12r00r00         [24]  466 	lcall	__gptrput
      0001E5 A3               [24]  467 	inc	dptr
      0001E6 E9               [12]  468 	mov	a,r1
      0001E7 12r00r00         [24]  469 	lcall	__gptrput
      0001EA 90r00r05         [24]  470 	mov	dptr,#___mbstoc16s_c16s_65536_53
      0001ED 74 02            [12]  471 	mov	a,#0x02
      0001EF 25*03            [12]  472 	add	a,___mbstoc16s_sloc1_1_0
      0001F1 F0               [24]  473 	movx	@dptr,a
      0001F2 E4               [12]  474 	clr	a
      0001F3 35*04            [12]  475 	addc	a,(___mbstoc16s_sloc1_1_0 + 1)
      0001F5 A3               [24]  476 	inc	dptr
      0001F6 F0               [24]  477 	movx	@dptr,a
      0001F7 E5*05            [12]  478 	mov	a,(___mbstoc16s_sloc1_1_0 + 2)
      0001F9 A3               [24]  479 	inc	dptr
      0001FA F0               [24]  480 	movx	@dptr,a
                                    481 ;	mbstoc16s.c:80: m += 2;
      0001FB 90r00r08         [24]  482 	mov	dptr,#___mbstoc16s_m_65536_54
      0001FE 74 02            [12]  483 	mov	a,#0x02
      000200 25*07            [12]  484 	add	a,___mbstoc16s_sloc2_1_0
      000202 F0               [24]  485 	movx	@dptr,a
      000203 E4               [12]  486 	clr	a
      000204 35*08            [12]  487 	addc	a,(___mbstoc16s_sloc2_1_0 + 1)
      000206 A3               [24]  488 	inc	dptr
      000207 F0               [24]  489 	movx	@dptr,a
                                    490 ;	mbstoc16s.c:85: return(m);
      000208 D0 05            [24]  491 	pop	ar5
      00020A D0 04            [24]  492 	pop	ar4
                                    493 ;	mbstoc16s.c:80: m += 2;
      00020C                        494 00114$:
                                    495 ;	mbstoc16s.c:82: s += l;
      00020C 90r00r00         [24]  496 	mov	dptr,#___mbstoc16s_PARM_2
      00020F E0               [24]  497 	movx	a,@dptr
      000210 F9               [12]  498 	mov	r1,a
      000211 A3               [24]  499 	inc	dptr
      000212 E0               [24]  500 	movx	a,@dptr
      000213 FE               [12]  501 	mov	r6,a
      000214 A3               [24]  502 	inc	dptr
      000215 E0               [24]  503 	movx	a,@dptr
      000216 FF               [12]  504 	mov	r7,a
      000217 90r00r00         [24]  505 	mov	dptr,#___mbstoc16s_PARM_2
      00021A EA               [12]  506 	mov	a,r2
      00021B 29               [12]  507 	add	a,r1
      00021C F0               [24]  508 	movx	@dptr,a
      00021D EB               [12]  509 	mov	a,r3
      00021E 3E               [12]  510 	addc	a,r6
      00021F A3               [24]  511 	inc	dptr
      000220 F0               [24]  512 	movx	@dptr,a
      000221 EF               [12]  513 	mov	a,r7
      000222 A3               [24]  514 	inc	dptr
      000223 F0               [24]  515 	movx	@dptr,a
      000224 02r00r25         [24]  516 	ljmp	00116$
      000227                        517 00115$:
                                    518 ;	mbstoc16s.c:85: return(m);
      000227 90r00r08         [24]  519 	mov	dptr,#___mbstoc16s_m_65536_54
      00022A E0               [24]  520 	movx	a,@dptr
      00022B FE               [12]  521 	mov	r6,a
      00022C A3               [24]  522 	inc	dptr
      00022D E0               [24]  523 	movx	a,@dptr
                                    524 ;	mbstoc16s.c:86: }
      00022E 8E 82            [24]  525 	mov	dpl,r6
      000230 F5 83            [12]  526 	mov	dph,a
      000232 22               [24]  527 	ret
                                    528 	.area CSEG    (CODE)
                                    529 	.area CONST   (CODE)
                                    530 	.area XINIT   (CODE)
                                    531 	.area CABS    (ABS,CODE)
