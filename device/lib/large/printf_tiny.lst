                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module printf_tiny
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _printf_tiny
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'printf_tiny'
                                     91 ;------------------------------------------------------------
                                     92 ;fmt                       Allocated to stack - _bp -4
                                     93 ;------------------------------------------------------------
                                     94 ;	printf_tiny.c:85: void printf_tiny(__code const char *fmt, ...) __reentrant
                                     95 ;	-----------------------------------------
                                     96 ;	 function printf_tiny
                                     97 ;	-----------------------------------------
      000000                         98 _printf_tiny:
                           000007    99 	ar7 = 0x07
                           000006   100 	ar6 = 0x06
                           000005   101 	ar5 = 0x05
                           000004   102 	ar4 = 0x04
                           000003   103 	ar3 = 0x03
                           000002   104 	ar2 = 0x02
                           000001   105 	ar1 = 0x01
                           000000   106 	ar0 = 0x00
      000000 C0*00            [24]  107 	push	_bp
      000002 85 81*00         [24]  108 	mov	_bp,sp
                                    109 ;	printf_tiny.c:301: __endasm;
      000005                        110 printf_begin:
      000005 E5*00            [12]  111 	mov	a, _bp
      000007 24 FD            [12]  112 	add	a, #253
      000009 F8               [12]  113 	mov	r0, a
      00000A 86 83            [24]  114 	mov	dph, @r0
      00000C 18               [12]  115 	dec	r0
      00000D 86 82            [24]  116 	mov	dpl, @r0
      00000F 18               [12]  117 	dec	r0
      000010                        118 printf_main_loop:
      000010 E4               [12]  119 	clr	a
      000011 93               [24]  120 	movc	a, @a+dptr
      000012 A3               [24]  121 	inc	dptr
      000013 24 DB            [12]  122 	add	a, #256 - 37
      000015 60 0C            [24]  123 	jz	printf_format
      000017 24 25            [12]  124 	add	a, #37
      000019 60 05            [24]  125 	jz	printf_end_h
      00001B 12r00rEE         [24]  126 	lcall	printf_putchar
      00001E 80 F0            [24]  127 	sjmp	printf_main_loop
      000020                        128 printf_end_h:
      000020 02r01r06         [24]  129 	ljmp	printf_end
      000023                        130 printf_format:
      000023 D2 D5            [12]  131 	setb	PSW.5
      000025 E4               [12]  132 	clr	a
      000026 93               [24]  133 	movc	a, @a+dptr
      000027 A3               [24]  134 	inc	dptr
      000028 C0 83            [24]  135 	push	dph
      00002A C0 82            [24]  136 	push	dpl
      00002C                        137 printf_format_s:
      00002C B4 73 14         [24]  138 	cjne	a, #115, printf_format_c
      00002F                        139 printf_string:
      00002F 86 F0            [24]  140 	mov	b, @r0
      000031 18               [12]  141 	dec	r0
      000032 86 83            [24]  142 	mov	dph, @r0
      000034 18               [12]  143 	dec	r0
      000035 86 82            [24]  144 	mov	dpl, @r0
      000037 18               [12]  145 	dec	r0
      000038                        146 printf_str_loop:
      000038 12r00r00         [24]  147 	lcall	__gptrget
      00003B 60 54            [24]  148 	jz	printf_format_done
      00003D A3               [24]  149 	inc	dptr
      00003E 12r00rEE         [24]  150 	lcall	printf_putchar
      000041 80 F5            [24]  151 	sjmp	printf_str_loop
      000043                        152 printf_format_c:
      000043 B4 63 08         [24]  153 	cjne	a, #99, printf_format_d
      000046 18               [12]  154 	dec	r0
      000047 E6               [12]  155 	mov	a, @r0
      000048 18               [12]  156 	dec	r0
      000049 12r00rEE         [24]  157 	lcall	printf_putchar
      00004C 80 43            [24]  158 	sjmp	printf_format_done
      00004E                        159 printf_format_d:
      00004E B4 64 17         [24]  160 	cjne	a, #100, printf_format_x
      000051 E6               [12]  161 	mov	a, @r0
      000052 30 E7 46         [24]  162 	jnb	acc.7, printf_uint
      000055 18               [12]  163 	dec	r0
      000056 E6               [12]  164 	mov	a, @r0
      000057 F4               [12]  165 	cpl	a
      000058 24 01            [12]  166 	add	a, #1
      00005A F6               [12]  167 	mov	@r0, a
      00005B 08               [12]  168 	inc	r0
      00005C E6               [12]  169 	mov	a, @r0
      00005D F4               [12]  170 	cpl	a
      00005E 34 00            [12]  171 	addc	a, #0
      000060 F6               [12]  172 	mov	@r0, a
      000061 74 2D            [12]  173 	mov	a, #45
      000063 12r00rEE         [24]  174 	lcall	printf_putchar
      000066 80 33            [24]  175 	sjmp	printf_uint
      000068                        176 printf_format_x:
      000068 B4 78 2D         [24]  177 	cjne	a, #120, printf_format_u
      00006B 86 83            [24]  178 	mov	dph, @r0
      00006D 18               [12]  179 	dec	r0
      00006E 86 82            [24]  180 	mov	dpl, @r0
      000070 18               [12]  181 	dec	r0
      000071 E4               [12]  182 	clr	a
      000072                        183 printf_hex:
      000072 12r00rDF         [24]  184 	lcall	printf_phex_lsn
      000075 E5 83            [12]  185 	mov	a, dph
      000077 12r00rDE         [24]  186 	lcall	printf_phex_msn
      00007A E5 83            [12]  187 	mov	a, dph
      00007C 12r00rDF         [24]  188 	lcall	printf_phex_lsn
      00007F E5 82            [12]  189 	mov	a, dpl
      000081 12r00rDE         [24]  190 	lcall	printf_phex_msn
      000084 E5 82            [12]  191 	mov	a, dpl
      000086 12r00rDF         [24]  192 	lcall	printf_phex_lsn
      000089 30 D5 05         [24]  193 	jnb	PSW.5, printf_format_done
      00008C 74 30            [12]  194 	mov	a, #48
      00008E 12r00rEE         [24]  195 	lcall	printf_putchar
      000091                        196 printf_format_done:
      000091 D0 82            [24]  197 	pop	dpl
      000093 D0 83            [24]  198 	pop	dph
      000095 02r00r10         [24]  199 	ljmp	printf_main_loop
      000098                        200 printf_format_u:
      000098 B4 75 F6         [24]  201 	cjne	a, #117, printf_format_done
      00009B                        202 printf_uint:
      00009B E6               [12]  203 	mov	a, @r0
      00009C FA               [12]  204 	mov	r2, a
      00009D 18               [12]  205 	dec	r0
      00009E E6               [12]  206 	mov	a, @r0
      00009F F9               [12]  207 	mov	r1, a
      0000A0 18               [12]  208 	dec	r0
      0000A1                        209 printf_int2bcd:
      0000A1 7C 10            [12]  210 	mov	r4, #16
      0000A3 7D 27            [12]  211 	mov	r5, #39
      0000A5 12r00rC9         [24]  212 	lcall	div_by_sub
      0000A8 FF               [12]  213 	mov	r7, a
      0000A9 7C E8            [12]  214 	mov	r4, #232
      0000AB 7D 03            [12]  215 	mov	r5, #3
      0000AD 12r00rC9         [24]  216 	lcall	div_by_sub
      0000B0 C4               [12]  217 	swap	a
      0000B1 F5 83            [12]  218 	mov	dph, a
      0000B3 7C 64            [12]  219 	mov	r4, #100
      0000B5 7D 00            [12]  220 	mov	r5, #0
      0000B7 12r00rC9         [24]  221 	lcall	div_by_sub
      0000BA 42 83            [12]  222 	orl	dph, a
      0000BC E9               [12]  223 	mov	a, r1
      0000BD 75 F0 0A         [24]  224 	mov	b, #10
      0000C0 84               [48]  225 	div	ab
      0000C1 C4               [12]  226 	swap	a
      0000C2 45 F0            [12]  227 	orl	a, b
      0000C4 F5 82            [12]  228 	mov	dpl, a
      0000C6 EF               [12]  229 	mov	a, r7
      0000C7 80 A9            [24]  230 	sjmp	printf_hex
      0000C9                        231 div_by_sub:
      0000C9 7B 00            [12]  232 	mov	r3, #0
      0000CB                        233 div_by_sub_loop:
      0000CB 0B               [12]  234 	inc	r3
      0000CC C3               [12]  235 	clr	c
      0000CD E9               [12]  236 	mov	a, r1
      0000CE 9C               [12]  237 	subb	a, r4
      0000CF F9               [12]  238 	mov	r1, a
      0000D0 EA               [12]  239 	mov	a, r2
      0000D1 9D               [12]  240 	subb	a, r5
      0000D2 FA               [12]  241 	mov	r2, a
      0000D3 50 F6            [24]  242 	jnc	div_by_sub_loop
      0000D5 1B               [12]  243 	dec	r3
      0000D6 E9               [12]  244 	mov	a, r1
      0000D7 2C               [12]  245 	add	a, r4
      0000D8 F9               [12]  246 	mov	r1, a
      0000D9 EA               [12]  247 	mov	a, r2
      0000DA 3D               [12]  248 	addc	a, r5
      0000DB FA               [12]  249 	mov	r2, a
      0000DC EB               [12]  250 	mov	a, r3
      0000DD 22               [24]  251 	ret
      0000DE                        252 printf_phex_msn:
      0000DE C4               [12]  253 	swap	a
      0000DF                        254 printf_phex_lsn:
      0000DF 54 0F            [12]  255 	anl	a, #15
      0000E1 70 03            [24]  256 	jnz	printf_phex_ok
      0000E3 20 D5 1F         [24]  257 	jb	PSW.5, printf_ret
      0000E6                        258 printf_phex_ok:
      0000E6 C2 D5            [12]  259 	clr	PSW.5
      0000E8 24 90            [12]  260 	add	a, #0x90
      0000EA D4               [12]  261 	da	a
      0000EB 34 40            [12]  262 	addc	a, #0x40
      0000ED D4               [12]  263 	da	a
      0000EE                        264 printf_putchar:
      0000EE C0 83            [24]  265 	push	dph
      0000F0 C0 82            [24]  266 	push	dpl
      0000F2 C0 F0            [24]  267 	push	b
      0000F4 F5 82            [12]  268 	mov	dpl, a
      0000F6 E8               [12]  269 	mov	a, r0
      0000F7 C0 E0            [24]  270 	push	acc
      0000F9 12r00r00         [24]  271 	lcall	_putchar
      0000FC D0 E0            [24]  272 	pop	acc
      0000FE F8               [12]  273 	mov	r0, a
      0000FF D0 F0            [24]  274 	pop	b
      000101 D0 82            [24]  275 	pop	dpl
      000103 D0 83            [24]  276 	pop	dph
      000105                        277 printf_ret:
      000105 22               [24]  278 	ret
      000106                        279 printf_end:
                                    280 ;	printf_tiny.c:302: }
      000106 D0*00            [24]  281 	pop	_bp
      000108 22               [24]  282 	ret
                                    283 	.area CSEG    (CODE)
                                    284 	.area CONST   (CODE)
                                    285 	.area XINIT   (CODE)
                                    286 	.area CABS    (ABS,CODE)
