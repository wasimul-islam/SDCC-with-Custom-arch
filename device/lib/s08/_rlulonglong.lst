                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _rlulonglong
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl __rlulonglong_PARM_2
                             24 	.globl __rlulonglong_PARM_1
                             25 	.globl __rlulonglong
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 __rlulonglong_sloc0_1_0:
   0000                      35 	.ds 4
   0004                      36 __rlulonglong_sloc1_1_0:
   0004                      37 	.ds 1
   0005                      38 __rlulonglong_sloc2_1_0:
   0005                      39 	.ds 4
                             40 ;--------------------------------------------------------
                             41 ; absolute ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS)
                             44 	.area IABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; absolute external ram data
                             47 ;--------------------------------------------------------
                             48 	.area XABS    (ABS)
                             49 ;--------------------------------------------------------
                             50 ; initialized external ram data
                             51 ;--------------------------------------------------------
                             52 	.area XISEG
                             53 ;--------------------------------------------------------
                             54 ; extended address mode data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG
   0000                      57 __rlulonglong_PARM_1:
   0000                      58 	.ds 8
   0008                      59 __rlulonglong_PARM_2:
   0008                      60 	.ds 1
                             61 ;--------------------------------------------------------
                             62 ; global & static initialisations
                             63 ;--------------------------------------------------------
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT  (CODE)
                             66 	.area GSFINAL (CODE)
                             67 	.area GSINIT  (CODE)
                             68 ;--------------------------------------------------------
                             69 ; Home
                             70 ;--------------------------------------------------------
                             71 	.area HOME    (CODE)
                             72 	.area HOME    (CODE)
                             73 ;--------------------------------------------------------
                             74 ; code
                             75 ;--------------------------------------------------------
                             76 	.area CSEG    (CODE)
                             77 ;------------------------------------------------------------
                             78 ;Allocation info for local variables in function '_rlulonglong'
                             79 ;------------------------------------------------------------
                             80 ;l                         Allocated with name '__rlulonglong_PARM_1'
                             81 ;s                         Allocated with name '__rlulonglong_PARM_2'
                             82 ;top                       Allocated to registers 
                             83 ;middle                    Allocated to registers 
                             84 ;bottom                    Allocated to registers 
                             85 ;b                         Allocated to registers 
                             86 ;sloc0                     Allocated with name '__rlulonglong_sloc0_1_0'
                             87 ;sloc1                     Allocated with name '__rlulonglong_sloc1_1_0'
                             88 ;sloc2                     Allocated with name '__rlulonglong_sloc2_1_0'
                             89 ;------------------------------------------------------------
                             90 ;../_rlulonglong.c:43: unsigned long long _rlulonglong(unsigned long long l, char s) __SDCC_NONBANKED
                             91 ;	-----------------------------------------
                             92 ;	 function _rlulonglong
                             93 ;	-----------------------------------------
                             94 ;	Register assignment is optimal.
                             95 ;	Stack space usage: 0 bytes.
   0000                      96 __rlulonglong:
                             97 ;../_rlulonglong.c:45: uint32_t *const top = (uint32_t *)((char *)(&l) + 0);
                             98 ;../_rlulonglong.c:46: uint16_t *const middle = (uint16_t *)((char *)(&l) + 4);
                             99 ;../_rlulonglong.c:47: uint32_t *const bottom = (uint32_t *)((char *)(&l) + 4);
                            100 ;../_rlulonglong.c:48: uint16_t *const b = (uint16_t *)(&l);
                            101 ;../_rlulonglong.c:58: (*top) <<= s;
   0000                     102 00103$:
                            103 ;../_rlulonglong.c:50: for(;s >= 16; s-= 16)
   0000 C6r00r08      [ 4]  104 	lda	__rlulonglong_PARM_2
   0003 A1 10         [ 2]  105 	cmp	#0x10
   0005 25 23         [ 3]  106 	bcs	00101$
                            107 ;../_rlulonglong.c:52: b[0] = b[1];
   0007 32r00r02      [ 5]  108 	ldhx	(__rlulonglong_PARM_1 + 0x0002)
   000A 96r00r00      [ 5]  109 	sthx	__rlulonglong_PARM_1
                            110 ;../_rlulonglong.c:53: b[1] = b[2];
   000D 32r00r04      [ 5]  111 	ldhx	(__rlulonglong_PARM_1 + 0x0004)
   0010 96r00r02      [ 5]  112 	sthx	(__rlulonglong_PARM_1 + 0x0002)
                            113 ;../_rlulonglong.c:54: b[2] = b[3];
   0013 32r00r06      [ 5]  114 	ldhx	(__rlulonglong_PARM_1 + 0x0006)
   0016 96r00r04      [ 5]  115 	sthx	(__rlulonglong_PARM_1 + 0x0004)
                            116 ;../_rlulonglong.c:55: b[3] = 0;
   0019 4F            [ 1]  117 	clra
   001A C7r00r06      [ 4]  118 	sta	(__rlulonglong_PARM_1 + 0x0006)
   001D C7r00r07      [ 4]  119 	sta	((__rlulonglong_PARM_1 + 0x0006) + 1)
                            120 ;../_rlulonglong.c:50: for(;s >= 16; s-= 16)
   0020 C6r00r08      [ 4]  121 	lda	__rlulonglong_PARM_2
   0023 A0 10         [ 2]  122 	sub	#0x10
   0025 C7r00r08      [ 4]  123 	sta	__rlulonglong_PARM_2
   0028 20 D6         [ 3]  124 	bra	00103$
   002A                     125 00101$:
                            126 ;../_rlulonglong.c:58: (*top) <<= s;
   002A C6r00r00      [ 4]  127 	lda	__rlulonglong_PARM_1
   002D B7*00         [ 3]  128 	sta	*__rlulonglong_sloc0_1_0
   002F C6r00r01      [ 4]  129 	lda	(__rlulonglong_PARM_1 + 1)
   0032 B7*01         [ 3]  130 	sta	*(__rlulonglong_sloc0_1_0 + 1)
   0034 C6r00r02      [ 4]  131 	lda	(__rlulonglong_PARM_1 + 2)
   0037 B7*02         [ 3]  132 	sta	*(__rlulonglong_sloc0_1_0 + 2)
   0039 C6r00r03      [ 4]  133 	lda	(__rlulonglong_PARM_1 + 3)
   003C B7*03         [ 3]  134 	sta	*(__rlulonglong_sloc0_1_0 + 3)
   003E C6r00r08      [ 4]  135 	lda	__rlulonglong_PARM_2
   0041 B7*04         [ 3]  136 	sta	*__rlulonglong_sloc1_1_0
   0043 BE*04         [ 3]  137 	ldx	*__rlulonglong_sloc1_1_0
   0045 27 0A         [ 3]  138 	beq	00119$
   0047                     139 00118$:
   0047 38*03         [ 5]  140 	lsl	*(__rlulonglong_sloc0_1_0 + 3)
   0049 39*02         [ 5]  141 	rol	*(__rlulonglong_sloc0_1_0 + 2)
   004B 39*01         [ 5]  142 	rol	*(__rlulonglong_sloc0_1_0 + 1)
   004D 39*00         [ 5]  143 	rol	*__rlulonglong_sloc0_1_0
   004F 5B F6         [ 4]  144 	dbnzx	00118$
   0051                     145 00119$:
   0051 B6*00         [ 3]  146 	lda	*__rlulonglong_sloc0_1_0
   0053 C7r00r00      [ 4]  147 	sta	__rlulonglong_PARM_1
   0056 B6*01         [ 3]  148 	lda	*(__rlulonglong_sloc0_1_0 + 1)
   0058 C7r00r01      [ 4]  149 	sta	(__rlulonglong_PARM_1 + 1)
   005B B6*02         [ 3]  150 	lda	*(__rlulonglong_sloc0_1_0 + 2)
   005D C7r00r02      [ 4]  151 	sta	(__rlulonglong_PARM_1 + 2)
   0060 B6*03         [ 3]  152 	lda	*(__rlulonglong_sloc0_1_0 + 3)
   0062 C7r00r03      [ 4]  153 	sta	(__rlulonglong_PARM_1 + 3)
                            154 ;../_rlulonglong.c:59: (*top) |= (((uint32_t)((*middle) & 0xffffu) << s) >> 16);
   0065 32r00r04      [ 5]  155 	ldhx	(__rlulonglong_PARM_1 + 0x0004)
   0068 BF*08         [ 3]  156 	stx	*(__rlulonglong_sloc2_1_0 + 3)
   006A 8B            [ 2]  157 	pshh
   006B 86            [ 3]  158 	pula
   006C B7*07         [ 3]  159 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   006E 6E 00*06      [ 4]  160 	mov	#0x00,*(__rlulonglong_sloc2_1_0 + 1)
   0071 6E 00*05      [ 4]  161 	mov	#0x00,*__rlulonglong_sloc2_1_0
   0074 BE*04         [ 3]  162 	ldx	*__rlulonglong_sloc1_1_0
   0076 27 0A         [ 3]  163 	beq	00121$
   0078                     164 00120$:
   0078 38*08         [ 5]  165 	lsl	*(__rlulonglong_sloc2_1_0 + 3)
   007A 39*07         [ 5]  166 	rol	*(__rlulonglong_sloc2_1_0 + 2)
   007C 39*06         [ 5]  167 	rol	*(__rlulonglong_sloc2_1_0 + 1)
   007E 39*05         [ 5]  168 	rol	*__rlulonglong_sloc2_1_0
   0080 5B F6         [ 4]  169 	dbnzx	00120$
   0082                     170 00121$:
   0082 B6*06         [ 3]  171 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   0084 BE*05         [ 3]  172 	ldx	*__rlulonglong_sloc2_1_0
   0086 B7*08         [ 3]  173 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   0088 BF*07         [ 3]  174 	stx	*(__rlulonglong_sloc2_1_0 + 2)
   008A 6E 00*06      [ 4]  175 	mov	#0x00,*(__rlulonglong_sloc2_1_0 + 1)
   008D 6E 00*05      [ 4]  176 	mov	#0x00,*__rlulonglong_sloc2_1_0
   0090 B6*03         [ 3]  177 	lda	*(__rlulonglong_sloc0_1_0 + 3)
   0092 BA*08         [ 3]  178 	ora	*(__rlulonglong_sloc2_1_0 + 3)
   0094 B7*08         [ 3]  179 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   0096 B6*02         [ 3]  180 	lda	*(__rlulonglong_sloc0_1_0 + 2)
   0098 BA*07         [ 3]  181 	ora	*(__rlulonglong_sloc2_1_0 + 2)
   009A B7*07         [ 3]  182 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   009C B6*01         [ 3]  183 	lda	*(__rlulonglong_sloc0_1_0 + 1)
   009E BA*06         [ 3]  184 	ora	*(__rlulonglong_sloc2_1_0 + 1)
   00A0 B7*06         [ 3]  185 	sta	*(__rlulonglong_sloc2_1_0 + 1)
   00A2 B6*00         [ 3]  186 	lda	*__rlulonglong_sloc0_1_0
   00A4 BA*05         [ 3]  187 	ora	*__rlulonglong_sloc2_1_0
   00A6 B7*05         [ 3]  188 	sta	*__rlulonglong_sloc2_1_0
   00A8 B6*05         [ 3]  189 	lda	*__rlulonglong_sloc2_1_0
   00AA C7r00r00      [ 4]  190 	sta	__rlulonglong_PARM_1
   00AD B6*06         [ 3]  191 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   00AF C7r00r01      [ 4]  192 	sta	(__rlulonglong_PARM_1 + 1)
   00B2 B6*07         [ 3]  193 	lda	*(__rlulonglong_sloc2_1_0 + 2)
   00B4 C7r00r02      [ 4]  194 	sta	(__rlulonglong_PARM_1 + 2)
   00B7 B6*08         [ 3]  195 	lda	*(__rlulonglong_sloc2_1_0 + 3)
   00B9 C7r00r03      [ 4]  196 	sta	(__rlulonglong_PARM_1 + 3)
                            197 ;../_rlulonglong.c:60: (*bottom) <<= s;
   00BC C6r00r04      [ 4]  198 	lda	(__rlulonglong_PARM_1 + 0x0004)
   00BF B7*05         [ 3]  199 	sta	*__rlulonglong_sloc2_1_0
   00C1 C6r00r05      [ 4]  200 	lda	((__rlulonglong_PARM_1 + 0x0004) + 1)
   00C4 B7*06         [ 3]  201 	sta	*(__rlulonglong_sloc2_1_0 + 1)
   00C6 C6r00r06      [ 4]  202 	lda	((__rlulonglong_PARM_1 + 0x0004) + 2)
   00C9 B7*07         [ 3]  203 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   00CB C6r00r07      [ 4]  204 	lda	((__rlulonglong_PARM_1 + 0x0004) + 3)
   00CE B7*08         [ 3]  205 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   00D0 BE*04         [ 3]  206 	ldx	*__rlulonglong_sloc1_1_0
   00D2 27 0A         [ 3]  207 	beq	00123$
   00D4                     208 00122$:
   00D4 38*08         [ 5]  209 	lsl	*(__rlulonglong_sloc2_1_0 + 3)
   00D6 39*07         [ 5]  210 	rol	*(__rlulonglong_sloc2_1_0 + 2)
   00D8 39*06         [ 5]  211 	rol	*(__rlulonglong_sloc2_1_0 + 1)
   00DA 39*05         [ 5]  212 	rol	*__rlulonglong_sloc2_1_0
   00DC 5B F6         [ 4]  213 	dbnzx	00122$
   00DE                     214 00123$:
   00DE B6*05         [ 3]  215 	lda	*__rlulonglong_sloc2_1_0
   00E0 C7r00r04      [ 4]  216 	sta	(__rlulonglong_PARM_1 + 0x0004)
   00E3 B6*06         [ 3]  217 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   00E5 C7r00r05      [ 4]  218 	sta	((__rlulonglong_PARM_1 + 0x0004) + 1)
   00E8 B6*07         [ 3]  219 	lda	*(__rlulonglong_sloc2_1_0 + 2)
   00EA C7r00r06      [ 4]  220 	sta	((__rlulonglong_PARM_1 + 0x0004) + 2)
   00ED B6*08         [ 3]  221 	lda	*(__rlulonglong_sloc2_1_0 + 3)
   00EF C7r00r07      [ 4]  222 	sta	((__rlulonglong_PARM_1 + 0x0004) + 3)
                            223 ;../_rlulonglong.c:62: return(l);
   00F2 C6r00r00      [ 4]  224 	lda	__rlulonglong_PARM_1
   00F5 B7*00         [ 3]  225 	sta	*___SDCC_hc08_ret7
   00F7 C6r00r01      [ 4]  226 	lda	(__rlulonglong_PARM_1 + 1)
   00FA B7*00         [ 3]  227 	sta	*___SDCC_hc08_ret6
   00FC C6r00r02      [ 4]  228 	lda	(__rlulonglong_PARM_1 + 2)
   00FF B7*00         [ 3]  229 	sta	*___SDCC_hc08_ret5
   0101 C6r00r03      [ 4]  230 	lda	(__rlulonglong_PARM_1 + 3)
   0104 B7*00         [ 3]  231 	sta	*___SDCC_hc08_ret4
   0106 C6r00r04      [ 4]  232 	lda	(__rlulonglong_PARM_1 + 4)
   0109 B7*00         [ 3]  233 	sta	*___SDCC_hc08_ret3
   010B C6r00r05      [ 4]  234 	lda	(__rlulonglong_PARM_1 + 5)
   010E B7*00         [ 3]  235 	sta	*___SDCC_hc08_ret2
   0110 CEr00r06      [ 4]  236 	ldx	(__rlulonglong_PARM_1 + 6)
   0113 C6r00r07      [ 4]  237 	lda	(__rlulonglong_PARM_1 + 7)
                            238 ;../_rlulonglong.c:63: }
   0116 81            [ 6]  239 	rts
                            240 	.area CSEG    (CODE)
                            241 	.area CONST   (CODE)
                            242 	.area XINIT   (CODE)
                            243 	.area CABS    (ABS,CODE)
