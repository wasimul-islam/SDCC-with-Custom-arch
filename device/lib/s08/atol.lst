                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module atol
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _atol
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area DSEG    (PAG)
   0000                      28 _atol_sloc0_1_0:
   0000                      29 	.ds 1
   0001                      30 _atol_sloc1_1_0:
   0001                      31 	.ds 2
   0003                      32 _atol_sloc2_1_0:
   0003                      33 	.ds 4
   0007                      34 _atol_sloc3_1_0:
   0007                      35 	.ds 4
                             36 ;--------------------------------------------------------
                             37 ; overlayable items in ram
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; initialized external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 _atol_ret_65536_57:
   0000                      57 	.ds 4
   0004                      58 _atol_neg_65536_57:
   0004                      59 	.ds 1
                             60 ;--------------------------------------------------------
                             61 ; global & static initialisations
                             62 ;--------------------------------------------------------
                             63 	.area HOME    (CODE)
                             64 	.area GSINIT  (CODE)
                             65 	.area GSFINAL (CODE)
                             66 	.area GSINIT  (CODE)
                             67 ;--------------------------------------------------------
                             68 ; Home
                             69 ;--------------------------------------------------------
                             70 	.area HOME    (CODE)
                             71 	.area HOME    (CODE)
                             72 ;--------------------------------------------------------
                             73 ; code
                             74 ;--------------------------------------------------------
                             75 	.area CSEG    (CODE)
                             76 ;------------------------------------------------------------
                             77 ;Allocation info for local variables in function 'atol'
                             78 ;------------------------------------------------------------
                             79 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                             80 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                             81 ;sloc2                     Allocated with name '_atol_sloc2_1_0'
                             82 ;sloc3                     Allocated with name '_atol_sloc3_1_0'
                             83 ;nptr                      Allocated to registers x h 
                             84 ;__1310720007              Allocated to registers 
                             85 ;__1310720004              Allocated to registers 
                             86 ;ret                       Allocated with name '_atol_ret_65536_57'
                             87 ;neg                       Allocated with name '_atol_neg_65536_57'
                             88 ;__1310720005              Allocated to registers 
                             89 ;c                         Allocated to registers 
                             90 ;__1310720008              Allocated to registers 
                             91 ;c                         Allocated to registers 
                             92 ;------------------------------------------------------------
                             93 ;../atol.c:34: long int atol(const char *nptr)
                             94 ;	-----------------------------------------
                             95 ;	 function atol
                             96 ;	-----------------------------------------
                             97 ;	Register assignment is optimal.
                             98 ;	Stack space usage: 0 bytes.
   0000                      99 _atol:
   0000 89            [ 2]  100 	pshx
   0001 97            [ 1]  101 	tax
   0002 8A            [ 3]  102 	pulh
                            103 ;../atol.c:36: long int ret = 0;
   0003 4F            [ 1]  104 	clra
   0004 C7r00r00      [ 4]  105 	sta	_atol_ret_65536_57
   0007 C7r00r01      [ 4]  106 	sta	(_atol_ret_65536_57 + 1)
   000A C7r00r02      [ 4]  107 	sta	(_atol_ret_65536_57 + 2)
   000D C7r00r03      [ 4]  108 	sta	(_atol_ret_65536_57 + 3)
                            109 ;../atol.c:39: while (isblank (*nptr))
   0010                     110 00101$:
   0010 F6            [ 3]  111 	lda	,x
   0011 B7*00         [ 3]  112 	sta	*_atol_sloc0_1_0
   0013 B6*00         [ 3]  113 	lda	*_atol_sloc0_1_0
                            114 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   0015 41 20 04      [ 4]  115 	cbeqa	#0x20,00115$
   0018 A1 09         [ 2]  116 	cmp	#0x09
   001A 26 04         [ 3]  117 	bne	00131$
   001C                     118 00115$:
                            119 ;../atol.c:40: nptr++;
   001C AF 01         [ 2]  120 	aix	#1
   001E 20 F0         [ 3]  121 	bra	00101$
   0020                     122 00131$:
                            123 ;../atol.c:42: neg = (*nptr == '-');
   0020 B6*00         [ 3]  124 	lda	*_atol_sloc0_1_0
   0022 41 2D 03      [ 4]  125 	cbeqa	#0x2d,00164$
   0025 4F            [ 1]  126 	clra
   0026 20 02         [ 3]  127 	bra	00163$
   0028                     128 00164$:
   0028 A6 01         [ 2]  129 	lda	#0x01
   002A                     130 00163$:
   002A C7r00r04      [ 4]  131 	sta	_atol_neg_65536_57
                            132 ;../atol.c:44: if (*nptr == '-' || *nptr == '+')
   002D 4D            [ 1]  133 	tsta
   002E 26 06         [ 3]  134 	bne	00104$
   0030 B6*00         [ 3]  135 	lda	*_atol_sloc0_1_0
   0032 A1 2B         [ 2]  136 	cmp	#0x2b
   0034 26 02         [ 3]  137 	bne	00129$
   0036                     138 00104$:
                            139 ;../atol.c:45: nptr++;
   0036 AF 01         [ 2]  140 	aix	#1
                            141 ;../atol.c:47: while (isdigit (*nptr))
   0038                     142 00129$:
   0038 35*01         [ 4]  143 	sthx	*_atol_sloc1_1_0
   003A                     144 00107$:
   003A 55*01         [ 4]  145 	ldhx	*_atol_sloc1_1_0
   003C F6            [ 3]  146 	lda	,x
   003D 97            [ 1]  147 	tax
                            148 ;./../../include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   003E A3 30         [ 2]  149 	cpx	#0x30
   0040 25 5D         [ 3]  150 	bcs	00109$
   0042 A3 39         [ 2]  151 	cpx	#0x39
   0044 22 59         [ 3]  152 	bhi	00109$
                            153 ;../atol.c:48: ret = ret * 10 + (*(nptr++) - '0');
   0046 8C            [ 1]  154 	clrh
   0047 5F            [ 1]  155 	clrx
   0048 96r00r00      [ 5]  156 	sthx	__mullong_PARM_1
   004B AE 0A         [ 2]  157 	ldx	#0x0a
   004D 96r00r02      [ 5]  158 	sthx	(__mullong_PARM_1 + 2)
   0050 32r00r00      [ 5]  159 	ldhx	_atol_ret_65536_57
   0053 96r00r00      [ 5]  160 	sthx	__mullong_PARM_2
   0056 32r00r02      [ 5]  161 	ldhx	(_atol_ret_65536_57 + 2)
   0059 96r00r02      [ 5]  162 	sthx	(__mullong_PARM_2 + 2)
   005C 87            [ 2]  163 	psha
   005D CDr00r00      [ 6]  164 	jsr	__mullong
   0060 B7*06         [ 3]  165 	sta	*(_atol_sloc2_1_0 + 3)
   0062 BF*05         [ 3]  166 	stx	*(_atol_sloc2_1_0 + 2)
   0064 4E*00*04      [ 6]  167 	mov	*___SDCC_hc08_ret2,*(_atol_sloc2_1_0 + 1)
   0067 4E*00*03      [ 6]  168 	mov	*___SDCC_hc08_ret3,*_atol_sloc2_1_0
   006A 86            [ 3]  169 	pula
   006B 55*01         [ 4]  170 	ldhx	*_atol_sloc1_1_0
   006D AF 01         [ 2]  171 	aix	#1
   006F 35*01         [ 4]  172 	sthx	*_atol_sloc1_1_0
   0071 97            [ 1]  173 	tax
   0072 8C            [ 1]  174 	clrh
   0073 AF D0         [ 2]  175 	aix	#-48
   0075 BF*0A         [ 3]  176 	stx	*(_atol_sloc3_1_0 + 3)
   0077 8B            [ 2]  177 	pshh
   0078 86            [ 3]  178 	pula
   0079 B7*09         [ 3]  179 	sta	*(_atol_sloc3_1_0 + 2)
   007B 49            [ 1]  180 	rola	
   007C 4F            [ 1]  181 	clra	
   007D A2 00         [ 2]  182 	sbc	#0x00
   007F B7*08         [ 3]  183 	sta	*(_atol_sloc3_1_0 + 1)
   0081 B7*07         [ 3]  184 	sta	*_atol_sloc3_1_0
   0083 45r00r00      [ 3]  185 	ldhx	#_atol_ret_65536_57
   0086 B6*06         [ 3]  186 	lda	*(_atol_sloc2_1_0 + 3)
   0088 BB*0A         [ 3]  187 	add	*(_atol_sloc3_1_0 + 3)
   008A E7 03         [ 3]  188 	sta	3,x
   008C B6*05         [ 3]  189 	lda	*(_atol_sloc2_1_0 + 2)
   008E B9*09         [ 3]  190 	adc	*(_atol_sloc3_1_0 + 2)
   0090 E7 02         [ 3]  191 	sta	2,x
   0092 B6*04         [ 3]  192 	lda	*(_atol_sloc2_1_0 + 1)
   0094 B9*08         [ 3]  193 	adc	*(_atol_sloc3_1_0 + 1)
   0096 E7 01         [ 3]  194 	sta	1,x
   0098 B6*03         [ 3]  195 	lda	*_atol_sloc2_1_0
   009A B9*07         [ 3]  196 	adc	*_atol_sloc3_1_0
   009C F7            [ 2]  197 	sta	,x
   009D 20 9B         [ 3]  198 	bra	00107$
   009F                     199 00109$:
                            200 ;../atol.c:50: return (neg ? -ret : ret); // Since -LONG_MIN is LONG_MIN in sdcc, the result value always turns out ok.
   009F C6r00r04      [ 4]  201 	lda	_atol_neg_65536_57
   00A2 27 1A         [ 3]  202 	beq	00120$
   00A4 4F            [ 1]  203 	clra
   00A5 C0r00r03      [ 4]  204 	sub	(_atol_ret_65536_57 + 3)
   00A8 B7*0A         [ 3]  205 	sta	*(_atol_sloc3_1_0 + 3)
   00AA 4F            [ 1]  206 	clra
   00AB C2r00r02      [ 4]  207 	sbc	(_atol_ret_65536_57 + 2)
   00AE B7*09         [ 3]  208 	sta	*(_atol_sloc3_1_0 + 2)
   00B0 4F            [ 1]  209 	clra
   00B1 C2r00r01      [ 4]  210 	sbc	(_atol_ret_65536_57 + 1)
   00B4 B7*08         [ 3]  211 	sta	*(_atol_sloc3_1_0 + 1)
   00B6 4F            [ 1]  212 	clra
   00B7 C2r00r00      [ 4]  213 	sbc	_atol_ret_65536_57
   00BA B7*07         [ 3]  214 	sta	*_atol_sloc3_1_0
   00BC 20 0A         [ 3]  215 	bra	00121$
   00BE                     216 00120$:
   00BE 32r00r00      [ 5]  217 	ldhx	_atol_ret_65536_57
   00C1 35*07         [ 4]  218 	sthx	*_atol_sloc3_1_0
   00C3 32r00r02      [ 5]  219 	ldhx	(_atol_ret_65536_57 + 2)
   00C6 35*09         [ 4]  220 	sthx	*(_atol_sloc3_1_0 + 2)
   00C8                     221 00121$:
   00C8 4E*07*00      [ 6]  222 	mov	*_atol_sloc3_1_0,*___SDCC_hc08_ret3
   00CB 4E*08*00      [ 6]  223 	mov	*(_atol_sloc3_1_0 + 1),*___SDCC_hc08_ret2
   00CE BE*09         [ 3]  224 	ldx	*(_atol_sloc3_1_0 + 2)
   00D0 B6*0A         [ 3]  225 	lda	*(_atol_sloc3_1_0 + 3)
                            226 ;../atol.c:51: }
   00D2 81            [ 6]  227 	rts
                            228 	.area CSEG    (CODE)
                            229 	.area CONST   (CODE)
                            230 	.area XINIT   (CODE)
                            231 	.area CABS    (ABS,CODE)
