                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module cotf
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _tancotf
                             24 	.globl _fabsf
                             25 	.globl _cotf
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; absolute ram data
                             35 ;--------------------------------------------------------
                             36 	.area IABS    (ABS)
                             37 	.area IABS    (ABS)
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area XABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; initialized external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XISEG
                             46 ;--------------------------------------------------------
                             47 ; extended address mode data
                             48 ;--------------------------------------------------------
                             49 	.area XSEG
                             50 ;--------------------------------------------------------
                             51 ; global & static initialisations
                             52 ;--------------------------------------------------------
                             53 	.area HOME    (CODE)
                             54 	.area GSINIT  (CODE)
                             55 	.area GSFINAL (CODE)
                             56 	.area GSINIT  (CODE)
                             57 ;--------------------------------------------------------
                             58 ; Home
                             59 ;--------------------------------------------------------
                             60 	.area HOME    (CODE)
                             61 	.area HOME    (CODE)
                             62 ;--------------------------------------------------------
                             63 ; code
                             64 ;--------------------------------------------------------
                             65 	.area CSEG    (CODE)
                             66 ;------------------------------------------------------------
                             67 ;Allocation info for local variables in function 'cotf'
                             68 ;------------------------------------------------------------
                             69 ;x                         Allocated to stack - sp +7
                             70 ;y                         Allocated to stack - sp +1
                             71 ;sloc0                     Allocated to stack - sp +1
                             72 ;------------------------------------------------------------
                             73 ;../cotf.c:37: float cotf(float x) _FLOAT_FUNC_REENTRANT
                             74 ;	-----------------------------------------
                             75 ;	 function cotf
                             76 ;	-----------------------------------------
                             77 ;	Register assignment is optimal.
                             78 ;	Stack space usage: 4 bytes.
   0000                      79 _cotf:
   0000 A7 FC         [ 2]   80 	ais	#-4
                             81 ;../cotf.c:41: y=fabsf(x);
   0002 95            [ 2]   82 	tsx
   0003 E6 09         [ 3]   83 	lda	9,x
   0005 87            [ 2]   84 	psha
   0006 E6 08         [ 3]   85 	lda	8,x
   0008 87            [ 2]   86 	psha
   0009 E6 07         [ 3]   87 	lda	7,x
   000B 87            [ 2]   88 	psha
   000C E6 06         [ 3]   89 	lda	6,x
   000E 87            [ 2]   90 	psha
   000F CDr00r00      [ 6]   91 	jsr	_fabsf
   0012 C7r00r03      [ 4]   92 	sta	(___fslt_PARM_1 + 3)
   0015 CFr00r02      [ 4]   93 	stx	(___fslt_PARM_1 + 2)
   0018 B6*00         [ 3]   94 	lda	*___SDCC_hc08_ret2
   001A C7r00r01      [ 4]   95 	sta	(___fslt_PARM_1 + 1)
   001D B6*00         [ 3]   96 	lda	*___SDCC_hc08_ret3
   001F C7r00r00      [ 4]   97 	sta	___fslt_PARM_1
   0022 A7 04         [ 2]   98 	ais	#4
                             99 ;../cotf.c:42: if (y<1.0E-30) //This one requires more thinking...
   0024 45 0D A2      [ 3]  100 	ldhx	#0x0da2
   0027 96r00r00      [ 5]  101 	sthx	___fslt_PARM_2
   002A 45 42 60      [ 3]  102 	ldhx	#0x4260
   002D 96r00r02      [ 5]  103 	sthx	(___fslt_PARM_2 + 2)
   0030 CDr00r00      [ 6]  104 	jsr	___fslt
   0033 4D            [ 1]  105 	tsta
   0034 27 3E         [ 3]  106 	beq	00105$
                            107 ;../cotf.c:44: errno = ERANGE;
   0036 45 00 22      [ 3]  108 	ldhx	#0x0022
   0039 96r00r00      [ 5]  109 	sthx	_errno
                            110 ;../cotf.c:45: if (x<0.0)
   003C 95            [ 2]  111 	tsx
   003D E6 06         [ 3]  112 	lda	6,x
   003F C7r00r00      [ 4]  113 	sta	___fslt_PARM_1
   0042 E6 07         [ 3]  114 	lda	7,x
   0044 C7r00r01      [ 4]  115 	sta	(___fslt_PARM_1 + 1)
   0047 E6 08         [ 3]  116 	lda	8,x
   0049 C7r00r02      [ 4]  117 	sta	(___fslt_PARM_1 + 2)
   004C E6 09         [ 3]  118 	lda	9,x
   004E C7r00r03      [ 4]  119 	sta	(___fslt_PARM_1 + 3)
   0051 8C            [ 1]  120 	clrh
   0052 5F            [ 1]  121 	clrx
   0053 96r00r00      [ 5]  122 	sthx	___fslt_PARM_2
   0056 96r00r02      [ 5]  123 	sthx	(___fslt_PARM_2 + 2)
   0059 CDr00r00      [ 6]  124 	jsr	___fslt
   005C 4D            [ 1]  125 	tsta
   005D 27 0A         [ 3]  126 	beq	00102$
                            127 ;../cotf.c:46: return -HUGE_VALF;
   005F A6 FF         [ 2]  128 	lda	#0xff
   0061 97            [ 1]  129 	tax
   0062 6E 7F*00      [ 4]  130 	mov	#0x7f,*___SDCC_hc08_ret2
   0065 B7*00         [ 3]  131 	sta	*___SDCC_hc08_ret3
   0067 20 45         [ 3]  132 	bra	00106$
   0069                     133 00102$:
                            134 ;../cotf.c:48: return +HUGE_VALF;
   0069 A6 FF         [ 2]  135 	lda	#0xff
   006B 97            [ 1]  136 	tax
   006C 6E 7F*00      [ 4]  137 	mov	#0x7f,*___SDCC_hc08_ret2
   006F 6E 7F*00      [ 4]  138 	mov	#0x7f,*___SDCC_hc08_ret3
   0072 20 3A         [ 3]  139 	bra	00106$
   0074                     140 00105$:
                            141 ;../cotf.c:50: return tancotf(x, 1);
   0074 95            [ 2]  142 	tsx
   0075 E6 06         [ 3]  143 	lda	6,x
   0077 C7r00r00      [ 4]  144 	sta	_tancotf_PARM_1
   007A E6 07         [ 3]  145 	lda	7,x
   007C C7r00r01      [ 4]  146 	sta	(_tancotf_PARM_1 + 1)
   007F E6 08         [ 3]  147 	lda	8,x
   0081 C7r00r02      [ 4]  148 	sta	(_tancotf_PARM_1 + 2)
   0084 E6 09         [ 3]  149 	lda	9,x
   0086 C7r00r03      [ 4]  150 	sta	(_tancotf_PARM_1 + 3)
   0089 A6 01         [ 2]  151 	lda	#0x01
   008B C7r00r00      [ 4]  152 	sta	_tancotf_PARM_2
   008E CDr00r00      [ 6]  153 	jsr	_tancotf
   0091 9E E7 04      [ 4]  154 	sta	4,s
   0094 9E EF 03      [ 4]  155 	stx	3,s
   0097 B6*00         [ 3]  156 	lda	*___SDCC_hc08_ret2
   0099 9E E7 02      [ 4]  157 	sta	2,s
   009C B6*00         [ 3]  158 	lda	*___SDCC_hc08_ret3
   009E 9E E7 01      [ 4]  159 	sta	1,s
   00A1 95            [ 2]  160 	tsx
   00A2 F6            [ 3]  161 	lda	,x
   00A3 B7*00         [ 3]  162 	sta	*___SDCC_hc08_ret3
   00A5 E6 01         [ 3]  163 	lda	1,x
   00A7 B7*00         [ 3]  164 	sta	*___SDCC_hc08_ret2
   00A9 EE 02         [ 3]  165 	ldx	2,x
   00AB 9E E6 04      [ 4]  166 	lda	4,s
   00AE                     167 00106$:
                            168 ;../cotf.c:51: }
   00AE A7 04         [ 2]  169 	ais	#4
   00B0 81            [ 6]  170 	rts
                            171 	.area CSEG    (CODE)
                            172 	.area CONST   (CODE)
                            173 	.area XINIT   (CODE)
                            174 	.area CABS    (ABS,CODE)
