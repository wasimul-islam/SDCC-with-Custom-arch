                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _rrslonglong
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl __rrslonglong_PARM_2
                             24 	.globl __rrslonglong_PARM_1
                             25 	.globl __rrslonglong
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 __rrslonglong_sloc0_1_0:
   0000                      35 	.ds 4
   0004                      36 __rrslonglong_sloc1_1_0:
   0004                      37 	.ds 4
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; initialized external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 __rrslonglong_PARM_1:
   0000                      56 	.ds 8
   0008                      57 __rrslonglong_PARM_2:
   0008                      58 	.ds 1
                             59 ;--------------------------------------------------------
                             60 ; global & static initialisations
                             61 ;--------------------------------------------------------
                             62 	.area HOME    (CODE)
                             63 	.area GSINIT  (CODE)
                             64 	.area GSFINAL (CODE)
                             65 	.area GSINIT  (CODE)
                             66 ;--------------------------------------------------------
                             67 ; Home
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area HOME    (CODE)
                             71 ;--------------------------------------------------------
                             72 ; code
                             73 ;--------------------------------------------------------
                             74 	.area CSEG    (CODE)
                             75 ;------------------------------------------------------------
                             76 ;Allocation info for local variables in function '_rrslonglong'
                             77 ;------------------------------------------------------------
                             78 ;l                         Allocated with name '__rrslonglong_PARM_1'
                             79 ;s                         Allocated with name '__rrslonglong_PARM_2'
                             80 ;top                       Allocated to registers 
                             81 ;middle                    Allocated to registers 
                             82 ;bottom                    Allocated to registers 
                             83 ;b                         Allocated to registers 
                             84 ;sloc0                     Allocated with name '__rrslonglong_sloc0_1_0'
                             85 ;sloc1                     Allocated with name '__rrslonglong_sloc1_1_0'
                             86 ;------------------------------------------------------------
                             87 ;../_rrslonglong.c:41: long long _rrslonglong(long long l, char s) __SDCC_NONBANKED
                             88 ;	-----------------------------------------
                             89 ;	 function _rrslonglong
                             90 ;	-----------------------------------------
                             91 ;	Register assignment is optimal.
                             92 ;	Stack space usage: 0 bytes.
   0000                      93 __rrslonglong:
                             94 ;../_rrslonglong.c:43: int32_t *top = (uint32_t *)((char *)(&l) + 0);
                             95 ;../_rrslonglong.c:44: uint32_t *middle = (uint16_t *)((char *)(&l) + 2);
                             96 ;../_rrslonglong.c:45: uint32_t *bottom = (uint32_t *)((char *)(&l) + 4);
                             97 ;../_rrslonglong.c:46: uint16_t *b = (uint16_t *)(&l);
                             98 ;../_rrslonglong.c:56: (*bottom) >>= s;
   0000                      99 00103$:
                            100 ;../_rrslonglong.c:48: for(;s >= 16; s-= 16)
   0000 C6r00r08      [ 4]  101 	lda	__rrslonglong_PARM_2
   0003 A1 10         [ 2]  102 	cmp	#0x10
   0005 25 2F         [ 3]  103 	bcs	00101$
                            104 ;../_rrslonglong.c:50: b[3] = b[2];
   0007 32r00r04      [ 5]  105 	ldhx	(__rrslonglong_PARM_1 + 0x0004)
   000A 96r00r06      [ 5]  106 	sthx	(__rrslonglong_PARM_1 + 0x0006)
                            107 ;../_rrslonglong.c:51: b[2] = b[1];
   000D 32r00r02      [ 5]  108 	ldhx	(__rrslonglong_PARM_1 + 0x0002)
   0010 96r00r04      [ 5]  109 	sthx	(__rrslonglong_PARM_1 + 0x0004)
                            110 ;../_rrslonglong.c:52: b[1] = b[0];
   0013 32r00r00      [ 5]  111 	ldhx	__rrslonglong_PARM_1
   0016 96r00r02      [ 5]  112 	sthx	(__rrslonglong_PARM_1 + 0x0002)
                            113 ;../_rrslonglong.c:53: b[0] = (b[0] & 0x8000) ? 0xffff : 0x000000;
   0019 CEr00r00      [ 4]  114 	ldx	__rrslonglong_PARM_1
   001C C6r00r01      [ 4]  115 	lda	(__rrslonglong_PARM_1 + 1)
   001F 5D            [ 1]  116 	tstx
   0020 2A 05         [ 3]  117 	bpl     00107$
   0022 45 FF FF      [ 3]  118 	ldhx	#0xffff
   0025 20 02         [ 3]  119 	bra	00108$
   0027                     120 00107$:
   0027 8C            [ 1]  121 	clrh
   0028 5F            [ 1]  122 	clrx
   0029                     123 00108$:
   0029 96r00r00      [ 5]  124 	sthx	__rrslonglong_PARM_1
                            125 ;../_rrslonglong.c:48: for(;s >= 16; s-= 16)
   002C C6r00r08      [ 4]  126 	lda	__rrslonglong_PARM_2
   002F A0 10         [ 2]  127 	sub	#0x10
   0031 C7r00r08      [ 4]  128 	sta	__rrslonglong_PARM_2
   0034 20 CA         [ 3]  129 	bra	00103$
   0036                     130 00101$:
                            131 ;../_rrslonglong.c:56: (*bottom) >>= s;
   0036 C6r00r04      [ 4]  132 	lda	(__rrslonglong_PARM_1 + 0x0004)
   0039 B7*00         [ 3]  133 	sta	*__rrslonglong_sloc0_1_0
   003B C6r00r05      [ 4]  134 	lda	((__rrslonglong_PARM_1 + 0x0004) + 1)
   003E B7*01         [ 3]  135 	sta	*(__rrslonglong_sloc0_1_0 + 1)
   0040 C6r00r06      [ 4]  136 	lda	((__rrslonglong_PARM_1 + 0x0004) + 2)
   0043 B7*02         [ 3]  137 	sta	*(__rrslonglong_sloc0_1_0 + 2)
   0045 C6r00r07      [ 4]  138 	lda	((__rrslonglong_PARM_1 + 0x0004) + 3)
   0048 B7*03         [ 3]  139 	sta	*(__rrslonglong_sloc0_1_0 + 3)
   004A CEr00r08      [ 4]  140 	ldx	__rrslonglong_PARM_2
   004D 27 0A         [ 3]  141 	beq	00127$
   004F                     142 00126$:
   004F 34*00         [ 5]  143 	lsr	*__rrslonglong_sloc0_1_0
   0051 36*01         [ 5]  144 	ror	*(__rrslonglong_sloc0_1_0 + 1)
   0053 36*02         [ 5]  145 	ror	*(__rrslonglong_sloc0_1_0 + 2)
   0055 36*03         [ 5]  146 	ror	*(__rrslonglong_sloc0_1_0 + 3)
   0057 5B F6         [ 4]  147 	dbnzx	00126$
   0059                     148 00127$:
   0059 B6*00         [ 3]  149 	lda	*__rrslonglong_sloc0_1_0
   005B C7r00r04      [ 4]  150 	sta	(__rrslonglong_PARM_1 + 0x0004)
   005E B6*01         [ 3]  151 	lda	*(__rrslonglong_sloc0_1_0 + 1)
   0060 C7r00r05      [ 4]  152 	sta	((__rrslonglong_PARM_1 + 0x0004) + 1)
   0063 B6*02         [ 3]  153 	lda	*(__rrslonglong_sloc0_1_0 + 2)
   0065 C7r00r06      [ 4]  154 	sta	((__rrslonglong_PARM_1 + 0x0004) + 2)
   0068 B6*03         [ 3]  155 	lda	*(__rrslonglong_sloc0_1_0 + 3)
   006A C7r00r07      [ 4]  156 	sta	((__rrslonglong_PARM_1 + 0x0004) + 3)
                            157 ;../_rrslonglong.c:57: (*middle) |= (((*middle & 0xffff0000ul) >> s) & 0x0000fffful);
   006D C6r00r02      [ 4]  158 	lda	(__rrslonglong_PARM_1 + 0x0002)
   0070 B7*00         [ 3]  159 	sta	*__rrslonglong_sloc0_1_0
   0072 C6r00r03      [ 4]  160 	lda	((__rrslonglong_PARM_1 + 0x0002) + 1)
   0075 B7*01         [ 3]  161 	sta	*(__rrslonglong_sloc0_1_0 + 1)
   0077 C6r00r04      [ 4]  162 	lda	((__rrslonglong_PARM_1 + 0x0002) + 2)
   007A B7*02         [ 3]  163 	sta	*(__rrslonglong_sloc0_1_0 + 2)
   007C C6r00r05      [ 4]  164 	lda	((__rrslonglong_PARM_1 + 0x0002) + 3)
   007F B7*03         [ 3]  165 	sta	*(__rrslonglong_sloc0_1_0 + 3)
   0081 6E 00*07      [ 4]  166 	mov	#0x00,*(__rrslonglong_sloc1_1_0 + 3)
   0084 6E 00*06      [ 4]  167 	mov	#0x00,*(__rrslonglong_sloc1_1_0 + 2)
   0087 4E*01*05      [ 6]  168 	mov	*(__rrslonglong_sloc0_1_0 + 1),*(__rrslonglong_sloc1_1_0 + 1)
   008A 4E*00*04      [ 6]  169 	mov	*__rrslonglong_sloc0_1_0,*__rrslonglong_sloc1_1_0
   008D CEr00r08      [ 4]  170 	ldx	__rrslonglong_PARM_2
   0090 27 0A         [ 3]  171 	beq	00129$
   0092                     172 00128$:
   0092 34*04         [ 5]  173 	lsr	*__rrslonglong_sloc1_1_0
   0094 36*05         [ 5]  174 	ror	*(__rrslonglong_sloc1_1_0 + 1)
   0096 36*06         [ 5]  175 	ror	*(__rrslonglong_sloc1_1_0 + 2)
   0098 36*07         [ 5]  176 	ror	*(__rrslonglong_sloc1_1_0 + 3)
   009A 5B F6         [ 4]  177 	dbnzx	00128$
   009C                     178 00129$:
   009C 6E 00*05      [ 4]  179 	mov	#0x00,*(__rrslonglong_sloc1_1_0 + 1)
   009F 6E 00*04      [ 4]  180 	mov	#0x00,*__rrslonglong_sloc1_1_0
   00A2 B6*03         [ 3]  181 	lda	*(__rrslonglong_sloc0_1_0 + 3)
   00A4 BA*07         [ 3]  182 	ora	*(__rrslonglong_sloc1_1_0 + 3)
   00A6 B7*07         [ 3]  183 	sta	*(__rrslonglong_sloc1_1_0 + 3)
   00A8 B6*02         [ 3]  184 	lda	*(__rrslonglong_sloc0_1_0 + 2)
   00AA BA*06         [ 3]  185 	ora	*(__rrslonglong_sloc1_1_0 + 2)
   00AC B7*06         [ 3]  186 	sta	*(__rrslonglong_sloc1_1_0 + 2)
   00AE B6*01         [ 3]  187 	lda	*(__rrslonglong_sloc0_1_0 + 1)
   00B0 BA*05         [ 3]  188 	ora	*(__rrslonglong_sloc1_1_0 + 1)
   00B2 B7*05         [ 3]  189 	sta	*(__rrslonglong_sloc1_1_0 + 1)
   00B4 B6*00         [ 3]  190 	lda	*__rrslonglong_sloc0_1_0
   00B6 BA*04         [ 3]  191 	ora	*__rrslonglong_sloc1_1_0
   00B8 B7*04         [ 3]  192 	sta	*__rrslonglong_sloc1_1_0
   00BA B6*04         [ 3]  193 	lda	*__rrslonglong_sloc1_1_0
   00BC C7r00r02      [ 4]  194 	sta	(__rrslonglong_PARM_1 + 0x0002)
   00BF B6*05         [ 3]  195 	lda	*(__rrslonglong_sloc1_1_0 + 1)
   00C1 C7r00r03      [ 4]  196 	sta	((__rrslonglong_PARM_1 + 0x0002) + 1)
   00C4 B6*06         [ 3]  197 	lda	*(__rrslonglong_sloc1_1_0 + 2)
   00C6 C7r00r04      [ 4]  198 	sta	((__rrslonglong_PARM_1 + 0x0002) + 2)
   00C9 B6*07         [ 3]  199 	lda	*(__rrslonglong_sloc1_1_0 + 3)
   00CB C7r00r05      [ 4]  200 	sta	((__rrslonglong_PARM_1 + 0x0002) + 3)
                            201 ;../_rrslonglong.c:58: (*top) >>= s;
   00CE C6r00r00      [ 4]  202 	lda	__rrslonglong_PARM_1
   00D1 B7*04         [ 3]  203 	sta	*__rrslonglong_sloc1_1_0
   00D3 C6r00r01      [ 4]  204 	lda	(__rrslonglong_PARM_1 + 1)
   00D6 B7*05         [ 3]  205 	sta	*(__rrslonglong_sloc1_1_0 + 1)
   00D8 C6r00r02      [ 4]  206 	lda	(__rrslonglong_PARM_1 + 2)
   00DB B7*06         [ 3]  207 	sta	*(__rrslonglong_sloc1_1_0 + 2)
   00DD C6r00r03      [ 4]  208 	lda	(__rrslonglong_PARM_1 + 3)
   00E0 B7*07         [ 3]  209 	sta	*(__rrslonglong_sloc1_1_0 + 3)
   00E2 CEr00r08      [ 4]  210 	ldx	__rrslonglong_PARM_2
   00E5 27 0A         [ 3]  211 	beq	00131$
   00E7                     212 00130$:
   00E7 37*04         [ 5]  213 	asr	*__rrslonglong_sloc1_1_0
   00E9 36*05         [ 5]  214 	ror	*(__rrslonglong_sloc1_1_0 + 1)
   00EB 36*06         [ 5]  215 	ror	*(__rrslonglong_sloc1_1_0 + 2)
   00ED 36*07         [ 5]  216 	ror	*(__rrslonglong_sloc1_1_0 + 3)
   00EF 5B F6         [ 4]  217 	dbnzx	00130$
   00F1                     218 00131$:
   00F1 B6*04         [ 3]  219 	lda	*__rrslonglong_sloc1_1_0
   00F3 C7r00r00      [ 4]  220 	sta	__rrslonglong_PARM_1
   00F6 B6*05         [ 3]  221 	lda	*(__rrslonglong_sloc1_1_0 + 1)
   00F8 C7r00r01      [ 4]  222 	sta	(__rrslonglong_PARM_1 + 1)
   00FB B6*06         [ 3]  223 	lda	*(__rrslonglong_sloc1_1_0 + 2)
   00FD C7r00r02      [ 4]  224 	sta	(__rrslonglong_PARM_1 + 2)
   0100 B6*07         [ 3]  225 	lda	*(__rrslonglong_sloc1_1_0 + 3)
   0102 C7r00r03      [ 4]  226 	sta	(__rrslonglong_PARM_1 + 3)
                            227 ;../_rrslonglong.c:60: return(l);
   0105 C6r00r00      [ 4]  228 	lda	__rrslonglong_PARM_1
   0108 B7*00         [ 3]  229 	sta	*___SDCC_hc08_ret7
   010A C6r00r01      [ 4]  230 	lda	(__rrslonglong_PARM_1 + 1)
   010D B7*00         [ 3]  231 	sta	*___SDCC_hc08_ret6
   010F C6r00r02      [ 4]  232 	lda	(__rrslonglong_PARM_1 + 2)
   0112 B7*00         [ 3]  233 	sta	*___SDCC_hc08_ret5
   0114 C6r00r03      [ 4]  234 	lda	(__rrslonglong_PARM_1 + 3)
   0117 B7*00         [ 3]  235 	sta	*___SDCC_hc08_ret4
   0119 C6r00r04      [ 4]  236 	lda	(__rrslonglong_PARM_1 + 4)
   011C B7*00         [ 3]  237 	sta	*___SDCC_hc08_ret3
   011E C6r00r05      [ 4]  238 	lda	(__rrslonglong_PARM_1 + 5)
   0121 B7*00         [ 3]  239 	sta	*___SDCC_hc08_ret2
   0123 CEr00r06      [ 4]  240 	ldx	(__rrslonglong_PARM_1 + 6)
   0126 C6r00r07      [ 4]  241 	lda	(__rrslonglong_PARM_1 + 7)
                            242 ;../_rrslonglong.c:61: }
   0129 81            [ 6]  243 	rts
                            244 	.area CSEG    (CODE)
                            245 	.area CONST   (CODE)
                            246 	.area XINIT   (CODE)
                            247 	.area CABS    (ABS,CODE)
