                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module mbrtoc32
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _mbrtowc
                             24 	.globl _mbrtoc32_PARM_4
                             25 	.globl _mbrtoc32_PARM_3
                             26 	.globl _mbrtoc32_PARM_2
                             27 	.globl _mbrtoc32
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (PAG)
   0000                      32 _mbrtoc32_sloc0_1_0:
   0000                      33 	.ds 2
   0002                      34 _mbrtoc32_sloc1_1_0:
   0002                      35 	.ds 2
                             36 ;--------------------------------------------------------
                             37 ; overlayable items in ram
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; initialized external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 _mbrtoc32_PARM_2:
   0000                      57 	.ds 2
   0002                      58 _mbrtoc32_PARM_3:
   0002                      59 	.ds 2
   0004                      60 _mbrtoc32_PARM_4:
   0004                      61 	.ds 2
   0006                      62 _mbrtoc32_pc32_65536_15:
   0006                      63 	.ds 2
   0008                      64 _mbrtoc32_wc_65536_16:
   0008                      65 	.ds 4
   000C                      66 _mbrtoc32_ret_65536_16:
   000C                      67 	.ds 2
   000E                      68 _mbrtoc32_sps_65536_16:
   000E                      69 	.ds 3
                             70 ;--------------------------------------------------------
                             71 ; global & static initialisations
                             72 ;--------------------------------------------------------
                             73 	.area HOME    (CODE)
                             74 	.area GSINIT  (CODE)
                             75 	.area GSFINAL (CODE)
                             76 	.area GSINIT  (CODE)
                             77 ;--------------------------------------------------------
                             78 ; Home
                             79 ;--------------------------------------------------------
                             80 	.area HOME    (CODE)
                             81 	.area HOME    (CODE)
                             82 ;--------------------------------------------------------
                             83 ; code
                             84 ;--------------------------------------------------------
                             85 	.area CSEG    (CODE)
                             86 ;------------------------------------------------------------
                             87 ;Allocation info for local variables in function 'mbrtoc32'
                             88 ;------------------------------------------------------------
                             89 ;sloc0                     Allocated with name '_mbrtoc32_sloc0_1_0'
                             90 ;sloc1                     Allocated with name '_mbrtoc32_sloc1_1_0'
                             91 ;s                         Allocated with name '_mbrtoc32_PARM_2'
                             92 ;n                         Allocated with name '_mbrtoc32_PARM_3'
                             93 ;ps                        Allocated with name '_mbrtoc32_PARM_4'
                             94 ;pc32                      Allocated with name '_mbrtoc32_pc32_65536_15'
                             95 ;wc                        Allocated with name '_mbrtoc32_wc_65536_16'
                             96 ;ret                       Allocated with name '_mbrtoc32_ret_65536_16'
                             97 ;sps                       Allocated with name '_mbrtoc32_sps_65536_16'
                             98 ;------------------------------------------------------------
                             99 ;../mbrtoc32.c:34: size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
                            100 ;	-----------------------------------------
                            101 ;	 function mbrtoc32
                            102 ;	-----------------------------------------
                            103 ;	Register assignment is optimal.
                            104 ;	Stack space usage: 0 bytes.
   0000                     105 _mbrtoc32:
   0000 C7r00r07      [ 4]  106 	sta	(_mbrtoc32_pc32_65536_15 + 1)
   0003 CFr00r06      [ 4]  107 	stx	_mbrtoc32_pc32_65536_15
                            108 ;../mbrtoc32.c:40: if(!ps)
   0006 C6r00r04      [ 4]  109 	lda	_mbrtoc32_PARM_4
   0009 CAr00r05      [ 4]  110 	ora	(_mbrtoc32_PARM_4 + 1)
   000C 26 06         [ 3]  111 	bne	00102$
                            112 ;../mbrtoc32.c:41: ps = &sps;
   000E 45r00r0E      [ 3]  113 	ldhx	#_mbrtoc32_sps_65536_16
   0011 96r00r04      [ 5]  114 	sthx	_mbrtoc32_PARM_4
   0014                     115 00102$:
                            116 ;../mbrtoc32.c:44: return(mbrtowc(0, s, n, ps));
   0014 32r00r00      [ 5]  117 	ldhx	_mbrtoc32_PARM_2
   0017 35*00         [ 4]  118 	sthx	*_mbrtoc32_sloc0_1_0
   0019 32r00r02      [ 5]  119 	ldhx	_mbrtoc32_PARM_3
   001C 35*02         [ 4]  120 	sthx	*_mbrtoc32_sloc1_1_0
   001E 32r00r04      [ 5]  121 	ldhx	_mbrtoc32_PARM_4
                            122 ;../mbrtoc32.c:43: if(!pc32)
   0021 C6r00r06      [ 4]  123 	lda	_mbrtoc32_pc32_65536_15
   0024 CAr00r07      [ 4]  124 	ora	(_mbrtoc32_pc32_65536_15 + 1)
   0027 26 1C         [ 3]  125 	bne	00104$
                            126 ;../mbrtoc32.c:44: return(mbrtowc(0, s, n, ps));
   0029 B6*00         [ 3]  127 	lda	*_mbrtoc32_sloc0_1_0
   002B C7r00r00      [ 4]  128 	sta	_mbrtowc_PARM_2
   002E B6*01         [ 3]  129 	lda	*(_mbrtoc32_sloc0_1_0 + 1)
   0030 C7r00r01      [ 4]  130 	sta	(_mbrtowc_PARM_2 + 1)
   0033 B6*02         [ 3]  131 	lda	*_mbrtoc32_sloc1_1_0
   0035 C7r00r00      [ 4]  132 	sta	_mbrtowc_PARM_3
   0038 B6*03         [ 3]  133 	lda	*(_mbrtoc32_sloc1_1_0 + 1)
   003A C7r00r01      [ 4]  134 	sta	(_mbrtowc_PARM_3 + 1)
   003D 96r00r00      [ 5]  135 	sthx	_mbrtowc_PARM_4
   0040 4F            [ 1]  136 	clra
   0041 97            [ 1]  137 	tax
   0042 CCr00r00      [ 4]  138 	jmp	_mbrtowc
   0045                     139 00104$:
                            140 ;../mbrtoc32.c:46: ret = mbrtowc(&wc, s, n, ps);
   0045 B6*00         [ 3]  141 	lda	*_mbrtoc32_sloc0_1_0
   0047 C7r00r00      [ 4]  142 	sta	_mbrtowc_PARM_2
   004A B6*01         [ 3]  143 	lda	*(_mbrtoc32_sloc0_1_0 + 1)
   004C C7r00r01      [ 4]  144 	sta	(_mbrtowc_PARM_2 + 1)
   004F B6*02         [ 3]  145 	lda	*_mbrtoc32_sloc1_1_0
   0051 C7r00r00      [ 4]  146 	sta	_mbrtowc_PARM_3
   0054 B6*03         [ 3]  147 	lda	*(_mbrtoc32_sloc1_1_0 + 1)
   0056 C7r00r01      [ 4]  148 	sta	(_mbrtowc_PARM_3 + 1)
   0059 96r00r00      [ 5]  149 	sthx	_mbrtowc_PARM_4
   005C A6r08         [ 2]  150 	lda	#_mbrtoc32_wc_65536_16
   005E AEs00         [ 2]  151 	ldx	#>_mbrtoc32_wc_65536_16
   0060 CDr00r00      [ 6]  152 	jsr	_mbrtowc
   0063 C7r00r0D      [ 4]  153 	sta	(_mbrtoc32_ret_65536_16 + 1)
   0066 CFr00r0C      [ 4]  154 	stx	_mbrtoc32_ret_65536_16
                            155 ;../mbrtoc32.c:48: if(ret <= MB_LEN_MAX)
   0069 A6 04         [ 2]  156 	lda	#0x04
   006B C0r00r0D      [ 4]  157 	sub	(_mbrtoc32_ret_65536_16 + 1)
   006E 4F            [ 1]  158 	clra
   006F C2r00r0C      [ 4]  159 	sbc	_mbrtoc32_ret_65536_16
   0072 25 16         [ 3]  160 	bcs	00106$
                            161 ;../mbrtoc32.c:49: *pc32 = wc;
   0074 32r00r06      [ 5]  162 	ldhx	_mbrtoc32_pc32_65536_15
   0077 C6r00r08      [ 4]  163 	lda	_mbrtoc32_wc_65536_16
   007A F7            [ 2]  164 	sta	,x
   007B C6r00r09      [ 4]  165 	lda	(_mbrtoc32_wc_65536_16 + 1)
   007E E7 01         [ 3]  166 	sta	1,x
   0080 C6r00r0A      [ 4]  167 	lda	(_mbrtoc32_wc_65536_16 + 2)
   0083 E7 02         [ 3]  168 	sta	2,x
   0085 C6r00r0B      [ 4]  169 	lda	(_mbrtoc32_wc_65536_16 + 3)
   0088 E7 03         [ 3]  170 	sta	3,x
   008A                     171 00106$:
                            172 ;../mbrtoc32.c:51: return(ret);
   008A CEr00r0C      [ 4]  173 	ldx	_mbrtoc32_ret_65536_16
   008D C6r00r0D      [ 4]  174 	lda	(_mbrtoc32_ret_65536_16 + 1)
                            175 ;../mbrtoc32.c:52: }
   0090 81            [ 6]  176 	rts
                            177 	.area CSEG    (CODE)
                            178 	.area CONST   (CODE)
                            179 	.area XINIT   (CODE)
                            180 	.area CABS    (ABS,CODE)
