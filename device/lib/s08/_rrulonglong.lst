                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _rrulonglong
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl __rrulonglong_PARM_2
                             24 	.globl __rrulonglong_PARM_1
                             25 	.globl __rrulonglong
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 __rrulonglong_sloc0_1_0:
   0000                      35 	.ds 4
   0004                      36 __rrulonglong_sloc1_1_0:
   0004                      37 	.ds 4
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; initialized external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 __rrulonglong_PARM_1:
   0000                      56 	.ds 8
   0008                      57 __rrulonglong_PARM_2:
   0008                      58 	.ds 1
                             59 ;--------------------------------------------------------
                             60 ; global & static initialisations
                             61 ;--------------------------------------------------------
                             62 	.area HOME    (CODE)
                             63 	.area GSINIT  (CODE)
                             64 	.area GSFINAL (CODE)
                             65 	.area GSINIT  (CODE)
                             66 ;--------------------------------------------------------
                             67 ; Home
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area HOME    (CODE)
                             71 ;--------------------------------------------------------
                             72 ; code
                             73 ;--------------------------------------------------------
                             74 	.area CSEG    (CODE)
                             75 ;------------------------------------------------------------
                             76 ;Allocation info for local variables in function '_rrulonglong'
                             77 ;------------------------------------------------------------
                             78 ;l                         Allocated with name '__rrulonglong_PARM_1'
                             79 ;s                         Allocated with name '__rrulonglong_PARM_2'
                             80 ;top                       Allocated to registers 
                             81 ;middle                    Allocated to registers 
                             82 ;bottom                    Allocated to registers 
                             83 ;b                         Allocated to registers 
                             84 ;sloc0                     Allocated with name '__rrulonglong_sloc0_1_0'
                             85 ;sloc1                     Allocated with name '__rrulonglong_sloc1_1_0'
                             86 ;------------------------------------------------------------
                             87 ;../_rrulonglong.c:41: unsigned long long _rrulonglong(unsigned long long l, char s) __SDCC_NONBANKED
                             88 ;	-----------------------------------------
                             89 ;	 function _rrulonglong
                             90 ;	-----------------------------------------
                             91 ;	Register assignment is optimal.
                             92 ;	Stack space usage: 0 bytes.
   0000                      93 __rrulonglong:
                             94 ;../_rrulonglong.c:43: uint32_t *const top = (uint32_t *)((char *)(&l) + 0);
                             95 ;../_rrulonglong.c:44: uint32_t *const middle = (uint16_t *)((char *)(&l) + 2);
                             96 ;../_rrulonglong.c:45: uint32_t *const bottom = (uint32_t *)((char *)(&l) + 4);
                             97 ;../_rrulonglong.c:46: uint16_t *const b = (uint16_t *)(&l);
                             98 ;../_rrulonglong.c:56: (*bottom) >>= s;
   0000                      99 00103$:
                            100 ;../_rrulonglong.c:48: for(;s >= 16; s -= 16)
   0000 C6r00r08      [ 4]  101 	lda	__rrulonglong_PARM_2
   0003 A1 10         [ 2]  102 	cmp	#0x10
   0005 25 23         [ 3]  103 	bcs	00101$
                            104 ;../_rrulonglong.c:50: b[3] = b[2];
   0007 32r00r04      [ 5]  105 	ldhx	(__rrulonglong_PARM_1 + 0x0004)
   000A 96r00r06      [ 5]  106 	sthx	(__rrulonglong_PARM_1 + 0x0006)
                            107 ;../_rrulonglong.c:51: b[2] = b[1];
   000D 32r00r02      [ 5]  108 	ldhx	(__rrulonglong_PARM_1 + 0x0002)
   0010 96r00r04      [ 5]  109 	sthx	(__rrulonglong_PARM_1 + 0x0004)
                            110 ;../_rrulonglong.c:52: b[1] = b[0];
   0013 32r00r00      [ 5]  111 	ldhx	__rrulonglong_PARM_1
   0016 96r00r02      [ 5]  112 	sthx	(__rrulonglong_PARM_1 + 0x0002)
                            113 ;../_rrulonglong.c:53: b[0] = 0x000000;
   0019 4F            [ 1]  114 	clra
   001A C7r00r00      [ 4]  115 	sta	__rrulonglong_PARM_1
   001D C7r00r01      [ 4]  116 	sta	(__rrulonglong_PARM_1 + 1)
                            117 ;../_rrulonglong.c:48: for(;s >= 16; s -= 16)
   0020 C6r00r08      [ 4]  118 	lda	__rrulonglong_PARM_2
   0023 A0 10         [ 2]  119 	sub	#0x10
   0025 C7r00r08      [ 4]  120 	sta	__rrulonglong_PARM_2
   0028 20 D6         [ 3]  121 	bra	00103$
   002A                     122 00101$:
                            123 ;../_rrulonglong.c:56: (*bottom) >>= s;
   002A C6r00r04      [ 4]  124 	lda	(__rrulonglong_PARM_1 + 0x0004)
   002D B7*00         [ 3]  125 	sta	*__rrulonglong_sloc0_1_0
   002F C6r00r05      [ 4]  126 	lda	((__rrulonglong_PARM_1 + 0x0004) + 1)
   0032 B7*01         [ 3]  127 	sta	*(__rrulonglong_sloc0_1_0 + 1)
   0034 C6r00r06      [ 4]  128 	lda	((__rrulonglong_PARM_1 + 0x0004) + 2)
   0037 B7*02         [ 3]  129 	sta	*(__rrulonglong_sloc0_1_0 + 2)
   0039 C6r00r07      [ 4]  130 	lda	((__rrulonglong_PARM_1 + 0x0004) + 3)
   003C B7*03         [ 3]  131 	sta	*(__rrulonglong_sloc0_1_0 + 3)
   003E CEr00r08      [ 4]  132 	ldx	__rrulonglong_PARM_2
   0041 27 0A         [ 3]  133 	beq	00119$
   0043                     134 00118$:
   0043 34*00         [ 5]  135 	lsr	*__rrulonglong_sloc0_1_0
   0045 36*01         [ 5]  136 	ror	*(__rrulonglong_sloc0_1_0 + 1)
   0047 36*02         [ 5]  137 	ror	*(__rrulonglong_sloc0_1_0 + 2)
   0049 36*03         [ 5]  138 	ror	*(__rrulonglong_sloc0_1_0 + 3)
   004B 5B F6         [ 4]  139 	dbnzx	00118$
   004D                     140 00119$:
   004D B6*00         [ 3]  141 	lda	*__rrulonglong_sloc0_1_0
   004F C7r00r04      [ 4]  142 	sta	(__rrulonglong_PARM_1 + 0x0004)
   0052 B6*01         [ 3]  143 	lda	*(__rrulonglong_sloc0_1_0 + 1)
   0054 C7r00r05      [ 4]  144 	sta	((__rrulonglong_PARM_1 + 0x0004) + 1)
   0057 B6*02         [ 3]  145 	lda	*(__rrulonglong_sloc0_1_0 + 2)
   0059 C7r00r06      [ 4]  146 	sta	((__rrulonglong_PARM_1 + 0x0004) + 2)
   005C B6*03         [ 3]  147 	lda	*(__rrulonglong_sloc0_1_0 + 3)
   005E C7r00r07      [ 4]  148 	sta	((__rrulonglong_PARM_1 + 0x0004) + 3)
                            149 ;../_rrulonglong.c:57: (*middle) |= (((*middle & 0xffff0000ul) >> s) & 0x0000fffful);
   0061 C6r00r02      [ 4]  150 	lda	(__rrulonglong_PARM_1 + 0x0002)
   0064 B7*00         [ 3]  151 	sta	*__rrulonglong_sloc0_1_0
   0066 C6r00r03      [ 4]  152 	lda	((__rrulonglong_PARM_1 + 0x0002) + 1)
   0069 B7*01         [ 3]  153 	sta	*(__rrulonglong_sloc0_1_0 + 1)
   006B C6r00r04      [ 4]  154 	lda	((__rrulonglong_PARM_1 + 0x0002) + 2)
   006E B7*02         [ 3]  155 	sta	*(__rrulonglong_sloc0_1_0 + 2)
   0070 C6r00r05      [ 4]  156 	lda	((__rrulonglong_PARM_1 + 0x0002) + 3)
   0073 B7*03         [ 3]  157 	sta	*(__rrulonglong_sloc0_1_0 + 3)
   0075 6E 00*07      [ 4]  158 	mov	#0x00,*(__rrulonglong_sloc1_1_0 + 3)
   0078 6E 00*06      [ 4]  159 	mov	#0x00,*(__rrulonglong_sloc1_1_0 + 2)
   007B 4E*01*05      [ 6]  160 	mov	*(__rrulonglong_sloc0_1_0 + 1),*(__rrulonglong_sloc1_1_0 + 1)
   007E 4E*00*04      [ 6]  161 	mov	*__rrulonglong_sloc0_1_0,*__rrulonglong_sloc1_1_0
   0081 CEr00r08      [ 4]  162 	ldx	__rrulonglong_PARM_2
   0084 27 0A         [ 3]  163 	beq	00121$
   0086                     164 00120$:
   0086 34*04         [ 5]  165 	lsr	*__rrulonglong_sloc1_1_0
   0088 36*05         [ 5]  166 	ror	*(__rrulonglong_sloc1_1_0 + 1)
   008A 36*06         [ 5]  167 	ror	*(__rrulonglong_sloc1_1_0 + 2)
   008C 36*07         [ 5]  168 	ror	*(__rrulonglong_sloc1_1_0 + 3)
   008E 5B F6         [ 4]  169 	dbnzx	00120$
   0090                     170 00121$:
   0090 6E 00*05      [ 4]  171 	mov	#0x00,*(__rrulonglong_sloc1_1_0 + 1)
   0093 6E 00*04      [ 4]  172 	mov	#0x00,*__rrulonglong_sloc1_1_0
   0096 B6*03         [ 3]  173 	lda	*(__rrulonglong_sloc0_1_0 + 3)
   0098 BA*07         [ 3]  174 	ora	*(__rrulonglong_sloc1_1_0 + 3)
   009A B7*07         [ 3]  175 	sta	*(__rrulonglong_sloc1_1_0 + 3)
   009C B6*02         [ 3]  176 	lda	*(__rrulonglong_sloc0_1_0 + 2)
   009E BA*06         [ 3]  177 	ora	*(__rrulonglong_sloc1_1_0 + 2)
   00A0 B7*06         [ 3]  178 	sta	*(__rrulonglong_sloc1_1_0 + 2)
   00A2 B6*01         [ 3]  179 	lda	*(__rrulonglong_sloc0_1_0 + 1)
   00A4 BA*05         [ 3]  180 	ora	*(__rrulonglong_sloc1_1_0 + 1)
   00A6 B7*05         [ 3]  181 	sta	*(__rrulonglong_sloc1_1_0 + 1)
   00A8 B6*00         [ 3]  182 	lda	*__rrulonglong_sloc0_1_0
   00AA BA*04         [ 3]  183 	ora	*__rrulonglong_sloc1_1_0
   00AC B7*04         [ 3]  184 	sta	*__rrulonglong_sloc1_1_0
   00AE B6*04         [ 3]  185 	lda	*__rrulonglong_sloc1_1_0
   00B0 C7r00r02      [ 4]  186 	sta	(__rrulonglong_PARM_1 + 0x0002)
   00B3 B6*05         [ 3]  187 	lda	*(__rrulonglong_sloc1_1_0 + 1)
   00B5 C7r00r03      [ 4]  188 	sta	((__rrulonglong_PARM_1 + 0x0002) + 1)
   00B8 B6*06         [ 3]  189 	lda	*(__rrulonglong_sloc1_1_0 + 2)
   00BA C7r00r04      [ 4]  190 	sta	((__rrulonglong_PARM_1 + 0x0002) + 2)
   00BD B6*07         [ 3]  191 	lda	*(__rrulonglong_sloc1_1_0 + 3)
   00BF C7r00r05      [ 4]  192 	sta	((__rrulonglong_PARM_1 + 0x0002) + 3)
                            193 ;../_rrulonglong.c:58: (*top) >>= s;
   00C2 C6r00r00      [ 4]  194 	lda	__rrulonglong_PARM_1
   00C5 B7*04         [ 3]  195 	sta	*__rrulonglong_sloc1_1_0
   00C7 C6r00r01      [ 4]  196 	lda	(__rrulonglong_PARM_1 + 1)
   00CA B7*05         [ 3]  197 	sta	*(__rrulonglong_sloc1_1_0 + 1)
   00CC C6r00r02      [ 4]  198 	lda	(__rrulonglong_PARM_1 + 2)
   00CF B7*06         [ 3]  199 	sta	*(__rrulonglong_sloc1_1_0 + 2)
   00D1 C6r00r03      [ 4]  200 	lda	(__rrulonglong_PARM_1 + 3)
   00D4 B7*07         [ 3]  201 	sta	*(__rrulonglong_sloc1_1_0 + 3)
   00D6 CEr00r08      [ 4]  202 	ldx	__rrulonglong_PARM_2
   00D9 27 0A         [ 3]  203 	beq	00123$
   00DB                     204 00122$:
   00DB 34*04         [ 5]  205 	lsr	*__rrulonglong_sloc1_1_0
   00DD 36*05         [ 5]  206 	ror	*(__rrulonglong_sloc1_1_0 + 1)
   00DF 36*06         [ 5]  207 	ror	*(__rrulonglong_sloc1_1_0 + 2)
   00E1 36*07         [ 5]  208 	ror	*(__rrulonglong_sloc1_1_0 + 3)
   00E3 5B F6         [ 4]  209 	dbnzx	00122$
   00E5                     210 00123$:
   00E5 B6*04         [ 3]  211 	lda	*__rrulonglong_sloc1_1_0
   00E7 C7r00r00      [ 4]  212 	sta	__rrulonglong_PARM_1
   00EA B6*05         [ 3]  213 	lda	*(__rrulonglong_sloc1_1_0 + 1)
   00EC C7r00r01      [ 4]  214 	sta	(__rrulonglong_PARM_1 + 1)
   00EF B6*06         [ 3]  215 	lda	*(__rrulonglong_sloc1_1_0 + 2)
   00F1 C7r00r02      [ 4]  216 	sta	(__rrulonglong_PARM_1 + 2)
   00F4 B6*07         [ 3]  217 	lda	*(__rrulonglong_sloc1_1_0 + 3)
   00F6 C7r00r03      [ 4]  218 	sta	(__rrulonglong_PARM_1 + 3)
                            219 ;../_rrulonglong.c:60: return(l);
   00F9 C6r00r00      [ 4]  220 	lda	__rrulonglong_PARM_1
   00FC B7*00         [ 3]  221 	sta	*___SDCC_hc08_ret7
   00FE C6r00r01      [ 4]  222 	lda	(__rrulonglong_PARM_1 + 1)
   0101 B7*00         [ 3]  223 	sta	*___SDCC_hc08_ret6
   0103 C6r00r02      [ 4]  224 	lda	(__rrulonglong_PARM_1 + 2)
   0106 B7*00         [ 3]  225 	sta	*___SDCC_hc08_ret5
   0108 C6r00r03      [ 4]  226 	lda	(__rrulonglong_PARM_1 + 3)
   010B B7*00         [ 3]  227 	sta	*___SDCC_hc08_ret4
   010D C6r00r04      [ 4]  228 	lda	(__rrulonglong_PARM_1 + 4)
   0110 B7*00         [ 3]  229 	sta	*___SDCC_hc08_ret3
   0112 C6r00r05      [ 4]  230 	lda	(__rrulonglong_PARM_1 + 5)
   0115 B7*00         [ 3]  231 	sta	*___SDCC_hc08_ret2
   0117 CEr00r06      [ 4]  232 	ldx	(__rrulonglong_PARM_1 + 6)
   011A C6r00r07      [ 4]  233 	lda	(__rrulonglong_PARM_1 + 7)
                            234 ;../_rrulonglong.c:61: }
   011D 81            [ 6]  235 	rts
                            236 	.area CSEG    (CODE)
                            237 	.area CONST   (CODE)
                            238 	.area XINIT   (CODE)
                            239 	.area CABS    (ABS,CODE)
