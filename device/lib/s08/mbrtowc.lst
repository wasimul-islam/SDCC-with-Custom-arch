                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module mbrtowc
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _mbrtowc_PARM_4
                             24 	.globl _mbrtowc_PARM_3
                             25 	.globl _mbrtowc_PARM_2
                             26 	.globl _mbrtowc
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _mbrtowc_sloc0_1_0:
   0000                      32 	.ds 2
   0002                      33 _mbrtowc_sloc1_1_0:
   0002                      34 	.ds 2
   0004                      35 _mbrtowc_sloc2_1_0:
   0004                      36 	.ds 1
   0005                      37 _mbrtowc_sloc3_1_0:
   0005                      38 	.ds 2
   0007                      39 _mbrtowc_sloc4_1_0:
   0007                      40 	.ds 2
   0009                      41 _mbrtowc_sloc5_1_0:
   0009                      42 	.ds 2
   000B                      43 _mbrtowc_sloc6_1_0:
   000B                      44 	.ds 2
   000D                      45 _mbrtowc_sloc7_1_0:
   000D                      46 	.ds 2
   000F                      47 _mbrtowc_sloc8_1_0:
   000F                      48 	.ds 1
   0010                      49 _mbrtowc_sloc9_1_0:
   0010                      50 	.ds 4
                             51 ;--------------------------------------------------------
                             52 ; overlayable items in ram
                             53 ;--------------------------------------------------------
                             54 ;--------------------------------------------------------
                             55 ; absolute ram data
                             56 ;--------------------------------------------------------
                             57 	.area IABS    (ABS)
                             58 	.area IABS    (ABS)
                             59 ;--------------------------------------------------------
                             60 ; absolute external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XABS    (ABS)
                             63 ;--------------------------------------------------------
                             64 ; initialized external ram data
                             65 ;--------------------------------------------------------
                             66 	.area XISEG
                             67 ;--------------------------------------------------------
                             68 ; extended address mode data
                             69 ;--------------------------------------------------------
                             70 	.area XSEG
   0000                      71 _mbrtowc_PARM_2:
   0000                      72 	.ds 2
   0002                      73 _mbrtowc_PARM_3:
   0002                      74 	.ds 2
   0004                      75 _mbrtowc_PARM_4:
   0004                      76 	.ds 2
   0006                      77 _mbrtowc_pwc_65536_9:
   0006                      78 	.ds 2
   0008                      79 _mbrtowc_first_byte_65536_10:
   0008                      80 	.ds 1
   0009                      81 _mbrtowc_mbseq_65536_10:
   0009                      82 	.ds 4
   000D                      83 _mbrtowc_codepoint_65536_10:
   000D                      84 	.ds 4
   0011                      85 _mbrtowc_sps_65536_10:
   0011                      86 	.ds 3
                             87 ;--------------------------------------------------------
                             88 ; global & static initialisations
                             89 ;--------------------------------------------------------
                             90 	.area HOME    (CODE)
                             91 	.area GSINIT  (CODE)
                             92 	.area GSFINAL (CODE)
                             93 	.area GSINIT  (CODE)
                             94 ;--------------------------------------------------------
                             95 ; Home
                             96 ;--------------------------------------------------------
                             97 	.area HOME    (CODE)
                             98 	.area HOME    (CODE)
                             99 ;--------------------------------------------------------
                            100 ; code
                            101 ;--------------------------------------------------------
                            102 	.area CSEG    (CODE)
                            103 ;------------------------------------------------------------
                            104 ;Allocation info for local variables in function 'mbrtowc'
                            105 ;------------------------------------------------------------
                            106 ;sloc0                     Allocated with name '_mbrtowc_sloc0_1_0'
                            107 ;sloc1                     Allocated with name '_mbrtowc_sloc1_1_0'
                            108 ;sloc2                     Allocated with name '_mbrtowc_sloc2_1_0'
                            109 ;sloc3                     Allocated with name '_mbrtowc_sloc3_1_0'
                            110 ;sloc4                     Allocated with name '_mbrtowc_sloc4_1_0'
                            111 ;sloc5                     Allocated with name '_mbrtowc_sloc5_1_0'
                            112 ;sloc6                     Allocated with name '_mbrtowc_sloc6_1_0'
                            113 ;sloc7                     Allocated with name '_mbrtowc_sloc7_1_0'
                            114 ;sloc8                     Allocated with name '_mbrtowc_sloc8_1_0'
                            115 ;sloc9                     Allocated with name '_mbrtowc_sloc9_1_0'
                            116 ;s                         Allocated with name '_mbrtowc_PARM_2'
                            117 ;n                         Allocated with name '_mbrtowc_PARM_3'
                            118 ;ps                        Allocated with name '_mbrtowc_PARM_4'
                            119 ;pwc                       Allocated with name '_mbrtowc_pwc_65536_9'
                            120 ;first_byte                Allocated with name '_mbrtowc_first_byte_65536_10'
                            121 ;seqlen                    Allocated to registers 
                            122 ;mbseq                     Allocated with name '_mbrtowc_mbseq_65536_10'
                            123 ;codepoint                 Allocated with name '_mbrtowc_codepoint_65536_10'
                            124 ;i                         Allocated to registers 
                            125 ;j                         Allocated to registers 
                            126 ;sps                       Allocated with name '_mbrtowc_sps_65536_10'
                            127 ;------------------------------------------------------------
                            128 ;../mbrtowc.c:32: size_t mbrtowc(wchar_t *restrict pwc, const char *restrict s, size_t n, mbstate_t *restrict ps)
                            129 ;	-----------------------------------------
                            130 ;	 function mbrtowc
                            131 ;	-----------------------------------------
                            132 ;	Register assignment might be sub-optimal.
                            133 ;	Stack space usage: 0 bytes.
   0000                     134 _mbrtowc:
   0000 C7r00r07      [ 4]  135 	sta	(_mbrtowc_pwc_65536_9 + 1)
   0003 CFr00r06      [ 4]  136 	stx	_mbrtowc_pwc_65536_9
                            137 ;../mbrtowc.c:41: if(!s)
   0006 C6r00r00      [ 4]  138 	lda	_mbrtowc_PARM_2
   0009 CAr00r01      [ 4]  139 	ora	(_mbrtowc_PARM_2 + 1)
   000C 26 10         [ 3]  140 	bne	00102$
                            141 ;../mbrtowc.c:42: return(mbrtowc(0, "", 1, ps));
   000E 45r00r00      [ 3]  142 	ldhx	#___str_0
   0011 96r00r00      [ 5]  143 	sthx	_mbrtowc_PARM_2
   0014 45 00 01      [ 3]  144 	ldhx	#0x0001
   0017 96r00r02      [ 5]  145 	sthx	_mbrtowc_PARM_3
   001A 4F            [ 1]  146 	clra
   001B 5A            [ 1]  147 	decx
   001C 20 E2         [ 3]  148 	bra	_mbrtowc
   001E                     149 00102$:
                            150 ;../mbrtowc.c:43: if(!n)
   001E C6r00r02      [ 4]  151 	lda	_mbrtowc_PARM_3
   0021 CAr00r03      [ 4]  152 	ora	(_mbrtowc_PARM_3 + 1)
   0024 26 03         [ 3]  153 	bne	00280$
   0026 CCr02r8C      [ 4]  154 	jmp	00128$
   0029                     155 00280$:
                            156 ;../mbrtowc.c:45: if(!ps)
   0029 C6r00r04      [ 4]  157 	lda	_mbrtowc_PARM_4
   002C CAr00r05      [ 4]  158 	ora	(_mbrtowc_PARM_4 + 1)
   002F 26 06         [ 3]  159 	bne	00106$
                            160 ;../mbrtowc.c:47: ps = &sps;
   0031 45r00r11      [ 3]  161 	ldhx	#_mbrtowc_sps_65536_10
   0034 96r00r04      [ 5]  162 	sthx	_mbrtowc_PARM_4
   0037                     163 00106$:
                            164 ;../mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
   0037 32r00r04      [ 5]  165 	ldhx	_mbrtowc_PARM_4
   003A 35*00         [ 4]  166 	sthx	*_mbrtowc_sloc0_1_0
   003C 4E*00*02      [ 6]  167 	mov	*_mbrtowc_sloc0_1_0,*_mbrtowc_sloc1_1_0
   003F 4E*01*03      [ 6]  168 	mov	*(_mbrtowc_sloc0_1_0 + 1),*(_mbrtowc_sloc1_1_0 + 1)
   0042 4F            [ 1]  169 	clra
   0043                     170 00131$:
   0043 87            [ 2]  171 	psha
   0044 BB*03         [ 3]  172 	add	*(_mbrtowc_sloc1_1_0 + 1)
   0046 97            [ 1]  173 	tax
   0047 4F            [ 1]  174 	clra
   0048 B9*02         [ 3]  175 	adc	*_mbrtowc_sloc1_1_0
   004A 87            [ 2]  176 	psha
   004B 8A            [ 3]  177 	pulh
   004C 86            [ 3]  178 	pula
   004D FE            [ 3]  179 	ldx	,x
   004E BF*04         [ 3]  180 	stx	*_mbrtowc_sloc2_1_0
   0050 3D*04         [ 4]  181 	tst	*_mbrtowc_sloc2_1_0
   0052 27 10         [ 3]  182 	beq	00174$
   0054 A1 03         [ 2]  183 	cmp	#0x03
   0056 24 0C         [ 3]  184 	bcc	00174$
                            185 ;../mbrtowc.c:51: mbseq[i] = ps->c[i];
   0058 97            [ 1]  186 	tax
   0059 8C            [ 1]  187 	clrh
   005A 87            [ 2]  188 	psha
   005B B6*04         [ 3]  189 	lda	*_mbrtowc_sloc2_1_0
   005D D7r00r09      [ 4]  190 	sta	(_mbrtowc_mbseq_65536_10),x
   0060 86            [ 3]  191 	pula
                            192 ;../mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
   0061 4C            [ 1]  193 	inca
   0062 20 DF         [ 3]  194 	bra	00131$
   0064                     195 00174$:
   0064 B7*04         [ 3]  196 	sta	*_mbrtowc_sloc2_1_0
                            197 ;../mbrtowc.c:53: seqlen = 1;
   0066 6E 01*02      [ 4]  198 	mov	#0x01,*_mbrtowc_sloc1_1_0
                            199 ;../mbrtowc.c:54: first_byte = ps->c[0] ? ps->c[0] : *s;
   0069 32r00r04      [ 5]  200 	ldhx	_mbrtowc_PARM_4
   006C F6            [ 3]  201 	lda	,x
   006D 32r00r00      [ 5]  202 	ldhx	_mbrtowc_PARM_2
   0070 35*05         [ 4]  203 	sthx	*_mbrtowc_sloc3_1_0
   0072 4D            [ 1]  204 	tsta
   0073 27 02         [ 3]  205 	beq	00147$
   0075 20 03         [ 3]  206 	bra	00148$
   0077                     207 00147$:
   0077 55*05         [ 4]  208 	ldhx	*_mbrtowc_sloc3_1_0
   0079 F6            [ 3]  209 	lda	,x
   007A                     210 00148$:
   007A C7r00r08      [ 4]  211 	sta	_mbrtowc_first_byte_65536_10
                            212 ;../mbrtowc.c:56: if(first_byte & 0x80)
   007D C6r00r08      [ 4]  213 	lda	_mbrtowc_first_byte_65536_10
   0080 2A 45         [ 3]  214 	bpl     00112$
                            215 ;../mbrtowc.c:58: while (first_byte & (0x80 >> seqlen))
   0082 AE 01         [ 2]  216 	ldx	#0x01
   0084                     217 00108$:
   0084 6E 80*08      [ 4]  218 	mov	#0x80,*(_mbrtowc_sloc4_1_0 + 1)
   0087 6E 00*07      [ 4]  219 	mov	#0x00,*_mbrtowc_sloc4_1_0
   008A 9F            [ 1]  220 	txa
   008B 4D            [ 1]  221 	tsta
   008C 27 06         [ 3]  222 	beq	00287$
   008E                     223 00286$:
   008E 37*07         [ 5]  224 	asr	*_mbrtowc_sloc4_1_0
   0090 36*08         [ 5]  225 	ror	*(_mbrtowc_sloc4_1_0 + 1)
   0092 4B FA         [ 4]  226 	dbnza	00286$
   0094                     227 00287$:
   0094 C6r00r08      [ 4]  228 	lda	_mbrtowc_first_byte_65536_10
   0097 B7*0A         [ 3]  229 	sta	*(_mbrtowc_sloc5_1_0 + 1)
   0099 6E 00*09      [ 4]  230 	mov	#0x00,*_mbrtowc_sloc5_1_0
                            231 ;../mbrtowc.c:59: seqlen++;
   009C 9F            [ 1]  232 	txa
   009D AB 01         [ 2]  233 	add	#0x01
                            234 ;../mbrtowc.c:58: while (first_byte & (0x80 >> seqlen))
   009F 87            [ 2]  235 	psha
   00A0 B6*0A         [ 3]  236 	lda	*(_mbrtowc_sloc5_1_0 + 1)
   00A2 B5*08         [ 3]  237 	bit	*(_mbrtowc_sloc4_1_0 + 1)
   00A4 26 04         [ 3]  238 	bne	00288$
   00A6 B6*09         [ 3]  239 	lda	*_mbrtowc_sloc5_1_0
   00A8 B5*07         [ 3]  240 	bit	*_mbrtowc_sloc4_1_0
   00AA                     241 00288$:
   00AA 86            [ 3]  242 	pula
   00AB 27 03         [ 3]  243 	beq	00175$
                            244 ;../mbrtowc.c:59: seqlen++;
   00AD 97            [ 1]  245 	tax
   00AE 20 D4         [ 3]  246 	bra	00108$
   00B0                     247 00175$:
   00B0 BF*02         [ 3]  248 	stx	*_mbrtowc_sloc1_1_0
                            249 ;../mbrtowc.c:60: first_byte &= (0xff >> (seqlen + 1));
   00B2 45 00 FF      [ 3]  250 	ldhx	#0x00ff
   00B5 4D            [ 1]  251 	tsta
   00B6 27 08         [ 3]  252 	beq	00291$
   00B8                     253 00290$:
   00B8 8B            [ 2]  254 	pshh
   00B9 9E 67 01      [ 6]  255 	asr	1,s
   00BC 8A            [ 3]  256 	pulh
   00BD 56            [ 1]  257 	rorx
   00BE 4B F8         [ 4]  258 	dbnza	00290$
   00C0                     259 00291$:
   00C0 9F            [ 1]  260 	txa
   00C1 C4r00r08      [ 4]  261 	and	_mbrtowc_first_byte_65536_10
   00C4 C7r00r08      [ 4]  262 	sta	_mbrtowc_first_byte_65536_10
   00C7                     263 00112$:
                            264 ;../mbrtowc.c:63: if(seqlen > 4)
   00C7 B6*02         [ 3]  265 	lda	*_mbrtowc_sloc1_1_0
   00C9 A1 04         [ 2]  266 	cmp	#0x04
   00CB 23 03         [ 3]  267 	bls	00292$
   00CD CCr02r8C      [ 4]  268 	jmp	00128$
   00D0                     269 00292$:
                            270 ;../mbrtowc.c:66: if(i + n < seqlen) // Incomplete multibyte character
   00D0 4E*04*0A      [ 6]  271 	mov	*_mbrtowc_sloc2_1_0,*(_mbrtowc_sloc5_1_0 + 1)
   00D3 6E 00*09      [ 4]  272 	mov	#0x00,*_mbrtowc_sloc5_1_0
   00D6 B6*0A         [ 3]  273 	lda	*(_mbrtowc_sloc5_1_0 + 1)
   00D8 BE*09         [ 3]  274 	ldx	*_mbrtowc_sloc5_1_0
   00DA CBr00r03      [ 4]  275 	add	(_mbrtowc_PARM_3 + 1)
   00DD B7*08         [ 3]  276 	sta	*(_mbrtowc_sloc4_1_0 + 1)
   00DF 9F            [ 1]  277 	txa
   00E0 C9r00r02      [ 4]  278 	adc	_mbrtowc_PARM_3
   00E3 B7*07         [ 3]  279 	sta	*_mbrtowc_sloc4_1_0
   00E5 BE*02         [ 3]  280 	ldx	*_mbrtowc_sloc1_1_0
   00E7 8C            [ 1]  281 	clrh
   00E8 75*07         [ 5]  282 	cphx	*_mbrtowc_sloc4_1_0
   00EA 23 4A         [ 3]  283 	bls	00164$
                            284 ;../mbrtowc.c:70: return(-2);
   00EC 4E*00*07      [ 6]  285 	mov	*_mbrtowc_sloc0_1_0,*_mbrtowc_sloc4_1_0
   00EF 4E*01*08      [ 6]  286 	mov	*(_mbrtowc_sloc0_1_0 + 1),*(_mbrtowc_sloc4_1_0 + 1)
   00F2 4E*05*0B      [ 6]  287 	mov	*_mbrtowc_sloc3_1_0,*_mbrtowc_sloc6_1_0
   00F5 4E*06*0C      [ 6]  288 	mov	*(_mbrtowc_sloc3_1_0 + 1),*(_mbrtowc_sloc6_1_0 + 1)
   00F8 B6*04         [ 3]  289 	lda	*_mbrtowc_sloc2_1_0
   00FA 32r00r02      [ 5]  290 	ldhx	_mbrtowc_PARM_3
   00FD                     291 00134$:
                            292 ;../mbrtowc.c:68: for(;n-- ; i++)
   00FD 35*0D         [ 4]  293 	sthx	*_mbrtowc_sloc7_1_0
   00FF AF FF         [ 2]  294 	aix	#-1
   0101 3D*0E         [ 4]  295 	tst	*(_mbrtowc_sloc7_1_0 + 1)
   0103 26 02         [ 3]  296 	bne	00294$
   0105 3D*0D         [ 4]  297 	tst	*_mbrtowc_sloc7_1_0
   0107                     298 00294$:
   0107 27 28         [ 3]  299 	beq	00115$
                            300 ;../mbrtowc.c:69: ps->c[i] = *s++;
   0109 87            [ 2]  301 	psha
   010A BB*08         [ 3]  302 	add	*(_mbrtowc_sloc4_1_0 + 1)
   010C B7*0E         [ 3]  303 	sta	*(_mbrtowc_sloc7_1_0 + 1)
   010E 4F            [ 1]  304 	clra
   010F B9*07         [ 3]  305 	adc	*_mbrtowc_sloc4_1_0
   0111 B7*0D         [ 3]  306 	sta	*_mbrtowc_sloc7_1_0
   0113 86            [ 3]  307 	pula
   0114 89            [ 2]  308 	pshx
   0115 8B            [ 2]  309 	pshh
   0116 55*0B         [ 4]  310 	ldhx	*_mbrtowc_sloc6_1_0
   0118 87            [ 2]  311 	psha
   0119 F6            [ 3]  312 	lda	,x
   011A B7*0F         [ 3]  313 	sta	*_mbrtowc_sloc8_1_0
   011C AF 01         [ 2]  314 	aix	#1
   011E 35*0B         [ 4]  315 	sthx	*_mbrtowc_sloc6_1_0
   0120 86            [ 3]  316 	pula
   0121 8A            [ 3]  317 	pulh
   0122 88            [ 3]  318 	pulx
   0123 89            [ 2]  319 	pshx
   0124 8B            [ 2]  320 	pshh
   0125 87            [ 2]  321 	psha
   0126 55*0D         [ 4]  322 	ldhx	*_mbrtowc_sloc7_1_0
   0128 B6*0F         [ 3]  323 	lda	*_mbrtowc_sloc8_1_0
   012A F7            [ 2]  324 	sta	,x
   012B 86            [ 3]  325 	pula
   012C 8A            [ 3]  326 	pulh
   012D 88            [ 3]  327 	pulx
                            328 ;../mbrtowc.c:68: for(;n-- ; i++)
   012E 4C            [ 1]  329 	inca
   012F 20 CC         [ 3]  330 	bra	00134$
   0131                     331 00115$:
                            332 ;../mbrtowc.c:70: return(-2);
   0131 A6 FE         [ 2]  333 	lda	#0xfe
   0133 AE FF         [ 2]  334 	ldx	#0xff
   0135 81            [ 6]  335 	rts
                            336 ;../mbrtowc.c:73: for(j = 0; j < i; j++)
   0136                     337 00164$:
   0136 4E*00*0D      [ 6]  338 	mov	*_mbrtowc_sloc0_1_0,*_mbrtowc_sloc7_1_0
   0139 4E*01*0E      [ 6]  339 	mov	*(_mbrtowc_sloc0_1_0 + 1),*(_mbrtowc_sloc7_1_0 + 1)
   013C 4F            [ 1]  340 	clra
   013D                     341 00137$:
   013D B1*04         [ 3]  342 	cmp	*_mbrtowc_sloc2_1_0
   013F 24 0F         [ 3]  343 	bcc	00118$
                            344 ;../mbrtowc.c:74: ps->c[j] = 0;
   0141 87            [ 2]  345 	psha
   0142 BB*0E         [ 3]  346 	add	*(_mbrtowc_sloc7_1_0 + 1)
   0144 97            [ 1]  347 	tax
   0145 4F            [ 1]  348 	clra
   0146 B9*0D         [ 3]  349 	adc	*_mbrtowc_sloc7_1_0
   0148 87            [ 2]  350 	psha
   0149 8A            [ 3]  351 	pulh
   014A 4F            [ 1]  352 	clra
   014B F7            [ 2]  353 	sta	,x
   014C 86            [ 3]  354 	pula
                            355 ;../mbrtowc.c:73: for(j = 0; j < i; j++)
   014D 4C            [ 1]  356 	inca
   014E 20 ED         [ 3]  357 	bra	00137$
   0150                     358 00118$:
                            359 ;../mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
   0150 45 00 01      [ 3]  360 	ldhx	#0x0001
   0153 96r00r02      [ 5]  361 	sthx	_mbrtowc_PARM_3
   0156 3D*04         [ 4]  362 	tst	*_mbrtowc_sloc2_1_0
   0158 27 04         [ 3]  363 	beq	00149$
   015A 55*09         [ 4]  364 	ldhx	*_mbrtowc_sloc5_1_0
   015C 20 03         [ 3]  365 	bra	00150$
   015E                     366 00149$:
   015E 45 00 01      [ 3]  367 	ldhx	#0x0001
   0161                     368 00150$:
   0161 BF*0F         [ 3]  369 	stx	*_mbrtowc_sloc8_1_0
   0163 4E*05*0D      [ 6]  370 	mov	*_mbrtowc_sloc3_1_0,*_mbrtowc_sloc7_1_0
   0166 4E*06*0E      [ 6]  371 	mov	*(_mbrtowc_sloc3_1_0 + 1),*(_mbrtowc_sloc7_1_0 + 1)
   0169 45 00 01      [ 3]  372 	ldhx	#0x0001
   016C 35*0B         [ 4]  373 	sthx	*_mbrtowc_sloc6_1_0
   016E                     374 00140$:
   016E B6*0F         [ 3]  375 	lda	*_mbrtowc_sloc8_1_0
   0170 B1*02         [ 3]  376 	cmp	*_mbrtowc_sloc1_1_0
   0172 24 33         [ 3]  377 	bcc	00121$
                            378 ;../mbrtowc.c:78: mbseq[i] = *s++;
   0174 BE*0F         [ 3]  379 	ldx	*_mbrtowc_sloc8_1_0
   0176 8C            [ 1]  380 	clrh
   0177 89            [ 2]  381 	pshx
   0178 8B            [ 2]  382 	pshh
   0179 55*0D         [ 4]  383 	ldhx	*_mbrtowc_sloc7_1_0
   017B F6            [ 3]  384 	lda	,x
   017C AF 01         [ 2]  385 	aix	#1
   017E 35*0D         [ 4]  386 	sthx	*_mbrtowc_sloc7_1_0
   0180 8A            [ 3]  387 	pulh
   0181 88            [ 3]  388 	pulx
   0182 D7r00r09      [ 4]  389 	sta	(_mbrtowc_mbseq_65536_10),x
                            390 ;../mbrtowc.c:79: if((mbseq[i] & 0xc0) != 0x80)
   0185 97            [ 1]  391 	tax
   0186 8C            [ 1]  392 	clrh
   0187 9F            [ 1]  393 	txa
   0188 A4 C0         [ 2]  394 	and	#0xc0
   018A 97            [ 1]  395 	tax
   018B 65 00 80      [ 3]  396 	cphx	#0x0080
   018E 27 03         [ 3]  397 	beq	00299$
   0190 CCr02r8C      [ 4]  398 	jmp	00128$
   0193                     399 00299$:
                            400 ;../mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
   0193 3C*0F         [ 5]  401 	inc	*_mbrtowc_sloc8_1_0
   0195 55*0B         [ 4]  402 	ldhx	*_mbrtowc_sloc6_1_0
   0197 AF 01         [ 2]  403 	aix	#1
   0199 35*0B         [ 4]  404 	sthx	*_mbrtowc_sloc6_1_0
   019B B6*0B         [ 3]  405 	lda	*_mbrtowc_sloc6_1_0
   019D C7r00r02      [ 4]  406 	sta	_mbrtowc_PARM_3
   01A0 B6*0C         [ 3]  407 	lda	*(_mbrtowc_sloc6_1_0 + 1)
   01A2 C7r00r03      [ 4]  408 	sta	(_mbrtowc_PARM_3 + 1)
   01A5 20 C7         [ 3]  409 	bra	00140$
   01A7                     410 00121$:
                            411 ;../mbrtowc.c:83: codepoint = first_byte;
   01A7 C6r00r08      [ 4]  412 	lda	_mbrtowc_first_byte_65536_10
   01AA C7r00r10      [ 4]  413 	sta	(_mbrtowc_codepoint_65536_10 + 3)
   01AD 4F            [ 1]  414 	clra
   01AE C7r00r0F      [ 4]  415 	sta	(_mbrtowc_codepoint_65536_10 + 2)
   01B1 C7r00r0E      [ 4]  416 	sta	(_mbrtowc_codepoint_65536_10 + 1)
   01B4 C7r00r0D      [ 4]  417 	sta	_mbrtowc_codepoint_65536_10
                            418 ;../mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
   01B7 45r00r0A      [ 3]  419 	ldhx	#(_mbrtowc_mbseq_65536_10 + 0x0001)
   01BA 35*0D         [ 4]  420 	sthx	*_mbrtowc_sloc7_1_0
   01BC B6*02         [ 3]  421 	lda	*_mbrtowc_sloc1_1_0
   01BE A0 01         [ 2]  422 	sub	#0x01
   01C0 B7*0F         [ 3]  423 	sta	*_mbrtowc_sloc8_1_0
   01C2                     424 00143$:
   01C2 3D*0F         [ 4]  425 	tst	*_mbrtowc_sloc8_1_0
   01C4 27 78         [ 3]  426 	beq	00122$
                            427 ;../mbrtowc.c:87: codepoint <<= 6;
   01C6 C6r00r0E      [ 4]  428 	lda	(_mbrtowc_codepoint_65536_10 + 1)
   01C9 CEr00r0D      [ 4]  429 	ldx	_mbrtowc_codepoint_65536_10
   01CC 48            [ 1]  430 	lsla
   01CD 59            [ 1]  431 	rolx
   01CE 48            [ 1]  432 	lsla
   01CF 59            [ 1]  433 	rolx
   01D0 48            [ 1]  434 	lsla
   01D1 59            [ 1]  435 	rolx
   01D2 48            [ 1]  436 	lsla
   01D3 59            [ 1]  437 	rolx
   01D4 48            [ 1]  438 	lsla
   01D5 59            [ 1]  439 	rolx
   01D6 48            [ 1]  440 	lsla
   01D7 59            [ 1]  441 	rolx
   01D8 C7r00r0E      [ 4]  442 	sta	(_mbrtowc_codepoint_65536_10 + 1)
   01DB CFr00r0D      [ 4]  443 	stx	_mbrtowc_codepoint_65536_10
   01DE C6r00r0F      [ 4]  444 	lda	(_mbrtowc_codepoint_65536_10 + 2)
   01E1 44            [ 1]  445 	lsra	
   01E2 44            [ 1]  446 	lsra	
   01E3 CAr00r0E      [ 4]  447 	ora	(_mbrtowc_codepoint_65536_10 + 1)
   01E6 C7r00r0E      [ 4]  448 	sta	(_mbrtowc_codepoint_65536_10 + 1)
   01E9 C6r00r10      [ 4]  449 	lda	(_mbrtowc_codepoint_65536_10 + 3)
   01EC CEr00r0F      [ 4]  450 	ldx	(_mbrtowc_codepoint_65536_10 + 2)
   01EF 48            [ 1]  451 	lsla
   01F0 59            [ 1]  452 	rolx
   01F1 48            [ 1]  453 	lsla
   01F2 59            [ 1]  454 	rolx
   01F3 48            [ 1]  455 	lsla
   01F4 59            [ 1]  456 	rolx
   01F5 48            [ 1]  457 	lsla
   01F6 59            [ 1]  458 	rolx
   01F7 48            [ 1]  459 	lsla
   01F8 59            [ 1]  460 	rolx
   01F9 48            [ 1]  461 	lsla
   01FA 59            [ 1]  462 	rolx
   01FB C7r00r10      [ 4]  463 	sta	(_mbrtowc_codepoint_65536_10 + 3)
   01FE CFr00r0F      [ 4]  464 	stx	(_mbrtowc_codepoint_65536_10 + 2)
                            465 ;../mbrtowc.c:88: codepoint |= (*s & 0x3f);
   0201 55*0D         [ 4]  466 	ldhx	*_mbrtowc_sloc7_1_0
   0203 F6            [ 3]  467 	lda	,x
   0204 AF 01         [ 2]  468 	aix	#1
   0206 35*0D         [ 4]  469 	sthx	*_mbrtowc_sloc7_1_0
   0208 5F            [ 1]  470 	clrx
   0209 A4 3F         [ 2]  471 	and	#0x3f
   020B 87            [ 2]  472 	psha
   020C 86            [ 3]  473 	pula
   020D B7*13         [ 3]  474 	sta	*(_mbrtowc_sloc9_1_0 + 3)
   020F 9F            [ 1]  475 	txa
   0210 B7*12         [ 3]  476 	sta	*(_mbrtowc_sloc9_1_0 + 2)
   0212 49            [ 1]  477 	rola	
   0213 4F            [ 1]  478 	clra	
   0214 A2 00         [ 2]  479 	sbc	#0x00
   0216 B7*11         [ 3]  480 	sta	*(_mbrtowc_sloc9_1_0 + 1)
   0218 B7*10         [ 3]  481 	sta	*_mbrtowc_sloc9_1_0
   021A C6r00r10      [ 4]  482 	lda	(_mbrtowc_codepoint_65536_10 + 3)
   021D BA*13         [ 3]  483 	ora	*(_mbrtowc_sloc9_1_0 + 3)
   021F C7r00r10      [ 4]  484 	sta	(_mbrtowc_codepoint_65536_10 + 3)
   0222 C6r00r0F      [ 4]  485 	lda	(_mbrtowc_codepoint_65536_10 + 2)
   0225 BA*12         [ 3]  486 	ora	*(_mbrtowc_sloc9_1_0 + 2)
   0227 C7r00r0F      [ 4]  487 	sta	(_mbrtowc_codepoint_65536_10 + 2)
   022A C6r00r0E      [ 4]  488 	lda	(_mbrtowc_codepoint_65536_10 + 1)
   022D BA*11         [ 3]  489 	ora	*(_mbrtowc_sloc9_1_0 + 1)
   022F C7r00r0E      [ 4]  490 	sta	(_mbrtowc_codepoint_65536_10 + 1)
   0232 C6r00r0D      [ 4]  491 	lda	_mbrtowc_codepoint_65536_10
   0235 BA*10         [ 3]  492 	ora	*_mbrtowc_sloc9_1_0
   0237 C7r00r0D      [ 4]  493 	sta	_mbrtowc_codepoint_65536_10
                            494 ;../mbrtowc.c:89: s++;
                            495 ;../mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
   023A 3A*0F         [ 5]  496 	dec	*_mbrtowc_sloc8_1_0
   023C 20 84         [ 3]  497 	bra	00143$
   023E                     498 00122$:
                            499 ;../mbrtowc.c:92: if(codepoint >= 0xd800 && codepoint <= 0xdfff) // UTF-16 surrogate.
   023E C6r00r0F      [ 4]  500 	lda	(_mbrtowc_codepoint_65536_10 + 2)
   0241 A0 D8         [ 2]  501 	sub	#0xd8
   0243 C6r00r0E      [ 4]  502 	lda	(_mbrtowc_codepoint_65536_10 + 1)
   0246 A2 00         [ 2]  503 	sbc	#0x00
   0248 C6r00r0D      [ 4]  504 	lda	_mbrtowc_codepoint_65536_10
   024B A2 00         [ 2]  505 	sbc	#0x00
   024D 25 18         [ 3]  506 	bcs	00124$
   024F A6 FF         [ 2]  507 	lda	#0xff
   0251 C0r00r10      [ 4]  508 	sub	(_mbrtowc_codepoint_65536_10 + 3)
   0254 A6 DF         [ 2]  509 	lda	#0xdf
   0256 C2r00r0F      [ 4]  510 	sbc	(_mbrtowc_codepoint_65536_10 + 2)
   0259 4F            [ 1]  511 	clra
   025A C2r00r0E      [ 4]  512 	sbc	(_mbrtowc_codepoint_65536_10 + 1)
   025D 4F            [ 1]  513 	clra
   025E C2r00r0D      [ 4]  514 	sbc	_mbrtowc_codepoint_65536_10
   0261 25 04         [ 3]  515 	bcs	00124$
                            516 ;../mbrtowc.c:93: return(-1);
   0263 A6 FF         [ 2]  517 	lda	#0xff
   0265 97            [ 1]  518 	tax
   0266 81            [ 6]  519 	rts
   0267                     520 00124$:
                            521 ;../mbrtowc.c:95: if(pwc)
   0267 C6r00r06      [ 4]  522 	lda	_mbrtowc_pwc_65536_9
   026A CAr00r07      [ 4]  523 	ora	(_mbrtowc_pwc_65536_9 + 1)
   026D 27 16         [ 3]  524 	beq	00127$
                            525 ;../mbrtowc.c:96: *pwc = codepoint;
   026F 32r00r06      [ 5]  526 	ldhx	_mbrtowc_pwc_65536_9
   0272 C6r00r0D      [ 4]  527 	lda	_mbrtowc_codepoint_65536_10
   0275 F7            [ 2]  528 	sta	,x
   0276 C6r00r0E      [ 4]  529 	lda	(_mbrtowc_codepoint_65536_10 + 1)
   0279 E7 01         [ 3]  530 	sta	1,x
   027B C6r00r0F      [ 4]  531 	lda	(_mbrtowc_codepoint_65536_10 + 2)
   027E E7 02         [ 3]  532 	sta	2,x
   0280 C6r00r10      [ 4]  533 	lda	(_mbrtowc_codepoint_65536_10 + 3)
   0283 E7 03         [ 3]  534 	sta	3,x
   0285                     535 00127$:
                            536 ;../mbrtowc.c:97: return(n);
   0285 CEr00r02      [ 4]  537 	ldx	_mbrtowc_PARM_3
   0288 C6r00r03      [ 4]  538 	lda	(_mbrtowc_PARM_3 + 1)
   028B 81            [ 6]  539 	rts
                            540 ;../mbrtowc.c:99: eilseq:
   028C                     541 00128$:
                            542 ;../mbrtowc.c:100: errno = EILSEQ;
   028C 45 00 54      [ 3]  543 	ldhx	#0x0054
   028F 96r00r00      [ 5]  544 	sthx	_errno
                            545 ;../mbrtowc.c:101: return(-1);
   0292 A6 FF         [ 2]  546 	lda	#0xff
   0294 97            [ 1]  547 	tax
                            548 ;../mbrtowc.c:102: }
   0295 81            [ 6]  549 	rts
                            550 	.area CSEG    (CODE)
                            551 	.area CONST   (CODE)
                            552 	.area CONST   (CODE)
   0000                     553 ___str_0:
   0000 00                  554 	.db 0x00
                            555 	.area CSEG    (CODE)
                            556 	.area XINIT   (CODE)
                            557 	.area CABS    (ABS,CODE)
