                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module c16stombs
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl ___memcpy
                             24 	.globl _wctomb
                             25 	.globl ___c16stombs_PARM_3
                             26 	.globl ___c16stombs_PARM_2
                             27 	.globl ___c16stombs
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (PAG)
   0000                      32 ___c16stombs_sloc0_1_0:
   0000                      33 	.ds 2
   0002                      34 ___c16stombs_sloc1_1_0:
   0002                      35 	.ds 2
   0004                      36 ___c16stombs_sloc2_1_0:
   0004                      37 	.ds 4
   0008                      38 ___c16stombs_sloc3_1_0:
   0008                      39 	.ds 4
                             40 ;--------------------------------------------------------
                             41 ; overlayable items in ram
                             42 ;--------------------------------------------------------
                             43 ;--------------------------------------------------------
                             44 ; absolute ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS)
                             47 	.area IABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; absolute external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XABS    (ABS)
                             52 ;--------------------------------------------------------
                             53 ; initialized external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XISEG
                             56 ;--------------------------------------------------------
                             57 ; extended address mode data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG
   0000                      60 ___c16stombs_PARM_2:
   0000                      61 	.ds 2
   0002                      62 ___c16stombs_PARM_3:
   0002                      63 	.ds 2
   0004                      64 ___c16stombs_s_65536_75:
   0004                      65 	.ds 2
   0006                      66 ___c16stombs_m_65536_76:
   0006                      67 	.ds 2
   0008                      68 ___c16stombs_b_65536_76:
   0008                      69 	.ds 4
   000C                      70 ___c16stombs_l_196608_78:
   000C                      71 	.ds 2
   000E                      72 ___c16stombs_codepoint_196608_78:
   000E                      73 	.ds 4
                             74 ;--------------------------------------------------------
                             75 ; global & static initialisations
                             76 ;--------------------------------------------------------
                             77 	.area HOME    (CODE)
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area GSINIT  (CODE)
                             81 ;--------------------------------------------------------
                             82 ; Home
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area HOME    (CODE)
                             86 ;--------------------------------------------------------
                             87 ; code
                             88 ;--------------------------------------------------------
                             89 	.area CSEG    (CODE)
                             90 ;------------------------------------------------------------
                             91 ;Allocation info for local variables in function '__c16stombs'
                             92 ;------------------------------------------------------------
                             93 ;sloc0                     Allocated with name '___c16stombs_sloc0_1_0'
                             94 ;sloc1                     Allocated with name '___c16stombs_sloc1_1_0'
                             95 ;sloc2                     Allocated with name '___c16stombs_sloc2_1_0'
                             96 ;sloc3                     Allocated with name '___c16stombs_sloc3_1_0'
                             97 ;c16s                      Allocated with name '___c16stombs_PARM_2'
                             98 ;n                         Allocated with name '___c16stombs_PARM_3'
                             99 ;s                         Allocated with name '___c16stombs_s_65536_75'
                            100 ;m                         Allocated with name '___c16stombs_m_65536_76'
                            101 ;b                         Allocated with name '___c16stombs_b_65536_76'
                            102 ;l                         Allocated with name '___c16stombs_l_196608_78'
                            103 ;codepoint                 Allocated with name '___c16stombs_codepoint_196608_78'
                            104 ;------------------------------------------------------------
                            105 ;../c16stombs.c:44: size_t __c16stombs(char *restrict s, const char16_t *restrict c16s, size_t n)
                            106 ;	-----------------------------------------
                            107 ;	 function __c16stombs
                            108 ;	-----------------------------------------
                            109 ;	Register assignment might be sub-optimal.
                            110 ;	Stack space usage: 0 bytes.
   0000                     111 ___c16stombs:
   0000 C7r00r05      [ 4]  112 	sta	(___c16stombs_s_65536_75 + 1)
   0003 CFr00r04      [ 4]  113 	stx	___c16stombs_s_65536_75
                            114 ;../c16stombs.c:46: size_t m = 0;
   0006 8C            [ 1]  115 	clrh
   0007 5F            [ 1]  116 	clrx
   0008 96r00r06      [ 5]  117 	sthx	___c16stombs_m_65536_76
                            118 ;../c16stombs.c:87: return(m);
   000B                     119 00119$:
                            120 ;../c16stombs.c:54: if(c16s[0] < 0xd800 || c16s[0] >= 0xe000) // Basic multilingual plane
   000B 32r00r00      [ 5]  121 	ldhx	___c16stombs_PARM_2
   000E 35*00         [ 4]  122 	sthx	*___c16stombs_sloc0_1_0
   0010 55*00         [ 4]  123 	ldhx	*___c16stombs_sloc0_1_0
   0012 F6            [ 3]  124 	lda	,x
   0013 B7*02         [ 3]  125 	sta	*___c16stombs_sloc1_1_0
   0015 E6 01         [ 3]  126 	lda	1,x
   0017 B7*03         [ 3]  127 	sta	*(___c16stombs_sloc1_1_0 + 1)
                            128 ;../c16stombs.c:57: c16s++;
   0019 55*00         [ 4]  129 	ldhx	*___c16stombs_sloc0_1_0
   001B AF 02         [ 2]  130 	aix	#2
                            131 ;../c16stombs.c:56: codepoint = c16s[0];
   001D 4E*03*07      [ 6]  132 	mov	*(___c16stombs_sloc1_1_0 + 1),*(___c16stombs_sloc2_1_0 + 3)
   0020 4E*02*06      [ 6]  133 	mov	*___c16stombs_sloc1_1_0,*(___c16stombs_sloc2_1_0 + 2)
   0023 6E 00*05      [ 4]  134 	mov	#0x00,*(___c16stombs_sloc2_1_0 + 1)
   0026 6E 00*04      [ 4]  135 	mov	#0x00,*___c16stombs_sloc2_1_0
                            136 ;../c16stombs.c:54: if(c16s[0] < 0xd800 || c16s[0] >= 0xe000) // Basic multilingual plane
   0029 B6*02         [ 3]  137 	lda	*___c16stombs_sloc1_1_0
   002B A0 D8         [ 2]  138 	sub	#0xd8
   002D 25 06         [ 3]  139 	bcs	00106$
   002F B6*02         [ 3]  140 	lda	*___c16stombs_sloc1_1_0
   0031 A0 E0         [ 2]  141 	sub	#0xe0
   0033 25 1A         [ 3]  142 	bcs	00107$
   0035                     143 00106$:
                            144 ;../c16stombs.c:56: codepoint = c16s[0];
   0035 B6*04         [ 3]  145 	lda	*___c16stombs_sloc2_1_0
   0037 C7r00r0E      [ 4]  146 	sta	___c16stombs_codepoint_196608_78
   003A B6*05         [ 3]  147 	lda	*(___c16stombs_sloc2_1_0 + 1)
   003C C7r00r0F      [ 4]  148 	sta	(___c16stombs_codepoint_196608_78 + 1)
   003F B6*06         [ 3]  149 	lda	*(___c16stombs_sloc2_1_0 + 2)
   0041 C7r00r10      [ 4]  150 	sta	(___c16stombs_codepoint_196608_78 + 2)
   0044 B6*07         [ 3]  151 	lda	*(___c16stombs_sloc2_1_0 + 3)
   0046 C7r00r11      [ 4]  152 	sta	(___c16stombs_codepoint_196608_78 + 3)
                            153 ;../c16stombs.c:57: c16s++;
   0049 96r00r00      [ 5]  154 	sthx	___c16stombs_PARM_2
   004C CCr00rCE      [ 4]  155 	jmp	00108$
   004F                     156 00107$:
                            157 ;../c16stombs.c:59: else if(c16s[0] > 0xdbff || c16s[1] < 0xdc00 || c16s[1] > 0xdfff) // Unpaired surrogate
   004F A6 FF         [ 2]  158 	lda	#0xff
   0051 B0*03         [ 3]  159 	sub	*(___c16stombs_sloc1_1_0 + 1)
   0053 A6 DB         [ 2]  160 	lda	#0xdb
   0055 B2*02         [ 3]  161 	sbc	*___c16stombs_sloc1_1_0
   0057 25 0C         [ 3]  162 	bcs	00101$
   0059 9E AE         [ 5]  163 	ldhx	,x
   005B 65 DC 00      [ 3]  164 	cphx	#0xdc00
   005E 25 05         [ 3]  165 	bcs	00101$
   0060 65 DF FF      [ 3]  166 	cphx	#0xdfff
   0063 23 04         [ 3]  167 	bls	00102$
   0065                     168 00101$:
                            169 ;../c16stombs.c:60: return(-1);
   0065 A6 FF         [ 2]  170 	lda	#0xff
   0067 97            [ 1]  171 	tax
   0068 81            [ 6]  172 	rts
   0069                     173 00102$:
                            174 ;../c16stombs.c:63: codepoint = ((unsigned long)(c16s[0]) << 10) -(0xd800ul << 10) + (unsigned long)(c16s[1]) - 0xdc00ul + 0x10000ul;
   0069 89            [ 2]  175 	pshx
   006A B6*06         [ 3]  176 	lda	*(___c16stombs_sloc2_1_0 + 2)
   006C BE*05         [ 3]  177 	ldx	*(___c16stombs_sloc2_1_0 + 1)
   006E 48            [ 1]  178 	lsla
   006F 59            [ 1]  179 	rolx
   0070 48            [ 1]  180 	lsla
   0071 59            [ 1]  181 	rolx
   0072 B7*05         [ 3]  182 	sta	*(___c16stombs_sloc2_1_0 + 1)
   0074 BF*04         [ 3]  183 	stx	*___c16stombs_sloc2_1_0
   0076 88            [ 3]  184 	pulx
   0077 B6*07         [ 3]  185 	lda	*(___c16stombs_sloc2_1_0 + 3)
   0079 48            [ 1]  186 	lsla	
   007A 48            [ 1]  187 	lsla	
   007B B7*06         [ 3]  188 	sta	*(___c16stombs_sloc2_1_0 + 2)
   007D B6*07         [ 3]  189 	lda	*(___c16stombs_sloc2_1_0 + 3)
   007F 49            [ 1]  190 	rola	
   0080 49            [ 1]  191 	rola	
   0081 49            [ 1]  192 	rola	
   0082 A4 03         [ 2]  193 	and	#0x03
   0084 BA*05         [ 3]  194 	ora	*(___c16stombs_sloc2_1_0 + 1)
   0086 B7*05         [ 3]  195 	sta	*(___c16stombs_sloc2_1_0 + 1)
   0088 6E 00*07      [ 4]  196 	mov	#0x00,*(___c16stombs_sloc2_1_0 + 3)
   008B BF*0B         [ 3]  197 	stx	*(___c16stombs_sloc3_1_0 + 3)
   008D 8B            [ 2]  198 	pshh
   008E 86            [ 3]  199 	pula
   008F B7*0A         [ 3]  200 	sta	*(___c16stombs_sloc3_1_0 + 2)
   0091 6E 00*09      [ 4]  201 	mov	#0x00,*(___c16stombs_sloc3_1_0 + 1)
   0094 6E 00*08      [ 4]  202 	mov	#0x00,*___c16stombs_sloc3_1_0
   0097 B6*07         [ 3]  203 	lda	*(___c16stombs_sloc2_1_0 + 3)
   0099 BB*0B         [ 3]  204 	add	*(___c16stombs_sloc3_1_0 + 3)
   009B B7*0B         [ 3]  205 	sta	*(___c16stombs_sloc3_1_0 + 3)
   009D B6*06         [ 3]  206 	lda	*(___c16stombs_sloc2_1_0 + 2)
   009F B9*0A         [ 3]  207 	adc	*(___c16stombs_sloc3_1_0 + 2)
   00A1 B7*0A         [ 3]  208 	sta	*(___c16stombs_sloc3_1_0 + 2)
   00A3 B6*05         [ 3]  209 	lda	*(___c16stombs_sloc2_1_0 + 1)
   00A5 B9*09         [ 3]  210 	adc	*(___c16stombs_sloc3_1_0 + 1)
   00A7 B7*09         [ 3]  211 	sta	*(___c16stombs_sloc3_1_0 + 1)
   00A9 B6*04         [ 3]  212 	lda	*___c16stombs_sloc2_1_0
   00AB B9*08         [ 3]  213 	adc	*___c16stombs_sloc3_1_0
   00AD B7*08         [ 3]  214 	sta	*___c16stombs_sloc3_1_0
   00AF 45r00r0E      [ 3]  215 	ldhx	#___c16stombs_codepoint_196608_78
   00B2 B6*0B         [ 3]  216 	lda	*(___c16stombs_sloc3_1_0 + 3)
   00B4 E7 03         [ 3]  217 	sta	3,x
   00B6 B6*0A         [ 3]  218 	lda	*(___c16stombs_sloc3_1_0 + 2)
   00B8 AB 24         [ 2]  219 	add	#0x24
   00BA E7 02         [ 3]  220 	sta	2,x
   00BC B6*09         [ 3]  221 	lda	*(___c16stombs_sloc3_1_0 + 1)
   00BE A9 A0         [ 2]  222 	adc	#0xa0
   00C0 E7 01         [ 3]  223 	sta	1,x
   00C2 B6*08         [ 3]  224 	lda	*___c16stombs_sloc3_1_0
   00C4 A9 FC         [ 2]  225 	adc	#0xfc
   00C6 F7            [ 2]  226 	sta	,x
                            227 ;../c16stombs.c:64: c16s += 2;
   00C7 55*00         [ 4]  228 	ldhx	*___c16stombs_sloc0_1_0
   00C9 AF 04         [ 2]  229 	aix	#4
   00CB 96r00r00      [ 5]  230 	sthx	___c16stombs_PARM_2
   00CE                     231 00108$:
                            232 ;../c16stombs.c:67: if(!codepoint)
   00CE C6r00r0E      [ 4]  233 	lda	___c16stombs_codepoint_196608_78
   00D1 CAr00r0F      [ 4]  234 	ora	(___c16stombs_codepoint_196608_78 + 1)
   00D4 CAr00r10      [ 4]  235 	ora	(___c16stombs_codepoint_196608_78 + 2)
   00D7 CAr00r11      [ 4]  236 	ora	(___c16stombs_codepoint_196608_78 + 3)
   00DA 26 18         [ 3]  237 	bne	00113$
                            238 ;../c16stombs.c:69: if(m < n)
   00DC C6r00r07      [ 4]  239 	lda	(___c16stombs_m_65536_76 + 1)
   00DF C0r00r03      [ 4]  240 	sub	(___c16stombs_PARM_3 + 1)
   00E2 C6r00r06      [ 4]  241 	lda	___c16stombs_m_65536_76
   00E5 C2r00r02      [ 4]  242 	sbc	___c16stombs_PARM_3
   00E8 25 03         [ 3]  243 	bcs	00169$
   00EA CCr01r6B      [ 4]  244 	jmp	00118$
   00ED                     245 00169$:
                            246 ;../c16stombs.c:70: *s = 0;
   00ED 32r00r04      [ 5]  247 	ldhx	___c16stombs_s_65536_75
   00F0 4F            [ 1]  248 	clra
   00F1 F7            [ 2]  249 	sta	,x
                            250 ;../c16stombs.c:71: break;
   00F2 20 77         [ 3]  251 	bra	00118$
   00F4                     252 00113$:
                            253 ;../c16stombs.c:74: l = wctomb(b, codepoint);
   00F4 32r00r0E      [ 5]  254 	ldhx	___c16stombs_codepoint_196608_78
   00F7 96r00r00      [ 5]  255 	sthx	_wctomb_PARM_2
   00FA 32r00r10      [ 5]  256 	ldhx	(___c16stombs_codepoint_196608_78 + 2)
   00FD 96r00r02      [ 5]  257 	sthx	(_wctomb_PARM_2 + 2)
   0100 A6r08         [ 2]  258 	lda	#___c16stombs_b_65536_76
   0102 AEs00         [ 2]  259 	ldx	#>___c16stombs_b_65536_76
   0104 CDr00r00      [ 6]  260 	jsr	_wctomb
   0107 C7r00r0D      [ 4]  261 	sta	(___c16stombs_l_196608_78 + 1)
   010A CFr00r0C      [ 4]  262 	stx	___c16stombs_l_196608_78
                            263 ;../c16stombs.c:76: if(l < 0)
   010D C6r00r0C      [ 4]  264 	lda	___c16stombs_l_196608_78
   0110 A0 00         [ 2]  265 	sub	#0x00
   0112 90 04         [ 3]  266 	bge	00115$
                            267 ;../c16stombs.c:77: return(-1);
   0114 A6 FF         [ 2]  268 	lda	#0xff
   0116 97            [ 1]  269 	tax
   0117 81            [ 6]  270 	rts
   0118                     271 00115$:
                            272 ;../c16stombs.c:79: if(m + l > n)
   0118 C6r00r0D      [ 4]  273 	lda	(___c16stombs_l_196608_78 + 1)
   011B CEr00r0C      [ 4]  274 	ldx	___c16stombs_l_196608_78
   011E CBr00r07      [ 4]  275 	add	(___c16stombs_m_65536_76 + 1)
   0121 B7*09         [ 3]  276 	sta	*(___c16stombs_sloc3_1_0 + 1)
   0123 9F            [ 1]  277 	txa
   0124 C9r00r06      [ 4]  278 	adc	___c16stombs_m_65536_76
   0127 B7*08         [ 3]  279 	sta	*___c16stombs_sloc3_1_0
   0129 55*08         [ 4]  280 	ldhx	*___c16stombs_sloc3_1_0
   012B 3Er00r02      [ 6]  281 	cphx	___c16stombs_PARM_3
   012E 22 3B         [ 3]  282 	bhi	00118$
                            283 ;../c16stombs.c:82: memcpy(s, b, l);
   0130 32r00r04      [ 5]  284 	ldhx	___c16stombs_s_65536_75
   0133 A6r08         [ 2]  285 	lda	#___c16stombs_b_65536_76
   0135 C7r00r01      [ 4]  286 	sta	(___memcpy_PARM_2 + 1)
   0138 A6s00         [ 2]  287 	lda	#>___c16stombs_b_65536_76
   013A C7r00r00      [ 4]  288 	sta	___memcpy_PARM_2
   013D C6r00r0C      [ 4]  289 	lda	___c16stombs_l_196608_78
   0140 C7r00r00      [ 4]  290 	sta	___memcpy_PARM_3
   0143 C6r00r0D      [ 4]  291 	lda	(___c16stombs_l_196608_78 + 1)
   0146 C7r00r01      [ 4]  292 	sta	(___memcpy_PARM_3 + 1)
   0149 9F            [ 1]  293 	txa
   014A 8B            [ 2]  294 	pshh
   014B 88            [ 3]  295 	pulx
   014C CDr00r00      [ 6]  296 	jsr	___memcpy
                            297 ;../c16stombs.c:83: s += l;
   014F 45r00r04      [ 3]  298 	ldhx	#___c16stombs_s_65536_75
   0152 C6r00r0D      [ 4]  299 	lda	(___c16stombs_l_196608_78 + 1)
   0155 EB 01         [ 3]  300 	add	1,x
   0157 E7 01         [ 3]  301 	sta	1,x
   0159 C6r00r0C      [ 4]  302 	lda	___c16stombs_l_196608_78
   015C F9            [ 3]  303 	adc	,x
   015D F7            [ 2]  304 	sta	,x
                            305 ;../c16stombs.c:84: m += l;
   015E B6*08         [ 3]  306 	lda	*___c16stombs_sloc3_1_0
   0160 C7r00r06      [ 4]  307 	sta	___c16stombs_m_65536_76
   0163 B6*09         [ 3]  308 	lda	*(___c16stombs_sloc3_1_0 + 1)
   0165 C7r00r07      [ 4]  309 	sta	(___c16stombs_m_65536_76 + 1)
   0168 CCr00r0B      [ 4]  310 	jmp	00119$
   016B                     311 00118$:
                            312 ;../c16stombs.c:87: return(m);
   016B CEr00r06      [ 4]  313 	ldx	___c16stombs_m_65536_76
   016E C6r00r07      [ 4]  314 	lda	(___c16stombs_m_65536_76 + 1)
                            315 ;../c16stombs.c:88: }
   0171 81            [ 6]  316 	rts
                            317 	.area CSEG    (CODE)
                            318 	.area CONST   (CODE)
                            319 	.area XINIT   (CODE)
                            320 	.area CABS    (ABS,CODE)
