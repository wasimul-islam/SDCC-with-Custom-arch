                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module wctomb
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _wctomb_PARM_2
                             24 	.globl _wctomb
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _wctomb_sloc0_1_0:
   0000                      34 	.ds 2
   0002                      35 _wctomb_sloc1_1_0:
   0002                      36 	.ds 4
   0006                      37 _wctomb_sloc2_1_0:
   0006                      38 	.ds 2
   0008                      39 _wctomb_sloc3_1_0:
   0008                      40 	.ds 1
   0009                      41 _wctomb_sloc4_1_0:
   0009                      42 	.ds 4
                             43 ;--------------------------------------------------------
                             44 ; absolute ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS)
                             47 	.area IABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; absolute external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XABS    (ABS)
                             52 ;--------------------------------------------------------
                             53 ; initialized external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XISEG
                             56 ;--------------------------------------------------------
                             57 ; extended address mode data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG
   0000                      60 _wctomb_PARM_2:
   0000                      61 	.ds 4
   0004                      62 _wctomb_s_65536_36:
   0004                      63 	.ds 2
                             64 ;--------------------------------------------------------
                             65 ; global & static initialisations
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT  (CODE)
                             69 	.area GSFINAL (CODE)
                             70 	.area GSINIT  (CODE)
                             71 ;--------------------------------------------------------
                             72 ; Home
                             73 ;--------------------------------------------------------
                             74 	.area HOME    (CODE)
                             75 	.area HOME    (CODE)
                             76 ;--------------------------------------------------------
                             77 ; code
                             78 ;--------------------------------------------------------
                             79 	.area CSEG    (CODE)
                             80 ;------------------------------------------------------------
                             81 ;Allocation info for local variables in function 'wctomb'
                             82 ;------------------------------------------------------------
                             83 ;wc                        Allocated with name '_wctomb_PARM_2'
                             84 ;s                         Allocated with name '_wctomb_s_65536_36'
                             85 ;sloc0                     Allocated with name '_wctomb_sloc0_1_0'
                             86 ;sloc1                     Allocated with name '_wctomb_sloc1_1_0'
                             87 ;sloc2                     Allocated with name '_wctomb_sloc2_1_0'
                             88 ;sloc3                     Allocated with name '_wctomb_sloc3_1_0'
                             89 ;sloc4                     Allocated with name '_wctomb_sloc4_1_0'
                             90 ;------------------------------------------------------------
                             91 ;../wctomb.c:31: int wctomb(char *s, wchar_t wc)
                             92 ;	-----------------------------------------
                             93 ;	 function wctomb
                             94 ;	-----------------------------------------
                             95 ;	Register assignment is optimal.
                             96 ;	Stack space usage: 0 bytes.
   0000                      97 _wctomb:
   0000 C7r00r05      [ 4]   98 	sta	(_wctomb_s_65536_36 + 1)
   0003 CFr00r04      [ 4]   99 	stx	_wctomb_s_65536_36
                            100 ;../wctomb.c:33: if(!s)
   0006 C6r00r04      [ 4]  101 	lda	_wctomb_s_65536_36
   0009 CAr00r05      [ 4]  102 	ora	(_wctomb_s_65536_36 + 1)
   000C 26 03         [ 3]  103 	bne	00102$
                            104 ;../wctomb.c:34: return(0);
   000E 4F            [ 1]  105 	clra
   000F 97            [ 1]  106 	tax
   0010 81            [ 6]  107 	rts
   0011                     108 00102$:
                            109 ;../wctomb.c:36: if(wc < 0x80)
   0011 C6r00r03      [ 4]  110 	lda	(_wctomb_PARM_2 + 3)
   0014 A0 80         [ 2]  111 	sub	#0x80
   0016 C6r00r02      [ 4]  112 	lda	(_wctomb_PARM_2 + 2)
   0019 A2 00         [ 2]  113 	sbc	#0x00
   001B C6r00r01      [ 4]  114 	lda	(_wctomb_PARM_2 + 1)
   001E A2 00         [ 2]  115 	sbc	#0x00
   0020 C6r00r00      [ 4]  116 	lda	_wctomb_PARM_2
   0023 A2 00         [ 2]  117 	sbc	#0x00
   0025 24 0B         [ 3]  118 	bcc	00117$
                            119 ;../wctomb.c:38: s[0] = wc;
   0027 C6r00r03      [ 4]  120 	lda	(_wctomb_PARM_2 + 3)
   002A 32r00r04      [ 5]  121 	ldhx	_wctomb_s_65536_36
   002D F7            [ 2]  122 	sta	,x
                            123 ;../wctomb.c:39: return(1);
   002E A6 01         [ 2]  124 	lda	#0x01
   0030 5F            [ 1]  125 	clrx
   0031 81            [ 6]  126 	rts
   0032                     127 00117$:
                            128 ;../wctomb.c:44: s[1] = (wc >> 0) & 0x3f | 0x80;
   0032 32r00r04      [ 5]  129 	ldhx	_wctomb_s_65536_36
   0035 35*00         [ 4]  130 	sthx	*_wctomb_sloc0_1_0
                            131 ;../wctomb.c:43: s[0] = (wc >> 6) & 0x1f | 0xc0;
   0037 C6r00r03      [ 4]  132 	lda	(_wctomb_PARM_2 + 3)
   003A CEr00r02      [ 4]  133 	ldx	(_wctomb_PARM_2 + 2)
   003D 54            [ 1]  134 	lsrx
   003E 46            [ 1]  135 	rora
   003F 54            [ 1]  136 	lsrx
   0040 46            [ 1]  137 	rora
   0041 54            [ 1]  138 	lsrx
   0042 46            [ 1]  139 	rora
   0043 54            [ 1]  140 	lsrx
   0044 46            [ 1]  141 	rora
   0045 54            [ 1]  142 	lsrx
   0046 46            [ 1]  143 	rora
   0047 54            [ 1]  144 	lsrx
   0048 46            [ 1]  145 	rora
   0049 87            [ 2]  146 	psha
   004A 8A            [ 3]  147 	pulh
                            148 ;../wctomb.c:41: else if(wc < 0x800)
   004B C6r00r02      [ 4]  149 	lda	(_wctomb_PARM_2 + 2)
   004E A0 08         [ 2]  150 	sub	#0x08
   0050 C6r00r01      [ 4]  151 	lda	(_wctomb_PARM_2 + 1)
   0053 A2 00         [ 2]  152 	sbc	#0x00
   0055 C6r00r00      [ 4]  153 	lda	_wctomb_PARM_2
   0058 A2 00         [ 2]  154 	sbc	#0x00
   005A 24 19         [ 3]  155 	bcc	00114$
                            156 ;../wctomb.c:43: s[0] = (wc >> 6) & 0x1f | 0xc0;
   005C 8B            [ 2]  157 	pshh
   005D 86            [ 3]  158 	pula
   005E A4 1F         [ 2]  159 	and	#0x1f
   0060 AA C0         [ 2]  160 	ora	#0xc0
   0062 32r00r04      [ 5]  161 	ldhx	_wctomb_s_65536_36
   0065 F7            [ 2]  162 	sta	,x
                            163 ;../wctomb.c:44: s[1] = (wc >> 0) & 0x3f | 0x80;
   0066 C6r00r03      [ 4]  164 	lda	(_wctomb_PARM_2 + 3)
   0069 A4 3F         [ 2]  165 	and	#0x3f
   006B AA 80         [ 2]  166 	ora	#0x80
   006D 55*00         [ 4]  167 	ldhx	*_wctomb_sloc0_1_0
   006F E7 01         [ 3]  168 	sta	1,x
                            169 ;../wctomb.c:45: return(2);
   0071 A6 02         [ 2]  170 	lda	#0x02
   0073 5F            [ 1]  171 	clrx
   0074 81            [ 6]  172 	rts
   0075                     173 00114$:
                            174 ;../wctomb.c:47: else if(wc >= 0xd800 && wc < 0xe000) // Unpaired surrogate
   0075 C6r00r02      [ 4]  175 	lda	(_wctomb_PARM_2 + 2)
   0078 A0 D8         [ 2]  176 	sub	#0xd8
   007A C6r00r01      [ 4]  177 	lda	(_wctomb_PARM_2 + 1)
   007D A2 00         [ 2]  178 	sbc	#0x00
   007F C6r00r00      [ 4]  179 	lda	_wctomb_PARM_2
   0082 A2 00         [ 2]  180 	sbc	#0x00
   0084 25 15         [ 3]  181 	bcs	00110$
   0086 C6r00r02      [ 4]  182 	lda	(_wctomb_PARM_2 + 2)
   0089 A0 E0         [ 2]  183 	sub	#0xe0
   008B C6r00r01      [ 4]  184 	lda	(_wctomb_PARM_2 + 1)
   008E A2 00         [ 2]  185 	sbc	#0x00
   0090 C6r00r00      [ 4]  186 	lda	_wctomb_PARM_2
   0093 A2 00         [ 2]  187 	sbc	#0x00
   0095 24 04         [ 3]  188 	bcc	00110$
                            189 ;../wctomb.c:48: return(-1);
   0097 A6 FF         [ 2]  190 	lda	#0xff
   0099 97            [ 1]  191 	tax
   009A 81            [ 6]  192 	rts
   009B                     193 00110$:
                            194 ;../wctomb.c:51: s[0] = (wc >> 12) & 0x0f | 0xe0;
   009B C6r00r02      [ 4]  195 	lda	(_wctomb_PARM_2 + 2)
   009E CEr00r01      [ 4]  196 	ldx	(_wctomb_PARM_2 + 1)
   00A1 54            [ 1]  197 	lsrx
   00A2 46            [ 1]  198 	rora
   00A3 54            [ 1]  199 	lsrx
   00A4 46            [ 1]  200 	rora
   00A5 54            [ 1]  201 	lsrx
   00A6 46            [ 1]  202 	rora
   00A7 54            [ 1]  203 	lsrx
   00A8 46            [ 1]  204 	rora
   00A9 B7*05         [ 3]  205 	sta	*(_wctomb_sloc1_1_0 + 3)
   00AB BF*04         [ 3]  206 	stx	*(_wctomb_sloc1_1_0 + 2)
   00AD CEr00r00      [ 4]  207 	ldx	_wctomb_PARM_2
   00B0 4F            [ 1]  208 	clra
   00B1 54            [ 1]  209 	lsrx
   00B2 46            [ 1]  210 	rora
   00B3 54            [ 1]  211 	lsrx
   00B4 46            [ 1]  212 	rora
   00B5 54            [ 1]  213 	lsrx
   00B6 46            [ 1]  214 	rora
   00B7 54            [ 1]  215 	lsrx
   00B8 46            [ 1]  216 	rora
   00B9 BA*04         [ 3]  217 	ora	*(_wctomb_sloc1_1_0 + 2)
   00BB B7*04         [ 3]  218 	sta	*(_wctomb_sloc1_1_0 + 2)
   00BD BF*03         [ 3]  219 	stx	*(_wctomb_sloc1_1_0 + 1)
   00BF 6E 00*02      [ 4]  220 	mov	#0x00,*_wctomb_sloc1_1_0
                            221 ;../wctomb.c:53: s[2] = (wc >> 0) & 0x3f  | 0x80;
   00C2 C6r00r04      [ 4]  222 	lda	_wctomb_s_65536_36
   00C5 B7*06         [ 3]  223 	sta	*_wctomb_sloc2_1_0
   00C7 C6r00r05      [ 4]  224 	lda	(_wctomb_s_65536_36 + 1)
   00CA B7*07         [ 3]  225 	sta	*(_wctomb_sloc2_1_0 + 1)
                            226 ;../wctomb.c:51: s[0] = (wc >> 12) & 0x0f | 0xe0;
   00CC 4E*05*02      [ 6]  227 	mov	*(_wctomb_sloc1_1_0 + 3),*_wctomb_sloc1_1_0
                            228 ;../wctomb.c:52: s[1] = (wc >> 6) & 0x3f  | 0x80;
   00CF 8B            [ 2]  229 	pshh
   00D0 86            [ 3]  230 	pula
   00D1 A4 3F         [ 2]  231 	and	#0x3f
   00D3 AA 80         [ 2]  232 	ora	#0x80
   00D5 B7*08         [ 3]  233 	sta	*_wctomb_sloc3_1_0
                            234 ;../wctomb.c:49: else if(wc < 0x10000)
   00D7 C6r00r01      [ 4]  235 	lda	(_wctomb_PARM_2 + 1)
   00DA A0 01         [ 2]  236 	sub	#0x01
   00DC C6r00r00      [ 4]  237 	lda	_wctomb_PARM_2
   00DF A2 00         [ 2]  238 	sbc	#0x00
   00E1 24 1F         [ 3]  239 	bcc	00107$
                            240 ;../wctomb.c:51: s[0] = (wc >> 12) & 0x0f | 0xe0;
   00E3 B6*02         [ 3]  241 	lda	*_wctomb_sloc1_1_0
   00E5 A4 0F         [ 2]  242 	and	#0x0f
   00E7 AA E0         [ 2]  243 	ora	#0xe0
   00E9 32r00r04      [ 5]  244 	ldhx	_wctomb_s_65536_36
   00EC F7            [ 2]  245 	sta	,x
                            246 ;../wctomb.c:52: s[1] = (wc >> 6) & 0x3f  | 0x80;
   00ED 55*00         [ 4]  247 	ldhx	*_wctomb_sloc0_1_0
   00EF B6*08         [ 3]  248 	lda	*_wctomb_sloc3_1_0
   00F1 E7 01         [ 3]  249 	sta	1,x
                            250 ;../wctomb.c:53: s[2] = (wc >> 0) & 0x3f  | 0x80;
   00F3 C6r00r03      [ 4]  251 	lda	(_wctomb_PARM_2 + 3)
   00F6 A4 3F         [ 2]  252 	and	#0x3f
   00F8 AA 80         [ 2]  253 	ora	#0x80
   00FA 55*06         [ 4]  254 	ldhx	*_wctomb_sloc2_1_0
   00FC E7 02         [ 3]  255 	sta	2,x
                            256 ;../wctomb.c:54: return(3);
   00FE A6 03         [ 2]  257 	lda	#0x03
   0100 5F            [ 1]  258 	clrx
   0101 81            [ 6]  259 	rts
   0102                     260 00107$:
                            261 ;../wctomb.c:56: else if(wc < 0x110000)
   0102 C6r00r01      [ 4]  262 	lda	(_wctomb_PARM_2 + 1)
   0105 A0 11         [ 2]  263 	sub	#0x11
   0107 C6r00r00      [ 4]  264 	lda	_wctomb_PARM_2
   010A A2 00         [ 2]  265 	sbc	#0x00
   010C 24 3E         [ 3]  266 	bcc	00104$
                            267 ;../wctomb.c:58: s[0] = (wc >> 18) & 0x07 | 0xf0;
   010E C6r00r01      [ 4]  268 	lda	(_wctomb_PARM_2 + 1)
   0111 CEr00r00      [ 4]  269 	ldx	_wctomb_PARM_2
   0114 54            [ 1]  270 	lsrx
   0115 46            [ 1]  271 	rora
   0116 54            [ 1]  272 	lsrx
   0117 46            [ 1]  273 	rora
   0118 B7*0C         [ 3]  274 	sta	*(_wctomb_sloc4_1_0 + 3)
   011A BF*0B         [ 3]  275 	stx	*(_wctomb_sloc4_1_0 + 2)
   011C 6E 00*0A      [ 4]  276 	mov	#0x00,*(_wctomb_sloc4_1_0 + 1)
   011F 6E 00*09      [ 4]  277 	mov	#0x00,*_wctomb_sloc4_1_0
   0122 B6*0C         [ 3]  278 	lda	*(_wctomb_sloc4_1_0 + 3)
   0124 A4 07         [ 2]  279 	and	#0x07
   0126 AA F0         [ 2]  280 	ora	#0xf0
   0128 32r00r04      [ 5]  281 	ldhx	_wctomb_s_65536_36
   012B F7            [ 2]  282 	sta	,x
                            283 ;../wctomb.c:59: s[1] = (wc >> 12) & 0x3f | 0x80;
   012C B6*02         [ 3]  284 	lda	*_wctomb_sloc1_1_0
   012E A4 3F         [ 2]  285 	and	#0x3f
   0130 AA 80         [ 2]  286 	ora	#0x80
   0132 55*00         [ 4]  287 	ldhx	*_wctomb_sloc0_1_0
   0134 E7 01         [ 3]  288 	sta	1,x
                            289 ;../wctomb.c:60: s[2] = (wc >> 6) & 0x3f  | 0x80;
   0136 55*06         [ 4]  290 	ldhx	*_wctomb_sloc2_1_0
   0138 B6*08         [ 3]  291 	lda	*_wctomb_sloc3_1_0
   013A E7 02         [ 3]  292 	sta	2,x
                            293 ;../wctomb.c:61: s[3] = (wc >> 0) & 0x3f  | 0x80;
   013C 32r00r04      [ 5]  294 	ldhx	_wctomb_s_65536_36
   013F C6r00r03      [ 4]  295 	lda	(_wctomb_PARM_2 + 3)
   0142 A4 3F         [ 2]  296 	and	#0x3f
   0144 AA 80         [ 2]  297 	ora	#0x80
   0146 E7 03         [ 3]  298 	sta	3,x
                            299 ;../wctomb.c:62: return(4);
   0148 A6 04         [ 2]  300 	lda	#0x04
   014A 5F            [ 1]  301 	clrx
   014B 81            [ 6]  302 	rts
   014C                     303 00104$:
                            304 ;../wctomb.c:65: return(-1);
   014C A6 FF         [ 2]  305 	lda	#0xff
   014E 97            [ 1]  306 	tax
                            307 ;../wctomb.c:66: }
   014F 81            [ 6]  308 	rts
                            309 	.area CSEG    (CODE)
                            310 	.area CONST   (CODE)
                            311 	.area XINIT   (CODE)
                            312 	.area CABS    (ABS,CODE)
