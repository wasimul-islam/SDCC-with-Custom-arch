                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _memmove
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _memmove_PARM_3
                             24 	.globl _memmove_PARM_2
                             25 	.globl _memmove
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _memmove_sloc0_1_0:
   0000                      35 	.ds 2
   0002                      36 _memmove_sloc1_1_0:
   0002                      37 	.ds 2
   0004                      38 _memmove_sloc2_1_0:
   0004                      39 	.ds 2
   0006                      40 _memmove_sloc3_1_0:
   0006                      41 	.ds 2
                             42 ;--------------------------------------------------------
                             43 ; absolute ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS)
                             46 	.area IABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; initialized external ram data
                             53 ;--------------------------------------------------------
                             54 	.area XISEG
                             55 ;--------------------------------------------------------
                             56 ; extended address mode data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG
   0000                      59 _memmove_PARM_2:
   0000                      60 	.ds 2
   0002                      61 _memmove_PARM_3:
   0002                      62 	.ds 2
   0004                      63 _memmove_dst_65536_26:
   0004                      64 	.ds 2
   0006                      65 _memmove_c_65536_27:
   0006                      66 	.ds 2
                             67 ;--------------------------------------------------------
                             68 ; global & static initialisations
                             69 ;--------------------------------------------------------
                             70 	.area HOME    (CODE)
                             71 	.area GSINIT  (CODE)
                             72 	.area GSFINAL (CODE)
                             73 	.area GSINIT  (CODE)
                             74 ;--------------------------------------------------------
                             75 ; Home
                             76 ;--------------------------------------------------------
                             77 	.area HOME    (CODE)
                             78 	.area HOME    (CODE)
                             79 ;--------------------------------------------------------
                             80 ; code
                             81 ;--------------------------------------------------------
                             82 	.area CSEG    (CODE)
                             83 ;------------------------------------------------------------
                             84 ;Allocation info for local variables in function 'memmove'
                             85 ;------------------------------------------------------------
                             86 ;src                       Allocated with name '_memmove_PARM_2'
                             87 ;size                      Allocated with name '_memmove_PARM_3'
                             88 ;dst                       Allocated with name '_memmove_dst_65536_26'
                             89 ;c                         Allocated with name '_memmove_c_65536_27'
                             90 ;d                         Allocated to registers 
                             91 ;s                         Allocated to registers 
                             92 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                             93 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                             94 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                             95 ;sloc3                     Allocated with name '_memmove_sloc3_1_0'
                             96 ;------------------------------------------------------------
                             97 ;../_memmove.c:35: void *memmove (void *dst, const void *src, size_t size)
                             98 ;	-----------------------------------------
                             99 ;	 function memmove
                            100 ;	-----------------------------------------
                            101 ;	Register assignment is optimal.
                            102 ;	Stack space usage: 0 bytes.
   0000                     103 _memmove:
   0000 C7r00r05      [ 4]  104 	sta	(_memmove_dst_65536_26 + 1)
   0003 CFr00r04      [ 4]  105 	stx	_memmove_dst_65536_26
                            106 ;../_memmove.c:37: size_t c = size;
   0006 32r00r02      [ 5]  107 	ldhx	_memmove_PARM_3
   0009 96r00r06      [ 5]  108 	sthx	_memmove_c_65536_27
                            109 ;../_memmove.c:38: if (c == 0 || dst == src)
   000C C6r00r06      [ 4]  110 	lda	_memmove_c_65536_27
   000F CAr00r07      [ 4]  111 	ora	(_memmove_c_65536_27 + 1)
   0012 27 12         [ 3]  112 	beq	00101$
   0014 C6r00r05      [ 4]  113 	lda	(_memmove_dst_65536_26 + 1)
   0017 C1r00r01      [ 4]  114 	cmp	(_memmove_PARM_2 + 1)
   001A 26 08         [ 3]  115 	bne	00143$
   001C C6r00r04      [ 4]  116 	lda	_memmove_dst_65536_26
   001F C1r00r00      [ 4]  117 	cmp	_memmove_PARM_2
   0022 27 02         [ 3]  118 	beq	00144$
   0024                     119 00143$:
   0024 20 07         [ 3]  120 	bra	00102$
   0026                     121 00144$:
   0026                     122 00101$:
                            123 ;../_memmove.c:39: return dst;
   0026 CEr00r04      [ 4]  124 	ldx	_memmove_dst_65536_26
   0029 C6r00r05      [ 4]  125 	lda	(_memmove_dst_65536_26 + 1)
   002C 81            [ 6]  126 	rts
   002D                     127 00102$:
                            128 ;../_memmove.c:41: char *d = dst;
   002D 32r00r04      [ 5]  129 	ldhx	_memmove_dst_65536_26
   0030 35*00         [ 4]  130 	sthx	*_memmove_sloc0_1_0
                            131 ;../_memmove.c:42: const char *s = src;
   0032 32r00r00      [ 5]  132 	ldhx	_memmove_PARM_2
                            133 ;../_memmove.c:43: if (s < d) {
   0035 75*00         [ 5]  134 	cphx	*_memmove_sloc0_1_0
   0037 24 40         [ 3]  135 	bcc	00119$
                            136 ;../_memmove.c:50: s += c;
   0039 9F            [ 1]  137 	txa
   003A CBr00r07      [ 4]  138 	add	(_memmove_c_65536_27 + 1)
   003D B7*03         [ 3]  139 	sta	*(_memmove_sloc1_1_0 + 1)
   003F 8B            [ 2]  140 	pshh
   0040 86            [ 3]  141 	pula
   0041 C9r00r06      [ 4]  142 	adc	_memmove_c_65536_27
   0044 B7*02         [ 3]  143 	sta	*_memmove_sloc1_1_0
                            144 ;../_memmove.c:51: d += c;
   0046 45r00r06      [ 3]  145 	ldhx	#_memmove_c_65536_27
   0049 B6*01         [ 3]  146 	lda	*(_memmove_sloc0_1_0 + 1)
   004B EB 01         [ 3]  147 	add	1,x
   004D B7*05         [ 3]  148 	sta	*(_memmove_sloc2_1_0 + 1)
   004F B6*00         [ 3]  149 	lda	*_memmove_sloc0_1_0
   0051 F9            [ 3]  150 	adc	,x
   0052 B7*04         [ 3]  151 	sta	*_memmove_sloc2_1_0
                            152 ;../_memmove.c:52: do {
   0054 32r00r06      [ 5]  153 	ldhx	_memmove_c_65536_27
   0057 35*06         [ 4]  154 	sthx	*_memmove_sloc3_1_0
   0059                     155 00104$:
                            156 ;../_memmove.c:53: *--d = *--s;
   0059 55*04         [ 4]  157 	ldhx	*_memmove_sloc2_1_0
   005B AF FF         [ 2]  158 	aix	#-1
   005D 35*04         [ 4]  159 	sthx	*_memmove_sloc2_1_0
   005F 55*02         [ 4]  160 	ldhx	*_memmove_sloc1_1_0
   0061 AF FF         [ 2]  161 	aix	#-1
   0063 35*02         [ 4]  162 	sthx	*_memmove_sloc1_1_0
   0065 55*02         [ 4]  163 	ldhx	*_memmove_sloc1_1_0
   0067 F6            [ 3]  164 	lda	,x
   0068 55*04         [ 4]  165 	ldhx	*_memmove_sloc2_1_0
   006A F7            [ 2]  166 	sta	,x
                            167 ;../_memmove.c:54: } while (--c);
   006B 55*06         [ 4]  168 	ldhx	*_memmove_sloc3_1_0
   006D AF FF         [ 2]  169 	aix	#-1
   006F 35*06         [ 4]  170 	sthx	*_memmove_sloc3_1_0
   0071 B6*07         [ 3]  171 	lda	*(_memmove_sloc3_1_0 + 1)
   0073 BA*06         [ 3]  172 	ora	*_memmove_sloc3_1_0
   0075 26 E2         [ 3]  173 	bne	00104$
   0077 20 2C         [ 3]  174 	bra	00112$
                            175 ;../_memmove.c:59: do {
   0079                     176 00119$:
   0079 35*06         [ 4]  177 	sthx	*_memmove_sloc3_1_0
   007B 4E*00*04      [ 6]  178 	mov	*_memmove_sloc0_1_0,*_memmove_sloc2_1_0
   007E 4E*01*05      [ 6]  179 	mov	*(_memmove_sloc0_1_0 + 1),*(_memmove_sloc2_1_0 + 1)
   0081 32r00r06      [ 5]  180 	ldhx	_memmove_c_65536_27
   0084                     181 00107$:
                            182 ;../_memmove.c:60: *d++ = *s++;
   0084 89            [ 2]  183 	pshx
   0085 8B            [ 2]  184 	pshh
   0086 55*06         [ 4]  185 	ldhx	*_memmove_sloc3_1_0
   0088 F6            [ 3]  186 	lda	,x
   0089 B7*02         [ 3]  187 	sta	*_memmove_sloc1_1_0
   008B AF 01         [ 2]  188 	aix	#1
   008D 35*06         [ 4]  189 	sthx	*_memmove_sloc3_1_0
   008F 8A            [ 3]  190 	pulh
   0090 88            [ 3]  191 	pulx
   0091 89            [ 2]  192 	pshx
   0092 8B            [ 2]  193 	pshh
   0093 55*04         [ 4]  194 	ldhx	*_memmove_sloc2_1_0
   0095 B6*02         [ 3]  195 	lda	*_memmove_sloc1_1_0
   0097 F7            [ 2]  196 	sta	,x
   0098 AF 01         [ 2]  197 	aix	#1
   009A 35*04         [ 4]  198 	sthx	*_memmove_sloc2_1_0
   009C 8A            [ 3]  199 	pulh
   009D 88            [ 3]  200 	pulx
                            201 ;../_memmove.c:61: } while (--c);
   009E AF FF         [ 2]  202 	aix	#-1
   00A0 65 00 00      [ 3]  203 	cphx	#0x00
   00A3 26 DF         [ 3]  204 	bne	00107$
   00A5                     205 00112$:
                            206 ;../_memmove.c:65: return dst;
   00A5 CEr00r04      [ 4]  207 	ldx	_memmove_dst_65536_26
   00A8 C6r00r05      [ 4]  208 	lda	(_memmove_dst_65536_26 + 1)
                            209 ;../_memmove.c:66: }
   00AB 81            [ 6]  210 	rts
                            211 	.area CSEG    (CODE)
                            212 	.area CONST   (CODE)
                            213 	.area XINIT   (CODE)
                            214 	.area CABS    (ABS,CODE)
