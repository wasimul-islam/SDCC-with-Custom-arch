                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _mullonglong
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl __mullonglong_PARM_2
                             24 	.globl __mullonglong_PARM_1
                             25 	.globl __mullonglong
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
   0000                      30 __mullonglong_sloc0_1_0:
   0000                      31 	.ds 1
   0001                      32 __mullonglong_sloc1_1_0:
   0001                      33 	.ds 8
   0009                      34 __mullonglong_sloc2_1_0:
   0009                      35 	.ds 2
   000B                      36 __mullonglong_sloc3_1_0:
   000B                      37 	.ds 8
                             38 ;--------------------------------------------------------
                             39 ; overlayable items in ram
                             40 ;--------------------------------------------------------
                             41 ;--------------------------------------------------------
                             42 ; absolute ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS)
                             45 	.area IABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; absolute external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; initialized external ram data
                             52 ;--------------------------------------------------------
                             53 	.area XISEG
                             54 ;--------------------------------------------------------
                             55 ; extended address mode data
                             56 ;--------------------------------------------------------
                             57 	.area XSEG
   0000                      58 __mullonglong_PARM_1:
   0000                      59 	.ds 8
   0008                      60 __mullonglong_PARM_2:
   0008                      61 	.ds 8
   0010                      62 __mullonglong_ret_65536_2:
   0010                      63 	.ds 8
   0018                      64 __mullonglong_l_196608_4:
   0018                      65 	.ds 1
                             66 ;--------------------------------------------------------
                             67 ; global & static initialisations
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area GSINIT  (CODE)
                             71 	.area GSFINAL (CODE)
                             72 	.area GSINIT  (CODE)
                             73 ;--------------------------------------------------------
                             74 ; Home
                             75 ;--------------------------------------------------------
                             76 	.area HOME    (CODE)
                             77 	.area HOME    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; code
                             80 ;--------------------------------------------------------
                             81 	.area CSEG    (CODE)
                             82 ;------------------------------------------------------------
                             83 ;Allocation info for local variables in function '_mullonglong'
                             84 ;------------------------------------------------------------
                             85 ;sloc0                     Allocated with name '__mullonglong_sloc0_1_0'
                             86 ;sloc1                     Allocated with name '__mullonglong_sloc1_1_0'
                             87 ;sloc2                     Allocated with name '__mullonglong_sloc2_1_0'
                             88 ;sloc3                     Allocated with name '__mullonglong_sloc3_1_0'
                             89 ;ll                        Allocated with name '__mullonglong_PARM_1'
                             90 ;lr                        Allocated with name '__mullonglong_PARM_2'
                             91 ;ret                       Allocated with name '__mullonglong_ret_65536_2'
                             92 ;i                         Allocated to registers 
                             93 ;j                         Allocated to registers 
                             94 ;l                         Allocated with name '__mullonglong_l_196608_4'
                             95 ;r                         Allocated to registers a 
                             96 ;------------------------------------------------------------
                             97 ;../_mullonglong.c:39: long long _mullonglong(long long ll, long long lr) __SDCC_NONBANKED
                             98 ;	-----------------------------------------
                             99 ;	 function _mullonglong
                            100 ;	-----------------------------------------
                            101 ;	Register assignment is optimal.
                            102 ;	Stack space usage: 0 bytes.
   0000                     103 __mullonglong:
                            104 ;../_mullonglong.c:41: unsigned long long ret = 0ull;
   0000 8C            [ 1]  105 	clrh
   0001 5F            [ 1]  106 	clrx
   0002 96r00r10      [ 5]  107 	sthx	__mullonglong_ret_65536_2
   0005 96r00r12      [ 5]  108 	sthx	(__mullonglong_ret_65536_2 + 2)
   0008 96r00r14      [ 5]  109 	sthx	(__mullonglong_ret_65536_2 + 4)
   000B 96r00r16      [ 5]  110 	sthx	(__mullonglong_ret_65536_2 + 6)
                            111 ;../_mullonglong.c:44: for (i = 0; i < sizeof (long long); i++)
   000E BF*00         [ 3]  112 	stx	*__mullonglong_sloc0_1_0
   0010                     113 00106$:
                            114 ;../_mullonglong.c:46: unsigned char l = ll >> (i * 8);
   0010 B6*00         [ 3]  115 	lda	*__mullonglong_sloc0_1_0
   0012 48            [ 1]  116 	lsla	
   0013 48            [ 1]  117 	lsla	
   0014 48            [ 1]  118 	lsla	
   0015 C7r00r00      [ 4]  119 	sta	__rrslonglong_PARM_2
   0018 32r00r00      [ 5]  120 	ldhx	__mullonglong_PARM_1
   001B 96r00r00      [ 5]  121 	sthx	__rrslonglong_PARM_1
   001E 32r00r02      [ 5]  122 	ldhx	(__mullonglong_PARM_1 + 2)
   0021 96r00r02      [ 5]  123 	sthx	(__rrslonglong_PARM_1 + 2)
   0024 32r00r04      [ 5]  124 	ldhx	(__mullonglong_PARM_1 + 4)
   0027 96r00r04      [ 5]  125 	sthx	(__rrslonglong_PARM_1 + 4)
   002A 32r00r06      [ 5]  126 	ldhx	(__mullonglong_PARM_1 + 6)
   002D 96r00r06      [ 5]  127 	sthx	(__rrslonglong_PARM_1 + 6)
   0030 CDr00r00      [ 6]  128 	jsr	__rrslonglong
   0033 B7*08         [ 3]  129 	sta	*(__mullonglong_sloc1_1_0 + 7)
   0035 BF*07         [ 3]  130 	stx	*(__mullonglong_sloc1_1_0 + 6)
   0037 4E*00*06      [ 6]  131 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc1_1_0 + 5)
   003A 4E*00*05      [ 6]  132 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc1_1_0 + 4)
   003D 4E*00*04      [ 6]  133 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc1_1_0 + 3)
   0040 4E*00*03      [ 6]  134 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc1_1_0 + 2)
   0043 4E*00*02      [ 6]  135 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc1_1_0 + 1)
   0046 4E*00*01      [ 6]  136 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc1_1_0
   0049 B6*08         [ 3]  137 	lda	*(__mullonglong_sloc1_1_0 + 7)
   004B C7r00r18      [ 4]  138 	sta	__mullonglong_l_196608_4
                            139 ;../_mullonglong.c:47: for(j = 0; (i + j) < sizeof (long long); j++)
   004E 6E 00*01      [ 4]  140 	mov	#0x00,*__mullonglong_sloc1_1_0
   0051                     141 00104$:
   0051 B6*00         [ 3]  142 	lda	*__mullonglong_sloc0_1_0
   0053 5F            [ 1]  143 	clrx
   0054 4E*01*0A      [ 6]  144 	mov	*__mullonglong_sloc1_1_0,*(__mullonglong_sloc2_1_0 + 1)
   0057 BF*09         [ 3]  145 	stx	*__mullonglong_sloc2_1_0
   0059 BB*0A         [ 3]  146 	add	*(__mullonglong_sloc2_1_0 + 1)
   005B 87            [ 2]  147 	psha
   005C 9F            [ 1]  148 	txa
   005D B9*09         [ 3]  149 	adc	*__mullonglong_sloc2_1_0
   005F 97            [ 1]  150 	tax
   0060 86            [ 3]  151 	pula
   0061 A0 08         [ 2]  152 	sub	#0x08
   0063 9F            [ 1]  153 	txa
   0064 A2 00         [ 2]  154 	sbc	#0x00
   0066 91 03         [ 3]  155 	blt	00132$
   0068 CCr01r21      [ 4]  156 	jmp	00107$
   006B                     157 00132$:
                            158 ;../_mullonglong.c:49: unsigned char r = lr >> (j * 8);
   006B B6*01         [ 3]  159 	lda	*__mullonglong_sloc1_1_0
   006D 48            [ 1]  160 	lsla	
   006E 48            [ 1]  161 	lsla	
   006F 48            [ 1]  162 	lsla	
   0070 C7r00r00      [ 4]  163 	sta	__rrslonglong_PARM_2
   0073 32r00r08      [ 5]  164 	ldhx	__mullonglong_PARM_2
   0076 96r00r00      [ 5]  165 	sthx	__rrslonglong_PARM_1
   0079 32r00r0A      [ 5]  166 	ldhx	(__mullonglong_PARM_2 + 2)
   007C 96r00r02      [ 5]  167 	sthx	(__rrslonglong_PARM_1 + 2)
   007F 32r00r0C      [ 5]  168 	ldhx	(__mullonglong_PARM_2 + 4)
   0082 96r00r04      [ 5]  169 	sthx	(__rrslonglong_PARM_1 + 4)
   0085 32r00r0E      [ 5]  170 	ldhx	(__mullonglong_PARM_2 + 6)
   0088 96r00r06      [ 5]  171 	sthx	(__rrslonglong_PARM_1 + 6)
   008B CDr00r00      [ 6]  172 	jsr	__rrslonglong
   008E B7*12         [ 3]  173 	sta	*(__mullonglong_sloc3_1_0 + 7)
   0090 BF*11         [ 3]  174 	stx	*(__mullonglong_sloc3_1_0 + 6)
   0092 4E*00*10      [ 6]  175 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc3_1_0 + 5)
   0095 4E*00*0F      [ 6]  176 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc3_1_0 + 4)
   0098 4E*00*0E      [ 6]  177 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc3_1_0 + 3)
   009B 4E*00*0D      [ 6]  178 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc3_1_0 + 2)
   009E 4E*00*0C      [ 6]  179 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc3_1_0 + 1)
   00A1 4E*00*0B      [ 6]  180 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc3_1_0
   00A4 B6*12         [ 3]  181 	lda	*(__mullonglong_sloc3_1_0 + 7)
                            182 ;../_mullonglong.c:50: ret += (unsigned long long)((unsigned short)(l * r)) << ((i + j) * 8);
   00A6 CEr00r18      [ 4]  183 	ldx	__mullonglong_l_196608_4
   00A9 42            [ 5]  184 	mul
   00AA 89            [ 2]  185 	pshx
   00AB 8A            [ 3]  186 	pulh
   00AC 97            [ 1]  187 	tax
   00AD CFr00r07      [ 4]  188 	stx	(__rlulonglong_PARM_1 + 7)
   00B0 8B            [ 2]  189 	pshh
   00B1 86            [ 3]  190 	pula
   00B2 C7r00r06      [ 4]  191 	sta	(__rlulonglong_PARM_1 + 6)
   00B5 4F            [ 1]  192 	clra
   00B6 C7r00r05      [ 4]  193 	sta	(__rlulonglong_PARM_1 + 5)
   00B9 C7r00r04      [ 4]  194 	sta	(__rlulonglong_PARM_1 + 4)
   00BC C7r00r03      [ 4]  195 	sta	(__rlulonglong_PARM_1 + 3)
   00BF C7r00r02      [ 4]  196 	sta	(__rlulonglong_PARM_1 + 2)
   00C2 C7r00r01      [ 4]  197 	sta	(__rlulonglong_PARM_1 + 1)
   00C5 C7r00r00      [ 4]  198 	sta	__rlulonglong_PARM_1
   00C8 B6*01         [ 3]  199 	lda	*__mullonglong_sloc1_1_0
   00CA BB*00         [ 3]  200 	add	*__mullonglong_sloc0_1_0
   00CC 48            [ 1]  201 	lsla	
   00CD 48            [ 1]  202 	lsla	
   00CE 48            [ 1]  203 	lsla	
   00CF C7r00r00      [ 4]  204 	sta	__rlulonglong_PARM_2
   00D2 CDr00r00      [ 6]  205 	jsr	__rlulonglong
   00D5 B7*12         [ 3]  206 	sta	*(__mullonglong_sloc3_1_0 + 7)
   00D7 BF*11         [ 3]  207 	stx	*(__mullonglong_sloc3_1_0 + 6)
   00D9 4E*00*10      [ 6]  208 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc3_1_0 + 5)
   00DC 4E*00*0F      [ 6]  209 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc3_1_0 + 4)
   00DF 4E*00*0E      [ 6]  210 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc3_1_0 + 3)
   00E2 4E*00*0D      [ 6]  211 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc3_1_0 + 2)
   00E5 4E*00*0C      [ 6]  212 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc3_1_0 + 1)
   00E8 4E*00*0B      [ 6]  213 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc3_1_0
   00EB 45r00r10      [ 3]  214 	ldhx	#__mullonglong_ret_65536_2
   00EE E6 07         [ 3]  215 	lda	7,x
   00F0 BB*12         [ 3]  216 	add	*(__mullonglong_sloc3_1_0 + 7)
   00F2 E7 07         [ 3]  217 	sta	7,x
   00F4 E6 06         [ 3]  218 	lda	6,x
   00F6 B9*11         [ 3]  219 	adc	*(__mullonglong_sloc3_1_0 + 6)
   00F8 E7 06         [ 3]  220 	sta	6,x
   00FA E6 05         [ 3]  221 	lda	5,x
   00FC B9*10         [ 3]  222 	adc	*(__mullonglong_sloc3_1_0 + 5)
   00FE E7 05         [ 3]  223 	sta	5,x
   0100 E6 04         [ 3]  224 	lda	4,x
   0102 B9*0F         [ 3]  225 	adc	*(__mullonglong_sloc3_1_0 + 4)
   0104 E7 04         [ 3]  226 	sta	4,x
   0106 E6 03         [ 3]  227 	lda	3,x
   0108 B9*0E         [ 3]  228 	adc	*(__mullonglong_sloc3_1_0 + 3)
   010A E7 03         [ 3]  229 	sta	3,x
   010C E6 02         [ 3]  230 	lda	2,x
   010E B9*0D         [ 3]  231 	adc	*(__mullonglong_sloc3_1_0 + 2)
   0110 E7 02         [ 3]  232 	sta	2,x
   0112 E6 01         [ 3]  233 	lda	1,x
   0114 B9*0C         [ 3]  234 	adc	*(__mullonglong_sloc3_1_0 + 1)
   0116 E7 01         [ 3]  235 	sta	1,x
   0118 F6            [ 3]  236 	lda	,x
   0119 B9*0B         [ 3]  237 	adc	*__mullonglong_sloc3_1_0
   011B F7            [ 2]  238 	sta	,x
                            239 ;../_mullonglong.c:47: for(j = 0; (i + j) < sizeof (long long); j++)
   011C 3C*01         [ 5]  240 	inc	*__mullonglong_sloc1_1_0
   011E CCr00r51      [ 4]  241 	jmp	00104$
   0121                     242 00107$:
                            243 ;../_mullonglong.c:44: for (i = 0; i < sizeof (long long); i++)
   0121 3C*00         [ 5]  244 	inc	*__mullonglong_sloc0_1_0
   0123 B6*00         [ 3]  245 	lda	*__mullonglong_sloc0_1_0
   0125 A1 08         [ 2]  246 	cmp	#0x08
   0127 24 03         [ 3]  247 	bcc	00133$
   0129 CCr00r10      [ 4]  248 	jmp	00106$
   012C                     249 00133$:
                            250 ;../_mullonglong.c:54: return(ret);
   012C C6r00r10      [ 4]  251 	lda	__mullonglong_ret_65536_2
   012F B7*00         [ 3]  252 	sta	*___SDCC_hc08_ret7
   0131 C6r00r11      [ 4]  253 	lda	(__mullonglong_ret_65536_2 + 1)
   0134 B7*00         [ 3]  254 	sta	*___SDCC_hc08_ret6
   0136 C6r00r12      [ 4]  255 	lda	(__mullonglong_ret_65536_2 + 2)
   0139 B7*00         [ 3]  256 	sta	*___SDCC_hc08_ret5
   013B C6r00r13      [ 4]  257 	lda	(__mullonglong_ret_65536_2 + 3)
   013E B7*00         [ 3]  258 	sta	*___SDCC_hc08_ret4
   0140 C6r00r14      [ 4]  259 	lda	(__mullonglong_ret_65536_2 + 4)
   0143 B7*00         [ 3]  260 	sta	*___SDCC_hc08_ret3
   0145 C6r00r15      [ 4]  261 	lda	(__mullonglong_ret_65536_2 + 5)
   0148 B7*00         [ 3]  262 	sta	*___SDCC_hc08_ret2
   014A CEr00r16      [ 4]  263 	ldx	(__mullonglong_ret_65536_2 + 6)
   014D C6r00r17      [ 4]  264 	lda	(__mullonglong_ret_65536_2 + 7)
                            265 ;../_mullonglong.c:55: }
   0150 81            [ 6]  266 	rts
                            267 	.area CSEG    (CODE)
                            268 	.area CONST   (CODE)
                            269 	.area XINIT   (CODE)
                            270 	.area CABS    (ABS,CODE)
