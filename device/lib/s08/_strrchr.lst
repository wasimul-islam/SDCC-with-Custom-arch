                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _strrchr
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strrchr_PARM_2
                             24 	.globl _strrchr
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _strrchr_sloc0_1_0:
   0000                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; absolute ram data
                             37 ;--------------------------------------------------------
                             38 	.area IABS    (ABS)
                             39 	.area IABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area XABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; initialized external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XISEG
                             48 ;--------------------------------------------------------
                             49 ; extended address mode data
                             50 ;--------------------------------------------------------
                             51 	.area XSEG
   0000                      52 _strrchr_PARM_2:
   0000                      53 	.ds 2
   0002                      54 _strrchr_start_65536_27:
   0002                      55 	.ds 2
                             56 ;--------------------------------------------------------
                             57 ; global & static initialisations
                             58 ;--------------------------------------------------------
                             59 	.area HOME    (CODE)
                             60 	.area GSINIT  (CODE)
                             61 	.area GSFINAL (CODE)
                             62 	.area GSINIT  (CODE)
                             63 ;--------------------------------------------------------
                             64 ; Home
                             65 ;--------------------------------------------------------
                             66 	.area HOME    (CODE)
                             67 	.area HOME    (CODE)
                             68 ;--------------------------------------------------------
                             69 ; code
                             70 ;--------------------------------------------------------
                             71 	.area CSEG    (CODE)
                             72 ;------------------------------------------------------------
                             73 ;Allocation info for local variables in function 'strrchr'
                             74 ;------------------------------------------------------------
                             75 ;ch                        Allocated with name '_strrchr_PARM_2'
                             76 ;string                    Allocated to registers x h 
                             77 ;start                     Allocated with name '_strrchr_start_65536_27'
                             78 ;sloc0                     Allocated with name '_strrchr_sloc0_1_0'
                             79 ;------------------------------------------------------------
                             80 ;../_strrchr.c:34: char * strrchr ( const char * string, int ch )
                             81 ;	-----------------------------------------
                             82 ;	 function strrchr
                             83 ;	-----------------------------------------
                             84 ;	Register assignment is optimal.
                             85 ;	Stack space usage: 0 bytes.
   0000                      86 _strrchr:
   0000 89            [ 2]   87 	pshx
   0001 97            [ 1]   88 	tax
   0002 8A            [ 3]   89 	pulh
                             90 ;../_strrchr.c:37: const char * start = string;
   0003 96r00r02      [ 5]   91 	sthx	_strrchr_start_65536_27
                             92 ;../_strrchr.c:39: while (*string++)                       /* find end of string */
   0006                      93 00101$:
   0006 F6            [ 3]   94 	lda	,x
   0007 AF 01         [ 2]   95 	aix	#1
   0009 4D            [ 1]   96 	tsta
   000A 26 FA         [ 3]   97 	bne	00101$
                             98 ;../_strrchr.c:42: while (--string != start && *string != ch)
   000C 35*00         [ 4]   99 	sthx	*_strrchr_sloc0_1_0
   000E                     100 00105$:
   000E 55*00         [ 4]  101 	ldhx	*_strrchr_sloc0_1_0
   0010 AF FF         [ 2]  102 	aix	#-1
   0012 35*00         [ 4]  103 	sthx	*_strrchr_sloc0_1_0
   0014 55*00         [ 4]  104 	ldhx	*_strrchr_sloc0_1_0
   0016 FE            [ 3]  105 	ldx	,x
   0017 8C            [ 1]  106 	clrh
   0018 3Er00r00      [ 6]  107 	cphx	_strrchr_PARM_2
   001B 27 03         [ 3]  108 	beq	00140$
   001D 4F            [ 1]  109 	clra
   001E 20 02         [ 3]  110 	bra	00139$
   0020                     111 00140$:
   0020 A6 01         [ 2]  112 	lda	#0x01
   0022                     113 00139$:
   0022 55*00         [ 4]  114 	ldhx	*_strrchr_sloc0_1_0
   0024 3Er00r02      [ 6]  115 	cphx	_strrchr_start_65536_27
   0027 27 03         [ 3]  116 	beq	00107$
   0029 4D            [ 1]  117 	tsta
   002A 27 E2         [ 3]  118 	beq	00105$
   002C                     119 00107$:
                            120 ;../_strrchr.c:45: if (*string == ch)                      /* char found ? */
   002C 4D            [ 1]  121 	tsta
   002D 27 05         [ 3]  122 	beq	00109$
                            123 ;../_strrchr.c:46: return( (char *)string );
   002F BE*00         [ 3]  124 	ldx	*_strrchr_sloc0_1_0
   0031 B6*01         [ 3]  125 	lda	*(_strrchr_sloc0_1_0 + 1)
   0033 81            [ 6]  126 	rts
   0034                     127 00109$:
                            128 ;../_strrchr.c:48: return (NULL) ;
   0034 4F            [ 1]  129 	clra
   0035 97            [ 1]  130 	tax
                            131 ;../_strrchr.c:49: }
   0036 81            [ 6]  132 	rts
                            133 	.area CSEG    (CODE)
                            134 	.area CONST   (CODE)
                            135 	.area XINIT   (CODE)
                            136 	.area CABS    (ABS,CODE)
