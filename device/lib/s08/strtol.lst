                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module strtol
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strtoul
                             24 	.globl _strtol_PARM_3
                             25 	.globl _strtol_PARM_2
                             26 	.globl _strtol
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _strtol_sloc0_1_0:
   0000                      32 	.ds 1
   0001                      33 _strtol_sloc1_1_0:
   0001                      34 	.ds 2
   0003                      35 _strtol_sloc2_1_0:
   0003                      36 	.ds 4
   0007                      37 _strtol_sloc3_1_0:
   0007                      38 	.ds 4
                             39 ;--------------------------------------------------------
                             40 ; overlayable items in ram
                             41 ;--------------------------------------------------------
                             42 ;--------------------------------------------------------
                             43 ; absolute ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS)
                             46 	.area IABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; initialized external ram data
                             53 ;--------------------------------------------------------
                             54 	.area XISEG
                             55 ;--------------------------------------------------------
                             56 ; extended address mode data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG
   0000                      59 _strtol_PARM_2:
   0000                      60 	.ds 2
   0002                      61 _strtol_PARM_3:
   0002                      62 	.ds 2
   0004                      63 _strtol_nptr_65536_56:
   0004                      64 	.ds 2
   0006                      65 _strtol_ptr_65536_57:
   0006                      66 	.ds 2
   0008                      67 _strtol_rptr_65536_57:
   0008                      68 	.ds 2
   000A                      69 _strtol_neg_65536_57:
   000A                      70 	.ds 1
                             71 ;--------------------------------------------------------
                             72 ; global & static initialisations
                             73 ;--------------------------------------------------------
                             74 	.area HOME    (CODE)
                             75 	.area GSINIT  (CODE)
                             76 	.area GSFINAL (CODE)
                             77 	.area GSINIT  (CODE)
                             78 ;--------------------------------------------------------
                             79 ; Home
                             80 ;--------------------------------------------------------
                             81 	.area HOME    (CODE)
                             82 	.area HOME    (CODE)
                             83 ;--------------------------------------------------------
                             84 ; code
                             85 ;--------------------------------------------------------
                             86 	.area CSEG    (CODE)
                             87 ;------------------------------------------------------------
                             88 ;Allocation info for local variables in function 'strtol'
                             89 ;------------------------------------------------------------
                             90 ;sloc0                     Allocated with name '_strtol_sloc0_1_0'
                             91 ;sloc1                     Allocated with name '_strtol_sloc1_1_0'
                             92 ;sloc2                     Allocated with name '_strtol_sloc2_1_0'
                             93 ;sloc3                     Allocated with name '_strtol_sloc3_1_0'
                             94 ;endptr                    Allocated with name '_strtol_PARM_2'
                             95 ;base                      Allocated with name '_strtol_PARM_3'
                             96 ;nptr                      Allocated with name '_strtol_nptr_65536_56'
                             97 ;__1310720007              Allocated to registers 
                             98 ;__1310720004              Allocated to registers 
                             99 ;ptr                       Allocated with name '_strtol_ptr_65536_57'
                            100 ;rptr                      Allocated with name '_strtol_rptr_65536_57'
                            101 ;u                         Allocated with name '_strtol_u_65536_57'
                            102 ;neg                       Allocated with name '_strtol_neg_65536_57'
                            103 ;__1310720005              Allocated to registers 
                            104 ;c                         Allocated to registers 
                            105 ;__1310720008              Allocated to registers 
                            106 ;c                         Allocated to registers 
                            107 ;------------------------------------------------------------
                            108 ;../strtol.c:38: long int strtol(const char *nptr, char **endptr, int base)
                            109 ;	-----------------------------------------
                            110 ;	 function strtol
                            111 ;	-----------------------------------------
                            112 ;	Register assignment might be sub-optimal.
                            113 ;	Stack space usage: 0 bytes.
   0000                     114 _strtol:
   0000 C7r00r05      [ 4]  115 	sta	(_strtol_nptr_65536_56 + 1)
   0003 CFr00r04      [ 4]  116 	stx	_strtol_nptr_65536_56
                            117 ;../strtol.c:45: while (isblank (*ptr))
   0006 32r00r04      [ 5]  118 	ldhx	_strtol_nptr_65536_56
   0009                     119 00101$:
   0009 F6            [ 3]  120 	lda	,x
   000A B7*00         [ 3]  121 	sta	*_strtol_sloc0_1_0
   000C B6*00         [ 3]  122 	lda	*_strtol_sloc0_1_0
                            123 ;../strtol.c:46: ptr++;
   000E 89            [ 2]  124 	pshx
   000F 8B            [ 2]  125 	pshh
   0010 AF 01         [ 2]  126 	aix	#1
   0012 35*01         [ 4]  127 	sthx	*_strtol_sloc1_1_0
   0014 8A            [ 3]  128 	pulh
   0015 88            [ 3]  129 	pulx
                            130 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   0016 41 20 04      [ 4]  131 	cbeqa	#0x20,00132$
   0019 A1 09         [ 2]  132 	cmp	#0x09
   001B 26 04         [ 3]  133 	bne	00158$
   001D                     134 00132$:
                            135 ;../strtol.c:46: ptr++;
   001D 55*01         [ 4]  136 	ldhx	*_strtol_sloc1_1_0
   001F 20 E8         [ 3]  137 	bra	00101$
   0021                     138 00158$:
   0021 96r00r06      [ 5]  139 	sthx	_strtol_ptr_65536_57
                            140 ;../strtol.c:50: if (*ptr == '-')
   0024 B6*00         [ 3]  141 	lda	*_strtol_sloc0_1_0
   0026 A1 2D         [ 2]  142 	cmp	#0x2d
   0028 26 11         [ 3]  143 	bne	00105$
                            144 ;../strtol.c:52: neg = true;
   002A A6 01         [ 2]  145 	lda	#0x01
   002C C7r00r0A      [ 4]  146 	sta	_strtol_neg_65536_57
                            147 ;../strtol.c:53: ptr++;
   002F B6*01         [ 3]  148 	lda	*_strtol_sloc1_1_0
   0031 C7r00r06      [ 4]  149 	sta	_strtol_ptr_65536_57
   0034 B6*02         [ 3]  150 	lda	*(_strtol_sloc1_1_0 + 1)
   0036 C7r00r07      [ 4]  151 	sta	(_strtol_ptr_65536_57 + 1)
   0039 20 04         [ 3]  152 	bra	00106$
   003B                     153 00105$:
                            154 ;../strtol.c:56: neg = false;
   003B 4F            [ 1]  155 	clra
   003C C7r00r0A      [ 4]  156 	sta	_strtol_neg_65536_57
   003F                     157 00106$:
                            158 ;../strtol.c:62: *endptr = nptr;
   003F 32r00r00      [ 5]  159 	ldhx	_strtol_PARM_2
   0042 35*01         [ 4]  160 	sthx	*_strtol_sloc1_1_0
                            161 ;../strtol.c:59: if (neg && (isblank (*ptr) || *ptr == '-' || *ptr == '+'))
   0044 C6r00r0A      [ 4]  162 	lda	_strtol_neg_65536_57
   0047 27 2E         [ 3]  163 	beq	00110$
   0049 32r00r06      [ 5]  164 	ldhx	_strtol_ptr_65536_57
   004C F6            [ 3]  165 	lda	,x
   004D 97            [ 1]  166 	tax
                            167 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   004E A3 20         [ 2]  168 	cpx	#0x20
   0050 27 0B         [ 3]  169 	beq	00109$
   0052 A3 09         [ 2]  170 	cpx	#0x09
   0054 27 07         [ 3]  171 	beq	00109$
                            172 ;../strtol.c:59: if (neg && (isblank (*ptr) || *ptr == '-' || *ptr == '+'))
   0056 41 2D 04      [ 4]  173 	cbeqa	#0x2d,00109$
   0059 A1 2B         [ 2]  174 	cmp	#0x2b
   005B 26 1A         [ 3]  175 	bne	00110$
   005D                     176 00109$:
                            177 ;../strtol.c:61: if (endptr)
   005D C6r00r00      [ 4]  178 	lda	_strtol_PARM_2
   0060 CAr00r01      [ 4]  179 	ora	(_strtol_PARM_2 + 1)
   0063 27 0B         [ 3]  180 	beq	00108$
                            181 ;../strtol.c:62: *endptr = nptr;
   0065 55*01         [ 4]  182 	ldhx	*_strtol_sloc1_1_0
   0067 C6r00r04      [ 4]  183 	lda	_strtol_nptr_65536_56
   006A F7            [ 2]  184 	sta	,x
   006B C6r00r05      [ 4]  185 	lda	(_strtol_nptr_65536_56 + 1)
   006E E7 01         [ 3]  186 	sta	1,x
   0070                     187 00108$:
                            188 ;../strtol.c:63: return (0);
   0070 4F            [ 1]  189 	clra
   0071 97            [ 1]  190 	tax
   0072 B7*00         [ 3]  191 	sta	*___SDCC_hc08_ret2
   0074 B7*00         [ 3]  192 	sta	*___SDCC_hc08_ret3
   0076 81            [ 6]  193 	rts
   0077                     194 00110$:
                            195 ;../strtol.c:66: u = strtoul(ptr, &rptr, base);
   0077 45r00r08      [ 3]  196 	ldhx	#_strtol_rptr_65536_57
   007A 96r00r00      [ 5]  197 	sthx	_strtoul_PARM_2
   007D 32r00r02      [ 5]  198 	ldhx	_strtol_PARM_3
   0080 96r00r00      [ 5]  199 	sthx	_strtoul_PARM_3
   0083 C6r00r07      [ 4]  200 	lda	(_strtol_ptr_65536_57 + 1)
   0086 CEr00r06      [ 4]  201 	ldx	_strtol_ptr_65536_57
   0089 CDr00r00      [ 6]  202 	jsr	_strtoul
   008C B7*06         [ 3]  203 	sta	*(_strtol_sloc2_1_0 + 3)
   008E BF*05         [ 3]  204 	stx	*(_strtol_sloc2_1_0 + 2)
   0090 4E*00*04      [ 6]  205 	mov	*___SDCC_hc08_ret2,*(_strtol_sloc2_1_0 + 1)
   0093 4E*00*03      [ 6]  206 	mov	*___SDCC_hc08_ret3,*_strtol_sloc2_1_0
                            207 ;../strtol.c:69: if (rptr == ptr)
   0096 C6r00r09      [ 4]  208 	lda	(_strtol_rptr_65536_57 + 1)
   0099 C1r00r07      [ 4]  209 	cmp	(_strtol_ptr_65536_57 + 1)
   009C 26 08         [ 3]  210 	bne	00234$
   009E C6r00r08      [ 4]  211 	lda	_strtol_rptr_65536_57
   00A1 C1r00r06      [ 4]  212 	cmp	_strtol_ptr_65536_57
   00A4 27 02         [ 3]  213 	beq	00235$
   00A6                     214 00234$:
   00A6 20 1A         [ 3]  215 	bra	00117$
   00A8                     216 00235$:
                            217 ;../strtol.c:71: if (endptr)
   00A8 C6r00r00      [ 4]  218 	lda	_strtol_PARM_2
   00AB CAr00r01      [ 4]  219 	ora	(_strtol_PARM_2 + 1)
   00AE 27 0B         [ 3]  220 	beq	00115$
                            221 ;../strtol.c:72: *endptr = nptr;
   00B0 55*01         [ 4]  222 	ldhx	*_strtol_sloc1_1_0
   00B2 C6r00r04      [ 4]  223 	lda	_strtol_nptr_65536_56
   00B5 F7            [ 2]  224 	sta	,x
   00B6 C6r00r05      [ 4]  225 	lda	(_strtol_nptr_65536_56 + 1)
   00B9 E7 01         [ 3]  226 	sta	1,x
   00BB                     227 00115$:
                            228 ;../strtol.c:73: return (0);
   00BB 4F            [ 1]  229 	clra
   00BC 97            [ 1]  230 	tax
   00BD B7*00         [ 3]  231 	sta	*___SDCC_hc08_ret2
   00BF B7*00         [ 3]  232 	sta	*___SDCC_hc08_ret3
   00C1 81            [ 6]  233 	rts
   00C2                     234 00117$:
                            235 ;../strtol.c:76: if (endptr)
   00C2 C6r00r00      [ 4]  236 	lda	_strtol_PARM_2
   00C5 CAr00r01      [ 4]  237 	ora	(_strtol_PARM_2 + 1)
   00C8 27 0B         [ 3]  238 	beq	00119$
                            239 ;../strtol.c:77: *endptr = rptr;
   00CA 55*01         [ 4]  240 	ldhx	*_strtol_sloc1_1_0
   00CC C6r00r08      [ 4]  241 	lda	_strtol_rptr_65536_57
   00CF F7            [ 2]  242 	sta	,x
   00D0 C6r00r09      [ 4]  243 	lda	(_strtol_rptr_65536_57 + 1)
   00D3 E7 01         [ 3]  244 	sta	1,x
   00D5                     245 00119$:
                            246 ;../strtol.c:80: if (!neg && u > LONG_MAX)
   00D5 C6r00r0A      [ 4]  247 	lda	_strtol_neg_65536_57
   00D8 26 21         [ 3]  248 	bne	00124$
   00DA A6 FF         [ 2]  249 	lda	#0xff
   00DC B0*06         [ 3]  250 	sub	*(_strtol_sloc2_1_0 + 3)
   00DE A6 FF         [ 2]  251 	lda	#0xff
   00E0 B2*05         [ 3]  252 	sbc	*(_strtol_sloc2_1_0 + 2)
   00E2 A6 FF         [ 2]  253 	lda	#0xff
   00E4 B2*04         [ 3]  254 	sbc	*(_strtol_sloc2_1_0 + 1)
   00E6 A6 7F         [ 2]  255 	lda	#0x7f
   00E8 B2*03         [ 3]  256 	sbc	*_strtol_sloc2_1_0
   00EA 24 0F         [ 3]  257 	bcc	00124$
                            258 ;../strtol.c:82: errno = ERANGE;
   00EC 45 00 22      [ 3]  259 	ldhx	#0x0022
   00EF 96r00r00      [ 5]  260 	sthx	_errno
                            261 ;../strtol.c:83: return (LONG_MAX);
   00F2 A6 FF         [ 2]  262 	lda	#0xff
   00F4 97            [ 1]  263 	tax
   00F5 B7*00         [ 3]  264 	sta	*___SDCC_hc08_ret2
   00F7 6E 7F*00      [ 4]  265 	mov	#0x7f,*___SDCC_hc08_ret3
   00FA 81            [ 6]  266 	rts
   00FB                     267 00124$:
                            268 ;../strtol.c:85: else if (neg && u > -LONG_MIN)
   00FB C6r00r0A      [ 4]  269 	lda	_strtol_neg_65536_57
   00FE 27 1D         [ 3]  270 	beq	00125$
   0100 4F            [ 1]  271 	clra
   0101 B0*06         [ 3]  272 	sub	*(_strtol_sloc2_1_0 + 3)
   0103 4F            [ 1]  273 	clra
   0104 B2*05         [ 3]  274 	sbc	*(_strtol_sloc2_1_0 + 2)
   0106 4F            [ 1]  275 	clra
   0107 B2*04         [ 3]  276 	sbc	*(_strtol_sloc2_1_0 + 1)
   0109 A6 80         [ 2]  277 	lda	#0x80
   010B B2*03         [ 3]  278 	sbc	*_strtol_sloc2_1_0
   010D 24 0E         [ 3]  279 	bcc	00125$
                            280 ;../strtol.c:87: errno = ERANGE;
   010F 45 00 22      [ 3]  281 	ldhx	#0x0022
   0112 96r00r00      [ 5]  282 	sthx	_errno
                            283 ;../strtol.c:88: return (LONG_MIN);
   0115 4F            [ 1]  284 	clra
   0116 97            [ 1]  285 	tax
   0117 B7*00         [ 3]  286 	sta	*___SDCC_hc08_ret2
   0119 6E 80*00      [ 4]  287 	mov	#0x80,*___SDCC_hc08_ret3
   011C 81            [ 6]  288 	rts
   011D                     289 00125$:
                            290 ;../strtol.c:91: return (neg ? -u : u);
   011D C6r00r0A      [ 4]  291 	lda	_strtol_neg_65536_57
   0120 27 16         [ 3]  292 	beq	00137$
   0122 4F            [ 1]  293 	clra
   0123 B0*06         [ 3]  294 	sub	*(_strtol_sloc2_1_0 + 3)
   0125 B7*0A         [ 3]  295 	sta	*(_strtol_sloc3_1_0 + 3)
   0127 4F            [ 1]  296 	clra
   0128 B2*05         [ 3]  297 	sbc	*(_strtol_sloc2_1_0 + 2)
   012A B7*09         [ 3]  298 	sta	*(_strtol_sloc3_1_0 + 2)
   012C 4F            [ 1]  299 	clra
   012D B2*04         [ 3]  300 	sbc	*(_strtol_sloc2_1_0 + 1)
   012F B7*08         [ 3]  301 	sta	*(_strtol_sloc3_1_0 + 1)
   0131 4F            [ 1]  302 	clra
   0132 B2*03         [ 3]  303 	sbc	*_strtol_sloc2_1_0
   0134 B7*07         [ 3]  304 	sta	*_strtol_sloc3_1_0
   0136 20 0C         [ 3]  305 	bra	00138$
   0138                     306 00137$:
   0138 4E*03*07      [ 6]  307 	mov	*_strtol_sloc2_1_0,*_strtol_sloc3_1_0
   013B 4E*04*08      [ 6]  308 	mov	*(_strtol_sloc2_1_0 + 1),*(_strtol_sloc3_1_0 + 1)
   013E 4E*05*09      [ 6]  309 	mov	*(_strtol_sloc2_1_0 + 2),*(_strtol_sloc3_1_0 + 2)
   0141 4E*06*0A      [ 6]  310 	mov	*(_strtol_sloc2_1_0 + 3),*(_strtol_sloc3_1_0 + 3)
   0144                     311 00138$:
   0144 4E*07*00      [ 6]  312 	mov	*_strtol_sloc3_1_0,*___SDCC_hc08_ret3
   0147 4E*08*00      [ 6]  313 	mov	*(_strtol_sloc3_1_0 + 1),*___SDCC_hc08_ret2
   014A BE*09         [ 3]  314 	ldx	*(_strtol_sloc3_1_0 + 2)
   014C B6*0A         [ 3]  315 	lda	*(_strtol_sloc3_1_0 + 3)
                            316 ;../strtol.c:92: }
   014E 81            [ 6]  317 	rts
                            318 	.area CSEG    (CODE)
                            319 	.area CONST   (CODE)
                            320 	.area XINIT   (CODE)
                            321 	.area CABS    (ABS,CODE)
