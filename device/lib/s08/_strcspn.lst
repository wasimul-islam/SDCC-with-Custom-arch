                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _strcspn
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strchr
                             24 	.globl _strcspn_PARM_2
                             25 	.globl _strcspn
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
   0000                      30 _strcspn_count_65536_27:
   0000                      31 	.ds 2
   0002                      32 _strcspn_sloc0_1_0:
   0002                      33 	.ds 2
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in ram
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; absolute ram data
                             39 ;--------------------------------------------------------
                             40 	.area IABS    (ABS)
                             41 	.area IABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; initialized external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XISEG
                             50 ;--------------------------------------------------------
                             51 ; extended address mode data
                             52 ;--------------------------------------------------------
                             53 	.area XSEG
   0000                      54 _strcspn_PARM_2:
   0000                      55 	.ds 2
                             56 ;--------------------------------------------------------
                             57 ; global & static initialisations
                             58 ;--------------------------------------------------------
                             59 	.area HOME    (CODE)
                             60 	.area GSINIT  (CODE)
                             61 	.area GSFINAL (CODE)
                             62 	.area GSINIT  (CODE)
                             63 ;--------------------------------------------------------
                             64 ; Home
                             65 ;--------------------------------------------------------
                             66 	.area HOME    (CODE)
                             67 	.area HOME    (CODE)
                             68 ;--------------------------------------------------------
                             69 ; code
                             70 ;--------------------------------------------------------
                             71 	.area CSEG    (CODE)
                             72 ;------------------------------------------------------------
                             73 ;Allocation info for local variables in function 'strcspn'
                             74 ;------------------------------------------------------------
                             75 ;count                     Allocated with name '_strcspn_count_65536_27'
                             76 ;ch                        Allocated to registers a 
                             77 ;sloc0                     Allocated with name '_strcspn_sloc0_1_0'
                             78 ;control                   Allocated with name '_strcspn_PARM_2'
                             79 ;string                    Allocated to registers 
                             80 ;------------------------------------------------------------
                             81 ;../_strcspn.c:31: size_t strcspn ( const char * string, const char * control )
                             82 ;	-----------------------------------------
                             83 ;	 function strcspn
                             84 ;	-----------------------------------------
                             85 ;	Register assignment is optimal.
                             86 ;	Stack space usage: 0 bytes.
   0000                      87 _strcspn:
   0000 B7*03         [ 3]   88 	sta	*(_strcspn_sloc0_1_0 + 1)
   0002 BF*02         [ 3]   89 	stx	*_strcspn_sloc0_1_0
                             90 ;../_strcspn.c:36: while (ch = *string) {
   0004 8C            [ 1]   91 	clrh
   0005 5F            [ 1]   92 	clrx
   0006 35*00         [ 4]   93 	sthx	*_strcspn_count_65536_27
   0008                      94 00104$:
   0008 55*02         [ 4]   95 	ldhx	*_strcspn_sloc0_1_0
   000A FE            [ 3]   96 	ldx	,x
   000B 9F            [ 1]   97 	txa
   000C 5D            [ 1]   98 	tstx
   000D 27 24         [ 3]   99 	beq	00106$
                            100 ;../_strcspn.c:37: if (strchr(control,ch))
   000F C7r00r01      [ 4]  101 	sta	(_strchr_PARM_2 + 1)
   0012 5F            [ 1]  102 	clrx
   0013 CFr00r00      [ 4]  103 	stx	_strchr_PARM_2
   0016 C6r00r01      [ 4]  104 	lda	(_strcspn_PARM_2 + 1)
   0019 CEr00r00      [ 4]  105 	ldx	_strcspn_PARM_2
   001C CDr00r00      [ 6]  106 	jsr	_strchr
   001F 4D            [ 1]  107 	tsta
   0020 26 01         [ 3]  108 	bne	00126$
   0022 5D            [ 1]  109 	tstx
   0023                     110 00126$:
   0023 26 0E         [ 3]  111 	bne	00106$
                            112 ;../_strcspn.c:40: count++;
   0025 55*00         [ 4]  113 	ldhx	*_strcspn_count_65536_27
   0027 AF 01         [ 2]  114 	aix	#1
   0029 35*00         [ 4]  115 	sthx	*_strcspn_count_65536_27
                            116 ;../_strcspn.c:41: string++;
   002B 55*02         [ 4]  117 	ldhx	*_strcspn_sloc0_1_0
   002D AF 01         [ 2]  118 	aix	#1
   002F 35*02         [ 4]  119 	sthx	*_strcspn_sloc0_1_0
   0031 20 D5         [ 3]  120 	bra	00104$
   0033                     121 00106$:
                            122 ;../_strcspn.c:44: return count;
   0033 BE*00         [ 3]  123 	ldx	*_strcspn_count_65536_27
   0035 B6*01         [ 3]  124 	lda	*(_strcspn_count_65536_27 + 1)
                            125 ;../_strcspn.c:45: }  
   0037 81            [ 6]  126 	rts
                            127 	.area CSEG    (CODE)
                            128 	.area CONST   (CODE)
                            129 	.area XINIT   (CODE)
                            130 	.area CABS    (ABS,CODE)
