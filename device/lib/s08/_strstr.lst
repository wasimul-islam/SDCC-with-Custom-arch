                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _strstr
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strstr_PARM_2
                             24 	.globl _strstr
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _strstr_sloc0_1_0:
   0000                      34 	.ds 2
   0002                      35 _strstr_sloc1_1_0:
   0002                      36 	.ds 1
   0003                      37 _strstr_sloc2_1_0:
   0003                      38 	.ds 2
   0005                      39 _strstr_sloc3_1_0:
   0005                      40 	.ds 2
   0007                      41 _strstr_sloc4_1_0:
   0007                      42 	.ds 2
   0009                      43 _strstr_sloc5_1_0:
   0009                      44 	.ds 2
                             45 ;--------------------------------------------------------
                             46 ; absolute ram data
                             47 ;--------------------------------------------------------
                             48 	.area IABS    (ABS)
                             49 	.area IABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; absolute external ram data
                             52 ;--------------------------------------------------------
                             53 	.area XABS    (ABS)
                             54 ;--------------------------------------------------------
                             55 ; initialized external ram data
                             56 ;--------------------------------------------------------
                             57 	.area XISEG
                             58 ;--------------------------------------------------------
                             59 ; extended address mode data
                             60 ;--------------------------------------------------------
                             61 	.area XSEG
   0000                      62 _strstr_PARM_2:
   0000                      63 	.ds 2
   0002                      64 _strstr_cp_65536_27:
   0002                      65 	.ds 2
                             66 ;--------------------------------------------------------
                             67 ; global & static initialisations
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area GSINIT  (CODE)
                             71 	.area GSFINAL (CODE)
                             72 	.area GSINIT  (CODE)
                             73 ;--------------------------------------------------------
                             74 ; Home
                             75 ;--------------------------------------------------------
                             76 	.area HOME    (CODE)
                             77 	.area HOME    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; code
                             80 ;--------------------------------------------------------
                             81 	.area CSEG    (CODE)
                             82 ;------------------------------------------------------------
                             83 ;Allocation info for local variables in function 'strstr'
                             84 ;------------------------------------------------------------
                             85 ;str2                      Allocated with name '_strstr_PARM_2'
                             86 ;str1                      Allocated to registers x h 
                             87 ;cp                        Allocated with name '_strstr_cp_65536_27'
                             88 ;s1                        Allocated to registers 
                             89 ;s2                        Allocated to registers 
                             90 ;sloc0                     Allocated with name '_strstr_sloc0_1_0'
                             91 ;sloc1                     Allocated with name '_strstr_sloc1_1_0'
                             92 ;sloc2                     Allocated with name '_strstr_sloc2_1_0'
                             93 ;sloc3                     Allocated with name '_strstr_sloc3_1_0'
                             94 ;sloc4                     Allocated with name '_strstr_sloc4_1_0'
                             95 ;sloc5                     Allocated with name '_strstr_sloc5_1_0'
                             96 ;------------------------------------------------------------
                             97 ;../_strstr.c:31: char *strstr ( const char *str1, const char *str2 )
                             98 ;	-----------------------------------------
                             99 ;	 function strstr
                            100 ;	-----------------------------------------
                            101 ;	Register assignment is optimal.
                            102 ;	Stack space usage: 0 bytes.
   0000                     103 _strstr:
   0000 89            [ 2]  104 	pshx
   0001 97            [ 1]  105 	tax
   0002 8A            [ 3]  106 	pulh
                            107 ;../_strstr.c:33: const char *cp = str1;
   0003 96r00r02      [ 5]  108 	sthx	_strstr_cp_65536_27
                            109 ;../_strstr.c:37: if (!*str2)
   0006 C6r00r00      [ 4]  110 	lda	_strstr_PARM_2
   0009 B7*00         [ 3]  111 	sta	*_strstr_sloc0_1_0
   000B C6r00r01      [ 4]  112 	lda	(_strstr_PARM_2 + 1)
   000E B7*01         [ 3]  113 	sta	*(_strstr_sloc0_1_0 + 1)
   0010 89            [ 2]  114 	pshx
   0011 8B            [ 2]  115 	pshh
   0012 55*00         [ 4]  116 	ldhx	*_strstr_sloc0_1_0
   0014 F6            [ 3]  117 	lda	,x
   0015 8A            [ 3]  118 	pulh
   0016 88            [ 3]  119 	pulx
   0017 26 05         [ 3]  120 	bne	00122$
                            121 ;../_strstr.c:38: return ((char*)str1);
   0019 89            [ 2]  122 	pshx
   001A 8B            [ 2]  123 	pshh
   001B 88            [ 3]  124 	pulx
   001C 86            [ 3]  125 	pula
   001D 81            [ 6]  126 	rts
                            127 ;../_strstr.c:40: while (*cp)
   001E                     128 00122$:
   001E 35*03         [ 4]  129 	sthx	*_strstr_sloc2_1_0
   0020                     130 00110$:
   0020 55*03         [ 4]  131 	ldhx	*_strstr_sloc2_1_0
   0022 F6            [ 3]  132 	lda	,x
   0023 27 5A         [ 3]  133 	beq	00112$
                            134 ;../_strstr.c:43: s2 = str2;
   0025 4E*00*05      [ 6]  135 	mov	*_strstr_sloc0_1_0,*_strstr_sloc3_1_0
   0028 4E*01*06      [ 6]  136 	mov	*(_strstr_sloc0_1_0 + 1),*(_strstr_sloc3_1_0 + 1)
                            137 ;../_strstr.c:45: while (*s1 && *s2 && !(*s1-*s2))
   002B 4E*03*07      [ 6]  138 	mov	*_strstr_sloc2_1_0,*_strstr_sloc4_1_0
   002E 4E*04*08      [ 6]  139 	mov	*(_strstr_sloc2_1_0 + 1),*(_strstr_sloc4_1_0 + 1)
   0031                     140 00105$:
   0031 55*07         [ 4]  141 	ldhx	*_strstr_sloc4_1_0
   0033 F6            [ 3]  142 	lda	,x
   0034 55*05         [ 4]  143 	ldhx	*_strstr_sloc3_1_0
   0036 FE            [ 3]  144 	ldx	,x
   0037 BF*02         [ 3]  145 	stx	*_strstr_sloc1_1_0
   0039 4D            [ 1]  146 	tsta
   003A 27 26         [ 3]  147 	beq	00107$
   003C 3D*02         [ 4]  148 	tst	*_strstr_sloc1_1_0
   003E 27 22         [ 3]  149 	beq	00107$
   0040 5F            [ 1]  150 	clrx
   0041 4E*02*0A      [ 6]  151 	mov	*_strstr_sloc1_1_0,*(_strstr_sloc5_1_0 + 1)
   0044 BF*09         [ 3]  152 	stx	*_strstr_sloc5_1_0
   0046 B0*0A         [ 3]  153 	sub	*(_strstr_sloc5_1_0 + 1)
   0048 87            [ 2]  154 	psha
   0049 9F            [ 1]  155 	txa
   004A B2*09         [ 3]  156 	sbc	*_strstr_sloc5_1_0
   004C 97            [ 1]  157 	tax
   004D 86            [ 3]  158 	pula
   004E 4D            [ 1]  159 	tsta
   004F 26 01         [ 3]  160 	bne	00160$
   0051 5D            [ 1]  161 	tstx
   0052                     162 00160$:
   0052 26 0E         [ 3]  163 	bne	00107$
                            164 ;../_strstr.c:46: s1++, s2++;
   0054 55*07         [ 4]  165 	ldhx	*_strstr_sloc4_1_0
   0056 AF 01         [ 2]  166 	aix	#1
   0058 35*07         [ 4]  167 	sthx	*_strstr_sloc4_1_0
   005A 55*05         [ 4]  168 	ldhx	*_strstr_sloc3_1_0
   005C AF 01         [ 2]  169 	aix	#1
   005E 35*05         [ 4]  170 	sthx	*_strstr_sloc3_1_0
   0060 20 CF         [ 3]  171 	bra	00105$
   0062                     172 00107$:
                            173 ;../_strstr.c:48: if (!*s2)
   0062 3D*02         [ 4]  174 	tst	*_strstr_sloc1_1_0
   0064 26 07         [ 3]  175 	bne	00109$
                            176 ;../_strstr.c:49: return ((char*)cp);
   0066 CEr00r02      [ 4]  177 	ldx	_strstr_cp_65536_27
   0069 C6r00r03      [ 4]  178 	lda	(_strstr_cp_65536_27 + 1)
   006C 81            [ 6]  179 	rts
   006D                     180 00109$:
                            181 ;../_strstr.c:51: cp++;
   006D 55*03         [ 4]  182 	ldhx	*_strstr_sloc2_1_0
   006F AF 01         [ 2]  183 	aix	#1
   0071 35*03         [ 4]  184 	sthx	*_strstr_sloc2_1_0
   0073 B6*03         [ 3]  185 	lda	*_strstr_sloc2_1_0
   0075 C7r00r02      [ 4]  186 	sta	_strstr_cp_65536_27
   0078 B6*04         [ 3]  187 	lda	*(_strstr_sloc2_1_0 + 1)
   007A C7r00r03      [ 4]  188 	sta	(_strstr_cp_65536_27 + 1)
   007D 20 A1         [ 3]  189 	bra	00110$
   007F                     190 00112$:
                            191 ;../_strstr.c:54: return (NULL) ;
   007F 4F            [ 1]  192 	clra
   0080 97            [ 1]  193 	tax
                            194 ;../_strstr.c:55: }
   0081 81            [ 6]  195 	rts
                            196 	.area CSEG    (CODE)
                            197 	.area CONST   (CODE)
                            198 	.area XINIT   (CODE)
                            199 	.area CABS    (ABS,CODE)
