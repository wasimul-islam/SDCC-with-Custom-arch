                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _memcmp
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _memcmp_PARM_3
                             24 	.globl _memcmp_PARM_2
                             25 	.globl _memcmp
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _memcmp_sloc0_1_0:
   0000                      35 	.ds 2
   0002                      36 _memcmp_sloc1_1_0:
   0002                      37 	.ds 2
   0004                      38 _memcmp_sloc2_1_0:
   0004                      39 	.ds 2
   0006                      40 _memcmp_sloc3_1_0:
   0006                      41 	.ds 1
                             42 ;--------------------------------------------------------
                             43 ; absolute ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS)
                             46 	.area IABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; initialized external ram data
                             53 ;--------------------------------------------------------
                             54 	.area XISEG
                             55 ;--------------------------------------------------------
                             56 ; extended address mode data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG
   0000                      59 _memcmp_PARM_2:
   0000                      60 	.ds 2
   0002                      61 _memcmp_PARM_3:
   0002                      62 	.ds 2
   0004                      63 _memcmp_buf1_65536_26:
   0004                      64 	.ds 2
                             65 ;--------------------------------------------------------
                             66 ; global & static initialisations
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT  (CODE)
                             70 	.area GSFINAL (CODE)
                             71 	.area GSINIT  (CODE)
                             72 ;--------------------------------------------------------
                             73 ; Home
                             74 ;--------------------------------------------------------
                             75 	.area HOME    (CODE)
                             76 	.area HOME    (CODE)
                             77 ;--------------------------------------------------------
                             78 ; code
                             79 ;--------------------------------------------------------
                             80 	.area CSEG    (CODE)
                             81 ;------------------------------------------------------------
                             82 ;Allocation info for local variables in function 'memcmp'
                             83 ;------------------------------------------------------------
                             84 ;buf2                      Allocated with name '_memcmp_PARM_2'
                             85 ;count                     Allocated with name '_memcmp_PARM_3'
                             86 ;buf1                      Allocated with name '_memcmp_buf1_65536_26'
                             87 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                             88 ;sloc1                     Allocated with name '_memcmp_sloc1_1_0'
                             89 ;sloc2                     Allocated with name '_memcmp_sloc2_1_0'
                             90 ;sloc3                     Allocated with name '_memcmp_sloc3_1_0'
                             91 ;------------------------------------------------------------
                             92 ;../_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                             93 ;	-----------------------------------------
                             94 ;	 function memcmp
                             95 ;	-----------------------------------------
                             96 ;	Register assignment is optimal.
                             97 ;	Stack space usage: 0 bytes.
   0000                      98 _memcmp:
   0000 C7r00r05      [ 4]   99 	sta	(_memcmp_buf1_65536_26 + 1)
   0003 CFr00r04      [ 4]  100 	stx	_memcmp_buf1_65536_26
                            101 ;../_memcmp.c:33: if (!count)
   0006 C6r00r02      [ 4]  102 	lda	_memcmp_PARM_3
   0009 CAr00r03      [ 4]  103 	ora	(_memcmp_PARM_3 + 1)
   000C 26 03         [ 3]  104 	bne	00112$
                            105 ;../_memcmp.c:34: return(0);
   000E 4F            [ 1]  106 	clra
   000F 97            [ 1]  107 	tax
   0010 81            [ 6]  108 	rts
                            109 ;../_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   0011                     110 00112$:
   0011 32r00r02      [ 5]  111 	ldhx	_memcmp_PARM_3
   0014 35*00         [ 4]  112 	sthx	*_memcmp_sloc0_1_0
   0016                     113 00104$:
   0016 55*00         [ 4]  114 	ldhx	*_memcmp_sloc0_1_0
   0018 AF FF         [ 2]  115 	aix	#-1
   001A 35*00         [ 4]  116 	sthx	*_memcmp_sloc0_1_0
   001C 32r00r04      [ 5]  117 	ldhx	_memcmp_buf1_65536_26
   001F 35*02         [ 4]  118 	sthx	*_memcmp_sloc1_1_0
   0021 32r00r00      [ 5]  119 	ldhx	_memcmp_PARM_2
   0024 35*04         [ 4]  120 	sthx	*_memcmp_sloc2_1_0
   0026 55*02         [ 4]  121 	ldhx	*_memcmp_sloc1_1_0
   0028 F6            [ 3]  122 	lda	,x
   0029 55*04         [ 4]  123 	ldhx	*_memcmp_sloc2_1_0
   002B FE            [ 3]  124 	ldx	,x
   002C BF*06         [ 3]  125 	stx	*_memcmp_sloc3_1_0
   002E 3D*01         [ 4]  126 	tst	*(_memcmp_sloc0_1_0 + 1)
   0030 26 02         [ 3]  127 	bne	00131$
   0032 3D*00         [ 4]  128 	tst	*_memcmp_sloc0_1_0
   0034                     129 00131$:
   0034 27 1E         [ 3]  130 	beq	00106$
   0036 B1*06         [ 3]  131 	cmp	*_memcmp_sloc3_1_0
   0038 26 1A         [ 3]  132 	bne	00106$
                            133 ;../_memcmp.c:37: buf1 = (char *)buf1 + 1;
   003A 55*02         [ 4]  134 	ldhx	*_memcmp_sloc1_1_0
   003C AF 01         [ 2]  135 	aix	#1
   003E CFr00r05      [ 4]  136 	stx	(_memcmp_buf1_65536_26 + 1)
   0041 8B            [ 2]  137 	pshh
   0042 86            [ 3]  138 	pula
   0043 C7r00r04      [ 4]  139 	sta	_memcmp_buf1_65536_26
                            140 ;../_memcmp.c:38: buf2 = (char *)buf2 + 1;
   0046 55*04         [ 4]  141 	ldhx	*_memcmp_sloc2_1_0
   0048 AF 01         [ 2]  142 	aix	#1
   004A CFr00r01      [ 4]  143 	stx	(_memcmp_PARM_2 + 1)
   004D 8B            [ 2]  144 	pshh
   004E 86            [ 3]  145 	pula
   004F C7r00r00      [ 4]  146 	sta	_memcmp_PARM_2
   0052 20 C2         [ 3]  147 	bra	00104$
   0054                     148 00106$:
                            149 ;../_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   0054 5F            [ 1]  150 	clrx
   0055 4E*06*05      [ 6]  151 	mov	*_memcmp_sloc3_1_0,*(_memcmp_sloc2_1_0 + 1)
   0058 BF*04         [ 3]  152 	stx	*_memcmp_sloc2_1_0
   005A B0*05         [ 3]  153 	sub	*(_memcmp_sloc2_1_0 + 1)
   005C 87            [ 2]  154 	psha
   005D 9F            [ 1]  155 	txa
   005E B2*04         [ 3]  156 	sbc	*_memcmp_sloc2_1_0
   0060 97            [ 1]  157 	tax
   0061 86            [ 3]  158 	pula
                            159 ;../_memcmp.c:42: }
   0062 81            [ 6]  160 	rts
                            161 	.area CSEG    (CODE)
                            162 	.area CONST   (CODE)
                            163 	.area XINIT   (CODE)
                            164 	.area CABS    (ABS,CODE)
