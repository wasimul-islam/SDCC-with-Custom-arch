                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module c16rtomb
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _wctomb
                             24 	.globl _c16rtomb_PARM_3
                             25 	.globl _c16rtomb_PARM_2
                             26 	.globl _c16rtomb
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _c16rtomb_sloc0_1_0:
   0000                      32 	.ds 2
   0002                      33 _c16rtomb_sloc1_1_0:
   0002                      34 	.ds 2
   0004                      35 _c16rtomb_sloc2_1_0:
   0004                      36 	.ds 2
   0006                      37 _c16rtomb_sloc3_1_0:
   0006                      38 	.ds 4
                             39 ;--------------------------------------------------------
                             40 ; overlayable items in ram
                             41 ;--------------------------------------------------------
                             42 ;--------------------------------------------------------
                             43 ; absolute ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS)
                             46 	.area IABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; initialized external ram data
                             53 ;--------------------------------------------------------
                             54 	.area XISEG
                             55 ;--------------------------------------------------------
                             56 ; extended address mode data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG
   0000                      59 _c16rtomb_PARM_2:
   0000                      60 	.ds 2
   0002                      61 _c16rtomb_PARM_3:
   0002                      62 	.ds 2
   0004                      63 _c16rtomb_s_65536_42:
   0004                      64 	.ds 2
   0006                      65 _c16rtomb_codepoint_65536_43:
   0006                      66 	.ds 4
   000A                      67 _c16rtomb_buf_65536_43:
   000A                      68 	.ds 4
   000E                      69 _c16rtomb_sps_65536_43:
   000E                      70 	.ds 3
   0011                      71 _c16rtomb_high_surrogate_131072_45:
   0011                      72 	.ds 2
                             73 ;--------------------------------------------------------
                             74 ; global & static initialisations
                             75 ;--------------------------------------------------------
                             76 	.area HOME    (CODE)
                             77 	.area GSINIT  (CODE)
                             78 	.area GSFINAL (CODE)
                             79 	.area GSINIT  (CODE)
                             80 ;--------------------------------------------------------
                             81 ; Home
                             82 ;--------------------------------------------------------
                             83 	.area HOME    (CODE)
                             84 	.area HOME    (CODE)
                             85 ;--------------------------------------------------------
                             86 ; code
                             87 ;--------------------------------------------------------
                             88 	.area CSEG    (CODE)
                             89 ;------------------------------------------------------------
                             90 ;Allocation info for local variables in function 'c16rtomb'
                             91 ;------------------------------------------------------------
                             92 ;sloc0                     Allocated with name '_c16rtomb_sloc0_1_0'
                             93 ;sloc1                     Allocated with name '_c16rtomb_sloc1_1_0'
                             94 ;sloc2                     Allocated with name '_c16rtomb_sloc2_1_0'
                             95 ;sloc3                     Allocated with name '_c16rtomb_sloc3_1_0'
                             96 ;c16                       Allocated with name '_c16rtomb_PARM_2'
                             97 ;ps                        Allocated with name '_c16rtomb_PARM_3'
                             98 ;s                         Allocated with name '_c16rtomb_s_65536_42'
                             99 ;codepoint                 Allocated with name '_c16rtomb_codepoint_65536_43'
                            100 ;buf                       Allocated with name '_c16rtomb_buf_65536_43'
                            101 ;sps                       Allocated with name '_c16rtomb_sps_65536_43'
                            102 ;high_surrogate            Allocated with name '_c16rtomb_high_surrogate_131072_45'
                            103 ;------------------------------------------------------------
                            104 ;../c16rtomb.c:35: size_t c16rtomb(char *restrict s, char16_t c16, mbstate_t *restrict ps)
                            105 ;	-----------------------------------------
                            106 ;	 function c16rtomb
                            107 ;	-----------------------------------------
                            108 ;	Register assignment is optimal.
                            109 ;	Stack space usage: 0 bytes.
   0000                     110 _c16rtomb:
   0000 C7r00r05      [ 4]  111 	sta	(_c16rtomb_s_65536_42 + 1)
   0003 CFr00r04      [ 4]  112 	stx	_c16rtomb_s_65536_42
                            113 ;../c16rtomb.c:41: if(!s)
   0006 C6r00r04      [ 4]  114 	lda	_c16rtomb_s_65536_42
   0009 CAr00r05      [ 4]  115 	ora	(_c16rtomb_s_65536_42 + 1)
   000C 26 06         [ 3]  116 	bne	00102$
                            117 ;../c16rtomb.c:42: s = buf;
   000E 45r00r0A      [ 3]  118 	ldhx	#_c16rtomb_buf_65536_43
   0011 96r00r04      [ 5]  119 	sthx	_c16rtomb_s_65536_42
   0014                     120 00102$:
                            121 ;../c16rtomb.c:44: if(!ps)
   0014 C6r00r02      [ 4]  122 	lda	_c16rtomb_PARM_3
   0017 CAr00r03      [ 4]  123 	ora	(_c16rtomb_PARM_3 + 1)
   001A 26 06         [ 3]  124 	bne	00104$
                            125 ;../c16rtomb.c:45: ps = &sps;
   001C 45r00r0E      [ 3]  126 	ldhx	#_c16rtomb_sps_65536_43
   001F 96r00r02      [ 5]  127 	sthx	_c16rtomb_PARM_3
   0022                     128 00104$:
                            129 ;../c16rtomb.c:49: ps->c[1] = ps->c[2] = 0;
   0022 32r00r02      [ 5]  130 	ldhx	_c16rtomb_PARM_3
   0025 35*00         [ 4]  131 	sthx	*_c16rtomb_sloc0_1_0
   0027 35*02         [ 4]  132 	sthx	*_c16rtomb_sloc1_1_0
                            133 ;../c16rtomb.c:47: if (!c16) // 0 always resets conversion state.
   0029 C6r00r00      [ 4]  134 	lda	_c16rtomb_PARM_2
   002C CAr00r01      [ 4]  135 	ora	(_c16rtomb_PARM_2 + 1)
   002F 26 14         [ 3]  136 	bne	00119$
                            137 ;../c16rtomb.c:49: ps->c[1] = ps->c[2] = 0;
   0031 55*02         [ 4]  138 	ldhx	*_c16rtomb_sloc1_1_0
   0033 4F            [ 1]  139 	clra
   0034 E7 02         [ 3]  140 	sta	2,x
   0036 55*00         [ 4]  141 	ldhx	*_c16rtomb_sloc0_1_0
   0038 E7 01         [ 3]  142 	sta	1,x
                            143 ;../c16rtomb.c:50: codepoint = 0;
   003A 8C            [ 1]  144 	clrh
   003B 97            [ 1]  145 	tax
   003C 96r00r06      [ 5]  146 	sthx	_c16rtomb_codepoint_65536_43
   003F 96r00r08      [ 5]  147 	sthx	(_c16rtomb_codepoint_65536_43 + 2)
   0042 CCr01r01      [ 4]  148 	jmp	00120$
   0045                     149 00119$:
                            150 ;../c16rtomb.c:52: else if(ps->c[1] || ps->c[2]) // We already have the high surrogate. Now get the low surrogate
   0045 55*00         [ 4]  151 	ldhx	*_c16rtomb_sloc0_1_0
   0047 EE 01         [ 3]  152 	ldx	1,x
   0049 5D            [ 1]  153 	tstx
   004A 26 08         [ 3]  154 	bne	00114$
   004C 89            [ 2]  155 	pshx
   004D 55*02         [ 4]  156 	ldhx	*_c16rtomb_sloc1_1_0
   004F E6 02         [ 3]  157 	lda	2,x
   0051 88            [ 3]  158 	pulx
   0052 27 6E         [ 3]  159 	beq	00115$
   0054                     160 00114$:
                            161 ;../c16rtomb.c:56: if(c16 < 0xdc00 || c16 > 0xdfff)
   0054 C6r00r00      [ 4]  162 	lda	_c16rtomb_PARM_2
   0057 A0 DC         [ 2]  163 	sub	#0xdc
   0059 24 03         [ 3]  164 	bcc	00169$
   005B CCr01r16      [ 4]  165 	jmp	00121$
   005E                     166 00169$:
   005E A6 FF         [ 2]  167 	lda	#0xff
   0060 C0r00r01      [ 4]  168 	sub	(_c16rtomb_PARM_2 + 1)
   0063 A6 DF         [ 2]  169 	lda	#0xdf
   0065 C2r00r00      [ 4]  170 	sbc	_c16rtomb_PARM_2
   0068 24 03         [ 3]  171 	bcc	00170$
   006A CCr01r16      [ 4]  172 	jmp	00121$
   006D                     173 00170$:
                            174 ;../c16rtomb.c:59: high_surrogate = ps->c[1] + (ps->c[2] << 8);
   006D BF*05         [ 3]  175 	stx	*(_c16rtomb_sloc2_1_0 + 1)
   006F 6E 00*04      [ 4]  176 	mov	#0x00,*_c16rtomb_sloc2_1_0
   0072 55*02         [ 4]  177 	ldhx	*_c16rtomb_sloc1_1_0
   0074 E6 02         [ 3]  178 	lda	2,x
   0076 5F            [ 1]  179 	clrx
   0077 97            [ 1]  180 	tax
   0078 4F            [ 1]  181 	clra
   0079 BB*05         [ 3]  182 	add	*(_c16rtomb_sloc2_1_0 + 1)
   007B C7r00r12      [ 4]  183 	sta	(_c16rtomb_high_surrogate_131072_45 + 1)
   007E 9F            [ 1]  184 	txa
   007F B9*04         [ 3]  185 	adc	*_c16rtomb_sloc2_1_0
   0081 C7r00r11      [ 4]  186 	sta	_c16rtomb_high_surrogate_131072_45
                            187 ;../c16rtomb.c:60: ps->c[1] = ps->c[2] = 0;
   0084 55*02         [ 4]  188 	ldhx	*_c16rtomb_sloc1_1_0
   0086 4F            [ 1]  189 	clra
   0087 E7 02         [ 3]  190 	sta	2,x
   0089 55*00         [ 4]  191 	ldhx	*_c16rtomb_sloc0_1_0
   008B E7 01         [ 3]  192 	sta	1,x
                            193 ;../c16rtomb.c:61: codepoint = (high_surrogate << 10) - (0xd800 << 10) + c16 - 0xdc00 + 0x10000;
   008D C6r00r12      [ 4]  194 	lda	(_c16rtomb_high_surrogate_131072_45 + 1)
   0090 48            [ 1]  195 	lsla	
   0091 48            [ 1]  196 	lsla	
   0092 97            [ 1]  197 	tax
   0093 4F            [ 1]  198 	clra
   0094 CBr00r01      [ 4]  199 	add	(_c16rtomb_PARM_2 + 1)
   0097 87            [ 2]  200 	psha
   0098 9F            [ 1]  201 	txa
   0099 C9r00r00      [ 4]  202 	adc	_c16rtomb_PARM_2
   009C 97            [ 1]  203 	tax
   009D 86            [ 3]  204 	pula
   009E B7*09         [ 3]  205 	sta	*(_c16rtomb_sloc3_1_0 + 3)
   00A0 BF*08         [ 3]  206 	stx	*(_c16rtomb_sloc3_1_0 + 2)
   00A2 6E 00*07      [ 4]  207 	mov	#0x00,*(_c16rtomb_sloc3_1_0 + 1)
   00A5 6E 00*06      [ 4]  208 	mov	#0x00,*_c16rtomb_sloc3_1_0
   00A8 45r00r06      [ 3]  209 	ldhx	#_c16rtomb_codepoint_65536_43
   00AB B6*09         [ 3]  210 	lda	*(_c16rtomb_sloc3_1_0 + 3)
   00AD E7 03         [ 3]  211 	sta	3,x
   00AF B6*08         [ 3]  212 	lda	*(_c16rtomb_sloc3_1_0 + 2)
   00B1 AB 24         [ 2]  213 	add	#0x24
   00B3 E7 02         [ 3]  214 	sta	2,x
   00B5 B6*07         [ 3]  215 	lda	*(_c16rtomb_sloc3_1_0 + 1)
   00B7 A9 00         [ 2]  216 	adc	#0x00
   00B9 E7 01         [ 3]  217 	sta	1,x
   00BB B6*06         [ 3]  218 	lda	*_c16rtomb_sloc3_1_0
   00BD A9 00         [ 2]  219 	adc	#0x00
   00BF F7            [ 2]  220 	sta	,x
   00C0 20 3F         [ 3]  221 	bra	00120$
   00C2                     222 00115$:
                            223 ;../c16rtomb.c:63: else if(c16 < 0xd7ff || c16 >= 0xe000) // Basic multilingual plane.
   00C2 C6r00r01      [ 4]  224 	lda	(_c16rtomb_PARM_2 + 1)
   00C5 A0 FF         [ 2]  225 	sub	#0xff
   00C7 C6r00r00      [ 4]  226 	lda	_c16rtomb_PARM_2
   00CA A2 D7         [ 2]  227 	sbc	#0xd7
   00CC 25 07         [ 3]  228 	bcs	00110$
   00CE C6r00r00      [ 4]  229 	lda	_c16rtomb_PARM_2
   00D1 A0 E0         [ 2]  230 	sub	#0xe0
   00D3 25 0F         [ 3]  231 	bcs	00111$
   00D5                     232 00110$:
                            233 ;../c16rtomb.c:64: codepoint = c16;
   00D5 32r00r00      [ 5]  234 	ldhx	_c16rtomb_PARM_2
   00D8 96r00r08      [ 5]  235 	sthx	(_c16rtomb_codepoint_65536_43 + 2)
   00DB 4F            [ 1]  236 	clra
   00DC C7r00r07      [ 4]  237 	sta	(_c16rtomb_codepoint_65536_43 + 1)
   00DF C7r00r06      [ 4]  238 	sta	_c16rtomb_codepoint_65536_43
   00E2 20 1D         [ 3]  239 	bra	00120$
   00E4                     240 00111$:
                            241 ;../c16rtomb.c:67: if(c16 > 0xdbff)
   00E4 A6 FF         [ 2]  242 	lda	#0xff
   00E6 C0r00r01      [ 4]  243 	sub	(_c16rtomb_PARM_2 + 1)
   00E9 A6 DB         [ 2]  244 	lda	#0xdb
   00EB C2r00r00      [ 4]  245 	sbc	_c16rtomb_PARM_2
   00EE 25 26         [ 3]  246 	bcs	00121$
                            247 ;../c16rtomb.c:70: ps->c[1] = c16 & 0xff;
   00F0 C6r00r01      [ 4]  248 	lda	(_c16rtomb_PARM_2 + 1)
   00F3 55*00         [ 4]  249 	ldhx	*_c16rtomb_sloc0_1_0
   00F5 E7 01         [ 3]  250 	sta	1,x
                            251 ;../c16rtomb.c:71: ps->c[2] = c16 >> 8;
   00F7 C6r00r00      [ 4]  252 	lda	_c16rtomb_PARM_2
   00FA 55*02         [ 4]  253 	ldhx	*_c16rtomb_sloc1_1_0
   00FC E7 02         [ 3]  254 	sta	2,x
                            255 ;../c16rtomb.c:72: return(0);
   00FE 4F            [ 1]  256 	clra
   00FF 97            [ 1]  257 	tax
   0100 81            [ 6]  258 	rts
   0101                     259 00120$:
                            260 ;../c16rtomb.c:75: return(wctomb(s, codepoint));
   0101 32r00r06      [ 5]  261 	ldhx	_c16rtomb_codepoint_65536_43
   0104 96r00r00      [ 5]  262 	sthx	_wctomb_PARM_2
   0107 32r00r08      [ 5]  263 	ldhx	(_c16rtomb_codepoint_65536_43 + 2)
   010A 96r00r02      [ 5]  264 	sthx	(_wctomb_PARM_2 + 2)
   010D C6r00r05      [ 4]  265 	lda	(_c16rtomb_s_65536_42 + 1)
   0110 CEr00r04      [ 4]  266 	ldx	_c16rtomb_s_65536_42
   0113 CCr00r00      [ 4]  267 	jmp	_wctomb
                            268 ;../c16rtomb.c:77: eilseq:
   0116                     269 00121$:
                            270 ;../c16rtomb.c:78: errno = EILSEQ;
   0116 45 00 54      [ 3]  271 	ldhx	#0x0054
   0119 96r00r00      [ 5]  272 	sthx	_errno
                            273 ;../c16rtomb.c:79: return(-1);
   011C A6 FF         [ 2]  274 	lda	#0xff
   011E 97            [ 1]  275 	tax
                            276 ;../c16rtomb.c:80: }
   011F 81            [ 6]  277 	rts
                            278 	.area CSEG    (CODE)
                            279 	.area CONST   (CODE)
                            280 	.area XINIT   (CODE)
                            281 	.area CABS    (ABS,CODE)
