                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module memccpy
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _memccpy_PARM_4
                             24 	.globl _memccpy_PARM_3
                             25 	.globl _memccpy_PARM_2
                             26 	.globl _memccpy
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram
                             33 ;--------------------------------------------------------
                             34 	.area	OSEG    (PAG, OVR)
   0000                      35 _memccpy_sloc0_1_0:
   0000                      36 	.ds 2
   0002                      37 _memccpy_sloc1_1_0:
   0002                      38 	.ds 2
   0004                      39 _memccpy_sloc2_1_0:
   0004                      40 	.ds 2
   0006                      41 _memccpy_sloc3_1_0:
   0006                      42 	.ds 1
                             43 ;--------------------------------------------------------
                             44 ; absolute ram data
                             45 ;--------------------------------------------------------
                             46 	.area IABS    (ABS)
                             47 	.area IABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; absolute external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XABS    (ABS)
                             52 ;--------------------------------------------------------
                             53 ; initialized external ram data
                             54 ;--------------------------------------------------------
                             55 	.area XISEG
                             56 ;--------------------------------------------------------
                             57 ; extended address mode data
                             58 ;--------------------------------------------------------
                             59 	.area XSEG
   0000                      60 _memccpy_PARM_2:
   0000                      61 	.ds 2
   0002                      62 _memccpy_PARM_3:
   0002                      63 	.ds 2
   0004                      64 _memccpy_PARM_4:
   0004                      65 	.ds 2
                             66 ;--------------------------------------------------------
                             67 ; global & static initialisations
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area GSINIT  (CODE)
                             71 	.area GSFINAL (CODE)
                             72 	.area GSINIT  (CODE)
                             73 ;--------------------------------------------------------
                             74 ; Home
                             75 ;--------------------------------------------------------
                             76 	.area HOME    (CODE)
                             77 	.area HOME    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; code
                             80 ;--------------------------------------------------------
                             81 	.area CSEG    (CODE)
                             82 ;------------------------------------------------------------
                             83 ;Allocation info for local variables in function 'memccpy'
                             84 ;------------------------------------------------------------
                             85 ;src                       Allocated with name '_memccpy_PARM_2'
                             86 ;c                         Allocated with name '_memccpy_PARM_3'
                             87 ;n                         Allocated with name '_memccpy_PARM_4'
                             88 ;dst                       Allocated to registers a x 
                             89 ;d                         Allocated to registers x h 
                             90 ;s                         Allocated to registers 
                             91 ;sloc0                     Allocated with name '_memccpy_sloc0_1_0'
                             92 ;sloc1                     Allocated with name '_memccpy_sloc1_1_0'
                             93 ;sloc2                     Allocated with name '_memccpy_sloc2_1_0'
                             94 ;sloc3                     Allocated with name '_memccpy_sloc3_1_0'
                             95 ;------------------------------------------------------------
                             96 ;../memccpy.c:31: void *memccpy (void *restrict dst, const void *restrict src, int c, size_t n)
                             97 ;	-----------------------------------------
                             98 ;	 function memccpy
                             99 ;	-----------------------------------------
                            100 ;	Register assignment is optimal.
                            101 ;	Stack space usage: 0 bytes.
   0000                     102 _memccpy:
                            103 ;../memccpy.c:33: char *d = dst;
   0000 B7*01         [ 3]  104 	sta	*(_memccpy_sloc0_1_0 + 1)
   0002 BF*00         [ 3]  105 	stx	*_memccpy_sloc0_1_0
                            106 ;../memccpy.c:34: const char *s = src;
   0004 32r00r00      [ 5]  107 	ldhx	_memccpy_PARM_2
   0007 35*02         [ 4]  108 	sthx	*_memccpy_sloc1_1_0
                            109 ;../memccpy.c:36: while (n--)
   0009 32r00r04      [ 5]  110 	ldhx	_memccpy_PARM_4
   000C 35*04         [ 4]  111 	sthx	*_memccpy_sloc2_1_0
   000E                     112 00103$:
   000E 55*04         [ 4]  113 	ldhx	*_memccpy_sloc2_1_0
   0010 89            [ 2]  114 	pshx
   0011 8B            [ 2]  115 	pshh
   0012 55*04         [ 4]  116 	ldhx	*_memccpy_sloc2_1_0
   0014 AF FF         [ 2]  117 	aix	#-1
   0016 35*04         [ 4]  118 	sthx	*_memccpy_sloc2_1_0
   0018 8A            [ 3]  119 	pulh
   0019 88            [ 3]  120 	pulx
   001A 65 00 00      [ 3]  121 	cphx	#0x00
   001D 27 1F         [ 3]  122 	beq	00105$
                            123 ;../memccpy.c:37: if ((*d++ = *s++) == (unsigned char)c)
   001F 55*02         [ 4]  124 	ldhx	*_memccpy_sloc1_1_0
   0021 F6            [ 3]  125 	lda	,x
   0022 B7*06         [ 3]  126 	sta	*_memccpy_sloc3_1_0
   0024 AF 01         [ 2]  127 	aix	#1
   0026 35*02         [ 4]  128 	sthx	*_memccpy_sloc1_1_0
   0028 55*00         [ 4]  129 	ldhx	*_memccpy_sloc0_1_0
   002A B6*06         [ 3]  130 	lda	*_memccpy_sloc3_1_0
   002C F7            [ 2]  131 	sta	,x
   002D AF 01         [ 2]  132 	aix	#1
   002F 35*00         [ 4]  133 	sthx	*_memccpy_sloc0_1_0
   0031 55*00         [ 4]  134 	ldhx	*_memccpy_sloc0_1_0
   0033 C6r00r03      [ 4]  135 	lda	(_memccpy_PARM_3 + 1)
   0036 B1*06         [ 3]  136 	cmp	*_memccpy_sloc3_1_0
   0038 26 D4         [ 3]  137 	bne	00103$
                            138 ;../memccpy.c:38: return (d);
   003A 9F            [ 1]  139 	txa
   003B 8B            [ 2]  140 	pshh
   003C 88            [ 3]  141 	pulx
   003D 81            [ 6]  142 	rts
   003E                     143 00105$:
                            144 ;../memccpy.c:40: return (0);
   003E 4F            [ 1]  145 	clra
   003F 97            [ 1]  146 	tax
                            147 ;../memccpy.c:41: }
   0040 81            [ 6]  148 	rts
                            149 	.area CSEG    (CODE)
                            150 	.area CONST   (CODE)
                            151 	.area XINIT   (CODE)
                            152 	.area CABS    (ABS,CODE)
