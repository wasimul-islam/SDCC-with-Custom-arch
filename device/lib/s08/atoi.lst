                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module atoi
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _atoi
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area DSEG    (PAG)
   0000                      28 _atoi_sloc0_1_0:
   0000                      29 	.ds 1
   0001                      30 _atoi_sloc1_1_0:
   0001                      31 	.ds 2
   0003                      32 _atoi_sloc2_1_0:
   0003                      33 	.ds 2
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in ram
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; absolute ram data
                             39 ;--------------------------------------------------------
                             40 	.area IABS    (ABS)
                             41 	.area IABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; initialized external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XISEG
                             50 ;--------------------------------------------------------
                             51 ; extended address mode data
                             52 ;--------------------------------------------------------
                             53 	.area XSEG
   0000                      54 _atoi_ret_65536_57:
   0000                      55 	.ds 2
   0002                      56 _atoi_neg_65536_57:
   0002                      57 	.ds 1
                             58 ;--------------------------------------------------------
                             59 ; global & static initialisations
                             60 ;--------------------------------------------------------
                             61 	.area HOME    (CODE)
                             62 	.area GSINIT  (CODE)
                             63 	.area GSFINAL (CODE)
                             64 	.area GSINIT  (CODE)
                             65 ;--------------------------------------------------------
                             66 ; Home
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area HOME    (CODE)
                             70 ;--------------------------------------------------------
                             71 ; code
                             72 ;--------------------------------------------------------
                             73 	.area CSEG    (CODE)
                             74 ;------------------------------------------------------------
                             75 ;Allocation info for local variables in function 'atoi'
                             76 ;------------------------------------------------------------
                             77 ;sloc0                     Allocated with name '_atoi_sloc0_1_0'
                             78 ;sloc1                     Allocated with name '_atoi_sloc1_1_0'
                             79 ;sloc2                     Allocated with name '_atoi_sloc2_1_0'
                             80 ;nptr                      Allocated to registers x h 
                             81 ;__1310720007              Allocated to registers 
                             82 ;__1310720004              Allocated to registers 
                             83 ;ret                       Allocated with name '_atoi_ret_65536_57'
                             84 ;neg                       Allocated with name '_atoi_neg_65536_57'
                             85 ;__1310720005              Allocated to registers 
                             86 ;c                         Allocated to registers 
                             87 ;__1310720008              Allocated to registers 
                             88 ;c                         Allocated to registers 
                             89 ;------------------------------------------------------------
                             90 ;../atoi.c:34: int atoi(const char *nptr)
                             91 ;	-----------------------------------------
                             92 ;	 function atoi
                             93 ;	-----------------------------------------
                             94 ;	Register assignment is optimal.
                             95 ;	Stack space usage: 0 bytes.
   0000                      96 _atoi:
   0000 89            [ 2]   97 	pshx
   0001 97            [ 1]   98 	tax
   0002 8A            [ 3]   99 	pulh
                            100 ;../atoi.c:36: int ret = 0;
   0003 4F            [ 1]  101 	clra
   0004 C7r00r00      [ 4]  102 	sta	_atoi_ret_65536_57
   0007 C7r00r01      [ 4]  103 	sta	(_atoi_ret_65536_57 + 1)
                            104 ;../atoi.c:39: while (isblank (*nptr))
   000A                     105 00101$:
   000A F6            [ 3]  106 	lda	,x
   000B B7*00         [ 3]  107 	sta	*_atoi_sloc0_1_0
   000D B6*00         [ 3]  108 	lda	*_atoi_sloc0_1_0
                            109 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   000F 41 20 04      [ 4]  110 	cbeqa	#0x20,00115$
   0012 A1 09         [ 2]  111 	cmp	#0x09
   0014 26 04         [ 3]  112 	bne	00131$
   0016                     113 00115$:
                            114 ;../atoi.c:40: nptr++;
   0016 AF 01         [ 2]  115 	aix	#1
   0018 20 F0         [ 3]  116 	bra	00101$
   001A                     117 00131$:
                            118 ;../atoi.c:42: neg = (*nptr == '-');
   001A B6*00         [ 3]  119 	lda	*_atoi_sloc0_1_0
   001C 41 2D 03      [ 4]  120 	cbeqa	#0x2d,00164$
   001F 4F            [ 1]  121 	clra
   0020 20 02         [ 3]  122 	bra	00163$
   0022                     123 00164$:
   0022 A6 01         [ 2]  124 	lda	#0x01
   0024                     125 00163$:
   0024 C7r00r02      [ 4]  126 	sta	_atoi_neg_65536_57
                            127 ;../atoi.c:44: if (*nptr == '-' || *nptr == '+')
   0027 4D            [ 1]  128 	tsta
   0028 26 06         [ 3]  129 	bne	00104$
   002A B6*00         [ 3]  130 	lda	*_atoi_sloc0_1_0
   002C A1 2B         [ 2]  131 	cmp	#0x2b
   002E 26 02         [ 3]  132 	bne	00129$
   0030                     133 00104$:
                            134 ;../atoi.c:45: nptr++;
   0030 AF 01         [ 2]  135 	aix	#1
                            136 ;../atoi.c:47: while (isdigit (*nptr))
   0032                     137 00129$:
   0032 35*01         [ 4]  138 	sthx	*_atoi_sloc1_1_0
   0034                     139 00107$:
   0034 55*01         [ 4]  140 	ldhx	*_atoi_sloc1_1_0
   0036 FE            [ 3]  141 	ldx	,x
   0037 9F            [ 1]  142 	txa
                            143 ;./../../include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   0038 A1 30         [ 2]  144 	cmp	#0x30
   003A 25 36         [ 3]  145 	bcs	00109$
   003C A1 39         [ 2]  146 	cmp	#0x39
   003E 22 32         [ 3]  147 	bhi	00109$
                            148 ;../atoi.c:48: ret = ret * 10 + (*(nptr++) - '0');
   0040 C6r00r00      [ 4]  149 	lda	_atoi_ret_65536_57
   0043 C7r00r00      [ 4]  150 	sta	__mulint_PARM_2
   0046 C6r00r01      [ 4]  151 	lda	(_atoi_ret_65536_57 + 1)
   0049 C7r00r01      [ 4]  152 	sta	(__mulint_PARM_2 + 1)
   004C 89            [ 2]  153 	pshx
   004D A6 0A         [ 2]  154 	lda	#0x0a
   004F 5F            [ 1]  155 	clrx
   0050 CDr00r00      [ 6]  156 	jsr	__mulint
   0053 B7*04         [ 3]  157 	sta	*(_atoi_sloc2_1_0 + 1)
   0055 BF*03         [ 3]  158 	stx	*_atoi_sloc2_1_0
   0057 88            [ 3]  159 	pulx
   0058 89            [ 2]  160 	pshx
   0059 55*01         [ 4]  161 	ldhx	*_atoi_sloc1_1_0
   005B AF 01         [ 2]  162 	aix	#1
   005D 35*01         [ 4]  163 	sthx	*_atoi_sloc1_1_0
   005F 88            [ 3]  164 	pulx
   0060 8C            [ 1]  165 	clrh
   0061 AF D0         [ 2]  166 	aix	#-48
   0063 9F            [ 1]  167 	txa
   0064 BB*04         [ 3]  168 	add	*(_atoi_sloc2_1_0 + 1)
   0066 C7r00r01      [ 4]  169 	sta	(_atoi_ret_65536_57 + 1)
   0069 8B            [ 2]  170 	pshh
   006A 86            [ 3]  171 	pula
   006B B9*03         [ 3]  172 	adc	*_atoi_sloc2_1_0
   006D C7r00r00      [ 4]  173 	sta	_atoi_ret_65536_57
   0070 20 C2         [ 3]  174 	bra	00107$
   0072                     175 00109$:
                            176 ;../atoi.c:50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
   0072 C6r00r02      [ 4]  177 	lda	_atoi_neg_65536_57
   0075 27 0C         [ 3]  178 	beq	00120$
   0077 4F            [ 1]  179 	clra
   0078 C0r00r01      [ 4]  180 	sub	(_atoi_ret_65536_57 + 1)
   007B 87            [ 2]  181 	psha
   007C 4F            [ 1]  182 	clra
   007D C2r00r00      [ 4]  183 	sbc	_atoi_ret_65536_57
   0080 97            [ 1]  184 	tax
   0081 86            [ 3]  185 	pula
   0082 81            [ 6]  186 	rts
   0083                     187 00120$:
   0083 CEr00r00      [ 4]  188 	ldx	_atoi_ret_65536_57
   0086 C6r00r01      [ 4]  189 	lda	(_atoi_ret_65536_57 + 1)
                            190 ;../atoi.c:51: }
   0089 81            [ 6]  191 	rts
                            192 	.area CSEG    (CODE)
                            193 	.area CONST   (CODE)
                            194 	.area XINIT   (CODE)
                            195 	.area CABS    (ABS,CODE)
