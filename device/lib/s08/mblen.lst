                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module mblen
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _mblen_PARM_2
                             24 	.globl _mblen
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _mblen_sloc0_1_0:
   0000                      34 	.ds 2
   0002                      35 _mblen_sloc1_1_0:
   0002                      36 	.ds 2
                             37 ;--------------------------------------------------------
                             38 ; absolute ram data
                             39 ;--------------------------------------------------------
                             40 	.area IABS    (ABS)
                             41 	.area IABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; initialized external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XISEG
                             50 ;--------------------------------------------------------
                             51 ; extended address mode data
                             52 ;--------------------------------------------------------
                             53 	.area XSEG
   0000                      54 _mblen_PARM_2:
   0000                      55 	.ds 2
   0002                      56 _mblen_s_65536_36:
   0002                      57 	.ds 2
                             58 ;--------------------------------------------------------
                             59 ; global & static initialisations
                             60 ;--------------------------------------------------------
                             61 	.area HOME    (CODE)
                             62 	.area GSINIT  (CODE)
                             63 	.area GSFINAL (CODE)
                             64 	.area GSINIT  (CODE)
                             65 ;--------------------------------------------------------
                             66 ; Home
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area HOME    (CODE)
                             70 ;--------------------------------------------------------
                             71 ; code
                             72 ;--------------------------------------------------------
                             73 	.area CSEG    (CODE)
                             74 ;------------------------------------------------------------
                             75 ;Allocation info for local variables in function 'mblen'
                             76 ;------------------------------------------------------------
                             77 ;n                         Allocated with name '_mblen_PARM_2'
                             78 ;s                         Allocated with name '_mblen_s_65536_36'
                             79 ;m                         Allocated to registers 
                             80 ;c                         Allocated to registers x 
                             81 ;sloc0                     Allocated with name '_mblen_sloc0_1_0'
                             82 ;sloc1                     Allocated with name '_mblen_sloc1_1_0'
                             83 ;------------------------------------------------------------
                             84 ;../mblen.c:31: int mblen(const char *s, size_t n)
                             85 ;	-----------------------------------------
                             86 ;	 function mblen
                             87 ;	-----------------------------------------
                             88 ;	Register assignment is optimal.
                             89 ;	Stack space usage: 0 bytes.
   0000                      90 _mblen:
   0000 C7r00r03      [ 4]   91 	sta	(_mblen_s_65536_36 + 1)
   0003 CFr00r02      [ 4]   92 	stx	_mblen_s_65536_36
                             93 ;../mblen.c:36: if(!s)
   0006 C6r00r02      [ 4]   94 	lda	_mblen_s_65536_36
   0009 CAr00r03      [ 4]   95 	ora	(_mblen_s_65536_36 + 1)
   000C 26 03         [ 3]   96 	bne	00102$
                             97 ;../mblen.c:37: return(0);
   000E 4F            [ 1]   98 	clra
   000F 97            [ 1]   99 	tax
   0010 81            [ 6]  100 	rts
   0011                     101 00102$:
                            102 ;../mblen.c:39: if(!n)
   0011 C6r00r00      [ 4]  103 	lda	_mblen_PARM_2
   0014 CAr00r01      [ 4]  104 	ora	(_mblen_PARM_2 + 1)
   0017 26 04         [ 3]  105 	bne	00104$
                            106 ;../mblen.c:40: return(-1);
   0019 A6 FF         [ 2]  107 	lda	#0xff
   001B 97            [ 1]  108 	tax
   001C 81            [ 6]  109 	rts
   001D                     110 00104$:
                            111 ;../mblen.c:42: c = *s;
   001D 32r00r02      [ 5]  112 	ldhx	_mblen_s_65536_36
   0020 FE            [ 3]  113 	ldx	,x
                            114 ;../mblen.c:44: if(!c)
   0021 5D            [ 1]  115 	tstx
   0022 26 03         [ 3]  116 	bne	00106$
                            117 ;../mblen.c:45: return(0);
   0024 4F            [ 1]  118 	clra
   0025 97            [ 1]  119 	tax
   0026 81            [ 6]  120 	rts
   0027                     121 00106$:
                            122 ;../mblen.c:47: if(c <= 0x7f)
   0027 A3 7F         [ 2]  123 	cpx	#0x7f
   0029 22 04         [ 3]  124 	bhi	00126$
                            125 ;../mblen.c:48: return(1);
   002B A6 01         [ 2]  126 	lda	#0x01
   002D 5F            [ 1]  127 	clrx
   002E 81            [ 6]  128 	rts
                            129 ;../mblen.c:50: while(c & 0x80)
   002F                     130 00126$:
   002F 4F            [ 1]  131 	clra
   0030                     132 00109$:
   0030 5D            [ 1]  133 	tstx
   0031 2A 08         [ 3]  134 	bpl     00111$
                            135 ;../mblen.c:52: c <<= 1;
   0033 87            [ 2]  136 	psha
   0034 9F            [ 1]  137 	txa
   0035 48            [ 1]  138 	lsla	
   0036 97            [ 1]  139 	tax
   0037 86            [ 3]  140 	pula
                            141 ;../mblen.c:53: m++;
   0038 4C            [ 1]  142 	inca
   0039 20 F5         [ 3]  143 	bra	00109$
   003B                     144 00111$:
                            145 ;../mblen.c:56: if(m > n)
   003B B7*01         [ 3]  146 	sta	*(_mblen_sloc0_1_0 + 1)
   003D 6E 00*00      [ 4]  147 	mov	#0x00,*_mblen_sloc0_1_0
   0040 55*00         [ 4]  148 	ldhx	*_mblen_sloc0_1_0
   0042 3Er00r00      [ 6]  149 	cphx	_mblen_PARM_2
   0045 23 04         [ 3]  150 	bls	00129$
                            151 ;../mblen.c:57: return(-1);
   0047 A6 FF         [ 2]  152 	lda	#0xff
   0049 97            [ 1]  153 	tax
   004A 81            [ 6]  154 	rts
                            155 ;../mblen.c:60: while(--m)
   004B                     156 00129$:
   004B 32r00r02      [ 5]  157 	ldhx	_mblen_s_65536_36
   004E 35*02         [ 4]  158 	sthx	*_mblen_sloc1_1_0
   0050                     159 00116$:
   0050 4A            [ 1]  160 	deca
   0051 4D            [ 1]  161 	tsta
   0052 27 19         [ 3]  162 	beq	00118$
                            163 ;../mblen.c:61: if((*++s & 0xc0) != 0x80)
   0054 55*02         [ 4]  164 	ldhx	*_mblen_sloc1_1_0
   0056 AF 01         [ 2]  165 	aix	#1
   0058 35*02         [ 4]  166 	sthx	*_mblen_sloc1_1_0
   005A 55*02         [ 4]  167 	ldhx	*_mblen_sloc1_1_0
   005C FE            [ 3]  168 	ldx	,x
   005D 8C            [ 1]  169 	clrh
   005E 87            [ 2]  170 	psha
   005F 9F            [ 1]  171 	txa
   0060 A4 C0         [ 2]  172 	and	#0xc0
   0062 97            [ 1]  173 	tax
   0063 86            [ 3]  174 	pula
   0064 65 00 80      [ 3]  175 	cphx	#0x0080
   0067 27 E7         [ 3]  176 	beq	00116$
                            177 ;../mblen.c:62: return(-1);
   0069 A6 FF         [ 2]  178 	lda	#0xff
   006B 97            [ 1]  179 	tax
   006C 81            [ 6]  180 	rts
   006D                     181 00118$:
                            182 ;../mblen.c:64: return(n);
   006D BE*00         [ 3]  183 	ldx	*_mblen_sloc0_1_0
   006F B6*01         [ 3]  184 	lda	*(_mblen_sloc0_1_0 + 1)
                            185 ;../mblen.c:65: }
   0071 81            [ 6]  186 	rts
                            187 	.area CSEG    (CODE)
                            188 	.area CONST   (CODE)
                            189 	.area XINIT   (CODE)
                            190 	.area CABS    (ABS,CODE)
