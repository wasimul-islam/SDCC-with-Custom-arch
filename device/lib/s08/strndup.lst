                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module strndup
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _malloc
                             24 	.globl ___memcpy
                             25 	.globl _strlen
                             26 	.globl _strndup_PARM_2
                             27 	.globl _strndup
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (PAG)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in ram
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; absolute ram data
                             37 ;--------------------------------------------------------
                             38 	.area IABS    (ABS)
                             39 	.area IABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area XABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; initialized external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XISEG
                             48 ;--------------------------------------------------------
                             49 ; extended address mode data
                             50 ;--------------------------------------------------------
                             51 	.area XSEG
   0000                      52 _strndup_PARM_2:
   0000                      53 	.ds 2
   0002                      54 _strndup_s_65536_61:
   0002                      55 	.ds 2
   0004                      56 _strndup_l_65536_62:
   0004                      57 	.ds 2
   0006                      58 _strndup_r_65537_63:
   0006                      59 	.ds 2
                             60 ;--------------------------------------------------------
                             61 ; global & static initialisations
                             62 ;--------------------------------------------------------
                             63 	.area HOME    (CODE)
                             64 	.area GSINIT  (CODE)
                             65 	.area GSFINAL (CODE)
                             66 	.area GSINIT  (CODE)
                             67 ;--------------------------------------------------------
                             68 ; Home
                             69 ;--------------------------------------------------------
                             70 	.area HOME    (CODE)
                             71 	.area HOME    (CODE)
                             72 ;--------------------------------------------------------
                             73 ; code
                             74 ;--------------------------------------------------------
                             75 	.area CSEG    (CODE)
                             76 ;------------------------------------------------------------
                             77 ;Allocation info for local variables in function 'strndup'
                             78 ;------------------------------------------------------------
                             79 ;n                         Allocated with name '_strndup_PARM_2'
                             80 ;s                         Allocated with name '_strndup_s_65536_61'
                             81 ;l                         Allocated with name '_strndup_l_65536_62'
                             82 ;r                         Allocated with name '_strndup_r_65537_63'
                             83 ;------------------------------------------------------------
                             84 ;../strndup.c:33: char *strndup (const char *s, size_t n)
                             85 ;	-----------------------------------------
                             86 ;	 function strndup
                             87 ;	-----------------------------------------
                             88 ;	Register assignment is optimal.
                             89 ;	Stack space usage: 0 bytes.
   0000                      90 _strndup:
   0000 C7r00r03      [ 4]   91 	sta	(_strndup_s_65536_61 + 1)
   0003 CFr00r02      [ 4]   92 	stx	_strndup_s_65536_61
                             93 ;../strndup.c:35: size_t l = strlen (s);
   0006 C6r00r03      [ 4]   94 	lda	(_strndup_s_65536_61 + 1)
   0009 CEr00r02      [ 4]   95 	ldx	_strndup_s_65536_61
   000C CDr00r00      [ 6]   96 	jsr	_strlen
   000F C7r00r05      [ 4]   97 	sta	(_strndup_l_65536_62 + 1)
   0012 CFr00r04      [ 4]   98 	stx	_strndup_l_65536_62
                             99 ;../strndup.c:36: if (l > n)
   0015 C6r00r01      [ 4]  100 	lda	(_strndup_PARM_2 + 1)
   0018 C0r00r05      [ 4]  101 	sub	(_strndup_l_65536_62 + 1)
   001B C6r00r00      [ 4]  102 	lda	_strndup_PARM_2
   001E C2r00r04      [ 4]  103 	sbc	_strndup_l_65536_62
   0021 24 06         [ 3]  104 	bcc	00102$
                            105 ;../strndup.c:37: l = n;
   0023 32r00r00      [ 5]  106 	ldhx	_strndup_PARM_2
   0026 96r00r04      [ 5]  107 	sthx	_strndup_l_65536_62
   0029                     108 00102$:
                            109 ;../strndup.c:38: char *r = malloc (l + 1);
   0029 32r00r04      [ 5]  110 	ldhx	_strndup_l_65536_62
   002C AF 01         [ 2]  111 	aix	#1
   002E 9F            [ 1]  112 	txa
   002F 8B            [ 2]  113 	pshh
   0030 88            [ 3]  114 	pulx
   0031 CDr00r00      [ 6]  115 	jsr	_malloc
   0034 C7r00r07      [ 4]  116 	sta	(_strndup_r_65537_63 + 1)
   0037 CFr00r06      [ 4]  117 	stx	_strndup_r_65537_63
                            118 ;../strndup.c:39: if (r)
   003A C6r00r06      [ 4]  119 	lda	_strndup_r_65537_63
   003D CAr00r07      [ 4]  120 	ora	(_strndup_r_65537_63 + 1)
   0040 27 32         [ 3]  121 	beq	00104$
                            122 ;../strndup.c:41: memcpy (r, s, l);
   0042 32r00r06      [ 5]  123 	ldhx	_strndup_r_65537_63
   0045 C6r00r03      [ 4]  124 	lda	(_strndup_s_65536_61 + 1)
   0048 C7r00r01      [ 4]  125 	sta	(___memcpy_PARM_2 + 1)
   004B C6r00r02      [ 4]  126 	lda	_strndup_s_65536_61
   004E C7r00r00      [ 4]  127 	sta	___memcpy_PARM_2
   0051 C6r00r04      [ 4]  128 	lda	_strndup_l_65536_62
   0054 C7r00r00      [ 4]  129 	sta	___memcpy_PARM_3
   0057 C6r00r05      [ 4]  130 	lda	(_strndup_l_65536_62 + 1)
   005A C7r00r01      [ 4]  131 	sta	(___memcpy_PARM_3 + 1)
   005D 9F            [ 1]  132 	txa
   005E 8B            [ 2]  133 	pshh
   005F 88            [ 3]  134 	pulx
   0060 CDr00r00      [ 6]  135 	jsr	___memcpy
                            136 ;../strndup.c:42: r[l] = 0;
   0063 C6r00r05      [ 4]  137 	lda	(_strndup_l_65536_62 + 1)
   0066 CBr00r07      [ 4]  138 	add	(_strndup_r_65537_63 + 1)
   0069 97            [ 1]  139 	tax
   006A C6r00r04      [ 4]  140 	lda	_strndup_l_65536_62
   006D C9r00r06      [ 4]  141 	adc	_strndup_r_65537_63
   0070 87            [ 2]  142 	psha
   0071 8A            [ 3]  143 	pulh
   0072 4F            [ 1]  144 	clra
   0073 F7            [ 2]  145 	sta	,x
   0074                     146 00104$:
                            147 ;../strndup.c:44: return (r);
   0074 CEr00r06      [ 4]  148 	ldx	_strndup_r_65537_63
   0077 C6r00r07      [ 4]  149 	lda	(_strndup_r_65537_63 + 1)
                            150 ;../strndup.c:45: }
   007A 81            [ 6]  151 	rts
                            152 	.area CSEG    (CODE)
                            153 	.area CONST   (CODE)
                            154 	.area XINIT   (CODE)
                            155 	.area CABS    (ABS,CODE)
