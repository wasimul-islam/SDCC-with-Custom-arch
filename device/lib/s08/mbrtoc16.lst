                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module mbrtoc16
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _mbrtowc
                             24 	.globl _mbrtoc16_PARM_4
                             25 	.globl _mbrtoc16_PARM_3
                             26 	.globl _mbrtoc16_PARM_2
                             27 	.globl _mbrtoc16
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (PAG)
   0000                      32 _mbrtoc16_sloc0_1_0:
   0000                      33 	.ds 2
   0002                      34 _mbrtoc16_sloc1_1_0:
   0002                      35 	.ds 2
   0004                      36 _mbrtoc16_sloc2_1_0:
   0004                      37 	.ds 2
   0006                      38 _mbrtoc16_sloc3_1_0:
   0006                      39 	.ds 1
   0007                      40 _mbrtoc16_sloc4_1_0:
   0007                      41 	.ds 2
   0009                      42 _mbrtoc16_sloc5_1_0:
   0009                      43 	.ds 2
   000B                      44 _mbrtoc16_sloc6_1_0:
   000B                      45 	.ds 2
   000D                      46 _mbrtoc16_sloc7_1_0:
   000D                      47 	.ds 4
                             48 ;--------------------------------------------------------
                             49 ; overlayable items in ram
                             50 ;--------------------------------------------------------
                             51 ;--------------------------------------------------------
                             52 ; absolute ram data
                             53 ;--------------------------------------------------------
                             54 	.area IABS    (ABS)
                             55 	.area IABS    (ABS)
                             56 ;--------------------------------------------------------
                             57 ; absolute external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XABS    (ABS)
                             60 ;--------------------------------------------------------
                             61 ; initialized external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XISEG
                             64 ;--------------------------------------------------------
                             65 ; extended address mode data
                             66 ;--------------------------------------------------------
                             67 	.area XSEG
   0000                      68 _mbrtoc16_PARM_2:
   0000                      69 	.ds 2
   0002                      70 _mbrtoc16_PARM_3:
   0002                      71 	.ds 2
   0004                      72 _mbrtoc16_PARM_4:
   0004                      73 	.ds 2
   0006                      74 _mbrtoc16_pc16_65536_15:
   0006                      75 	.ds 2
   0008                      76 _mbrtoc16_codepoint_65536_16:
   0008                      77 	.ds 4
   000C                      78 _mbrtoc16_ret_65536_16:
   000C                      79 	.ds 2
   000E                      80 _mbrtoc16_sps_65536_16:
   000E                      81 	.ds 3
   0011                      82 _mbrtoc16_low_surrogate_65536_16:
   0011                      83 	.ds 2
                             84 ;--------------------------------------------------------
                             85 ; global & static initialisations
                             86 ;--------------------------------------------------------
                             87 	.area HOME    (CODE)
                             88 	.area GSINIT  (CODE)
                             89 	.area GSFINAL (CODE)
                             90 	.area GSINIT  (CODE)
                             91 ;--------------------------------------------------------
                             92 ; Home
                             93 ;--------------------------------------------------------
                             94 	.area HOME    (CODE)
                             95 	.area HOME    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; code
                             98 ;--------------------------------------------------------
                             99 	.area CSEG    (CODE)
                            100 ;------------------------------------------------------------
                            101 ;Allocation info for local variables in function 'mbrtoc16'
                            102 ;------------------------------------------------------------
                            103 ;sloc0                     Allocated with name '_mbrtoc16_sloc0_1_0'
                            104 ;sloc1                     Allocated with name '_mbrtoc16_sloc1_1_0'
                            105 ;sloc2                     Allocated with name '_mbrtoc16_sloc2_1_0'
                            106 ;sloc3                     Allocated with name '_mbrtoc16_sloc3_1_0'
                            107 ;sloc4                     Allocated with name '_mbrtoc16_sloc4_1_0'
                            108 ;sloc5                     Allocated with name '_mbrtoc16_sloc5_1_0'
                            109 ;sloc6                     Allocated with name '_mbrtoc16_sloc6_1_0'
                            110 ;sloc7                     Allocated with name '_mbrtoc16_sloc7_1_0'
                            111 ;s                         Allocated with name '_mbrtoc16_PARM_2'
                            112 ;n                         Allocated with name '_mbrtoc16_PARM_3'
                            113 ;ps                        Allocated with name '_mbrtoc16_PARM_4'
                            114 ;pc16                      Allocated with name '_mbrtoc16_pc16_65536_15'
                            115 ;codepoint                 Allocated with name '_mbrtoc16_codepoint_65536_16'
                            116 ;ret                       Allocated with name '_mbrtoc16_ret_65536_16'
                            117 ;sps                       Allocated with name '_mbrtoc16_sps_65536_16'
                            118 ;low_surrogate             Allocated with name '_mbrtoc16_low_surrogate_65536_16'
                            119 ;------------------------------------------------------------
                            120 ;../mbrtoc16.c:34: size_t mbrtoc16(char16_t *restrict pc16, const char *restrict s, size_t n, mbstate_t *restrict ps)
                            121 ;	-----------------------------------------
                            122 ;	 function mbrtoc16
                            123 ;	-----------------------------------------
                            124 ;	Register assignment is optimal.
                            125 ;	Stack space usage: 0 bytes.
   0000                     126 _mbrtoc16:
   0000 C7r00r07      [ 4]  127 	sta	(_mbrtoc16_pc16_65536_15 + 1)
   0003 CFr00r06      [ 4]  128 	stx	_mbrtoc16_pc16_65536_15
                            129 ;../mbrtoc16.c:41: if(!s)
   0006 C6r00r00      [ 4]  130 	lda	_mbrtoc16_PARM_2
   0009 CAr00r01      [ 4]  131 	ora	(_mbrtoc16_PARM_2 + 1)
   000C 26 10         [ 3]  132 	bne	00102$
                            133 ;../mbrtoc16.c:42: return(mbrtoc16(0, "", 1, ps));
   000E 45r00r00      [ 3]  134 	ldhx	#___str_0
   0011 96r00r00      [ 5]  135 	sthx	_mbrtoc16_PARM_2
   0014 45 00 01      [ 3]  136 	ldhx	#0x0001
   0017 96r00r02      [ 5]  137 	sthx	_mbrtoc16_PARM_3
   001A 4F            [ 1]  138 	clra
   001B 5A            [ 1]  139 	decx
   001C 20 E2         [ 3]  140 	bra	_mbrtoc16
   001E                     141 00102$:
                            142 ;../mbrtoc16.c:44: if(!ps)
   001E C6r00r04      [ 4]  143 	lda	_mbrtoc16_PARM_4
   0021 CAr00r05      [ 4]  144 	ora	(_mbrtoc16_PARM_4 + 1)
   0024 26 06         [ 3]  145 	bne	00104$
                            146 ;../mbrtoc16.c:45: ps = &sps;
   0026 45r00r0E      [ 3]  147 	ldhx	#_mbrtoc16_sps_65536_16
   0029 96r00r04      [ 5]  148 	sthx	_mbrtoc16_PARM_4
   002C                     149 00104$:
                            150 ;../mbrtoc16.c:47: if(!ps->c[0] && (ps->c[1] || ps->c[2]))
   002C 32r00r04      [ 5]  151 	ldhx	_mbrtoc16_PARM_4
   002F 35*00         [ 4]  152 	sthx	*_mbrtoc16_sloc0_1_0
   0031 55*00         [ 4]  153 	ldhx	*_mbrtoc16_sloc0_1_0
   0033 F6            [ 3]  154 	lda	,x
   0034 4E*00*02      [ 6]  155 	mov	*_mbrtoc16_sloc0_1_0,*_mbrtoc16_sloc1_1_0
   0037 4E*01*03      [ 6]  156 	mov	*(_mbrtoc16_sloc0_1_0 + 1),*(_mbrtoc16_sloc1_1_0 + 1)
   003A 4E*00*04      [ 6]  157 	mov	*_mbrtoc16_sloc0_1_0,*_mbrtoc16_sloc2_1_0
   003D 4E*01*05      [ 6]  158 	mov	*(_mbrtoc16_sloc0_1_0 + 1),*(_mbrtoc16_sloc2_1_0 + 1)
   0040 4D            [ 1]  159 	tsta
   0041 26 49         [ 3]  160 	bne	00108$
   0043 55*02         [ 4]  161 	ldhx	*_mbrtoc16_sloc1_1_0
   0045 E6 01         [ 3]  162 	lda	1,x
   0047 26 06         [ 3]  163 	bne	00107$
   0049 55*04         [ 4]  164 	ldhx	*_mbrtoc16_sloc2_1_0
   004B E6 02         [ 3]  165 	lda	2,x
   004D 27 3D         [ 3]  166 	beq	00108$
   004F                     167 00107$:
                            168 ;../mbrtoc16.c:50: *pc16 = ps->c[1] + (ps->c[2] << 8);
   004F 32r00r04      [ 5]  169 	ldhx	_mbrtoc16_PARM_4
   0052 35*07         [ 4]  170 	sthx	*_mbrtoc16_sloc4_1_0
   0054 35*09         [ 4]  171 	sthx	*_mbrtoc16_sloc5_1_0
                            172 ;../mbrtoc16.c:49: if(pc16)
   0056 C6r00r06      [ 4]  173 	lda	_mbrtoc16_pc16_65536_15
   0059 CAr00r07      [ 4]  174 	ora	(_mbrtoc16_pc16_65536_15 + 1)
   005C 27 20         [ 3]  175 	beq	00106$
                            176 ;../mbrtoc16.c:50: *pc16 = ps->c[1] + (ps->c[2] << 8);
   005E 55*07         [ 4]  177 	ldhx	*_mbrtoc16_sloc4_1_0
   0060 E6 01         [ 3]  178 	lda	1,x
   0062 B7*0C         [ 3]  179 	sta	*(_mbrtoc16_sloc6_1_0 + 1)
   0064 6E 00*0B      [ 4]  180 	mov	#0x00,*_mbrtoc16_sloc6_1_0
   0067 55*09         [ 4]  181 	ldhx	*_mbrtoc16_sloc5_1_0
   0069 E6 02         [ 3]  182 	lda	2,x
   006B 5F            [ 1]  183 	clrx
   006C 97            [ 1]  184 	tax
   006D 4F            [ 1]  185 	clra
   006E BB*0C         [ 3]  186 	add	*(_mbrtoc16_sloc6_1_0 + 1)
   0070 87            [ 2]  187 	psha
   0071 9F            [ 1]  188 	txa
   0072 B9*0B         [ 3]  189 	adc	*_mbrtoc16_sloc6_1_0
   0074 97            [ 1]  190 	tax
   0075 86            [ 3]  191 	pula
   0076 89            [ 2]  192 	pshx
   0077 32r00r06      [ 5]  193 	ldhx	_mbrtoc16_pc16_65536_15
   007A E7 01         [ 3]  194 	sta	1,x
   007C 86            [ 3]  195 	pula
   007D F7            [ 2]  196 	sta	,x
   007E                     197 00106$:
                            198 ;../mbrtoc16.c:51: ps->c[1] = ps->c[2] = 0;
   007E 55*09         [ 4]  199 	ldhx	*_mbrtoc16_sloc5_1_0
   0080 4F            [ 1]  200 	clra
   0081 E7 02         [ 3]  201 	sta	2,x
   0083 55*07         [ 4]  202 	ldhx	*_mbrtoc16_sloc4_1_0
   0085 E7 01         [ 3]  203 	sta	1,x
                            204 ;../mbrtoc16.c:52: return(-3);
   0087 A6 FD         [ 2]  205 	lda	#0xfd
   0089 AE FF         [ 2]  206 	ldx	#0xff
   008B 81            [ 6]  207 	rts
   008C                     208 00108$:
                            209 ;../mbrtoc16.c:55: ret = mbrtowc(&codepoint, s, n, ps);
   008C 32r00r00      [ 5]  210 	ldhx	_mbrtoc16_PARM_2
   008F 96r00r00      [ 5]  211 	sthx	_mbrtowc_PARM_2
   0092 32r00r02      [ 5]  212 	ldhx	_mbrtoc16_PARM_3
   0095 96r00r00      [ 5]  213 	sthx	_mbrtowc_PARM_3
   0098 B6*00         [ 3]  214 	lda	*_mbrtoc16_sloc0_1_0
   009A C7r00r00      [ 4]  215 	sta	_mbrtowc_PARM_4
   009D B6*01         [ 3]  216 	lda	*(_mbrtoc16_sloc0_1_0 + 1)
   009F C7r00r01      [ 4]  217 	sta	(_mbrtowc_PARM_4 + 1)
   00A2 A6r08         [ 2]  218 	lda	#_mbrtoc16_codepoint_65536_16
   00A4 AEs00         [ 2]  219 	ldx	#>_mbrtoc16_codepoint_65536_16
   00A6 CDr00r00      [ 6]  220 	jsr	_mbrtowc
   00A9 C7r00r0D      [ 4]  221 	sta	(_mbrtoc16_ret_65536_16 + 1)
   00AC CFr00r0C      [ 4]  222 	stx	_mbrtoc16_ret_65536_16
                            223 ;../mbrtoc16.c:57: if(ret > MB_LEN_MAX)
   00AF A6 04         [ 2]  224 	lda	#0x04
   00B1 C0r00r0D      [ 4]  225 	sub	(_mbrtoc16_ret_65536_16 + 1)
   00B4 4F            [ 1]  226 	clra
   00B5 C2r00r0C      [ 4]  227 	sbc	_mbrtoc16_ret_65536_16
   00B8 24 07         [ 3]  228 	bcc	00112$
                            229 ;../mbrtoc16.c:58: return(ret);
   00BA CEr00r0C      [ 4]  230 	ldx	_mbrtoc16_ret_65536_16
   00BD C6r00r0D      [ 4]  231 	lda	(_mbrtoc16_ret_65536_16 + 1)
   00C0 81            [ 6]  232 	rts
   00C1                     233 00112$:
                            234 ;../mbrtoc16.c:60: if (codepoint <= 0xffff) // Basic multilingual plane
   00C1 A6 FF         [ 2]  235 	lda	#0xff
   00C3 C0r00r0B      [ 4]  236 	sub	(_mbrtoc16_codepoint_65536_16 + 3)
   00C6 A6 FF         [ 2]  237 	lda	#0xff
   00C8 C2r00r0A      [ 4]  238 	sbc	(_mbrtoc16_codepoint_65536_16 + 2)
   00CB 4F            [ 1]  239 	clra
   00CC C2r00r09      [ 4]  240 	sbc	(_mbrtoc16_codepoint_65536_16 + 1)
   00CF 4F            [ 1]  241 	clra
   00D0 C2r00r08      [ 4]  242 	sbc	_mbrtoc16_codepoint_65536_16
   00D3 25 1D         [ 3]  243 	bcs	00116$
                            244 ;../mbrtoc16.c:62: if(pc16)
   00D5 C6r00r06      [ 4]  245 	lda	_mbrtoc16_pc16_65536_15
   00D8 CAr00r07      [ 4]  246 	ora	(_mbrtoc16_pc16_65536_15 + 1)
   00DB 27 0E         [ 3]  247 	beq	00114$
                            248 ;../mbrtoc16.c:63: *pc16 = codepoint;
   00DD C6r00r0B      [ 4]  249 	lda	(_mbrtoc16_codepoint_65536_16 + 3)
   00E0 CEr00r0A      [ 4]  250 	ldx	(_mbrtoc16_codepoint_65536_16 + 2)
   00E3 89            [ 2]  251 	pshx
   00E4 32r00r06      [ 5]  252 	ldhx	_mbrtoc16_pc16_65536_15
   00E7 E7 01         [ 3]  253 	sta	1,x
   00E9 86            [ 3]  254 	pula
   00EA F7            [ 2]  255 	sta	,x
   00EB                     256 00114$:
                            257 ;../mbrtoc16.c:64: return(ret);
   00EB CEr00r0C      [ 4]  258 	ldx	_mbrtoc16_ret_65536_16
   00EE C6r00r0D      [ 4]  259 	lda	(_mbrtoc16_ret_65536_16 + 1)
   00F1 81            [ 6]  260 	rts
   00F2                     261 00116$:
                            262 ;../mbrtoc16.c:67: codepoint -= 0x100000;
   00F2 45r00r08      [ 3]  263 	ldhx	#_mbrtoc16_codepoint_65536_16
   00F5 E6 03         [ 3]  264 	lda	3,x
   00F7 A0 00         [ 2]  265 	sub	#0x00
   00F9 E7 03         [ 3]  266 	sta	3,x
   00FB E6 02         [ 3]  267 	lda	2,x
   00FD A2 00         [ 2]  268 	sbc	#0x00
   00FF E7 02         [ 3]  269 	sta	2,x
   0101 E6 01         [ 3]  270 	lda	1,x
   0103 A2 10         [ 2]  271 	sbc	#0x10
   0105 E7 01         [ 3]  272 	sta	1,x
   0107 F6            [ 3]  273 	lda	,x
   0108 A2 00         [ 2]  274 	sbc	#0x00
   010A F7            [ 2]  275 	sta	,x
                            276 ;../mbrtoc16.c:68: if(pc16)
   010B C6r00r06      [ 4]  277 	lda	_mbrtoc16_pc16_65536_15
   010E CAr00r07      [ 4]  278 	ora	(_mbrtoc16_pc16_65536_15 + 1)
   0111 27 37         [ 3]  279 	beq	00118$
                            280 ;../mbrtoc16.c:69: *pc16 = ((codepoint >> 10) & 0x3ff) + 0xd800;
   0113 C6r00r0A      [ 4]  281 	lda	(_mbrtoc16_codepoint_65536_16 + 2)
   0116 CEr00r09      [ 4]  282 	ldx	(_mbrtoc16_codepoint_65536_16 + 1)
   0119 54            [ 1]  283 	lsrx
   011A 46            [ 1]  284 	rora
   011B 54            [ 1]  285 	lsrx
   011C 46            [ 1]  286 	rora
   011D B7*10         [ 3]  287 	sta	*(_mbrtoc16_sloc7_1_0 + 3)
   011F BF*0F         [ 3]  288 	stx	*(_mbrtoc16_sloc7_1_0 + 2)
   0121 CEr00r08      [ 4]  289 	ldx	_mbrtoc16_codepoint_65536_16
   0124 4F            [ 1]  290 	clra
   0125 54            [ 1]  291 	lsrx
   0126 46            [ 1]  292 	rora
   0127 54            [ 1]  293 	lsrx
   0128 46            [ 1]  294 	rora
   0129 BA*0F         [ 3]  295 	ora	*(_mbrtoc16_sloc7_1_0 + 2)
   012B B7*0F         [ 3]  296 	sta	*(_mbrtoc16_sloc7_1_0 + 2)
   012D BF*0E         [ 3]  297 	stx	*(_mbrtoc16_sloc7_1_0 + 1)
   012F 6E 00*0D      [ 4]  298 	mov	#0x00,*_mbrtoc16_sloc7_1_0
   0132 B6*10         [ 3]  299 	lda	*(_mbrtoc16_sloc7_1_0 + 3)
   0134 BE*0F         [ 3]  300 	ldx	*(_mbrtoc16_sloc7_1_0 + 2)
   0136 87            [ 2]  301 	psha
   0137 9F            [ 1]  302 	txa
   0138 A4 03         [ 2]  303 	and	#0x03
   013A 97            [ 1]  304 	tax
   013B 86            [ 3]  305 	pula
   013C 87            [ 2]  306 	psha
   013D 9F            [ 1]  307 	txa
   013E AB D8         [ 2]  308 	add	#0xd8
   0140 97            [ 1]  309 	tax
   0141 86            [ 3]  310 	pula
   0142 89            [ 2]  311 	pshx
   0143 32r00r06      [ 5]  312 	ldhx	_mbrtoc16_pc16_65536_15
   0146 E7 01         [ 3]  313 	sta	1,x
   0148 86            [ 3]  314 	pula
   0149 F7            [ 2]  315 	sta	,x
   014A                     316 00118$:
                            317 ;../mbrtoc16.c:70: low_surrogate = (codepoint & 0x3ff) + 0xdc00;
   014A C6r00r0B      [ 4]  318 	lda	(_mbrtoc16_codepoint_65536_16 + 3)
   014D CEr00r0A      [ 4]  319 	ldx	(_mbrtoc16_codepoint_65536_16 + 2)
   0150 87            [ 2]  320 	psha
   0151 9F            [ 1]  321 	txa
   0152 A4 03         [ 2]  322 	and	#0x03
   0154 97            [ 1]  323 	tax
   0155 86            [ 3]  324 	pula
   0156 C7r00r12      [ 4]  325 	sta	(_mbrtoc16_low_surrogate_65536_16 + 1)
   0159 9F            [ 1]  326 	txa
   015A AB DC         [ 2]  327 	add	#0xdc
   015C C7r00r11      [ 4]  328 	sta	_mbrtoc16_low_surrogate_65536_16
                            329 ;../mbrtoc16.c:71: ps->c[0] = 0;
   015F 55*00         [ 4]  330 	ldhx	*_mbrtoc16_sloc0_1_0
   0161 4F            [ 1]  331 	clra
   0162 F7            [ 2]  332 	sta	,x
                            333 ;../mbrtoc16.c:72: ps->c[1] = low_surrogate & 0xff;
   0163 C6r00r12      [ 4]  334 	lda	(_mbrtoc16_low_surrogate_65536_16 + 1)
   0166 55*02         [ 4]  335 	ldhx	*_mbrtoc16_sloc1_1_0
   0168 E7 01         [ 3]  336 	sta	1,x
                            337 ;../mbrtoc16.c:73: ps->c[2] = low_surrogate >> 8;
   016A C6r00r11      [ 4]  338 	lda	_mbrtoc16_low_surrogate_65536_16
   016D 55*04         [ 4]  339 	ldhx	*_mbrtoc16_sloc2_1_0
   016F E7 02         [ 3]  340 	sta	2,x
                            341 ;../mbrtoc16.c:75: return(ret);
   0171 CEr00r0C      [ 4]  342 	ldx	_mbrtoc16_ret_65536_16
   0174 C6r00r0D      [ 4]  343 	lda	(_mbrtoc16_ret_65536_16 + 1)
                            344 ;../mbrtoc16.c:76: }
   0177 81            [ 6]  345 	rts
                            346 	.area CSEG    (CODE)
                            347 	.area CONST   (CODE)
                            348 	.area CONST   (CODE)
   0000                     349 ___str_0:
   0000 00                  350 	.db 0x00
                            351 	.area CSEG    (CODE)
                            352 	.area XINIT   (CODE)
                            353 	.area CABS    (ABS,CODE)
