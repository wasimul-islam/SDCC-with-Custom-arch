                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _setjmp
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area DSEG    (PAG)
                             27 ;--------------------------------------------------------
                             28 ; overlayable items in ram
                             29 ;--------------------------------------------------------
                             30 ;--------------------------------------------------------
                             31 ; absolute ram data
                             32 ;--------------------------------------------------------
                             33 	.area IABS    (ABS)
                             34 	.area IABS    (ABS)
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area XABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; initialized external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XISEG
                             43 ;--------------------------------------------------------
                             44 ; extended address mode data
                             45 ;--------------------------------------------------------
                             46 	.area XSEG
                             47 ;--------------------------------------------------------
                             48 ; global & static initialisations
                             49 ;--------------------------------------------------------
                             50 	.area HOME    (CODE)
                             51 	.area GSINIT  (CODE)
                             52 	.area GSFINAL (CODE)
                             53 	.area GSINIT  (CODE)
                             54 ;--------------------------------------------------------
                             55 ; Home
                             56 ;--------------------------------------------------------
                             57 	.area HOME    (CODE)
                             58 	.area HOME    (CODE)
                             59 ;--------------------------------------------------------
                             60 ; code
                             61 ;--------------------------------------------------------
                             62 	.area CSEG    (CODE)
                             63 ;------------------------------------------------------------
                             64 ;Allocation info for local variables in function 'dummy'
                             65 ;------------------------------------------------------------
                             66 ;_setjmp.c:33: static void dummy (void) __naked
                             67 ;	-----------------------------------------
                             68 ;	 function dummy
                             69 ;	-----------------------------------------
                             70 ;	Register assignment is optimal.
                             71 ;	Stack space usage: 0 bytes.
   0000                      72 _dummy:
                             73 ;	naked function: no prologue.
                             74 ;_setjmp.c:134: __endasm;
                             75 ;--------------------------------------------------------
                             76 ;	overlayable items in ram
                             77 ;--------------------------------------------------------
                             78 	        .area	OSEG (PAG, OVR)
   0000                      79 	___setjmp_buf:
   0000                      80 	        .ds	2
                             81 	        .area	OSEG (PAG, OVR)
   0000                      82 	_longjmp_buf:
   0000                      83 	        .ds	2
                             84 ;--------------------------------------------------------
                             85 ;	extended address mode data
                             86 ;--------------------------------------------------------
                             87 	        .area	XSEG
   0000                      88 	_longjmp_PARM_2:
   0000                      89 	        .ds	2
                             90 ;--------------------------------------------------------
                             91 ;	code
                             92 ;--------------------------------------------------------
                             93 	        .area	CSEG (CODE)
                             94 ;------------------------------------------------------------
                             95 ;Allocation	info for local variables in function '__setjmp'
                             96 ;------------------------------------------------------------
                             97 ;buf	Allocated with name '___setjmp_buf'
                             98 ;------------------------------------------------------------
                             99 ;_setjmp.c:205:	int __setjmp (jmp_buf buf)
                            100 ;	-----------------------------------------
                            101 ;	function __setjmp
                            102 ;	-----------------------------------------
                            103 ;	Stack space usage: 1 bytes.
                            104 	        .globl	___setjmp
   0000                     105 	___setjmp:
   0000 CFr00r00      [ 4]  106 	        stx	(___setjmp_buf + 0) ; msb(buf)
   0003 C7r00r01      [ 4]  107 	        sta	(___setjmp_buf + 1) ; lsb(buf)
                            108         ;	save stack pointer
   0006 95            [ 2]  109 	        tsx
   0007 8B            [ 2]  110 	        pshh
   0008 9F            [ 1]  111 	        txa
   0009 32r00r00      [ 5]  112 	        ldhx	(___setjmp_buf)
   000C E7 01         [ 3]  113 	        sta	1,x
   000E 86            [ 3]  114 	        pula
   000F E7 00         [ 3]  115 	        sta	0,x
                            116         ;	save return address
   0011 9E E6 01      [ 4]  117 	        lda	1,s
   0014 E7 02         [ 3]  118 	        sta	2,x
   0016 9E E6 02      [ 4]  119 	        lda	2,s
   0019 E7 03         [ 3]  120 	        sta	3,x
                            121         ;	return 0
   001B 4F            [ 1]  122 	        clra
   001C 97            [ 1]  123 	        tax
   001D 81            [ 6]  124 	        rts
                            125 ;------------------------------------------------------------
                            126 ;Allocation	info for local variables in function 'longjmp'
                            127 ;------------------------------------------------------------
                            128 ;rv	Allocated with name '_longjmp_PARM_2'
                            129 ;buf	Allocated with name '_longjmp_buf'
                            130 ;------------------------------------------------------------
                            131 ;_setjmp.c:216:	int longjmp (jmp_buf buf, int rv)
                            132 ;	-----------------------------------------
                            133 ;	function longjmp
                            134 ;	-----------------------------------------
                            135 ;	Stack space usage: 1 bytes.
                            136 	        .globl	_longjmp
                            137 	        .globl	_longjmp_PARM_2
   001E                     138 	_longjmp:
   001E CFr00r00      [ 4]  139 	        stx	(_longjmp_buf + 0) ; msb(buf)
   0021 C7r00r01      [ 4]  140 	        sta	(_longjmp_buf + 1) ; lsb(buf)
                            141         ;	restore stack pointer
   0024 32r00r00      [ 5]  142 	        ldhx	(_longjmp_buf)
   0027 E6 00         [ 3]  143 	        lda	0,x
   0029 87            [ 2]  144 	        psha
   002A EE 01         [ 3]  145 	        ldx	1,x
   002C 8A            [ 3]  146 	        pulh
   002D 94            [ 2]  147 	        txs
                            148         ;	set return address
   002E 32r00r00      [ 5]  149 	        ldhx	(_longjmp_buf)
   0031 E6 02         [ 3]  150 	        lda	2,x
   0033 9E E7 01      [ 4]  151 	        sta	1,s
   0036 E6 03         [ 3]  152 	        lda	3,x
   0038 9E E7 02      [ 4]  153 	        sta	2,s
                            154 ;_setjmp.c:224:	return rv ? rv : 1;
   003B CEr00r00      [ 4]  155 	        ldx	(_longjmp_PARM_2 + 0)
   003E 9F            [ 1]  156 	        txa
   003F CAr00r01      [ 4]  157 	        ora	(_longjmp_PARM_2 + 1)
   0042 27 04         [ 3]  158 	        beq	0001$
   0044 C6r00r01      [ 4]  159 	        lda	(_longjmp_PARM_2 + 1)
   0047 81            [ 6]  160 	        rts
   0048                     161 	0001$:
   0048 A6 01         [ 2]  162 	        lda	#0x01
   004A 81            [ 6]  163 	        rts
                            164 ;_setjmp.c:135: }
                            165 ;	naked function: no epilogue.
                            166 	.area CSEG    (CODE)
                            167 	.area CONST   (CODE)
                            168 	.area XINIT   (CODE)
                            169 	.area CABS    (ABS,CODE)
