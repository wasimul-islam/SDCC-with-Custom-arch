                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _strncpy
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strncpy_PARM_3
                             24 	.globl _strncpy_PARM_2
                             25 	.globl _strncpy
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _strncpy_sloc0_1_0:
   0000                      35 	.ds 2
   0002                      36 _strncpy_sloc1_1_0:
   0002                      37 	.ds 2
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; initialized external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 _strncpy_PARM_2:
   0000                      56 	.ds 2
   0002                      57 _strncpy_PARM_3:
   0002                      58 	.ds 2
   0004                      59 _strncpy_d_65536_26:
   0004                      60 	.ds 2
   0006                      61 _strncpy_d1_65536_27:
   0006                      62 	.ds 2
                             63 ;--------------------------------------------------------
                             64 ; global & static initialisations
                             65 ;--------------------------------------------------------
                             66 	.area HOME    (CODE)
                             67 	.area GSINIT  (CODE)
                             68 	.area GSFINAL (CODE)
                             69 	.area GSINIT  (CODE)
                             70 ;--------------------------------------------------------
                             71 ; Home
                             72 ;--------------------------------------------------------
                             73 	.area HOME    (CODE)
                             74 	.area HOME    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; code
                             77 ;--------------------------------------------------------
                             78 	.area CSEG    (CODE)
                             79 ;------------------------------------------------------------
                             80 ;Allocation info for local variables in function 'strncpy'
                             81 ;------------------------------------------------------------
                             82 ;s                         Allocated with name '_strncpy_PARM_2'
                             83 ;n                         Allocated with name '_strncpy_PARM_3'
                             84 ;d                         Allocated with name '_strncpy_d_65536_26'
                             85 ;d1                        Allocated with name '_strncpy_d1_65536_27'
                             86 ;sloc0                     Allocated with name '_strncpy_sloc0_1_0'
                             87 ;sloc1                     Allocated with name '_strncpy_sloc1_1_0'
                             88 ;------------------------------------------------------------
                             89 ;../_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                             90 ;	-----------------------------------------
                             91 ;	 function strncpy
                             92 ;	-----------------------------------------
                             93 ;	Register assignment is optimal.
                             94 ;	Stack space usage: 0 bytes.
   0000                      95 _strncpy:
   0000 C7r00r05      [ 4]   96 	sta	(_strncpy_d_65536_26 + 1)
   0003 CFr00r04      [ 4]   97 	stx	_strncpy_d_65536_26
                             98 ;../_strncpy.c:35: register char * d1 =  d;
   0006 32r00r04      [ 5]   99 	ldhx	_strncpy_d_65536_26
   0009 96r00r06      [ 5]  100 	sthx	_strncpy_d1_65536_27
                            101 ;../_strncpy.c:37: while ( n && *s )
   000C 32r00r02      [ 5]  102 	ldhx	_strncpy_PARM_3
   000F 35*00         [ 4]  103 	sthx	*_strncpy_sloc0_1_0
   0011 32r00r00      [ 5]  104 	ldhx	_strncpy_PARM_2
   0014 35*02         [ 4]  105 	sthx	*_strncpy_sloc1_1_0
   0016 32r00r04      [ 5]  106 	ldhx	_strncpy_d_65536_26
   0019                     107 00102$:
   0019 B6*01         [ 3]  108 	lda	*(_strncpy_sloc0_1_0 + 1)
   001B BA*00         [ 3]  109 	ora	*_strncpy_sloc0_1_0
   001D 27 23         [ 3]  110 	beq	00114$
   001F 89            [ 2]  111 	pshx
   0020 8B            [ 2]  112 	pshh
   0021 55*02         [ 4]  113 	ldhx	*_strncpy_sloc1_1_0
   0023 F6            [ 3]  114 	lda	,x
   0024 8A            [ 3]  115 	pulh
   0025 88            [ 3]  116 	pulx
   0026 4D            [ 1]  117 	tsta
   0027 27 19         [ 3]  118 	beq	00114$
                            119 ;../_strncpy.c:39: n-- ;
   0029 89            [ 2]  120 	pshx
   002A 8B            [ 2]  121 	pshh
   002B 55*00         [ 4]  122 	ldhx	*_strncpy_sloc0_1_0
   002D AF FF         [ 2]  123 	aix	#-1
   002F 35*00         [ 4]  124 	sthx	*_strncpy_sloc0_1_0
   0031 8A            [ 3]  125 	pulh
   0032 88            [ 3]  126 	pulx
                            127 ;../_strncpy.c:40: *d++ = *s++ ;
   0033 89            [ 2]  128 	pshx
   0034 8B            [ 2]  129 	pshh
   0035 55*02         [ 4]  130 	ldhx	*_strncpy_sloc1_1_0
   0037 AF 01         [ 2]  131 	aix	#1
   0039 35*02         [ 4]  132 	sthx	*_strncpy_sloc1_1_0
   003B 8A            [ 3]  133 	pulh
   003C 88            [ 3]  134 	pulx
   003D F7            [ 2]  135 	sta	,x
   003E AF 01         [ 2]  136 	aix	#1
   0040 20 D7         [ 3]  137 	bra	00102$
                            138 ;../_strncpy.c:42: while ( n-- )
   0042                     139 00114$:
   0042 4E*00*02      [ 6]  140 	mov	*_strncpy_sloc0_1_0,*_strncpy_sloc1_1_0
   0045 4E*01*03      [ 6]  141 	mov	*(_strncpy_sloc0_1_0 + 1),*(_strncpy_sloc1_1_0 + 1)
   0048                     142 00105$:
   0048 4E*02*00      [ 6]  143 	mov	*_strncpy_sloc1_1_0,*_strncpy_sloc0_1_0
   004B 4E*03*01      [ 6]  144 	mov	*(_strncpy_sloc1_1_0 + 1),*(_strncpy_sloc0_1_0 + 1)
   004E 89            [ 2]  145 	pshx
   004F 8B            [ 2]  146 	pshh
   0050 55*02         [ 4]  147 	ldhx	*_strncpy_sloc1_1_0
   0052 AF FF         [ 2]  148 	aix	#-1
   0054 35*02         [ 4]  149 	sthx	*_strncpy_sloc1_1_0
   0056 8A            [ 3]  150 	pulh
   0057 88            [ 3]  151 	pulx
   0058 B6*01         [ 3]  152 	lda	*(_strncpy_sloc0_1_0 + 1)
   005A BA*00         [ 3]  153 	ora	*_strncpy_sloc0_1_0
   005C 27 06         [ 3]  154 	beq	00107$
                            155 ;../_strncpy.c:44: *d++ = '\0' ;
   005E 4F            [ 1]  156 	clra
   005F F7            [ 2]  157 	sta	,x
   0060 AF 01         [ 2]  158 	aix	#1
   0062 20 E4         [ 3]  159 	bra	00105$
   0064                     160 00107$:
                            161 ;../_strncpy.c:46: return d1;
   0064 CEr00r06      [ 4]  162 	ldx	_strncpy_d1_65536_27
   0067 C6r00r07      [ 4]  163 	lda	(_strncpy_d1_65536_27 + 1)
                            164 ;../_strncpy.c:47: }
   006A 81            [ 6]  165 	rts
                            166 	.area CSEG    (CODE)
                            167 	.area CONST   (CODE)
                            168 	.area XINIT   (CODE)
                            169 	.area CABS    (ABS,CODE)
