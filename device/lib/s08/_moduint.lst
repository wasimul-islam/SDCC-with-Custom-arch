                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _moduint
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl __moduint_PARM_2
                             24 	.globl __moduint
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 __moduint_sloc0_1_0:
   0000                      34 	.ds 1
                             35 ;--------------------------------------------------------
                             36 ; absolute ram data
                             37 ;--------------------------------------------------------
                             38 	.area IABS    (ABS)
                             39 	.area IABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area XABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; initialized external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XISEG
                             48 ;--------------------------------------------------------
                             49 ; extended address mode data
                             50 ;--------------------------------------------------------
                             51 	.area XSEG
   0000                      52 __moduint_PARM_2:
   0000                      53 	.ds 2
   0002                      54 __moduint_count_65536_2:
   0002                      55 	.ds 1
                             56 ;--------------------------------------------------------
                             57 ; global & static initialisations
                             58 ;--------------------------------------------------------
                             59 	.area HOME    (CODE)
                             60 	.area GSINIT  (CODE)
                             61 	.area GSFINAL (CODE)
                             62 	.area GSINIT  (CODE)
                             63 ;--------------------------------------------------------
                             64 ; Home
                             65 ;--------------------------------------------------------
                             66 	.area HOME    (CODE)
                             67 	.area HOME    (CODE)
                             68 ;--------------------------------------------------------
                             69 ; code
                             70 ;--------------------------------------------------------
                             71 	.area CSEG    (CODE)
                             72 ;------------------------------------------------------------
                             73 ;Allocation info for local variables in function '_moduint'
                             74 ;------------------------------------------------------------
                             75 ;b                         Allocated with name '__moduint_PARM_2'
                             76 ;a                         Allocated to registers x h 
                             77 ;count                     Allocated with name '__moduint_count_65536_2'
                             78 ;sloc0                     Allocated with name '__moduint_sloc0_1_0'
                             79 ;------------------------------------------------------------
                             80 ;../_moduint.c:179: _moduint (unsigned int a, unsigned int b) __SDCC_NONBANKED
                             81 ;	-----------------------------------------
                             82 ;	 function _moduint
                             83 ;	-----------------------------------------
                             84 ;	Register assignment is optimal.
                             85 ;	Stack space usage: 0 bytes.
   0000                      86 __moduint:
   0000 89            [ 2]   87 	pshx
   0001 97            [ 1]   88 	tax
   0002 8A            [ 3]   89 	pulh
                             90 ;../_moduint.c:181: unsigned char count = 0;
   0003 4F            [ 1]   91 	clra
   0004 C7r00r02      [ 4]   92 	sta	__moduint_count_65536_2
                             93 ;../_moduint.c:183: while (!MSB_SET(b))
   0007                      94 00103$:
   0007 87            [ 2]   95 	psha
   0008 C6r00r00      [ 4]   96 	lda	__moduint_PARM_2
   000B 49            [ 1]   97 	rola
   000C 4F            [ 1]   98 	clra
   000D 49            [ 1]   99 	rola
   000E B7*00         [ 3]  100 	sta	*__moduint_sloc0_1_0
   0010 86            [ 3]  101 	pula
   0011 3D*00         [ 4]  102 	tst	*__moduint_sloc0_1_0
   0013 26 2F         [ 3]  103 	bne	00117$
                            104 ;../_moduint.c:185: b <<= 1;
   0015 87            [ 2]  105 	psha
   0016 89            [ 2]  106 	pshx
   0017 C6r00r01      [ 4]  107 	lda	(__moduint_PARM_2 + 1)
   001A CEr00r00      [ 4]  108 	ldx	__moduint_PARM_2
   001D 48            [ 1]  109 	lsla
   001E 59            [ 1]  110 	rolx
   001F C7r00r01      [ 4]  111 	sta	(__moduint_PARM_2 + 1)
   0022 CFr00r00      [ 4]  112 	stx	__moduint_PARM_2
   0025 88            [ 3]  113 	pulx
   0026 86            [ 3]  114 	pula
                            115 ;../_moduint.c:186: if (b > a)
   0027 3Er00r00      [ 6]  116 	cphx	__moduint_PARM_2
   002A 24 12         [ 3]  117 	bcc	00102$
                            118 ;../_moduint.c:188: b >>=1;
   002C 89            [ 2]  119 	pshx
   002D C6r00r01      [ 4]  120 	lda	(__moduint_PARM_2 + 1)
   0030 CEr00r00      [ 4]  121 	ldx	__moduint_PARM_2
   0033 54            [ 1]  122 	lsrx
   0034 46            [ 1]  123 	rora
   0035 C7r00r01      [ 4]  124 	sta	(__moduint_PARM_2 + 1)
   0038 CFr00r00      [ 4]  125 	stx	__moduint_PARM_2
   003B 88            [ 3]  126 	pulx
                            127 ;../_moduint.c:189: break;
   003C 20 06         [ 3]  128 	bra	00117$
   003E                     129 00102$:
                            130 ;../_moduint.c:191: count++;
   003E 4C            [ 1]  131 	inca
   003F C7r00r02      [ 4]  132 	sta	__moduint_count_65536_2
   0042 20 C3         [ 3]  133 	bra	00103$
                            134 ;../_moduint.c:193: do
   0044                     135 00117$:
   0044 C6r00r02      [ 4]  136 	lda	__moduint_count_65536_2
   0047                     137 00108$:
                            138 ;../_moduint.c:195: if (a >= b)
   0047 3Er00r00      [ 6]  139 	cphx	__moduint_PARM_2
   004A 25 0E         [ 3]  140 	bcs	00107$
                            141 ;../_moduint.c:196: a -= b;
   004C 87            [ 2]  142 	psha
   004D 9F            [ 1]  143 	txa
   004E C0r00r01      [ 4]  144 	sub	(__moduint_PARM_2 + 1)
   0051 97            [ 1]  145 	tax
   0052 8B            [ 2]  146 	pshh
   0053 86            [ 3]  147 	pula
   0054 C2r00r00      [ 4]  148 	sbc	__moduint_PARM_2
   0057 87            [ 2]  149 	psha
   0058 8A            [ 3]  150 	pulh
   0059 86            [ 3]  151 	pula
   005A                     152 00107$:
                            153 ;../_moduint.c:197: b >>= 1;
   005A 87            [ 2]  154 	psha
   005B 89            [ 2]  155 	pshx
   005C C6r00r01      [ 4]  156 	lda	(__moduint_PARM_2 + 1)
   005F CEr00r00      [ 4]  157 	ldx	__moduint_PARM_2
   0062 54            [ 1]  158 	lsrx
   0063 46            [ 1]  159 	rora
   0064 C7r00r01      [ 4]  160 	sta	(__moduint_PARM_2 + 1)
   0067 CFr00r00      [ 4]  161 	stx	__moduint_PARM_2
   006A 88            [ 3]  162 	pulx
   006B 86            [ 3]  163 	pula
                            164 ;../_moduint.c:199: while (count--);
   006C B7*00         [ 3]  165 	sta	*__moduint_sloc0_1_0
   006E 4A            [ 1]  166 	deca
   006F 3D*00         [ 4]  167 	tst	*__moduint_sloc0_1_0
   0071 26 D4         [ 3]  168 	bne	00108$
                            169 ;../_moduint.c:200: return a;
   0073 89            [ 2]  170 	pshx
   0074 8B            [ 2]  171 	pshh
   0075 88            [ 3]  172 	pulx
   0076 86            [ 3]  173 	pula
                            174 ;../_moduint.c:201: }
   0077 81            [ 6]  175 	rts
                            176 	.area CSEG    (CODE)
                            177 	.area CONST   (CODE)
                            178 	.area XINIT   (CODE)
                            179 	.area CABS    (ABS,CODE)
