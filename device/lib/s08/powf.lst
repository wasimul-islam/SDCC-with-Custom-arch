                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module powf
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _logf
                             24 	.globl _expf
                             25 	.globl _powf_PARM_2
                             26 	.globl _powf_PARM_1
                             27 	.globl _powf
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (PAG)
   0000                      32 _powf_sloc0_1_0:
   0000                      33 	.ds 4
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in ram
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; absolute ram data
                             39 ;--------------------------------------------------------
                             40 	.area IABS    (ABS)
                             41 	.area IABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; initialized external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XISEG
                             50 ;--------------------------------------------------------
                             51 ; extended address mode data
                             52 ;--------------------------------------------------------
                             53 	.area XSEG
   0000                      54 _powf_PARM_1:
   0000                      55 	.ds 4
   0004                      56 _powf_PARM_2:
   0004                      57 	.ds 4
                             58 ;--------------------------------------------------------
                             59 ; global & static initialisations
                             60 ;--------------------------------------------------------
                             61 	.area HOME    (CODE)
                             62 	.area GSINIT  (CODE)
                             63 	.area GSFINAL (CODE)
                             64 	.area GSINIT  (CODE)
                             65 ;--------------------------------------------------------
                             66 ; Home
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area HOME    (CODE)
                             70 ;--------------------------------------------------------
                             71 ; code
                             72 ;--------------------------------------------------------
                             73 	.area CSEG    (CODE)
                             74 ;------------------------------------------------------------
                             75 ;Allocation info for local variables in function 'powf'
                             76 ;------------------------------------------------------------
                             77 ;sloc0                     Allocated with name '_powf_sloc0_1_0'
                             78 ;x                         Allocated with name '_powf_PARM_1'
                             79 ;y                         Allocated with name '_powf_PARM_2'
                             80 ;------------------------------------------------------------
                             81 ;../powf.c:35: float powf(float x, float y)
                             82 ;	-----------------------------------------
                             83 ;	 function powf
                             84 ;	-----------------------------------------
                             85 ;	Register assignment is optimal.
                             86 ;	Stack space usage: 0 bytes.
   0000                      87 _powf:
                             88 ;../powf.c:37: if(y == 0.0) return 1.0;
   0000 C6r00r04      [ 4]   89 	lda	_powf_PARM_2
   0003 A4 7F         [ 2]   90 	and	#0x7F
   0005 CAr00r05      [ 4]   91 	ora	(_powf_PARM_2 + 1)
   0008 CAr00r06      [ 4]   92 	ora	(_powf_PARM_2 + 2)
   000B CAr00r07      [ 4]   93 	ora	(_powf_PARM_2 + 3)
   000E 26 09         [ 3]   94 	bne	00102$
   0010 4F            [ 1]   95 	clra
   0011 97            [ 1]   96 	tax
   0012 6E 80*00      [ 4]   97 	mov	#0x80,*___SDCC_hc08_ret2
   0015 6E 3F*00      [ 4]   98 	mov	#0x3f,*___SDCC_hc08_ret3
   0018 81            [ 6]   99 	rts
   0019                     100 00102$:
                            101 ;../powf.c:38: if(y == 1.0) return x;
   0019 32r00r04      [ 5]  102 	ldhx	_powf_PARM_2
   001C 96r00r00      [ 5]  103 	sthx	___fseq_PARM_1
   001F 32r00r06      [ 5]  104 	ldhx	(_powf_PARM_2 + 2)
   0022 96r00r02      [ 5]  105 	sthx	(___fseq_PARM_1 + 2)
   0025 45 3F 80      [ 3]  106 	ldhx	#0x3f80
   0028 96r00r00      [ 5]  107 	sthx	___fseq_PARM_2
   002B 8C            [ 1]  108 	clrh
   002C 5F            [ 1]  109 	clrx
   002D 96r00r02      [ 5]  110 	sthx	(___fseq_PARM_2 + 2)
   0030 CDr00r00      [ 6]  111 	jsr	___fseq
   0033 4D            [ 1]  112 	tsta
   0034 27 11         [ 3]  113 	beq	00104$
   0036 C6r00r00      [ 4]  114 	lda	_powf_PARM_1
   0039 B7*00         [ 3]  115 	sta	*___SDCC_hc08_ret3
   003B C6r00r01      [ 4]  116 	lda	(_powf_PARM_1 + 1)
   003E B7*00         [ 3]  117 	sta	*___SDCC_hc08_ret2
   0040 CEr00r02      [ 4]  118 	ldx	(_powf_PARM_1 + 2)
   0043 C6r00r03      [ 4]  119 	lda	(_powf_PARM_1 + 3)
   0046 81            [ 6]  120 	rts
   0047                     121 00104$:
                            122 ;../powf.c:39: if(x <= 0.0) return 0.0;
   0047 8C            [ 1]  123 	clrh
   0048 5F            [ 1]  124 	clrx
   0049 96r00r00      [ 5]  125 	sthx	___fslt_PARM_1
   004C 96r00r02      [ 5]  126 	sthx	(___fslt_PARM_1 + 2)
   004F 32r00r00      [ 5]  127 	ldhx	_powf_PARM_1
   0052 96r00r00      [ 5]  128 	sthx	___fslt_PARM_2
   0055 32r00r02      [ 5]  129 	ldhx	(_powf_PARM_1 + 2)
   0058 96r00r02      [ 5]  130 	sthx	(___fslt_PARM_2 + 2)
   005B CDr00r00      [ 6]  131 	jsr	___fslt
   005E 4D            [ 1]  132 	tsta
   005F 26 07         [ 3]  133 	bne	00106$
   0061 4F            [ 1]  134 	clra
   0062 97            [ 1]  135 	tax
   0063 B7*00         [ 3]  136 	sta	*___SDCC_hc08_ret2
   0065 B7*00         [ 3]  137 	sta	*___SDCC_hc08_ret3
   0067 81            [ 6]  138 	rts
   0068                     139 00106$:
                            140 ;../powf.c:40: return expf(logf(x) * y);
   0068 C6r00r03      [ 4]  141 	lda	(_powf_PARM_1 + 3)
   006B 87            [ 2]  142 	psha
   006C C6r00r02      [ 4]  143 	lda	(_powf_PARM_1 + 2)
   006F 87            [ 2]  144 	psha
   0070 C6r00r01      [ 4]  145 	lda	(_powf_PARM_1 + 1)
   0073 87            [ 2]  146 	psha
   0074 C6r00r00      [ 4]  147 	lda	_powf_PARM_1
   0077 87            [ 2]  148 	psha
   0078 CDr00r00      [ 6]  149 	jsr	_logf
   007B C7r00r03      [ 4]  150 	sta	(___fsmul_PARM_1 + 3)
   007E CFr00r02      [ 4]  151 	stx	(___fsmul_PARM_1 + 2)
   0081 B6*00         [ 3]  152 	lda	*___SDCC_hc08_ret2
   0083 C7r00r01      [ 4]  153 	sta	(___fsmul_PARM_1 + 1)
   0086 B6*00         [ 3]  154 	lda	*___SDCC_hc08_ret3
   0088 C7r00r00      [ 4]  155 	sta	___fsmul_PARM_1
   008B A7 04         [ 2]  156 	ais	#4
   008D 32r00r04      [ 5]  157 	ldhx	_powf_PARM_2
   0090 96r00r00      [ 5]  158 	sthx	___fsmul_PARM_2
   0093 32r00r06      [ 5]  159 	ldhx	(_powf_PARM_2 + 2)
   0096 96r00r02      [ 5]  160 	sthx	(___fsmul_PARM_2 + 2)
   0099 CDr00r00      [ 6]  161 	jsr	___fsmul
   009C B7*03         [ 3]  162 	sta	*(_powf_sloc0_1_0 + 3)
   009E BF*02         [ 3]  163 	stx	*(_powf_sloc0_1_0 + 2)
   00A0 4E*00*01      [ 6]  164 	mov	*___SDCC_hc08_ret2,*(_powf_sloc0_1_0 + 1)
   00A3 4E*00*00      [ 6]  165 	mov	*___SDCC_hc08_ret3,*_powf_sloc0_1_0
   00A6 B6*03         [ 3]  166 	lda	*(_powf_sloc0_1_0 + 3)
   00A8 87            [ 2]  167 	psha
   00A9 B6*02         [ 3]  168 	lda	*(_powf_sloc0_1_0 + 2)
   00AB 87            [ 2]  169 	psha
   00AC B6*01         [ 3]  170 	lda	*(_powf_sloc0_1_0 + 1)
   00AE 87            [ 2]  171 	psha
   00AF B6*00         [ 3]  172 	lda	*_powf_sloc0_1_0
   00B1 87            [ 2]  173 	psha
   00B2 CDr00r00      [ 6]  174 	jsr	_expf
   00B5 B7*03         [ 3]  175 	sta	*(_powf_sloc0_1_0 + 3)
   00B7 BF*02         [ 3]  176 	stx	*(_powf_sloc0_1_0 + 2)
   00B9 4E*00*01      [ 6]  177 	mov	*___SDCC_hc08_ret2,*(_powf_sloc0_1_0 + 1)
   00BC 4E*00*00      [ 6]  178 	mov	*___SDCC_hc08_ret3,*_powf_sloc0_1_0
   00BF A7 04         [ 2]  179 	ais	#4
   00C1 4E*00*00      [ 6]  180 	mov	*_powf_sloc0_1_0,*___SDCC_hc08_ret3
   00C4 4E*01*00      [ 6]  181 	mov	*(_powf_sloc0_1_0 + 1),*___SDCC_hc08_ret2
   00C7 BE*02         [ 3]  182 	ldx	*(_powf_sloc0_1_0 + 2)
   00C9 B6*03         [ 3]  183 	lda	*(_powf_sloc0_1_0 + 3)
                            184 ;../powf.c:41: }
   00CB 81            [ 6]  185 	rts
                            186 	.area CSEG    (CODE)
                            187 	.area CONST   (CODE)
                            188 	.area XINIT   (CODE)
                            189 	.area CABS    (ABS,CODE)
