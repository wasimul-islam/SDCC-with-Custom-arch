                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module printf_large
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strlen
                             24 	.globl __print_format_PARM_4
                             25 	.globl __print_format_PARM_3
                             26 	.globl __print_format_PARM_2
                             27 	.globl __print_format
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (PAG)
   0000                      32 __print_format_sloc0_1_0:
   0000                      33 	.ds 2
   0002                      34 __print_format_sloc1_1_0:
   0002                      35 	.ds 2
   0004                      36 __print_format_sloc2_1_0:
   0004                      37 	.ds 2
   0006                      38 __print_format_sloc3_1_0:
   0006                      39 	.ds 4
   000A                      40 __print_format_sloc4_1_0:
   000A                      41 	.ds 4
                             42 ;--------------------------------------------------------
                             43 ; overlayable items in ram
                             44 ;--------------------------------------------------------
                             45 	.area	OSEG    (PAG, OVR)
   0000                      46 _calculate_digit_ul_65536_71:
   0000                      47 	.ds 4
   0004                      48 _calculate_digit_b4_65536_71:
   0004                      49 	.ds 1
                             50 ;--------------------------------------------------------
                             51 ; absolute ram data
                             52 ;--------------------------------------------------------
                             53 	.area IABS    (ABS)
                             54 	.area IABS    (ABS)
                             55 ;--------------------------------------------------------
                             56 ; absolute external ram data
                             57 ;--------------------------------------------------------
                             58 	.area XABS    (ABS)
                             59 ;--------------------------------------------------------
                             60 ; initialized external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XISEG
                             63 ;--------------------------------------------------------
                             64 ; extended address mode data
                             65 ;--------------------------------------------------------
                             66 	.area XSEG
   0000                      67 _lower_case:
   0000                      68 	.ds 1
   0001                      69 _output_char:
   0001                      70 	.ds 2
   0003                      71 _p:
   0003                      72 	.ds 2
   0005                      73 _value:
   0005                      74 	.ds 5
   000A                      75 _charsOutputted:
   000A                      76 	.ds 2
   000C                      77 _calculate_digit_radix_65536_70:
   000C                      78 	.ds 1
   000D                      79 __print_format_PARM_2:
   000D                      80 	.ds 2
   000F                      81 __print_format_PARM_3:
   000F                      82 	.ds 2
   0011                      83 __print_format_PARM_4:
   0011                      84 	.ds 2
   0013                      85 __print_format_left_justify_65536_75:
   0013                      86 	.ds 1
   0014                      87 __print_format_zero_padding_65536_75:
   0014                      88 	.ds 1
   0015                      89 __print_format_prefix_sign_65536_75:
   0015                      90 	.ds 1
   0016                      91 __print_format_prefix_space_65536_75:
   0016                      92 	.ds 1
   0017                      93 __print_format_signed_argument_65536_75:
   0017                      94 	.ds 1
   0018                      95 __print_format_char_argument_65536_75:
   0018                      96 	.ds 1
   0019                      97 __print_format_long_argument_65536_75:
   0019                      98 	.ds 1
   001A                      99 __print_format_float_argument_65536_75:
   001A                     100 	.ds 1
   001B                     101 __print_format_lsd_65536_75:
   001B                     102 	.ds 1
   001C                     103 __print_format_radix_65536_75:
   001C                     104 	.ds 1
   001D                     105 __print_format_decimals_65536_75:
   001D                     106 	.ds 2
   001F                     107 __print_format_store_262144_94:
   001F                     108 	.ds 6
                            109 ;--------------------------------------------------------
                            110 ; global & static initialisations
                            111 ;--------------------------------------------------------
                            112 	.area HOME    (CODE)
                            113 	.area GSINIT  (CODE)
                            114 	.area GSFINAL (CODE)
                            115 	.area GSINIT  (CODE)
                            116 ;--------------------------------------------------------
                            117 ; Home
                            118 ;--------------------------------------------------------
                            119 	.area HOME    (CODE)
                            120 	.area HOME    (CODE)
                            121 ;--------------------------------------------------------
                            122 ; code
                            123 ;--------------------------------------------------------
                            124 	.area CSEG    (CODE)
                            125 ;------------------------------------------------------------
                            126 ;Allocation info for local variables in function '_output_char'
                            127 ;------------------------------------------------------------
                            128 ;c                         Allocated to registers x 
                            129 ;------------------------------------------------------------
                            130 ;../printf_large.c:105: _output_char (unsigned char c)
                            131 ;	-----------------------------------------
                            132 ;	 function _output_char
                            133 ;	-----------------------------------------
                            134 ;	Register assignment is optimal.
                            135 ;	Stack space usage: 0 bytes.
   0000                     136 __output_char:
   0000 97            [ 1]  137 	tax
                            138 ;../printf_large.c:107: output_char( c, p );
   0001 C6r00r04      [ 4]  139 	lda	(_p + 1)
   0004 87            [ 2]  140 	psha
   0005 C6r00r03      [ 4]  141 	lda	_p
   0008 87            [ 2]  142 	psha
   0009 AD 02         [ 5]  143 	bsr	00104$
   000B 20 0A         [ 3]  144 	bra	00103$
   000D                     145 00104$:
   000D C6r00r02      [ 4]  146 	lda	(_output_char + 1)
   0010 87            [ 2]  147 	psha
   0011 C6r00r01      [ 4]  148 	lda	_output_char
   0014 87            [ 2]  149 	psha
   0015 9F            [ 1]  150 	txa
   0016 81            [ 6]  151 	rts
   0017                     152 00103$:
   0017 A7 02         [ 2]  153 	ais	#2
                            154 ;../printf_large.c:108: charsOutputted++;
   0019 32r00r0A      [ 5]  155 	ldhx	_charsOutputted
   001C AF 01         [ 2]  156 	aix	#1
   001E 96r00r0A      [ 5]  157 	sthx	_charsOutputted
                            158 ;../printf_large.c:109: }
   0021 81            [ 6]  159 	rts
                            160 ;------------------------------------------------------------
                            161 ;Allocation info for local variables in function 'output_digit'
                            162 ;------------------------------------------------------------
                            163 ;c                         Allocated to registers a 
                            164 ;n                         Allocated to registers a 
                            165 ;------------------------------------------------------------
                            166 ;../printf_large.c:130: output_digit (unsigned char n)
                            167 ;	-----------------------------------------
                            168 ;	 function output_digit
                            169 ;	-----------------------------------------
                            170 ;	Register assignment is optimal.
                            171 ;	Stack space usage: 0 bytes.
   0022                     172 _output_digit:
                            173 ;../printf_large.c:132: register unsigned char c = n + (unsigned char)'0';
   0022 AB 30         [ 2]  174 	add	#0x30
                            175 ;../printf_large.c:134: if (c > (unsigned char)'9')
   0024 A1 39         [ 2]  176 	cmp	#0x39
   0026 23 09         [ 3]  177 	bls	00104$
                            178 ;../printf_large.c:136: c += (unsigned char)('A' - '0' - 10);
   0028 AB 07         [ 2]  179 	add	#0x07
                            180 ;../printf_large.c:137: if (lower_case)
   002A CEr00r00      [ 4]  181 	ldx	_lower_case
   002D 27 02         [ 3]  182 	beq	00104$
                            183 ;../printf_large.c:138: c = tolower(c);
   002F AA 20         [ 2]  184 	ora	#0x20
   0031                     185 00104$:
                            186 ;../printf_large.c:140: _output_char( c );
                            187 ;../printf_large.c:141: }
   0031 CCr00r00      [ 4]  188 	jmp	__output_char
                            189 ;------------------------------------------------------------
                            190 ;Allocation info for local variables in function 'output_2digits'
                            191 ;------------------------------------------------------------
                            192 ;b                         Allocated to registers x 
                            193 ;------------------------------------------------------------
                            194 ;../printf_large.c:157: output_2digits (unsigned char b)
                            195 ;	-----------------------------------------
                            196 ;	 function output_2digits
                            197 ;	-----------------------------------------
                            198 ;	Register assignment is optimal.
                            199 ;	Stack space usage: 0 bytes.
   0034                     200 _output_2digits:
   0034 97            [ 1]  201 	tax
                            202 ;../printf_large.c:159: output_digit( b>>4   );
   0035 9F            [ 1]  203 	txa
   0036 62            [ 1]  204 	nsa	
   0037 A4 0F         [ 2]  205 	and	#0x0f
   0039 89            [ 2]  206 	pshx
   003A CDr00r22      [ 6]  207 	jsr	_output_digit
   003D 88            [ 3]  208 	pulx
                            209 ;../printf_large.c:160: output_digit( b&0x0F );
   003E 9F            [ 1]  210 	txa
   003F A4 0F         [ 2]  211 	and	#0x0f
                            212 ;../printf_large.c:161: }
   0041 CCr00r22      [ 4]  213 	jmp	_output_digit
                            214 ;------------------------------------------------------------
                            215 ;Allocation info for local variables in function 'calculate_digit'
                            216 ;------------------------------------------------------------
                            217 ;radix                     Allocated with name '_calculate_digit_radix_65536_70'
                            218 ;ul                        Allocated with name '_calculate_digit_ul_65536_71'
                            219 ;b4                        Allocated with name '_calculate_digit_b4_65536_71'
                            220 ;i                         Allocated to registers x 
                            221 ;------------------------------------------------------------
                            222 ;../printf_large.c:189: calculate_digit (unsigned char radix)
                            223 ;	-----------------------------------------
                            224 ;	 function calculate_digit
                            225 ;	-----------------------------------------
                            226 ;	Register assignment is optimal.
                            227 ;	Stack space usage: 0 bytes.
   0044                     228 _calculate_digit:
   0044 C7r00r0C      [ 4]  229 	sta	_calculate_digit_radix_65536_70
                            230 ;../printf_large.c:191: register unsigned long ul = value.ul;
   0047 C6r00r05      [ 4]  231 	lda	_value
   004A B7*00         [ 3]  232 	sta	*_calculate_digit_ul_65536_71
   004C C6r00r06      [ 4]  233 	lda	(_value + 1)
   004F B7*01         [ 3]  234 	sta	*(_calculate_digit_ul_65536_71 + 1)
   0051 C6r00r07      [ 4]  235 	lda	(_value + 2)
   0054 B7*02         [ 3]  236 	sta	*(_calculate_digit_ul_65536_71 + 2)
   0056 C6r00r08      [ 4]  237 	lda	(_value + 3)
   0059 B7*03         [ 3]  238 	sta	*(_calculate_digit_ul_65536_71 + 3)
                            239 ;../printf_large.c:192: register unsigned char b4 = value.byte[4];
   005B C6r00r09      [ 4]  240 	lda	(_value + 0x0004)
                            241 ;../printf_large.c:195: do
   005E AE 20         [ 2]  242 	ldx	#0x20
   0060                     243 00103$:
                            244 ;../printf_large.c:197: b4 = (b4 << 1);
   0060 48            [ 1]  245 	lsla	
   0061 B7*04         [ 3]  246 	sta	*_calculate_digit_b4_65536_71
                            247 ;../printf_large.c:198: b4 |= (ul >> 31) & 0x01;
   0063 B6*00         [ 3]  248 	lda	*_calculate_digit_ul_65536_71
   0065 49            [ 1]  249 	rola
   0066 4F            [ 1]  250 	clra
   0067 49            [ 1]  251 	rola
   0068 BA*04         [ 3]  252 	ora	*_calculate_digit_b4_65536_71
                            253 ;../printf_large.c:199: ul <<= 1;
   006A 87            [ 2]  254 	psha
   006B 89            [ 2]  255 	pshx
   006C B6*03         [ 3]  256 	lda	*(_calculate_digit_ul_65536_71 + 3)
   006E BE*02         [ 3]  257 	ldx	*(_calculate_digit_ul_65536_71 + 2)
   0070 48            [ 1]  258 	lsla
   0071 59            [ 1]  259 	rolx
   0072 B7*03         [ 3]  260 	sta	*(_calculate_digit_ul_65536_71 + 3)
   0074 BF*02         [ 3]  261 	stx	*(_calculate_digit_ul_65536_71 + 2)
   0076 B6*01         [ 3]  262 	lda	*(_calculate_digit_ul_65536_71 + 1)
   0078 BE*00         [ 3]  263 	ldx	*_calculate_digit_ul_65536_71
   007A 49            [ 1]  264 	rola
   007B 59            [ 1]  265 	rolx
   007C B7*01         [ 3]  266 	sta	*(_calculate_digit_ul_65536_71 + 1)
   007E BF*00         [ 3]  267 	stx	*_calculate_digit_ul_65536_71
   0080 88            [ 3]  268 	pulx
   0081 86            [ 3]  269 	pula
                            270 ;../printf_large.c:201: if (radix <= b4 )
   0082 C1r00r0C      [ 4]  271 	cmp	_calculate_digit_radix_65536_70
   0085 25 05         [ 3]  272 	bcs	00104$
                            273 ;../printf_large.c:203: b4 -= radix;
   0087 C0r00r0C      [ 4]  274 	sub	_calculate_digit_radix_65536_70
                            275 ;../printf_large.c:204: ul |= 1;
   008A 10*03         [ 5]  276 	bset	#0,*(_calculate_digit_ul_65536_71 + 3)
   008C                     277 00104$:
                            278 ;../printf_large.c:206: } while (--i);
   008C 5A            [ 1]  279 	decx
   008D 5D            [ 1]  280 	tstx
   008E 26 D0         [ 3]  281 	bne	00103$
                            282 ;../printf_large.c:207: value.ul = ul;
   0090 BE*00         [ 3]  283 	ldx	*_calculate_digit_ul_65536_71
   0092 CFr00r05      [ 4]  284 	stx	_value
   0095 87            [ 2]  285 	psha
   0096 B6*01         [ 3]  286 	lda	*(_calculate_digit_ul_65536_71 + 1)
   0098 C7r00r06      [ 4]  287 	sta	(_value + 1)
   009B B6*02         [ 3]  288 	lda	*(_calculate_digit_ul_65536_71 + 2)
   009D C7r00r07      [ 4]  289 	sta	(_value + 2)
   00A0 B6*03         [ 3]  290 	lda	*(_calculate_digit_ul_65536_71 + 3)
   00A2 C7r00r08      [ 4]  291 	sta	(_value + 3)
   00A5 86            [ 3]  292 	pula
                            293 ;../printf_large.c:208: value.byte[4] = b4;
   00A6 C7r00r09      [ 4]  294 	sta	(_value + 0x0004)
                            295 ;../printf_large.c:209: }
   00A9 81            [ 6]  296 	rts
                            297 ;------------------------------------------------------------
                            298 ;Allocation info for local variables in function '_print_format'
                            299 ;------------------------------------------------------------
                            300 ;sloc0                     Allocated with name '__print_format_sloc0_1_0'
                            301 ;sloc1                     Allocated with name '__print_format_sloc1_1_0'
                            302 ;sloc2                     Allocated with name '__print_format_sloc2_1_0'
                            303 ;sloc3                     Allocated with name '__print_format_sloc3_1_0'
                            304 ;sloc4                     Allocated with name '__print_format_sloc4_1_0'
                            305 ;pvoid                     Allocated with name '__print_format_PARM_2'
                            306 ;format                    Allocated with name '__print_format_PARM_3'
                            307 ;ap                        Allocated with name '__print_format_PARM_4'
                            308 ;pfn                       Allocated to registers 
                            309 ;left_justify              Allocated with name '__print_format_left_justify_65536_75'
                            310 ;zero_padding              Allocated with name '__print_format_zero_padding_65536_75'
                            311 ;prefix_sign               Allocated with name '__print_format_prefix_sign_65536_75'
                            312 ;prefix_space              Allocated with name '__print_format_prefix_space_65536_75'
                            313 ;signed_argument           Allocated with name '__print_format_signed_argument_65536_75'
                            314 ;char_argument             Allocated with name '__print_format_char_argument_65536_75'
                            315 ;long_argument             Allocated with name '__print_format_long_argument_65536_75'
                            316 ;float_argument            Allocated with name '__print_format_float_argument_65536_75'
                            317 ;lsd                       Allocated with name '__print_format_lsd_65536_75'
                            318 ;radix                     Allocated with name '__print_format_radix_65536_75'
                            319 ;width                     Allocated to registers 
                            320 ;decimals                  Allocated with name '__print_format_decimals_65536_75'
                            321 ;length                    Allocated to registers 
                            322 ;c                         Allocated to registers a 
                            323 ;store                     Allocated with name '__print_format_store_262144_94'
                            324 ;pstore                    Allocated to registers 
                            325 ;------------------------------------------------------------
                            326 ;../printf_large.c:434: _print_format (pfn_outputchar pfn, void* pvoid, const char *format, va_list ap)
                            327 ;	-----------------------------------------
                            328 ;	 function _print_format
                            329 ;	-----------------------------------------
                            330 ;	Register assignment might be sub-optimal.
                            331 ;	Stack space usage: 0 bytes.
   00AA                     332 __print_format:
   00AA C7r00r02      [ 4]  333 	sta	(_output_char + 1)
   00AD CFr00r01      [ 4]  334 	stx	_output_char
                            335 ;../printf_large.c:462: p = pvoid;
   00B0 32r00r0D      [ 5]  336 	ldhx	__print_format_PARM_2
   00B3 96r00r03      [ 5]  337 	sthx	_p
                            338 ;../printf_large.c:466: charsOutputted = 0;
   00B6 8C            [ 1]  339 	clrh
   00B7 5F            [ 1]  340 	clrx
   00B8 96r00r0A      [ 5]  341 	sthx	_charsOutputted
                            342 ;../printf_large.c:475: while( c=*format++ )
   00BB                     343 00231$:
   00BB 32r00r0F      [ 5]  344 	ldhx	__print_format_PARM_3
   00BE F6            [ 3]  345 	lda	,x
   00BF AF 01         [ 2]  346 	aix	#1
   00C1 96r00r0F      [ 5]  347 	sthx	__print_format_PARM_3
   00C4 97            [ 1]  348 	tax
   00C5 4D            [ 1]  349 	tsta
   00C6 26 03         [ 3]  350 	bne	00627$
   00C8 CCr06rEF      [ 4]  351 	jmp	00233$
   00CB                     352 00627$:
                            353 ;../printf_large.c:477: if ( c=='%' )
   00CB A3 25         [ 2]  354 	cpx	#0x25
   00CD 27 03         [ 3]  355 	beq	00628$
   00CF CCr06rE8      [ 4]  356 	jmp	00229$
   00D2                     357 00628$:
                            358 ;../printf_large.c:479: left_justify    = 0;
   00D2 4F            [ 1]  359 	clra
   00D3 C7r00r13      [ 4]  360 	sta	__print_format_left_justify_65536_75
                            361 ;../printf_large.c:480: zero_padding    = 0;
   00D6 C7r00r14      [ 4]  362 	sta	__print_format_zero_padding_65536_75
                            363 ;../printf_large.c:481: prefix_sign     = 0;
   00D9 C7r00r15      [ 4]  364 	sta	__print_format_prefix_sign_65536_75
                            365 ;../printf_large.c:482: prefix_space    = 0;
   00DC C7r00r16      [ 4]  366 	sta	__print_format_prefix_space_65536_75
                            367 ;../printf_large.c:483: signed_argument = 0;
   00DF C7r00r17      [ 4]  368 	sta	__print_format_signed_argument_65536_75
                            369 ;../printf_large.c:484: char_argument   = 0;
   00E2 C7r00r18      [ 4]  370 	sta	__print_format_char_argument_65536_75
                            371 ;../printf_large.c:485: long_argument   = 0;
   00E5 C7r00r19      [ 4]  372 	sta	__print_format_long_argument_65536_75
                            373 ;../printf_large.c:486: float_argument  = 0;
   00E8 C7r00r1A      [ 4]  374 	sta	__print_format_float_argument_65536_75
                            375 ;../printf_large.c:487: radix           = 0;
   00EB C7r00r1C      [ 4]  376 	sta	__print_format_radix_65536_75
                            377 ;../printf_large.c:488: width           = 0;
   00EE 8C            [ 1]  378 	clrh
   00EF 97            [ 1]  379 	tax
   00F0 35*00         [ 4]  380 	sthx	*__print_format_sloc0_1_0
                            381 ;../printf_large.c:489: decimals        = -1;
   00F2 AF FF         [ 2]  382 	aix	#-1
   00F4 96r00r1D      [ 5]  383 	sthx	__print_format_decimals_65536_75
                            384 ;../printf_large.c:491: get_conversion_spec:
   00F7 32r00r0F      [ 5]  385 	ldhx	__print_format_PARM_3
   00FA 35*02         [ 4]  386 	sthx	*__print_format_sloc1_1_0
   00FC                     387 00101$:
                            388 ;../printf_large.c:493: c = *format++;
   00FC 55*02         [ 4]  389 	ldhx	*__print_format_sloc1_1_0
   00FE F6            [ 3]  390 	lda	,x
   00FF AF 01         [ 2]  391 	aix	#1
   0101 35*02         [ 4]  392 	sthx	*__print_format_sloc1_1_0
   0103 BE*02         [ 3]  393 	ldx	*__print_format_sloc1_1_0
   0105 CFr00r0F      [ 4]  394 	stx	__print_format_PARM_3
   0108 87            [ 2]  395 	psha
   0109 B6*03         [ 3]  396 	lda	*(__print_format_sloc1_1_0 + 1)
   010B C7r00r10      [ 4]  397 	sta	(__print_format_PARM_3 + 1)
   010E 86            [ 3]  398 	pula
                            399 ;../printf_large.c:495: if (c=='%')
   010F A1 25         [ 2]  400 	cmp	#0x25
   0111 26 05         [ 3]  401 	bne	00103$
                            402 ;../printf_large.c:497: OUTPUT_CHAR(c, p);
   0113 CDr00r00      [ 6]  403 	jsr	__output_char
                            404 ;../printf_large.c:498: continue;
   0116 20 A3         [ 3]  405 	bra	00231$
   0118                     406 00103$:
                            407 ;../printf_large.c:501: if (isdigit(c))
   0118 A1 30         [ 2]  408 	cmp	#0x30
   011A 25 71         [ 3]  409 	bcs	00110$
   011C A1 39         [ 2]  410 	cmp	#0x39
   011E 22 6D         [ 3]  411 	bhi	00110$
                            412 ;../printf_large.c:503: if (decimals==-1)
   0120 87            [ 2]  413 	psha
   0121 C6r00r1E      [ 4]  414 	lda	(__print_format_decimals_65536_75 + 1)
   0124 A1 FF         [ 2]  415 	cmp	#0xff
   0126 86            [ 3]  416 	pula
   0127 26 09         [ 3]  417 	bne	00632$
   0129 87            [ 2]  418 	psha
   012A C6r00r1D      [ 4]  419 	lda	__print_format_decimals_65536_75
   012D A1 FF         [ 2]  420 	cmp	#0xff
   012F 86            [ 3]  421 	pula
   0130 27 02         [ 3]  422 	beq	00633$
   0132                     423 00632$:
   0132 20 33         [ 3]  424 	bra	00107$
   0134                     425 00633$:
                            426 ;../printf_large.c:505: width = 10*width + c - '0';
   0134 BE*00         [ 3]  427 	ldx	*__print_format_sloc0_1_0
   0136 CFr00r00      [ 4]  428 	stx	__mulint_PARM_2
   0139 87            [ 2]  429 	psha
   013A B6*01         [ 3]  430 	lda	*(__print_format_sloc0_1_0 + 1)
   013C C7r00r01      [ 4]  431 	sta	(__mulint_PARM_2 + 1)
   013F A6 0A         [ 2]  432 	lda	#0x0a
   0141 5F            [ 1]  433 	clrx
   0142 CDr00r00      [ 6]  434 	jsr	__mulint
   0145 B7*05         [ 3]  435 	sta	*(__print_format_sloc2_1_0 + 1)
   0147 BF*04         [ 3]  436 	stx	*__print_format_sloc2_1_0
   0149 86            [ 3]  437 	pula
   014A 5F            [ 1]  438 	clrx
   014B BB*05         [ 3]  439 	add	*(__print_format_sloc2_1_0 + 1)
   014D B7*05         [ 3]  440 	sta	*(__print_format_sloc2_1_0 + 1)
   014F 9F            [ 1]  441 	txa
   0150 B9*04         [ 3]  442 	adc	*__print_format_sloc2_1_0
   0152 B7*04         [ 3]  443 	sta	*__print_format_sloc2_1_0
   0154 55*04         [ 4]  444 	ldhx	*__print_format_sloc2_1_0
   0156 AF D0         [ 2]  445 	aix	#-48
   0158 35*00         [ 4]  446 	sthx	*__print_format_sloc0_1_0
                            447 ;../printf_large.c:506: if (width == 0)
   015A B6*01         [ 3]  448 	lda	*(__print_format_sloc0_1_0 + 1)
   015C BA*00         [ 3]  449 	ora	*__print_format_sloc0_1_0
   015E 26 9C         [ 3]  450 	bne	00101$
                            451 ;../printf_large.c:509: zero_padding = 1;
   0160 A6 01         [ 2]  452 	lda	#0x01
   0162 C7r00r14      [ 4]  453 	sta	__print_format_zero_padding_65536_75
   0165 20 95         [ 3]  454 	bra	00101$
   0167                     455 00107$:
                            456 ;../printf_large.c:514: decimals = 10*decimals + c - '0';
   0167 32r00r1D      [ 5]  457 	ldhx	__print_format_decimals_65536_75
   016A 96r00r00      [ 5]  458 	sthx	__mulint_PARM_2
   016D 87            [ 2]  459 	psha
   016E A6 0A         [ 2]  460 	lda	#0x0a
   0170 5F            [ 1]  461 	clrx
   0171 CDr00r00      [ 6]  462 	jsr	__mulint
   0174 B7*05         [ 3]  463 	sta	*(__print_format_sloc2_1_0 + 1)
   0176 BF*04         [ 3]  464 	stx	*__print_format_sloc2_1_0
   0178 86            [ 3]  465 	pula
   0179 5F            [ 1]  466 	clrx
   017A BB*05         [ 3]  467 	add	*(__print_format_sloc2_1_0 + 1)
   017C B7*05         [ 3]  468 	sta	*(__print_format_sloc2_1_0 + 1)
   017E 9F            [ 1]  469 	txa
   017F B9*04         [ 3]  470 	adc	*__print_format_sloc2_1_0
   0181 B7*04         [ 3]  471 	sta	*__print_format_sloc2_1_0
   0183 55*04         [ 4]  472 	ldhx	*__print_format_sloc2_1_0
   0185 AF D0         [ 2]  473 	aix	#-48
   0187 96r00r1D      [ 5]  474 	sthx	__print_format_decimals_65536_75
                            475 ;../printf_large.c:516: goto get_conversion_spec;
   018A CCr00rFC      [ 4]  476 	jmp	00101$
   018D                     477 00110$:
                            478 ;../printf_large.c:519: if (c=='.')
   018D A1 2E         [ 2]  479 	cmp	#0x2e
   018F 26 18         [ 3]  480 	bne	00115$
                            481 ;../printf_large.c:521: if (decimals==-1)
   0191 C6r00r1E      [ 4]  482 	lda	(__print_format_decimals_65536_75 + 1)
   0194 A1 FF         [ 2]  483 	cmp	#0xff
   0196 26 06         [ 3]  484 	bne	00636$
   0198 C6r00r1D      [ 4]  485 	lda	__print_format_decimals_65536_75
   019B 41 FF 03      [ 4]  486 	cbeqa	#0xff,00637$
   019E                     487 00636$:
   019E CCr00rFC      [ 4]  488 	jmp	00101$
   01A1                     489 00637$:
                            490 ;../printf_large.c:522: decimals=0;
   01A1 8C            [ 1]  491 	clrh
   01A2 5F            [ 1]  492 	clrx
   01A3 96r00r1D      [ 5]  493 	sthx	__print_format_decimals_65536_75
                            494 ;../printf_large.c:525: goto get_conversion_spec;
   01A6 CCr00rFC      [ 4]  495 	jmp	00101$
   01A9                     496 00115$:
                            497 ;../printf_large.c:528: if (islower(c))
   01A9 A1 61         [ 2]  498 	cmp	#0x61
   01AB 25 0D         [ 3]  499 	bcs	00117$
   01AD A1 7A         [ 2]  500 	cmp	#0x7a
   01AF 22 09         [ 3]  501 	bhi	00117$
                            502 ;../printf_large.c:530: c = toupper(c);
   01B1 A4 DF         [ 2]  503 	and	#0xdf
                            504 ;../printf_large.c:531: lower_case = 1;
   01B3 AE 01         [ 2]  505 	ldx	#0x01
   01B5 CFr00r00      [ 4]  506 	stx	_lower_case
   01B8 20 04         [ 3]  507 	bra	00118$
   01BA                     508 00117$:
                            509 ;../printf_large.c:534: lower_case = 0;
   01BA 5F            [ 1]  510 	clrx
   01BB CFr00r00      [ 4]  511 	stx	_lower_case
   01BE                     512 00118$:
                            513 ;../printf_large.c:536: switch( c )
   01BE A1 20         [ 2]  514 	cmp	#0x20
   01C0 26 02         [ 3]  515 	bne	00640$
   01C2 20 7C         [ 3]  516 	bra	00122$
   01C4                     517 00640$:
   01C4 A1 2B         [ 2]  518 	cmp	#0x2b
   01C6 26 02         [ 3]  519 	bne	00641$
   01C8 20 6E         [ 3]  520 	bra	00121$
   01CA                     521 00641$:
   01CA 41 2D 63      [ 4]  522 	cbeqa	#0x2d,00120$
   01CD A1 42         [ 2]  523 	cmp	#0x42
   01CF 26 02         [ 3]  524 	bne	00643$
   01D1 20 75         [ 3]  525 	bra	00123$
   01D3                     526 00643$:
   01D3 A1 43         [ 2]  527 	cmp	#0x43
   01D5 26 03         [ 3]  528 	bne	00644$
   01D7 CCr02r58      [ 4]  529 	jmp	00129$
   01DA                     530 00644$:
   01DA A1 44         [ 2]  531 	cmp	#0x44
   01DC 26 03         [ 3]  532 	bne	00645$
   01DE CCr03r55      [ 4]  533 	jmp	00154$
   01E1                     534 00645$:
   01E1 A1 46         [ 2]  535 	cmp	#0x46
   01E3 26 03         [ 3]  536 	bne	00646$
   01E5 CCr03r76      [ 4]  537 	jmp	00158$
   01E8                     538 00646$:
   01E8 A1 48         [ 2]  539 	cmp	#0x48
   01EA 26 03         [ 3]  540 	bne	00647$
   01EC CCr00rFC      [ 4]  541 	jmp	00101$
   01EF                     542 00647$:
   01EF A1 49         [ 2]  543 	cmp	#0x49
   01F1 26 03         [ 3]  544 	bne	00648$
   01F3 CCr03r55      [ 4]  545 	jmp	00154$
   01F6                     546 00648$:
   01F6 A1 4A         [ 2]  547 	cmp	#0x4a
   01F8 26 03         [ 3]  548 	bne	00649$
   01FA CCr00rFC      [ 4]  549 	jmp	00101$
   01FD                     550 00649$:
   01FD 41 4C 50      [ 4]  551 	cbeqa	#0x4c,00128$
   0200 A1 4F         [ 2]  552 	cmp	#0x4f
   0202 26 03         [ 3]  553 	bne	00651$
   0204 CCr03r61      [ 4]  554 	jmp	00155$
   0207                     555 00651$:
   0207 A1 50         [ 2]  556 	cmp	#0x50
   0209 26 03         [ 3]  557 	bne	00652$
   020B CCr03r2E      [ 4]  558 	jmp	00152$
   020E                     559 00652$:
   020E 41 53 6B      [ 4]  560 	cbeqa	#0x53,00133$
   0211 A1 54         [ 2]  561 	cmp	#0x54
   0213 26 03         [ 3]  562 	bne	00654$
   0215 CCr00rFC      [ 4]  563 	jmp	00101$
   0218                     564 00654$:
   0218 A1 55         [ 2]  565 	cmp	#0x55
   021A 26 03         [ 3]  566 	bne	00655$
   021C CCr03r68      [ 4]  567 	jmp	00156$
   021F                     568 00655$:
   021F A1 58         [ 2]  569 	cmp	#0x58
   0221 26 03         [ 3]  570 	bne	00656$
   0223 CCr03r6F      [ 4]  571 	jmp	00157$
   0226                     572 00656$:
   0226 A1 5A         [ 2]  573 	cmp	#0x5a
   0228 26 03         [ 3]  574 	bne	00657$
   022A CCr00rFC      [ 4]  575 	jmp	00101$
   022D                     576 00657$:
   022D CCr03r7D      [ 4]  577 	jmp	00159$
                            578 ;../printf_large.c:538: case '-':
   0230                     579 00120$:
                            580 ;../printf_large.c:539: left_justify = 1;
   0230 A6 01         [ 2]  581 	lda	#0x01
   0232 C7r00r13      [ 4]  582 	sta	__print_format_left_justify_65536_75
                            583 ;../printf_large.c:540: goto get_conversion_spec;
   0235 CCr00rFC      [ 4]  584 	jmp	00101$
                            585 ;../printf_large.c:541: case '+':
   0238                     586 00121$:
                            587 ;../printf_large.c:542: prefix_sign = 1;
   0238 A6 01         [ 2]  588 	lda	#0x01
   023A C7r00r15      [ 4]  589 	sta	__print_format_prefix_sign_65536_75
                            590 ;../printf_large.c:543: goto get_conversion_spec;
   023D CCr00rFC      [ 4]  591 	jmp	00101$
                            592 ;../printf_large.c:544: case ' ':
   0240                     593 00122$:
                            594 ;../printf_large.c:545: prefix_space = 1;
   0240 A6 01         [ 2]  595 	lda	#0x01
   0242 C7r00r16      [ 4]  596 	sta	__print_format_prefix_space_65536_75
                            597 ;../printf_large.c:546: goto get_conversion_spec;
   0245 CCr00rFC      [ 4]  598 	jmp	00101$
                            599 ;../printf_large.c:547: case 'B': /* byte */
   0248                     600 00123$:
                            601 ;../printf_large.c:548: char_argument = 1;
   0248 A6 01         [ 2]  602 	lda	#0x01
   024A C7r00r18      [ 4]  603 	sta	__print_format_char_argument_65536_75
                            604 ;../printf_large.c:549: goto get_conversion_spec;
   024D CCr00rFC      [ 4]  605 	jmp	00101$
                            606 ;../printf_large.c:556: case 'L': /* long */
   0250                     607 00128$:
                            608 ;../printf_large.c:557: long_argument = 1;
   0250 A6 01         [ 2]  609 	lda	#0x01
   0252 C7r00r19      [ 4]  610 	sta	__print_format_long_argument_65536_75
                            611 ;../printf_large.c:558: goto get_conversion_spec;
   0255 CCr00rFC      [ 4]  612 	jmp	00101$
                            613 ;../printf_large.c:560: case 'C':
   0258                     614 00129$:
                            615 ;../printf_large.c:561: if( char_argument )
   0258 C6r00r18      [ 4]  616 	lda	__print_format_char_argument_65536_75
   025B 27 0D         [ 3]  617 	beq	00131$
                            618 ;../printf_large.c:562: c = va_arg(ap,char);
   025D 32r00r11      [ 5]  619 	ldhx	__print_format_PARM_4
   0260 AF 01         [ 2]  620 	aix	#1
   0262 96r00r11      [ 5]  621 	sthx	__print_format_PARM_4
   0265 AF FF         [ 2]  622 	aix	#-1
   0267 F6            [ 3]  623 	lda	,x
   0268 20 0C         [ 3]  624 	bra	00132$
   026A                     625 00131$:
                            626 ;../printf_large.c:564: c = va_arg(ap,int);
   026A 32r00r11      [ 5]  627 	ldhx	__print_format_PARM_4
   026D AF 02         [ 2]  628 	aix	#2
   026F 96r00r11      [ 5]  629 	sthx	__print_format_PARM_4
   0272 AF FE         [ 2]  630 	aix	#-2
   0274 E6 01         [ 3]  631 	lda	1,x
   0276                     632 00132$:
                            633 ;../printf_large.c:565: OUTPUT_CHAR( c, p );
   0276 CDr00r00      [ 6]  634 	jsr	__output_char
                            635 ;../printf_large.c:566: break;
   0279 CCr03r84      [ 4]  636 	jmp	00160$
                            637 ;../printf_large.c:568: case 'S':
   027C                     638 00133$:
                            639 ;../printf_large.c:569: PTR = va_arg(ap,ptr_t);
   027C 32r00r11      [ 5]  640 	ldhx	__print_format_PARM_4
   027F AF 02         [ 2]  641 	aix	#2
   0281 96r00r11      [ 5]  642 	sthx	__print_format_PARM_4
   0284 AF FE         [ 2]  643 	aix	#-2
   0286 9E AE         [ 5]  644 	ldhx	,x
   0288 96r00r05      [ 5]  645 	sthx	_value
                            646 ;../printf_large.c:582: length = strlen(PTR);
   028B 9F            [ 1]  647 	txa
   028C 8B            [ 2]  648 	pshh
   028D 88            [ 3]  649 	pulx
   028E CDr00r00      [ 6]  650 	jsr	_strlen
   0291 B7*05         [ 3]  651 	sta	*(__print_format_sloc2_1_0 + 1)
   0293 BF*04         [ 3]  652 	stx	*__print_format_sloc2_1_0
                            653 ;../printf_large.c:584: if ( decimals == -1 )
   0295 C6r00r1E      [ 4]  654 	lda	(__print_format_decimals_65536_75 + 1)
   0298 A1 FF         [ 2]  655 	cmp	#0xff
   029A 26 06         [ 3]  656 	bne	00659$
   029C C6r00r1D      [ 4]  657 	lda	__print_format_decimals_65536_75
   029F 41 FF 02      [ 4]  658 	cbeqa	#0xff,00660$
   02A2                     659 00659$:
   02A2 20 0A         [ 3]  660 	bra	00135$
   02A4                     661 00660$:
                            662 ;../printf_large.c:586: decimals = length;
   02A4 B6*04         [ 3]  663 	lda	*__print_format_sloc2_1_0
   02A6 C7r00r1D      [ 4]  664 	sta	__print_format_decimals_65536_75
   02A9 B6*05         [ 3]  665 	lda	*(__print_format_sloc2_1_0 + 1)
   02AB C7r00r1E      [ 4]  666 	sta	(__print_format_decimals_65536_75 + 1)
   02AE                     667 00135$:
                            668 ;../printf_large.c:588: if ( ( !left_justify ) && (length < width) )
   02AE C6r00r13      [ 4]  669 	lda	__print_format_left_justify_65536_75
   02B1 26 28         [ 3]  670 	bne	00277$
   02B3 55*04         [ 4]  671 	ldhx	*__print_format_sloc2_1_0
   02B5 75*00         [ 5]  672 	cphx	*__print_format_sloc0_1_0
   02B7 24 22         [ 3]  673 	bcc	00277$
                            674 ;../printf_large.c:590: width -= length;
   02B9 B6*01         [ 3]  675 	lda	*(__print_format_sloc0_1_0 + 1)
   02BB B0*05         [ 3]  676 	sub	*(__print_format_sloc2_1_0 + 1)
   02BD 97            [ 1]  677 	tax
   02BE B6*00         [ 3]  678 	lda	*__print_format_sloc0_1_0
   02C0 B2*04         [ 3]  679 	sbc	*__print_format_sloc2_1_0
   02C2 87            [ 2]  680 	psha
   02C3 8A            [ 3]  681 	pulh
                            682 ;../printf_large.c:591: while( width-- != 0 )
   02C4                     683 00136$:
   02C4 35*02         [ 4]  684 	sthx	*__print_format_sloc1_1_0
   02C6 AF FF         [ 2]  685 	aix	#-1
   02C8 B6*03         [ 3]  686 	lda	*(__print_format_sloc1_1_0 + 1)
   02CA BA*02         [ 3]  687 	ora	*__print_format_sloc1_1_0
   02CC 27 0B         [ 3]  688 	beq	00312$
                            689 ;../printf_large.c:593: OUTPUT_CHAR( ' ', p );
   02CE 89            [ 2]  690 	pshx
   02CF 8B            [ 2]  691 	pshh
   02D0 A6 20         [ 2]  692 	lda	#0x20
   02D2 CDr00r00      [ 6]  693 	jsr	__output_char
   02D5 8A            [ 3]  694 	pulh
   02D6 88            [ 3]  695 	pulx
   02D7 20 EB         [ 3]  696 	bra	00136$
                            697 ;../printf_large.c:597: while ( (c = *PTR)  && (decimals-- > 0))
   02D9                     698 00312$:
   02D9 35*00         [ 4]  699 	sthx	*__print_format_sloc0_1_0
   02DB                     700 00277$:
   02DB 32r00r1D      [ 5]  701 	ldhx	__print_format_decimals_65536_75
   02DE 35*02         [ 4]  702 	sthx	*__print_format_sloc1_1_0
   02E0                     703 00143$:
   02E0 32r00r05      [ 5]  704 	ldhx	_value
   02E3 F6            [ 3]  705 	lda	,x
   02E4 4D            [ 1]  706 	tsta
   02E5 27 1A         [ 3]  707 	beq	00145$
   02E7 55*02         [ 4]  708 	ldhx	*__print_format_sloc1_1_0
   02E9 65 00 00      [ 3]  709 	cphx	#0x0000
   02EC 93 13         [ 3]  710 	ble	00145$
   02EE 55*02         [ 4]  711 	ldhx	*__print_format_sloc1_1_0
   02F0 AF FF         [ 2]  712 	aix	#-1
   02F2 35*02         [ 4]  713 	sthx	*__print_format_sloc1_1_0
                            714 ;../printf_large.c:599: OUTPUT_CHAR( c, p );
   02F4 CDr00r00      [ 6]  715 	jsr	__output_char
                            716 ;../printf_large.c:600: PTR++;
   02F7 32r00r05      [ 5]  717 	ldhx	_value
   02FA AF 01         [ 2]  718 	aix	#1
   02FC 96r00r05      [ 5]  719 	sthx	_value
   02FF 20 DF         [ 3]  720 	bra	00143$
   0301                     721 00145$:
                            722 ;../printf_large.c:603: if ( left_justify && (length < width))
   0301 C6r00r13      [ 4]  723 	lda	__print_format_left_justify_65536_75
   0304 26 02         [ 3]  724 	bne	00666$
   0306 20 7C         [ 3]  725 	bra	00160$
   0308                     726 00666$:
   0308 55*04         [ 4]  727 	ldhx	*__print_format_sloc2_1_0
   030A 75*00         [ 5]  728 	cphx	*__print_format_sloc0_1_0
   030C 24 76         [ 3]  729 	bcc	00160$
                            730 ;../printf_large.c:605: width -= length;
   030E B6*01         [ 3]  731 	lda	*(__print_format_sloc0_1_0 + 1)
   0310 B0*05         [ 3]  732 	sub	*(__print_format_sloc2_1_0 + 1)
   0312 97            [ 1]  733 	tax
   0313 B6*00         [ 3]  734 	lda	*__print_format_sloc0_1_0
   0315 B2*04         [ 3]  735 	sbc	*__print_format_sloc2_1_0
   0317 87            [ 2]  736 	psha
   0318 8A            [ 3]  737 	pulh
                            738 ;../printf_large.c:606: while( width-- != 0 )
   0319                     739 00146$:
   0319 35*04         [ 4]  740 	sthx	*__print_format_sloc2_1_0
   031B AF FF         [ 2]  741 	aix	#-1
   031D B6*05         [ 3]  742 	lda	*(__print_format_sloc2_1_0 + 1)
   031F BA*04         [ 3]  743 	ora	*__print_format_sloc2_1_0
   0321 27 5F         [ 3]  744 	beq	00314$
                            745 ;../printf_large.c:608: OUTPUT_CHAR( ' ', p );
   0323 89            [ 2]  746 	pshx
   0324 8B            [ 2]  747 	pshh
   0325 A6 20         [ 2]  748 	lda	#0x20
   0327 CDr00r00      [ 6]  749 	jsr	__output_char
   032A 8A            [ 3]  750 	pulh
   032B 88            [ 3]  751 	pulx
   032C 20 EB         [ 3]  752 	bra	00146$
                            753 ;../printf_large.c:613: case 'P':
   032E                     754 00152$:
                            755 ;../printf_large.c:614: PTR = va_arg(ap,ptr_t);
   032E 32r00r11      [ 5]  756 	ldhx	__print_format_PARM_4
   0331 AF 02         [ 2]  757 	aix	#2
   0333 96r00r11      [ 5]  758 	sthx	__print_format_PARM_4
   0336 AF FE         [ 2]  759 	aix	#-2
   0338 9E AE         [ 5]  760 	ldhx	,x
   033A 96r00r05      [ 5]  761 	sthx	_value
                            762 ;../printf_large.c:658: OUTPUT_CHAR('0', p);
   033D A6 30         [ 2]  763 	lda	#0x30
   033F CDr00r00      [ 6]  764 	jsr	__output_char
                            765 ;../printf_large.c:659: OUTPUT_CHAR('x', p);
   0342 A6 78         [ 2]  766 	lda	#0x78
   0344 CDr00r00      [ 6]  767 	jsr	__output_char
                            768 ;../printf_large.c:660: OUTPUT_2DIGITS( value.byte[0] );
   0347 C6r00r05      [ 4]  769 	lda	_value
   034A CDr00r34      [ 6]  770 	jsr	_output_2digits
                            771 ;../printf_large.c:661: OUTPUT_2DIGITS( value.byte[1] );
   034D C6r00r06      [ 4]  772 	lda	(_value + 0x0001)
   0350 CDr00r34      [ 6]  773 	jsr	_output_2digits
                            774 ;../printf_large.c:668: break;
   0353 20 2F         [ 3]  775 	bra	00160$
                            776 ;../printf_large.c:671: case 'I':
   0355                     777 00154$:
                            778 ;../printf_large.c:672: signed_argument = 1;
   0355 A6 01         [ 2]  779 	lda	#0x01
   0357 C7r00r17      [ 4]  780 	sta	__print_format_signed_argument_65536_75
                            781 ;../printf_large.c:673: radix = 10;
   035A A6 0A         [ 2]  782 	lda	#0x0a
   035C C7r00r1C      [ 4]  783 	sta	__print_format_radix_65536_75
                            784 ;../printf_large.c:674: break;
   035F 20 23         [ 3]  785 	bra	00160$
                            786 ;../printf_large.c:676: case 'O':
   0361                     787 00155$:
                            788 ;../printf_large.c:677: radix = 8;
   0361 A6 08         [ 2]  789 	lda	#0x08
   0363 C7r00r1C      [ 4]  790 	sta	__print_format_radix_65536_75
                            791 ;../printf_large.c:678: break;
   0366 20 1C         [ 3]  792 	bra	00160$
                            793 ;../printf_large.c:680: case 'U':
   0368                     794 00156$:
                            795 ;../printf_large.c:681: radix = 10;
   0368 A6 0A         [ 2]  796 	lda	#0x0a
   036A C7r00r1C      [ 4]  797 	sta	__print_format_radix_65536_75
                            798 ;../printf_large.c:682: break;
   036D 20 15         [ 3]  799 	bra	00160$
                            800 ;../printf_large.c:684: case 'X':
   036F                     801 00157$:
                            802 ;../printf_large.c:685: radix = 16;
   036F A6 10         [ 2]  803 	lda	#0x10
   0371 C7r00r1C      [ 4]  804 	sta	__print_format_radix_65536_75
                            805 ;../printf_large.c:686: break;
   0374 20 0E         [ 3]  806 	bra	00160$
                            807 ;../printf_large.c:688: case 'F':
   0376                     808 00158$:
                            809 ;../printf_large.c:689: float_argument=1;
   0376 A6 01         [ 2]  810 	lda	#0x01
   0378 C7r00r1A      [ 4]  811 	sta	__print_format_float_argument_65536_75
                            812 ;../printf_large.c:690: break;
   037B 20 07         [ 3]  813 	bra	00160$
                            814 ;../printf_large.c:692: default:
   037D                     815 00159$:
                            816 ;../printf_large.c:694: OUTPUT_CHAR( c, p );
   037D CDr00r00      [ 6]  817 	jsr	__output_char
                            818 ;../printf_large.c:877: return charsOutputted;
   0380 20 02         [ 3]  819 	bra	00160$
                            820 ;../printf_large.c:696: }
   0382                     821 00314$:
   0382 35*00         [ 4]  822 	sthx	*__print_format_sloc0_1_0
   0384                     823 00160$:
                            824 ;../printf_large.c:698: if (float_argument)
   0384 C6r00r1A      [ 4]  825 	lda	__print_format_float_argument_65536_75
   0387 27 56         [ 3]  826 	beq	00226$
                            827 ;../printf_large.c:700: value.f = va_arg(ap, float);
   0389 32r00r11      [ 5]  828 	ldhx	__print_format_PARM_4
   038C AF 04         [ 2]  829 	aix	#4
   038E 96r00r11      [ 5]  830 	sthx	__print_format_PARM_4
   0391 AF FC         [ 2]  831 	aix	#-4
   0393 F6            [ 3]  832 	lda	,x
   0394 B7*06         [ 3]  833 	sta	*__print_format_sloc3_1_0
   0396 E6 01         [ 3]  834 	lda	1,x
   0398 B7*07         [ 3]  835 	sta	*(__print_format_sloc3_1_0 + 1)
   039A E6 02         [ 3]  836 	lda	2,x
   039C B7*08         [ 3]  837 	sta	*(__print_format_sloc3_1_0 + 2)
   039E E6 03         [ 3]  838 	lda	3,x
   03A0 B7*09         [ 3]  839 	sta	*(__print_format_sloc3_1_0 + 3)
   03A2 B6*06         [ 3]  840 	lda	*__print_format_sloc3_1_0
   03A4 C7r00r05      [ 4]  841 	sta	_value
   03A7 B6*07         [ 3]  842 	lda	*(__print_format_sloc3_1_0 + 1)
   03A9 C7r00r06      [ 4]  843 	sta	(_value + 1)
   03AC B6*08         [ 3]  844 	lda	*(__print_format_sloc3_1_0 + 2)
   03AE C7r00r07      [ 4]  845 	sta	(_value + 2)
   03B1 B6*09         [ 3]  846 	lda	*(__print_format_sloc3_1_0 + 3)
   03B3 C7r00r08      [ 4]  847 	sta	(_value + 3)
                            848 ;../printf_large.c:702: PTR="<NO FLOAT>";
   03B6 A6s00         [ 2]  849 	lda	#>___str_0
   03B8 C7r00r05      [ 4]  850 	sta	_value
   03BB A6r00         [ 2]  851 	lda	#___str_0
   03BD C7r00r06      [ 4]  852 	sta	(_value + 1)
                            853 ;../printf_large.c:703: while (c=*PTR++)
   03C0                     854 00161$:
   03C0 C6r00r05      [ 4]  855 	lda	_value
   03C3 B7*06         [ 3]  856 	sta	*__print_format_sloc3_1_0
   03C5 C6r00r06      [ 4]  857 	lda	(_value + 1)
   03C8 B7*07         [ 3]  858 	sta	*(__print_format_sloc3_1_0 + 1)
   03CA 55*06         [ 4]  859 	ldhx	*__print_format_sloc3_1_0
   03CC AF 01         [ 2]  860 	aix	#1
   03CE 96r00r05      [ 5]  861 	sthx	_value
   03D1 55*06         [ 4]  862 	ldhx	*__print_format_sloc3_1_0
   03D3 F6            [ 3]  863 	lda	,x
   03D4 4D            [ 1]  864 	tsta
   03D5 26 03         [ 3]  865 	bne	00670$
   03D7 CCr00rBB      [ 4]  866 	jmp	00231$
   03DA                     867 00670$:
                            868 ;../printf_large.c:705: OUTPUT_CHAR (c, p);
   03DA CDr00r00      [ 6]  869 	jsr	__output_char
   03DD 20 E1         [ 3]  870 	bra	00161$
   03DF                     871 00226$:
                            872 ;../printf_large.c:723: else if (radix != 0)
   03DF C6r00r1C      [ 4]  873 	lda	__print_format_radix_65536_75
   03E2 26 03         [ 3]  874 	bne	00671$
   03E4 CCr00rBB      [ 4]  875 	jmp	00231$
   03E7                     876 00671$:
                            877 ;../printf_large.c:728: unsigned char MEM_SPACE_BUF_PP *pstore = &store[5];
                            878 ;../printf_large.c:731: if (char_argument)
   03E7 C6r00r18      [ 4]  879 	lda	__print_format_char_argument_65536_75
   03EA 27 66         [ 3]  880 	beq	00172$
                            881 ;../printf_large.c:733: value.l = va_arg(ap, char);
   03EC 32r00r11      [ 5]  882 	ldhx	__print_format_PARM_4
   03EF AF 01         [ 2]  883 	aix	#1
   03F1 96r00r11      [ 5]  884 	sthx	__print_format_PARM_4
   03F4 AF FF         [ 2]  885 	aix	#-1
   03F6 F6            [ 3]  886 	lda	,x
   03F7 B7*09         [ 3]  887 	sta	*(__print_format_sloc3_1_0 + 3)
   03F9 6E 00*08      [ 4]  888 	mov	#0x00,*(__print_format_sloc3_1_0 + 2)
   03FC 6E 00*07      [ 4]  889 	mov	#0x00,*(__print_format_sloc3_1_0 + 1)
   03FF 6E 00*06      [ 4]  890 	mov	#0x00,*__print_format_sloc3_1_0
   0402 B6*06         [ 3]  891 	lda	*__print_format_sloc3_1_0
   0404 C7r00r05      [ 4]  892 	sta	_value
   0407 B6*07         [ 3]  893 	lda	*(__print_format_sloc3_1_0 + 1)
   0409 C7r00r06      [ 4]  894 	sta	(_value + 1)
   040C B6*08         [ 3]  895 	lda	*(__print_format_sloc3_1_0 + 2)
   040E C7r00r07      [ 4]  896 	sta	(_value + 2)
   0411 B6*09         [ 3]  897 	lda	*(__print_format_sloc3_1_0 + 3)
   0413 C7r00r08      [ 4]  898 	sta	(_value + 3)
                            899 ;../printf_large.c:734: if (!signed_argument)
   0416 C6r00r17      [ 4]  900 	lda	__print_format_signed_argument_65536_75
   0419 27 03         [ 3]  901 	beq	00673$
   041B CCr04rE7      [ 4]  902 	jmp	00173$
   041E                     903 00673$:
                            904 ;../printf_large.c:736: value.l &= 0xFF;
   041E C6r00r05      [ 4]  905 	lda	_value
   0421 B7*06         [ 3]  906 	sta	*__print_format_sloc3_1_0
   0423 C6r00r06      [ 4]  907 	lda	(_value + 1)
   0426 B7*07         [ 3]  908 	sta	*(__print_format_sloc3_1_0 + 1)
   0428 C6r00r07      [ 4]  909 	lda	(_value + 2)
   042B B7*08         [ 3]  910 	sta	*(__print_format_sloc3_1_0 + 2)
   042D C6r00r08      [ 4]  911 	lda	(_value + 3)
   0430 B7*09         [ 3]  912 	sta	*(__print_format_sloc3_1_0 + 3)
   0432 6E 00*08      [ 4]  913 	mov	#0x00,*(__print_format_sloc3_1_0 + 2)
   0435 6E 00*07      [ 4]  914 	mov	#0x00,*(__print_format_sloc3_1_0 + 1)
   0438 6E 00*06      [ 4]  915 	mov	#0x00,*__print_format_sloc3_1_0
   043B B6*06         [ 3]  916 	lda	*__print_format_sloc3_1_0
   043D C7r00r05      [ 4]  917 	sta	_value
   0440 B6*07         [ 3]  918 	lda	*(__print_format_sloc3_1_0 + 1)
   0442 C7r00r06      [ 4]  919 	sta	(_value + 1)
   0445 B6*08         [ 3]  920 	lda	*(__print_format_sloc3_1_0 + 2)
   0447 C7r00r07      [ 4]  921 	sta	(_value + 2)
   044A B6*09         [ 3]  922 	lda	*(__print_format_sloc3_1_0 + 3)
   044C C7r00r08      [ 4]  923 	sta	(_value + 3)
   044F CCr04rE7      [ 4]  924 	jmp	00173$
   0452                     925 00172$:
                            926 ;../printf_large.c:739: else if (long_argument)
   0452 C6r00r19      [ 4]  927 	lda	__print_format_long_argument_65536_75
   0455 27 2F         [ 3]  928 	beq	00169$
                            929 ;../printf_large.c:741: value.l = va_arg(ap, long);
   0457 32r00r11      [ 5]  930 	ldhx	__print_format_PARM_4
   045A AF 04         [ 2]  931 	aix	#4
   045C 96r00r11      [ 5]  932 	sthx	__print_format_PARM_4
   045F AF FC         [ 2]  933 	aix	#-4
   0461 F6            [ 3]  934 	lda	,x
   0462 B7*06         [ 3]  935 	sta	*__print_format_sloc3_1_0
   0464 E6 01         [ 3]  936 	lda	1,x
   0466 B7*07         [ 3]  937 	sta	*(__print_format_sloc3_1_0 + 1)
   0468 E6 02         [ 3]  938 	lda	2,x
   046A B7*08         [ 3]  939 	sta	*(__print_format_sloc3_1_0 + 2)
   046C E6 03         [ 3]  940 	lda	3,x
   046E B7*09         [ 3]  941 	sta	*(__print_format_sloc3_1_0 + 3)
   0470 B6*06         [ 3]  942 	lda	*__print_format_sloc3_1_0
   0472 C7r00r05      [ 4]  943 	sta	_value
   0475 B6*07         [ 3]  944 	lda	*(__print_format_sloc3_1_0 + 1)
   0477 C7r00r06      [ 4]  945 	sta	(_value + 1)
   047A B6*08         [ 3]  946 	lda	*(__print_format_sloc3_1_0 + 2)
   047C C7r00r07      [ 4]  947 	sta	(_value + 2)
   047F B6*09         [ 3]  948 	lda	*(__print_format_sloc3_1_0 + 3)
   0481 C7r00r08      [ 4]  949 	sta	(_value + 3)
   0484 20 61         [ 3]  950 	bra	00173$
   0486                     951 00169$:
                            952 ;../printf_large.c:745: value.l = va_arg(ap, int);
   0486 32r00r11      [ 5]  953 	ldhx	__print_format_PARM_4
   0489 AF 02         [ 2]  954 	aix	#2
   048B 96r00r11      [ 5]  955 	sthx	__print_format_PARM_4
   048E AF FE         [ 2]  956 	aix	#-2
   0490 9E AE         [ 5]  957 	ldhx	,x
   0492 BF*09         [ 3]  958 	stx	*(__print_format_sloc3_1_0 + 3)
   0494 8B            [ 2]  959 	pshh
   0495 86            [ 3]  960 	pula
   0496 B7*08         [ 3]  961 	sta	*(__print_format_sloc3_1_0 + 2)
   0498 49            [ 1]  962 	rola	
   0499 4F            [ 1]  963 	clra	
   049A A2 00         [ 2]  964 	sbc	#0x00
   049C B7*07         [ 3]  965 	sta	*(__print_format_sloc3_1_0 + 1)
   049E B7*06         [ 3]  966 	sta	*__print_format_sloc3_1_0
   04A0 B6*06         [ 3]  967 	lda	*__print_format_sloc3_1_0
   04A2 C7r00r05      [ 4]  968 	sta	_value
   04A5 B6*07         [ 3]  969 	lda	*(__print_format_sloc3_1_0 + 1)
   04A7 C7r00r06      [ 4]  970 	sta	(_value + 1)
   04AA B6*08         [ 3]  971 	lda	*(__print_format_sloc3_1_0 + 2)
   04AC C7r00r07      [ 4]  972 	sta	(_value + 2)
   04AF B6*09         [ 3]  973 	lda	*(__print_format_sloc3_1_0 + 3)
   04B1 C7r00r08      [ 4]  974 	sta	(_value + 3)
                            975 ;../printf_large.c:746: if (!signed_argument)
   04B4 C6r00r17      [ 4]  976 	lda	__print_format_signed_argument_65536_75
   04B7 26 2E         [ 3]  977 	bne	00173$
                            978 ;../printf_large.c:748: value.l &= 0xFFFF;
   04B9 C6r00r05      [ 4]  979 	lda	_value
   04BC B7*06         [ 3]  980 	sta	*__print_format_sloc3_1_0
   04BE C6r00r06      [ 4]  981 	lda	(_value + 1)
   04C1 B7*07         [ 3]  982 	sta	*(__print_format_sloc3_1_0 + 1)
   04C3 C6r00r07      [ 4]  983 	lda	(_value + 2)
   04C6 B7*08         [ 3]  984 	sta	*(__print_format_sloc3_1_0 + 2)
   04C8 C6r00r08      [ 4]  985 	lda	(_value + 3)
   04CB B7*09         [ 3]  986 	sta	*(__print_format_sloc3_1_0 + 3)
   04CD 6E 00*07      [ 4]  987 	mov	#0x00,*(__print_format_sloc3_1_0 + 1)
   04D0 6E 00*06      [ 4]  988 	mov	#0x00,*__print_format_sloc3_1_0
   04D3 B6*06         [ 3]  989 	lda	*__print_format_sloc3_1_0
   04D5 C7r00r05      [ 4]  990 	sta	_value
   04D8 B6*07         [ 3]  991 	lda	*(__print_format_sloc3_1_0 + 1)
   04DA C7r00r06      [ 4]  992 	sta	(_value + 1)
   04DD B6*08         [ 3]  993 	lda	*(__print_format_sloc3_1_0 + 2)
   04DF C7r00r07      [ 4]  994 	sta	(_value + 2)
   04E2 B6*09         [ 3]  995 	lda	*(__print_format_sloc3_1_0 + 3)
   04E4 C7r00r08      [ 4]  996 	sta	(_value + 3)
   04E7                     997 00173$:
                            998 ;../printf_large.c:752: if ( signed_argument )
   04E7 C6r00r17      [ 4]  999 	lda	__print_format_signed_argument_65536_75
   04EA 27 5C         [ 3] 1000 	beq	00178$
                           1001 ;../printf_large.c:754: if (value.l < 0)
   04EC C6r00r05      [ 4] 1002 	lda	_value
   04EF B7*06         [ 3] 1003 	sta	*__print_format_sloc3_1_0
   04F1 C6r00r06      [ 4] 1004 	lda	(_value + 1)
   04F4 B7*07         [ 3] 1005 	sta	*(__print_format_sloc3_1_0 + 1)
   04F6 C6r00r07      [ 4] 1006 	lda	(_value + 2)
   04F9 B7*08         [ 3] 1007 	sta	*(__print_format_sloc3_1_0 + 2)
   04FB C6r00r08      [ 4] 1008 	lda	(_value + 3)
   04FE B7*09         [ 3] 1009 	sta	*(__print_format_sloc3_1_0 + 3)
   0500 B6*06         [ 3] 1010 	lda	*__print_format_sloc3_1_0
   0502 A0 00         [ 2] 1011 	sub	#0x00
   0504 90 3E         [ 3] 1012 	bge	00175$
                           1013 ;../printf_large.c:755: value.l = -value.l;
   0506 C6r00r05      [ 4] 1014 	lda	_value
   0509 B7*06         [ 3] 1015 	sta	*__print_format_sloc3_1_0
   050B C6r00r06      [ 4] 1016 	lda	(_value + 1)
   050E B7*07         [ 3] 1017 	sta	*(__print_format_sloc3_1_0 + 1)
   0510 C6r00r07      [ 4] 1018 	lda	(_value + 2)
   0513 B7*08         [ 3] 1019 	sta	*(__print_format_sloc3_1_0 + 2)
   0515 C6r00r08      [ 4] 1020 	lda	(_value + 3)
   0518 B7*09         [ 3] 1021 	sta	*(__print_format_sloc3_1_0 + 3)
   051A 4F            [ 1] 1022 	clra
   051B B0*09         [ 3] 1023 	sub	*(__print_format_sloc3_1_0 + 3)
   051D B7*09         [ 3] 1024 	sta	*(__print_format_sloc3_1_0 + 3)
   051F 4F            [ 1] 1025 	clra
   0520 B2*08         [ 3] 1026 	sbc	*(__print_format_sloc3_1_0 + 2)
   0522 B7*08         [ 3] 1027 	sta	*(__print_format_sloc3_1_0 + 2)
   0524 4F            [ 1] 1028 	clra
   0525 B2*07         [ 3] 1029 	sbc	*(__print_format_sloc3_1_0 + 1)
   0527 B7*07         [ 3] 1030 	sta	*(__print_format_sloc3_1_0 + 1)
   0529 4F            [ 1] 1031 	clra
   052A B2*06         [ 3] 1032 	sbc	*__print_format_sloc3_1_0
   052C B7*06         [ 3] 1033 	sta	*__print_format_sloc3_1_0
   052E B6*06         [ 3] 1034 	lda	*__print_format_sloc3_1_0
   0530 C7r00r05      [ 4] 1035 	sta	_value
   0533 B6*07         [ 3] 1036 	lda	*(__print_format_sloc3_1_0 + 1)
   0535 C7r00r06      [ 4] 1037 	sta	(_value + 1)
   0538 B6*08         [ 3] 1038 	lda	*(__print_format_sloc3_1_0 + 2)
   053A C7r00r07      [ 4] 1039 	sta	(_value + 2)
   053D B6*09         [ 3] 1040 	lda	*(__print_format_sloc3_1_0 + 3)
   053F C7r00r08      [ 4] 1041 	sta	(_value + 3)
   0542 20 04         [ 3] 1042 	bra	00178$
   0544                    1043 00175$:
                           1044 ;../printf_large.c:757: signed_argument = 0;
   0544 4F            [ 1] 1045 	clra
   0545 C7r00r17      [ 4] 1046 	sta	__print_format_signed_argument_65536_75
   0548                    1047 00178$:
                           1048 ;../printf_large.c:761: lsd = 1;
   0548 A6 01         [ 2] 1049 	lda	#0x01
   054A C7r00r1B      [ 4] 1050 	sta	__print_format_lsd_65536_75
                           1051 ;../printf_large.c:763: do {
   054D 45r00r24      [ 3] 1052 	ldhx	#(__print_format_store_262144_94 + 0x0005)
   0550 35*06         [ 4] 1053 	sthx	*__print_format_sloc3_1_0
   0552 8C            [ 1] 1054 	clrh
   0553 5F            [ 1] 1055 	clrx
   0554 35*04         [ 4] 1056 	sthx	*__print_format_sloc2_1_0
   0556                    1057 00182$:
                           1058 ;../printf_large.c:764: value.byte[4] = 0;
   0556 4F            [ 1] 1059 	clra
   0557 C7r00r09      [ 4] 1060 	sta	(_value + 0x0004)
                           1061 ;../printf_large.c:768: calculate_digit(radix);
   055A C6r00r1C      [ 4] 1062 	lda	__print_format_radix_65536_75
   055D CDr00r44      [ 6] 1063 	jsr	_calculate_digit
                           1064 ;../printf_large.c:770: if (!lsd)
   0560 C6r00r1B      [ 4] 1065 	lda	__print_format_lsd_65536_75
   0563 26 22         [ 3] 1066 	bne	00180$
                           1067 ;../printf_large.c:772: *pstore = (value.byte[4] << 4) | (value.byte[4] >> 4) | *pstore;
   0565 C6r00r09      [ 4] 1068 	lda	(_value + 0x0004)
   0568 62            [ 1] 1069 	nsa	
   0569 A4 F0         [ 2] 1070 	and	#0xf0
   056B B7*02         [ 3] 1071 	sta	*__print_format_sloc1_1_0
   056D C6r00r09      [ 4] 1072 	lda	(_value + 0x0004)
   0570 62            [ 1] 1073 	nsa	
   0571 A4 0F         [ 2] 1074 	and	#0x0f
   0573 BA*02         [ 3] 1075 	ora	*__print_format_sloc1_1_0
   0575 55*06         [ 4] 1076 	ldhx	*__print_format_sloc3_1_0
   0577 FE            [ 3] 1077 	ldx	,x
   0578 BF*02         [ 3] 1078 	stx	*__print_format_sloc1_1_0
   057A BA*02         [ 3] 1079 	ora	*__print_format_sloc1_1_0
   057C 55*06         [ 4] 1080 	ldhx	*__print_format_sloc3_1_0
   057E F7            [ 2] 1081 	sta	,x
                           1082 ;../printf_large.c:773: pstore--;
   057F 55*06         [ 4] 1083 	ldhx	*__print_format_sloc3_1_0
   0581 AF FF         [ 2] 1084 	aix	#-1
   0583 35*06         [ 4] 1085 	sthx	*__print_format_sloc3_1_0
   0585 20 06         [ 3] 1086 	bra	00181$
   0587                    1087 00180$:
                           1088 ;../printf_large.c:777: *pstore = value.byte[4];
   0587 C6r00r09      [ 4] 1089 	lda	(_value + 0x0004)
   058A 55*06         [ 4] 1090 	ldhx	*__print_format_sloc3_1_0
   058C F7            [ 2] 1091 	sta	,x
   058D                    1092 00181$:
                           1093 ;../printf_large.c:779: length++;
   058D 55*04         [ 4] 1094 	ldhx	*__print_format_sloc2_1_0
   058F AF 01         [ 2] 1095 	aix	#1
   0591 35*04         [ 4] 1096 	sthx	*__print_format_sloc2_1_0
                           1097 ;../printf_large.c:780: lsd = !lsd;
   0593 C6r00r1B      [ 4] 1098 	lda	__print_format_lsd_65536_75
   0596 A8 01         [ 2] 1099 	eor	#0x01
   0598 C7r00r1B      [ 4] 1100 	sta	__print_format_lsd_65536_75
                           1101 ;../printf_large.c:781: } while( value.ul );
   059B C6r00r05      [ 4] 1102 	lda	_value
   059E B7*0A         [ 3] 1103 	sta	*__print_format_sloc4_1_0
   05A0 C6r00r06      [ 4] 1104 	lda	(_value + 1)
   05A3 B7*0B         [ 3] 1105 	sta	*(__print_format_sloc4_1_0 + 1)
   05A5 C6r00r07      [ 4] 1106 	lda	(_value + 2)
   05A8 B7*0C         [ 3] 1107 	sta	*(__print_format_sloc4_1_0 + 2)
   05AA C6r00r08      [ 4] 1108 	lda	(_value + 3)
   05AD B7*0D         [ 3] 1109 	sta	*(__print_format_sloc4_1_0 + 3)
   05AF B6*0A         [ 3] 1110 	lda	*__print_format_sloc4_1_0
   05B1 BA*0B         [ 3] 1111 	ora	*(__print_format_sloc4_1_0 + 1)
   05B3 BA*0C         [ 3] 1112 	ora	*(__print_format_sloc4_1_0 + 2)
   05B5 BA*0D         [ 3] 1113 	ora	*(__print_format_sloc4_1_0 + 3)
   05B7 26 9D         [ 3] 1114 	bne	00182$
                           1115 ;../printf_large.c:783: if (width == 0)
   05B9 4E*06*0A      [ 6] 1116 	mov	*__print_format_sloc3_1_0,*__print_format_sloc4_1_0
   05BC 4E*07*0B      [ 6] 1117 	mov	*(__print_format_sloc3_1_0 + 1),*(__print_format_sloc4_1_0 + 1)
   05BF 4E*04*06      [ 6] 1118 	mov	*__print_format_sloc2_1_0,*__print_format_sloc3_1_0
   05C2 4E*05*07      [ 6] 1119 	mov	*(__print_format_sloc2_1_0 + 1),*(__print_format_sloc3_1_0 + 1)
   05C5 B6*01         [ 3] 1120 	lda	*(__print_format_sloc0_1_0 + 1)
   05C7 BA*00         [ 3] 1121 	ora	*__print_format_sloc0_1_0
   05C9 26 05         [ 3] 1122 	bne	00186$
                           1123 ;../printf_large.c:788: width = 1;
   05CB 45 00 01      [ 3] 1124 	ldhx	#0x0001
   05CE 35*00         [ 4] 1125 	sthx	*__print_format_sloc0_1_0
   05D0                    1126 00186$:
                           1127 ;../printf_large.c:792: if (!zero_padding && !left_justify)
   05D0 C6r00r14      [ 4] 1128 	lda	__print_format_zero_padding_65536_75
   05D3 26 22         [ 3] 1129 	bne	00191$
   05D5 C6r00r13      [ 4] 1130 	lda	__print_format_left_justify_65536_75
   05D8 26 1D         [ 3] 1131 	bne	00191$
                           1132 ;../printf_large.c:794: while ( width > (unsigned char) (length+1) )
   05DA 55*00         [ 4] 1133 	ldhx	*__print_format_sloc0_1_0
   05DC                    1134 00187$:
   05DC B6*07         [ 3] 1135 	lda	*(__print_format_sloc3_1_0 + 1)
   05DE 4C            [ 1] 1136 	inca
   05DF B7*05         [ 3] 1137 	sta	*(__print_format_sloc2_1_0 + 1)
   05E1 6E 00*04      [ 4] 1138 	mov	#0x00,*__print_format_sloc2_1_0
   05E4 75*04         [ 5] 1139 	cphx	*__print_format_sloc2_1_0
   05E6 23 0D         [ 3] 1140 	bls	00316$
                           1141 ;../printf_large.c:796: OUTPUT_CHAR( ' ', p );
   05E8 89            [ 2] 1142 	pshx
   05E9 8B            [ 2] 1143 	pshh
   05EA A6 20         [ 2] 1144 	lda	#0x20
   05EC CDr00r00      [ 6] 1145 	jsr	__output_char
   05EF 8A            [ 3] 1146 	pulh
   05F0 88            [ 3] 1147 	pulx
                           1148 ;../printf_large.c:797: width--;
   05F1 AF FF         [ 2] 1149 	aix	#-1
   05F3 20 E7         [ 3] 1150 	bra	00187$
   05F5                    1151 00316$:
   05F5 35*00         [ 4] 1152 	sthx	*__print_format_sloc0_1_0
   05F7                    1153 00191$:
                           1154 ;../printf_large.c:801: if (signed_argument) // this now means the original value was negative
   05F7 C6r00r17      [ 4] 1155 	lda	__print_format_signed_argument_65536_75
   05FA 27 0D         [ 3] 1156 	beq	00201$
                           1157 ;../printf_large.c:803: OUTPUT_CHAR( '-', p );
   05FC A6 2D         [ 2] 1158 	lda	#0x2d
   05FE CDr00r00      [ 6] 1159 	jsr	__output_char
                           1160 ;../printf_large.c:805: width--;
   0601 55*00         [ 4] 1161 	ldhx	*__print_format_sloc0_1_0
   0603 AF FF         [ 2] 1162 	aix	#-1
   0605 35*00         [ 4] 1163 	sthx	*__print_format_sloc0_1_0
   0607 20 28         [ 3] 1164 	bra	00202$
   0609                    1165 00201$:
                           1166 ;../printf_large.c:807: else if (length != 0)
   0609 B6*07         [ 3] 1167 	lda	*(__print_format_sloc3_1_0 + 1)
   060B BA*06         [ 3] 1168 	ora	*__print_format_sloc3_1_0
   060D 27 22         [ 3] 1169 	beq	00202$
                           1170 ;../printf_large.c:810: if (prefix_sign)
   060F C6r00r15      [ 4] 1171 	lda	__print_format_prefix_sign_65536_75
   0612 27 0D         [ 3] 1172 	beq	00196$
                           1173 ;../printf_large.c:812: OUTPUT_CHAR( '+', p );
   0614 A6 2B         [ 2] 1174 	lda	#0x2b
   0616 CDr00r00      [ 6] 1175 	jsr	__output_char
                           1176 ;../printf_large.c:814: width--;
   0619 55*00         [ 4] 1177 	ldhx	*__print_format_sloc0_1_0
   061B AF FF         [ 2] 1178 	aix	#-1
   061D 35*00         [ 4] 1179 	sthx	*__print_format_sloc0_1_0
   061F 20 10         [ 3] 1180 	bra	00202$
   0621                    1181 00196$:
                           1182 ;../printf_large.c:816: else if (prefix_space)
   0621 C6r00r16      [ 4] 1183 	lda	__print_format_prefix_space_65536_75
   0624 27 0B         [ 3] 1184 	beq	00202$
                           1185 ;../printf_large.c:818: OUTPUT_CHAR( ' ', p );
   0626 A6 20         [ 2] 1186 	lda	#0x20
   0628 CDr00r00      [ 6] 1187 	jsr	__output_char
                           1188 ;../printf_large.c:820: width--;
   062B 55*00         [ 4] 1189 	ldhx	*__print_format_sloc0_1_0
   062D AF FF         [ 2] 1190 	aix	#-1
   062F 35*00         [ 4] 1191 	sthx	*__print_format_sloc0_1_0
   0631                    1192 00202$:
                           1193 ;../printf_large.c:825: if (!left_justify)
   0631 C6r00r13      [ 4] 1194 	lda	__print_format_left_justify_65536_75
   0634 26 28         [ 3] 1195 	bne	00210$
                           1196 ;../printf_large.c:827: while ( width-- > length )
   0636 4E*00*04      [ 6] 1197 	mov	*__print_format_sloc0_1_0,*__print_format_sloc2_1_0
   0639 4E*01*05      [ 6] 1198 	mov	*(__print_format_sloc0_1_0 + 1),*(__print_format_sloc2_1_0 + 1)
   063C                    1199 00203$:
   063C 55*04         [ 4] 1200 	ldhx	*__print_format_sloc2_1_0
   063E 89            [ 2] 1201 	pshx
   063F 8B            [ 2] 1202 	pshh
   0640 55*04         [ 4] 1203 	ldhx	*__print_format_sloc2_1_0
   0642 AF FF         [ 2] 1204 	aix	#-1
   0644 35*04         [ 4] 1205 	sthx	*__print_format_sloc2_1_0
   0646 8A            [ 3] 1206 	pulh
   0647 88            [ 3] 1207 	pulx
   0648 75*06         [ 5] 1208 	cphx	*__print_format_sloc3_1_0
   064A 23 2C         [ 3] 1209 	bls	00317$
                           1210 ;../printf_large.c:829: OUTPUT_CHAR( zero_padding ? '0' : ' ', p );
   064C C6r00r14      [ 4] 1211 	lda	__print_format_zero_padding_65536_75
   064F 27 05         [ 3] 1212 	beq	00236$
   0651 5F            [ 1] 1213 	clrx
   0652 A6 30         [ 2] 1214 	lda	#0x30
   0654 20 03         [ 3] 1215 	bra	00237$
   0656                    1216 00236$:
   0656 5F            [ 1] 1217 	clrx
   0657 A6 20         [ 2] 1218 	lda	#0x20
   0659                    1219 00237$:
   0659 CDr00r00      [ 6] 1220 	jsr	__output_char
   065C 20 DE         [ 3] 1221 	bra	00203$
   065E                    1222 00210$:
                           1223 ;../printf_large.c:835: if (width > length)
   065E 55*00         [ 4] 1224 	ldhx	*__print_format_sloc0_1_0
   0660 75*06         [ 5] 1225 	cphx	*__print_format_sloc3_1_0
   0662 23 0E         [ 3] 1226 	bls	00207$
                           1227 ;../printf_large.c:836: width -= length;
   0664 B6*01         [ 3] 1228 	lda	*(__print_format_sloc0_1_0 + 1)
   0666 B0*07         [ 3] 1229 	sub	*(__print_format_sloc3_1_0 + 1)
   0668 B7*03         [ 3] 1230 	sta	*(__print_format_sloc1_1_0 + 1)
   066A B6*00         [ 3] 1231 	lda	*__print_format_sloc0_1_0
   066C B2*06         [ 3] 1232 	sbc	*__print_format_sloc3_1_0
   066E B7*02         [ 3] 1233 	sta	*__print_format_sloc1_1_0
   0670 20 0C         [ 3] 1234 	bra	00309$
   0672                    1235 00207$:
                           1236 ;../printf_large.c:838: width = 0;
   0672 8C            [ 1] 1237 	clrh
   0673 5F            [ 1] 1238 	clrx
   0674 35*02         [ 4] 1239 	sthx	*__print_format_sloc1_1_0
                           1240 ;../printf_large.c:877: return charsOutputted;
   0676 20 06         [ 3] 1241 	bra	00309$
                           1242 ;../printf_large.c:842: while( length-- )
   0678                    1243 00317$:
   0678 4E*04*02      [ 6] 1244 	mov	*__print_format_sloc2_1_0,*__print_format_sloc1_1_0
   067B 4E*05*03      [ 6] 1245 	mov	*(__print_format_sloc2_1_0 + 1),*(__print_format_sloc1_1_0 + 1)
   067E                    1246 00309$:
   067E 55*0A         [ 4] 1247 	ldhx	*__print_format_sloc4_1_0
   0680 4E*06*0A      [ 6] 1248 	mov	*__print_format_sloc3_1_0,*__print_format_sloc4_1_0
   0683 4E*07*0B      [ 6] 1249 	mov	*(__print_format_sloc3_1_0 + 1),*(__print_format_sloc4_1_0 + 1)
   0686                    1250 00215$:
   0686 4E*0A*06      [ 6] 1251 	mov	*__print_format_sloc4_1_0,*__print_format_sloc3_1_0
   0689 4E*0B*07      [ 6] 1252 	mov	*(__print_format_sloc4_1_0 + 1),*(__print_format_sloc3_1_0 + 1)
   068C 89            [ 2] 1253 	pshx
   068D 8B            [ 2] 1254 	pshh
   068E 55*0A         [ 4] 1255 	ldhx	*__print_format_sloc4_1_0
   0690 AF FF         [ 2] 1256 	aix	#-1
   0692 35*0A         [ 4] 1257 	sthx	*__print_format_sloc4_1_0
   0694 8A            [ 3] 1258 	pulh
   0695 88            [ 3] 1259 	pulx
   0696 B6*07         [ 3] 1260 	lda	*(__print_format_sloc3_1_0 + 1)
   0698 BA*06         [ 3] 1261 	ora	*__print_format_sloc3_1_0
   069A 27 2A         [ 3] 1262 	beq	00217$
                           1263 ;../printf_large.c:844: lsd = !lsd;
   069C C6r00r1B      [ 4] 1264 	lda	__print_format_lsd_65536_75
   069F A8 01         [ 2] 1265 	eor	#0x01
   06A1 C7r00r1B      [ 4] 1266 	sta	__print_format_lsd_65536_75
                           1267 ;../printf_large.c:845: if (!lsd)
   06A4 C6r00r1B      [ 4] 1268 	lda	__print_format_lsd_65536_75
   06A7 26 0B         [ 3] 1269 	bne	00213$
                           1270 ;../printf_large.c:847: pstore++;
   06A9 AF 01         [ 2] 1271 	aix	#1
                           1272 ;../printf_large.c:848: value.byte[4] = *pstore >> 4;
   06AB F6            [ 3] 1273 	lda	,x
   06AC 62            [ 1] 1274 	nsa	
   06AD A4 0F         [ 2] 1275 	and	#0x0f
   06AF C7r00r09      [ 4] 1276 	sta	(_value + 0x0004)
   06B2 20 06         [ 3] 1277 	bra	00214$
   06B4                    1278 00213$:
                           1279 ;../printf_large.c:852: value.byte[4] = *pstore & 0x0F;
   06B4 F6            [ 3] 1280 	lda	,x
   06B5 A4 0F         [ 2] 1281 	and	#0x0f
   06B7 C7r00r09      [ 4] 1282 	sta	(_value + 0x0004)
   06BA                    1283 00214$:
                           1284 ;../printf_large.c:858: output_digit( value.byte[4] );
   06BA C6r00r09      [ 4] 1285 	lda	(_value + 0x0004)
   06BD 89            [ 2] 1286 	pshx
   06BE 8B            [ 2] 1287 	pshh
   06BF CDr00r22      [ 6] 1288 	jsr	_output_digit
   06C2 8A            [ 3] 1289 	pulh
   06C3 88            [ 3] 1290 	pulx
   06C4 20 C0         [ 3] 1291 	bra	00215$
   06C6                    1292 00217$:
                           1293 ;../printf_large.c:861: if (left_justify)
   06C6 C6r00r13      [ 4] 1294 	lda	__print_format_left_justify_65536_75
   06C9 26 03         [ 3] 1295 	bne	00694$
   06CB CCr00rBB      [ 4] 1296 	jmp	00231$
   06CE                    1297 00694$:
                           1298 ;../printf_large.c:863: while (width-- > 0)
   06CE 55*02         [ 4] 1299 	ldhx	*__print_format_sloc1_1_0
   06D0                    1300 00218$:
   06D0 35*0A         [ 4] 1301 	sthx	*__print_format_sloc4_1_0
   06D2 AF FF         [ 2] 1302 	aix	#-1
   06D4 B6*0B         [ 3] 1303 	lda	*(__print_format_sloc4_1_0 + 1)
   06D6 BA*0A         [ 3] 1304 	ora	*__print_format_sloc4_1_0
   06D8 26 03         [ 3] 1305 	bne	00695$
   06DA CCr00rBB      [ 4] 1306 	jmp	00231$
   06DD                    1307 00695$:
                           1308 ;../printf_large.c:865: OUTPUT_CHAR(' ', p);
   06DD 89            [ 2] 1309 	pshx
   06DE 8B            [ 2] 1310 	pshh
   06DF A6 20         [ 2] 1311 	lda	#0x20
   06E1 CDr00r00      [ 6] 1312 	jsr	__output_char
   06E4 8A            [ 3] 1313 	pulh
   06E5 88            [ 3] 1314 	pulx
   06E6 20 E8         [ 3] 1315 	bra	00218$
   06E8                    1316 00229$:
                           1317 ;../printf_large.c:873: OUTPUT_CHAR( c, p );
   06E8 9F            [ 1] 1318 	txa
   06E9 CDr00r00      [ 6] 1319 	jsr	__output_char
   06EC CCr00rBB      [ 4] 1320 	jmp	00231$
   06EF                    1321 00233$:
                           1322 ;../printf_large.c:877: return charsOutputted;
   06EF CEr00r0A      [ 4] 1323 	ldx	_charsOutputted
   06F2 C6r00r0B      [ 4] 1324 	lda	(_charsOutputted + 1)
                           1325 ;../printf_large.c:878: }
   06F5 81            [ 6] 1326 	rts
                           1327 	.area CSEG    (CODE)
                           1328 	.area CONST   (CODE)
                           1329 	.area CONST   (CODE)
   0000                    1330 ___str_0:
   0000 3C 4E 4F 20 46 4C  1331 	.ascii "<NO FLOAT>"
        4F 41 54 3E
   000A 00                 1332 	.db 0x00
                           1333 	.area CSEG    (CODE)
                           1334 	.area XINIT   (CODE)
                           1335 	.area CABS    (ABS,CODE)
