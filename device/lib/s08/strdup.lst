                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module strdup
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _malloc
                             24 	.globl _strlen
                             25 	.globl _strcpy
                             26 	.globl _strdup
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; absolute ram data
                             36 ;--------------------------------------------------------
                             37 	.area IABS    (ABS)
                             38 	.area IABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; initialized external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 _strdup_s_65536_61:
   0000                      52 	.ds 2
                             53 ;--------------------------------------------------------
                             54 ; global & static initialisations
                             55 ;--------------------------------------------------------
                             56 	.area HOME    (CODE)
                             57 	.area GSINIT  (CODE)
                             58 	.area GSFINAL (CODE)
                             59 	.area GSINIT  (CODE)
                             60 ;--------------------------------------------------------
                             61 ; Home
                             62 ;--------------------------------------------------------
                             63 	.area HOME    (CODE)
                             64 	.area HOME    (CODE)
                             65 ;--------------------------------------------------------
                             66 ; code
                             67 ;--------------------------------------------------------
                             68 	.area CSEG    (CODE)
                             69 ;------------------------------------------------------------
                             70 ;Allocation info for local variables in function 'strdup'
                             71 ;------------------------------------------------------------
                             72 ;s                         Allocated with name '_strdup_s_65536_61'
                             73 ;r                         Allocated to registers a x 
                             74 ;------------------------------------------------------------
                             75 ;../strdup.c:33: char *strdup (const char *s)
                             76 ;	-----------------------------------------
                             77 ;	 function strdup
                             78 ;	-----------------------------------------
                             79 ;	Register assignment is optimal.
                             80 ;	Stack space usage: 0 bytes.
   0000                      81 _strdup:
   0000 C7r00r01      [ 4]   82 	sta	(_strdup_s_65536_61 + 1)
   0003 CFr00r00      [ 4]   83 	stx	_strdup_s_65536_61
                             84 ;../strdup.c:35: char *r = malloc(strlen(s) + 1);
   0006 C6r00r01      [ 4]   85 	lda	(_strdup_s_65536_61 + 1)
   0009 CEr00r00      [ 4]   86 	ldx	_strdup_s_65536_61
   000C CDr00r00      [ 6]   87 	jsr	_strlen
   000F 4C            [ 1]   88 	inca
   0010 26 01         [ 3]   89 	bne	00110$
   0012 5C            [ 1]   90 	incx
   0013                      91 00110$:
   0013 CDr00r00      [ 6]   92 	jsr	_malloc
                             93 ;../strdup.c:36: if (r)
   0016 4D            [ 1]   94 	tsta
   0017 26 01         [ 3]   95 	bne	00111$
   0019 5D            [ 1]   96 	tstx
   001A                      97 00111$:
   001A 27 15         [ 3]   98 	beq	00102$
                             99 ;../strdup.c:37: strcpy(r, s);
   001C 87            [ 2]  100 	psha
   001D C6r00r00      [ 4]  101 	lda	_strdup_s_65536_61
   0020 C7r00r00      [ 4]  102 	sta	_strcpy_PARM_2
   0023 C6r00r01      [ 4]  103 	lda	(_strdup_s_65536_61 + 1)
   0026 C7r00r01      [ 4]  104 	sta	(_strcpy_PARM_2 + 1)
   0029 86            [ 3]  105 	pula
   002A 87            [ 2]  106 	psha
   002B 89            [ 2]  107 	pshx
   002C CDr00r00      [ 6]  108 	jsr	_strcpy
   002F 88            [ 3]  109 	pulx
   0030 86            [ 3]  110 	pula
   0031                     111 00102$:
                            112 ;../strdup.c:38: return (r);
                            113 ;../strdup.c:39: }
   0031 81            [ 6]  114 	rts
                            115 	.area CSEG    (CODE)
                            116 	.area CONST   (CODE)
                            117 	.area XINIT   (CODE)
                            118 	.area CABS    (ABS,CODE)
