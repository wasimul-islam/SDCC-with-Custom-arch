                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _memchr
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _memchr_PARM_3
                             24 	.globl _memchr_PARM_2
                             25 	.globl _memchr
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _memchr_sloc0_1_0:
   0000                      35 	.ds 1
                             36 ;--------------------------------------------------------
                             37 ; absolute ram data
                             38 ;--------------------------------------------------------
                             39 	.area IABS    (ABS)
                             40 	.area IABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area XABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; initialized external ram data
                             47 ;--------------------------------------------------------
                             48 	.area XISEG
                             49 ;--------------------------------------------------------
                             50 ; extended address mode data
                             51 ;--------------------------------------------------------
                             52 	.area XSEG
   0000                      53 _memchr_PARM_2:
   0000                      54 	.ds 2
   0002                      55 _memchr_PARM_3:
   0002                      56 	.ds 2
   0004                      57 _memchr_p_65536_27:
   0004                      58 	.ds 2
   0006                      59 _memchr_end_65536_27:
   0006                      60 	.ds 2
                             61 ;--------------------------------------------------------
                             62 ; global & static initialisations
                             63 ;--------------------------------------------------------
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT  (CODE)
                             66 	.area GSFINAL (CODE)
                             67 	.area GSINIT  (CODE)
                             68 ;--------------------------------------------------------
                             69 ; Home
                             70 ;--------------------------------------------------------
                             71 	.area HOME    (CODE)
                             72 	.area HOME    (CODE)
                             73 ;--------------------------------------------------------
                             74 ; code
                             75 ;--------------------------------------------------------
                             76 	.area CSEG    (CODE)
                             77 ;------------------------------------------------------------
                             78 ;Allocation info for local variables in function 'memchr'
                             79 ;------------------------------------------------------------
                             80 ;c                         Allocated with name '_memchr_PARM_2'
                             81 ;n                         Allocated with name '_memchr_PARM_3'
                             82 ;s                         Allocated to registers a x 
                             83 ;p                         Allocated with name '_memchr_p_65536_27'
                             84 ;end                       Allocated with name '_memchr_end_65536_27'
                             85 ;sloc0                     Allocated with name '_memchr_sloc0_1_0'
                             86 ;------------------------------------------------------------
                             87 ;../_memchr.c:31: void *memchr(const void *s, int c, size_t n)
                             88 ;	-----------------------------------------
                             89 ;	 function memchr
                             90 ;	-----------------------------------------
                             91 ;	Register assignment is optimal.
                             92 ;	Stack space usage: 0 bytes.
   0000                      93 _memchr:
                             94 ;../_memchr.c:33: unsigned char *p = (unsigned char *)s;
   0000 C7r00r05      [ 4]   95 	sta	(_memchr_p_65536_27 + 1)
   0003 CFr00r04      [ 4]   96 	stx	_memchr_p_65536_27
                             97 ;../_memchr.c:34: unsigned char *end = p + n;
   0006 45r00r06      [ 3]   98 	ldhx	#_memchr_end_65536_27
   0009 C6r00r05      [ 4]   99 	lda	(_memchr_p_65536_27 + 1)
   000C CBr00r03      [ 4]  100 	add	(_memchr_PARM_3 + 1)
   000F E7 01         [ 3]  101 	sta	1,x
   0011 C6r00r04      [ 4]  102 	lda	_memchr_p_65536_27
   0014 C9r00r02      [ 4]  103 	adc	_memchr_PARM_3
   0017 F7            [ 2]  104 	sta	,x
                            105 ;../_memchr.c:38: return(0);
   0018 32r00r04      [ 5]  106 	ldhx	_memchr_p_65536_27
   001B                     107 00105$:
                            108 ;../_memchr.c:35: for(; p != end; p++)
   001B C3r00r07      [ 4]  109 	cpx	(_memchr_end_65536_27 + 1)
   001E 26 07         [ 3]  110 	bne	00124$
   0020 8B            [ 2]  111 	pshh
   0021 86            [ 3]  112 	pula
   0022 C1r00r06      [ 4]  113 	cmp	_memchr_end_65536_27
   0025 27 18         [ 3]  114 	beq	00103$
   0027                     115 00124$:
                            116 ;../_memchr.c:36: if(*p == (unsigned char)c)
   0027 F6            [ 3]  117 	lda	,x
   0028 B7*00         [ 3]  118 	sta	*_memchr_sloc0_1_0
   002A C6r00r01      [ 4]  119 	lda	(_memchr_PARM_2 + 1)
   002D B1*00         [ 3]  120 	cmp	*_memchr_sloc0_1_0
   002F 26 07         [ 3]  121 	bne	00106$
                            122 ;../_memchr.c:37: return((void *)p);
   0031 C6r00r05      [ 4]  123 	lda	(_memchr_p_65536_27 + 1)
   0034 CEr00r04      [ 4]  124 	ldx	_memchr_p_65536_27
   0037 81            [ 6]  125 	rts
   0038                     126 00106$:
                            127 ;../_memchr.c:35: for(; p != end; p++)
   0038 AF 01         [ 2]  128 	aix	#1
   003A 96r00r04      [ 5]  129 	sthx	_memchr_p_65536_27
   003D 20 DC         [ 3]  130 	bra	00105$
   003F                     131 00103$:
                            132 ;../_memchr.c:38: return(0);
   003F 4F            [ 1]  133 	clra
   0040 97            [ 1]  134 	tax
                            135 ;../_memchr.c:39: }
   0041 81            [ 6]  136 	rts
                            137 	.area CSEG    (CODE)
                            138 	.area CONST   (CODE)
                            139 	.area XINIT   (CODE)
                            140 	.area CABS    (ABS,CODE)
