                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module __assert
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl ___assert
                             24 	.globl _printf
                             25 	.globl ___assert_PARM_4
                             26 	.globl ___assert_PARM_3
                             27 	.globl ___assert_PARM_2
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (PAG)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in ram
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; absolute ram data
                             37 ;--------------------------------------------------------
                             38 	.area IABS    (ABS)
                             39 	.area IABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area XABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; initialized external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XISEG
                             48 ;--------------------------------------------------------
                             49 ; extended address mode data
                             50 ;--------------------------------------------------------
                             51 	.area XSEG
   0000                      52 ___assert_PARM_2:
   0000                      53 	.ds 2
   0002                      54 ___assert_PARM_3:
   0002                      55 	.ds 2
   0004                      56 ___assert_PARM_4:
   0004                      57 	.ds 2
                             58 ;--------------------------------------------------------
                             59 ; global & static initialisations
                             60 ;--------------------------------------------------------
                             61 	.area HOME    (CODE)
                             62 	.area GSINIT  (CODE)
                             63 	.area GSFINAL (CODE)
                             64 	.area GSINIT  (CODE)
                             65 ;--------------------------------------------------------
                             66 ; Home
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area HOME    (CODE)
                             70 ;--------------------------------------------------------
                             71 ; code
                             72 ;--------------------------------------------------------
                             73 	.area CSEG    (CODE)
                             74 ;------------------------------------------------------------
                             75 ;Allocation info for local variables in function '__assert'
                             76 ;------------------------------------------------------------
                             77 ;functionname              Allocated with name '___assert_PARM_2'
                             78 ;filename                  Allocated with name '___assert_PARM_3'
                             79 ;linenumber                Allocated with name '___assert_PARM_4'
                             80 ;expression                Allocated to registers x h 
                             81 ;------------------------------------------------------------
                             82 ;../__assert.c:32: void __assert(const char *expression, const char *functionname, const char *filename, unsigned int linenumber)
                             83 ;	-----------------------------------------
                             84 ;	 function __assert
                             85 ;	-----------------------------------------
                             86 ;	Register assignment is optimal.
                             87 ;	Stack space usage: 0 bytes.
   0000                      88 ___assert:
   0000 89            [ 2]   89 	pshx
   0001 97            [ 1]   90 	tax
   0002 8A            [ 3]   91 	pulh
                             92 ;../__assert.c:34: printf("Assert(%s) failed in function %s at line %u in file %s.\n",
   0003 C6r00r03      [ 4]   93 	lda	(___assert_PARM_3 + 1)
   0006 87            [ 2]   94 	psha
   0007 C6r00r02      [ 4]   95 	lda	___assert_PARM_3
   000A 87            [ 2]   96 	psha
   000B C6r00r05      [ 4]   97 	lda	(___assert_PARM_4 + 1)
   000E 87            [ 2]   98 	psha
   000F C6r00r04      [ 4]   99 	lda	___assert_PARM_4
   0012 87            [ 2]  100 	psha
   0013 C6r00r01      [ 4]  101 	lda	(___assert_PARM_2 + 1)
   0016 87            [ 2]  102 	psha
   0017 C6r00r00      [ 4]  103 	lda	___assert_PARM_2
   001A 87            [ 2]  104 	psha
   001B 89            [ 2]  105 	pshx
   001C 8B            [ 2]  106 	pshh
   001D A6r00         [ 2]  107 	lda	#___str_0
   001F 87            [ 2]  108 	psha
   0020 A6s00         [ 2]  109 	lda	#>___str_0
   0022 87            [ 2]  110 	psha
   0023 CDr00r00      [ 6]  111 	jsr	_printf
   0026 A7 0A         [ 2]  112 	ais	#10
   0028                     113 00103$:
   0028 20 FE         [ 3]  114 	bra	00103$
                            115 ;../__assert.c:37: }
   002A 81            [ 6]  116 	rts
                            117 	.area CSEG    (CODE)
                            118 	.area CONST   (CODE)
                            119 	.area CONST   (CODE)
   0000                     120 ___str_0:
   0000 41 73 73 65 72 74   121 	.ascii "Assert(%s) failed in function %s at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        69 6E 20 66 75 6E
        63 74 69 6F 6E 20
        25 73 20 61 74 20
        6C 69 6E 65 20 25
        75 20 69 6E 20 66
        69 6C 65 20 25 73
        2E
   0037 0A                  122 	.db 0x0a
   0038 00                  123 	.db 0x00
                            124 	.area CSEG    (CODE)
                            125 	.area XINIT   (CODE)
                            126 	.area CABS    (ABS,CODE)
