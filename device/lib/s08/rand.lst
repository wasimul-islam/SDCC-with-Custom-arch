                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module rand
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _rand
                             24 	.globl _srand
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _rand_t_65536_37:
   0000                      34 	.ds 4
   0004                      35 _rand_sloc0_1_0:
   0004                      36 	.ds 4
   0008                      37 _rand_sloc1_1_0:
   0008                      38 	.ds 4
                             39 	.area	OSEG    (PAG, OVR)
   0000                      40 _srand_sloc0_1_0:
   0000                      41 	.ds 4
                             42 ;--------------------------------------------------------
                             43 ; absolute ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS)
                             46 	.area IABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; initialized external ram data
                             53 ;--------------------------------------------------------
                             54 	.area XISEG
   0000                      55 _s:
   0000                      56 	.ds 4
                             57 ;--------------------------------------------------------
                             58 ; extended address mode data
                             59 ;--------------------------------------------------------
                             60 	.area XSEG
                             61 ;--------------------------------------------------------
                             62 ; global & static initialisations
                             63 ;--------------------------------------------------------
                             64 	.area HOME    (CODE)
                             65 	.area GSINIT  (CODE)
                             66 	.area GSFINAL (CODE)
                             67 	.area GSINIT  (CODE)
                             68 ;--------------------------------------------------------
                             69 ; Home
                             70 ;--------------------------------------------------------
                             71 	.area HOME    (CODE)
                             72 	.area HOME    (CODE)
                             73 ;--------------------------------------------------------
                             74 ; code
                             75 ;--------------------------------------------------------
                             76 	.area CSEG    (CODE)
                             77 ;------------------------------------------------------------
                             78 ;Allocation info for local variables in function 'rand'
                             79 ;------------------------------------------------------------
                             80 ;t                         Allocated with name '_rand_t_65536_37'
                             81 ;sloc0                     Allocated with name '_rand_sloc0_1_0'
                             82 ;sloc1                     Allocated with name '_rand_sloc1_1_0'
                             83 ;------------------------------------------------------------
                             84 ;../rand.c:40: int rand(void)
                             85 ;	-----------------------------------------
                             86 ;	 function rand
                             87 ;	-----------------------------------------
                             88 ;	Register assignment is optimal.
                             89 ;	Stack space usage: 0 bytes.
   0000                      90 _rand:
                             91 ;../rand.c:44: t ^= t >> 10;
   0000 C6r00r02      [ 4]   92 	lda	(_s + 2)
   0003 CEr00r01      [ 4]   93 	ldx	(_s + 1)
   0006 54            [ 1]   94 	lsrx
   0007 46            [ 1]   95 	rora
   0008 54            [ 1]   96 	lsrx
   0009 46            [ 1]   97 	rora
   000A B7*07         [ 3]   98 	sta	*(_rand_sloc0_1_0 + 3)
   000C BF*06         [ 3]   99 	stx	*(_rand_sloc0_1_0 + 2)
   000E CEr00r00      [ 4]  100 	ldx	_s
   0011 4F            [ 1]  101 	clra
   0012 54            [ 1]  102 	lsrx
   0013 46            [ 1]  103 	rora
   0014 54            [ 1]  104 	lsrx
   0015 46            [ 1]  105 	rora
   0016 BA*06         [ 3]  106 	ora	*(_rand_sloc0_1_0 + 2)
   0018 B7*06         [ 3]  107 	sta	*(_rand_sloc0_1_0 + 2)
   001A BF*05         [ 3]  108 	stx	*(_rand_sloc0_1_0 + 1)
   001C 6E 00*04      [ 4]  109 	mov	#0x00,*_rand_sloc0_1_0
   001F C6r00r03      [ 4]  110 	lda	(_s + 3)
   0022 B8*07         [ 3]  111 	eor	*(_rand_sloc0_1_0 + 3)
   0024 B7*07         [ 3]  112 	sta	*(_rand_sloc0_1_0 + 3)
   0026 C6r00r02      [ 4]  113 	lda	(_s + 2)
   0029 B8*06         [ 3]  114 	eor	*(_rand_sloc0_1_0 + 2)
   002B B7*06         [ 3]  115 	sta	*(_rand_sloc0_1_0 + 2)
   002D C6r00r01      [ 4]  116 	lda	(_s + 1)
   0030 B8*05         [ 3]  117 	eor	*(_rand_sloc0_1_0 + 1)
   0032 B7*05         [ 3]  118 	sta	*(_rand_sloc0_1_0 + 1)
   0034 C6r00r00      [ 4]  119 	lda	_s
   0037 B8*04         [ 3]  120 	eor	*_rand_sloc0_1_0
   0039 B7*04         [ 3]  121 	sta	*_rand_sloc0_1_0
                            122 ;../rand.c:45: t ^= t << 9;
   003B B6*07         [ 3]  123 	lda	*(_rand_sloc0_1_0 + 3)
   003D BE*06         [ 3]  124 	ldx	*(_rand_sloc0_1_0 + 2)
   003F 48            [ 1]  125 	lsla
   0040 59            [ 1]  126 	rolx
   0041 B7*0A         [ 3]  127 	sta	*(_rand_sloc1_1_0 + 2)
   0043 B6*05         [ 3]  128 	lda	*(_rand_sloc0_1_0 + 1)
   0045 BF*09         [ 3]  129 	stx	*(_rand_sloc1_1_0 + 1)
   0047 49            [ 1]  130 	rola
   0048 B7*08         [ 3]  131 	sta	*_rand_sloc1_1_0
   004A 6E 00*0B      [ 4]  132 	mov	#0x00,*(_rand_sloc1_1_0 + 3)
   004D B6*07         [ 3]  133 	lda	*(_rand_sloc0_1_0 + 3)
   004F B8*0B         [ 3]  134 	eor	*(_rand_sloc1_1_0 + 3)
   0051 B7*0B         [ 3]  135 	sta	*(_rand_sloc1_1_0 + 3)
   0053 B6*06         [ 3]  136 	lda	*(_rand_sloc0_1_0 + 2)
   0055 B8*0A         [ 3]  137 	eor	*(_rand_sloc1_1_0 + 2)
   0057 B7*0A         [ 3]  138 	sta	*(_rand_sloc1_1_0 + 2)
   0059 B6*05         [ 3]  139 	lda	*(_rand_sloc0_1_0 + 1)
   005B B8*09         [ 3]  140 	eor	*(_rand_sloc1_1_0 + 1)
   005D B7*09         [ 3]  141 	sta	*(_rand_sloc1_1_0 + 1)
   005F B6*04         [ 3]  142 	lda	*_rand_sloc0_1_0
   0061 B8*08         [ 3]  143 	eor	*_rand_sloc1_1_0
   0063 B7*08         [ 3]  144 	sta	*_rand_sloc1_1_0
                            145 ;../rand.c:46: t ^= t >> 25;
   0065 B6*08         [ 3]  146 	lda	*_rand_sloc1_1_0
   0067 44            [ 1]  147 	lsra	
   0068 B7*07         [ 3]  148 	sta	*(_rand_sloc0_1_0 + 3)
   006A 6E 00*06      [ 4]  149 	mov	#0x00,*(_rand_sloc0_1_0 + 2)
   006D 6E 00*05      [ 4]  150 	mov	#0x00,*(_rand_sloc0_1_0 + 1)
   0070 6E 00*04      [ 4]  151 	mov	#0x00,*_rand_sloc0_1_0
   0073 B6*0B         [ 3]  152 	lda	*(_rand_sloc1_1_0 + 3)
   0075 B8*07         [ 3]  153 	eor	*(_rand_sloc0_1_0 + 3)
   0077 B7*0B         [ 3]  154 	sta	*(_rand_sloc1_1_0 + 3)
   0079 B6*0A         [ 3]  155 	lda	*(_rand_sloc1_1_0 + 2)
   007B B8*06         [ 3]  156 	eor	*(_rand_sloc0_1_0 + 2)
   007D B7*0A         [ 3]  157 	sta	*(_rand_sloc1_1_0 + 2)
   007F B6*09         [ 3]  158 	lda	*(_rand_sloc1_1_0 + 1)
   0081 B8*05         [ 3]  159 	eor	*(_rand_sloc0_1_0 + 1)
   0083 B7*09         [ 3]  160 	sta	*(_rand_sloc1_1_0 + 1)
   0085 B6*08         [ 3]  161 	lda	*_rand_sloc1_1_0
   0087 B8*04         [ 3]  162 	eor	*_rand_sloc0_1_0
   0089 B7*08         [ 3]  163 	sta	*_rand_sloc1_1_0
   008B 4E*08*00      [ 6]  164 	mov	*_rand_sloc1_1_0,*_rand_t_65536_37
   008E 4E*09*01      [ 6]  165 	mov	*(_rand_sloc1_1_0 + 1),*(_rand_t_65536_37 + 1)
   0091 4E*0A*02      [ 6]  166 	mov	*(_rand_sloc1_1_0 + 2),*(_rand_t_65536_37 + 2)
   0094 4E*0B*03      [ 6]  167 	mov	*(_rand_sloc1_1_0 + 3),*(_rand_t_65536_37 + 3)
                            168 ;../rand.c:48: s = t;
   0097 B6*08         [ 3]  169 	lda	*_rand_sloc1_1_0
   0099 C7r00r00      [ 4]  170 	sta	_s
   009C B6*09         [ 3]  171 	lda	*(_rand_sloc1_1_0 + 1)
   009E C7r00r01      [ 4]  172 	sta	(_s + 1)
   00A1 B6*0A         [ 3]  173 	lda	*(_rand_sloc1_1_0 + 2)
   00A3 C7r00r02      [ 4]  174 	sta	(_s + 2)
   00A6 B6*0B         [ 3]  175 	lda	*(_rand_sloc1_1_0 + 3)
   00A8 C7r00r03      [ 4]  176 	sta	(_s + 3)
                            177 ;../rand.c:50: return(t & RAND_MAX);
   00AB B6*03         [ 3]  178 	lda	*(_rand_t_65536_37 + 3)
   00AD BE*02         [ 3]  179 	ldx	*(_rand_t_65536_37 + 2)
   00AF 87            [ 2]  180 	psha
   00B0 9F            [ 1]  181 	txa
   00B1 A4 7F         [ 2]  182 	and	#0x7f
   00B3 97            [ 1]  183 	tax
   00B4 86            [ 3]  184 	pula
                            185 ;../rand.c:51: }
   00B5 81            [ 6]  186 	rts
                            187 ;------------------------------------------------------------
                            188 ;Allocation info for local variables in function 'srand'
                            189 ;------------------------------------------------------------
                            190 ;seed                      Allocated to registers a x 
                            191 ;sloc0                     Allocated with name '_srand_sloc0_1_0'
                            192 ;------------------------------------------------------------
                            193 ;../rand.c:53: void srand(unsigned int seed)
                            194 ;	-----------------------------------------
                            195 ;	 function srand
                            196 ;	-----------------------------------------
                            197 ;	Register assignment is optimal.
                            198 ;	Stack space usage: 0 bytes.
   00B6                     199 _srand:
                            200 ;../rand.c:55: s = seed | 0x80000000; /* s shall not become 0 */
   00B6 B7*03         [ 3]  201 	sta	*(_srand_sloc0_1_0 + 3)
   00B8 BF*02         [ 3]  202 	stx	*(_srand_sloc0_1_0 + 2)
   00BA 6E 00*01      [ 4]  203 	mov	#0x00,*(_srand_sloc0_1_0 + 1)
   00BD 6E 00*00      [ 4]  204 	mov	#0x00,*_srand_sloc0_1_0
   00C0 B6*03         [ 3]  205 	lda	*(_srand_sloc0_1_0 + 3)
   00C2 C7r00r03      [ 4]  206 	sta	(_s + 3)
   00C5 B6*02         [ 3]  207 	lda	*(_srand_sloc0_1_0 + 2)
   00C7 C7r00r02      [ 4]  208 	sta	(_s + 2)
   00CA B6*01         [ 3]  209 	lda	*(_srand_sloc0_1_0 + 1)
   00CC C7r00r01      [ 4]  210 	sta	(_s + 1)
   00CF B6*00         [ 3]  211 	lda	*_srand_sloc0_1_0
   00D1 AA 80         [ 2]  212 	ora	#0x80
   00D3 C7r00r00      [ 4]  213 	sta	_s
                            214 ;../rand.c:56: }
   00D6 81            [ 6]  215 	rts
                            216 	.area CSEG    (CODE)
                            217 	.area CONST   (CODE)
                            218 	.area XINIT   (CODE)
   0000                     219 __xinit__s:
   0000 80 00 00 01         220 	.byte #0x80, #0x00, #0x00, #0x01	; 2147483649
                            221 	.area CABS    (ABS,CODE)
