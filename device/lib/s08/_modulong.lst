                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _modulong
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl __modulong_PARM_2
                             24 	.globl __modulong_PARM_1
                             25 	.globl __modulong
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; absolute ram data
                             35 ;--------------------------------------------------------
                             36 	.area IABS    (ABS)
                             37 	.area IABS    (ABS)
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area XABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; initialized external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XISEG
                             46 ;--------------------------------------------------------
                             47 ; extended address mode data
                             48 ;--------------------------------------------------------
                             49 	.area XSEG
   0000                      50 __modulong_PARM_1:
   0000                      51 	.ds 4
   0004                      52 __modulong_PARM_2:
   0004                      53 	.ds 4
                             54 ;--------------------------------------------------------
                             55 ; global & static initialisations
                             56 ;--------------------------------------------------------
                             57 	.area HOME    (CODE)
                             58 	.area GSINIT  (CODE)
                             59 	.area GSFINAL (CODE)
                             60 	.area GSINIT  (CODE)
                             61 ;--------------------------------------------------------
                             62 ; Home
                             63 ;--------------------------------------------------------
                             64 	.area HOME    (CODE)
                             65 	.area HOME    (CODE)
                             66 ;--------------------------------------------------------
                             67 ; code
                             68 ;--------------------------------------------------------
                             69 	.area CSEG    (CODE)
                             70 ;------------------------------------------------------------
                             71 ;Allocation info for local variables in function '_modulong'
                             72 ;------------------------------------------------------------
                             73 ;a                         Allocated with name '__modulong_PARM_1'
                             74 ;b                         Allocated with name '__modulong_PARM_2'
                             75 ;count                     Allocated to registers h 
                             76 ;------------------------------------------------------------
                             77 ;../_modulong.c:346: _modulong (unsigned long a, unsigned long b) __SDCC_NONBANKED
                             78 ;	-----------------------------------------
                             79 ;	 function _modulong
                             80 ;	-----------------------------------------
                             81 ;	Register assignment is optimal.
                             82 ;	Stack space usage: 0 bytes.
   0000                      83 __modulong:
                             84 ;../_modulong.c:348: unsigned char count = 0;
   0000 8C            [ 1]   85 	clrh
                             86 ;../_modulong.c:350: while (!MSB_SET(b))
   0001 5F            [ 1]   87 	clrx
   0002                      88 00103$:
   0002 C6r00r04      [ 4]   89 	lda	__modulong_PARM_2
   0005 49            [ 1]   90 	rola
   0006 4F            [ 1]   91 	clra
   0007 49            [ 1]   92 	rola
   0008 4D            [ 1]   93 	tsta
   0009 26 5C         [ 3]   94 	bne	00117$
                             95 ;../_modulong.c:352: b <<= 1;
   000B 89            [ 2]   96 	pshx
   000C C6r00r07      [ 4]   97 	lda	(__modulong_PARM_2 + 3)
   000F CEr00r06      [ 4]   98 	ldx	(__modulong_PARM_2 + 2)
   0012 48            [ 1]   99 	lsla
   0013 59            [ 1]  100 	rolx
   0014 C7r00r07      [ 4]  101 	sta	(__modulong_PARM_2 + 3)
   0017 CFr00r06      [ 4]  102 	stx	(__modulong_PARM_2 + 2)
   001A C6r00r05      [ 4]  103 	lda	(__modulong_PARM_2 + 1)
   001D CEr00r04      [ 4]  104 	ldx	__modulong_PARM_2
   0020 49            [ 1]  105 	rola
   0021 59            [ 1]  106 	rolx
   0022 C7r00r05      [ 4]  107 	sta	(__modulong_PARM_2 + 1)
   0025 CFr00r04      [ 4]  108 	stx	__modulong_PARM_2
   0028 88            [ 3]  109 	pulx
                            110 ;../_modulong.c:353: if (b > a)
   0029 C6r00r03      [ 4]  111 	lda	(__modulong_PARM_1 + 3)
   002C C0r00r07      [ 4]  112 	sub	(__modulong_PARM_2 + 3)
   002F C6r00r02      [ 4]  113 	lda	(__modulong_PARM_1 + 2)
   0032 C2r00r06      [ 4]  114 	sbc	(__modulong_PARM_2 + 2)
   0035 C6r00r01      [ 4]  115 	lda	(__modulong_PARM_1 + 1)
   0038 C2r00r05      [ 4]  116 	sbc	(__modulong_PARM_2 + 1)
   003B C6r00r00      [ 4]  117 	lda	__modulong_PARM_1
   003E C2r00r04      [ 4]  118 	sbc	__modulong_PARM_2
   0041 24 1E         [ 3]  119 	bcc	00102$
                            120 ;../_modulong.c:355: b >>=1;
   0043 C6r00r05      [ 4]  121 	lda	(__modulong_PARM_2 + 1)
   0046 CEr00r04      [ 4]  122 	ldx	__modulong_PARM_2
   0049 54            [ 1]  123 	lsrx
   004A 46            [ 1]  124 	rora
   004B C7r00r05      [ 4]  125 	sta	(__modulong_PARM_2 + 1)
   004E CFr00r04      [ 4]  126 	stx	__modulong_PARM_2
   0051 C6r00r07      [ 4]  127 	lda	(__modulong_PARM_2 + 3)
   0054 CEr00r06      [ 4]  128 	ldx	(__modulong_PARM_2 + 2)
   0057 56            [ 1]  129 	rorx
   0058 46            [ 1]  130 	rora
   0059 C7r00r07      [ 4]  131 	sta	(__modulong_PARM_2 + 3)
   005C CFr00r06      [ 4]  132 	stx	(__modulong_PARM_2 + 2)
                            133 ;../_modulong.c:356: break;
   005F 20 06         [ 3]  134 	bra	00117$
   0061                     135 00102$:
                            136 ;../_modulong.c:358: count++;
   0061 AF 01         [ 2]  137 	aix	#1
   0063 89            [ 2]  138 	pshx
   0064 8A            [ 3]  139 	pulh
   0065 20 9B         [ 3]  140 	bra	00103$
                            141 ;../_modulong.c:360: do
   0067                     142 00117$:
   0067 8B            [ 2]  143 	pshh
   0068 88            [ 3]  144 	pulx
   0069                     145 00108$:
                            146 ;../_modulong.c:362: if (a >= b)
   0069 C6r00r03      [ 4]  147 	lda	(__modulong_PARM_1 + 3)
   006C C0r00r07      [ 4]  148 	sub	(__modulong_PARM_2 + 3)
   006F C6r00r02      [ 4]  149 	lda	(__modulong_PARM_1 + 2)
   0072 C2r00r06      [ 4]  150 	sbc	(__modulong_PARM_2 + 2)
   0075 C6r00r01      [ 4]  151 	lda	(__modulong_PARM_1 + 1)
   0078 C2r00r05      [ 4]  152 	sbc	(__modulong_PARM_2 + 1)
   007B C6r00r00      [ 4]  153 	lda	__modulong_PARM_1
   007E C2r00r04      [ 4]  154 	sbc	__modulong_PARM_2
   0081 25 24         [ 3]  155 	bcs	00107$
                            156 ;../_modulong.c:363: a -= b;
   0083 C6r00r03      [ 4]  157 	lda	(__modulong_PARM_1 + 3)
   0086 C0r00r07      [ 4]  158 	sub	(__modulong_PARM_2 + 3)
   0089 C7r00r03      [ 4]  159 	sta	(__modulong_PARM_1 + 3)
   008C C6r00r02      [ 4]  160 	lda	(__modulong_PARM_1 + 2)
   008F C2r00r06      [ 4]  161 	sbc	(__modulong_PARM_2 + 2)
   0092 C7r00r02      [ 4]  162 	sta	(__modulong_PARM_1 + 2)
   0095 C6r00r01      [ 4]  163 	lda	(__modulong_PARM_1 + 1)
   0098 C2r00r05      [ 4]  164 	sbc	(__modulong_PARM_2 + 1)
   009B C7r00r01      [ 4]  165 	sta	(__modulong_PARM_1 + 1)
   009E C6r00r00      [ 4]  166 	lda	__modulong_PARM_1
   00A1 C2r00r04      [ 4]  167 	sbc	__modulong_PARM_2
   00A4 C7r00r00      [ 4]  168 	sta	__modulong_PARM_1
   00A7                     169 00107$:
                            170 ;../_modulong.c:364: b >>= 1;
   00A7 89            [ 2]  171 	pshx
   00A8 C6r00r05      [ 4]  172 	lda	(__modulong_PARM_2 + 1)
   00AB CEr00r04      [ 4]  173 	ldx	__modulong_PARM_2
   00AE 54            [ 1]  174 	lsrx
   00AF 46            [ 1]  175 	rora
   00B0 C7r00r05      [ 4]  176 	sta	(__modulong_PARM_2 + 1)
   00B3 CFr00r04      [ 4]  177 	stx	__modulong_PARM_2
   00B6 C6r00r07      [ 4]  178 	lda	(__modulong_PARM_2 + 3)
   00B9 CEr00r06      [ 4]  179 	ldx	(__modulong_PARM_2 + 2)
   00BC 56            [ 1]  180 	rorx
   00BD 46            [ 1]  181 	rora
   00BE C7r00r07      [ 4]  182 	sta	(__modulong_PARM_2 + 3)
   00C1 CFr00r06      [ 4]  183 	stx	(__modulong_PARM_2 + 2)
   00C4 88            [ 3]  184 	pulx
                            185 ;../_modulong.c:366: while (count--);
   00C5 9F            [ 1]  186 	txa
   00C6 5A            [ 1]  187 	decx
   00C7 4D            [ 1]  188 	tsta
   00C8 26 9F         [ 3]  189 	bne	00108$
                            190 ;../_modulong.c:368: return a;
   00CA C6r00r00      [ 4]  191 	lda	__modulong_PARM_1
   00CD B7*00         [ 3]  192 	sta	*___SDCC_hc08_ret3
   00CF C6r00r01      [ 4]  193 	lda	(__modulong_PARM_1 + 1)
   00D2 B7*00         [ 3]  194 	sta	*___SDCC_hc08_ret2
   00D4 CEr00r02      [ 4]  195 	ldx	(__modulong_PARM_1 + 2)
   00D7 C6r00r03      [ 4]  196 	lda	(__modulong_PARM_1 + 3)
                            197 ;../_modulong.c:369: }
   00DA 81            [ 6]  198 	rts
                            199 	.area CSEG    (CODE)
                            200 	.area CONST   (CODE)
                            201 	.area XINIT   (CODE)
                            202 	.area CABS    (ABS,CODE)
