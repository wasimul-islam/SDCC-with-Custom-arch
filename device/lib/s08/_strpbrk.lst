                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _strpbrk
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strchr
                             24 	.globl _strpbrk_PARM_2
                             25 	.globl _strpbrk
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
   0000                      30 _strpbrk_sloc0_1_0:
   0000                      31 	.ds 2
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in ram
                             34 ;--------------------------------------------------------
                             35 ;--------------------------------------------------------
                             36 ; absolute ram data
                             37 ;--------------------------------------------------------
                             38 	.area IABS    (ABS)
                             39 	.area IABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area XABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; initialized external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XISEG
                             48 ;--------------------------------------------------------
                             49 ; extended address mode data
                             50 ;--------------------------------------------------------
                             51 	.area XSEG
   0000                      52 _strpbrk_PARM_2:
   0000                      53 	.ds 2
   0002                      54 _strpbrk_string_65536_26:
   0002                      55 	.ds 2
   0004                      56 _strpbrk_ret_65536_27:
   0004                      57 	.ds 2
                             58 ;--------------------------------------------------------
                             59 ; global & static initialisations
                             60 ;--------------------------------------------------------
                             61 	.area HOME    (CODE)
                             62 	.area GSINIT  (CODE)
                             63 	.area GSFINAL (CODE)
                             64 	.area GSINIT  (CODE)
                             65 ;--------------------------------------------------------
                             66 ; Home
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area HOME    (CODE)
                             70 ;--------------------------------------------------------
                             71 ; code
                             72 ;--------------------------------------------------------
                             73 	.area CSEG    (CODE)
                             74 ;------------------------------------------------------------
                             75 ;Allocation info for local variables in function 'strpbrk'
                             76 ;------------------------------------------------------------
                             77 ;ch                        Allocated to registers x 
                             78 ;sloc0                     Allocated with name '_strpbrk_sloc0_1_0'
                             79 ;control                   Allocated with name '_strpbrk_PARM_2'
                             80 ;string                    Allocated with name '_strpbrk_string_65536_26'
                             81 ;ret                       Allocated with name '_strpbrk_ret_65536_27'
                             82 ;p                         Allocated to registers x h 
                             83 ;------------------------------------------------------------
                             84 ;../_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                             85 ;	-----------------------------------------
                             86 ;	 function strpbrk
                             87 ;	-----------------------------------------
                             88 ;	Register assignment is optimal.
                             89 ;	Stack space usage: 0 bytes.
   0000                      90 _strpbrk:
   0000 C7r00r03      [ 4]   91 	sta	(_strpbrk_string_65536_26 + 1)
   0003 CFr00r02      [ 4]   92 	stx	_strpbrk_string_65536_26
                             93 ;../_strpbrk.c:33: char *ret = NULL;
   0006 8C            [ 1]   94 	clrh
   0007 5F            [ 1]   95 	clrx
   0008 96r00r04      [ 5]   96 	sthx	_strpbrk_ret_65536_27
                             97 ;../_strpbrk.c:36: while (ch = *control) {
   000B 32r00r00      [ 5]   98 	ldhx	_strpbrk_PARM_2
   000E 35*00         [ 4]   99 	sthx	*_strpbrk_sloc0_1_0
   0010                     100 00105$:
   0010 55*00         [ 4]  101 	ldhx	*_strpbrk_sloc0_1_0
   0012 F6            [ 3]  102 	lda	,x
   0013 97            [ 1]  103 	tax
   0014 4D            [ 1]  104 	tsta
   0015 27 31         [ 3]  105 	beq	00107$
                            106 ;../_strpbrk.c:37: char * p = strchr(string, ch);
   0017 CFr00r01      [ 4]  107 	stx	(_strchr_PARM_2 + 1)
   001A 4F            [ 1]  108 	clra
   001B C7r00r00      [ 4]  109 	sta	_strchr_PARM_2
   001E C6r00r03      [ 4]  110 	lda	(_strpbrk_string_65536_26 + 1)
   0021 CEr00r02      [ 4]  111 	ldx	_strpbrk_string_65536_26
   0024 CDr00r00      [ 6]  112 	jsr	_strchr
   0027 87            [ 2]  113 	psha
   0028 89            [ 2]  114 	pshx
   0029 8A            [ 3]  115 	pulh
   002A 88            [ 3]  116 	pulx
                            117 ;../_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
   002B 65 00 00      [ 3]  118 	cphx	#0x00
   002E 27 10         [ 3]  119 	beq	00102$
   0030 C6r00r04      [ 4]  120 	lda	_strpbrk_ret_65536_27
   0033 CAr00r05      [ 4]  121 	ora	(_strpbrk_ret_65536_27 + 1)
   0036 27 05         [ 3]  122 	beq	00101$
   0038 3Er00r04      [ 6]  123 	cphx	_strpbrk_ret_65536_27
   003B 24 03         [ 3]  124 	bcc	00102$
   003D                     125 00101$:
                            126 ;../_strpbrk.c:39: ret = p;
   003D 96r00r04      [ 5]  127 	sthx	_strpbrk_ret_65536_27
   0040                     128 00102$:
                            129 ;../_strpbrk.c:41: control++;
   0040 55*00         [ 4]  130 	ldhx	*_strpbrk_sloc0_1_0
   0042 AF 01         [ 2]  131 	aix	#1
   0044 35*00         [ 4]  132 	sthx	*_strpbrk_sloc0_1_0
   0046 20 C8         [ 3]  133 	bra	00105$
   0048                     134 00107$:
                            135 ;../_strpbrk.c:44: return (ret);
   0048 CEr00r04      [ 4]  136 	ldx	_strpbrk_ret_65536_27
   004B C6r00r05      [ 4]  137 	lda	(_strpbrk_ret_65536_27 + 1)
                            138 ;../_strpbrk.c:45: }
   004E 81            [ 6]  139 	rts
                            140 	.area CSEG    (CODE)
                            141 	.area CONST   (CODE)
                            142 	.area XINIT   (CODE)
                            143 	.area CABS    (ABS,CODE)
