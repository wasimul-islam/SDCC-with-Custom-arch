                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module strtoul
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strncmp
                             24 	.globl _strtoul_PARM_3
                             25 	.globl _strtoul_PARM_2
                             26 	.globl _strtoul
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _strtoul_sloc0_1_0:
   0000                      32 	.ds 1
   0001                      33 _strtoul_sloc1_1_0:
   0001                      34 	.ds 2
   0003                      35 _strtoul_sloc2_1_0:
   0003                      36 	.ds 2
   0005                      37 _strtoul_sloc3_1_0:
   0005                      38 	.ds 2
   0007                      39 _strtoul_sloc4_1_0:
   0007                      40 	.ds 8
                             41 ;--------------------------------------------------------
                             42 ; overlayable items in ram
                             43 ;--------------------------------------------------------
                             44 ;--------------------------------------------------------
                             45 ; absolute ram data
                             46 ;--------------------------------------------------------
                             47 	.area IABS    (ABS)
                             48 	.area IABS    (ABS)
                             49 ;--------------------------------------------------------
                             50 ; absolute external ram data
                             51 ;--------------------------------------------------------
                             52 	.area XABS    (ABS)
                             53 ;--------------------------------------------------------
                             54 ; initialized external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XISEG
                             57 ;--------------------------------------------------------
                             58 ; extended address mode data
                             59 ;--------------------------------------------------------
                             60 	.area XSEG
   0000                      61 __isdigit_base_65536_134:
   0000                      62 	.ds 1
   0001                      63 _strtoul_PARM_2:
   0001                      64 	.ds 2
   0003                      65 _strtoul_PARM_3:
   0003                      66 	.ds 2
   0005                      67 _strtoul_nptr_65536_136:
   0005                      68 	.ds 2
   0007                      69 _strtoul_ptr_65536_137:
   0007                      70 	.ds 2
   0009                      71 _strtoul_ret_65536_137:
   0009                      72 	.ds 4
   000D                      73 _strtoul_range_error_65536_137:
   000D                      74 	.ds 1
   000E                      75 _strtoul_neg_65536_137:
   000E                      76 	.ds 1
   000F                      77 _strtoul_digit_196608_144:
   000F                      78 	.ds 1
   0010                      79 _strtoul_result_393216_154:
   0010                      80 	.ds 8
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function '_isdigit'
                             99 ;------------------------------------------------------------
                            100 ;base                      Allocated with name '__isdigit_base_65536_134'
                            101 ;c                         Allocated to registers a 
                            102 ;v                         Allocated to registers a 
                            103 ;------------------------------------------------------------
                            104 ;../strtoul.c:40: static signed char _isdigit(const char c, unsigned char base)
                            105 ;	-----------------------------------------
                            106 ;	 function _isdigit
                            107 ;	-----------------------------------------
                            108 ;	Register assignment is optimal.
                            109 ;	Stack space usage: 0 bytes.
   0000                     110 __isdigit:
   0000 CFr00r00      [ 4]  111 	stx	__isdigit_base_65536_134
                            112 ;../strtoul.c:45: v = c - '0';
   0003 97            [ 1]  113 	tax
                            114 ;../strtoul.c:44: if (c >= '0' && c <= '9')
   0004 A1 30         [ 2]  115 	cmp	#0x30
   0006 25 09         [ 3]  116 	bcs	00110$
   0008 A1 39         [ 2]  117 	cmp	#0x39
   000A 22 05         [ 3]  118 	bhi	00110$
                            119 ;../strtoul.c:45: v = c - '0';
   000C 9F            [ 1]  120 	txa
   000D A0 30         [ 2]  121 	sub	#0x30
   000F 20 1D         [ 3]  122 	bra	00111$
   0011                     123 00110$:
                            124 ;../strtoul.c:46: else if (c >= 'a' && c <='z')
   0011 A1 61         [ 2]  125 	cmp	#0x61
   0013 25 09         [ 3]  126 	bcs	00106$
   0015 A1 7A         [ 2]  127 	cmp	#0x7a
   0017 22 05         [ 3]  128 	bhi	00106$
                            129 ;../strtoul.c:47: v = c - 'a' + 10;
   0019 9F            [ 1]  130 	txa
   001A AB A9         [ 2]  131 	add	#0xa9
   001C 20 10         [ 3]  132 	bra	00111$
   001E                     133 00106$:
                            134 ;../strtoul.c:48: else if (c >= 'A' && c <='Z')
   001E A1 41         [ 2]  135 	cmp	#0x41
   0020 25 09         [ 3]  136 	bcs	00102$
   0022 A1 5A         [ 2]  137 	cmp	#0x5a
   0024 22 05         [ 3]  138 	bhi	00102$
                            139 ;../strtoul.c:49: v = c - 'A' + 10;
   0026 9F            [ 1]  140 	txa
   0027 AB C9         [ 2]  141 	add	#0xc9
   0029 20 03         [ 3]  142 	bra	00111$
   002B                     143 00102$:
                            144 ;../strtoul.c:51: return (-1);
   002B A6 FF         [ 2]  145 	lda	#0xff
   002D 81            [ 6]  146 	rts
   002E                     147 00111$:
                            148 ;../strtoul.c:53: if (v >= base)
   002E C1r00r00      [ 4]  149 	cmp	__isdigit_base_65536_134
   0031 25 03         [ 3]  150 	bcs	00114$
                            151 ;../strtoul.c:54: return (-1);
   0033 A6 FF         [ 2]  152 	lda	#0xff
   0035 81            [ 6]  153 	rts
   0036                     154 00114$:
                            155 ;../strtoul.c:56: return (v);
                            156 ;../strtoul.c:57: }
   0036 81            [ 6]  157 	rts
                            158 ;------------------------------------------------------------
                            159 ;Allocation info for local variables in function 'strtoul'
                            160 ;------------------------------------------------------------
                            161 ;sloc0                     Allocated with name '_strtoul_sloc0_1_0'
                            162 ;sloc1                     Allocated with name '_strtoul_sloc1_1_0'
                            163 ;sloc2                     Allocated with name '_strtoul_sloc2_1_0'
                            164 ;sloc3                     Allocated with name '_strtoul_sloc3_1_0'
                            165 ;sloc4                     Allocated with name '_strtoul_sloc4_1_0'
                            166 ;endptr                    Allocated with name '_strtoul_PARM_2'
                            167 ;base                      Allocated with name '_strtoul_PARM_3'
                            168 ;nptr                      Allocated with name '_strtoul_nptr_65536_136'
                            169 ;__1310720004              Allocated to registers 
                            170 ;ptr                       Allocated with name '_strtoul_ptr_65536_137'
                            171 ;ret                       Allocated with name '_strtoul_ret_65536_137'
                            172 ;range_error               Allocated with name '_strtoul_range_error_65536_137'
                            173 ;neg                       Allocated with name '_strtoul_neg_65536_137'
                            174 ;__1310720005              Allocated to registers 
                            175 ;c                         Allocated to registers 
                            176 ;__2621440017              Allocated with name '_strtoul___2621440017_262144_144'
                            177 ;__2621440012              Allocated to registers a 
                            178 ;__2621440007              Allocated with name '_strtoul___2621440007_262144_144'
                            179 ;oldret                    Allocated with name '_strtoul_oldret_196608_144'
                            180 ;digit                     Allocated with name '_strtoul_digit_196608_144'
                            181 ;__2621440008              Allocated with name '_strtoul___2621440008_262144_149'
                            182 ;__2621440009              Allocated with name '_strtoul___2621440009_262144_149'
                            183 ;__2621440010              Allocated with name '_strtoul___2621440010_262144_149'
                            184 ;r                         Allocated with name '_strtoul_r_327680_150'
                            185 ;a                         Allocated with name '_strtoul_a_327680_150'
                            186 ;b                         Allocated with name '_strtoul_b_327680_150'
                            187 ;result                    Allocated with name '_strtoul_result_393216_151'
                            188 ;__2621440013              Allocated to registers 
                            189 ;__2621440014              Allocated with name '_strtoul___2621440014_262144_152'
                            190 ;__2621440015              Allocated with name '_strtoul___2621440015_262144_152'
                            191 ;r                         Allocated to registers 
                            192 ;a                         Allocated with name '_strtoul_a_327680_153'
                            193 ;b                         Allocated with name '_strtoul_b_327680_153'
                            194 ;result                    Allocated with name '_strtoul_result_393216_154'
                            195 ;__2621440018              Allocated with name '_strtoul___2621440018_262144_155'
                            196 ;__2621440019              Allocated with name '_strtoul___2621440019_262144_155'
                            197 ;__2621440020              Allocated with name '_strtoul___2621440020_262144_155'
                            198 ;r                         Allocated with name '_strtoul_r_327680_156'
                            199 ;a                         Allocated with name '_strtoul_a_327680_156'
                            200 ;b                         Allocated with name '_strtoul_b_327680_156'
                            201 ;result                    Allocated with name '_strtoul_result_393216_157'
                            202 ;------------------------------------------------------------
                            203 ;../strtoul.c:59: unsigned long int strtoul(const char *nptr, char **endptr, int base)
                            204 ;	-----------------------------------------
                            205 ;	 function strtoul
                            206 ;	-----------------------------------------
                            207 ;	Register assignment is optimal.
                            208 ;	Stack space usage: 0 bytes.
   0037                     209 _strtoul:
   0037 C7r00r06      [ 4]  210 	sta	(_strtoul_nptr_65536_136 + 1)
   003A CFr00r05      [ 4]  211 	stx	_strtoul_nptr_65536_136
                            212 ;../strtoul.c:63: bool range_error = false;
   003D 4F            [ 1]  213 	clra
   003E C7r00r0D      [ 4]  214 	sta	_strtoul_range_error_65536_137
                            215 ;../strtoul.c:64: bool neg = false;
   0041 C7r00r0E      [ 4]  216 	sta	_strtoul_neg_65536_137
                            217 ;../strtoul.c:66: while (isblank (*ptr))
   0044 32r00r05      [ 5]  218 	ldhx	_strtoul_nptr_65536_136
   0047                     219 00101$:
   0047 F6            [ 3]  220 	lda	,x
   0048 B7*00         [ 3]  221 	sta	*_strtoul_sloc0_1_0
   004A B6*00         [ 3]  222 	lda	*_strtoul_sloc0_1_0
                            223 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   004C 41 20 04      [ 4]  224 	cbeqa	#0x20,00141$
   004F A1 09         [ 2]  225 	cmp	#0x09
   0051 26 04         [ 3]  226 	bne	00163$
   0053                     227 00141$:
                            228 ;../strtoul.c:67: ptr++;
   0053 AF 01         [ 2]  229 	aix	#1
   0055 20 F0         [ 3]  230 	bra	00101$
   0057                     231 00163$:
   0057 96r00r07      [ 5]  232 	sthx	_strtoul_ptr_65536_137
                            233 ;../strtoul.c:70: switch(*ptr)
   005A B6*00         [ 3]  234 	lda	*_strtoul_sloc0_1_0
   005C 41 2B 0B      [ 4]  235 	cbeqa	#0x2b,00105$
   005F B6*00         [ 3]  236 	lda	*_strtoul_sloc0_1_0
   0061 A1 2D         [ 2]  237 	cmp	#0x2d
   0063 26 0D         [ 3]  238 	bne	00106$
                            239 ;../strtoul.c:73: neg = true;
   0065 A6 01         [ 2]  240 	lda	#0x01
   0067 C7r00r0E      [ 4]  241 	sta	_strtoul_neg_65536_137
                            242 ;../strtoul.c:74: case '+':
   006A                     243 00105$:
                            244 ;../strtoul.c:75: ptr++;
   006A 32r00r07      [ 5]  245 	ldhx	_strtoul_ptr_65536_137
   006D AF 01         [ 2]  246 	aix	#1
   006F 96r00r07      [ 5]  247 	sthx	_strtoul_ptr_65536_137
                            248 ;../strtoul.c:76: }
   0072                     249 00106$:
                            250 ;../strtoul.c:84: ptr += 2;
   0072 32r00r07      [ 5]  251 	ldhx	_strtoul_ptr_65536_137
   0075 AF 02         [ 2]  252 	aix	#2
   0077 35*01         [ 4]  253 	sthx	*_strtoul_sloc1_1_0
                            254 ;../strtoul.c:79: if (!base)
   0079 C6r00r03      [ 4]  255 	lda	_strtoul_PARM_3
   007C CAr00r04      [ 4]  256 	ora	(_strtoul_PARM_3 + 1)
   007F 26 68         [ 3]  257 	bne	00119$
                            258 ;../strtoul.c:81: if (!strncmp (ptr, "0x", 2) || !strncmp (ptr, "0X", 2))
   0081 45r00r00      [ 3]  259 	ldhx	#___str_0
   0084 96r00r00      [ 5]  260 	sthx	_strncmp_PARM_2
   0087 45 00 02      [ 3]  261 	ldhx	#0x0002
   008A 96r00r00      [ 5]  262 	sthx	_strncmp_PARM_3
   008D C6r00r08      [ 4]  263 	lda	(_strtoul_ptr_65536_137 + 1)
   0090 CEr00r07      [ 4]  264 	ldx	_strtoul_ptr_65536_137
   0093 CDr00r00      [ 6]  265 	jsr	_strncmp
   0096 4D            [ 1]  266 	tsta
   0097 26 01         [ 3]  267 	bne	00236$
   0099 5D            [ 1]  268 	tstx
   009A                     269 00236$:
   009A 27 1B         [ 3]  270 	beq	00110$
   009C 45r00r03      [ 3]  271 	ldhx	#___str_1
   009F 96r00r00      [ 5]  272 	sthx	_strncmp_PARM_2
   00A2 45 00 02      [ 3]  273 	ldhx	#0x0002
   00A5 96r00r00      [ 5]  274 	sthx	_strncmp_PARM_3
   00A8 C6r00r08      [ 4]  275 	lda	(_strtoul_ptr_65536_137 + 1)
   00AB CEr00r07      [ 4]  276 	ldx	_strtoul_ptr_65536_137
   00AE CDr00r00      [ 6]  277 	jsr	_strncmp
   00B1 4D            [ 1]  278 	tsta
   00B2 26 01         [ 3]  279 	bne	00238$
   00B4 5D            [ 1]  280 	tstx
   00B5                     281 00238$:
   00B5 26 12         [ 3]  282 	bne	00111$
   00B7                     283 00110$:
                            284 ;../strtoul.c:83: base = 16;
   00B7 45 00 10      [ 3]  285 	ldhx	#0x0010
   00BA 96r00r03      [ 5]  286 	sthx	_strtoul_PARM_3
                            287 ;../strtoul.c:84: ptr += 2;
   00BD B6*01         [ 3]  288 	lda	*_strtoul_sloc1_1_0
   00BF C7r00r07      [ 4]  289 	sta	_strtoul_ptr_65536_137
   00C2 B6*02         [ 3]  290 	lda	*(_strtoul_sloc1_1_0 + 1)
   00C4 C7r00r08      [ 4]  291 	sta	(_strtoul_ptr_65536_137 + 1)
   00C7 20 6F         [ 3]  292 	bra	00120$
   00C9                     293 00111$:
                            294 ;../strtoul.c:86: else if (*ptr == '0')
   00C9 32r00r07      [ 5]  295 	ldhx	_strtoul_ptr_65536_137
   00CC F6            [ 3]  296 	lda	,x
   00CD A1 30         [ 2]  297 	cmp	#0x30
   00CF 26 10         [ 3]  298 	bne	00108$
                            299 ;../strtoul.c:88: base = 8;
   00D1 45 00 08      [ 3]  300 	ldhx	#0x0008
   00D4 96r00r03      [ 5]  301 	sthx	_strtoul_PARM_3
                            302 ;../strtoul.c:89: ptr++;
   00D7 32r00r07      [ 5]  303 	ldhx	_strtoul_ptr_65536_137
   00DA AF 01         [ 2]  304 	aix	#1
   00DC 96r00r07      [ 5]  305 	sthx	_strtoul_ptr_65536_137
   00DF 20 57         [ 3]  306 	bra	00120$
   00E1                     307 00108$:
                            308 ;../strtoul.c:92: base = 10;
   00E1 45 00 0A      [ 3]  309 	ldhx	#0x000a
   00E4 96r00r03      [ 5]  310 	sthx	_strtoul_PARM_3
   00E7 20 4F         [ 3]  311 	bra	00120$
   00E9                     312 00119$:
                            313 ;../strtoul.c:95: else if (base == 16 && (!strncmp (ptr, "0x", 2) || !strncmp (ptr, "0X", 2)))
   00E9 C6r00r04      [ 4]  314 	lda	(_strtoul_PARM_3 + 1)
   00EC A1 10         [ 2]  315 	cmp	#0x10
   00EE 26 06         [ 3]  316 	bne	00241$
   00F0 C6r00r03      [ 4]  317 	lda	_strtoul_PARM_3
   00F3 41 00 02      [ 4]  318 	cbeqa	#0x00,00242$
   00F6                     319 00241$:
   00F6 20 40         [ 3]  320 	bra	00120$
   00F8                     321 00242$:
   00F8 45r00r00      [ 3]  322 	ldhx	#___str_0
   00FB 96r00r00      [ 5]  323 	sthx	_strncmp_PARM_2
   00FE 45 00 02      [ 3]  324 	ldhx	#0x0002
   0101 96r00r00      [ 5]  325 	sthx	_strncmp_PARM_3
   0104 C6r00r08      [ 4]  326 	lda	(_strtoul_ptr_65536_137 + 1)
   0107 CEr00r07      [ 4]  327 	ldx	_strtoul_ptr_65536_137
   010A CDr00r00      [ 6]  328 	jsr	_strncmp
   010D 4D            [ 1]  329 	tsta
   010E 26 01         [ 3]  330 	bne	00243$
   0110 5D            [ 1]  331 	tstx
   0111                     332 00243$:
   0111 27 1B         [ 3]  333 	beq	00114$
   0113 45r00r03      [ 3]  334 	ldhx	#___str_1
   0116 96r00r00      [ 5]  335 	sthx	_strncmp_PARM_2
   0119 45 00 02      [ 3]  336 	ldhx	#0x0002
   011C 96r00r00      [ 5]  337 	sthx	_strncmp_PARM_3
   011F C6r00r08      [ 4]  338 	lda	(_strtoul_ptr_65536_137 + 1)
   0122 CEr00r07      [ 4]  339 	ldx	_strtoul_ptr_65536_137
   0125 CDr00r00      [ 6]  340 	jsr	_strncmp
   0128 4D            [ 1]  341 	tsta
   0129 26 01         [ 3]  342 	bne	00245$
   012B 5D            [ 1]  343 	tstx
   012C                     344 00245$:
   012C 26 0A         [ 3]  345 	bne	00120$
   012E                     346 00114$:
                            347 ;../strtoul.c:96: ptr += 2;
   012E B6*01         [ 3]  348 	lda	*_strtoul_sloc1_1_0
   0130 C7r00r07      [ 4]  349 	sta	_strtoul_ptr_65536_137
   0133 B6*02         [ 3]  350 	lda	*(_strtoul_sloc1_1_0 + 1)
   0135 C7r00r08      [ 4]  351 	sta	(_strtoul_ptr_65536_137 + 1)
   0138                     352 00120$:
                            353 ;../strtoul.c:100: if (_isdigit (*ptr, base) < 0)
   0138 32r00r07      [ 5]  354 	ldhx	_strtoul_ptr_65536_137
   013B F6            [ 3]  355 	lda	,x
   013C CEr00r04      [ 4]  356 	ldx	(_strtoul_PARM_3 + 1)
   013F BF*01         [ 3]  357 	stx	*_strtoul_sloc1_1_0
   0141 BE*01         [ 3]  358 	ldx	*_strtoul_sloc1_1_0
   0143 CDr00r00      [ 6]  359 	jsr	__isdigit
                            360 ;../strtoul.c:103: *endptr = (char*)nptr;
   0146 32r00r01      [ 5]  361 	ldhx	_strtoul_PARM_2
   0149 35*03         [ 4]  362 	sthx	*_strtoul_sloc2_1_0
                            363 ;../strtoul.c:100: if (_isdigit (*ptr, base) < 0)
   014B A1 00         [ 2]  364 	cmp	#0x00
   014D 90 1A         [ 3]  365 	bge	00124$
                            366 ;../strtoul.c:102: if (endptr)
   014F C6r00r01      [ 4]  367 	lda	_strtoul_PARM_2
   0152 CAr00r02      [ 4]  368 	ora	(_strtoul_PARM_2 + 1)
   0155 27 0B         [ 3]  369 	beq	00122$
                            370 ;../strtoul.c:103: *endptr = (char*)nptr;
   0157 55*03         [ 4]  371 	ldhx	*_strtoul_sloc2_1_0
   0159 C6r00r05      [ 4]  372 	lda	_strtoul_nptr_65536_136
   015C F7            [ 2]  373 	sta	,x
   015D C6r00r06      [ 4]  374 	lda	(_strtoul_nptr_65536_136 + 1)
   0160 E7 01         [ 3]  375 	sta	1,x
   0162                     376 00122$:
                            377 ;../strtoul.c:104: return (0);
   0162 4F            [ 1]  378 	clra
   0163 97            [ 1]  379 	tax
   0164 B7*00         [ 3]  380 	sta	*___SDCC_hc08_ret2
   0166 B7*00         [ 3]  381 	sta	*___SDCC_hc08_ret3
   0168 81            [ 6]  382 	rts
   0169                     383 00124$:
                            384 ;../strtoul.c:107: for (ret = 0;; ptr++)
   0169 8C            [ 1]  385 	clrh
   016A 5F            [ 1]  386 	clrx
   016B 96r00r09      [ 5]  387 	sthx	_strtoul_ret_65536_137
   016E 96r00r0B      [ 5]  388 	sthx	(_strtoul_ret_65536_137 + 2)
   0171 32r00r07      [ 5]  389 	ldhx	_strtoul_ptr_65536_137
   0174 35*05         [ 4]  390 	sthx	*_strtoul_sloc3_1_0
   0176                     391 00136$:
                            392 ;../strtoul.c:110: signed char digit = _isdigit (*ptr, base);
   0176 55*05         [ 4]  393 	ldhx	*_strtoul_sloc3_1_0
   0178 F6            [ 3]  394 	lda	,x
   0179 BE*01         [ 3]  395 	ldx	*_strtoul_sloc1_1_0
   017B CDr00r00      [ 6]  396 	jsr	__isdigit
   017E C7r00r0F      [ 4]  397 	sta	_strtoul_digit_196608_144
                            398 ;../strtoul.c:112: if (digit < 0)
   0181 C6r00r0F      [ 4]  399 	lda	_strtoul_digit_196608_144
   0184 A1 00         [ 2]  400 	cmp	#0x00
   0186 90 03         [ 3]  401 	bge	00249$
   0188 CCr02rB4      [ 4]  402 	jmp	00127$
   018B                     403 00249$:
                            404 ;../strtoul.c:117: range_error |= ckd_mul(&ret, ret, base);
   018B C6r00r04      [ 4]  405 	lda	(_strtoul_PARM_3 + 1)
   018E C7r00r07      [ 4]  406 	sta	(__mullonglong_PARM_2 + 7)
   0191 C6r00r03      [ 4]  407 	lda	_strtoul_PARM_3
   0194 C7r00r06      [ 4]  408 	sta	(__mullonglong_PARM_2 + 6)
   0197 49            [ 1]  409 	rola	
   0198 4F            [ 1]  410 	clra	
   0199 A2 00         [ 2]  411 	sbc	#0x00
   019B C7r00r05      [ 4]  412 	sta	(__mullonglong_PARM_2 + 5)
   019E C7r00r04      [ 4]  413 	sta	(__mullonglong_PARM_2 + 4)
   01A1 C7r00r03      [ 4]  414 	sta	(__mullonglong_PARM_2 + 3)
   01A4 C7r00r02      [ 4]  415 	sta	(__mullonglong_PARM_2 + 2)
   01A7 C7r00r01      [ 4]  416 	sta	(__mullonglong_PARM_2 + 1)
   01AA C7r00r00      [ 4]  417 	sta	__mullonglong_PARM_2
   01AD 32r00r0B      [ 5]  418 	ldhx	(_strtoul_ret_65536_137 + 2)
   01B0 96r00r06      [ 5]  419 	sthx	(__mullonglong_PARM_1 + 6)
   01B3 32r00r09      [ 5]  420 	ldhx	_strtoul_ret_65536_137
   01B6 96r00r04      [ 5]  421 	sthx	(__mullonglong_PARM_1 + 4)
   01B9 4F            [ 1]  422 	clra
   01BA C7r00r03      [ 4]  423 	sta	(__mullonglong_PARM_1 + 3)
   01BD C7r00r02      [ 4]  424 	sta	(__mullonglong_PARM_1 + 2)
   01C0 C7r00r01      [ 4]  425 	sta	(__mullonglong_PARM_1 + 1)
   01C3 C7r00r00      [ 4]  426 	sta	__mullonglong_PARM_1
                            427 ;./../../include/stdckdint.h:76: inline _Bool __ckd_mul_ulong __CKD_DEFAULT_IMPL(unsigned long, *)
   01C6 CDr00r00      [ 6]  428 	jsr	__mullonglong
   01C9 B7*0E         [ 3]  429 	sta	*(_strtoul_sloc4_1_0 + 7)
   01CB BF*0D         [ 3]  430 	stx	*(_strtoul_sloc4_1_0 + 6)
   01CD 4E*00*0C      [ 6]  431 	mov	*___SDCC_hc08_ret2,*(_strtoul_sloc4_1_0 + 5)
   01D0 4E*00*0B      [ 6]  432 	mov	*___SDCC_hc08_ret3,*(_strtoul_sloc4_1_0 + 4)
   01D3 4E*00*0A      [ 6]  433 	mov	*___SDCC_hc08_ret4,*(_strtoul_sloc4_1_0 + 3)
   01D6 4E*00*09      [ 6]  434 	mov	*___SDCC_hc08_ret5,*(_strtoul_sloc4_1_0 + 2)
   01D9 4E*00*08      [ 6]  435 	mov	*___SDCC_hc08_ret6,*(_strtoul_sloc4_1_0 + 1)
   01DC 4E*00*07      [ 6]  436 	mov	*___SDCC_hc08_ret7,*_strtoul_sloc4_1_0
   01DF B6*07         [ 3]  437 	lda	*_strtoul_sloc4_1_0
   01E1 C7r00r10      [ 4]  438 	sta	_strtoul_result_393216_154
   01E4 B6*08         [ 3]  439 	lda	*(_strtoul_sloc4_1_0 + 1)
   01E6 C7r00r11      [ 4]  440 	sta	(_strtoul_result_393216_154 + 1)
   01E9 B6*09         [ 3]  441 	lda	*(_strtoul_sloc4_1_0 + 2)
   01EB C7r00r12      [ 4]  442 	sta	(_strtoul_result_393216_154 + 2)
   01EE B6*0A         [ 3]  443 	lda	*(_strtoul_sloc4_1_0 + 3)
   01F0 C7r00r13      [ 4]  444 	sta	(_strtoul_result_393216_154 + 3)
   01F3 B6*0B         [ 3]  445 	lda	*(_strtoul_sloc4_1_0 + 4)
   01F5 C7r00r14      [ 4]  446 	sta	(_strtoul_result_393216_154 + 4)
   01F8 B6*0C         [ 3]  447 	lda	*(_strtoul_sloc4_1_0 + 5)
   01FA C7r00r15      [ 4]  448 	sta	(_strtoul_result_393216_154 + 5)
   01FD B6*0D         [ 3]  449 	lda	*(_strtoul_sloc4_1_0 + 6)
   01FF C7r00r16      [ 4]  450 	sta	(_strtoul_result_393216_154 + 6)
   0202 B6*0E         [ 3]  451 	lda	*(_strtoul_sloc4_1_0 + 7)
   0204 C7r00r17      [ 4]  452 	sta	(_strtoul_result_393216_154 + 7)
   0207 4E*0E*0A      [ 6]  453 	mov	*(_strtoul_sloc4_1_0 + 7),*(_strtoul_sloc4_1_0 + 3)
   020A 4E*0D*09      [ 6]  454 	mov	*(_strtoul_sloc4_1_0 + 6),*(_strtoul_sloc4_1_0 + 2)
   020D 4E*0C*08      [ 6]  455 	mov	*(_strtoul_sloc4_1_0 + 5),*(_strtoul_sloc4_1_0 + 1)
   0210 4E*0B*07      [ 6]  456 	mov	*(_strtoul_sloc4_1_0 + 4),*_strtoul_sloc4_1_0
   0213 B6*07         [ 3]  457 	lda	*_strtoul_sloc4_1_0
   0215 C7r00r09      [ 4]  458 	sta	_strtoul_ret_65536_137
   0218 B6*08         [ 3]  459 	lda	*(_strtoul_sloc4_1_0 + 1)
   021A C7r00r0A      [ 4]  460 	sta	(_strtoul_ret_65536_137 + 1)
   021D B6*09         [ 3]  461 	lda	*(_strtoul_sloc4_1_0 + 2)
   021F C7r00r0B      [ 4]  462 	sta	(_strtoul_ret_65536_137 + 2)
   0222 B6*0A         [ 3]  463 	lda	*(_strtoul_sloc4_1_0 + 3)
   0224 C7r00r0C      [ 4]  464 	sta	(_strtoul_ret_65536_137 + 3)
   0227 4E*0A*0E      [ 6]  465 	mov	*(_strtoul_sloc4_1_0 + 3),*(_strtoul_sloc4_1_0 + 7)
   022A 4E*09*0D      [ 6]  466 	mov	*(_strtoul_sloc4_1_0 + 2),*(_strtoul_sloc4_1_0 + 6)
   022D 4E*08*0C      [ 6]  467 	mov	*(_strtoul_sloc4_1_0 + 1),*(_strtoul_sloc4_1_0 + 5)
   0230 4E*07*0B      [ 6]  468 	mov	*_strtoul_sloc4_1_0,*(_strtoul_sloc4_1_0 + 4)
   0233 6E 00*0A      [ 4]  469 	mov	#0x00,*(_strtoul_sloc4_1_0 + 3)
   0236 6E 00*09      [ 4]  470 	mov	#0x00,*(_strtoul_sloc4_1_0 + 2)
   0239 6E 00*08      [ 4]  471 	mov	#0x00,*(_strtoul_sloc4_1_0 + 1)
   023C 6E 00*07      [ 4]  472 	mov	#0x00,*_strtoul_sloc4_1_0
   023F B6*0E         [ 3]  473 	lda	*(_strtoul_sloc4_1_0 + 7)
   0241 C1r00r17      [ 4]  474 	cmp	(_strtoul_result_393216_154 + 7)
   0244 26 31         [ 3]  475 	bne	00250$
   0246 B6*0D         [ 3]  476 	lda	*(_strtoul_sloc4_1_0 + 6)
   0248 C1r00r16      [ 4]  477 	cmp	(_strtoul_result_393216_154 + 6)
   024B 26 2A         [ 3]  478 	bne	00250$
   024D B6*0C         [ 3]  479 	lda	*(_strtoul_sloc4_1_0 + 5)
   024F C1r00r15      [ 4]  480 	cmp	(_strtoul_result_393216_154 + 5)
   0252 26 23         [ 3]  481 	bne	00250$
   0254 B6*0B         [ 3]  482 	lda	*(_strtoul_sloc4_1_0 + 4)
   0256 C1r00r14      [ 4]  483 	cmp	(_strtoul_result_393216_154 + 4)
   0259 26 1C         [ 3]  484 	bne	00250$
   025B B6*0A         [ 3]  485 	lda	*(_strtoul_sloc4_1_0 + 3)
   025D C1r00r13      [ 4]  486 	cmp	(_strtoul_result_393216_154 + 3)
   0260 26 15         [ 3]  487 	bne	00250$
   0262 B6*09         [ 3]  488 	lda	*(_strtoul_sloc4_1_0 + 2)
   0264 C1r00r12      [ 4]  489 	cmp	(_strtoul_result_393216_154 + 2)
   0267 26 0E         [ 3]  490 	bne	00250$
   0269 B6*08         [ 3]  491 	lda	*(_strtoul_sloc4_1_0 + 1)
   026B C1r00r11      [ 4]  492 	cmp	(_strtoul_result_393216_154 + 1)
   026E 26 07         [ 3]  493 	bne	00250$
   0270 B6*07         [ 3]  494 	lda	*_strtoul_sloc4_1_0
   0272 C1r00r10      [ 4]  495 	cmp	_strtoul_result_393216_154
   0275 27 03         [ 3]  496 	beq	00252$
   0277                     497 00250$:
   0277 4F            [ 1]  498 	clra
   0278 20 02         [ 3]  499 	bra	00251$
   027A                     500 00252$:
   027A A6 01         [ 2]  501 	lda	#0x01
   027C                     502 00251$:
   027C A8 01         [ 2]  503 	eor	#0x01
                            504 ;../strtoul.c:117: range_error |= ckd_mul(&ret, ret, base);
   027E CAr00r0D      [ 4]  505 	ora	_strtoul_range_error_65536_137
   0281 C7r00r0D      [ 4]  506 	sta	_strtoul_range_error_65536_137
                            507 ;../strtoul.c:125: ret += (unsigned char)digit;
   0284 C6r00r0F      [ 4]  508 	lda	_strtoul_digit_196608_144
   0287 B7*0A         [ 3]  509 	sta	*(_strtoul_sloc4_1_0 + 3)
   0289 6E 00*09      [ 4]  510 	mov	#0x00,*(_strtoul_sloc4_1_0 + 2)
   028C 6E 00*08      [ 4]  511 	mov	#0x00,*(_strtoul_sloc4_1_0 + 1)
   028F 6E 00*07      [ 4]  512 	mov	#0x00,*_strtoul_sloc4_1_0
   0292 45r00r09      [ 3]  513 	ldhx	#_strtoul_ret_65536_137
   0295 E6 03         [ 3]  514 	lda	3,x
   0297 BB*0A         [ 3]  515 	add	*(_strtoul_sloc4_1_0 + 3)
   0299 E7 03         [ 3]  516 	sta	3,x
   029B E6 02         [ 3]  517 	lda	2,x
   029D B9*09         [ 3]  518 	adc	*(_strtoul_sloc4_1_0 + 2)
   029F E7 02         [ 3]  519 	sta	2,x
   02A1 E6 01         [ 3]  520 	lda	1,x
   02A3 B9*08         [ 3]  521 	adc	*(_strtoul_sloc4_1_0 + 1)
   02A5 E7 01         [ 3]  522 	sta	1,x
   02A7 F6            [ 3]  523 	lda	,x
   02A8 B9*07         [ 3]  524 	adc	*_strtoul_sloc4_1_0
   02AA F7            [ 2]  525 	sta	,x
                            526 ;../strtoul.c:107: for (ret = 0;; ptr++)
   02AB 55*05         [ 4]  527 	ldhx	*_strtoul_sloc3_1_0
   02AD AF 01         [ 2]  528 	aix	#1
   02AF 35*05         [ 4]  529 	sthx	*_strtoul_sloc3_1_0
   02B1 CCr01r76      [ 4]  530 	jmp	00136$
   02B4                     531 00127$:
                            532 ;../strtoul.c:128: if (endptr)
   02B4 C6r00r01      [ 4]  533 	lda	_strtoul_PARM_2
   02B7 CAr00r02      [ 4]  534 	ora	(_strtoul_PARM_2 + 1)
   02BA 27 09         [ 3]  535 	beq	00129$
                            536 ;../strtoul.c:129: *endptr = (char*)ptr;
   02BC 55*03         [ 4]  537 	ldhx	*_strtoul_sloc2_1_0
   02BE B6*05         [ 3]  538 	lda	*_strtoul_sloc3_1_0
   02C0 F7            [ 2]  539 	sta	,x
   02C1 B6*06         [ 3]  540 	lda	*(_strtoul_sloc3_1_0 + 1)
   02C3 E7 01         [ 3]  541 	sta	1,x
   02C5                     542 00129$:
                            543 ;../strtoul.c:131: if (range_error)
   02C5 C6r00r0D      [ 4]  544 	lda	_strtoul_range_error_65536_137
   02C8 27 0E         [ 3]  545 	beq	00131$
                            546 ;../strtoul.c:133: errno = ERANGE;
   02CA 45 00 22      [ 3]  547 	ldhx	#0x0022
   02CD 96r00r00      [ 5]  548 	sthx	_errno
                            549 ;../strtoul.c:134: return (ULONG_MAX);
   02D0 A6 FF         [ 2]  550 	lda	#0xff
   02D2 97            [ 1]  551 	tax
   02D3 B7*00         [ 3]  552 	sta	*___SDCC_hc08_ret2
   02D5 B7*00         [ 3]  553 	sta	*___SDCC_hc08_ret3
   02D7 81            [ 6]  554 	rts
   02D8                     555 00131$:
                            556 ;../strtoul.c:137: return (neg ? -ret : ret);
   02D8 C6r00r0E      [ 4]  557 	lda	_strtoul_neg_65536_137
   02DB 27 1A         [ 3]  558 	beq	00143$
   02DD 4F            [ 1]  559 	clra
   02DE C0r00r0C      [ 4]  560 	sub	(_strtoul_ret_65536_137 + 3)
   02E1 B7*0A         [ 3]  561 	sta	*(_strtoul_sloc4_1_0 + 3)
   02E3 4F            [ 1]  562 	clra
   02E4 C2r00r0B      [ 4]  563 	sbc	(_strtoul_ret_65536_137 + 2)
   02E7 B7*09         [ 3]  564 	sta	*(_strtoul_sloc4_1_0 + 2)
   02E9 4F            [ 1]  565 	clra
   02EA C2r00r0A      [ 4]  566 	sbc	(_strtoul_ret_65536_137 + 1)
   02ED B7*08         [ 3]  567 	sta	*(_strtoul_sloc4_1_0 + 1)
   02EF 4F            [ 1]  568 	clra
   02F0 C2r00r09      [ 4]  569 	sbc	_strtoul_ret_65536_137
   02F3 B7*07         [ 3]  570 	sta	*_strtoul_sloc4_1_0
   02F5 20 0A         [ 3]  571 	bra	00144$
   02F7                     572 00143$:
   02F7 32r00r09      [ 5]  573 	ldhx	_strtoul_ret_65536_137
   02FA 35*07         [ 4]  574 	sthx	*_strtoul_sloc4_1_0
   02FC 32r00r0B      [ 5]  575 	ldhx	(_strtoul_ret_65536_137 + 2)
   02FF 35*09         [ 4]  576 	sthx	*(_strtoul_sloc4_1_0 + 2)
   0301                     577 00144$:
   0301 4E*07*00      [ 6]  578 	mov	*_strtoul_sloc4_1_0,*___SDCC_hc08_ret3
   0304 4E*08*00      [ 6]  579 	mov	*(_strtoul_sloc4_1_0 + 1),*___SDCC_hc08_ret2
   0307 BE*09         [ 3]  580 	ldx	*(_strtoul_sloc4_1_0 + 2)
   0309 B6*0A         [ 3]  581 	lda	*(_strtoul_sloc4_1_0 + 3)
                            582 ;../strtoul.c:138: }
   030B 81            [ 6]  583 	rts
                            584 	.area CSEG    (CODE)
                            585 	.area CONST   (CODE)
                            586 	.area CONST   (CODE)
   0000                     587 ___str_0:
   0000 30 78               588 	.ascii "0x"
   0002 00                  589 	.db 0x00
                            590 	.area CSEG    (CODE)
                            591 	.area CONST   (CODE)
   0003                     592 ___str_1:
   0003 30 58               593 	.ascii "0X"
   0005 00                  594 	.db 0x00
                            595 	.area CSEG    (CODE)
                            596 	.area XINIT   (CODE)
                            597 	.area CABS    (ABS,CODE)
