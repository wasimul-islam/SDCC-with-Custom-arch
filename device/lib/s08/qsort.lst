                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module qsort
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _qsort_PARM_4
                             24 	.globl _qsort_PARM_3
                             25 	.globl _qsort_PARM_2
                             26 	.globl _qsort
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _qsort_sloc0_1_0:
   0000                      32 	.ds 2
   0002                      33 _qsort_sloc1_1_0:
   0002                      34 	.ds 2
   0004                      35 _qsort_sloc2_1_0:
   0004                      36 	.ds 2
   0006                      37 _qsort_sloc3_1_0:
   0006                      38 	.ds 2
   0008                      39 _qsort_sloc4_1_0:
   0008                      40 	.ds 2
                             41 ;--------------------------------------------------------
                             42 ; overlayable items in ram
                             43 ;--------------------------------------------------------
                             44 	.area	OSEG    (PAG, OVR)
   0000                      45 _swap_sloc0_1_0:
   0000                      46 	.ds 2
   0002                      47 _swap_sloc1_1_0:
   0002                      48 	.ds 2
   0004                      49 _swap_sloc2_1_0:
   0004                      50 	.ds 2
                             51 ;--------------------------------------------------------
                             52 ; absolute ram data
                             53 ;--------------------------------------------------------
                             54 	.area IABS    (ABS)
                             55 	.area IABS    (ABS)
                             56 ;--------------------------------------------------------
                             57 ; absolute external ram data
                             58 ;--------------------------------------------------------
                             59 	.area XABS    (ABS)
                             60 ;--------------------------------------------------------
                             61 ; initialized external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XISEG
                             64 ;--------------------------------------------------------
                             65 ; extended address mode data
                             66 ;--------------------------------------------------------
                             67 	.area XSEG
   0000                      68 _swap_PARM_2:
   0000                      69 	.ds 2
   0002                      70 _swap_PARM_3:
   0002                      71 	.ds 2
   0004                      72 _qsort_PARM_2:
   0004                      73 	.ds 2
   0006                      74 _qsort_PARM_3:
   0006                      75 	.ds 2
   0008                      76 _qsort_PARM_4:
   0008                      77 	.ds 2
   000A                      78 _qsort_b_65536_41:
   000A                      79 	.ds 2
   000C                      80 _qsort_i_131072_42:
   000C                      81 	.ds 2
                             82 ;--------------------------------------------------------
                             83 ; global & static initialisations
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area GSINIT  (CODE)
                             87 	.area GSFINAL (CODE)
                             88 	.area GSINIT  (CODE)
                             89 ;--------------------------------------------------------
                             90 ; Home
                             91 ;--------------------------------------------------------
                             92 	.area HOME    (CODE)
                             93 	.area HOME    (CODE)
                             94 ;--------------------------------------------------------
                             95 ; code
                             96 ;--------------------------------------------------------
                             97 	.area CSEG    (CODE)
                             98 ;------------------------------------------------------------
                             99 ;Allocation info for local variables in function 'swap'
                            100 ;------------------------------------------------------------
                            101 ;src                       Allocated with name '_swap_PARM_2'
                            102 ;n                         Allocated with name '_swap_PARM_3'
                            103 ;dst                       Allocated to registers a x 
                            104 ;d                         Allocated to registers 
                            105 ;s                         Allocated to registers 
                            106 ;tmp                       Allocated to registers a 
                            107 ;sloc0                     Allocated with name '_swap_sloc0_1_0'
                            108 ;sloc1                     Allocated with name '_swap_sloc1_1_0'
                            109 ;sloc2                     Allocated with name '_swap_sloc2_1_0'
                            110 ;------------------------------------------------------------
                            111 ;../qsort.c:33: static void swap(void *restrict dst, void *restrict src, size_t n)
                            112 ;	-----------------------------------------
                            113 ;	 function swap
                            114 ;	-----------------------------------------
                            115 ;	Register assignment is optimal.
                            116 ;	Stack space usage: 0 bytes.
   0000                     117 _swap:
                            118 ;../qsort.c:35: unsigned char *restrict d = dst;
   0000 B7*01         [ 3]  119 	sta	*(_swap_sloc0_1_0 + 1)
   0002 BF*00         [ 3]  120 	stx	*_swap_sloc0_1_0
                            121 ;../qsort.c:36: unsigned char *restrict s = src;
   0004 32r00r00      [ 5]  122 	ldhx	_swap_PARM_2
   0007 35*02         [ 4]  123 	sthx	*_swap_sloc1_1_0
                            124 ;../qsort.c:38: while(n--)
   0009 32r00r02      [ 5]  125 	ldhx	_swap_PARM_3
   000C 35*04         [ 4]  126 	sthx	*_swap_sloc2_1_0
   000E                     127 00101$:
   000E 55*04         [ 4]  128 	ldhx	*_swap_sloc2_1_0
   0010 89            [ 2]  129 	pshx
   0011 8B            [ 2]  130 	pshh
   0012 55*04         [ 4]  131 	ldhx	*_swap_sloc2_1_0
   0014 AF FF         [ 2]  132 	aix	#-1
   0016 35*04         [ 4]  133 	sthx	*_swap_sloc2_1_0
   0018 8A            [ 3]  134 	pulh
   0019 88            [ 3]  135 	pulx
   001A 65 00 00      [ 3]  136 	cphx	#0x00
   001D 27 19         [ 3]  137 	beq	00104$
                            138 ;../qsort.c:40: unsigned char tmp = *d;
   001F 55*00         [ 4]  139 	ldhx	*_swap_sloc0_1_0
   0021 F6            [ 3]  140 	lda	,x
                            141 ;../qsort.c:41: *d = *s;
   0022 55*02         [ 4]  142 	ldhx	*_swap_sloc1_1_0
   0024 FE            [ 3]  143 	ldx	,x
   0025 87            [ 2]  144 	psha
   0026 9F            [ 1]  145 	txa
   0027 55*00         [ 4]  146 	ldhx	*_swap_sloc0_1_0
   0029 F7            [ 2]  147 	sta	,x
   002A AF 01         [ 2]  148 	aix	#1
   002C 35*00         [ 4]  149 	sthx	*_swap_sloc0_1_0
   002E 86            [ 3]  150 	pula
                            151 ;../qsort.c:42: *s = tmp;
   002F 55*02         [ 4]  152 	ldhx	*_swap_sloc1_1_0
   0031 F7            [ 2]  153 	sta	,x
   0032 AF 01         [ 2]  154 	aix	#1
   0034 35*02         [ 4]  155 	sthx	*_swap_sloc1_1_0
                            156 ;../qsort.c:43: d++;
                            157 ;../qsort.c:44: s++;
   0036 20 D6         [ 3]  158 	bra	00101$
   0038                     159 00104$:
                            160 ;../qsort.c:46: }
   0038 81            [ 6]  161 	rts
                            162 ;------------------------------------------------------------
                            163 ;Allocation info for local variables in function 'qsort'
                            164 ;------------------------------------------------------------
                            165 ;sloc0                     Allocated with name '_qsort_sloc0_1_0'
                            166 ;sloc1                     Allocated with name '_qsort_sloc1_1_0'
                            167 ;sloc2                     Allocated with name '_qsort_sloc2_1_0'
                            168 ;sloc3                     Allocated with name '_qsort_sloc3_1_0'
                            169 ;sloc4                     Allocated with name '_qsort_sloc4_1_0'
                            170 ;nmemb                     Allocated with name '_qsort_PARM_2'
                            171 ;size                      Allocated with name '_qsort_PARM_3'
                            172 ;compar                    Allocated with name '_qsort_PARM_4'
                            173 ;base                      Allocated to registers x h 
                            174 ;b                         Allocated with name '_qsort_b_65536_41'
                            175 ;i                         Allocated with name '_qsort_i_131072_42'
                            176 ;j                         Allocated to registers x h 
                            177 ;------------------------------------------------------------
                            178 ;../qsort.c:48: void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *) __reentrant)
                            179 ;	-----------------------------------------
                            180 ;	 function qsort
                            181 ;	-----------------------------------------
                            182 ;	Register assignment is optimal.
                            183 ;	Stack space usage: 0 bytes.
   0039                     184 _qsort:
   0039 89            [ 2]  185 	pshx
   003A 97            [ 1]  186 	tax
   003B 8A            [ 3]  187 	pulh
                            188 ;../qsort.c:50: unsigned char *b = base;
   003C 96r00r0A      [ 5]  189 	sthx	_qsort_b_65536_41
                            190 ;../qsort.c:52: if(nmemb <= 1)
   003F A6 01         [ 2]  191 	lda	#0x01
   0041 C0r00r05      [ 4]  192 	sub	(_qsort_PARM_2 + 1)
   0044 4F            [ 1]  193 	clra
   0045 C2r00r04      [ 4]  194 	sbc	_qsort_PARM_2
   0048 25 01         [ 3]  195 	bcs	00102$
                            196 ;../qsort.c:53: return;
   004A 81            [ 6]  197 	rts
   004B                     198 00102$:
                            199 ;../qsort.c:55: for(unsigned char *i = base; i < b + nmemb * size; i += size)
   004B 96r00r0C      [ 5]  200 	sthx	_qsort_i_131072_42
   004E 32r00r06      [ 5]  201 	ldhx	_qsort_PARM_3
   0051 35*00         [ 4]  202 	sthx	*_qsort_sloc0_1_0
   0053 B6*00         [ 3]  203 	lda	*_qsort_sloc0_1_0
   0055 C7r00r00      [ 4]  204 	sta	__mulint_PARM_2
   0058 B6*01         [ 3]  205 	lda	*(_qsort_sloc0_1_0 + 1)
   005A C7r00r01      [ 4]  206 	sta	(__mulint_PARM_2 + 1)
   005D C6r00r05      [ 4]  207 	lda	(_qsort_PARM_2 + 1)
   0060 CEr00r04      [ 4]  208 	ldx	_qsort_PARM_2
   0063 CDr00r00      [ 6]  209 	jsr	__mulint
   0066 CBr00r0B      [ 4]  210 	add	(_qsort_b_65536_41 + 1)
   0069 B7*03         [ 3]  211 	sta	*(_qsort_sloc1_1_0 + 1)
   006B 9F            [ 1]  212 	txa
   006C C9r00r0A      [ 4]  213 	adc	_qsort_b_65536_41
   006F B7*02         [ 3]  214 	sta	*_qsort_sloc1_1_0
   0071                     215 00110$:
   0071 C6r00r0D      [ 4]  216 	lda	(_qsort_i_131072_42 + 1)
   0074 B0*03         [ 3]  217 	sub	*(_qsort_sloc1_1_0 + 1)
   0076 C6r00r0C      [ 4]  218 	lda	_qsort_i_131072_42
   0079 B2*02         [ 3]  219 	sbc	*_qsort_sloc1_1_0
   007B 24 6B         [ 3]  220 	bcc	00112$
                            221 ;../qsort.c:57: for(unsigned char *j = i; (j > b) && (*compar)(j, j - size) < 0; j -= size)
   007D 32r00r0C      [ 5]  222 	ldhx	_qsort_i_131072_42
   0080                     223 00107$:
   0080 3Er00r0A      [ 6]  224 	cphx	_qsort_b_65536_41
   0083 23 54         [ 3]  225 	bls	00111$
   0085 9F            [ 1]  226 	txa
   0086 B0*01         [ 3]  227 	sub	*(_qsort_sloc0_1_0 + 1)
   0088 B7*05         [ 3]  228 	sta	*(_qsort_sloc2_1_0 + 1)
   008A 8B            [ 2]  229 	pshh
   008B 86            [ 3]  230 	pula
   008C B2*00         [ 3]  231 	sbc	*_qsort_sloc0_1_0
   008E B7*04         [ 3]  232 	sta	*_qsort_sloc2_1_0
   0090 4E*05*07      [ 6]  233 	mov	*(_qsort_sloc2_1_0 + 1),*(_qsort_sloc3_1_0 + 1)
   0093 4E*04*06      [ 6]  234 	mov	*_qsort_sloc2_1_0,*_qsort_sloc3_1_0
   0096 BF*09         [ 3]  235 	stx	*(_qsort_sloc4_1_0 + 1)
   0098 8B            [ 2]  236 	pshh
   0099 86            [ 3]  237 	pula
   009A B7*08         [ 3]  238 	sta	*_qsort_sloc4_1_0
   009C B6*07         [ 3]  239 	lda	*(_qsort_sloc3_1_0 + 1)
   009E 87            [ 2]  240 	psha
   009F B6*06         [ 3]  241 	lda	*_qsort_sloc3_1_0
   00A1 87            [ 2]  242 	psha
   00A2 AD 02         [ 5]  243 	bsr	00148$
   00A4 20 0D         [ 3]  244 	bra	00147$
   00A6                     245 00148$:
   00A6 C6r00r09      [ 4]  246 	lda	(_qsort_PARM_4 + 1)
   00A9 87            [ 2]  247 	psha
   00AA C6r00r08      [ 4]  248 	lda	_qsort_PARM_4
   00AD 87            [ 2]  249 	psha
   00AE B6*09         [ 3]  250 	lda	*(_qsort_sloc4_1_0 + 1)
   00B0 BE*08         [ 3]  251 	ldx	*_qsort_sloc4_1_0
   00B2 81            [ 6]  252 	rts
   00B3                     253 00147$:
   00B3 A7 02         [ 2]  254 	ais	#2
   00B5 9F            [ 1]  255 	txa
   00B6 A0 00         [ 2]  256 	sub	#0x00
   00B8 90 1F         [ 3]  257 	bge	00111$
                            258 ;../qsort.c:58: swap(j, j - size, size);
   00BA BE*04         [ 3]  259 	ldx	*_qsort_sloc2_1_0
   00BC B6*05         [ 3]  260 	lda	*(_qsort_sloc2_1_0 + 1)
   00BE C7r00r01      [ 4]  261 	sta	(_swap_PARM_2 + 1)
   00C1 CFr00r00      [ 4]  262 	stx	_swap_PARM_2
   00C4 B6*00         [ 3]  263 	lda	*_qsort_sloc0_1_0
   00C6 C7r00r02      [ 4]  264 	sta	_swap_PARM_3
   00C9 B6*01         [ 3]  265 	lda	*(_qsort_sloc0_1_0 + 1)
   00CB C7r00r03      [ 4]  266 	sta	(_swap_PARM_3 + 1)
   00CE B6*09         [ 3]  267 	lda	*(_qsort_sloc4_1_0 + 1)
   00D0 BE*08         [ 3]  268 	ldx	*_qsort_sloc4_1_0
   00D2 CDr00r00      [ 6]  269 	jsr	_swap
                            270 ;../qsort.c:57: for(unsigned char *j = i; (j > b) && (*compar)(j, j - size) < 0; j -= size)
   00D5 55*04         [ 4]  271 	ldhx	*_qsort_sloc2_1_0
   00D7 20 A7         [ 3]  272 	bra	00107$
   00D9                     273 00111$:
                            274 ;../qsort.c:55: for(unsigned char *i = base; i < b + nmemb * size; i += size)
   00D9 45r00r0C      [ 3]  275 	ldhx	#_qsort_i_131072_42
   00DC B6*01         [ 3]  276 	lda	*(_qsort_sloc0_1_0 + 1)
   00DE EB 01         [ 3]  277 	add	1,x
   00E0 E7 01         [ 3]  278 	sta	1,x
   00E2 B6*00         [ 3]  279 	lda	*_qsort_sloc0_1_0
   00E4 F9            [ 3]  280 	adc	,x
   00E5 F7            [ 2]  281 	sta	,x
   00E6 20 89         [ 3]  282 	bra	00110$
   00E8                     283 00112$:
                            284 ;../qsort.c:60: }
   00E8 81            [ 6]  285 	rts
                            286 	.area CSEG    (CODE)
                            287 	.area CONST   (CODE)
                            288 	.area XINIT   (CODE)
                            289 	.area CABS    (ABS,CODE)
