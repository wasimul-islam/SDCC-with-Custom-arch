                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.cs08
                              6 	.module _strncat
                              7 	.optsdcc -ms08
                              8 	
                              9 	.area HOME    (CODE)
                             10 	.area GSINIT0 (CODE)
                             11 	.area GSINIT  (CODE)
                             12 	.area GSFINAL (CODE)
                             13 	.area CSEG    (CODE)
                             14 	.area XINIT   (CODE)
                             15 	.area CONST   (CODE)
                             16 	.area DSEG    (PAG)
                             17 	.area OSEG    (PAG, OVR)
                             18 	.area XSEG
                             19 	.area XISEG
                             20 ;--------------------------------------------------------
                             21 ; Public variables in this module
                             22 ;--------------------------------------------------------
                             23 	.globl _strncat_PARM_3
                             24 	.globl _strncat_PARM_2
                             25 	.globl _strncat
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _strncat_sloc0_1_0:
   0000                      35 	.ds 2
   0002                      36 _strncat_sloc1_1_0:
   0002                      37 	.ds 2
   0004                      38 _strncat_sloc2_1_0:
   0004                      39 	.ds 2
                             40 ;--------------------------------------------------------
                             41 ; absolute ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS)
                             44 	.area IABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; absolute external ram data
                             47 ;--------------------------------------------------------
                             48 	.area XABS    (ABS)
                             49 ;--------------------------------------------------------
                             50 ; initialized external ram data
                             51 ;--------------------------------------------------------
                             52 	.area XISEG
                             53 ;--------------------------------------------------------
                             54 ; extended address mode data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG
   0000                      57 _strncat_PARM_2:
   0000                      58 	.ds 2
   0002                      59 _strncat_PARM_3:
   0002                      60 	.ds 2
   0004                      61 _strncat_front_65536_26:
   0004                      62 	.ds 2
   0006                      63 _strncat_start_65536_27:
   0006                      64 	.ds 2
                             65 ;--------------------------------------------------------
                             66 ; global & static initialisations
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT  (CODE)
                             70 	.area GSFINAL (CODE)
                             71 	.area GSINIT  (CODE)
                             72 ;--------------------------------------------------------
                             73 ; Home
                             74 ;--------------------------------------------------------
                             75 	.area HOME    (CODE)
                             76 	.area HOME    (CODE)
                             77 ;--------------------------------------------------------
                             78 ; code
                             79 ;--------------------------------------------------------
                             80 	.area CSEG    (CODE)
                             81 ;------------------------------------------------------------
                             82 ;Allocation info for local variables in function 'strncat'
                             83 ;------------------------------------------------------------
                             84 ;back                      Allocated with name '_strncat_PARM_2'
                             85 ;count                     Allocated with name '_strncat_PARM_3'
                             86 ;front                     Allocated with name '_strncat_front_65536_26'
                             87 ;start                     Allocated with name '_strncat_start_65536_27'
                             88 ;sloc0                     Allocated with name '_strncat_sloc0_1_0'
                             89 ;sloc1                     Allocated with name '_strncat_sloc1_1_0'
                             90 ;sloc2                     Allocated with name '_strncat_sloc2_1_0'
                             91 ;------------------------------------------------------------
                             92 ;../_strncat.c:31: char * strncat ( char * front, const char * back, size_t count )
                             93 ;	-----------------------------------------
                             94 ;	 function strncat
                             95 ;	-----------------------------------------
                             96 ;	Register assignment is optimal.
                             97 ;	Stack space usage: 0 bytes.
   0000                      98 _strncat:
   0000 89            [ 2]   99 	pshx
   0001 97            [ 1]  100 	tax
   0002 8A            [ 3]  101 	pulh
                            102 ;../_strncat.c:33: char *start = front;
   0003 96r00r06      [ 5]  103 	sthx	_strncat_start_65536_27
                            104 ;../_strncat.c:35: while (*front++);
   0006                     105 00101$:
   0006 F6            [ 3]  106 	lda	,x
   0007 AF 01         [ 2]  107 	aix	#1
   0009 4D            [ 1]  108 	tsta
   000A 26 FA         [ 3]  109 	bne	00101$
                            110 ;../_strncat.c:37: front--;
   000C AF FF         [ 2]  111 	aix	#-1
   000E 96r00r04      [ 5]  112 	sthx	_strncat_front_65536_26
                            113 ;../_strncat.c:39: while (count--)
   0011 32r00r00      [ 5]  114 	ldhx	_strncat_PARM_2
   0014 35*00         [ 4]  115 	sthx	*_strncat_sloc0_1_0
   0016 32r00r04      [ 5]  116 	ldhx	_strncat_front_65536_26
   0019 35*02         [ 4]  117 	sthx	*_strncat_sloc1_1_0
   001B 32r00r02      [ 5]  118 	ldhx	_strncat_PARM_3
   001E                     119 00106$:
   001E 35*04         [ 4]  120 	sthx	*_strncat_sloc2_1_0
   0020 AF FF         [ 2]  121 	aix	#-1
   0022 B6*05         [ 3]  122 	lda	*(_strncat_sloc2_1_0 + 1)
   0024 BA*04         [ 3]  123 	ora	*_strncat_sloc2_1_0
   0026 27 2C         [ 3]  124 	beq	00108$
                            125 ;../_strncat.c:40: if (!(*front++ = *back++))
   0028 89            [ 2]  126 	pshx
   0029 8B            [ 2]  127 	pshh
   002A 55*00         [ 4]  128 	ldhx	*_strncat_sloc0_1_0
   002C F6            [ 3]  129 	lda	,x
   002D AF 01         [ 2]  130 	aix	#1
   002F 35*00         [ 4]  131 	sthx	*_strncat_sloc0_1_0
   0031 8A            [ 3]  132 	pulh
   0032 88            [ 3]  133 	pulx
   0033 89            [ 2]  134 	pshx
   0034 8B            [ 2]  135 	pshh
   0035 55*02         [ 4]  136 	ldhx	*_strncat_sloc1_1_0
   0037 F7            [ 2]  137 	sta	,x
   0038 AF 01         [ 2]  138 	aix	#1
   003A 35*02         [ 4]  139 	sthx	*_strncat_sloc1_1_0
   003C 8A            [ 3]  140 	pulh
   003D 88            [ 3]  141 	pulx
   003E 87            [ 2]  142 	psha
   003F B6*02         [ 3]  143 	lda	*_strncat_sloc1_1_0
   0041 C7r00r04      [ 4]  144 	sta	_strncat_front_65536_26
   0044 B6*03         [ 3]  145 	lda	*(_strncat_sloc1_1_0 + 1)
   0046 C7r00r05      [ 4]  146 	sta	(_strncat_front_65536_26 + 1)
   0049 86            [ 3]  147 	pula
   004A 4D            [ 1]  148 	tsta
   004B 26 D1         [ 3]  149 	bne	00106$
                            150 ;../_strncat.c:41: return(start);
   004D CEr00r06      [ 4]  151 	ldx	_strncat_start_65536_27
   0050 C6r00r07      [ 4]  152 	lda	(_strncat_start_65536_27 + 1)
   0053 81            [ 6]  153 	rts
   0054                     154 00108$:
                            155 ;../_strncat.c:43: *front = '\0';
   0054 32r00r04      [ 5]  156 	ldhx	_strncat_front_65536_26
   0057 4F            [ 1]  157 	clra
   0058 F7            [ 2]  158 	sta	,x
                            159 ;../_strncat.c:44: return(start);
   0059 CEr00r06      [ 4]  160 	ldx	_strncat_start_65536_27
   005C C6r00r07      [ 4]  161 	lda	(_strncat_start_65536_27 + 1)
                            162 ;../_strncat.c:45: }
   005F 81            [ 6]  163 	rts
                            164 	.area CSEG    (CODE)
                            165 	.area CONST   (CODE)
                            166 	.area XINIT   (CODE)
                            167 	.area CABS    (ABS,CODE)
