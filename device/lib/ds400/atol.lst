                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atol
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _atol
                                     35 ;--------------------------------------------------------
                                     36 ; special function registers
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; special function bits
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable register banks
                                     43 ;--------------------------------------------------------
                                     44 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         45 	.ds 8
                                     46 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 ;--------------------------------------------------------
                                     49 ; internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area DSEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; overlayable items in internal ram
                                     54 ;--------------------------------------------------------
                                     55 ;--------------------------------------------------------
                                     56 ; indirectly addressable internal ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area ISEG    (DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute internal ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area IABS    (ABS,DATA)
                                     63 	.area IABS    (ABS,DATA)
                                     64 ;--------------------------------------------------------
                                     65 ; bit data
                                     66 ;--------------------------------------------------------
                                     67 	.area BSEG    (BIT)
      000000                         68 _atol_sloc1_1_0:
      000000                         69 	.ds 1
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _atol_nptr_65536_56:
      000000                         79 	.ds 4
      000004                         80 _atol_neg_65536_57:
      000004                         81 	.ds 1
      000005                         82 _atol_sloc0_1_0:
      000005                         83 	.ds 1
      000006                         84 _atol_sloc2_1_0:
      000006                         85 	.ds 4
      00000A                         86 _atol_sloc3_1_0:
      00000A                         87 	.ds 4
                                     88 ;--------------------------------------------------------
                                     89 ; absolute external ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area XABS    (ABS,XDATA)
                                     92 ;--------------------------------------------------------
                                     93 ; initialized external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area XISEG   (XDATA)
                                     96 ;--------------------------------------------------------
                                     97 ; global & static initialisations
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area GSINIT  (CODE)
                                    101 	.area GSFINAL (CODE)
                                    102 	.area GSINIT  (CODE)
                                    103 ;--------------------------------------------------------
                                    104 ; Home
                                    105 ;--------------------------------------------------------
                                    106 	.area HOME    (CODE)
                                    107 	.area HOME    (CODE)
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CSEG    (CODE)
                                    112 ;------------------------------------------------------------
                                    113 ;Allocation info for local variables in function 'atol'
                                    114 ;------------------------------------------------------------
                                    115 ;nptr                      Allocated with name '_atol_nptr_65536_56'
                                    116 ;__1310720007              Allocated to registers 
                                    117 ;__1310720004              Allocated to registers 
                                    118 ;ret                       Allocated to registers r6 r7 r0 r1 
                                    119 ;neg                       Allocated with name '_atol_neg_65536_57'
                                    120 ;__1310720005              Allocated to registers 
                                    121 ;c                         Allocated to registers 
                                    122 ;__1310720008              Allocated to registers 
                                    123 ;c                         Allocated to registers 
                                    124 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                                    125 ;sloc2                     Allocated with name '_atol_sloc2_1_0'
                                    126 ;sloc3                     Allocated with name '_atol_sloc3_1_0'
                                    127 ;------------------------------------------------------------
                                    128 ;	atol.c:34: long int atol(const char *nptr)
                                    129 ;	-----------------------------------------
                                    130 ;	 function atol
                                    131 ;	-----------------------------------------
      000000                        132 _atol:
                           000002   133 	ar2 = 0x02
                           000003   134 	ar3 = 0x03
                           000004   135 	ar4 = 0x04
                           000005   136 	ar5 = 0x05
                           000006   137 	ar6 = 0x06
                           000007   138 	ar7 = 0x07
                           000000   139 	ar0 = 0x00
                           000001   140 	ar1 = 0x01
      000000 AA 82            [ 8]  141 	mov	r2,dpl
      000002 AB 83            [ 8]  142 	mov	r3,dph
      000004 AC 93            [ 8]  143 	mov	r4,dpx
      000006 AD F0            [ 8]  144 	mov	r5,b
                                    145 ;	atol.c:36: long int ret = 0;
                                    146 ;	genAssign: resultIsFar = TRUE
      000008 7E 00            [ 8]  147 	mov	r6,#0x00
      00000A 7F 00            [ 8]  148 	mov	r7,#0x00
      00000C 78 00            [ 8]  149 	mov	r0,#0x00
      00000E 79 00            [ 8]  150 	mov	r1,#0x00
                                    151 ;	atol.c:39: while (isblank (*nptr))
      000010                        152 00101$:
      000010 C0 06            [ 8]  153 	push	ar6
      000012 C0 07            [ 8]  154 	push	ar7
      000014 C0 00            [ 8]  155 	push	ar0
      000016 C0 01            [ 8]  156 	push	ar1
      000018 8A 82            [ 8]  157 	mov	dpl,r2
      00001A 8B 83            [ 8]  158 	mov	dph,r3
      00001C 8C 93            [ 8]  159 	mov	dpx,r4
      00001E 8D F0            [ 8]  160 	mov	b,r5
      000020 12s00r00r00      [16]  161 	lcall	__gptrget
      000024 FE               [ 4]  162 	mov  r6,a
      000025 90s00r00r05      [12]  163 	mov  dptr,#_atol_sloc0_1_0
      000029 F0               [ 8]  164 	movx @dptr,a
                                    165 ;	../../device/include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      00002A 90s00r00r05      [12]  166 	mov	dptr,#_atol_sloc0_1_0
      00002E E0               [ 8]  167 	movx	a,@dptr
      00002F B4 20 0A         [16]  168 	cjne	a,#0x20,00161$
      000032 D0 01            [ 8]  169 	pop	ar1
      000034 D0 00            [ 8]  170 	pop	ar0
      000036 D0 07            [ 8]  171 	pop	ar7
      000038 D0 06            [ 8]  172 	pop	ar6
      00003A 80 10            [12]  173 	sjmp 00115$
      00003C                        174 00161$:
      00003C D0 01            [ 8]  175 	pop	ar1
      00003E D0 00            [ 8]  176 	pop	ar0
      000040 D0 07            [ 8]  177 	pop	ar7
      000042 D0 06            [ 8]  178 	pop	ar6
      000044 90s00r00r05      [12]  179 	mov	dptr,#_atol_sloc0_1_0
      000048 E0               [ 8]  180 	movx	a,@dptr
      000049 B4 09 0B         [16]  181 	cjne a,#0x09,00131$
      00004C                        182 00163$:
      00004C                        183 00115$:
                                    184 ;	atol.c:40: nptr++;
      00004C 0A               [ 4]  185 	inc	r2
      00004D BA 00 05         [16]  186 	cjne	r2,#0x00,00164$
      000050 0B               [ 4]  187 	inc	r3
      000051 BB 00 01         [16]  188 	cjne	r3,#0x00,00164$
      000054 0C               [ 4]  189 	inc	r4
      000055                        190 00164$:
      000055 80 B9            [12]  191 	sjmp 00101$
      000057                        192 00131$:
                                    193 ;	genAssign: resultIsFar = TRUE
      000057 90s00r00r00      [12]  194 	mov	dptr,#_atol_nptr_65536_56
      00005B EA               [ 4]  195 	mov	a,r2
      00005C F0               [ 8]  196 	movx	@dptr,a
      00005D A3               [12]  197 	inc	dptr
      00005E EB               [ 4]  198 	mov	a,r3
      00005F F0               [ 8]  199 	movx	@dptr,a
      000060 A3               [12]  200 	inc	dptr
      000061 EC               [ 4]  201 	mov	a,r4
      000062 F0               [ 8]  202 	movx	@dptr,a
      000063 A3               [12]  203 	inc	dptr
      000064 ED               [ 4]  204 	mov	a,r5
      000065 F0               [ 8]  205 	movx	@dptr,a
                                    206 ;	atol.c:42: neg = (*nptr == '-');
      000066 8A 82            [ 8]  207 	mov	dpl,r2
      000068 8B 83            [ 8]  208 	mov	dph,r3
      00006A 8C 93            [ 8]  209 	mov	dpx,r4
      00006C 8D F0            [ 8]  210 	mov	b,r5
      00006E 12s00r00r00      [16]  211 	lcall	__gptrget
      000072 FA               [ 4]  212 	mov	r2,a
      000073 E4               [ 4]  213 	clr     a
      000074 BA 2D 01         [16]  214 	cjne    r2,#0x2d,00165$
      000077 04               [ 4]  215 	inc     a
      000078                        216 00165$:
      000078                        217 00166$:
      000078 90s00r00r04      [12]  218 	mov	dptr,#_atol_neg_65536_57
      00007C F0               [ 8]  219 	movx	@dptr,a
                                    220 ;	atol.c:44: if (*nptr == '-' || *nptr == '+')
      00007D BA 2D 02         [16]  221 	cjne	r2,#0x2d,00167$
      000080 80 03            [12]  222 	sjmp 00104$
      000082                        223 00167$:
      000082 BA 2B 15         [16]  224 	cjne r2,#0x2b,00129$
      000085                        225 00169$:
      000085                        226 00104$:
                                    227 ;	atol.c:45: nptr++;
      000085 90s00r00r00      [12]  228 	mov	dptr,#_atol_nptr_65536_56
      000089 E0               [ 8]  229 	movx	a,@dptr
      00008A 24 01            [ 8]  230 	add	a,#0x01
      00008C F0               [ 8]  231 	movx	@dptr,a
      00008D A3               [12]  232 	inc	dptr
      00008E E0               [ 8]  233 	movx	a,@dptr
      00008F 34 00            [ 8]  234 	addc	a,#0x00
      000091 F0               [ 8]  235 	movx	@dptr,a
      000092 A3               [12]  236 	inc	dptr
      000093 E0               [ 8]  237 	movx	a,@dptr
      000094 34 00            [ 8]  238 	addc	a,#0x00
      000096 F0               [ 8]  239 	movx	@dptr,a
      000097 A3               [12]  240 	inc	dptr
      000098 E0               [ 8]  241 	movx	a,@dptr
      000099 F0               [ 8]  242 	movx	@dptr,a
                                    243 ;	atol.c:47: while (isdigit (*nptr))
      00009A                        244 00129$:
      00009A 90s00r00r00      [12]  245 	mov	dptr,#_atol_nptr_65536_56
                                    246 ;	genAssign: resultIsFar = TRUE
      00009E 75 86 21         [12]  247 	mov	dps,#0x21
      0000A1 90s00r00r06      [12]  248 	mov	dptr,#_atol_sloc2_1_0
      0000A5 E0               [ 8]  249 	movx	a,@dptr
      0000A6 F0               [ 8]  250 	movx	@dptr,a
      0000A7 A3               [12]  251 	inc	dptr
      0000A8 A3               [12]  252 	inc	dptr
      0000A9 E0               [ 8]  253 	movx	a,@dptr
      0000AA F0               [ 8]  254 	movx	@dptr,a
      0000AB A3               [12]  255 	inc	dptr
      0000AC A3               [12]  256 	inc	dptr
      0000AD E0               [ 8]  257 	movx	a,@dptr
      0000AE F0               [ 8]  258 	movx	@dptr,a
      0000AF A3               [12]  259 	inc	dptr
      0000B0 A3               [12]  260 	inc	dptr
      0000B1 E0               [ 8]  261 	movx	a,@dptr
      0000B2 F0               [ 8]  262 	movx	@dptr,a
      0000B3 75 86 00         [12]  263 	mov	dps,#0
      0000B6                        264 00107$:
      0000B6 C0 06            [ 8]  265 	push	ar6
      0000B8 C0 07            [ 8]  266 	push	ar7
      0000BA C0 00            [ 8]  267 	push	ar0
      0000BC C0 01            [ 8]  268 	push	ar1
      0000BE 90s00r00r06      [12]  269 	mov	dptr,#_atol_sloc2_1_0
      0000C2 E0               [ 8]  270 	movx	a,@dptr
      0000C3 C0 E0            [ 8]  271 	push	acc
      0000C5 A3               [12]  272 	inc	dptr
      0000C6 E0               [ 8]  273 	movx	a,@dptr
      0000C7 C0 E0            [ 8]  274 	push	acc
      0000C9 A3               [12]  275 	inc	dptr
      0000CA E0               [ 8]  276 	movx	a,@dptr
      0000CB C0 E0            [ 8]  277 	push	acc
      0000CD A3               [12]  278 	inc	dptr
      0000CE E0               [ 8]  279 	movx	a,@dptr
      0000CF F5 F0            [ 8]  280 	mov	b,a
      0000D1 D0 93            [ 8]  281 	pop	dpx
      0000D3 D0 83            [ 8]  282 	pop	dph
      0000D5 D0 82            [ 8]  283 	pop	dpl
      0000D7 12s00r00r00      [16]  284 	lcall	__gptrget
      0000DB FE               [ 4]  285 	mov	r6,a
      0000DC 8E 02            [ 8]  286 	mov	ar2,r6
                                    287 ;	../../device/include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      0000DE BA 30 00         [16]  288 	cjne	r2,#0x30,00170$
      0000E1                        289 00170$:
      0000E1 92*00            [ 8]  290 	mov	_atol_sloc1_1_0,c
      0000E3 D0 01            [ 8]  291 	pop	ar1
      0000E5 D0 00            [ 8]  292 	pop	ar0
      0000E7 D0 07            [ 8]  293 	pop	ar7
      0000E9 D0 06            [ 8]  294 	pop	ar6
      0000EB 30*00 04         [12]  295 	jnb	_atol_sloc1_1_0,00171$
      0000EE 02s00r01r8B      [16]  296 	ljmp	00109$
      0000F2                        297 00171$:
      0000F2 C3               [ 4]  298 	clr	c
      0000F3 74 39            [ 8]  299 	mov	a,#0x39
      0000F5 9A               [ 4]  300 	subb	a,r2
      0000F6 92*00            [ 8]  301 	mov	_atol_sloc1_1_0,c
      0000F8 30*00 04         [12]  302 	jnb	_atol_sloc1_1_0,00172$
      0000FB 02s00r01r8B      [16]  303 	ljmp	00109$
      0000FF                        304 00172$:
                                    305 ;	atol.c:48: ret = ret * 10 + (*(nptr++) - '0');
                                    306 ;	genAssign: resultIsFar = TRUE
      0000FF 90s00r00r00      [12]  307 	mov	dptr,#__mullong_PARM_2
      000103 EE               [ 4]  308 	mov	a,r6
      000104 F0               [ 8]  309 	movx	@dptr,a
      000105 A3               [12]  310 	inc	dptr
      000106 EF               [ 4]  311 	mov	a,r7
      000107 F0               [ 8]  312 	movx	@dptr,a
      000108 A3               [12]  313 	inc	dptr
      000109 E8               [ 4]  314 	mov	a,r0
      00010A F0               [ 8]  315 	movx	@dptr,a
      00010B A3               [12]  316 	inc	dptr
      00010C E9               [ 4]  317 	mov	a,r1
      00010D F0               [ 8]  318 	movx	@dptr,a
      00010E 90 00 00 0A      [12]  319 	mov	dptr,#0x00000a
      000112 75 F0 00         [12]  320 	mov	b,#0x00
      000115 12s00r00r00      [16]  321 	lcall	__mullong
      000119 75 86 01         [12]  322 	mov     dps, #1
      00011C 90s00r00r0A      [12]  323 	mov     dptr, #_atol_sloc3_1_0
      000120 E5 82            [ 8]  324 	mov	a,dpl
      000122 F0               [ 8]  325 	movx	@dptr,a
      000123 A3               [12]  326 	inc	dptr
      000124 E5 83            [ 8]  327 	mov	a,dph
      000126 F0               [ 8]  328 	movx	@dptr,a
      000127 A3               [12]  329 	inc	dptr
      000128 E5 93            [ 8]  330 	mov	a,dpx
      00012A F0               [ 8]  331 	movx	@dptr,a
      00012B A3               [12]  332 	inc	dptr
      00012C E5 F0            [ 8]  333 	mov	a,b
      00012E F0               [ 8]  334 	movx	@dptr,a
      00012F 75 86 00         [12]  335 	mov	dps,#0
      000132 90s00r00r06      [12]  336 	mov	dptr,#_atol_sloc2_1_0
      000136 E0               [ 8]  337 	movx	a,@dptr
      000137 C0 E0            [ 8]  338 	push	acc
      000139 A3               [12]  339 	inc	dptr
      00013A E0               [ 8]  340 	movx	a,@dptr
      00013B C0 E0            [ 8]  341 	push	acc
      00013D A3               [12]  342 	inc	dptr
      00013E E0               [ 8]  343 	movx	a,@dptr
      00013F C0 E0            [ 8]  344 	push	acc
      000141 A3               [12]  345 	inc	dptr
      000142 E0               [ 8]  346 	movx	a,@dptr
      000143 F5 F0            [ 8]  347 	mov	b,a
      000145 D0 93            [ 8]  348 	pop	dpx
      000147 D0 83            [ 8]  349 	pop	dph
      000149 D0 82            [ 8]  350 	pop	dpl
      00014B 12s00r00r00      [16]  351 	lcall	__gptrget
      00014F FA               [ 4]  352 	mov	r2,a
      000150 90s00r00r06      [12]  353 	mov	dptr,#_atol_sloc2_1_0
      000154 E0               [ 8]  354 	movx	a,@dptr
      000155 24 01            [ 8]  355 	add	a,#0x01
      000157 F0               [ 8]  356 	movx	@dptr,a
      000158 A3               [12]  357 	inc	dptr
      000159 E0               [ 8]  358 	movx	a,@dptr
      00015A 34 00            [ 8]  359 	addc	a,#0x00
      00015C F0               [ 8]  360 	movx	@dptr,a
      00015D A3               [12]  361 	inc	dptr
      00015E E0               [ 8]  362 	movx	a,@dptr
      00015F 34 00            [ 8]  363 	addc	a,#0x00
      000161 F0               [ 8]  364 	movx	@dptr,a
      000162 A3               [12]  365 	inc	dptr
      000163 E0               [ 8]  366 	movx	a,@dptr
      000164 F0               [ 8]  367 	movx	@dptr,a
      000165 7B 00            [ 8]  368 	mov	r3,#0x00
      000167 EA               [ 4]  369 	mov	a,r2
      000168 24 D0            [ 8]  370 	add	a,#0xd0
      00016A FA               [ 4]  371 	mov	r2,a
      00016B EB               [ 4]  372 	mov	a,r3
      00016C 34 FF            [ 8]  373 	addc	a,#0xff
      00016E FB               [ 4]  374 	mov  r3,a
      00016F 33               [ 4]  375 	rlc	a
      000170 95 E0            [ 8]  376 	subb	a,acc
      000172 FC               [ 4]  377 	mov	r4,a
      000173 FD               [ 4]  378 	mov	r5,a
      000174 90s00r00r0A      [12]  379 	mov	dptr,#_atol_sloc3_1_0
      000178 E0               [ 8]  380 	movx	a,@dptr
      000179 2A               [ 4]  381 	add	a,r2
      00017A FE               [ 4]  382 	mov	r6,a
      00017B A3               [12]  383 	inc	dptr
      00017C E0               [ 8]  384 	movx	a,@dptr
      00017D 3B               [ 4]  385 	addc	a,r3
      00017E FF               [ 4]  386 	mov	r7,a
      00017F A3               [12]  387 	inc	dptr
      000180 E0               [ 8]  388 	movx	a,@dptr
      000181 3C               [ 4]  389 	addc	a,r4
      000182 F8               [ 4]  390 	mov	r0,a
      000183 A3               [12]  391 	inc	dptr
      000184 E0               [ 8]  392 	movx	a,@dptr
      000185 3D               [ 4]  393 	addc	a,r5
      000186 F9               [ 4]  394 	mov	r1,a
      000187 02s00r00rB6      [16]  395 	ljmp	00107$
      00018B                        396 00109$:
                                    397 ;	atol.c:50: return (neg ? -ret : ret); // Since -LONG_MIN is LONG_MIN in sdcc, the result value always turns out ok.
      00018B 90s00r00r04      [12]  398 	mov	dptr,#_atol_neg_65536_57
      00018F E0               [ 8]  399 	movx	a,@dptr
      000190 60 0F            [12]  400 	jz  00120$
      000192                        401 00173$:
      000192 C3               [ 4]  402 	clr	c
      000193 E4               [ 4]  403 	clr	a
      000194 9E               [ 4]  404 	subb	a,r6
      000195 FA               [ 4]  405 	mov	r2,a
      000196 E4               [ 4]  406 	clr	a
      000197 9F               [ 4]  407 	subb	a,r7
      000198 FB               [ 4]  408 	mov	r3,a
      000199 E4               [ 4]  409 	clr	a
      00019A 98               [ 4]  410 	subb	a,r0
      00019B FC               [ 4]  411 	mov	r4,a
      00019C E4               [ 4]  412 	clr	a
      00019D 99               [ 4]  413 	subb	a,r1
      00019E FD               [ 4]  414 	mov	r5,a
      00019F 80 08            [12]  415 	sjmp 00121$
      0001A1                        416 00120$:
                                    417 ;	genAssign: resultIsFar = FALSE
      0001A1 8E 02            [ 8]  418 	mov	ar2,r6
      0001A3 8F 03            [ 8]  419 	mov	ar3,r7
      0001A5 88 04            [ 8]  420 	mov	ar4,r0
      0001A7 89 05            [ 8]  421 	mov	ar5,r1
      0001A9                        422 00121$:
      0001A9 8A 82            [ 8]  423 	mov	dpl,r2
      0001AB 8B 83            [ 8]  424 	mov	dph,r3
      0001AD 8C 93            [ 8]  425 	mov	dpx,r4
      0001AF 8D F0            [ 8]  426 	mov	b,r5
      0001B1                        427 00112$:
                                    428 ;	atol.c:51: }
      0001B1 22               [16]  429 	ret
                                    430 	.area CSEG    (CODE)
                                    431 	.area CONST   (CODE)
                                    432 	.area XINIT   (CODE)
                                    433 	.area CABS    (ABS,CODE)
