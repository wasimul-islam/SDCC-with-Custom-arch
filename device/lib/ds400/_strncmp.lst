                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncmp
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strncmp_PARM_3
                                     35 	.globl _strncmp_PARM_2
                                     36 	.globl _strncmp
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _strncmp_PARM_2:
      000000                         79 	.ds 4
      000004                         80 _strncmp_PARM_3:
      000004                         81 	.ds 2
      000006                         82 _strncmp_sloc0_1_0:
      000006                         83 	.ds 2
      000008                         84 _strncmp_sloc1_1_0:
      000008                         85 	.ds 1
                                     86 ;--------------------------------------------------------
                                     87 ; absolute external ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area XABS    (ABS,XDATA)
                                     90 ;--------------------------------------------------------
                                     91 ; initialized external ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area XISEG   (XDATA)
                                     94 ;--------------------------------------------------------
                                     95 ; global & static initialisations
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 	.area GSFINAL (CODE)
                                    100 	.area GSINIT  (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; Home
                                    103 ;--------------------------------------------------------
                                    104 	.area HOME    (CODE)
                                    105 	.area HOME    (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; code
                                    108 ;--------------------------------------------------------
                                    109 	.area CSEG    (CODE)
                                    110 ;------------------------------------------------------------
                                    111 ;Allocation info for local variables in function 'strncmp'
                                    112 ;------------------------------------------------------------
                                    113 ;last                      Allocated with name '_strncmp_PARM_2'
                                    114 ;count                     Allocated with name '_strncmp_PARM_3'
                                    115 ;first                     Allocated to registers r2 r3 r4 r5 
                                    116 ;sloc0                     Allocated with name '_strncmp_sloc0_1_0'
                                    117 ;sloc1                     Allocated with name '_strncmp_sloc1_1_0'
                                    118 ;------------------------------------------------------------
                                    119 ;	_strncmp.c:31: int strncmp ( const char * first, const char * last, size_t count )
                                    120 ;	-----------------------------------------
                                    121 ;	 function strncmp
                                    122 ;	-----------------------------------------
      000000                        123 _strncmp:
                           000002   124 	ar2 = 0x02
                           000003   125 	ar3 = 0x03
                           000004   126 	ar4 = 0x04
                           000005   127 	ar5 = 0x05
                           000006   128 	ar6 = 0x06
                           000007   129 	ar7 = 0x07
                           000000   130 	ar0 = 0x00
                           000001   131 	ar1 = 0x01
      000000 AA 82            [ 8]  132 	mov	r2,dpl
      000002 AB 83            [ 8]  133 	mov	r3,dph
      000004 AC 93            [ 8]  134 	mov	r4,dpx
      000006 AD F0            [ 8]  135 	mov	r5,b
                                    136 ;	_strncmp.c:33: if (!count)
      000008 90s00r00r04      [12]  137 	mov	dptr,#_strncmp_PARM_3
      00000C E0               [ 8]  138 	movx	a,@dptr
      00000D F5 F0            [ 8]  139 	mov	b,a
      00000F A3               [12]  140 	inc	dptr
      000010 E0               [ 8]  141 	movx	a,@dptr
      000011 45 F0            [ 8]  142 	orl	a,b
      000013 70 08            [12]  143 	jnz  00114$
      000015                        144 00131$:
                                    145 ;	_strncmp.c:34: return(0);
      000015 90 00 00 00      [12]  146 	mov  dptr,#0x0000
      000019 02s00r00rEB      [16]  147 	ljmp	00108$
                                    148 ;	_strncmp.c:36: while (--count && *first && *first == *last) {
      00001D                        149 00114$:
                                    150 ;	genAssign: resultIsFar = FALSE
      00001D 90s00r00r00      [12]  151 	mov	dptr,#_strncmp_PARM_2
                                    152 ;	genAssign: resultIsFar = FALSE
      000021 E0               [ 8]  153 	movx	a,@dptr
      000022 FE               [ 4]  154 	mov	r6,a
      000023 A3               [12]  155 	inc	dptr
      000024 E0               [ 8]  156 	movx	a,@dptr
      000025 FF               [ 4]  157 	mov	r7,a
      000026 A3               [12]  158 	inc	dptr
      000027 E0               [ 8]  159 	movx	a,@dptr
      000028 F8               [ 4]  160 	mov	r0,a
      000029 A3               [12]  161 	inc	dptr
      00002A E0               [ 8]  162 	movx	a,@dptr
      00002B F9               [ 4]  163 	mov	r1,a
      00002C 90s00r00r04      [12]  164 	mov	dptr,#_strncmp_PARM_3
                                    165 ;	genAssign: resultIsFar = TRUE
      000030 75 86 21         [12]  166 	mov	dps,#0x21
      000033 90s00r00r06      [12]  167 	mov	dptr,#_strncmp_sloc0_1_0
      000037 E0               [ 8]  168 	movx	a,@dptr
      000038 F0               [ 8]  169 	movx	@dptr,a
      000039 A3               [12]  170 	inc	dptr
      00003A A3               [12]  171 	inc	dptr
      00003B E0               [ 8]  172 	movx	a,@dptr
      00003C F0               [ 8]  173 	movx	@dptr,a
      00003D 75 86 00         [12]  174 	mov	dps,#0
      000040                        175 00105$:
      000040 90s00r00r06      [12]  176 	mov	dptr,#_strncmp_sloc0_1_0
      000044 E0               [ 8]  177 	movx	a,@dptr
      000045 24 FF            [ 8]  178 	add	a,#0xff
      000047 F0               [ 8]  179 	movx	@dptr,a
      000048 A3               [12]  180 	inc	dptr
      000049 E0               [ 8]  181 	movx	a,@dptr
      00004A 34 FF            [ 8]  182 	addc	a,#0xff
      00004C F0               [ 8]  183 	movx	@dptr,a
      00004D 90s00r00r06      [12]  184 	mov	dptr,#_strncmp_sloc0_1_0
      000051 E0               [ 8]  185 	movx	a,@dptr
      000052 F5 F0            [ 8]  186 	mov	b,a
      000054 A3               [12]  187 	inc	dptr
      000055 E0               [ 8]  188 	movx	a,@dptr
      000056 45 F0            [ 8]  189 	orl	a,b
      000058 60 6A            [12]  190 	jz  00107$
      00005A                        191 00132$:
      00005A 8A 82            [ 8]  192 	mov	dpl,r2
      00005C 8B 83            [ 8]  193 	mov	dph,r3
      00005E 8C 93            [ 8]  194 	mov	dpx,r4
      000060 8D F0            [ 8]  195 	mov	b,r5
      000062 75 86 01         [12]  196 	mov	dps, #1
      000065 90s00r00r08      [12]  197 	mov	dptr, #_strncmp_sloc1_1_0
      000069 15 86            [ 8]  198 	dec	dps
      00006B 12s00r00r00      [16]  199 	lcall	__gptrget
      00006F 75 86 01         [12]  200 	mov	dps,#1
      000072 F0               [ 8]  201 	movx	@dptr,a
      000073 75 86 00         [12]  202 	mov	dps,#0
      000076 90s00r00r08      [12]  203 	mov	dptr,#_strncmp_sloc1_1_0
      00007A E0               [ 8]  204 	movx	a,@dptr
      00007B 60 47            [12]  205 	jz  00107$
      00007D                        206 00133$:
      00007D C0 02            [ 8]  207 	push	ar2
      00007F C0 03            [ 8]  208 	push	ar3
      000081 C0 04            [ 8]  209 	push	ar4
      000083 C0 05            [ 8]  210 	push	ar5
      000085 8E 82            [ 8]  211 	mov	dpl,r6
      000087 8F 83            [ 8]  212 	mov	dph,r7
      000089 88 93            [ 8]  213 	mov	dpx,r0
      00008B 89 F0            [ 8]  214 	mov	b,r1
      00008D 12s00r00r00      [16]  215 	lcall	__gptrget
      000091 FA               [ 4]  216 	mov	r2,a
      000092 90s00r00r08      [12]  217 	mov	dptr,#_strncmp_sloc1_1_0
      000096 E0               [ 8]  218 	movx	a,@dptr
      000097 B5 02 02         [16]  219 	cjne	a,ar2,00134$
      00009A 80 0A            [12]  220 	sjmp	00135$
      00009C                        221 00134$:
      00009C D0 05            [ 8]  222 	pop	ar5
      00009E D0 04            [ 8]  223 	pop	ar4
      0000A0 D0 03            [ 8]  224 	pop	ar3
      0000A2 D0 02            [ 8]  225 	pop	ar2
      0000A4 80 1E            [12]  226 	sjmp 00107$
      0000A6                        227 00135$:
      0000A6 D0 05            [ 8]  228 	pop	ar5
      0000A8 D0 04            [ 8]  229 	pop	ar4
      0000AA D0 03            [ 8]  230 	pop	ar3
      0000AC D0 02            [ 8]  231 	pop	ar2
                                    232 ;	_strncmp.c:37: first++;
      0000AE 0A               [ 4]  233 	inc	r2
      0000AF BA 00 05         [16]  234 	cjne	r2,#0x00,00136$
      0000B2 0B               [ 4]  235 	inc	r3
      0000B3 BB 00 01         [16]  236 	cjne	r3,#0x00,00136$
      0000B6 0C               [ 4]  237 	inc	r4
      0000B7                        238 00136$:
                                    239 ;	_strncmp.c:38: last++;
      0000B7 0E               [ 4]  240 	inc	r6
      0000B8 BE 00 05         [16]  241 	cjne	r6,#0x00,00137$
      0000BB 0F               [ 4]  242 	inc	r7
      0000BC BF 00 01         [16]  243 	cjne	r7,#0x00,00137$
      0000BF 08               [ 4]  244 	inc	r0
      0000C0                        245 00137$:
      0000C0 02s00r00r40      [16]  246 	ljmp	00105$
      0000C4                        247 00107$:
                                    248 ;	_strncmp.c:41: return( *first - *last );
      0000C4 8A 82            [ 8]  249 	mov	dpl,r2
      0000C6 8B 83            [ 8]  250 	mov	dph,r3
      0000C8 8C 93            [ 8]  251 	mov	dpx,r4
      0000CA 8D F0            [ 8]  252 	mov	b,r5
      0000CC 12s00r00r00      [16]  253 	lcall	__gptrget
      0000D0 FA               [ 4]  254 	mov	r2,a
      0000D1 7B 00            [ 8]  255 	mov	r3,#0x00
      0000D3 8E 82            [ 8]  256 	mov	dpl,r6
      0000D5 8F 83            [ 8]  257 	mov	dph,r7
      0000D7 88 93            [ 8]  258 	mov	dpx,r0
      0000D9 89 F0            [ 8]  259 	mov	b,r1
      0000DB 12s00r00r00      [16]  260 	lcall	__gptrget
      0000DF FE               [ 4]  261 	mov	r6,a
      0000E0 7C 00            [ 8]  262 	mov	r4,#0x00
      0000E2 C3               [ 4]  263 	clr	c
      0000E3 EA               [ 4]  264 	mov	a,r2
      0000E4 9E               [ 4]  265 	subb	a,r6
      0000E5 F5 82            [ 8]  266 	mov	dpl,a
      0000E7 EB               [ 4]  267 	mov	a,r3
      0000E8 9C               [ 4]  268 	subb	a,r4
      0000E9 F5 83            [ 8]  269 	mov	dph,a
      0000EB                        270 00108$:
                                    271 ;	_strncmp.c:42: }
      0000EB 22               [16]  272 	ret
                                    273 	.area CSEG    (CODE)
                                    274 	.area CONST   (CODE)
                                    275 	.area XINIT   (CODE)
                                    276 	.area CABS    (ABS,CODE)
