                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbstowcs
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _mbtowc
                                     35 	.globl _mbstowcs_PARM_3
                                     36 	.globl _mbstowcs_PARM_2
                                     37 	.globl _mbstowcs
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         50 	.ds 8
                                     51 ;--------------------------------------------------------
                                     52 ; internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DSEG    (DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; overlayable items in internal ram
                                     57 ;--------------------------------------------------------
                                     58 ;--------------------------------------------------------
                                     59 ; indirectly addressable internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area ISEG    (DATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute internal ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area IABS    (ABS,DATA)
                                     66 	.area IABS    (ABS,DATA)
                                     67 ;--------------------------------------------------------
                                     68 ; bit data
                                     69 ;--------------------------------------------------------
                                     70 	.area BSEG    (BIT)
                                     71 ;--------------------------------------------------------
                                     72 ; paged external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area PSEG    (PAG,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; uninitialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XSEG    (XDATA)
      000000                         79 _mbstowcs_PARM_2:
      000000                         80 	.ds 4
      000004                         81 _mbstowcs_PARM_3:
      000004                         82 	.ds 2
      000006                         83 _mbstowcs_m_65536_37:
      000006                         84 	.ds 2
      000008                         85 _mbstowcs_sloc0_1_0:
      000008                         86 	.ds 2
      00000A                         87 _mbstowcs_sloc1_1_0:
      00000A                         88 	.ds 4
                                     89 ;--------------------------------------------------------
                                     90 ; absolute external ram data
                                     91 ;--------------------------------------------------------
                                     92 	.area XABS    (ABS,XDATA)
                                     93 ;--------------------------------------------------------
                                     94 ; initialized external ram data
                                     95 ;--------------------------------------------------------
                                     96 	.area XISEG   (XDATA)
                                     97 ;--------------------------------------------------------
                                     98 ; global & static initialisations
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area GSINIT  (CODE)
                                    102 	.area GSFINAL (CODE)
                                    103 	.area GSINIT  (CODE)
                                    104 ;--------------------------------------------------------
                                    105 ; Home
                                    106 ;--------------------------------------------------------
                                    107 	.area HOME    (CODE)
                                    108 	.area HOME    (CODE)
                                    109 ;--------------------------------------------------------
                                    110 ; code
                                    111 ;--------------------------------------------------------
                                    112 	.area CSEG    (CODE)
                                    113 ;------------------------------------------------------------
                                    114 ;Allocation info for local variables in function 'mbstowcs'
                                    115 ;------------------------------------------------------------
                                    116 ;s                         Allocated with name '_mbstowcs_PARM_2'
                                    117 ;n                         Allocated with name '_mbstowcs_PARM_3'
                                    118 ;pwcs                      Allocated to registers 
                                    119 ;m                         Allocated with name '_mbstowcs_m_65536_37'
                                    120 ;b                         Allocated to registers r6 r7 
                                    121 ;sloc0                     Allocated with name '_mbstowcs_sloc0_1_0'
                                    122 ;sloc1                     Allocated with name '_mbstowcs_sloc1_1_0'
                                    123 ;------------------------------------------------------------
                                    124 ;	mbstowcs.c:33: size_t mbstowcs(wchar_t *restrict pwcs, const char *restrict s, size_t n)
                                    125 ;	-----------------------------------------
                                    126 ;	 function mbstowcs
                                    127 ;	-----------------------------------------
      000000                        128 _mbstowcs:
                           000002   129 	ar2 = 0x02
                           000003   130 	ar3 = 0x03
                           000004   131 	ar4 = 0x04
                           000005   132 	ar5 = 0x05
                           000006   133 	ar6 = 0x06
                           000007   134 	ar7 = 0x07
                           000000   135 	ar0 = 0x00
                           000001   136 	ar1 = 0x01
      000000 AA 82            [ 8]  137 	mov	r2,dpl
      000002 AB 83            [ 8]  138 	mov	r3,dph
      000004 AC 93            [ 8]  139 	mov	r4,dpx
      000006 AD F0            [ 8]  140 	mov	r5,b
                                    141 ;	mbstowcs.c:35: size_t m = 0;
                                    142 ;	genAssign: resultIsFar = TRUE
      000008 90s00r00r06      [12]  143 	mov	dptr,#_mbstowcs_m_65536_37
      00000C E4               [ 4]  144 	clr	a
      00000D F0               [ 8]  145 	movx	@dptr,a
      00000E A3               [12]  146 	inc	dptr
      00000F F0               [ 8]  147 	movx	@dptr,a
                                    148 ;	mbstowcs.c:36: while(n--)
                                    149 ;	genAssign: resultIsFar = FALSE
      000010 78 00            [ 8]  150 	mov	r0,#0x00
      000012 79 00            [ 8]  151 	mov	r1,#0x00
      000014 90s00r00r04      [12]  152 	mov	dptr,#_mbstowcs_PARM_3
                                    153 ;	genAssign: resultIsFar = TRUE
      000018 75 86 21         [12]  154 	mov	dps,#0x21
      00001B 90s00r00r08      [12]  155 	mov	dptr,#_mbstowcs_sloc0_1_0
      00001F E0               [ 8]  156 	movx	a,@dptr
      000020 F0               [ 8]  157 	movx	@dptr,a
      000021 A3               [12]  158 	inc	dptr
      000022 A3               [12]  159 	inc	dptr
      000023 E0               [ 8]  160 	movx	a,@dptr
      000024 F0               [ 8]  161 	movx	@dptr,a
      000025 75 86 00         [12]  162 	mov	dps,#0
      000028                        163 00105$:
      000028 90s00r00r08      [12]  164 	mov	dptr,#_mbstowcs_sloc0_1_0
                                    165 ;	genAssign: resultIsFar = FALSE
      00002C E0               [ 8]  166 	movx	a,@dptr
      00002D FE               [ 4]  167 	mov	r6,a
      00002E A3               [12]  168 	inc	dptr
      00002F E0               [ 8]  169 	movx	a,@dptr
      000030 FF               [ 4]  170 	mov	r7,a
      000031 90s00r00r08      [12]  171 	mov	dptr,#_mbstowcs_sloc0_1_0
      000035 E0               [ 8]  172 	movx	a,@dptr
      000036 24 FF            [ 8]  173 	add	a,#0xff
      000038 F0               [ 8]  174 	movx	@dptr,a
      000039 A3               [12]  175 	inc	dptr
      00003A E0               [ 8]  176 	movx	a,@dptr
      00003B 34 FF            [ 8]  177 	addc	a,#0xff
      00003D F0               [ 8]  178 	movx	@dptr,a
      00003E EE               [ 4]  179 	mov	a,r6
      00003F 4F               [ 4]  180 	orl	a,r7
      000040 70 04            [12]  181 	jnz	00126$
      000042 02s00r01r54      [16]  182 	ljmp	00107$
      000046                        183 00126$:
                                    184 ;	mbstowcs.c:38: int b = mbtowc(pwcs++, s, MB_LEN_MAX);
      000046 C0 00            [ 8]  185 	push	ar0
      000048 C0 01            [ 8]  186 	push	ar1
                                    187 ;	genAssign: resultIsFar = TRUE
      00004A 90s00r00r0A      [12]  188 	mov	dptr,#_mbstowcs_sloc1_1_0
      00004E EA               [ 4]  189 	mov	a,r2
      00004F F0               [ 8]  190 	movx	@dptr,a
      000050 A3               [12]  191 	inc	dptr
      000051 EB               [ 4]  192 	mov	a,r3
      000052 F0               [ 8]  193 	movx	@dptr,a
      000053 A3               [12]  194 	inc	dptr
      000054 EC               [ 4]  195 	mov	a,r4
      000055 F0               [ 8]  196 	movx	@dptr,a
      000056 A3               [12]  197 	inc	dptr
      000057 ED               [ 4]  198 	mov	a,r5
      000058 F0               [ 8]  199 	movx	@dptr,a
      000059 74 04            [ 8]  200 	mov	a,#0x04
      00005B 2A               [ 4]  201 	add	a,r2
      00005C FA               [ 4]  202 	mov	r2,a
      00005D E4               [ 4]  203 	clr	a
      00005E 3B               [ 4]  204 	addc	a,r3
      00005F FB               [ 4]  205 	mov	r3,a
      000060 E4               [ 4]  206 	clr	a
      000061 3C               [ 4]  207 	addc	a,r4
      000062 FC               [ 4]  208 	mov	r4,a
      000063 90s00r00r00      [12]  209 	mov	dptr,#_mbstowcs_PARM_2
                                    210 ;	genAssign: resultIsFar = FALSE
      000067 E0               [ 8]  211 	movx	a,@dptr
      000068 FE               [ 4]  212 	mov	r6,a
      000069 A3               [12]  213 	inc	dptr
      00006A E0               [ 8]  214 	movx	a,@dptr
      00006B FF               [ 4]  215 	mov	r7,a
      00006C A3               [12]  216 	inc	dptr
      00006D E0               [ 8]  217 	movx	a,@dptr
      00006E F8               [ 4]  218 	mov	r0,a
      00006F A3               [12]  219 	inc	dptr
      000070 E0               [ 8]  220 	movx	a,@dptr
      000071 F9               [ 4]  221 	mov	r1,a
                                    222 ;	genAssign: resultIsFar = TRUE
      000072 90s00r00r00      [12]  223 	mov	dptr,#_mbtowc_PARM_2
      000076 EE               [ 4]  224 	mov	a,r6
      000077 F0               [ 8]  225 	movx	@dptr,a
      000078 A3               [12]  226 	inc	dptr
      000079 EF               [ 4]  227 	mov	a,r7
      00007A F0               [ 8]  228 	movx	@dptr,a
      00007B A3               [12]  229 	inc	dptr
      00007C E8               [ 4]  230 	mov	a,r0
      00007D F0               [ 8]  231 	movx	@dptr,a
      00007E A3               [12]  232 	inc	dptr
      00007F E9               [ 4]  233 	mov	a,r1
      000080 F0               [ 8]  234 	movx	@dptr,a
                                    235 ;	genAssign: resultIsFar = TRUE
      000081 90s00r00r00      [12]  236 	mov	dptr,#_mbtowc_PARM_3
      000085 74 04            [ 8]  237 	mov	a,#0x04
      000087 F0               [ 8]  238 	movx	@dptr,a
      000088 E4               [ 4]  239 	clr	a
      000089 A3               [12]  240 	inc	dptr
      00008A F0               [ 8]  241 	movx	@dptr,a
      00008B C0 02            [ 8]  242 	push	ar2
      00008D C0 03            [ 8]  243 	push	ar3
      00008F C0 04            [ 8]  244 	push	ar4
      000091 C0 05            [ 8]  245 	push	ar5
      000093 C0 00            [ 8]  246 	push	ar0
      000095 C0 01            [ 8]  247 	push	ar1
      000097 05 86            [ 8]  248 	inc	dps
      000099 90s00r00r0A      [12]  249 	mov	dptr,#_mbstowcs_sloc1_1_0
      00009D E0               [ 8]  250 	movx	a,@dptr
      00009E F5 82            [ 8]  251 	mov	dpl,a
      0000A0 A3               [12]  252 	inc	dptr
      0000A1 E0               [ 8]  253 	movx	a,@dptr
      0000A2 F5 83            [ 8]  254 	mov	dph,a
      0000A4 A3               [12]  255 	inc	dptr
      0000A5 E0               [ 8]  256 	movx	a,@dptr
      0000A6 F5 93            [ 8]  257 	mov	dpx,a
      0000A8 A3               [12]  258 	inc	dptr
      0000A9 E0               [ 8]  259 	movx	a,@dptr
      0000AA F5 F0            [ 8]  260 	mov	b,a
      0000AC 75 86 00         [12]  261 	mov	dps,#0
      0000AF 12s00r00r00      [16]  262 	lcall	_mbtowc
      0000B3 AE 82            [ 8]  263 	mov	r6,dpl
      0000B5 AF 83            [ 8]  264 	mov	r7,dph
      0000B7 D0 01            [ 8]  265 	pop	ar1
      0000B9 D0 00            [ 8]  266 	pop	ar0
      0000BB D0 05            [ 8]  267 	pop	ar5
      0000BD D0 04            [ 8]  268 	pop	ar4
      0000BF D0 03            [ 8]  269 	pop	ar3
      0000C1 D0 02            [ 8]  270 	pop	ar2
                                    271 ;	genAssign: resultIsFar = FALSE
                                    272 ;	mbstowcs.c:39: if(!b)
      0000C3 D0 01            [ 8]  273 	pop	ar1
      0000C5 D0 00            [ 8]  274 	pop	ar0
      0000C7 EE               [ 4]  275 	mov	a,r6
      0000C8 4F               [ 4]  276 	orl	a,r7
      0000C9 70 04            [12]  277 	jnz	00127$
      0000CB 02s00r01r54      [16]  278 	ljmp	00107$
      0000CF                        279 00127$:
                                    280 ;	mbstowcs.c:41: if(b < 0)
      0000CF EF               [ 4]  281 	mov	a,r7
      0000D0 30 E7 08         [12]  282 	jnb  acc[7],00104$
      0000D3                        283 00128$:
                                    284 ;	mbstowcs.c:42: return(-1);
      0000D3 90 00 FF FF      [12]  285 	mov  dptr,#0xffff
      0000D7 02s00r01r65      [16]  286 	ljmp	00108$
      0000DB                        287 00104$:
                                    288 ;	mbstowcs.c:43: s += b;
      0000DB C0 02            [ 8]  289 	push	ar2
      0000DD C0 03            [ 8]  290 	push	ar3
      0000DF C0 04            [ 8]  291 	push	ar4
      0000E1 C0 05            [ 8]  292 	push	ar5
      0000E3 90s00r00r00      [12]  293 	mov	dptr,#_mbstowcs_PARM_2
                                    294 ;	genAssign: resultIsFar = TRUE
      0000E7 75 86 21         [12]  295 	mov	dps,#0x21
      0000EA 90s00r00r0A      [12]  296 	mov	dptr,#_mbstowcs_sloc1_1_0
      0000EE E0               [ 8]  297 	movx	a,@dptr
      0000EF F0               [ 8]  298 	movx	@dptr,a
      0000F0 A3               [12]  299 	inc	dptr
      0000F1 A3               [12]  300 	inc	dptr
      0000F2 E0               [ 8]  301 	movx	a,@dptr
      0000F3 F0               [ 8]  302 	movx	@dptr,a
      0000F4 A3               [12]  303 	inc	dptr
      0000F5 A3               [12]  304 	inc	dptr
      0000F6 E0               [ 8]  305 	movx	a,@dptr
      0000F7 F0               [ 8]  306 	movx	@dptr,a
      0000F8 A3               [12]  307 	inc	dptr
      0000F9 A3               [12]  308 	inc	dptr
      0000FA E0               [ 8]  309 	movx	a,@dptr
      0000FB F0               [ 8]  310 	movx	@dptr,a
      0000FC 75 86 00         [12]  311 	mov	dps,#0
      0000FF 8E 04            [ 8]  312 	mov	ar4,r6
      000101 8F 05            [ 8]  313 	mov	ar5,r7
      000103 EF               [ 4]  314 	mov	a,r7
      000104 33               [ 4]  315 	rlc	a
      000105 95 E0            [ 8]  316 	subb	a,acc
      000107 FA               [ 4]  317 	mov	r2,a
      000108 FB               [ 4]  318 	mov	r3,a
      000109 90s00r00r0A      [12]  319 	mov	dptr,#_mbstowcs_sloc1_1_0
      00010D 75 86 01         [12]  320 	mov	dps, #1
      000110 90s00r00r00      [12]  321 	mov	dptr, #_mbstowcs_PARM_2
      000114 15 86            [ 8]  322 	dec	dps
      000116 E0               [ 8]  323 	movx	a,@dptr
      000117 2C               [ 4]  324 	add	a,r4
      000118 05 86            [ 8]  325 	inc	dps
      00011A F0               [ 8]  326 	movx	@dptr,a
      00011B 15 86            [ 8]  327 	dec	dps
      00011D A3               [12]  328 	inc	dptr
      00011E E0               [ 8]  329 	movx	a,@dptr
      00011F 3D               [ 4]  330 	addc	a,r5
      000120 05 86            [ 8]  331 	inc	dps
      000122 A3               [12]  332 	inc	dptr
      000123 F0               [ 8]  333 	movx	@dptr,a
      000124 15 86            [ 8]  334 	dec	dps
      000126 A3               [12]  335 	inc	dptr
      000127 E0               [ 8]  336 	movx	a,@dptr
      000128 3A               [ 4]  337 	addc	a,r2
      000129 05 86            [ 8]  338 	inc	dps
      00012B A3               [12]  339 	inc	dptr
      00012C F0               [ 8]  340 	movx	@dptr,a
      00012D 75 86 00         [12]  341 	mov	dps,#0
      000130 A3               [12]  342 	inc	dptr
      000131 E0               [ 8]  343 	movx	a,@dptr
      000132 75 86 01         [12]  344 	mov	dps,#1
      000135 A3               [12]  345 	inc	dptr
      000136 F0               [ 8]  346 	movx	@dptr,a
      000137 75 86 00         [12]  347 	mov	dps,#0
                                    348 ;	mbstowcs.c:44: m++;
      00013A 08               [ 4]  349 	inc	r0
      00013B B8 00 01         [16]  350 	cjne	r0,#0x00,00129$
      00013E 09               [ 4]  351 	inc	r1
      00013F                        352 00129$:
                                    353 ;	genAssign: resultIsFar = TRUE
      00013F 90s00r00r06      [12]  354 	mov	dptr,#_mbstowcs_m_65536_37
      000143 E8               [ 4]  355 	mov	a,r0
      000144 F0               [ 8]  356 	movx	@dptr,a
      000145 A3               [12]  357 	inc	dptr
      000146 E9               [ 4]  358 	mov	a,r1
      000147 F0               [ 8]  359 	movx	@dptr,a
      000148 D0 05            [ 8]  360 	pop	ar5
      00014A D0 04            [ 8]  361 	pop	ar4
      00014C D0 03            [ 8]  362 	pop	ar3
      00014E D0 02            [ 8]  363 	pop	ar2
      000150 02s00r00r28      [16]  364 	ljmp	00105$
      000154                        365 00107$:
                                    366 ;	mbstowcs.c:47: return(m);
      000154 75 86 01         [12]  367 	mov     dps, #1
      000157 90s00r00r06      [12]  368 	mov     dptr, #_mbstowcs_m_65536_37
      00015B E0               [ 8]  369 	movx	a,@dptr
      00015C F5 82            [ 8]  370 	mov	dpl,a
      00015E A3               [12]  371 	inc	dptr
      00015F E0               [ 8]  372 	movx	a,@dptr
      000160 F5 83            [ 8]  373 	mov	dph,a
      000162 75 86 00         [12]  374 	mov	dps,#0
      000165                        375 00108$:
                                    376 ;	mbstowcs.c:48: }
      000165 22               [16]  377 	ret
                                    378 	.area CSEG    (CODE)
                                    379 	.area CONST   (CODE)
                                    380 	.area XINIT   (CODE)
                                    381 	.area CABS    (ABS,CODE)
