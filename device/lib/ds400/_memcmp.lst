                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memcmp
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _memcmp_PARM_3
                                     35 	.globl _memcmp_PARM_2
                                     36 	.globl _memcmp
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _memcmp_PARM_2:
      000000                         79 	.ds 4
      000004                         80 _memcmp_PARM_3:
      000004                         81 	.ds 2
      000006                         82 _memcmp_buf1_65536_27:
      000006                         83 	.ds 4
      00000A                         84 _memcmp_sloc0_1_0:
      00000A                         85 	.ds 4
                                     86 ;--------------------------------------------------------
                                     87 ; absolute external ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area XABS    (ABS,XDATA)
                                     90 ;--------------------------------------------------------
                                     91 ; initialized external ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area XISEG   (XDATA)
                                     94 ;--------------------------------------------------------
                                     95 ; global & static initialisations
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 	.area GSFINAL (CODE)
                                    100 	.area GSINIT  (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; Home
                                    103 ;--------------------------------------------------------
                                    104 	.area HOME    (CODE)
                                    105 	.area HOME    (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; code
                                    108 ;--------------------------------------------------------
                                    109 	.area CSEG    (CODE)
                                    110 ;------------------------------------------------------------
                                    111 ;Allocation info for local variables in function 'memcmp'
                                    112 ;------------------------------------------------------------
                                    113 ;buf2                      Allocated with name '_memcmp_PARM_2'
                                    114 ;count                     Allocated with name '_memcmp_PARM_3'
                                    115 ;buf1                      Allocated with name '_memcmp_buf1_65536_27'
                                    116 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                                    117 ;------------------------------------------------------------
                                    118 ;	_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                                    119 ;	-----------------------------------------
                                    120 ;	 function memcmp
                                    121 ;	-----------------------------------------
      000000                        122 _memcmp:
                           000002   123 	ar2 = 0x02
                           000003   124 	ar3 = 0x03
                           000004   125 	ar4 = 0x04
                           000005   126 	ar5 = 0x05
                           000006   127 	ar6 = 0x06
                           000007   128 	ar7 = 0x07
                           000000   129 	ar0 = 0x00
                           000001   130 	ar1 = 0x01
      000000 75 86 01         [12]  131 	mov     dps, #1
      000003 90s00r00r06      [12]  132 	mov     dptr, #_memcmp_buf1_65536_27
      000007 E5 82            [ 8]  133 	mov	a,dpl
      000009 F0               [ 8]  134 	movx	@dptr,a
      00000A A3               [12]  135 	inc	dptr
      00000B E5 83            [ 8]  136 	mov	a,dph
      00000D F0               [ 8]  137 	movx	@dptr,a
      00000E A3               [12]  138 	inc	dptr
      00000F E5 93            [ 8]  139 	mov	a,dpx
      000011 F0               [ 8]  140 	movx	@dptr,a
      000012 A3               [12]  141 	inc	dptr
      000013 E5 F0            [ 8]  142 	mov	a,b
      000015 F0               [ 8]  143 	movx	@dptr,a
      000016 75 86 00         [12]  144 	mov	dps,#0
                                    145 ;	_memcmp.c:33: if (!count)
      000019 90s00r00r04      [12]  146 	mov	dptr,#_memcmp_PARM_3
      00001D E0               [ 8]  147 	movx	a,@dptr
      00001E F5 F0            [ 8]  148 	mov	b,a
      000020 A3               [12]  149 	inc	dptr
      000021 E0               [ 8]  150 	movx	a,@dptr
      000022 45 F0            [ 8]  151 	orl	a,b
      000024 70 08            [12]  152 	jnz  00112$
      000026                        153 00126$:
                                    154 ;	_memcmp.c:34: return(0);
      000026 90 00 00 00      [12]  155 	mov  dptr,#0x0000
      00002A 02s00r01r43      [16]  156 	ljmp	00107$
                                    157 ;	_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
      00002E                        158 00112$:
      00002E 90s00r00r04      [12]  159 	mov	dptr,#_memcmp_PARM_3
                                    160 ;	genAssign: resultIsFar = FALSE
      000032 E0               [ 8]  161 	movx	a,@dptr
      000033 FE               [ 4]  162 	mov	r6,a
      000034 A3               [12]  163 	inc	dptr
      000035 E0               [ 8]  164 	movx	a,@dptr
      000036 FF               [ 4]  165 	mov	r7,a
      000037                        166 00104$:
      000037 1E               [ 4]  167 	dec	r6
      000038 BE FF 01         [16]  168 	cjne	r6,#0xff,00127$
      00003B 1F               [ 4]  169 	dec	r7
      00003C                        170 00127$:
      00003C EE               [ 4]  171 	mov	a,r6
      00003D 4F               [ 4]  172 	orl	a,r7
      00003E 70 04            [12]  173 	jnz	00128$
      000040 02s00r00rFE      [16]  174 	ljmp	00106$
      000044                        175 00128$:
      000044 C0 06            [ 8]  176 	push	ar6
      000046 C0 07            [ 8]  177 	push	ar7
      000048 90s00r00r06      [12]  178 	mov	dptr,#_memcmp_buf1_65536_27
                                    179 ;	genAssign: resultIsFar = FALSE
      00004C E0               [ 8]  180 	movx	a,@dptr
      00004D F8               [ 4]  181 	mov	r0,a
      00004E A3               [12]  182 	inc	dptr
      00004F E0               [ 8]  183 	movx	a,@dptr
      000050 F9               [ 4]  184 	mov	r1,a
      000051 A3               [12]  185 	inc	dptr
      000052 E0               [ 8]  186 	movx	a,@dptr
      000053 FE               [ 4]  187 	mov	r6,a
      000054 A3               [12]  188 	inc	dptr
      000055 E0               [ 8]  189 	movx	a,@dptr
      000056 FF               [ 4]  190 	mov	r7,a
      000057 88 82            [ 8]  191 	mov	dpl,r0
      000059 89 83            [ 8]  192 	mov	dph,r1
      00005B 8E 93            [ 8]  193 	mov	dpx,r6
      00005D 8F F0            [ 8]  194 	mov	b,r7
      00005F 12s00r00r00      [16]  195 	lcall	__gptrget
      000063 F8               [ 4]  196 	mov	r0,a
      000064 90s00r00r00      [12]  197 	mov	dptr,#_memcmp_PARM_2
                                    198 ;	genAssign: resultIsFar = TRUE
      000068 75 86 21         [12]  199 	mov	dps,#0x21
      00006B 90s00r00r0A      [12]  200 	mov	dptr,#_memcmp_sloc0_1_0
      00006F E0               [ 8]  201 	movx	a,@dptr
      000070 F0               [ 8]  202 	movx	@dptr,a
      000071 A3               [12]  203 	inc	dptr
      000072 A3               [12]  204 	inc	dptr
      000073 E0               [ 8]  205 	movx	a,@dptr
      000074 F0               [ 8]  206 	movx	@dptr,a
      000075 A3               [12]  207 	inc	dptr
      000076 A3               [12]  208 	inc	dptr
      000077 E0               [ 8]  209 	movx	a,@dptr
      000078 F0               [ 8]  210 	movx	@dptr,a
      000079 A3               [12]  211 	inc	dptr
      00007A A3               [12]  212 	inc	dptr
      00007B E0               [ 8]  213 	movx	a,@dptr
      00007C F0               [ 8]  214 	movx	@dptr,a
      00007D 75 86 00         [12]  215 	mov	dps,#0
      000080 90s00r00r0A      [12]  216 	mov	dptr,#_memcmp_sloc0_1_0
      000084 E0               [ 8]  217 	movx	a,@dptr
      000085 FE               [ 4]  218 	mov	r6,a
      000086 A3               [12]  219 	inc	dptr
      000087 E0               [ 8]  220 	movx	a,@dptr
      000088 FF               [ 4]  221 	mov	r7,a
      000089 A3               [12]  222 	inc	dptr
      00008A E0               [ 8]  223 	movx	a,@dptr
      00008B F9               [ 4]  224 	mov	r1,a
      00008C A3               [12]  225 	inc	dptr
      00008D E0               [ 8]  226 	movx	a,@dptr
      00008E FA               [ 4]  227 	mov	r2,a
      00008F 8E 82            [ 8]  228 	mov	dpl,r6
      000091 8F 83            [ 8]  229 	mov	dph,r7
      000093 89 93            [ 8]  230 	mov	dpx,r1
      000095 8A F0            [ 8]  231 	mov	b,r2
      000097 12s00r00r00      [16]  232 	lcall	__gptrget
      00009B FE               [ 4]  233 	mov	r6,a
      00009C E8               [ 4]  234 	mov	a,r0
      00009D B5 06 02         [16]  235 	cjne	a,ar6,00129$
      0000A0 80 06            [12]  236 	sjmp	00130$
      0000A2                        237 00129$:
      0000A2 D0 07            [ 8]  238 	pop	ar7
      0000A4 D0 06            [ 8]  239 	pop	ar6
      0000A6 80 56            [12]  240 	sjmp 00106$
      0000A8                        241 00130$:
      0000A8 D0 07            [ 8]  242 	pop	ar7
      0000AA D0 06            [ 8]  243 	pop	ar6
                                    244 ;	_memcmp.c:37: buf1 = (char *)buf1 + 1;
      0000AC 90s00r00r06      [12]  245 	mov	dptr,#_memcmp_buf1_65536_27
                                    246 ;	genAssign: resultIsFar = FALSE
      0000B0 E0               [ 8]  247 	movx	a,@dptr
      0000B1 FA               [ 4]  248 	mov	r2,a
      0000B2 A3               [12]  249 	inc	dptr
      0000B3 E0               [ 8]  250 	movx	a,@dptr
      0000B4 FB               [ 4]  251 	mov	r3,a
      0000B5 A3               [12]  252 	inc	dptr
      0000B6 E0               [ 8]  253 	movx	a,@dptr
      0000B7 FC               [ 4]  254 	mov	r4,a
      0000B8 A3               [12]  255 	inc	dptr
      0000B9 E0               [ 8]  256 	movx	a,@dptr
      0000BA FD               [ 4]  257 	mov	r5,a
      0000BB 0A               [ 4]  258 	inc	r2
      0000BC BA 00 05         [16]  259 	cjne	r2,#0x00,00131$
      0000BF 0B               [ 4]  260 	inc	r3
      0000C0 BB 00 01         [16]  261 	cjne	r3,#0x00,00131$
      0000C3 0C               [ 4]  262 	inc	r4
      0000C4                        263 00131$:
      0000C4 90s00r00r06      [12]  264 	mov	dptr,#_memcmp_buf1_65536_27
      0000C8 EA               [ 4]  265 	mov	a,r2
      0000C9 F0               [ 8]  266 	movx	@dptr,a
      0000CA A3               [12]  267 	inc	dptr
      0000CB EB               [ 4]  268 	mov	a,r3
      0000CC F0               [ 8]  269 	movx	@dptr,a
      0000CD A3               [12]  270 	inc	dptr
      0000CE EC               [ 4]  271 	mov	a,r4
      0000CF F0               [ 8]  272 	movx	@dptr,a
      0000D0 A3               [12]  273 	inc	dptr
      0000D1 ED               [ 4]  274 	mov	a,r5
      0000D2 F0               [ 8]  275 	movx	@dptr,a
                                    276 ;	_memcmp.c:38: buf2 = (char *)buf2 + 1;
      0000D3 90s00r00r0A      [12]  277 	mov	dptr,#_memcmp_sloc0_1_0
                                    278 ;	genAssign: resultIsFar = FALSE
      0000D7 E0               [ 8]  279 	movx	a,@dptr
      0000D8 FA               [ 4]  280 	mov	r2,a
      0000D9 A3               [12]  281 	inc	dptr
      0000DA E0               [ 8]  282 	movx	a,@dptr
      0000DB FB               [ 4]  283 	mov	r3,a
      0000DC A3               [12]  284 	inc	dptr
      0000DD E0               [ 8]  285 	movx	a,@dptr
      0000DE FC               [ 4]  286 	mov	r4,a
      0000DF A3               [12]  287 	inc	dptr
      0000E0 E0               [ 8]  288 	movx	a,@dptr
      0000E1 FD               [ 4]  289 	mov	r5,a
      0000E2 0A               [ 4]  290 	inc	r2
      0000E3 BA 00 05         [16]  291 	cjne	r2,#0x00,00132$
      0000E6 0B               [ 4]  292 	inc	r3
      0000E7 BB 00 01         [16]  293 	cjne	r3,#0x00,00132$
      0000EA 0C               [ 4]  294 	inc	r4
      0000EB                        295 00132$:
      0000EB 90s00r00r00      [12]  296 	mov	dptr,#_memcmp_PARM_2
      0000EF EA               [ 4]  297 	mov	a,r2
      0000F0 F0               [ 8]  298 	movx	@dptr,a
      0000F1 A3               [12]  299 	inc	dptr
      0000F2 EB               [ 4]  300 	mov	a,r3
      0000F3 F0               [ 8]  301 	movx	@dptr,a
      0000F4 A3               [12]  302 	inc	dptr
      0000F5 EC               [ 4]  303 	mov	a,r4
      0000F6 F0               [ 8]  304 	movx	@dptr,a
      0000F7 A3               [12]  305 	inc	dptr
      0000F8 ED               [ 4]  306 	mov	a,r5
      0000F9 F0               [ 8]  307 	movx	@dptr,a
      0000FA 02s00r00r37      [16]  308 	ljmp	00104$
      0000FE                        309 00106$:
                                    310 ;	_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
      0000FE 90s00r00r06      [12]  311 	mov	dptr,#_memcmp_buf1_65536_27
                                    312 ;	genAssign: resultIsFar = FALSE
      000102 E0               [ 8]  313 	movx	a,@dptr
      000103 FA               [ 4]  314 	mov	r2,a
      000104 A3               [12]  315 	inc	dptr
      000105 E0               [ 8]  316 	movx	a,@dptr
      000106 FB               [ 4]  317 	mov	r3,a
      000107 A3               [12]  318 	inc	dptr
      000108 E0               [ 8]  319 	movx	a,@dptr
      000109 FC               [ 4]  320 	mov	r4,a
      00010A A3               [12]  321 	inc	dptr
      00010B E0               [ 8]  322 	movx	a,@dptr
      00010C FD               [ 4]  323 	mov	r5,a
      00010D 8A 82            [ 8]  324 	mov	dpl,r2
      00010F 8B 83            [ 8]  325 	mov	dph,r3
      000111 8C 93            [ 8]  326 	mov	dpx,r4
      000113 8D F0            [ 8]  327 	mov	b,r5
      000115 12s00r00r00      [16]  328 	lcall	__gptrget
      000119 FA               [ 4]  329 	mov	r2,a
      00011A 7B 00            [ 8]  330 	mov	r3,#0x00
      00011C 90s00r00r00      [12]  331 	mov	dptr,#_memcmp_PARM_2
                                    332 ;	genAssign: resultIsFar = FALSE
      000120 E0               [ 8]  333 	movx	a,@dptr
      000121 FC               [ 4]  334 	mov	r4,a
      000122 A3               [12]  335 	inc	dptr
      000123 E0               [ 8]  336 	movx	a,@dptr
      000124 FD               [ 4]  337 	mov	r5,a
      000125 A3               [12]  338 	inc	dptr
      000126 E0               [ 8]  339 	movx	a,@dptr
      000127 FE               [ 4]  340 	mov	r6,a
      000128 A3               [12]  341 	inc	dptr
      000129 E0               [ 8]  342 	movx	a,@dptr
      00012A FF               [ 4]  343 	mov	r7,a
      00012B 8C 82            [ 8]  344 	mov	dpl,r4
      00012D 8D 83            [ 8]  345 	mov	dph,r5
      00012F 8E 93            [ 8]  346 	mov	dpx,r6
      000131 8F F0            [ 8]  347 	mov	b,r7
      000133 12s00r00r00      [16]  348 	lcall	__gptrget
      000137 FC               [ 4]  349 	mov	r4,a
      000138 7D 00            [ 8]  350 	mov	r5,#0x00
      00013A C3               [ 4]  351 	clr	c
      00013B EA               [ 4]  352 	mov	a,r2
      00013C 9C               [ 4]  353 	subb	a,r4
      00013D F5 82            [ 8]  354 	mov	dpl,a
      00013F EB               [ 4]  355 	mov	a,r3
      000140 9D               [ 4]  356 	subb	a,r5
      000141 F5 83            [ 8]  357 	mov	dph,a
      000143                        358 00107$:
                                    359 ;	_memcmp.c:42: }
      000143 22               [16]  360 	ret
                                    361 	.area CSEG    (CODE)
                                    362 	.area CONST   (CODE)
                                    363 	.area XINIT   (CODE)
                                    364 	.area CABS    (ABS,CODE)
