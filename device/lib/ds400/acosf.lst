                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module acosf
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _asincosf
                                     35 	.globl _acosf
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; uninitialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XABS    (ABS,XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; initialized external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XISEG   (XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'acosf'
                                    103 ;------------------------------------------------------------
                                    104 ;x                         Allocated to registers r2 r3 r4 r5 
                                    105 ;------------------------------------------------------------
                                    106 ;	acosf.c:36: float acosf(float x) _FLOAT_FUNC_REENTRANT
                                    107 ;	-----------------------------------------
                                    108 ;	 function acosf
                                    109 ;	-----------------------------------------
      000000                        110 _acosf:
                           000002   111 	ar2 = 0x02
                           000003   112 	ar3 = 0x03
                           000004   113 	ar4 = 0x04
                           000005   114 	ar5 = 0x05
                           000006   115 	ar6 = 0x06
                           000007   116 	ar7 = 0x07
                           000000   117 	ar0 = 0x00
                           000001   118 	ar1 = 0x01
      000000 AA 82            [ 8]  119 	mov	r2,dpl
      000002 AB 83            [ 8]  120 	mov	r3,dph
      000004 AC 93            [ 8]  121 	mov	r4,dpx
      000006 AD F0            [ 8]  122 	mov	r5,b
                                    123 ;	acosf.c:38: if (x == 1.0) return 0.0;
                                    124 ;	genAssign: resultIsFar = TRUE
      000008 90s00r00r00      [12]  125 	mov	dptr,#___fseq_PARM_2
      00000C E4               [ 4]  126 	clr	a
      00000D F0               [ 8]  127 	movx	@dptr,a
      00000E A3               [12]  128 	inc	dptr
      00000F E4               [ 4]  129 	clr	a
      000010 F0               [ 8]  130 	movx	@dptr,a
      000011 A3               [12]  131 	inc	dptr
      000012 74 80            [ 8]  132 	mov	a,#0x80
      000014 F0               [ 8]  133 	movx	@dptr,a
      000015 A3               [12]  134 	inc	dptr
      000016 74 3F            [ 8]  135 	mov	a,#0x3f
      000018 F0               [ 8]  136 	movx	@dptr,a
      000019 C0 02            [ 8]  137 	push	ar2
      00001B C0 03            [ 8]  138 	push	ar3
      00001D C0 04            [ 8]  139 	push	ar4
      00001F C0 05            [ 8]  140 	push	ar5
      000021 8A 82            [ 8]  141 	mov	dpl,r2
      000023 8B 83            [ 8]  142 	mov	dph,r3
      000025 8C 93            [ 8]  143 	mov	dpx,r4
      000027 8D F0            [ 8]  144 	mov	b,r5
      000029 12s00r00r00      [16]  145 	lcall	___fseq
      00002D D0 05            [ 8]  146 	pop	ar5
      00002F D0 04            [ 8]  147 	pop	ar4
      000031 D0 03            [ 8]  148 	pop	ar3
      000033 D0 02            [ 8]  149 	pop	ar2
      000035 E5 82            [ 8]  150 	mov	a,dpl
      000037 60 09            [12]  151 	jz  00108$
      000039                        152 00124$:
      000039 90 00 00 00      [12]  153 	mov  dptr,#0x0000
      00003D 75 F0 00         [12]  154 	mov	b,#0x00
      000040 80 65            [12]  155 	sjmp 00110$
      000042                        156 00108$:
                                    157 ;	acosf.c:39: else if (x ==-1.0) return PI;
                                    158 ;	genAssign: resultIsFar = TRUE
      000042 90s00r00r00      [12]  159 	mov	dptr,#___fseq_PARM_2
      000046 E4               [ 4]  160 	clr	a
      000047 F0               [ 8]  161 	movx	@dptr,a
      000048 A3               [12]  162 	inc	dptr
      000049 E4               [ 4]  163 	clr	a
      00004A F0               [ 8]  164 	movx	@dptr,a
      00004B A3               [12]  165 	inc	dptr
      00004C 74 80            [ 8]  166 	mov	a,#0x80
      00004E F0               [ 8]  167 	movx	@dptr,a
      00004F A3               [12]  168 	inc	dptr
      000050 74 BF            [ 8]  169 	mov	a,#0xbf
      000052 F0               [ 8]  170 	movx	@dptr,a
      000053 C0 02            [ 8]  171 	push	ar2
      000055 C0 03            [ 8]  172 	push	ar3
      000057 C0 04            [ 8]  173 	push	ar4
      000059 C0 05            [ 8]  174 	push	ar5
      00005B 8A 82            [ 8]  175 	mov	dpl,r2
      00005D 8B 83            [ 8]  176 	mov	dph,r3
      00005F 8C 93            [ 8]  177 	mov	dpx,r4
      000061 8D F0            [ 8]  178 	mov	b,r5
      000063 12s00r00r00      [16]  179 	lcall	___fseq
      000067 D0 05            [ 8]  180 	pop	ar5
      000069 D0 04            [ 8]  181 	pop	ar4
      00006B D0 03            [ 8]  182 	pop	ar3
      00006D D0 02            [ 8]  183 	pop	ar2
      00006F E5 82            [ 8]  184 	mov	a,dpl
      000071 60 09            [12]  185 	jz  00105$
      000073                        186 00125$:
      000073 90 49 0F DB      [12]  187 	mov	dptr,#0x490fdb
      000077 75 F0 40         [12]  188 	mov	b,#0x40
      00007A 80 2B            [12]  189 	sjmp 00110$
      00007C                        190 00105$:
                                    191 ;	acosf.c:40: else if (x == 0.0) return HALF_PI;
      00007C 8A F0            [ 8]  192 	mov	b,r2
      00007E EB               [ 4]  193 	mov	a,r3
      00007F 42 F0            [ 8]  194 	orl	b,a
      000081 EC               [ 4]  195 	mov	a,r4
      000082 42 F0            [ 8]  196 	orl	b,a
      000084 ED               [ 4]  197 	mov	a,r5
      000085 54 7F            [ 8]  198 	anl	a,#0x7F
      000087 45 F0            [ 8]  199 	orl	a,b
      000089 70 09            [12]  200 	jnz  00102$
      00008B                        201 00126$:
      00008B 90 C9 0F DB      [12]  202 	mov	dptr,#0xc90fdb
      00008F 75 F0 3F         [12]  203 	mov	b,#0x3f
      000092 80 13            [12]  204 	sjmp 00110$
      000094                        205 00102$:
                                    206 ;	acosf.c:41: else               return asincosf(x, true);
                                    207 ;	genAssign: resultIsFar = TRUE
      000094 90s00r00r00      [12]  208 	mov	dptr,#_asincosf_PARM_2
      000098 74 01            [ 8]  209 	mov	a,#0x01
      00009A F0               [ 8]  210 	movx	@dptr,a
      00009B 8A 82            [ 8]  211 	mov	dpl,r2
      00009D 8B 83            [ 8]  212 	mov	dph,r3
      00009F 8C 93            [ 8]  213 	mov	dpx,r4
      0000A1 8D F0            [ 8]  214 	mov	b,r5
      0000A3 12s00r00r00      [16]  215 	lcall	_asincosf
      0000A7                        216 00110$:
                                    217 ;	acosf.c:42: }
      0000A7 22               [16]  218 	ret
                                    219 	.area CSEG    (CODE)
                                    220 	.area CONST   (CODE)
                                    221 	.area XINIT   (CODE)
                                    222 	.area CABS    (ABS,CODE)
