                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tanhf
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _fabsf
                                     35 	.globl _expf
                                     36 	.globl _tanhf
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
                                     78 ;--------------------------------------------------------
                                     79 ; absolute external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XABS    (ABS,XDATA)
                                     82 ;--------------------------------------------------------
                                     83 ; initialized external ram data
                                     84 ;--------------------------------------------------------
                                     85 	.area XISEG   (XDATA)
                                     86 ;--------------------------------------------------------
                                     87 ; global & static initialisations
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; Home
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area HOME    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; code
                                    100 ;--------------------------------------------------------
                                    101 	.area CSEG    (CODE)
                                    102 ;------------------------------------------------------------
                                    103 ;Allocation info for local variables in function 'tanhf'
                                    104 ;------------------------------------------------------------
                                    105 ;x                         Allocated to stack - _bp +1
                                    106 ;f                         Allocated to stack - _bp +9
                                    107 ;g                         Allocated to registers r2 r3 r4 r5 
                                    108 ;r                         Allocated to registers r2 r3 r4 r5 
                                    109 ;sloc0                     Allocated to stack - _bp +5
                                    110 ;------------------------------------------------------------
                                    111 ;	tanhf.c:50: float tanhf(float x) _FLOAT_FUNC_REENTRANT
                                    112 ;	-----------------------------------------
                                    113 ;	 function tanhf
                                    114 ;	-----------------------------------------
      000000                        115 _tanhf:
                           000002   116 	ar2 = 0x02
                           000003   117 	ar3 = 0x03
                           000004   118 	ar4 = 0x04
                           000005   119 	ar5 = 0x05
                           000006   120 	ar6 = 0x06
                           000007   121 	ar7 = 0x07
                           000000   122 	ar0 = 0x00
                           000001   123 	ar1 = 0x01
      000000 C0*00            [ 8]  124 	push	_bpx
      000002 C0*01            [ 8]  125 	push	_bpx+1
      000004 85 81*00         [12]  126 	mov	_bpx,sp
      000007 85 9B*01         [12]  127 	mov	_bpx+1,esp
      00000A 53*01 03         [12]  128 	anl	_bpx+1,#3
      00000D 43*01 DC         [12]  129 	orl	_bpx+1,#0xdc
      000010 E5 81            [ 8]  130 	mov	a,sp
      000012 24 0C            [ 8]  131 	add	a,#0x0c
      000014 F5 81            [ 8]  132 	mov	sp,a
      000016 E5 9B            [ 8]  133 	mov	a,esp
      000018 54 03            [ 8]  134 	anl	a,#3
      00001A 44 DC            [ 8]  135 	orl	a,#0xdc
      00001C 34 00            [ 8]  136 	addc	a,#0x00
      00001E F5 9B            [ 8]  137 	mov	esp,a
      000020 75 95 FF         [12]  138 	mov	dpx1,#0xff
      000023 85*01 85         [12]  139 	mov	dph1,_bpx+1
      000026 85*00 84         [12]  140 	mov	dpl1,_bpx
      000029 75 86 01         [12]  141 	mov	dps,#1
      00002C A3               [12]  142 	inc	dptr
      00002D 75 86 01         [12]  143 	mov	dps, #1
      000030 E5 82            [ 8]  144 	mov	a,dpl
      000032 F0               [ 8]  145 	movx	@dptr,a
      000033 A3               [12]  146 	inc	dptr
      000034 E5 83            [ 8]  147 	mov	a,dph
      000036 F0               [ 8]  148 	movx	@dptr,a
      000037 A3               [12]  149 	inc	dptr
      000038 E5 93            [ 8]  150 	mov	a,dpx
      00003A F0               [ 8]  151 	movx	@dptr,a
      00003B A3               [12]  152 	inc	dptr
      00003C E5 F0            [ 8]  153 	mov	a,b
      00003E F0               [ 8]  154 	movx	@dptr,a
      00003F 75 86 00         [12]  155 	mov	dps,#0
                                    156 ;	tanhf.c:54: f=fabsf(x);
      000042 75 95 FF         [12]  157 	mov	dpx1,#0xff
      000045 85*01 85         [12]  158 	mov	dph1,_bpx+1
      000048 85*00 84         [12]  159 	mov	dpl1,_bpx
      00004B 75 86 01         [12]  160 	mov	dps,#1
      00004E A3               [12]  161 	inc	dptr
      00004F 75 86 01         [12]  162 	mov	dps, #1
      000052 E0               [ 8]  163 	movx	a,@dptr
      000053 F5 82            [ 8]  164 	mov	dpl,a
      000055 A3               [12]  165 	inc	dptr
      000056 E0               [ 8]  166 	movx	a,@dptr
      000057 F5 83            [ 8]  167 	mov	dph,a
      000059 A3               [12]  168 	inc	dptr
      00005A E0               [ 8]  169 	movx	a,@dptr
      00005B F5 93            [ 8]  170 	mov	dpx,a
      00005D A3               [12]  171 	inc	dptr
      00005E E0               [ 8]  172 	movx	a,@dptr
      00005F F5 F0            [ 8]  173 	mov	b,a
      000061 75 86 00         [12]  174 	mov	dps,#0
      000064 12s00r00r00      [16]  175 	lcall	_fabsf
      000068 AE 82            [ 8]  176 	mov	r6,dpl
      00006A AF 83            [ 8]  177 	mov	r7,dph
      00006C A8 93            [ 8]  178 	mov	r0,dpx
      00006E A9 F0            [ 8]  179 	mov	r1,b
                                    180 ;	genAssign: resultIsFar = TRUE
      000070 E5*00            [ 8]  181 	mov	a,_bpx
      000072 C3               [ 4]  182 	clr	c
      000073 94 F7            [ 8]  183 	subb	a,#0xf7
      000075 F5 82            [ 8]  184 	mov	dpl,a
      000077 E5*01            [ 8]  185 	mov	a,_bpx+1
      000079 94 FF            [ 8]  186 	subb	a,#0xff
      00007B F5 83            [ 8]  187 	mov	dph,a
      00007D 75 93 FF         [12]  188 	mov	dpx,#0xff
      000080 EE               [ 4]  189 	mov	a,r6
      000081 F0               [ 8]  190 	movx	@dptr,a
      000082 A3               [12]  191 	inc	dptr
      000083 EF               [ 4]  192 	mov	a,r7
      000084 F0               [ 8]  193 	movx	@dptr,a
      000085 A3               [12]  194 	inc	dptr
      000086 E8               [ 4]  195 	mov	a,r0
      000087 F0               [ 8]  196 	movx	@dptr,a
      000088 A3               [12]  197 	inc	dptr
      000089 E9               [ 4]  198 	mov	a,r1
      00008A F0               [ 8]  199 	movx	@dptr,a
                                    200 ;	tanhf.c:55: if(f>SBIG) r=1.0;
      00008B E5*00            [ 8]  201 	mov	a,_bpx
      00008D C3               [ 4]  202 	clr	c
      00008E 94 F7            [ 8]  203 	subb	a,#0xf7
      000090 F5 82            [ 8]  204 	mov	dpl,a
      000092 E5*01            [ 8]  205 	mov	a,_bpx+1
      000094 94 FF            [ 8]  206 	subb	a,#0xff
      000096 F5 83            [ 8]  207 	mov	dph,a
      000098 75 93 FF         [12]  208 	mov	dpx,#0xff
                                    209 ;	genAssign: resultIsFar = TRUE
      00009B 75 86 21         [12]  210 	mov	dps,#0x21
      00009E 90s00r00r00      [12]  211 	mov	dptr,#___fslt_PARM_2
      0000A2 E0               [ 8]  212 	movx	a,@dptr
      0000A3 F0               [ 8]  213 	movx	@dptr,a
      0000A4 A3               [12]  214 	inc	dptr
      0000A5 A3               [12]  215 	inc	dptr
      0000A6 E0               [ 8]  216 	movx	a,@dptr
      0000A7 F0               [ 8]  217 	movx	@dptr,a
      0000A8 A3               [12]  218 	inc	dptr
      0000A9 A3               [12]  219 	inc	dptr
      0000AA E0               [ 8]  220 	movx	a,@dptr
      0000AB F0               [ 8]  221 	movx	@dptr,a
      0000AC A3               [12]  222 	inc	dptr
      0000AD A3               [12]  223 	inc	dptr
      0000AE E0               [ 8]  224 	movx	a,@dptr
      0000AF F0               [ 8]  225 	movx	@dptr,a
      0000B0 75 86 00         [12]  226 	mov	dps,#0
      0000B3 90 10 2C B0      [12]  227 	mov	dptr,#0x102cb0
      0000B7 75 F0 41         [12]  228 	mov	b,#0x41
      0000BA 12s00r00r00      [16]  229 	lcall	___fslt
      0000BE E5 82            [ 8]  230 	mov	a,dpl
      0000C0 60 0C            [12]  231 	jz  00108$
      0000C2                        232 00134$:
                                    233 ;	genAssign: resultIsFar = FALSE
      0000C2 7A 00            [ 8]  234 	mov	r2,#0x00
      0000C4 7B 00            [ 8]  235 	mov	r3,#0x00
      0000C6 7C 80            [ 8]  236 	mov	r4,#0x80
      0000C8 7D 3F            [ 8]  237 	mov	r5,#0x3f
      0000CA 02s00r04r50      [16]  238 	ljmp	00109$
      0000CE                        239 00108$:
                                    240 ;	tanhf.c:56: else if(f>K1)
      0000CE E5*00            [ 8]  241 	mov	a,_bpx
      0000D0 C3               [ 4]  242 	clr	c
      0000D1 94 F7            [ 8]  243 	subb	a,#0xf7
      0000D3 F5 82            [ 8]  244 	mov	dpl,a
      0000D5 E5*01            [ 8]  245 	mov	a,_bpx+1
      0000D7 94 FF            [ 8]  246 	subb	a,#0xff
      0000D9 F5 83            [ 8]  247 	mov	dph,a
      0000DB 75 93 FF         [12]  248 	mov	dpx,#0xff
                                    249 ;	genAssign: resultIsFar = TRUE
      0000DE 75 86 21         [12]  250 	mov	dps,#0x21
      0000E1 90s00r00r00      [12]  251 	mov	dptr,#___fslt_PARM_2
      0000E5 E0               [ 8]  252 	movx	a,@dptr
      0000E6 F0               [ 8]  253 	movx	@dptr,a
      0000E7 A3               [12]  254 	inc	dptr
      0000E8 A3               [12]  255 	inc	dptr
      0000E9 E0               [ 8]  256 	movx	a,@dptr
      0000EA F0               [ 8]  257 	movx	@dptr,a
      0000EB A3               [12]  258 	inc	dptr
      0000EC A3               [12]  259 	inc	dptr
      0000ED E0               [ 8]  260 	movx	a,@dptr
      0000EE F0               [ 8]  261 	movx	@dptr,a
      0000EF A3               [12]  262 	inc	dptr
      0000F0 A3               [12]  263 	inc	dptr
      0000F1 E0               [ 8]  264 	movx	a,@dptr
      0000F2 F0               [ 8]  265 	movx	@dptr,a
      0000F3 75 86 00         [12]  266 	mov	dps,#0
      0000F6 90 0C 9F 54      [12]  267 	mov	dptr,#0x0c9f54
      0000FA 75 F0 3F         [12]  268 	mov	b,#0x3f
      0000FD 12s00r00r00      [16]  269 	lcall	___fslt
      000101 E5 82            [ 8]  270 	mov	a,dpl
      000103 70 04            [12]  271 	jnz	00135$
      000105 02s00r01rF8      [16]  272 	ljmp	00105$
      000109                        273 00135$:
                                    274 ;	tanhf.c:58: r=0.5-1.0/(expf(f+f)+1.0);
      000109 E5*00            [ 8]  275 	mov	a,_bpx
      00010B C3               [ 4]  276 	clr	c
      00010C 94 F7            [ 8]  277 	subb	a,#0xf7
      00010E F5 82            [ 8]  278 	mov	dpl,a
      000110 E5*01            [ 8]  279 	mov	a,_bpx+1
      000112 94 FF            [ 8]  280 	subb	a,#0xff
      000114 F5 83            [ 8]  281 	mov	dph,a
      000116 75 93 FF         [12]  282 	mov	dpx,#0xff
                                    283 ;	genAssign: resultIsFar = TRUE
      000119 75 86 21         [12]  284 	mov	dps,#0x21
      00011C 90s00r00r00      [12]  285 	mov	dptr,#___fsadd_PARM_2
      000120 E0               [ 8]  286 	movx	a,@dptr
      000121 F0               [ 8]  287 	movx	@dptr,a
      000122 A3               [12]  288 	inc	dptr
      000123 A3               [12]  289 	inc	dptr
      000124 E0               [ 8]  290 	movx	a,@dptr
      000125 F0               [ 8]  291 	movx	@dptr,a
      000126 A3               [12]  292 	inc	dptr
      000127 A3               [12]  293 	inc	dptr
      000128 E0               [ 8]  294 	movx	a,@dptr
      000129 F0               [ 8]  295 	movx	@dptr,a
      00012A A3               [12]  296 	inc	dptr
      00012B A3               [12]  297 	inc	dptr
      00012C E0               [ 8]  298 	movx	a,@dptr
      00012D F0               [ 8]  299 	movx	@dptr,a
      00012E 75 86 00         [12]  300 	mov	dps,#0
      000131 E5*00            [ 8]  301 	mov	a,_bpx
      000133 C3               [ 4]  302 	clr	c
      000134 94 F7            [ 8]  303 	subb	a,#0xf7
      000136 F5 84            [ 8]  304 	mov	dpl1,a
      000138 E5*01            [ 8]  305 	mov	a,_bpx+1
      00013A 94 FF            [ 8]  306 	subb	a,#0xff
      00013C F5 85            [ 8]  307 	mov	dph1,a
      00013E 75 95 FF         [12]  308 	mov	dpx1,#0xff
      000141 05 86            [ 8]  309 	inc	dps
      000143 E0               [ 8]  310 	movx	a,@dptr
      000144 F5 82            [ 8]  311 	mov	dpl,a
      000146 A3               [12]  312 	inc	dptr
      000147 E0               [ 8]  313 	movx	a,@dptr
      000148 F5 83            [ 8]  314 	mov	dph,a
      00014A A3               [12]  315 	inc	dptr
      00014B E0               [ 8]  316 	movx	a,@dptr
      00014C F5 93            [ 8]  317 	mov	dpx,a
      00014E A3               [12]  318 	inc	dptr
      00014F E0               [ 8]  319 	movx	a,@dptr
      000150 F5 F0            [ 8]  320 	mov	b,a
      000152 75 86 00         [12]  321 	mov	dps,#0
      000155 12s00r00r00      [16]  322 	lcall	___fsadd
      000159 12s00r00r00      [16]  323 	lcall	_expf
      00015D AA 82            [ 8]  324 	mov	r2,dpl
      00015F AB 83            [ 8]  325 	mov	r3,dph
      000161 AC 93            [ 8]  326 	mov	r4,dpx
      000163 AD F0            [ 8]  327 	mov	r5,b
                                    328 ;	genAssign: resultIsFar = TRUE
      000165 90s00r00r00      [12]  329 	mov	dptr,#___fsadd_PARM_2
      000169 E4               [ 4]  330 	clr	a
      00016A F0               [ 8]  331 	movx	@dptr,a
      00016B A3               [12]  332 	inc	dptr
      00016C E4               [ 4]  333 	clr	a
      00016D F0               [ 8]  334 	movx	@dptr,a
      00016E A3               [12]  335 	inc	dptr
      00016F 74 80            [ 8]  336 	mov	a,#0x80
      000171 F0               [ 8]  337 	movx	@dptr,a
      000172 A3               [12]  338 	inc	dptr
      000173 74 3F            [ 8]  339 	mov	a,#0x3f
      000175 F0               [ 8]  340 	movx	@dptr,a
      000176 8A 82            [ 8]  341 	mov	dpl,r2
      000178 8B 83            [ 8]  342 	mov	dph,r3
      00017A 8C 93            [ 8]  343 	mov	dpx,r4
      00017C 8D F0            [ 8]  344 	mov	b,r5
      00017E 12s00r00r00      [16]  345 	lcall	___fsadd
      000182 AA 82            [ 8]  346 	mov	r2,dpl
      000184 AB 83            [ 8]  347 	mov	r3,dph
      000186 AC 93            [ 8]  348 	mov	r4,dpx
      000188 AD F0            [ 8]  349 	mov	r5,b
                                    350 ;	genAssign: resultIsFar = TRUE
      00018A 90s00r00r00      [12]  351 	mov	dptr,#___fsdiv_PARM_2
      00018E EA               [ 4]  352 	mov	a,r2
      00018F F0               [ 8]  353 	movx	@dptr,a
      000190 A3               [12]  354 	inc	dptr
      000191 EB               [ 4]  355 	mov	a,r3
      000192 F0               [ 8]  356 	movx	@dptr,a
      000193 A3               [12]  357 	inc	dptr
      000194 EC               [ 4]  358 	mov	a,r4
      000195 F0               [ 8]  359 	movx	@dptr,a
      000196 A3               [12]  360 	inc	dptr
      000197 ED               [ 4]  361 	mov	a,r5
      000198 F0               [ 8]  362 	movx	@dptr,a
      000199 90 00 00 00      [12]  363 	mov  dptr,#0x0000
      00019D 75 93 80         [12]  364 	mov	dpx,#0x80
      0001A0 75 F0 3F         [12]  365 	mov	b,#0x3f
      0001A3 12s00r00r00      [16]  366 	lcall	___fsdiv
      0001A7 AA 82            [ 8]  367 	mov	r2,dpl
      0001A9 AB 83            [ 8]  368 	mov	r3,dph
      0001AB AC 93            [ 8]  369 	mov	r4,dpx
      0001AD AD F0            [ 8]  370 	mov	r5,b
                                    371 ;	genAssign: resultIsFar = TRUE
      0001AF 90s00r00r00      [12]  372 	mov	dptr,#___fssub_PARM_2
      0001B3 EA               [ 4]  373 	mov	a,r2
      0001B4 F0               [ 8]  374 	movx	@dptr,a
      0001B5 A3               [12]  375 	inc	dptr
      0001B6 EB               [ 4]  376 	mov	a,r3
      0001B7 F0               [ 8]  377 	movx	@dptr,a
      0001B8 A3               [12]  378 	inc	dptr
      0001B9 EC               [ 4]  379 	mov	a,r4
      0001BA F0               [ 8]  380 	movx	@dptr,a
      0001BB A3               [12]  381 	inc	dptr
      0001BC ED               [ 4]  382 	mov	a,r5
      0001BD F0               [ 8]  383 	movx	@dptr,a
      0001BE 90 00 00 00      [12]  384 	mov  dptr,#0x0000
      0001C2 75 F0 3F         [12]  385 	mov	b,#0x3f
      0001C5 12s00r00r00      [16]  386 	lcall	___fssub
      0001C9 AA 82            [ 8]  387 	mov	r2,dpl
      0001CB AB 83            [ 8]  388 	mov	r3,dph
      0001CD AC 93            [ 8]  389 	mov	r4,dpx
      0001CF AD F0            [ 8]  390 	mov	r5,b
                                    391 ;	genAssign: resultIsFar = FALSE
                                    392 ;	tanhf.c:59: r+=r;
                                    393 ;	genAssign: resultIsFar = TRUE
      0001D1 90s00r00r00      [12]  394 	mov	dptr,#___fsadd_PARM_2
      0001D5 EA               [ 4]  395 	mov	a,r2
      0001D6 F0               [ 8]  396 	movx	@dptr,a
      0001D7 A3               [12]  397 	inc	dptr
      0001D8 EB               [ 4]  398 	mov	a,r3
      0001D9 F0               [ 8]  399 	movx	@dptr,a
      0001DA A3               [12]  400 	inc	dptr
      0001DB EC               [ 4]  401 	mov	a,r4
      0001DC F0               [ 8]  402 	movx	@dptr,a
      0001DD A3               [12]  403 	inc	dptr
      0001DE ED               [ 4]  404 	mov	a,r5
      0001DF F0               [ 8]  405 	movx	@dptr,a
      0001E0 8A 82            [ 8]  406 	mov	dpl,r2
      0001E2 8B 83            [ 8]  407 	mov	dph,r3
      0001E4 8C 93            [ 8]  408 	mov	dpx,r4
      0001E6 8D F0            [ 8]  409 	mov	b,r5
      0001E8 12s00r00r00      [16]  410 	lcall	___fsadd
                                    411 ;	genAssign: resultIsFar = FALSE
      0001EC AA 82            [ 8]  412 	mov	r2,dpl
      0001EE AB 83            [ 8]  413 	mov	r3,dph
      0001F0 AC 93            [ 8]  414 	mov	r4,dpx
      0001F2 AD F0            [ 8]  415 	mov	r5,b
      0001F4 02s00r04r50      [16]  416 	ljmp	00109$
      0001F8                        417 00105$:
                                    418 ;	tanhf.c:61: else if(f<EPS) r=f;
                                    419 ;	genAssign: resultIsFar = TRUE
      0001F8 90s00r00r00      [12]  420 	mov	dptr,#___fslt_PARM_2
      0001FC E4               [ 4]  421 	clr	a
      0001FD F0               [ 8]  422 	movx	@dptr,a
      0001FE A3               [12]  423 	inc	dptr
      0001FF E4               [ 4]  424 	clr	a
      000200 F0               [ 8]  425 	movx	@dptr,a
      000201 A3               [12]  426 	inc	dptr
      000202 74 80            [ 8]  427 	mov	a,#0x80
      000204 F0               [ 8]  428 	movx	@dptr,a
      000205 A3               [12]  429 	inc	dptr
      000206 74 39            [ 8]  430 	mov	a,#0x39
      000208 F0               [ 8]  431 	movx	@dptr,a
      000209 E5*00            [ 8]  432 	mov	a,_bpx
      00020B C3               [ 4]  433 	clr	c
      00020C 94 F7            [ 8]  434 	subb	a,#0xf7
      00020E F5 84            [ 8]  435 	mov	dpl1,a
      000210 E5*01            [ 8]  436 	mov	a,_bpx+1
      000212 94 FF            [ 8]  437 	subb	a,#0xff
      000214 F5 85            [ 8]  438 	mov	dph1,a
      000216 75 95 FF         [12]  439 	mov	dpx1,#0xff
      000219 05 86            [ 8]  440 	inc	dps
      00021B E0               [ 8]  441 	movx	a,@dptr
      00021C F5 82            [ 8]  442 	mov	dpl,a
      00021E A3               [12]  443 	inc	dptr
      00021F E0               [ 8]  444 	movx	a,@dptr
      000220 F5 83            [ 8]  445 	mov	dph,a
      000222 A3               [12]  446 	inc	dptr
      000223 E0               [ 8]  447 	movx	a,@dptr
      000224 F5 93            [ 8]  448 	mov	dpx,a
      000226 A3               [12]  449 	inc	dptr
      000227 E0               [ 8]  450 	movx	a,@dptr
      000228 F5 F0            [ 8]  451 	mov	b,a
      00022A 75 86 00         [12]  452 	mov	dps,#0
      00022D 12s00r00r00      [16]  453 	lcall	___fslt
      000231 E5 82            [ 8]  454 	mov	a,dpl
      000233 60 1F            [12]  455 	jz  00102$
      000235                        456 00136$:
      000235 E5*00            [ 8]  457 	mov	a,_bpx
      000237 C3               [ 4]  458 	clr	c
      000238 94 F7            [ 8]  459 	subb	a,#0xf7
      00023A F5 82            [ 8]  460 	mov	dpl,a
      00023C E5*01            [ 8]  461 	mov	a,_bpx+1
      00023E 94 FF            [ 8]  462 	subb	a,#0xff
      000240 F5 83            [ 8]  463 	mov	dph,a
      000242 75 93 FF         [12]  464 	mov	dpx,#0xff
                                    465 ;	genAssign: resultIsFar = FALSE
      000245 E0               [ 8]  466 	movx	a,@dptr
      000246 FA               [ 4]  467 	mov	r2,a
      000247 A3               [12]  468 	inc	dptr
      000248 E0               [ 8]  469 	movx	a,@dptr
      000249 FB               [ 4]  470 	mov	r3,a
      00024A A3               [12]  471 	inc	dptr
      00024B E0               [ 8]  472 	movx	a,@dptr
      00024C FC               [ 4]  473 	mov	r4,a
      00024D A3               [12]  474 	inc	dptr
      00024E E0               [ 8]  475 	movx	a,@dptr
      00024F FD               [ 4]  476 	mov	r5,a
      000250 02s00r04r50      [16]  477 	ljmp	00109$
      000254                        478 00102$:
                                    479 ;	tanhf.c:64: g=f*f;
      000254 E5*00            [ 8]  480 	mov	a,_bpx
      000256 C3               [ 4]  481 	clr	c
      000257 94 F7            [ 8]  482 	subb	a,#0xf7
      000259 F5 82            [ 8]  483 	mov	dpl,a
      00025B E5*01            [ 8]  484 	mov	a,_bpx+1
      00025D 94 FF            [ 8]  485 	subb	a,#0xff
      00025F F5 83            [ 8]  486 	mov	dph,a
      000261 75 93 FF         [12]  487 	mov	dpx,#0xff
                                    488 ;	genAssign: resultIsFar = TRUE
      000264 75 86 21         [12]  489 	mov	dps,#0x21
      000267 90s00r00r00      [12]  490 	mov	dptr,#___fsmul_PARM_2
      00026B E0               [ 8]  491 	movx	a,@dptr
      00026C F0               [ 8]  492 	movx	@dptr,a
      00026D A3               [12]  493 	inc	dptr
      00026E A3               [12]  494 	inc	dptr
      00026F E0               [ 8]  495 	movx	a,@dptr
      000270 F0               [ 8]  496 	movx	@dptr,a
      000271 A3               [12]  497 	inc	dptr
      000272 A3               [12]  498 	inc	dptr
      000273 E0               [ 8]  499 	movx	a,@dptr
      000274 F0               [ 8]  500 	movx	@dptr,a
      000275 A3               [12]  501 	inc	dptr
      000276 A3               [12]  502 	inc	dptr
      000277 E0               [ 8]  503 	movx	a,@dptr
      000278 F0               [ 8]  504 	movx	@dptr,a
      000279 75 86 00         [12]  505 	mov	dps,#0
      00027C E5*00            [ 8]  506 	mov	a,_bpx
      00027E C3               [ 4]  507 	clr	c
      00027F 94 F7            [ 8]  508 	subb	a,#0xf7
      000281 F5 84            [ 8]  509 	mov	dpl1,a
      000283 E5*01            [ 8]  510 	mov	a,_bpx+1
      000285 94 FF            [ 8]  511 	subb	a,#0xff
      000287 F5 85            [ 8]  512 	mov	dph1,a
      000289 75 95 FF         [12]  513 	mov	dpx1,#0xff
      00028C 05 86            [ 8]  514 	inc	dps
      00028E E0               [ 8]  515 	movx	a,@dptr
      00028F F5 82            [ 8]  516 	mov	dpl,a
      000291 A3               [12]  517 	inc	dptr
      000292 E0               [ 8]  518 	movx	a,@dptr
      000293 F5 83            [ 8]  519 	mov	dph,a
      000295 A3               [12]  520 	inc	dptr
      000296 E0               [ 8]  521 	movx	a,@dptr
      000297 F5 93            [ 8]  522 	mov	dpx,a
      000299 A3               [12]  523 	inc	dptr
      00029A E0               [ 8]  524 	movx	a,@dptr
      00029B F5 F0            [ 8]  525 	mov	b,a
      00029D 75 86 00         [12]  526 	mov	dps,#0
      0002A0 12s00r00r00      [16]  527 	lcall	___fsmul
      0002A4 AE 82            [ 8]  528 	mov	r6,dpl
      0002A6 AF 83            [ 8]  529 	mov	r7,dph
      0002A8 A8 93            [ 8]  530 	mov	r0,dpx
      0002AA A9 F0            [ 8]  531 	mov	r1,b
                                    532 ;	genAssign: resultIsFar = FALSE
      0002AC 8E 02            [ 8]  533 	mov	ar2,r6
      0002AE 8F 03            [ 8]  534 	mov	ar3,r7
      0002B0 88 04            [ 8]  535 	mov	ar4,r0
      0002B2 89 05            [ 8]  536 	mov	ar5,r1
                                    537 ;	tanhf.c:65: r=f+f*(P(g)/Q(g));
                                    538 ;	genAssign: resultIsFar = TRUE
      0002B4 90s00r00r00      [12]  539 	mov	dptr,#___fsmul_PARM_2
      0002B8 EA               [ 4]  540 	mov	a,r2
      0002B9 F0               [ 8]  541 	movx	@dptr,a
      0002BA A3               [12]  542 	inc	dptr
      0002BB EB               [ 4]  543 	mov	a,r3
      0002BC F0               [ 8]  544 	movx	@dptr,a
      0002BD A3               [12]  545 	inc	dptr
      0002BE EC               [ 4]  546 	mov	a,r4
      0002BF F0               [ 8]  547 	movx	@dptr,a
      0002C0 A3               [12]  548 	inc	dptr
      0002C1 ED               [ 4]  549 	mov	a,r5
      0002C2 F0               [ 8]  550 	movx	@dptr,a
      0002C3 C0 02            [ 8]  551 	push	ar2
      0002C5 C0 03            [ 8]  552 	push	ar3
      0002C7 C0 04            [ 8]  553 	push	ar4
      0002C9 C0 05            [ 8]  554 	push	ar5
      0002CB 90 7B 11 B2      [12]  555 	mov	dptr,#0x7b11b2
      0002CF 75 F0 BB         [12]  556 	mov	b,#0xbb
      0002D2 12s00r00r00      [16]  557 	lcall	___fsmul
      0002D6 AE 82            [ 8]  558 	mov	r6,dpl
      0002D8 AF 83            [ 8]  559 	mov	r7,dph
      0002DA A8 93            [ 8]  560 	mov	r0,dpx
      0002DC A9 F0            [ 8]  561 	mov	r1,b
      0002DE D0 05            [ 8]  562 	pop	ar5
      0002E0 D0 04            [ 8]  563 	pop	ar4
      0002E2 D0 03            [ 8]  564 	pop	ar3
      0002E4 D0 02            [ 8]  565 	pop	ar2
                                    566 ;	genAssign: resultIsFar = TRUE
      0002E6 90s00r00r00      [12]  567 	mov	dptr,#___fsadd_PARM_2
      0002EA 74 C6            [ 8]  568 	mov	a,#0xc6
      0002EC F0               [ 8]  569 	movx	@dptr,a
      0002ED A3               [12]  570 	inc	dptr
      0002EE 74 E2            [ 8]  571 	mov	a,#0xe2
      0002F0 F0               [ 8]  572 	movx	@dptr,a
      0002F1 A3               [12]  573 	inc	dptr
      0002F2 74 52            [ 8]  574 	mov	a,#0x52
      0002F4 F0               [ 8]  575 	movx	@dptr,a
      0002F5 A3               [12]  576 	inc	dptr
      0002F6 74 BF            [ 8]  577 	mov	a,#0xbf
      0002F8 F0               [ 8]  578 	movx	@dptr,a
      0002F9 C0 02            [ 8]  579 	push	ar2
      0002FB C0 03            [ 8]  580 	push	ar3
      0002FD C0 04            [ 8]  581 	push	ar4
      0002FF C0 05            [ 8]  582 	push	ar5
      000301 8E 82            [ 8]  583 	mov	dpl,r6
      000303 8F 83            [ 8]  584 	mov	dph,r7
      000305 88 93            [ 8]  585 	mov	dpx,r0
      000307 89 F0            [ 8]  586 	mov	b,r1
      000309 12s00r00r00      [16]  587 	lcall	___fsadd
      00030D AE 82            [ 8]  588 	mov	r6,dpl
      00030F AF 83            [ 8]  589 	mov	r7,dph
      000311 A8 93            [ 8]  590 	mov	r0,dpx
      000313 A9 F0            [ 8]  591 	mov	r1,b
      000315 D0 05            [ 8]  592 	pop	ar5
      000317 D0 04            [ 8]  593 	pop	ar4
      000319 D0 03            [ 8]  594 	pop	ar3
      00031B D0 02            [ 8]  595 	pop	ar2
                                    596 ;	genAssign: resultIsFar = TRUE
      00031D 90s00r00r00      [12]  597 	mov	dptr,#___fsmul_PARM_2
      000321 EA               [ 4]  598 	mov	a,r2
      000322 F0               [ 8]  599 	movx	@dptr,a
      000323 A3               [12]  600 	inc	dptr
      000324 EB               [ 4]  601 	mov	a,r3
      000325 F0               [ 8]  602 	movx	@dptr,a
      000326 A3               [12]  603 	inc	dptr
      000327 EC               [ 4]  604 	mov	a,r4
      000328 F0               [ 8]  605 	movx	@dptr,a
      000329 A3               [12]  606 	inc	dptr
      00032A ED               [ 4]  607 	mov	a,r5
      00032B F0               [ 8]  608 	movx	@dptr,a
      00032C C0 02            [ 8]  609 	push	ar2
      00032E C0 03            [ 8]  610 	push	ar3
      000330 C0 04            [ 8]  611 	push	ar4
      000332 C0 05            [ 8]  612 	push	ar5
      000334 8E 82            [ 8]  613 	mov	dpl,r6
      000336 8F 83            [ 8]  614 	mov	dph,r7
      000338 88 93            [ 8]  615 	mov	dpx,r0
      00033A 89 F0            [ 8]  616 	mov	b,r1
      00033C 12s00r00r00      [16]  617 	lcall	___fsmul
      000340 E5*00            [ 8]  618 	mov	a,_bpx
      000342 C3               [ 4]  619 	clr	c
      000343 94 FB            [ 8]  620 	subb	a,#0xfb
      000345 F5 84            [ 8]  621 	mov	dpl1,a
      000347 E5*01            [ 8]  622 	mov	a,_bpx+1
      000349 94 FF            [ 8]  623 	subb	a,#0xff
      00034B F5 85            [ 8]  624 	mov	dph1,a
      00034D 75 95 FF         [12]  625 	mov	dpx1,#0xff
      000350 05 86            [ 8]  626 	inc	dps
      000352 E5 82            [ 8]  627 	mov	a,dpl
      000354 F0               [ 8]  628 	movx	@dptr,a
      000355 A3               [12]  629 	inc	dptr
      000356 E5 83            [ 8]  630 	mov	a,dph
      000358 F0               [ 8]  631 	movx	@dptr,a
      000359 A3               [12]  632 	inc	dptr
      00035A E5 93            [ 8]  633 	mov	a,dpx
      00035C F0               [ 8]  634 	movx	@dptr,a
      00035D A3               [12]  635 	inc	dptr
      00035E E5 F0            [ 8]  636 	mov	a,b
      000360 F0               [ 8]  637 	movx	@dptr,a
      000361 75 86 00         [12]  638 	mov	dps,#0
      000364 D0 05            [ 8]  639 	pop	ar5
      000366 D0 04            [ 8]  640 	pop	ar4
      000368 D0 03            [ 8]  641 	pop	ar3
      00036A D0 02            [ 8]  642 	pop	ar2
                                    643 ;	genAssign: resultIsFar = TRUE
      00036C 90s00r00r00      [12]  644 	mov	dptr,#___fsadd_PARM_2
      000370 74 1A            [ 8]  645 	mov	a,#0x1a
      000372 F0               [ 8]  646 	movx	@dptr,a
      000373 A3               [12]  647 	inc	dptr
      000374 74 2A            [ 8]  648 	mov	a,#0x2a
      000376 F0               [ 8]  649 	movx	@dptr,a
      000377 A3               [12]  650 	inc	dptr
      000378 74 1E            [ 8]  651 	mov	a,#0x1e
      00037A F0               [ 8]  652 	movx	@dptr,a
      00037B A3               [12]  653 	inc	dptr
      00037C 74 40            [ 8]  654 	mov	a,#0x40
      00037E F0               [ 8]  655 	movx	@dptr,a
      00037F 8A 82            [ 8]  656 	mov	dpl,r2
      000381 8B 83            [ 8]  657 	mov	dph,r3
      000383 8C 93            [ 8]  658 	mov	dpx,r4
      000385 8D F0            [ 8]  659 	mov	b,r5
      000387 12s00r00r00      [16]  660 	lcall	___fsadd
      00038B AE 82            [ 8]  661 	mov	r6,dpl
      00038D AF 83            [ 8]  662 	mov	r7,dph
      00038F A8 93            [ 8]  663 	mov	r0,dpx
      000391 A9 F0            [ 8]  664 	mov	r1,b
                                    665 ;	genAssign: resultIsFar = TRUE
      000393 90s00r00r00      [12]  666 	mov	dptr,#___fsdiv_PARM_2
      000397 EE               [ 4]  667 	mov	a,r6
      000398 F0               [ 8]  668 	movx	@dptr,a
      000399 A3               [12]  669 	inc	dptr
      00039A EF               [ 4]  670 	mov	a,r7
      00039B F0               [ 8]  671 	movx	@dptr,a
      00039C A3               [12]  672 	inc	dptr
      00039D E8               [ 4]  673 	mov	a,r0
      00039E F0               [ 8]  674 	movx	@dptr,a
      00039F A3               [12]  675 	inc	dptr
      0003A0 E9               [ 4]  676 	mov	a,r1
      0003A1 F0               [ 8]  677 	movx	@dptr,a
      0003A2 E5*00            [ 8]  678 	mov	a,_bpx
      0003A4 C3               [ 4]  679 	clr	c
      0003A5 94 FB            [ 8]  680 	subb	a,#0xfb
      0003A7 F5 84            [ 8]  681 	mov	dpl1,a
      0003A9 E5*01            [ 8]  682 	mov	a,_bpx+1
      0003AB 94 FF            [ 8]  683 	subb	a,#0xff
      0003AD F5 85            [ 8]  684 	mov	dph1,a
      0003AF 75 95 FF         [12]  685 	mov	dpx1,#0xff
      0003B2 05 86            [ 8]  686 	inc	dps
      0003B4 E0               [ 8]  687 	movx	a,@dptr
      0003B5 F5 82            [ 8]  688 	mov	dpl,a
      0003B7 A3               [12]  689 	inc	dptr
      0003B8 E0               [ 8]  690 	movx	a,@dptr
      0003B9 F5 83            [ 8]  691 	mov	dph,a
      0003BB A3               [12]  692 	inc	dptr
      0003BC E0               [ 8]  693 	movx	a,@dptr
      0003BD F5 93            [ 8]  694 	mov	dpx,a
      0003BF A3               [12]  695 	inc	dptr
      0003C0 E0               [ 8]  696 	movx	a,@dptr
      0003C1 F5 F0            [ 8]  697 	mov	b,a
      0003C3 75 86 00         [12]  698 	mov	dps,#0
      0003C6 12s00r00r00      [16]  699 	lcall	___fsdiv
      0003CA AE 82            [ 8]  700 	mov	r6,dpl
      0003CC AF 83            [ 8]  701 	mov	r7,dph
      0003CE A8 93            [ 8]  702 	mov	r0,dpx
      0003D0 A9 F0            [ 8]  703 	mov	r1,b
                                    704 ;	genAssign: resultIsFar = TRUE
      0003D2 90s00r00r00      [12]  705 	mov	dptr,#___fsmul_PARM_2
      0003D6 EE               [ 4]  706 	mov	a,r6
      0003D7 F0               [ 8]  707 	movx	@dptr,a
      0003D8 A3               [12]  708 	inc	dptr
      0003D9 EF               [ 4]  709 	mov	a,r7
      0003DA F0               [ 8]  710 	movx	@dptr,a
      0003DB A3               [12]  711 	inc	dptr
      0003DC E8               [ 4]  712 	mov	a,r0
      0003DD F0               [ 8]  713 	movx	@dptr,a
      0003DE A3               [12]  714 	inc	dptr
      0003DF E9               [ 4]  715 	mov	a,r1
      0003E0 F0               [ 8]  716 	movx	@dptr,a
      0003E1 E5*00            [ 8]  717 	mov	a,_bpx
      0003E3 C3               [ 4]  718 	clr	c
      0003E4 94 F7            [ 8]  719 	subb	a,#0xf7
      0003E6 F5 84            [ 8]  720 	mov	dpl1,a
      0003E8 E5*01            [ 8]  721 	mov	a,_bpx+1
      0003EA 94 FF            [ 8]  722 	subb	a,#0xff
      0003EC F5 85            [ 8]  723 	mov	dph1,a
      0003EE 75 95 FF         [12]  724 	mov	dpx1,#0xff
      0003F1 05 86            [ 8]  725 	inc	dps
      0003F3 E0               [ 8]  726 	movx	a,@dptr
      0003F4 F5 82            [ 8]  727 	mov	dpl,a
      0003F6 A3               [12]  728 	inc	dptr
      0003F7 E0               [ 8]  729 	movx	a,@dptr
      0003F8 F5 83            [ 8]  730 	mov	dph,a
      0003FA A3               [12]  731 	inc	dptr
      0003FB E0               [ 8]  732 	movx	a,@dptr
      0003FC F5 93            [ 8]  733 	mov	dpx,a
      0003FE A3               [12]  734 	inc	dptr
      0003FF E0               [ 8]  735 	movx	a,@dptr
      000400 F5 F0            [ 8]  736 	mov	b,a
      000402 75 86 00         [12]  737 	mov	dps,#0
      000405 12s00r00r00      [16]  738 	lcall	___fsmul
      000409 AE 82            [ 8]  739 	mov	r6,dpl
      00040B AF 83            [ 8]  740 	mov	r7,dph
      00040D A8 93            [ 8]  741 	mov	r0,dpx
      00040F A9 F0            [ 8]  742 	mov	r1,b
                                    743 ;	genAssign: resultIsFar = TRUE
      000411 90s00r00r00      [12]  744 	mov	dptr,#___fsadd_PARM_2
      000415 EE               [ 4]  745 	mov	a,r6
      000416 F0               [ 8]  746 	movx	@dptr,a
      000417 A3               [12]  747 	inc	dptr
      000418 EF               [ 4]  748 	mov	a,r7
      000419 F0               [ 8]  749 	movx	@dptr,a
      00041A A3               [12]  750 	inc	dptr
      00041B E8               [ 4]  751 	mov	a,r0
      00041C F0               [ 8]  752 	movx	@dptr,a
      00041D A3               [12]  753 	inc	dptr
      00041E E9               [ 4]  754 	mov	a,r1
      00041F F0               [ 8]  755 	movx	@dptr,a
      000420 E5*00            [ 8]  756 	mov	a,_bpx
      000422 C3               [ 4]  757 	clr	c
      000423 94 F7            [ 8]  758 	subb	a,#0xf7
      000425 F5 84            [ 8]  759 	mov	dpl1,a
      000427 E5*01            [ 8]  760 	mov	a,_bpx+1
      000429 94 FF            [ 8]  761 	subb	a,#0xff
      00042B F5 85            [ 8]  762 	mov	dph1,a
      00042D 75 95 FF         [12]  763 	mov	dpx1,#0xff
      000430 05 86            [ 8]  764 	inc	dps
      000432 E0               [ 8]  765 	movx	a,@dptr
      000433 F5 82            [ 8]  766 	mov	dpl,a
      000435 A3               [12]  767 	inc	dptr
      000436 E0               [ 8]  768 	movx	a,@dptr
      000437 F5 83            [ 8]  769 	mov	dph,a
      000439 A3               [12]  770 	inc	dptr
      00043A E0               [ 8]  771 	movx	a,@dptr
      00043B F5 93            [ 8]  772 	mov	dpx,a
      00043D A3               [12]  773 	inc	dptr
      00043E E0               [ 8]  774 	movx	a,@dptr
      00043F F5 F0            [ 8]  775 	mov	b,a
      000441 75 86 00         [12]  776 	mov	dps,#0
      000444 12s00r00r00      [16]  777 	lcall	___fsadd
                                    778 ;	genAssign: resultIsFar = FALSE
      000448 AA 82            [ 8]  779 	mov	r2,dpl
      00044A AB 83            [ 8]  780 	mov	r3,dph
      00044C AC 93            [ 8]  781 	mov	r4,dpx
      00044E AD F0            [ 8]  782 	mov	r5,b
      000450                        783 00109$:
                                    784 ;	tanhf.c:67: if(x<0.0) r=-r;
                                    785 ;	genAssign: resultIsFar = TRUE
      000450 90s00r00r00      [12]  786 	mov	dptr,#___fslt_PARM_2
      000454 E4               [ 4]  787 	clr	a
      000455 F0               [ 8]  788 	movx	@dptr,a
      000456 A3               [12]  789 	inc	dptr
      000457 F0               [ 8]  790 	movx	@dptr,a
      000458 A3               [12]  791 	inc	dptr
      000459 F0               [ 8]  792 	movx	@dptr,a
      00045A A3               [12]  793 	inc	dptr
      00045B F0               [ 8]  794 	movx	@dptr,a
      00045C C0 02            [ 8]  795 	push	ar2
      00045E C0 03            [ 8]  796 	push	ar3
      000460 C0 04            [ 8]  797 	push	ar4
      000462 C0 05            [ 8]  798 	push	ar5
      000464 75 95 FF         [12]  799 	mov	dpx1,#0xff
      000467 85*01 85         [12]  800 	mov	dph1,_bpx+1
      00046A 85*00 84         [12]  801 	mov	dpl1,_bpx
      00046D 75 86 01         [12]  802 	mov	dps,#1
      000470 A3               [12]  803 	inc	dptr
      000471 75 86 01         [12]  804 	mov	dps, #1
      000474 E0               [ 8]  805 	movx	a,@dptr
      000475 F5 82            [ 8]  806 	mov	dpl,a
      000477 A3               [12]  807 	inc	dptr
      000478 E0               [ 8]  808 	movx	a,@dptr
      000479 F5 83            [ 8]  809 	mov	dph,a
      00047B A3               [12]  810 	inc	dptr
      00047C E0               [ 8]  811 	movx	a,@dptr
      00047D F5 93            [ 8]  812 	mov	dpx,a
      00047F A3               [12]  813 	inc	dptr
      000480 E0               [ 8]  814 	movx	a,@dptr
      000481 F5 F0            [ 8]  815 	mov	b,a
      000483 75 86 00         [12]  816 	mov	dps,#0
      000486 12s00r00r00      [16]  817 	lcall	___fslt
      00048A D0 05            [ 8]  818 	pop	ar5
      00048C D0 04            [ 8]  819 	pop	ar4
      00048E D0 03            [ 8]  820 	pop	ar3
      000490 D0 02            [ 8]  821 	pop	ar2
      000492 E5 82            [ 8]  822 	mov	a,dpl
      000494 60 04            [12]  823 	jz  00111$
      000496                        824 00137$:
      000496 ED               [ 4]  825 	mov	a,r5
      000497 B2 E7            [ 8]  826 	cpl	acc[7]
      000499 FD               [ 4]  827 	mov	r5,a
      00049A                        828 00111$:
                                    829 ;	tanhf.c:68: return r;
      00049A 8A 82            [ 8]  830 	mov	dpl,r2
      00049C 8B 83            [ 8]  831 	mov	dph,r3
      00049E 8C 93            [ 8]  832 	mov	dpx,r4
      0004A0 8D F0            [ 8]  833 	mov	b,r5
      0004A2                        834 00112$:
                                    835 ;	tanhf.c:69: }
      0004A2 85*00 81         [12]  836 	mov	sp,_bpx
      0004A5 85*01 9B         [12]  837 	mov	esp,_bpx+1
      0004A8 D0*01            [ 8]  838 	pop	_bpx+1
      0004AA D0*00            [ 8]  839 	pop	_bpx
      0004AC 22               [16]  840 	ret
                                    841 	.area CSEG    (CODE)
                                    842 	.area CONST   (CODE)
                                    843 	.area XINIT   (CODE)
                                    844 	.area CABS    (ABS,CODE)
