                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module memcpyx
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _memcpyx_PARM_3
                                     35 	.globl _memcpyx_PARM_2
                                     36 	.globl _memcpyx
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _memcpyx_PARM_2:
      000000                         79 	.ds 3
      000003                         80 _memcpyx_PARM_3:
      000003                         81 	.ds 2
                                     82 ;--------------------------------------------------------
                                     83 ; absolute external ram data
                                     84 ;--------------------------------------------------------
                                     85 	.area XABS    (ABS,XDATA)
                                     86 ;--------------------------------------------------------
                                     87 ; initialized external ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area XISEG   (XDATA)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 	.area GSFINAL (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area HOME    (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area CSEG    (CODE)
                                    106 ;------------------------------------------------------------
                                    107 ;Allocation info for local variables in function 'memcpyx'
                                    108 ;------------------------------------------------------------
                                    109 ;src                       Allocated with name '_memcpyx_PARM_2'
                                    110 ;count                     Allocated with name '_memcpyx_PARM_3'
                                    111 ;dst                       Allocated to registers 
                                    112 ;------------------------------------------------------------
                                    113 ;	memcpyx.c:33: void __xdata * memcpyx (
                                    114 ;	-----------------------------------------
                                    115 ;	 function memcpyx
                                    116 ;	-----------------------------------------
      000000                        117 _memcpyx:
                                    118 ;	naked function: no prologue.
                                    119 ;	memcpyx.c:104: __endasm;    
                                    120 ;	Destination is in DPTR. Save it on stack so we can return it at end.
      000000 C0 93            [ 8]  121 	push	dpx
      000002 C0 83            [ 8]  122 	push	dph
      000004 C0 82            [ 8]  123 	push	dpl
      000006 75 86 01         [12]  124 	mov	dps, #0x1 ; Alternate DPTR.
                                    125 ;	count is in _memcpyx_PARM_3
      000009 90s00r00r03      [12]  126 	mov	dptr, #_memcpyx_PARM_3
      00000D E0               [ 8]  127 	movx	a, @dptr
      00000E A3               [12]  128 	inc	dptr
      00000F FA               [ 4]  129 	mov	r2, a
      000010 E0               [ 8]  130 	movx	a, @dptr
      000011 FB               [ 4]  131 	mov	r3, a
                                    132 ;	src is in _memcpyx_PARM_2
      000012 90s00r00r00      [12]  133 	mov	dptr, #_memcpyx_PARM_2
      000016 E0               [ 8]  134 	movx	a, @dptr
      000017 A3               [12]  135 	inc	dptr
      000018 C0 E0            [ 8]  136 	push	acc
      00001A E0               [ 8]  137 	movx	a, @dptr
      00001B A3               [12]  138 	inc	dptr
      00001C C0 E0            [ 8]  139 	push	acc
      00001E E0               [ 8]  140 	movx	a, @dptr
      00001F F5 95            [ 8]  141 	mov	dpx1, a
      000021 D0 85            [ 8]  142 	pop	dph1
      000023 D0 84            [ 8]  143 	pop	dpl1
      000025 75 86 21         [12]  144 	mov	dps, #0x21 ; Current DPTR is alt DPTR, toggle after each op.
                                    145 ;	src is in alt DPTR, dst is in normal DPTR, count is in r2/r3.
                                    146 ;	If we have zero bytes to copy, quick out.
      000028 EA               [ 4]  147 	mov	a, r2
      000029 4B               [ 4]  148 	orl	a, r3
      00002A 60 0D            [12]  149 	jz	_memcpy_done
                                    150 ;	increment r3 if r2 != 0 (makes djnz end-of-loop sequence possible).
      00002C 0B               [ 4]  151 	inc	r3
      00002D BA 00 01         [16]  152 	cjne	r2, #0x0, _memcpyx_loopTop
      000030 1B               [ 4]  153 	dec	r3
      000031                        154 _memcpyx_loopTop:
      000031 E0               [ 8]  155 	movx	a, @dptr
      000032 F0               [ 8]  156 	movx	@dptr, a
      000033 A3               [12]  157 	inc	dptr
      000034 A3               [12]  158 	inc	dptr
      000035 DA FA            [12]  159 	djnz	r2, _memcpyx_loopTop
      000037 DB F8            [12]  160 	djnz	r3, _memcpyx_loopTop
      000039                        161 _memcpy_done:
      000039 75 86 00         [12]  162 	mov	dps, #0x0
      00003C D0 82            [ 8]  163 	pop	dpl
      00003E D0 83            [ 8]  164 	pop	dph
      000040 D0 93            [ 8]  165 	pop	dpx
      000042 22               [16]  166 	ret
      000043                        167 00101$:
                                    168 ;	memcpyx.c:106: }
                                    169 ;	naked function: no epilogue.
                                    170 	.area CSEG    (CODE)
                                    171 	.area CONST   (CODE)
                                    172 	.area XINIT   (CODE)
                                    173 	.area CABS    (ABS,CODE)
