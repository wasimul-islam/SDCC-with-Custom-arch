                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divuint
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __divuint_PARM_2
                                     35 	.globl __divuint
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; uninitialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 __divuint_PARM_2:
      000000                         78 	.ds 2
                                     79 ;--------------------------------------------------------
                                     80 ; absolute external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XABS    (ABS,XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; initialized external ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area XISEG   (XDATA)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function '_divuint'
                                    105 ;------------------------------------------------------------
                                    106 ;y                         Allocated with name '__divuint_PARM_2'
                                    107 ;x                         Allocated to registers r2 r3 
                                    108 ;reste                     Allocated to registers r4 r5 
                                    109 ;count                     Allocated to registers 
                                    110 ;c                         Allocated to registers r7 
                                    111 ;------------------------------------------------------------
                                    112 ;	_divuint.c:161: _divuint (unsigned int x, unsigned int y) __SDCC_NONBANKED
                                    113 ;	-----------------------------------------
                                    114 ;	 function _divuint
                                    115 ;	-----------------------------------------
      000000                        116 __divuint:
                           000002   117 	ar2 = 0x02
                           000003   118 	ar3 = 0x03
                           000004   119 	ar4 = 0x04
                           000005   120 	ar5 = 0x05
                           000006   121 	ar6 = 0x06
                           000007   122 	ar7 = 0x07
                           000000   123 	ar0 = 0x00
                           000001   124 	ar1 = 0x01
      000000 AA 82            [ 8]  125 	mov	r2,dpl
      000002 AB 83            [ 8]  126 	mov	r3,dph
                                    127 ;	_divuint.c:163: unsigned int reste = 0;
                                    128 ;	genAssign: resultIsFar = TRUE
      000004 7C 00            [ 8]  129 	mov	r4,#0x00
      000006 7D 00            [ 8]  130 	mov	r5,#0x00
                                    131 ;	_divuint.c:167: do
                                    132 ;	genAssign: resultIsFar = FALSE
      000008 7E 10            [ 8]  133 	mov	r6,#0x10
      00000A                        134 00105$:
                                    135 ;	_divuint.c:170: c = MSB_SET(x);
      00000A EB               [ 4]  136 	mov	a,r3
      00000B 23               [ 4]  137 	rl	a
      00000C 54 01            [ 8]  138 	anl	a,#0x01
      00000E FF               [ 4]  139 	mov	r7,a
                                    140 ;	_divuint.c:171: x <<= 1;
      00000F 8A 00            [ 8]  141 	mov	ar0,r2
      000011 EB               [ 4]  142 	mov	a,r3
      000012 C8               [ 4]  143 	xch	a,r0
      000013 25 E0            [ 8]  144 	add	a,acc
      000015 C8               [ 4]  145 	xch	a,r0
      000016 33               [ 4]  146 	rlc	a
      000017 F9               [ 4]  147 	mov	r1,a
                                    148 ;	genAssign: resultIsFar = TRUE
      000018 88 02            [ 8]  149 	mov	ar2,r0
      00001A 89 03            [ 8]  150 	mov	ar3,r1
                                    151 ;	_divuint.c:172: reste <<= 1;
      00001C 8C 00            [ 8]  152 	mov	ar0,r4
      00001E ED               [ 4]  153 	mov	a,r5
      00001F C8               [ 4]  154 	xch	a,r0
      000020 25 E0            [ 8]  155 	add	a,acc
      000022 C8               [ 4]  156 	xch	a,r0
      000023 33               [ 4]  157 	rlc	a
      000024 F9               [ 4]  158 	mov	r1,a
                                    159 ;	genAssign: resultIsFar = TRUE
      000025 88 04            [ 8]  160 	mov	ar4,r0
      000027 89 05            [ 8]  161 	mov	ar5,r1
                                    162 ;	_divuint.c:173: if (c)
      000029 EF               [ 4]  163 	mov	a,r7
      00002A 60 03            [12]  164 	jz  00102$
      00002C                        165 00127$:
                                    166 ;	_divuint.c:174: reste |= 1;
      00002C 43 04 01         [12]  167 	orl	ar4,#0x01
      00002F                        168 00102$:
                                    169 ;	_divuint.c:176: if (reste >= y)
      00002F 90s00r00r00      [12]  170 	mov	dptr,#__divuint_PARM_2
      000033 C3               [ 4]  171 	clr	c
      000034 EC               [ 4]  172 	mov	a,r4
      000035 C5 F0            [ 8]  173 	xch	a, b
      000037 E0               [ 8]  174 	movx	a,@dptr
      000038 C5 F0            [ 8]  175 	xch	a, b
      00003A 95 F0            [ 8]  176 	subb	a,b
      00003C ED               [ 4]  177 	mov	a,r5
      00003D C5 F0            [ 8]  178 	xch	a, b
      00003F A3               [12]  179 	inc	dptr
      000040 E0               [ 8]  180 	movx	a,@dptr
      000041 C5 F0            [ 8]  181 	xch	a, b
      000043 95 F0            [ 8]  182 	subb	a,b
      000045 40 1B            [12]  183 	jc   00106$
      000047                        184 00128$:
                                    185 ;	_divuint.c:178: reste -= y;
      000047 90s00r00r00      [12]  186 	mov	dptr,#__divuint_PARM_2
      00004B C3               [ 4]  187 	clr	c
      00004C E0               [ 8]  188 	movx	a,@dptr
      00004D F5 F0            [ 8]  189 	mov	b,a
      00004F EC               [ 4]  190 	mov	a,r4
      000050 95 F0            [ 8]  191 	subb	a,b
      000052 FF               [ 4]  192 	mov	r7,a
      000053 A3               [12]  193 	inc	dptr
      000054 E0               [ 8]  194 	movx	a,@dptr
      000055 F5 F0            [ 8]  195 	mov	b,a
      000057 ED               [ 4]  196 	mov	a,r5
      000058 95 F0            [ 8]  197 	subb	a,b
      00005A F8               [ 4]  198 	mov	r0,a
                                    199 ;	genAssign: resultIsFar = TRUE
      00005B 8F 04            [ 8]  200 	mov	ar4,r7
      00005D 88 05            [ 8]  201 	mov	ar5,r0
                                    202 ;	_divuint.c:180: x |= 1;
      00005F 43 02 01         [12]  203 	orl	ar2,#0x01
      000062                        204 00106$:
                                    205 ;	_divuint.c:183: while (--count);
      000062 1E               [ 4]  206 	dec	r6
      000063 EE               [ 4]  207 	mov	a,r6
      000064 70 A4            [12]  208 	jnz  00105$
      000066                        209 00129$:
                                    210 ;	_divuint.c:184: return x;
      000066 8A 82            [ 8]  211 	mov	dpl,r2
      000068 8B 83            [ 8]  212 	mov	dph,r3
      00006A                        213 00108$:
                                    214 ;	_divuint.c:185: }
      00006A 22               [16]  215 	ret
                                    216 	.area CSEG    (CODE)
                                    217 	.area CONST   (CODE)
                                    218 	.area XINIT   (CODE)
                                    219 	.area CABS    (ABS,CODE)
