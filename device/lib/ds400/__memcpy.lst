                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __memcpy
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl ___memcpy_PARM_3
                                     35 	.globl ___memcpy_PARM_2
                                     36 	.globl ___memcpy
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 ___memcpy_PARM_2:
      000000                         79 	.ds 4
      000004                         80 ___memcpy_PARM_3:
      000004                         81 	.ds 2
      000006                         82 ___memcpy_ret_65536_28:
      000006                         83 	.ds 4
      00000A                         84 ___memcpy_sloc1_1_0:
      00000A                         85 	.ds 4
                                     86 ;--------------------------------------------------------
                                     87 ; absolute external ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area XABS    (ABS,XDATA)
                                     90 ;--------------------------------------------------------
                                     91 ; initialized external ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area XISEG   (XDATA)
                                     94 ;--------------------------------------------------------
                                     95 ; global & static initialisations
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 	.area GSFINAL (CODE)
                                    100 	.area GSINIT  (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; Home
                                    103 ;--------------------------------------------------------
                                    104 	.area HOME    (CODE)
                                    105 	.area HOME    (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; code
                                    108 ;--------------------------------------------------------
                                    109 	.area CSEG    (CODE)
                                    110 ;------------------------------------------------------------
                                    111 ;Allocation info for local variables in function '__memcpy'
                                    112 ;------------------------------------------------------------
                                    113 ;src                       Allocated with name '___memcpy_PARM_2'
                                    114 ;n                         Allocated with name '___memcpy_PARM_3'
                                    115 ;dst                       Allocated to registers r2 r3 r4 r5 
                                    116 ;ret                       Allocated with name '___memcpy_ret_65536_28'
                                    117 ;d                         Allocated to registers 
                                    118 ;s                         Allocated to registers 
                                    119 ;sloc0                     Allocated with name '___memcpy_sloc0_1_0'
                                    120 ;sloc1                     Allocated with name '___memcpy_sloc1_1_0'
                                    121 ;------------------------------------------------------------
                                    122 ;	__memcpy.c:31: void *__memcpy (void *dst, const void *src, size_t n)
                                    123 ;	-----------------------------------------
                                    124 ;	 function __memcpy
                                    125 ;	-----------------------------------------
      000000                        126 ___memcpy:
                           000002   127 	ar2 = 0x02
                           000003   128 	ar3 = 0x03
                           000004   129 	ar4 = 0x04
                           000005   130 	ar5 = 0x05
                           000006   131 	ar6 = 0x06
                           000007   132 	ar7 = 0x07
                           000000   133 	ar0 = 0x00
                           000001   134 	ar1 = 0x01
      000000 AA 82            [ 8]  135 	mov	r2,dpl
      000002 AB 83            [ 8]  136 	mov	r3,dph
      000004 AC 93            [ 8]  137 	mov	r4,dpx
      000006 AD F0            [ 8]  138 	mov	r5,b
                                    139 ;	__memcpy.c:33: void *ret = dst;
                                    140 ;	genAssign: resultIsFar = TRUE
      000008 90s00r00r06      [12]  141 	mov	dptr,#___memcpy_ret_65536_28
      00000C EA               [ 4]  142 	mov	a,r2
      00000D F0               [ 8]  143 	movx	@dptr,a
      00000E A3               [12]  144 	inc	dptr
      00000F EB               [ 4]  145 	mov	a,r3
      000010 F0               [ 8]  146 	movx	@dptr,a
      000011 A3               [12]  147 	inc	dptr
      000012 EC               [ 4]  148 	mov	a,r4
      000013 F0               [ 8]  149 	movx	@dptr,a
      000014 A3               [12]  150 	inc	dptr
      000015 ED               [ 4]  151 	mov	a,r5
      000016 F0               [ 8]  152 	movx	@dptr,a
                                    153 ;	__memcpy.c:34: char *d = dst;
                                    154 ;	genAssign: resultIsFar = FALSE
                                    155 ;	__memcpy.c:35: const char *s = src;
      000017 90s00r00r00      [12]  156 	mov	dptr,#___memcpy_PARM_2
                                    157 ;	genAssign: resultIsFar = FALSE
      00001B E0               [ 8]  158 	movx	a,@dptr
      00001C FE               [ 4]  159 	mov	r6,a
      00001D A3               [12]  160 	inc	dptr
      00001E E0               [ 8]  161 	movx	a,@dptr
      00001F FF               [ 4]  162 	mov	r7,a
      000020 A3               [12]  163 	inc	dptr
      000021 E0               [ 8]  164 	movx	a,@dptr
      000022 F8               [ 4]  165 	mov	r0,a
      000023 A3               [12]  166 	inc	dptr
      000024 E0               [ 8]  167 	movx	a,@dptr
      000025 F9               [ 4]  168 	mov	r1,a
      000026 90s00r00r0A      [12]  169 	mov	dptr,#___memcpy_sloc1_1_0
      00002A EE               [ 4]  170 	mov	a,r6
      00002B F0               [ 8]  171 	movx	@dptr,a
      00002C A3               [12]  172 	inc	dptr
      00002D EF               [ 4]  173 	mov	a,r7
      00002E F0               [ 8]  174 	movx	@dptr,a
      00002F A3               [12]  175 	inc	dptr
      000030 E8               [ 4]  176 	mov	a,r0
      000031 F0               [ 8]  177 	movx	@dptr,a
      000032 A3               [12]  178 	inc	dptr
      000033 E9               [ 4]  179 	mov	a,r1
      000034 F0               [ 8]  180 	movx	@dptr,a
                                    181 ;	__memcpy.c:37: while (n--)
      000035 90s00r00r04      [12]  182 	mov	dptr,#___memcpy_PARM_3
                                    183 ;	genAssign: resultIsFar = FALSE
      000039 E0               [ 8]  184 	movx	a,@dptr
      00003A F8               [ 4]  185 	mov	r0,a
      00003B A3               [12]  186 	inc	dptr
      00003C E0               [ 8]  187 	movx	a,@dptr
      00003D F9               [ 4]  188 	mov	r1,a
      00003E                        189 00101$:
                                    190 ;	genAssign: resultIsFar = FALSE
      00003E 88 06            [ 8]  191 	mov	ar6,r0
      000040 89 07            [ 8]  192 	mov	ar7,r1
      000042 18               [ 4]  193 	dec	r0
      000043 B8 FF 01         [16]  194 	cjne	r0,#0xff,00115$
      000046 19               [ 4]  195 	dec	r1
      000047                        196 00115$:
      000047 EE               [ 4]  197 	mov	a,r6
      000048 4F               [ 4]  198 	orl	a,r7
      000049 60 4B            [12]  199 	jz  00103$
      00004B                        200 00116$:
                                    201 ;	__memcpy.c:38: *d++ = *s++;
      00004B 90s00r00r0A      [12]  202 	mov	dptr,#___memcpy_sloc1_1_0
      00004F E0               [ 8]  203 	movx	a,@dptr
      000050 C0 E0            [ 8]  204 	push	acc
      000052 A3               [12]  205 	inc	dptr
      000053 E0               [ 8]  206 	movx	a,@dptr
      000054 C0 E0            [ 8]  207 	push	acc
      000056 A3               [12]  208 	inc	dptr
      000057 E0               [ 8]  209 	movx	a,@dptr
      000058 C0 E0            [ 8]  210 	push	acc
      00005A A3               [12]  211 	inc	dptr
      00005B E0               [ 8]  212 	movx	a,@dptr
      00005C F5 F0            [ 8]  213 	mov	b,a
      00005E D0 93            [ 8]  214 	pop	dpx
      000060 D0 83            [ 8]  215 	pop	dph
      000062 D0 82            [ 8]  216 	pop	dpl
      000064 12s00r00r00      [16]  217 	lcall	__gptrget
      000068 FE               [ 4]  218 	mov	r6,a
      000069 90s00r00r0A      [12]  219 	mov	dptr,#___memcpy_sloc1_1_0
      00006D E0               [ 8]  220 	movx	a,@dptr
      00006E 24 01            [ 8]  221 	add	a,#0x01
      000070 F0               [ 8]  222 	movx	@dptr,a
      000071 A3               [12]  223 	inc	dptr
      000072 E0               [ 8]  224 	movx	a,@dptr
      000073 34 00            [ 8]  225 	addc	a,#0x00
      000075 F0               [ 8]  226 	movx	@dptr,a
      000076 A3               [12]  227 	inc	dptr
      000077 E0               [ 8]  228 	movx	a,@dptr
      000078 34 00            [ 8]  229 	addc	a,#0x00
      00007A F0               [ 8]  230 	movx	@dptr,a
      00007B A3               [12]  231 	inc	dptr
      00007C E0               [ 8]  232 	movx	a,@dptr
      00007D F0               [ 8]  233 	movx	@dptr,a
      00007E 8A 82            [ 8]  234 	mov	dpl,r2
      000080 8B 83            [ 8]  235 	mov	dph,r3
      000082 8C 93            [ 8]  236 	mov	dpx,r4
      000084 8D F0            [ 8]  237 	mov	b,r5
      000086 EE               [ 4]  238 	mov	a,r6
      000087 12s00r00r00      [16]  239 	lcall	__gptrput
      00008B A3               [12]  240 	inc	dptr
      00008C AA 82            [ 8]  241 	mov	r2,dpl
      00008E AB 83            [ 8]  242 	mov	r3,dph
      000090 AC 93            [ 8]  243 	mov	r4,dpx
      000092 AD F0            [ 8]  244 	mov	r5,b
      000094 80 A8            [12]  245 	sjmp 00101$
      000096                        246 00103$:
                                    247 ;	__memcpy.c:40: return(ret);
      000096 75 86 01         [12]  248 	mov     dps, #1
      000099 90s00r00r06      [12]  249 	mov     dptr, #___memcpy_ret_65536_28
      00009D E0               [ 8]  250 	movx	a,@dptr
      00009E F5 82            [ 8]  251 	mov	dpl,a
      0000A0 A3               [12]  252 	inc	dptr
      0000A1 E0               [ 8]  253 	movx	a,@dptr
      0000A2 F5 83            [ 8]  254 	mov	dph,a
      0000A4 A3               [12]  255 	inc	dptr
      0000A5 E0               [ 8]  256 	movx	a,@dptr
      0000A6 F5 93            [ 8]  257 	mov	dpx,a
      0000A8 A3               [12]  258 	inc	dptr
      0000A9 E0               [ 8]  259 	movx	a,@dptr
      0000AA F5 F0            [ 8]  260 	mov	b,a
      0000AC 75 86 00         [12]  261 	mov	dps,#0
      0000AF                        262 00104$:
                                    263 ;	__memcpy.c:41: }
      0000AF 22               [16]  264 	ret
                                    265 	.area CSEG    (CODE)
                                    266 	.area CONST   (CODE)
                                    267 	.area XINIT   (CODE)
                                    268 	.area CABS    (ABS,CODE)
