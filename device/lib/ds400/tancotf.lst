                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tancotf
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _tancotf
                                     35 	.globl _fabsf
                                     36 	.globl _tancotf_PARM_2
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _tancotf_PARM_2:
      000000                         79 	.ds 1
      000001                         80 _tancotf_f_65536_26:
      000001                         81 	.ds 4
      000005                         82 _tancotf_xn_65536_26:
      000005                         83 	.ds 4
      000009                         84 _tancotf_xnum_65536_26:
      000009                         85 	.ds 4
      00000D                         86 _tancotf_n_65536_26:
      00000D                         87 	.ds 2
      00000F                         88 _tancotf_sloc0_1_0:
      00000F                         89 	.ds 4
                                     90 ;--------------------------------------------------------
                                     91 ; absolute external ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area XABS    (ABS,XDATA)
                                     94 ;--------------------------------------------------------
                                     95 ; initialized external ram data
                                     96 ;--------------------------------------------------------
                                     97 	.area XISEG   (XDATA)
                                     98 ;--------------------------------------------------------
                                     99 ; global & static initialisations
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area GSINIT  (CODE)
                                    103 	.area GSFINAL (CODE)
                                    104 	.area GSINIT  (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; Home
                                    107 ;--------------------------------------------------------
                                    108 	.area HOME    (CODE)
                                    109 	.area HOME    (CODE)
                                    110 ;--------------------------------------------------------
                                    111 ; code
                                    112 ;--------------------------------------------------------
                                    113 	.area CSEG    (CODE)
                                    114 ;------------------------------------------------------------
                                    115 ;Allocation info for local variables in function 'tancotf'
                                    116 ;------------------------------------------------------------
                                    117 ;iscotan                   Allocated with name '_tancotf_PARM_2'
                                    118 ;x                         Allocated to registers r2 r3 r4 r5 
                                    119 ;f                         Allocated with name '_tancotf_f_65536_26'
                                    120 ;g                         Allocated to registers r6 r7 r0 r1 
                                    121 ;xn                        Allocated with name '_tancotf_xn_65536_26'
                                    122 ;xnum                      Allocated with name '_tancotf_xnum_65536_26'
                                    123 ;xden                      Allocated to registers r6 r7 r0 r1 
                                    124 ;n                         Allocated with name '_tancotf_n_65536_26'
                                    125 ;sloc0                     Allocated with name '_tancotf_sloc0_1_0'
                                    126 ;------------------------------------------------------------
                                    127 ;	tancotf.c:53: float tancotf(float x, bool iscotan)
                                    128 ;	-----------------------------------------
                                    129 ;	 function tancotf
                                    130 ;	-----------------------------------------
      000000                        131 _tancotf:
                           000002   132 	ar2 = 0x02
                           000003   133 	ar3 = 0x03
                           000004   134 	ar4 = 0x04
                           000005   135 	ar5 = 0x05
                           000006   136 	ar6 = 0x06
                           000007   137 	ar7 = 0x07
                           000000   138 	ar0 = 0x00
                           000001   139 	ar1 = 0x01
      000000 AA 82            [ 8]  140 	mov	r2,dpl
      000002 AB 83            [ 8]  141 	mov	r3,dph
      000004 AC 93            [ 8]  142 	mov	r4,dpx
      000006 AD F0            [ 8]  143 	mov	r5,b
                                    144 ;	tancotf.c:58: if (fabsf(x) > YMAX)
      000008 C0 02            [ 8]  145 	push	ar2
      00000A C0 03            [ 8]  146 	push	ar3
      00000C C0 04            [ 8]  147 	push	ar4
      00000E C0 05            [ 8]  148 	push	ar5
      000010 8A 82            [ 8]  149 	mov	dpl,r2
      000012 8B 83            [ 8]  150 	mov	dph,r3
      000014 8C 93            [ 8]  151 	mov	dpx,r4
      000016 8D F0            [ 8]  152 	mov	b,r5
      000018 12s00r00r00      [16]  153 	lcall	_fabsf
      00001C AE 82            [ 8]  154 	mov	r6,dpl
      00001E AF 83            [ 8]  155 	mov	r7,dph
      000020 A8 93            [ 8]  156 	mov	r0,dpx
      000022 A9 F0            [ 8]  157 	mov	r1,b
      000024 D0 05            [ 8]  158 	pop	ar5
      000026 D0 04            [ 8]  159 	pop	ar4
      000028 D0 03            [ 8]  160 	pop	ar3
      00002A D0 02            [ 8]  161 	pop	ar2
                                    162 ;	genAssign: resultIsFar = TRUE
      00002C 90s00r00r00      [12]  163 	mov	dptr,#___fslt_PARM_2
      000030 EE               [ 4]  164 	mov	a,r6
      000031 F0               [ 8]  165 	movx	@dptr,a
      000032 A3               [12]  166 	inc	dptr
      000033 EF               [ 4]  167 	mov	a,r7
      000034 F0               [ 8]  168 	movx	@dptr,a
      000035 A3               [12]  169 	inc	dptr
      000036 E8               [ 4]  170 	mov	a,r0
      000037 F0               [ 8]  171 	movx	@dptr,a
      000038 A3               [12]  172 	inc	dptr
      000039 E9               [ 4]  173 	mov	a,r1
      00003A F0               [ 8]  174 	movx	@dptr,a
      00003B C0 02            [ 8]  175 	push	ar2
      00003D C0 03            [ 8]  176 	push	ar3
      00003F C0 04            [ 8]  177 	push	ar4
      000041 C0 05            [ 8]  178 	push	ar5
      000043 90 C9 08 00      [12]  179 	mov	dptr,#0xc90800
      000047 75 F0 45         [12]  180 	mov	b,#0x45
      00004A 12s00r00r00      [16]  181 	lcall	___fslt
      00004E D0 05            [ 8]  182 	pop	ar5
      000050 D0 04            [ 8]  183 	pop	ar4
      000052 D0 03            [ 8]  184 	pop	ar3
      000054 D0 02            [ 8]  185 	pop	ar2
      000056 E5 82            [ 8]  186 	mov	a,dpl
      000058 60 15            [12]  187 	jz  00102$
      00005A                        188 00149$:
                                    189 ;	tancotf.c:60: errno = ERANGE;
                                    190 ;	genAssign: resultIsFar = TRUE
      00005A 90s00r00r00      [12]  191 	mov	dptr,#_errno
      00005E 74 22            [ 8]  192 	mov	a,#0x22
      000060 F0               [ 8]  193 	movx	@dptr,a
      000061 E4               [ 4]  194 	clr	a
      000062 A3               [12]  195 	inc	dptr
      000063 F0               [ 8]  196 	movx	@dptr,a
                                    197 ;	tancotf.c:61: return 0.0;
      000064 90 00 00 00      [12]  198 	mov  dptr,#0x0000
      000068 75 F0 00         [12]  199 	mov	b,#0x00
      00006B 02s00r06r11      [16]  200 	ljmp	00115$
      00006F                        201 00102$:
                                    202 ;	tancotf.c:65: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
                                    203 ;	genAssign: resultIsFar = TRUE
      00006F 90s00r00r00      [12]  204 	mov	dptr,#___fsmul_PARM_2
      000073 EA               [ 4]  205 	mov	a,r2
      000074 F0               [ 8]  206 	movx	@dptr,a
      000075 A3               [12]  207 	inc	dptr
      000076 EB               [ 4]  208 	mov	a,r3
      000077 F0               [ 8]  209 	movx	@dptr,a
      000078 A3               [12]  210 	inc	dptr
      000079 EC               [ 4]  211 	mov	a,r4
      00007A F0               [ 8]  212 	movx	@dptr,a
      00007B A3               [12]  213 	inc	dptr
      00007C ED               [ 4]  214 	mov	a,r5
      00007D F0               [ 8]  215 	movx	@dptr,a
      00007E C0 02            [ 8]  216 	push	ar2
      000080 C0 03            [ 8]  217 	push	ar3
      000082 C0 04            [ 8]  218 	push	ar4
      000084 C0 05            [ 8]  219 	push	ar5
      000086 90 22 F9 83      [12]  220 	mov	dptr,#0x22f983
      00008A 75 F0 3F         [12]  221 	mov	b,#0x3f
      00008D 12s00r00r00      [16]  222 	lcall	___fsmul
      000091 AE 82            [ 8]  223 	mov	r6,dpl
      000093 AF 83            [ 8]  224 	mov	r7,dph
      000095 A8 93            [ 8]  225 	mov	r0,dpx
      000097 A9 F0            [ 8]  226 	mov	r1,b
      000099 D0 05            [ 8]  227 	pop	ar5
      00009B D0 04            [ 8]  228 	pop	ar4
      00009D D0 03            [ 8]  229 	pop	ar3
      00009F D0 02            [ 8]  230 	pop	ar2
                                    231 ;	genAssign: resultIsFar = TRUE
      0000A1 90s00r00r00      [12]  232 	mov	dptr,#___fslt_PARM_2
      0000A5 EA               [ 4]  233 	mov	a,r2
      0000A6 F0               [ 8]  234 	movx	@dptr,a
      0000A7 A3               [12]  235 	inc	dptr
      0000A8 EB               [ 4]  236 	mov	a,r3
      0000A9 F0               [ 8]  237 	movx	@dptr,a
      0000AA A3               [12]  238 	inc	dptr
      0000AB EC               [ 4]  239 	mov	a,r4
      0000AC F0               [ 8]  240 	movx	@dptr,a
      0000AD A3               [12]  241 	inc	dptr
      0000AE ED               [ 4]  242 	mov	a,r5
      0000AF F0               [ 8]  243 	movx	@dptr,a
      0000B0 C0 02            [ 8]  244 	push	ar2
      0000B2 C0 03            [ 8]  245 	push	ar3
      0000B4 C0 04            [ 8]  246 	push	ar4
      0000B6 C0 05            [ 8]  247 	push	ar5
      0000B8 C0 06            [ 8]  248 	push	ar6
      0000BA C0 07            [ 8]  249 	push	ar7
      0000BC C0 00            [ 8]  250 	push	ar0
      0000BE C0 01            [ 8]  251 	push	ar1
      0000C0 90 00 00 00      [12]  252 	mov  dptr,#0x0000
      0000C4 75 F0 00         [12]  253 	mov	b,#0x00
      0000C7 12s00r00r00      [16]  254 	lcall	___fslt
      0000CB D0 01            [ 8]  255 	pop	ar1
      0000CD D0 00            [ 8]  256 	pop	ar0
      0000CF D0 07            [ 8]  257 	pop	ar7
      0000D1 D0 06            [ 8]  258 	pop	ar6
      0000D3 D0 05            [ 8]  259 	pop	ar5
      0000D5 D0 04            [ 8]  260 	pop	ar4
      0000D7 D0 03            [ 8]  261 	pop	ar3
      0000D9 D0 02            [ 8]  262 	pop	ar2
      0000DB E5 82            [ 8]  263 	mov	a,dpl
      0000DD 60 12            [12]  264 	jz  00117$
      0000DF                        265 00150$:
                                    266 ;	genAssign: resultIsFar = TRUE
      0000DF 90s00r00r0F      [12]  267 	mov	dptr,#_tancotf_sloc0_1_0
      0000E3 E4               [ 4]  268 	clr	a
      0000E4 F0               [ 8]  269 	movx	@dptr,a
      0000E5 A3               [12]  270 	inc	dptr
      0000E6 E4               [ 4]  271 	clr	a
      0000E7 F0               [ 8]  272 	movx	@dptr,a
      0000E8 A3               [12]  273 	inc	dptr
      0000E9 E4               [ 4]  274 	clr	a
      0000EA F0               [ 8]  275 	movx	@dptr,a
      0000EB A3               [12]  276 	inc	dptr
      0000EC 74 3F            [ 8]  277 	mov	a,#0x3f
      0000EE F0               [ 8]  278 	movx	@dptr,a
      0000EF 80 10            [12]  279 	sjmp 00118$
      0000F1                        280 00117$:
                                    281 ;	genAssign: resultIsFar = TRUE
      0000F1 90s00r00r0F      [12]  282 	mov	dptr,#_tancotf_sloc0_1_0
      0000F5 E4               [ 4]  283 	clr	a
      0000F6 F0               [ 8]  284 	movx	@dptr,a
      0000F7 A3               [12]  285 	inc	dptr
      0000F8 E4               [ 4]  286 	clr	a
      0000F9 F0               [ 8]  287 	movx	@dptr,a
      0000FA A3               [12]  288 	inc	dptr
      0000FB E4               [ 4]  289 	clr	a
      0000FC F0               [ 8]  290 	movx	@dptr,a
      0000FD A3               [12]  291 	inc	dptr
      0000FE 74 BF            [ 8]  292 	mov	a,#0xbf
      000100 F0               [ 8]  293 	movx	@dptr,a
      000101                        294 00118$:
      000101 90s00r00r0F      [12]  295 	mov	dptr,#_tancotf_sloc0_1_0
                                    296 ;	genAssign: resultIsFar = TRUE
      000105 75 86 21         [12]  297 	mov	dps,#0x21
      000108 90s00r00r00      [12]  298 	mov	dptr,#___fsadd_PARM_2
      00010C E0               [ 8]  299 	movx	a,@dptr
      00010D F0               [ 8]  300 	movx	@dptr,a
      00010E A3               [12]  301 	inc	dptr
      00010F A3               [12]  302 	inc	dptr
      000110 E0               [ 8]  303 	movx	a,@dptr
      000111 F0               [ 8]  304 	movx	@dptr,a
      000112 A3               [12]  305 	inc	dptr
      000113 A3               [12]  306 	inc	dptr
      000114 E0               [ 8]  307 	movx	a,@dptr
      000115 F0               [ 8]  308 	movx	@dptr,a
      000116 A3               [12]  309 	inc	dptr
      000117 A3               [12]  310 	inc	dptr
      000118 E0               [ 8]  311 	movx	a,@dptr
      000119 F0               [ 8]  312 	movx	@dptr,a
      00011A 75 86 00         [12]  313 	mov	dps,#0
      00011D C0 02            [ 8]  314 	push	ar2
      00011F C0 03            [ 8]  315 	push	ar3
      000121 C0 04            [ 8]  316 	push	ar4
      000123 C0 05            [ 8]  317 	push	ar5
      000125 8E 82            [ 8]  318 	mov	dpl,r6
      000127 8F 83            [ 8]  319 	mov	dph,r7
      000129 88 93            [ 8]  320 	mov	dpx,r0
      00012B 89 F0            [ 8]  321 	mov	b,r1
      00012D 12s00r00r00      [16]  322 	lcall	___fsadd
      000131 D0 05            [ 8]  323 	pop	ar5
      000133 D0 04            [ 8]  324 	pop	ar4
      000135 D0 03            [ 8]  325 	pop	ar3
      000137 D0 02            [ 8]  326 	pop	ar2
      000139 C0 02            [ 8]  327 	push	ar2
      00013B C0 03            [ 8]  328 	push	ar3
      00013D C0 04            [ 8]  329 	push	ar4
      00013F C0 05            [ 8]  330 	push	ar5
      000141 12s00r00r00      [16]  331 	lcall	___fs2sint
      000145 AE 82            [ 8]  332 	mov	r6,dpl
      000147 AF 83            [ 8]  333 	mov	r7,dph
      000149 D0 05            [ 8]  334 	pop	ar5
      00014B D0 04            [ 8]  335 	pop	ar4
      00014D D0 03            [ 8]  336 	pop	ar3
      00014F D0 02            [ 8]  337 	pop	ar2
                                    338 ;	genAssign: resultIsFar = TRUE
      000151 90s00r00r0D      [12]  339 	mov	dptr,#_tancotf_n_65536_26
      000155 EE               [ 4]  340 	mov	a,r6
      000156 F0               [ 8]  341 	movx	@dptr,a
      000157 A3               [12]  342 	inc	dptr
      000158 EF               [ 4]  343 	mov	a,r7
      000159 F0               [ 8]  344 	movx	@dptr,a
                                    345 ;	tancotf.c:66: xn=n;
      00015A C0 02            [ 8]  346 	push	ar2
      00015C C0 03            [ 8]  347 	push	ar3
      00015E C0 04            [ 8]  348 	push	ar4
      000160 C0 05            [ 8]  349 	push	ar5
      000162 05 86            [ 8]  350 	inc	dps
      000164 90s00r00r0D      [12]  351 	mov	dptr,#_tancotf_n_65536_26
      000168 E0               [ 8]  352 	movx	a,@dptr
      000169 F5 82            [ 8]  353 	mov	dpl,a
      00016B A3               [12]  354 	inc	dptr
      00016C E0               [ 8]  355 	movx	a,@dptr
      00016D F5 83            [ 8]  356 	mov	dph,a
      00016F 75 86 00         [12]  357 	mov	dps,#0
      000172 12s00r00r00      [16]  358 	lcall	___sint2fs
      000176 A8 82            [ 8]  359 	mov	r0,dpl
      000178 A9 83            [ 8]  360 	mov	r1,dph
      00017A AE 93            [ 8]  361 	mov	r6,dpx
      00017C AF F0            [ 8]  362 	mov	r7,b
      00017E D0 05            [ 8]  363 	pop	ar5
      000180 D0 04            [ 8]  364 	pop	ar4
      000182 D0 03            [ 8]  365 	pop	ar3
      000184 D0 02            [ 8]  366 	pop	ar2
                                    367 ;	genAssign: resultIsFar = TRUE
      000186 90s00r00r05      [12]  368 	mov	dptr,#_tancotf_xn_65536_26
      00018A E8               [ 4]  369 	mov	a,r0
      00018B F0               [ 8]  370 	movx	@dptr,a
      00018C A3               [12]  371 	inc	dptr
      00018D E9               [ 4]  372 	mov	a,r1
      00018E F0               [ 8]  373 	movx	@dptr,a
      00018F A3               [12]  374 	inc	dptr
      000190 EE               [ 4]  375 	mov	a,r6
      000191 F0               [ 8]  376 	movx	@dptr,a
      000192 A3               [12]  377 	inc	dptr
      000193 EF               [ 4]  378 	mov	a,r7
      000194 F0               [ 8]  379 	movx	@dptr,a
                                    380 ;	tancotf.c:68: xnum=(int)x;
      000195 C0 02            [ 8]  381 	push	ar2
      000197 C0 03            [ 8]  382 	push	ar3
      000199 C0 04            [ 8]  383 	push	ar4
      00019B C0 05            [ 8]  384 	push	ar5
      00019D 8A 82            [ 8]  385 	mov	dpl,r2
      00019F 8B 83            [ 8]  386 	mov	dph,r3
      0001A1 8C 93            [ 8]  387 	mov	dpx,r4
      0001A3 8D F0            [ 8]  388 	mov	b,r5
      0001A5 12s00r00r00      [16]  389 	lcall	___fs2sint
      0001A9 D0 05            [ 8]  390 	pop	ar5
      0001AB D0 04            [ 8]  391 	pop	ar4
      0001AD D0 03            [ 8]  392 	pop	ar3
      0001AF D0 02            [ 8]  393 	pop	ar2
      0001B1 C0 02            [ 8]  394 	push	ar2
      0001B3 C0 03            [ 8]  395 	push	ar3
      0001B5 C0 04            [ 8]  396 	push	ar4
      0001B7 C0 05            [ 8]  397 	push	ar5
      0001B9 12s00r00r00      [16]  398 	lcall	___sint2fs
      0001BD AE 82            [ 8]  399 	mov	r6,dpl
      0001BF AF 83            [ 8]  400 	mov	r7,dph
      0001C1 A8 93            [ 8]  401 	mov	r0,dpx
      0001C3 A9 F0            [ 8]  402 	mov	r1,b
      0001C5 D0 05            [ 8]  403 	pop	ar5
      0001C7 D0 04            [ 8]  404 	pop	ar4
      0001C9 D0 03            [ 8]  405 	pop	ar3
      0001CB D0 02            [ 8]  406 	pop	ar2
                                    407 ;	genAssign: resultIsFar = FALSE
                                    408 ;	tancotf.c:69: xden=x-xnum;
                                    409 ;	genAssign: resultIsFar = TRUE
      0001CD 90s00r00r00      [12]  410 	mov	dptr,#___fssub_PARM_2
      0001D1 EE               [ 4]  411 	mov	a,r6
      0001D2 F0               [ 8]  412 	movx	@dptr,a
      0001D3 A3               [12]  413 	inc	dptr
      0001D4 EF               [ 4]  414 	mov	a,r7
      0001D5 F0               [ 8]  415 	movx	@dptr,a
      0001D6 A3               [12]  416 	inc	dptr
      0001D7 E8               [ 4]  417 	mov	a,r0
      0001D8 F0               [ 8]  418 	movx	@dptr,a
      0001D9 A3               [12]  419 	inc	dptr
      0001DA E9               [ 4]  420 	mov	a,r1
      0001DB F0               [ 8]  421 	movx	@dptr,a
      0001DC C0 06            [ 8]  422 	push	ar6
      0001DE C0 07            [ 8]  423 	push	ar7
      0001E0 C0 00            [ 8]  424 	push	ar0
      0001E2 C0 01            [ 8]  425 	push	ar1
      0001E4 8A 82            [ 8]  426 	mov	dpl,r2
      0001E6 8B 83            [ 8]  427 	mov	dph,r3
      0001E8 8C 93            [ 8]  428 	mov	dpx,r4
      0001EA 8D F0            [ 8]  429 	mov	b,r5
      0001EC 12s00r00r00      [16]  430 	lcall	___fssub
      0001F0 AA 82            [ 8]  431 	mov	r2,dpl
      0001F2 AB 83            [ 8]  432 	mov	r3,dph
      0001F4 AC 93            [ 8]  433 	mov	r4,dpx
      0001F6 AD F0            [ 8]  434 	mov	r5,b
      0001F8 D0 01            [ 8]  435 	pop	ar1
      0001FA D0 00            [ 8]  436 	pop	ar0
      0001FC D0 07            [ 8]  437 	pop	ar7
      0001FE D0 06            [ 8]  438 	pop	ar6
                                    439 ;	genAssign: resultIsFar = TRUE
      000200 90s00r00r0F      [12]  440 	mov	dptr,#_tancotf_sloc0_1_0
      000204 EA               [ 4]  441 	mov	a,r2
      000205 F0               [ 8]  442 	movx	@dptr,a
      000206 A3               [12]  443 	inc	dptr
      000207 EB               [ 4]  444 	mov	a,r3
      000208 F0               [ 8]  445 	movx	@dptr,a
      000209 A3               [12]  446 	inc	dptr
      00020A EC               [ 4]  447 	mov	a,r4
      00020B F0               [ 8]  448 	movx	@dptr,a
      00020C A3               [12]  449 	inc	dptr
      00020D ED               [ 4]  450 	mov	a,r5
      00020E F0               [ 8]  451 	movx	@dptr,a
                                    452 ;	tancotf.c:70: f=((xnum-xn*C1)+xden)-xn*C2;
      00020F 90s00r00r05      [12]  453 	mov	dptr,#_tancotf_xn_65536_26
                                    454 ;	genAssign: resultIsFar = TRUE
      000213 75 86 21         [12]  455 	mov	dps,#0x21
      000216 90s00r00r00      [12]  456 	mov	dptr,#___fsmul_PARM_2
      00021A E0               [ 8]  457 	movx	a,@dptr
      00021B F0               [ 8]  458 	movx	@dptr,a
      00021C A3               [12]  459 	inc	dptr
      00021D A3               [12]  460 	inc	dptr
      00021E E0               [ 8]  461 	movx	a,@dptr
      00021F F0               [ 8]  462 	movx	@dptr,a
      000220 A3               [12]  463 	inc	dptr
      000221 A3               [12]  464 	inc	dptr
      000222 E0               [ 8]  465 	movx	a,@dptr
      000223 F0               [ 8]  466 	movx	@dptr,a
      000224 A3               [12]  467 	inc	dptr
      000225 A3               [12]  468 	inc	dptr
      000226 E0               [ 8]  469 	movx	a,@dptr
      000227 F0               [ 8]  470 	movx	@dptr,a
      000228 75 86 00         [12]  471 	mov	dps,#0
      00022B C0 06            [ 8]  472 	push	ar6
      00022D C0 07            [ 8]  473 	push	ar7
      00022F C0 00            [ 8]  474 	push	ar0
      000231 C0 01            [ 8]  475 	push	ar1
      000233 90 00 00 00      [12]  476 	mov  dptr,#0x0000
      000237 75 93 C9         [12]  477 	mov	dpx,#0xc9
      00023A 75 F0 3F         [12]  478 	mov	b,#0x3f
      00023D 12s00r00r00      [16]  479 	lcall	___fsmul
      000241 AA 82            [ 8]  480 	mov	r2,dpl
      000243 AB 83            [ 8]  481 	mov	r3,dph
      000245 AC 93            [ 8]  482 	mov	r4,dpx
      000247 AD F0            [ 8]  483 	mov	r5,b
      000249 D0 01            [ 8]  484 	pop	ar1
      00024B D0 00            [ 8]  485 	pop	ar0
      00024D D0 07            [ 8]  486 	pop	ar7
      00024F D0 06            [ 8]  487 	pop	ar6
                                    488 ;	genAssign: resultIsFar = TRUE
      000251 90s00r00r00      [12]  489 	mov	dptr,#___fssub_PARM_2
      000255 EA               [ 4]  490 	mov	a,r2
      000256 F0               [ 8]  491 	movx	@dptr,a
      000257 A3               [12]  492 	inc	dptr
      000258 EB               [ 4]  493 	mov	a,r3
      000259 F0               [ 8]  494 	movx	@dptr,a
      00025A A3               [12]  495 	inc	dptr
      00025B EC               [ 4]  496 	mov	a,r4
      00025C F0               [ 8]  497 	movx	@dptr,a
      00025D A3               [12]  498 	inc	dptr
      00025E ED               [ 4]  499 	mov	a,r5
      00025F F0               [ 8]  500 	movx	@dptr,a
      000260 8E 82            [ 8]  501 	mov	dpl,r6
      000262 8F 83            [ 8]  502 	mov	dph,r7
      000264 88 93            [ 8]  503 	mov	dpx,r0
      000266 89 F0            [ 8]  504 	mov	b,r1
      000268 12s00r00r00      [16]  505 	lcall	___fssub
      00026C AA 82            [ 8]  506 	mov	r2,dpl
      00026E AB 83            [ 8]  507 	mov	r3,dph
      000270 AC 93            [ 8]  508 	mov	r4,dpx
      000272 AD F0            [ 8]  509 	mov	r5,b
      000274 90s00r00r0F      [12]  510 	mov	dptr,#_tancotf_sloc0_1_0
                                    511 ;	genAssign: resultIsFar = TRUE
      000278 75 86 21         [12]  512 	mov	dps,#0x21
      00027B 90s00r00r00      [12]  513 	mov	dptr,#___fsadd_PARM_2
      00027F E0               [ 8]  514 	movx	a,@dptr
      000280 F0               [ 8]  515 	movx	@dptr,a
      000281 A3               [12]  516 	inc	dptr
      000282 A3               [12]  517 	inc	dptr
      000283 E0               [ 8]  518 	movx	a,@dptr
      000284 F0               [ 8]  519 	movx	@dptr,a
      000285 A3               [12]  520 	inc	dptr
      000286 A3               [12]  521 	inc	dptr
      000287 E0               [ 8]  522 	movx	a,@dptr
      000288 F0               [ 8]  523 	movx	@dptr,a
      000289 A3               [12]  524 	inc	dptr
      00028A A3               [12]  525 	inc	dptr
      00028B E0               [ 8]  526 	movx	a,@dptr
      00028C F0               [ 8]  527 	movx	@dptr,a
      00028D 75 86 00         [12]  528 	mov	dps,#0
      000290 8A 82            [ 8]  529 	mov	dpl,r2
      000292 8B 83            [ 8]  530 	mov	dph,r3
      000294 8C 93            [ 8]  531 	mov	dpx,r4
      000296 8D F0            [ 8]  532 	mov	b,r5
      000298 12s00r00r00      [16]  533 	lcall	___fsadd
      00029C AA 82            [ 8]  534 	mov	r2,dpl
      00029E AB 83            [ 8]  535 	mov	r3,dph
      0002A0 AC 93            [ 8]  536 	mov	r4,dpx
      0002A2 AD F0            [ 8]  537 	mov	r5,b
      0002A4 90s00r00r05      [12]  538 	mov	dptr,#_tancotf_xn_65536_26
                                    539 ;	genAssign: resultIsFar = TRUE
      0002A8 75 86 21         [12]  540 	mov	dps,#0x21
      0002AB 90s00r00r00      [12]  541 	mov	dptr,#___fsmul_PARM_2
      0002AF E0               [ 8]  542 	movx	a,@dptr
      0002B0 F0               [ 8]  543 	movx	@dptr,a
      0002B1 A3               [12]  544 	inc	dptr
      0002B2 A3               [12]  545 	inc	dptr
      0002B3 E0               [ 8]  546 	movx	a,@dptr
      0002B4 F0               [ 8]  547 	movx	@dptr,a
      0002B5 A3               [12]  548 	inc	dptr
      0002B6 A3               [12]  549 	inc	dptr
      0002B7 E0               [ 8]  550 	movx	a,@dptr
      0002B8 F0               [ 8]  551 	movx	@dptr,a
      0002B9 A3               [12]  552 	inc	dptr
      0002BA A3               [12]  553 	inc	dptr
      0002BB E0               [ 8]  554 	movx	a,@dptr
      0002BC F0               [ 8]  555 	movx	@dptr,a
      0002BD 75 86 00         [12]  556 	mov	dps,#0
      0002C0 C0 02            [ 8]  557 	push	ar2
      0002C2 C0 03            [ 8]  558 	push	ar3
      0002C4 C0 04            [ 8]  559 	push	ar4
      0002C6 C0 05            [ 8]  560 	push	ar5
      0002C8 90 FD AA 22      [12]  561 	mov	dptr,#0xfdaa22
      0002CC 75 F0 39         [12]  562 	mov	b,#0x39
      0002CF 12s00r00r00      [16]  563 	lcall	___fsmul
      0002D3 AE 82            [ 8]  564 	mov	r6,dpl
      0002D5 AF 83            [ 8]  565 	mov	r7,dph
      0002D7 A8 93            [ 8]  566 	mov	r0,dpx
      0002D9 A9 F0            [ 8]  567 	mov	r1,b
      0002DB D0 05            [ 8]  568 	pop	ar5
      0002DD D0 04            [ 8]  569 	pop	ar4
      0002DF D0 03            [ 8]  570 	pop	ar3
      0002E1 D0 02            [ 8]  571 	pop	ar2
                                    572 ;	genAssign: resultIsFar = TRUE
      0002E3 90s00r00r00      [12]  573 	mov	dptr,#___fssub_PARM_2
      0002E7 EE               [ 4]  574 	mov	a,r6
      0002E8 F0               [ 8]  575 	movx	@dptr,a
      0002E9 A3               [12]  576 	inc	dptr
      0002EA EF               [ 4]  577 	mov	a,r7
      0002EB F0               [ 8]  578 	movx	@dptr,a
      0002EC A3               [12]  579 	inc	dptr
      0002ED E8               [ 4]  580 	mov	a,r0
      0002EE F0               [ 8]  581 	movx	@dptr,a
      0002EF A3               [12]  582 	inc	dptr
      0002F0 E9               [ 4]  583 	mov	a,r1
      0002F1 F0               [ 8]  584 	movx	@dptr,a
      0002F2 8A 82            [ 8]  585 	mov	dpl,r2
      0002F4 8B 83            [ 8]  586 	mov	dph,r3
      0002F6 8C 93            [ 8]  587 	mov	dpx,r4
      0002F8 8D F0            [ 8]  588 	mov	b,r5
      0002FA 12s00r00r00      [16]  589 	lcall	___fssub
      0002FE AA 82            [ 8]  590 	mov	r2,dpl
      000300 AB 83            [ 8]  591 	mov	r3,dph
      000302 AC 93            [ 8]  592 	mov	r4,dpx
      000304 AD F0            [ 8]  593 	mov	r5,b
                                    594 ;	genAssign: resultIsFar = TRUE
      000306 90s00r00r01      [12]  595 	mov	dptr,#_tancotf_f_65536_26
      00030A EA               [ 4]  596 	mov	a,r2
      00030B F0               [ 8]  597 	movx	@dptr,a
      00030C A3               [12]  598 	inc	dptr
      00030D EB               [ 4]  599 	mov	a,r3
      00030E F0               [ 8]  600 	movx	@dptr,a
      00030F A3               [12]  601 	inc	dptr
      000310 EC               [ 4]  602 	mov	a,r4
      000311 F0               [ 8]  603 	movx	@dptr,a
      000312 A3               [12]  604 	inc	dptr
      000313 ED               [ 4]  605 	mov	a,r5
      000314 F0               [ 8]  606 	movx	@dptr,a
                                    607 ;	tancotf.c:72: if (fabsf(f) < EPS)
      000315 05 86            [ 8]  608 	inc	dps
      000317 90s00r00r01      [12]  609 	mov	dptr,#_tancotf_f_65536_26
      00031B E0               [ 8]  610 	movx	a,@dptr
      00031C F5 82            [ 8]  611 	mov	dpl,a
      00031E A3               [12]  612 	inc	dptr
      00031F E0               [ 8]  613 	movx	a,@dptr
      000320 F5 83            [ 8]  614 	mov	dph,a
      000322 A3               [12]  615 	inc	dptr
      000323 E0               [ 8]  616 	movx	a,@dptr
      000324 F5 93            [ 8]  617 	mov	dpx,a
      000326 A3               [12]  618 	inc	dptr
      000327 E0               [ 8]  619 	movx	a,@dptr
      000328 F5 F0            [ 8]  620 	mov	b,a
      00032A 75 86 00         [12]  621 	mov	dps,#0
      00032D 12s00r00r00      [16]  622 	lcall	_fabsf
      000331 AE 82            [ 8]  623 	mov	r6,dpl
      000333 AF 83            [ 8]  624 	mov	r7,dph
      000335 A8 93            [ 8]  625 	mov	r0,dpx
      000337 A9 F0            [ 8]  626 	mov	r1,b
                                    627 ;	genAssign: resultIsFar = TRUE
      000339 90s00r00r00      [12]  628 	mov	dptr,#___fslt_PARM_2
      00033D E4               [ 4]  629 	clr	a
      00033E F0               [ 8]  630 	movx	@dptr,a
      00033F A3               [12]  631 	inc	dptr
      000340 E4               [ 4]  632 	clr	a
      000341 F0               [ 8]  633 	movx	@dptr,a
      000342 A3               [12]  634 	inc	dptr
      000343 74 80            [ 8]  635 	mov	a,#0x80
      000345 F0               [ 8]  636 	movx	@dptr,a
      000346 A3               [12]  637 	inc	dptr
      000347 74 39            [ 8]  638 	mov	a,#0x39
      000349 F0               [ 8]  639 	movx	@dptr,a
      00034A 8E 82            [ 8]  640 	mov	dpl,r6
      00034C 8F 83            [ 8]  641 	mov	dph,r7
      00034E 88 93            [ 8]  642 	mov	dpx,r0
      000350 89 F0            [ 8]  643 	mov	b,r1
      000352 12s00r00r00      [16]  644 	lcall	___fslt
      000356 E5 82            [ 8]  645 	mov	a,dpl
      000358 60 28            [12]  646 	jz  00104$
      00035A                        647 00151$:
                                    648 ;	tancotf.c:74: xnum = f;
      00035A 90s00r00r01      [12]  649 	mov	dptr,#_tancotf_f_65536_26
                                    650 ;	genAssign: resultIsFar = TRUE
      00035E 75 86 21         [12]  651 	mov	dps,#0x21
      000361 90s00r00r09      [12]  652 	mov	dptr,#_tancotf_xnum_65536_26
      000365 E0               [ 8]  653 	movx	a,@dptr
      000366 F0               [ 8]  654 	movx	@dptr,a
      000367 A3               [12]  655 	inc	dptr
      000368 A3               [12]  656 	inc	dptr
      000369 E0               [ 8]  657 	movx	a,@dptr
      00036A F0               [ 8]  658 	movx	@dptr,a
      00036B A3               [12]  659 	inc	dptr
      00036C A3               [12]  660 	inc	dptr
      00036D E0               [ 8]  661 	movx	a,@dptr
      00036E F0               [ 8]  662 	movx	@dptr,a
      00036F A3               [12]  663 	inc	dptr
      000370 A3               [12]  664 	inc	dptr
      000371 E0               [ 8]  665 	movx	a,@dptr
      000372 F0               [ 8]  666 	movx	@dptr,a
      000373 75 86 00         [12]  667 	mov	dps,#0
                                    668 ;	tancotf.c:75: xden = 1.0;
                                    669 ;	genAssign: resultIsFar = TRUE
      000376 7E 00            [ 8]  670 	mov	r6,#0x00
      000378 7F 00            [ 8]  671 	mov	r7,#0x00
      00037A 78 80            [ 8]  672 	mov	r0,#0x80
      00037C 79 3F            [ 8]  673 	mov	r1,#0x3f
      00037E 02s00r05r42      [16]  674 	ljmp	00105$
      000382                        675 00104$:
                                    676 ;	tancotf.c:79: g = f*f;
      000382 90s00r00r01      [12]  677 	mov	dptr,#_tancotf_f_65536_26
                                    678 ;	genAssign: resultIsFar = TRUE
      000386 75 86 21         [12]  679 	mov	dps,#0x21
      000389 90s00r00r00      [12]  680 	mov	dptr,#___fsmul_PARM_2
      00038D E0               [ 8]  681 	movx	a,@dptr
      00038E F0               [ 8]  682 	movx	@dptr,a
      00038F A3               [12]  683 	inc	dptr
      000390 A3               [12]  684 	inc	dptr
      000391 E0               [ 8]  685 	movx	a,@dptr
      000392 F0               [ 8]  686 	movx	@dptr,a
      000393 A3               [12]  687 	inc	dptr
      000394 A3               [12]  688 	inc	dptr
      000395 E0               [ 8]  689 	movx	a,@dptr
      000396 F0               [ 8]  690 	movx	@dptr,a
      000397 A3               [12]  691 	inc	dptr
      000398 A3               [12]  692 	inc	dptr
      000399 E0               [ 8]  693 	movx	a,@dptr
      00039A F0               [ 8]  694 	movx	@dptr,a
      00039B 75 86 01         [12]  695 	mov	dps, #1
      00039E 90s00r00r01      [12]  696 	mov	dptr,#_tancotf_f_65536_26
      0003A2 E0               [ 8]  697 	movx	a,@dptr
      0003A3 F5 82            [ 8]  698 	mov	dpl,a
      0003A5 A3               [12]  699 	inc	dptr
      0003A6 E0               [ 8]  700 	movx	a,@dptr
      0003A7 F5 83            [ 8]  701 	mov	dph,a
      0003A9 A3               [12]  702 	inc	dptr
      0003AA E0               [ 8]  703 	movx	a,@dptr
      0003AB F5 93            [ 8]  704 	mov	dpx,a
      0003AD A3               [12]  705 	inc	dptr
      0003AE E0               [ 8]  706 	movx	a,@dptr
      0003AF F5 F0            [ 8]  707 	mov	b,a
      0003B1 75 86 00         [12]  708 	mov	dps,#0
      0003B4 12s00r00r00      [16]  709 	lcall	___fsmul
      0003B8 AA 82            [ 8]  710 	mov	r2,dpl
      0003BA AB 83            [ 8]  711 	mov	r3,dph
      0003BC AC 93            [ 8]  712 	mov	r4,dpx
      0003BE AD F0            [ 8]  713 	mov	r5,b
                                    714 ;	genAssign: resultIsFar = FALSE
      0003C0 8A 06            [ 8]  715 	mov	ar6,r2
      0003C2 8B 07            [ 8]  716 	mov	ar7,r3
      0003C4 8C 00            [ 8]  717 	mov	ar0,r4
      0003C6 8D 01            [ 8]  718 	mov	ar1,r5
                                    719 ;	tancotf.c:80: xnum = P(f,g);
                                    720 ;	genAssign: resultIsFar = TRUE
      0003C8 90s00r00r00      [12]  721 	mov	dptr,#___fsmul_PARM_2
      0003CC EE               [ 4]  722 	mov	a,r6
      0003CD F0               [ 8]  723 	movx	@dptr,a
      0003CE A3               [12]  724 	inc	dptr
      0003CF EF               [ 4]  725 	mov	a,r7
      0003D0 F0               [ 8]  726 	movx	@dptr,a
      0003D1 A3               [12]  727 	inc	dptr
      0003D2 E8               [ 4]  728 	mov	a,r0
      0003D3 F0               [ 8]  729 	movx	@dptr,a
      0003D4 A3               [12]  730 	inc	dptr
      0003D5 E9               [ 4]  731 	mov	a,r1
      0003D6 F0               [ 8]  732 	movx	@dptr,a
      0003D7 C0 06            [ 8]  733 	push	ar6
      0003D9 C0 07            [ 8]  734 	push	ar7
      0003DB C0 00            [ 8]  735 	push	ar0
      0003DD C0 01            [ 8]  736 	push	ar1
      0003DF 90 C4 33 B8      [12]  737 	mov	dptr,#0xc433b8
      0003E3 75 F0 BD         [12]  738 	mov	b,#0xbd
      0003E6 12s00r00r00      [16]  739 	lcall	___fsmul
      0003EA AA 82            [ 8]  740 	mov	r2,dpl
      0003EC AB 83            [ 8]  741 	mov	r3,dph
      0003EE AC 93            [ 8]  742 	mov	r4,dpx
      0003F0 AD F0            [ 8]  743 	mov	r5,b
      0003F2 D0 01            [ 8]  744 	pop	ar1
      0003F4 D0 00            [ 8]  745 	pop	ar0
      0003F6 D0 07            [ 8]  746 	pop	ar7
      0003F8 D0 06            [ 8]  747 	pop	ar6
      0003FA 90s00r00r01      [12]  748 	mov	dptr,#_tancotf_f_65536_26
                                    749 ;	genAssign: resultIsFar = TRUE
      0003FE 75 86 21         [12]  750 	mov	dps,#0x21
      000401 90s00r00r00      [12]  751 	mov	dptr,#___fsmul_PARM_2
      000405 E0               [ 8]  752 	movx	a,@dptr
      000406 F0               [ 8]  753 	movx	@dptr,a
      000407 A3               [12]  754 	inc	dptr
      000408 A3               [12]  755 	inc	dptr
      000409 E0               [ 8]  756 	movx	a,@dptr
      00040A F0               [ 8]  757 	movx	@dptr,a
      00040B A3               [12]  758 	inc	dptr
      00040C A3               [12]  759 	inc	dptr
      00040D E0               [ 8]  760 	movx	a,@dptr
      00040E F0               [ 8]  761 	movx	@dptr,a
      00040F A3               [12]  762 	inc	dptr
      000410 A3               [12]  763 	inc	dptr
      000411 E0               [ 8]  764 	movx	a,@dptr
      000412 F0               [ 8]  765 	movx	@dptr,a
      000413 75 86 00         [12]  766 	mov	dps,#0
      000416 C0 06            [ 8]  767 	push	ar6
      000418 C0 07            [ 8]  768 	push	ar7
      00041A C0 00            [ 8]  769 	push	ar0
      00041C C0 01            [ 8]  770 	push	ar1
      00041E 8A 82            [ 8]  771 	mov	dpl,r2
      000420 8B 83            [ 8]  772 	mov	dph,r3
      000422 8C 93            [ 8]  773 	mov	dpx,r4
      000424 8D F0            [ 8]  774 	mov	b,r5
      000426 12s00r00r00      [16]  775 	lcall	___fsmul
      00042A AA 82            [ 8]  776 	mov	r2,dpl
      00042C AB 83            [ 8]  777 	mov	r3,dph
      00042E AC 93            [ 8]  778 	mov	r4,dpx
      000430 AD F0            [ 8]  779 	mov	r5,b
      000432 D0 01            [ 8]  780 	pop	ar1
      000434 D0 00            [ 8]  781 	pop	ar0
      000436 D0 07            [ 8]  782 	pop	ar7
      000438 D0 06            [ 8]  783 	pop	ar6
      00043A 90s00r00r01      [12]  784 	mov	dptr,#_tancotf_f_65536_26
                                    785 ;	genAssign: resultIsFar = TRUE
      00043E 75 86 21         [12]  786 	mov	dps,#0x21
      000441 90s00r00r00      [12]  787 	mov	dptr,#___fsadd_PARM_2
      000445 E0               [ 8]  788 	movx	a,@dptr
      000446 F0               [ 8]  789 	movx	@dptr,a
      000447 A3               [12]  790 	inc	dptr
      000448 A3               [12]  791 	inc	dptr
      000449 E0               [ 8]  792 	movx	a,@dptr
      00044A F0               [ 8]  793 	movx	@dptr,a
      00044B A3               [12]  794 	inc	dptr
      00044C A3               [12]  795 	inc	dptr
      00044D E0               [ 8]  796 	movx	a,@dptr
      00044E F0               [ 8]  797 	movx	@dptr,a
      00044F A3               [12]  798 	inc	dptr
      000450 A3               [12]  799 	inc	dptr
      000451 E0               [ 8]  800 	movx	a,@dptr
      000452 F0               [ 8]  801 	movx	@dptr,a
      000453 75 86 00         [12]  802 	mov	dps,#0
      000456 C0 06            [ 8]  803 	push	ar6
      000458 C0 07            [ 8]  804 	push	ar7
      00045A C0 00            [ 8]  805 	push	ar0
      00045C C0 01            [ 8]  806 	push	ar1
      00045E 8A 82            [ 8]  807 	mov	dpl,r2
      000460 8B 83            [ 8]  808 	mov	dph,r3
      000462 8C 93            [ 8]  809 	mov	dpx,r4
      000464 8D F0            [ 8]  810 	mov	b,r5
      000466 12s00r00r00      [16]  811 	lcall	___fsadd
      00046A AA 82            [ 8]  812 	mov	r2,dpl
      00046C AB 83            [ 8]  813 	mov	r3,dph
      00046E AC 93            [ 8]  814 	mov	r4,dpx
      000470 AD F0            [ 8]  815 	mov	r5,b
      000472 D0 01            [ 8]  816 	pop	ar1
      000474 D0 00            [ 8]  817 	pop	ar0
      000476 D0 07            [ 8]  818 	pop	ar7
      000478 D0 06            [ 8]  819 	pop	ar6
                                    820 ;	genAssign: resultIsFar = TRUE
      00047A 90s00r00r09      [12]  821 	mov	dptr,#_tancotf_xnum_65536_26
      00047E EA               [ 4]  822 	mov	a,r2
      00047F F0               [ 8]  823 	movx	@dptr,a
      000480 A3               [12]  824 	inc	dptr
      000481 EB               [ 4]  825 	mov	a,r3
      000482 F0               [ 8]  826 	movx	@dptr,a
      000483 A3               [12]  827 	inc	dptr
      000484 EC               [ 4]  828 	mov	a,r4
      000485 F0               [ 8]  829 	movx	@dptr,a
      000486 A3               [12]  830 	inc	dptr
      000487 ED               [ 4]  831 	mov	a,r5
      000488 F0               [ 8]  832 	movx	@dptr,a
                                    833 ;	tancotf.c:81: xden = Q(g);
                                    834 ;	genAssign: resultIsFar = TRUE
      000489 90s00r00r00      [12]  835 	mov	dptr,#___fsmul_PARM_2
      00048D EE               [ 4]  836 	mov	a,r6
      00048E F0               [ 8]  837 	movx	@dptr,a
      00048F A3               [12]  838 	inc	dptr
      000490 EF               [ 4]  839 	mov	a,r7
      000491 F0               [ 8]  840 	movx	@dptr,a
      000492 A3               [12]  841 	inc	dptr
      000493 E8               [ 4]  842 	mov	a,r0
      000494 F0               [ 8]  843 	movx	@dptr,a
      000495 A3               [12]  844 	inc	dptr
      000496 E9               [ 4]  845 	mov	a,r1
      000497 F0               [ 8]  846 	movx	@dptr,a
      000498 C0 06            [ 8]  847 	push	ar6
      00049A C0 07            [ 8]  848 	push	ar7
      00049C C0 00            [ 8]  849 	push	ar0
      00049E C0 01            [ 8]  850 	push	ar1
      0004A0 90 1F 33 75      [12]  851 	mov	dptr,#0x1f3375
      0004A4 75 F0 3C         [12]  852 	mov	b,#0x3c
      0004A7 12s00r00r00      [16]  853 	lcall	___fsmul
      0004AB AA 82            [ 8]  854 	mov	r2,dpl
      0004AD AB 83            [ 8]  855 	mov	r3,dph
      0004AF AC 93            [ 8]  856 	mov	r4,dpx
      0004B1 AD F0            [ 8]  857 	mov	r5,b
      0004B3 D0 01            [ 8]  858 	pop	ar1
      0004B5 D0 00            [ 8]  859 	pop	ar0
      0004B7 D0 07            [ 8]  860 	pop	ar7
      0004B9 D0 06            [ 8]  861 	pop	ar6
                                    862 ;	genAssign: resultIsFar = TRUE
      0004BB 90s00r00r00      [12]  863 	mov	dptr,#___fsadd_PARM_2
      0004BF 74 AF            [ 8]  864 	mov	a,#0xaf
      0004C1 F0               [ 8]  865 	movx	@dptr,a
      0004C2 A3               [12]  866 	inc	dptr
      0004C3 74 B7            [ 8]  867 	mov	a,#0xb7
      0004C5 F0               [ 8]  868 	movx	@dptr,a
      0004C6 A3               [12]  869 	inc	dptr
      0004C7 74 DB            [ 8]  870 	mov	a,#0xdb
      0004C9 F0               [ 8]  871 	movx	@dptr,a
      0004CA A3               [12]  872 	inc	dptr
      0004CB 74 BE            [ 8]  873 	mov	a,#0xbe
      0004CD F0               [ 8]  874 	movx	@dptr,a
      0004CE C0 06            [ 8]  875 	push	ar6
      0004D0 C0 07            [ 8]  876 	push	ar7
      0004D2 C0 00            [ 8]  877 	push	ar0
      0004D4 C0 01            [ 8]  878 	push	ar1
      0004D6 8A 82            [ 8]  879 	mov	dpl,r2
      0004D8 8B 83            [ 8]  880 	mov	dph,r3
      0004DA 8C 93            [ 8]  881 	mov	dpx,r4
      0004DC 8D F0            [ 8]  882 	mov	b,r5
      0004DE 12s00r00r00      [16]  883 	lcall	___fsadd
      0004E2 AA 82            [ 8]  884 	mov	r2,dpl
      0004E4 AB 83            [ 8]  885 	mov	r3,dph
      0004E6 AC 93            [ 8]  886 	mov	r4,dpx
      0004E8 AD F0            [ 8]  887 	mov	r5,b
      0004EA D0 01            [ 8]  888 	pop	ar1
      0004EC D0 00            [ 8]  889 	pop	ar0
      0004EE D0 07            [ 8]  890 	pop	ar7
      0004F0 D0 06            [ 8]  891 	pop	ar6
                                    892 ;	genAssign: resultIsFar = TRUE
      0004F2 90s00r00r00      [12]  893 	mov	dptr,#___fsmul_PARM_2
      0004F6 EE               [ 4]  894 	mov	a,r6
      0004F7 F0               [ 8]  895 	movx	@dptr,a
      0004F8 A3               [12]  896 	inc	dptr
      0004F9 EF               [ 4]  897 	mov	a,r7
      0004FA F0               [ 8]  898 	movx	@dptr,a
      0004FB A3               [12]  899 	inc	dptr
      0004FC E8               [ 4]  900 	mov	a,r0
      0004FD F0               [ 8]  901 	movx	@dptr,a
      0004FE A3               [12]  902 	inc	dptr
      0004FF E9               [ 4]  903 	mov	a,r1
      000500 F0               [ 8]  904 	movx	@dptr,a
      000501 8A 82            [ 8]  905 	mov	dpl,r2
      000503 8B 83            [ 8]  906 	mov	dph,r3
      000505 8C 93            [ 8]  907 	mov	dpx,r4
      000507 8D F0            [ 8]  908 	mov	b,r5
      000509 12s00r00r00      [16]  909 	lcall	___fsmul
      00050D AA 82            [ 8]  910 	mov	r2,dpl
      00050F AB 83            [ 8]  911 	mov	r3,dph
      000511 AC 93            [ 8]  912 	mov	r4,dpx
      000513 AD F0            [ 8]  913 	mov	r5,b
                                    914 ;	genAssign: resultIsFar = TRUE
      000515 90s00r00r00      [12]  915 	mov	dptr,#___fsadd_PARM_2
      000519 E4               [ 4]  916 	clr	a
      00051A F0               [ 8]  917 	movx	@dptr,a
      00051B A3               [12]  918 	inc	dptr
      00051C E4               [ 4]  919 	clr	a
      00051D F0               [ 8]  920 	movx	@dptr,a
      00051E A3               [12]  921 	inc	dptr
      00051F 74 80            [ 8]  922 	mov	a,#0x80
      000521 F0               [ 8]  923 	movx	@dptr,a
      000522 A3               [12]  924 	inc	dptr
      000523 74 3F            [ 8]  925 	mov	a,#0x3f
      000525 F0               [ 8]  926 	movx	@dptr,a
      000526 8A 82            [ 8]  927 	mov	dpl,r2
      000528 8B 83            [ 8]  928 	mov	dph,r3
      00052A 8C 93            [ 8]  929 	mov	dpx,r4
      00052C 8D F0            [ 8]  930 	mov	b,r5
      00052E 12s00r00r00      [16]  931 	lcall	___fsadd
      000532 AA 82            [ 8]  932 	mov	r2,dpl
      000534 AB 83            [ 8]  933 	mov	r3,dph
      000536 AC 93            [ 8]  934 	mov	r4,dpx
      000538 AD F0            [ 8]  935 	mov	r5,b
                                    936 ;	genAssign: resultIsFar = TRUE
      00053A 8A 06            [ 8]  937 	mov	ar6,r2
      00053C 8B 07            [ 8]  938 	mov	ar7,r3
      00053E 8C 00            [ 8]  939 	mov	ar0,r4
      000540 8D 01            [ 8]  940 	mov	ar1,r5
      000542                        941 00105$:
                                    942 ;	tancotf.c:84: if(n&1)
      000542 90s00r00r0D      [12]  943 	mov	dptr,#_tancotf_n_65536_26
      000546 E0               [ 8]  944 	movx	a,@dptr
      000547 30 E0 6B         [12]  945 	jnb  acc[0],00113$
      00054A                        946 00152$:
                                    947 ;	tancotf.c:87: if(iscotan) return (-xnum/xden);
      00054A 90s00r00r00      [12]  948 	mov	dptr,#_tancotf_PARM_2
      00054E E0               [ 8]  949 	movx	a,@dptr
      00054F 60 30            [12]  950 	jz  00107$
      000551                        951 00153$:
      000551 90s00r00r09      [12]  952 	mov	dptr,#_tancotf_xnum_65536_26
      000555 E0               [ 8]  953 	movx	a,@dptr
      000556 FA               [ 4]  954 	mov	r2,a
      000557 A3               [12]  955 	inc	dptr
      000558 E0               [ 8]  956 	movx	a,@dptr
      000559 FB               [ 4]  957 	mov	r3,a
      00055A A3               [12]  958 	inc	dptr
      00055B E0               [ 8]  959 	movx	a,@dptr
      00055C FC               [ 4]  960 	mov	r4,a
      00055D A3               [12]  961 	inc	dptr
      00055E E0               [ 8]  962 	movx	a,@dptr
      00055F B2 E7            [ 8]  963 	cpl	acc[7]
      000561 FD               [ 4]  964 	mov	r5,a
                                    965 ;	genAssign: resultIsFar = TRUE
      000562 90s00r00r00      [12]  966 	mov	dptr,#___fsdiv_PARM_2
      000566 EE               [ 4]  967 	mov	a,r6
      000567 F0               [ 8]  968 	movx	@dptr,a
      000568 A3               [12]  969 	inc	dptr
      000569 EF               [ 4]  970 	mov	a,r7
      00056A F0               [ 8]  971 	movx	@dptr,a
      00056B A3               [12]  972 	inc	dptr
      00056C E8               [ 4]  973 	mov	a,r0
      00056D F0               [ 8]  974 	movx	@dptr,a
      00056E A3               [12]  975 	inc	dptr
      00056F E9               [ 4]  976 	mov	a,r1
      000570 F0               [ 8]  977 	movx	@dptr,a
      000571 8A 82            [ 8]  978 	mov	dpl,r2
      000573 8B 83            [ 8]  979 	mov	dph,r3
      000575 8C 93            [ 8]  980 	mov	dpx,r4
      000577 8D F0            [ 8]  981 	mov	b,r5
      000579 12s00r00r00      [16]  982 	lcall	___fsdiv
      00057D 02s00r06r11      [16]  983 	ljmp	00115$
      000581                        984 00107$:
                                    985 ;	tancotf.c:88: else return (-xden/xnum);
      000581 8E 02            [ 8]  986 	mov	ar2,r6
      000583 8F 03            [ 8]  987 	mov	ar3,r7
      000585 88 04            [ 8]  988 	mov	ar4,r0
      000587 E9               [ 4]  989 	mov	a,r1
      000588 B2 E7            [ 8]  990 	cpl	acc[7]
      00058A FD               [ 4]  991 	mov	r5,a
      00058B 90s00r00r09      [12]  992 	mov	dptr,#_tancotf_xnum_65536_26
                                    993 ;	genAssign: resultIsFar = TRUE
      00058F 75 86 21         [12]  994 	mov	dps,#0x21
      000592 90s00r00r00      [12]  995 	mov	dptr,#___fsdiv_PARM_2
      000596 E0               [ 8]  996 	movx	a,@dptr
      000597 F0               [ 8]  997 	movx	@dptr,a
      000598 A3               [12]  998 	inc	dptr
      000599 A3               [12]  999 	inc	dptr
      00059A E0               [ 8] 1000 	movx	a,@dptr
      00059B F0               [ 8] 1001 	movx	@dptr,a
      00059C A3               [12] 1002 	inc	dptr
      00059D A3               [12] 1003 	inc	dptr
      00059E E0               [ 8] 1004 	movx	a,@dptr
      00059F F0               [ 8] 1005 	movx	@dptr,a
      0005A0 A3               [12] 1006 	inc	dptr
      0005A1 A3               [12] 1007 	inc	dptr
      0005A2 E0               [ 8] 1008 	movx	a,@dptr
      0005A3 F0               [ 8] 1009 	movx	@dptr,a
      0005A4 75 86 00         [12] 1010 	mov	dps,#0
      0005A7 8A 82            [ 8] 1011 	mov	dpl,r2
      0005A9 8B 83            [ 8] 1012 	mov	dph,r3
      0005AB 8C 93            [ 8] 1013 	mov	dpx,r4
      0005AD 8D F0            [ 8] 1014 	mov	b,r5
      0005AF 12s00r00r00      [16] 1015 	lcall	___fsdiv
      0005B3 80 5C            [12] 1016 	sjmp 00115$
      0005B5                       1017 00113$:
                                   1018 ;	tancotf.c:92: if(iscotan) return (xden/xnum);
      0005B5 90s00r00r00      [12] 1019 	mov	dptr,#_tancotf_PARM_2
      0005B9 E0               [ 8] 1020 	movx	a,@dptr
      0005BA 60 2A            [12] 1021 	jz  00110$
      0005BC                       1022 00154$:
      0005BC 90s00r00r09      [12] 1023 	mov	dptr,#_tancotf_xnum_65536_26
                                   1024 ;	genAssign: resultIsFar = TRUE
      0005C0 75 86 21         [12] 1025 	mov	dps,#0x21
      0005C3 90s00r00r00      [12] 1026 	mov	dptr,#___fsdiv_PARM_2
      0005C7 E0               [ 8] 1027 	movx	a,@dptr
      0005C8 F0               [ 8] 1028 	movx	@dptr,a
      0005C9 A3               [12] 1029 	inc	dptr
      0005CA A3               [12] 1030 	inc	dptr
      0005CB E0               [ 8] 1031 	movx	a,@dptr
      0005CC F0               [ 8] 1032 	movx	@dptr,a
      0005CD A3               [12] 1033 	inc	dptr
      0005CE A3               [12] 1034 	inc	dptr
      0005CF E0               [ 8] 1035 	movx	a,@dptr
      0005D0 F0               [ 8] 1036 	movx	@dptr,a
      0005D1 A3               [12] 1037 	inc	dptr
      0005D2 A3               [12] 1038 	inc	dptr
      0005D3 E0               [ 8] 1039 	movx	a,@dptr
      0005D4 F0               [ 8] 1040 	movx	@dptr,a
      0005D5 75 86 00         [12] 1041 	mov	dps,#0
      0005D8 8E 82            [ 8] 1042 	mov	dpl,r6
      0005DA 8F 83            [ 8] 1043 	mov	dph,r7
      0005DC 88 93            [ 8] 1044 	mov	dpx,r0
      0005DE 89 F0            [ 8] 1045 	mov	b,r1
      0005E0 12s00r00r00      [16] 1046 	lcall	___fsdiv
      0005E4 80 2B            [12] 1047 	sjmp 00115$
      0005E6                       1048 00110$:
                                   1049 ;	tancotf.c:93: else return (xnum/xden);
                                   1050 ;	genAssign: resultIsFar = TRUE
      0005E6 90s00r00r00      [12] 1051 	mov	dptr,#___fsdiv_PARM_2
      0005EA EE               [ 4] 1052 	mov	a,r6
      0005EB F0               [ 8] 1053 	movx	@dptr,a
      0005EC A3               [12] 1054 	inc	dptr
      0005ED EF               [ 4] 1055 	mov	a,r7
      0005EE F0               [ 8] 1056 	movx	@dptr,a
      0005EF A3               [12] 1057 	inc	dptr
      0005F0 E8               [ 4] 1058 	mov	a,r0
      0005F1 F0               [ 8] 1059 	movx	@dptr,a
      0005F2 A3               [12] 1060 	inc	dptr
      0005F3 E9               [ 4] 1061 	mov	a,r1
      0005F4 F0               [ 8] 1062 	movx	@dptr,a
      0005F5 05 86            [ 8] 1063 	inc	dps
      0005F7 90s00r00r09      [12] 1064 	mov	dptr,#_tancotf_xnum_65536_26
      0005FB E0               [ 8] 1065 	movx	a,@dptr
      0005FC F5 82            [ 8] 1066 	mov	dpl,a
      0005FE A3               [12] 1067 	inc	dptr
      0005FF E0               [ 8] 1068 	movx	a,@dptr
      000600 F5 83            [ 8] 1069 	mov	dph,a
      000602 A3               [12] 1070 	inc	dptr
      000603 E0               [ 8] 1071 	movx	a,@dptr
      000604 F5 93            [ 8] 1072 	mov	dpx,a
      000606 A3               [12] 1073 	inc	dptr
      000607 E0               [ 8] 1074 	movx	a,@dptr
      000608 F5 F0            [ 8] 1075 	mov	b,a
      00060A 75 86 00         [12] 1076 	mov	dps,#0
      00060D 12s00r00r00      [16] 1077 	lcall	___fsdiv
      000611                       1078 00115$:
                                   1079 ;	tancotf.c:95: }
      000611 22               [16] 1080 	ret
                                   1081 	.area CSEG    (CODE)
                                   1082 	.area CONST   (CODE)
                                   1083 	.area XINIT   (CODE)
                                   1084 	.area CABS    (ABS,CODE)
