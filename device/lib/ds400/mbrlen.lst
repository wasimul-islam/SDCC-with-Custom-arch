                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrlen
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _mbrtowc
                                     35 	.globl _mbrlen_PARM_3
                                     36 	.globl _mbrlen_PARM_2
                                     37 	.globl _mbrlen
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         50 	.ds 8
                                     51 ;--------------------------------------------------------
                                     52 ; internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DSEG    (DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; overlayable items in internal ram
                                     57 ;--------------------------------------------------------
                                     58 ;--------------------------------------------------------
                                     59 ; indirectly addressable internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area ISEG    (DATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute internal ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area IABS    (ABS,DATA)
                                     66 	.area IABS    (ABS,DATA)
                                     67 ;--------------------------------------------------------
                                     68 ; bit data
                                     69 ;--------------------------------------------------------
                                     70 	.area BSEG    (BIT)
                                     71 ;--------------------------------------------------------
                                     72 ; paged external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area PSEG    (PAG,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; uninitialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XSEG    (XDATA)
      000000                         79 _mbrlen_PARM_2:
      000000                         80 	.ds 2
      000002                         81 _mbrlen_PARM_3:
      000002                         82 	.ds 4
      000006                         83 _mbrlen_sps_65536_10:
      000006                         84 	.ds 3
                                     85 ;--------------------------------------------------------
                                     86 ; absolute external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XABS    (ABS,XDATA)
                                     89 ;--------------------------------------------------------
                                     90 ; initialized external ram data
                                     91 ;--------------------------------------------------------
                                     92 	.area XISEG   (XDATA)
                                     93 ;--------------------------------------------------------
                                     94 ; global & static initialisations
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 	.area GSFINAL (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME    (CODE)
                                    104 	.area HOME    (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CSEG    (CODE)
                                    109 ;------------------------------------------------------------
                                    110 ;Allocation info for local variables in function 'mbrlen'
                                    111 ;------------------------------------------------------------
                                    112 ;n                         Allocated with name '_mbrlen_PARM_2'
                                    113 ;ps                        Allocated with name '_mbrlen_PARM_3'
                                    114 ;s                         Allocated to registers 
                                    115 ;sps                       Allocated with name '_mbrlen_sps_65536_10'
                                    116 ;------------------------------------------------------------
                                    117 ;	mbrlen.c:31: size_t mbrlen(const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    118 ;	-----------------------------------------
                                    119 ;	 function mbrlen
                                    120 ;	-----------------------------------------
      000000                        121 _mbrlen:
                           000002   122 	ar2 = 0x02
                           000003   123 	ar3 = 0x03
                           000004   124 	ar4 = 0x04
                           000005   125 	ar5 = 0x05
                           000006   126 	ar6 = 0x06
                           000007   127 	ar7 = 0x07
                           000000   128 	ar0 = 0x00
                           000001   129 	ar1 = 0x01
      000000 AA 82            [ 8]  130 	mov	r2,dpl
      000002 AB 83            [ 8]  131 	mov	r3,dph
      000004 AC 93            [ 8]  132 	mov	r4,dpx
      000006 AD F0            [ 8]  133 	mov	r5,b
                                    134 ;	mbrlen.c:35: return(mbrtowc(0, s, n, ps ? ps : &sps));
      000008 90s00r00r02      [12]  135 	mov	dptr,#_mbrlen_PARM_3
                                    136 ;	genAssign: resultIsFar = FALSE
      00000C E0               [ 8]  137 	movx	a,@dptr
      00000D FE               [ 4]  138 	mov	r6,a
      00000E A3               [12]  139 	inc	dptr
      00000F E0               [ 8]  140 	movx	a,@dptr
      000010 FF               [ 4]  141 	mov	r7,a
      000011 A3               [12]  142 	inc	dptr
      000012 E0               [ 8]  143 	movx	a,@dptr
      000013 F8               [ 4]  144 	mov	r0,a
      000014 A3               [12]  145 	inc	dptr
      000015 E0               [ 8]  146 	movx	a,@dptr
      000016 F9               [ 4]  147 	mov	r1,a
      000017 90s00r00r02      [12]  148 	mov	dptr,#_mbrlen_PARM_3
      00001B E0               [ 8]  149 	movx	a,@dptr
      00001C F5 F0            [ 8]  150 	mov	b,a
      00001E A3               [12]  151 	inc	dptr
      00001F E0               [ 8]  152 	movx	a,@dptr
      000020 42 F0            [ 8]  153 	orl	b,a
      000022 A3               [12]  154 	inc	dptr
      000023 E0               [ 8]  155 	movx	a,@dptr
      000024 45 F0            [ 8]  156 	orl	a,b
      000026 60 02            [12]  157 	jz  00103$
      000028                        158 00109$:
                                    159 ;	genAssign: resultIsFar = FALSE
      000028 80 08            [12]  160 	sjmp 00104$
      00002A                        161 00103$:
      00002A 7Er06            [ 8]  162 	mov	r6,#_mbrlen_sps_65536_10
      00002C 7Fs00            [ 8]  163 	mov	r7,#(_mbrlen_sps_65536_10 >> 8)
      00002E 78s00            [ 8]  164 	mov	r0,#(_mbrlen_sps_65536_10 >> 16)
      000030 79 00            [ 8]  165 	mov	r1,#0x00
      000032                        166 00104$:
                                    167 ;	genAssign: resultIsFar = TRUE
      000032 90s00r00r00      [12]  168 	mov	dptr,#_mbrtowc_PARM_2
      000036 EA               [ 4]  169 	mov	a,r2
      000037 F0               [ 8]  170 	movx	@dptr,a
      000038 A3               [12]  171 	inc	dptr
      000039 EB               [ 4]  172 	mov	a,r3
      00003A F0               [ 8]  173 	movx	@dptr,a
      00003B A3               [12]  174 	inc	dptr
      00003C EC               [ 4]  175 	mov	a,r4
      00003D F0               [ 8]  176 	movx	@dptr,a
      00003E A3               [12]  177 	inc	dptr
      00003F ED               [ 4]  178 	mov	a,r5
      000040 F0               [ 8]  179 	movx	@dptr,a
      000041 90s00r00r00      [12]  180 	mov	dptr,#_mbrlen_PARM_2
                                    181 ;	genAssign: resultIsFar = TRUE
      000045 75 86 21         [12]  182 	mov	dps,#0x21
      000048 90s00r00r00      [12]  183 	mov	dptr,#_mbrtowc_PARM_3
      00004C E0               [ 8]  184 	movx	a,@dptr
      00004D F0               [ 8]  185 	movx	@dptr,a
      00004E A3               [12]  186 	inc	dptr
      00004F A3               [12]  187 	inc	dptr
      000050 E0               [ 8]  188 	movx	a,@dptr
      000051 F0               [ 8]  189 	movx	@dptr,a
      000052 75 86 00         [12]  190 	mov	dps,#0
                                    191 ;	genAssign: resultIsFar = TRUE
      000055 90s00r00r00      [12]  192 	mov	dptr,#_mbrtowc_PARM_4
      000059 EE               [ 4]  193 	mov	a,r6
      00005A F0               [ 8]  194 	movx	@dptr,a
      00005B A3               [12]  195 	inc	dptr
      00005C EF               [ 4]  196 	mov	a,r7
      00005D F0               [ 8]  197 	movx	@dptr,a
      00005E A3               [12]  198 	inc	dptr
      00005F E8               [ 4]  199 	mov	a,r0
      000060 F0               [ 8]  200 	movx	@dptr,a
      000061 A3               [12]  201 	inc	dptr
      000062 E9               [ 4]  202 	mov	a,r1
      000063 F0               [ 8]  203 	movx	@dptr,a
      000064 90 00 00 00      [12]  204 	mov  dptr,#0x0000
      000068 75 F0 00         [12]  205 	mov	b,#0x00
      00006B 12s00r00r00      [16]  206 	lcall	_mbrtowc
      00006F                        207 00101$:
                                    208 ;	mbrlen.c:36: }
      00006F 22               [16]  209 	ret
                                    210 	.area CSEG    (CODE)
                                    211 	.area CONST   (CODE)
                                    212 	.area XINIT   (CODE)
                                    213 	.area CABS    (ABS,CODE)
