                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module fabsf
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _fabsf
                                     35 ;--------------------------------------------------------
                                     36 ; special function registers
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; special function bits
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable register banks
                                     43 ;--------------------------------------------------------
                                     44 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         45 	.ds 8
                                     46 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 ;--------------------------------------------------------
                                     49 ; internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area DSEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; overlayable items in internal ram
                                     54 ;--------------------------------------------------------
                                     55 ;--------------------------------------------------------
                                     56 ; indirectly addressable internal ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area ISEG    (DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute internal ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area IABS    (ABS,DATA)
                                     63 	.area IABS    (ABS,DATA)
                                     64 ;--------------------------------------------------------
                                     65 ; bit data
                                     66 ;--------------------------------------------------------
                                     67 	.area BSEG    (BIT)
                                     68 ;--------------------------------------------------------
                                     69 ; paged external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area PSEG    (PAG,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; uninitialized external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XSEG    (XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; absolute external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XABS    (ABS,XDATA)
                                     80 ;--------------------------------------------------------
                                     81 ; initialized external ram data
                                     82 ;--------------------------------------------------------
                                     83 	.area XISEG   (XDATA)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'fabsf'
                                    102 ;------------------------------------------------------------
                                    103 ;x                         Allocated to registers r2 r3 r4 r5 
                                    104 ;fl                        Allocated to stack - _bp +1
                                    105 ;------------------------------------------------------------
                                    106 ;	fabsf.c:34: float fabsf(float x) _FLOAT_FUNC_REENTRANT
                                    107 ;	-----------------------------------------
                                    108 ;	 function fabsf
                                    109 ;	-----------------------------------------
      000000                        110 _fabsf:
                           000002   111 	ar2 = 0x02
                           000003   112 	ar3 = 0x03
                           000004   113 	ar4 = 0x04
                           000005   114 	ar5 = 0x05
                           000006   115 	ar6 = 0x06
                           000007   116 	ar7 = 0x07
                           000000   117 	ar0 = 0x00
                           000001   118 	ar1 = 0x01
      000000 C0*00            [ 8]  119 	push	_bpx
      000002 C0*01            [ 8]  120 	push	_bpx+1
      000004 85 81*00         [12]  121 	mov	_bpx,sp
      000007 85 9B*01         [12]  122 	mov	_bpx+1,esp
      00000A 53*01 03         [12]  123 	anl	_bpx+1,#3
      00000D 43*01 DC         [12]  124 	orl	_bpx+1,#0xdc
      000010 C0 E0            [ 8]  125 	push	acc
      000012 C0 E0            [ 8]  126 	push	acc
      000014 C0 E0            [ 8]  127 	push	acc
      000016 C0 E0            [ 8]  128 	push	acc
      000018 AA 82            [ 8]  129 	mov	r2,dpl
      00001A AB 83            [ 8]  130 	mov	r3,dph
      00001C AC 93            [ 8]  131 	mov	r4,dpx
      00001E AD F0            [ 8]  132 	mov	r5,b
                                    133 ;	fabsf.c:38: fl.f = x;
      000020 E5*00            [ 8]  134 	mov	a,_bpx
      000022 24 01            [ 8]  135 	add	a,#0x01
      000024 F5 F0            [ 8]  136 	mov	b,a
      000026 E4               [ 4]  137 	clr	a
      000027 35*01            [ 8]  138 	addc	a,_bpx+1
      000029 85 F0 84         [12]  139 	mov	dpl1,b
      00002C F5 85            [ 8]  140 	mov	dph1,a
      00002E 75 95 FF         [12]  141 	mov	dpx1,#0xff
      000031 EA               [ 4]  142 	mov	a,r2
      000032 05 86            [ 8]  143 	inc	dps
      000034 F0               [ 8]  144 	movx	@dptr,a
      000035 A3               [12]  145 	inc	dptr
      000036 EB               [ 4]  146 	mov	a,r3
      000037 F0               [ 8]  147 	movx	@dptr,a
      000038 A3               [12]  148 	inc	dptr
      000039 EC               [ 4]  149 	mov	a,r4
      00003A F0               [ 8]  150 	movx	@dptr,a
      00003B A3               [12]  151 	inc	dptr
      00003C ED               [ 4]  152 	mov	a,r5
      00003D F0               [ 8]  153 	movx	@dptr,a
      00003E 75 86 00         [12]  154 	mov	dps,#0
                                    155 ;	fabsf.c:39: fl.l &= 0x7fffffff;
      000041 E5*00            [ 8]  156 	mov	a,_bpx
      000043 24 01            [ 8]  157 	add	a,#0x01
      000045 F5 F0            [ 8]  158 	mov	b,a
      000047 E4               [ 4]  159 	clr	a
      000048 35*01            [ 8]  160 	addc	a,_bpx+1
      00004A 85 F0 84         [12]  161 	mov	dpl1,b
      00004D F5 85            [ 8]  162 	mov	dph1,a
      00004F 75 95 FF         [12]  163 	mov	dpx1,#0xff
      000052 05 86            [ 8]  164 	inc	dps
      000054 E0               [ 8]  165 	movx	a,@dptr
      000055 A3               [12]  166 	inc	dptr
      000056 FD               [ 4]  167 	mov	r5,a
      000057 E0               [ 8]  168 	movx	a,@dptr
      000058 A3               [12]  169 	inc	dptr
      000059 FE               [ 4]  170 	mov	r6,a
      00005A E0               [ 8]  171 	movx	a,@dptr
      00005B A3               [12]  172 	inc	dptr
      00005C FF               [ 4]  173 	mov	r7,a
      00005D E0               [ 8]  174 	movx	a,@dptr
      00005E F8               [ 4]  175 	mov	r0,a
      00005F 75 86 01         [12]  176 	mov     dps, #1
      000062 12s00r00r00      [16]  177 	lcall	__decdptr
      000066 12s00r00r00      [16]  178 	lcall	__decdptr
      00006A 12s00r00r00      [16]  179 	lcall	__decdptr
      00006E 75 86 00         [12]  180 	mov	dps,#0
      000071 53 00 7F         [12]  181 	anl	ar0,#0x7f
      000074 ED               [ 4]  182 	mov	a,r5
      000075 05 86            [ 8]  183 	inc	dps
      000077 F0               [ 8]  184 	movx	@dptr,a
      000078 A3               [12]  185 	inc	dptr
      000079 EE               [ 4]  186 	mov	a,r6
      00007A F0               [ 8]  187 	movx	@dptr,a
      00007B A3               [12]  188 	inc	dptr
      00007C EF               [ 4]  189 	mov	a,r7
      00007D F0               [ 8]  190 	movx	@dptr,a
      00007E A3               [12]  191 	inc	dptr
      00007F E8               [ 4]  192 	mov	a,r0
      000080 F0               [ 8]  193 	movx	@dptr,a
      000081 75 86 00         [12]  194 	mov	dps,#0
                                    195 ;	fabsf.c:40: return fl.f;
      000084 E5*00            [ 8]  196 	mov	a,_bpx
      000086 24 01            [ 8]  197 	add	a,#0x01
      000088 F5 F0            [ 8]  198 	mov	b,a
      00008A E4               [ 4]  199 	clr	a
      00008B 35*01            [ 8]  200 	addc	a,_bpx+1
      00008D 85 F0 84         [12]  201 	mov	dpl1,b
      000090 F5 85            [ 8]  202 	mov	dph1,a
      000092 75 95 FF         [12]  203 	mov	dpx1,#0xff
      000095 05 86            [ 8]  204 	inc	dps
      000097 E0               [ 8]  205 	movx	a,@dptr
      000098 A3               [12]  206 	inc	dptr
      000099 FA               [ 4]  207 	mov	r2,a
      00009A E0               [ 8]  208 	movx	a,@dptr
      00009B A3               [12]  209 	inc	dptr
      00009C FB               [ 4]  210 	mov	r3,a
      00009D E0               [ 8]  211 	movx	a,@dptr
      00009E A3               [12]  212 	inc	dptr
      00009F FC               [ 4]  213 	mov	r4,a
      0000A0 E0               [ 8]  214 	movx	a,@dptr
      0000A1 FD               [ 4]  215 	mov	r5,a
      0000A2 75 86 00         [12]  216 	mov	dps,#0
      0000A5 8A 82            [ 8]  217 	mov	dpl,r2
      0000A7 8B 83            [ 8]  218 	mov	dph,r3
      0000A9 8C 93            [ 8]  219 	mov	dpx,r4
      0000AB 8D F0            [ 8]  220 	mov	b,r5
      0000AD                        221 00101$:
                                    222 ;	fabsf.c:41: }
      0000AD 85*00 81         [12]  223 	mov	sp,_bpx
      0000B0 85*01 9B         [12]  224 	mov	esp,_bpx+1
      0000B3 D0*01            [ 8]  225 	pop	_bpx+1
      0000B5 D0*00            [ 8]  226 	pop	_bpx
      0000B7 22               [16]  227 	ret
                                    228 	.area CSEG    (CODE)
                                    229 	.area CONST   (CODE)
                                    230 	.area XINIT   (CODE)
                                    231 	.area CABS    (ABS,CODE)
