                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncpy
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strncpy_PARM_3
                                     35 	.globl _strncpy_PARM_2
                                     36 	.globl _strncpy
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _strncpy_PARM_2:
      000000                         79 	.ds 4
      000004                         80 _strncpy_PARM_3:
      000004                         81 	.ds 2
      000006                         82 _strncpy_d_65536_27:
      000006                         83 	.ds 4
      00000A                         84 _strncpy_sloc0_1_0:
      00000A                         85 	.ds 4
      00000E                         86 _strncpy_sloc1_1_0:
      00000E                         87 	.ds 4
                                     88 ;--------------------------------------------------------
                                     89 ; absolute external ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area XABS    (ABS,XDATA)
                                     92 ;--------------------------------------------------------
                                     93 ; initialized external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area XISEG   (XDATA)
                                     96 ;--------------------------------------------------------
                                     97 ; global & static initialisations
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area GSINIT  (CODE)
                                    101 	.area GSFINAL (CODE)
                                    102 	.area GSINIT  (CODE)
                                    103 ;--------------------------------------------------------
                                    104 ; Home
                                    105 ;--------------------------------------------------------
                                    106 	.area HOME    (CODE)
                                    107 	.area HOME    (CODE)
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CSEG    (CODE)
                                    112 ;------------------------------------------------------------
                                    113 ;Allocation info for local variables in function 'strncpy'
                                    114 ;------------------------------------------------------------
                                    115 ;s                         Allocated with name '_strncpy_PARM_2'
                                    116 ;n                         Allocated with name '_strncpy_PARM_3'
                                    117 ;d                         Allocated with name '_strncpy_d_65536_27'
                                    118 ;d1                        Allocated to registers r6 r7 r0 r1 
                                    119 ;sloc0                     Allocated with name '_strncpy_sloc0_1_0'
                                    120 ;sloc1                     Allocated with name '_strncpy_sloc1_1_0'
                                    121 ;------------------------------------------------------------
                                    122 ;	_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                                    123 ;	-----------------------------------------
                                    124 ;	 function strncpy
                                    125 ;	-----------------------------------------
      000000                        126 _strncpy:
                           000002   127 	ar2 = 0x02
                           000003   128 	ar3 = 0x03
                           000004   129 	ar4 = 0x04
                           000005   130 	ar5 = 0x05
                           000006   131 	ar6 = 0x06
                           000007   132 	ar7 = 0x07
                           000000   133 	ar0 = 0x00
                           000001   134 	ar1 = 0x01
      000000 75 86 01         [12]  135 	mov     dps, #1
      000003 90s00r00r06      [12]  136 	mov     dptr, #_strncpy_d_65536_27
      000007 E5 82            [ 8]  137 	mov	a,dpl
      000009 F0               [ 8]  138 	movx	@dptr,a
      00000A A3               [12]  139 	inc	dptr
      00000B E5 83            [ 8]  140 	mov	a,dph
      00000D F0               [ 8]  141 	movx	@dptr,a
      00000E A3               [12]  142 	inc	dptr
      00000F E5 93            [ 8]  143 	mov	a,dpx
      000011 F0               [ 8]  144 	movx	@dptr,a
      000012 A3               [12]  145 	inc	dptr
      000013 E5 F0            [ 8]  146 	mov	a,b
      000015 F0               [ 8]  147 	movx	@dptr,a
      000016 75 86 00         [12]  148 	mov	dps,#0
                                    149 ;	_strncpy.c:35: register char * d1 =  d;
      000019 90s00r00r06      [12]  150 	mov	dptr,#_strncpy_d_65536_27
                                    151 ;	genAssign: resultIsFar = TRUE
      00001D E0               [ 8]  152 	movx	a,@dptr
      00001E FE               [ 4]  153 	mov	r6,a
      00001F A3               [12]  154 	inc	dptr
      000020 E0               [ 8]  155 	movx	a,@dptr
      000021 FF               [ 4]  156 	mov	r7,a
      000022 A3               [12]  157 	inc	dptr
      000023 E0               [ 8]  158 	movx	a,@dptr
      000024 F8               [ 4]  159 	mov	r0,a
      000025 A3               [12]  160 	inc	dptr
      000026 E0               [ 8]  161 	movx	a,@dptr
      000027 F9               [ 4]  162 	mov	r1,a
                                    163 ;	_strncpy.c:37: while ( n && *s )
      000028 90s00r00r04      [12]  164 	mov	dptr,#_strncpy_PARM_3
                                    165 ;	genAssign: resultIsFar = FALSE
      00002C E0               [ 8]  166 	movx	a,@dptr
      00002D FA               [ 4]  167 	mov	r2,a
      00002E A3               [12]  168 	inc	dptr
      00002F E0               [ 8]  169 	movx	a,@dptr
      000030 FB               [ 4]  170 	mov	r3,a
      000031 90s00r00r00      [12]  171 	mov	dptr,#_strncpy_PARM_2
                                    172 ;	genAssign: resultIsFar = TRUE
      000035 75 86 21         [12]  173 	mov	dps,#0x21
      000038 90s00r00r0A      [12]  174 	mov	dptr,#_strncpy_sloc0_1_0
      00003C E0               [ 8]  175 	movx	a,@dptr
      00003D F0               [ 8]  176 	movx	@dptr,a
      00003E A3               [12]  177 	inc	dptr
      00003F A3               [12]  178 	inc	dptr
      000040 E0               [ 8]  179 	movx	a,@dptr
      000041 F0               [ 8]  180 	movx	@dptr,a
      000042 A3               [12]  181 	inc	dptr
      000043 A3               [12]  182 	inc	dptr
      000044 E0               [ 8]  183 	movx	a,@dptr
      000045 F0               [ 8]  184 	movx	@dptr,a
      000046 A3               [12]  185 	inc	dptr
      000047 A3               [12]  186 	inc	dptr
      000048 E0               [ 8]  187 	movx	a,@dptr
      000049 F0               [ 8]  188 	movx	@dptr,a
      00004A 75 86 00         [12]  189 	mov	dps,#0
      00004D 90s00r00r06      [12]  190 	mov	dptr,#_strncpy_d_65536_27
                                    191 ;	genAssign: resultIsFar = TRUE
      000051 75 86 21         [12]  192 	mov	dps,#0x21
      000054 90s00r00r0E      [12]  193 	mov	dptr,#_strncpy_sloc1_1_0
      000058 E0               [ 8]  194 	movx	a,@dptr
      000059 F0               [ 8]  195 	movx	@dptr,a
      00005A A3               [12]  196 	inc	dptr
      00005B A3               [12]  197 	inc	dptr
      00005C E0               [ 8]  198 	movx	a,@dptr
      00005D F0               [ 8]  199 	movx	@dptr,a
      00005E A3               [12]  200 	inc	dptr
      00005F A3               [12]  201 	inc	dptr
      000060 E0               [ 8]  202 	movx	a,@dptr
      000061 F0               [ 8]  203 	movx	@dptr,a
      000062 A3               [12]  204 	inc	dptr
      000063 A3               [12]  205 	inc	dptr
      000064 E0               [ 8]  206 	movx	a,@dptr
      000065 F0               [ 8]  207 	movx	@dptr,a
      000066 75 86 00         [12]  208 	mov	dps,#0
      000069                        209 00102$:
      000069 EA               [ 4]  210 	mov	a,r2
      00006A 4B               [ 4]  211 	orl	a,r3
      00006B 60 6F            [12]  212 	jz  00114$
      00006D                        213 00132$:
      00006D 90s00r00r0A      [12]  214 	mov	dptr,#_strncpy_sloc0_1_0
      000071 E0               [ 8]  215 	movx	a,@dptr
      000072 C0 E0            [ 8]  216 	push	acc
      000074 A3               [12]  217 	inc	dptr
      000075 E0               [ 8]  218 	movx	a,@dptr
      000076 C0 E0            [ 8]  219 	push	acc
      000078 A3               [12]  220 	inc	dptr
      000079 E0               [ 8]  221 	movx	a,@dptr
      00007A C0 E0            [ 8]  222 	push	acc
      00007C A3               [12]  223 	inc	dptr
      00007D E0               [ 8]  224 	movx	a,@dptr
      00007E F5 F0            [ 8]  225 	mov	b,a
      000080 D0 93            [ 8]  226 	pop	dpx
      000082 D0 83            [ 8]  227 	pop	dph
      000084 D0 82            [ 8]  228 	pop	dpl
      000086 12s00r00r00      [16]  229 	lcall	__gptrget
      00008A FC               [ 4]  230 	mov  r4,a
      00008B 60 4F            [12]  231 	jz  00114$
      00008D                        232 00133$:
                                    233 ;	_strncpy.c:39: n-- ;
      00008D 1A               [ 4]  234 	dec	r2
      00008E BA FF 01         [16]  235 	cjne	r2,#0xff,00134$
      000091 1B               [ 4]  236 	dec	r3
      000092                        237 00134$:
                                    238 ;	_strncpy.c:40: *d++ = *s++ ;
      000092 90s00r00r0A      [12]  239 	mov	dptr,#_strncpy_sloc0_1_0
      000096 E0               [ 8]  240 	movx	a,@dptr
      000097 24 01            [ 8]  241 	add	a,#0x01
      000099 F0               [ 8]  242 	movx	@dptr,a
      00009A A3               [12]  243 	inc	dptr
      00009B E0               [ 8]  244 	movx	a,@dptr
      00009C 34 00            [ 8]  245 	addc	a,#0x00
      00009E F0               [ 8]  246 	movx	@dptr,a
      00009F A3               [12]  247 	inc	dptr
      0000A0 E0               [ 8]  248 	movx	a,@dptr
      0000A1 34 00            [ 8]  249 	addc	a,#0x00
      0000A3 F0               [ 8]  250 	movx	@dptr,a
      0000A4 A3               [12]  251 	inc	dptr
      0000A5 E0               [ 8]  252 	movx	a,@dptr
      0000A6 F0               [ 8]  253 	movx	@dptr,a
      0000A7 90s00r00r0E      [12]  254 	mov	dptr,#_strncpy_sloc1_1_0
      0000AB E0               [ 8]  255 	movx	a,@dptr
      0000AC C0 E0            [ 8]  256 	push	acc
      0000AE A3               [12]  257 	inc	dptr
      0000AF E0               [ 8]  258 	movx	a,@dptr
      0000B0 C0 E0            [ 8]  259 	push	acc
      0000B2 A3               [12]  260 	inc	dptr
      0000B3 E0               [ 8]  261 	movx	a,@dptr
      0000B4 C0 E0            [ 8]  262 	push	acc
      0000B6 A3               [12]  263 	inc	dptr
      0000B7 E0               [ 8]  264 	movx	a,@dptr
      0000B8 F5 F0            [ 8]  265 	mov	b,a
      0000BA D0 93            [ 8]  266 	pop	dpx
      0000BC D0 83            [ 8]  267 	pop	dph
      0000BE D0 82            [ 8]  268 	pop	dpl
      0000C0 EC               [ 4]  269 	mov	a,r4
      0000C1 12s00r00r00      [16]  270 	lcall	__gptrput
      0000C5 90s00r00r0E      [12]  271 	mov	dptr,#_strncpy_sloc1_1_0
      0000C9 E0               [ 8]  272 	movx	a,@dptr
      0000CA 24 01            [ 8]  273 	add	a,#0x01
      0000CC F0               [ 8]  274 	movx	@dptr,a
      0000CD A3               [12]  275 	inc	dptr
      0000CE E0               [ 8]  276 	movx	a,@dptr
      0000CF 34 00            [ 8]  277 	addc	a,#0x00
      0000D1 F0               [ 8]  278 	movx	@dptr,a
      0000D2 A3               [12]  279 	inc	dptr
      0000D3 E0               [ 8]  280 	movx	a,@dptr
      0000D4 34 00            [ 8]  281 	addc	a,#0x00
      0000D6 F0               [ 8]  282 	movx	@dptr,a
      0000D7 A3               [12]  283 	inc	dptr
      0000D8 E0               [ 8]  284 	movx	a,@dptr
      0000D9 F0               [ 8]  285 	movx	@dptr,a
                                    286 ;	_strncpy.c:42: while ( n-- )
      0000DA 80 8D            [12]  287 	sjmp 00102$
      0000DC                        288 00114$:
                                    289 ;	genAssign: resultIsFar = FALSE
      0000DC                        290 00105$:
                                    291 ;	genAssign: resultIsFar = FALSE
      0000DC 8A 04            [ 8]  292 	mov	ar4,r2
      0000DE 8B 05            [ 8]  293 	mov	ar5,r3
      0000E0 1A               [ 4]  294 	dec	r2
      0000E1 BA FF 01         [16]  295 	cjne	r2,#0xff,00135$
      0000E4 1B               [ 4]  296 	dec	r3
      0000E5                        297 00135$:
      0000E5 EC               [ 4]  298 	mov	a,r4
      0000E6 4D               [ 4]  299 	orl	a,r5
      0000E7 60 35            [12]  300 	jz  00107$
      0000E9                        301 00136$:
                                    302 ;	_strncpy.c:44: *d++ = '\0' ;
      0000E9 90s00r00r0E      [12]  303 	mov	dptr,#_strncpy_sloc1_1_0
      0000ED E0               [ 8]  304 	movx	a,@dptr
      0000EE C0 E0            [ 8]  305 	push	acc
      0000F0 A3               [12]  306 	inc	dptr
      0000F1 E0               [ 8]  307 	movx	a,@dptr
      0000F2 C0 E0            [ 8]  308 	push	acc
      0000F4 A3               [12]  309 	inc	dptr
      0000F5 E0               [ 8]  310 	movx	a,@dptr
      0000F6 C0 E0            [ 8]  311 	push	acc
      0000F8 A3               [12]  312 	inc	dptr
      0000F9 E0               [ 8]  313 	movx	a,@dptr
      0000FA F5 F0            [ 8]  314 	mov	b,a
      0000FC D0 93            [ 8]  315 	pop	dpx
      0000FE D0 83            [ 8]  316 	pop	dph
      000100 D0 82            [ 8]  317 	pop	dpl
      000102 E4               [ 4]  318 	clr	a
      000103 12s00r00r00      [16]  319 	lcall	__gptrput
      000107 90s00r00r0E      [12]  320 	mov	dptr,#_strncpy_sloc1_1_0
      00010B E0               [ 8]  321 	movx	a,@dptr
      00010C 24 01            [ 8]  322 	add	a,#0x01
      00010E F0               [ 8]  323 	movx	@dptr,a
      00010F A3               [12]  324 	inc	dptr
      000110 E0               [ 8]  325 	movx	a,@dptr
      000111 34 00            [ 8]  326 	addc	a,#0x00
      000113 F0               [ 8]  327 	movx	@dptr,a
      000114 A3               [12]  328 	inc	dptr
      000115 E0               [ 8]  329 	movx	a,@dptr
      000116 34 00            [ 8]  330 	addc	a,#0x00
      000118 F0               [ 8]  331 	movx	@dptr,a
      000119 A3               [12]  332 	inc	dptr
      00011A E0               [ 8]  333 	movx	a,@dptr
      00011B F0               [ 8]  334 	movx	@dptr,a
      00011C 80 BE            [12]  335 	sjmp 00105$
      00011E                        336 00107$:
                                    337 ;	_strncpy.c:46: return d1;
      00011E 8E 82            [ 8]  338 	mov	dpl,r6
      000120 8F 83            [ 8]  339 	mov	dph,r7
      000122 88 93            [ 8]  340 	mov	dpx,r0
      000124 89 F0            [ 8]  341 	mov	b,r1
      000126                        342 00108$:
                                    343 ;	_strncpy.c:47: }
      000126 22               [16]  344 	ret
                                    345 	.area CSEG    (CODE)
                                    346 	.area CONST   (CODE)
                                    347 	.area XINIT   (CODE)
                                    348 	.area CABS    (ABS,CODE)
