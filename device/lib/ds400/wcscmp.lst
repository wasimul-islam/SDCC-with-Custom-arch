                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcscmp
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _wcscmp_PARM_2
                                     35 	.globl _wcscmp
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; uninitialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 _wcscmp_PARM_2:
      000000                         78 	.ds 4
      000004                         79 _wcscmp_sloc0_1_0:
      000004                         80 	.ds 4
                                     81 ;--------------------------------------------------------
                                     82 ; absolute external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XABS    (ABS,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; initialized external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XISEG   (XDATA)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'wcscmp'
                                    107 ;------------------------------------------------------------
                                    108 ;s2                        Allocated with name '_wcscmp_PARM_2'
                                    109 ;s1                        Allocated to registers 
                                    110 ;sloc0                     Allocated with name '_wcscmp_sloc0_1_0'
                                    111 ;------------------------------------------------------------
                                    112 ;	wcscmp.c:31: int wcscmp(const wchar_t *s1, const wchar_t *s2)
                                    113 ;	-----------------------------------------
                                    114 ;	 function wcscmp
                                    115 ;	-----------------------------------------
      000000                        116 _wcscmp:
                           000002   117 	ar2 = 0x02
                           000003   118 	ar3 = 0x03
                           000004   119 	ar4 = 0x04
                           000005   120 	ar5 = 0x05
                           000006   121 	ar6 = 0x06
                           000007   122 	ar7 = 0x07
                           000000   123 	ar0 = 0x00
                           000001   124 	ar1 = 0x01
      000000 AA 82            [ 8]  125 	mov	r2,dpl
      000002 AB 83            [ 8]  126 	mov	r3,dph
      000004 AC 93            [ 8]  127 	mov	r4,dpx
      000006 AD F0            [ 8]  128 	mov	r5,b
                                    129 ;	wcscmp.c:33: while(*s1 == *s2 && *s1)
      000008 90s00r00r00      [12]  130 	mov	dptr,#_wcscmp_PARM_2
                                    131 ;	genAssign: resultIsFar = FALSE
      00000C E0               [ 8]  132 	movx	a,@dptr
      00000D FE               [ 4]  133 	mov	r6,a
      00000E A3               [12]  134 	inc	dptr
      00000F E0               [ 8]  135 	movx	a,@dptr
      000010 FF               [ 4]  136 	mov	r7,a
      000011 A3               [12]  137 	inc	dptr
      000012 E0               [ 8]  138 	movx	a,@dptr
      000013 F8               [ 4]  139 	mov	r0,a
      000014 A3               [12]  140 	inc	dptr
      000015 E0               [ 8]  141 	movx	a,@dptr
      000016 F9               [ 4]  142 	mov	r1,a
      000017                        143 00102$:
      000017 8A 82            [ 8]  144 	mov	dpl,r2
      000019 8B 83            [ 8]  145 	mov	dph,r3
      00001B 8C 93            [ 8]  146 	mov	dpx,r4
      00001D 8D F0            [ 8]  147 	mov	b,r5
      00001F 75 86 01         [12]  148 	mov	dps, #1
      000022 90s00r00r04      [12]  149 	mov	dptr, #_wcscmp_sloc0_1_0
      000026 15 86            [ 8]  150 	dec	dps
      000028 12s00r00r00      [16]  151 	lcall	__gptrgetWord
      00002C 75 86 01         [12]  152 	mov	dps,#1
      00002F F0               [ 8]  153 	movx	@dptr,a
      000030 75 86 01         [12]  154 	mov     dps, #1
      000033 A3               [12]  155 	inc	dptr
      000034 E5 9C            [ 8]  156 	mov	a,acc1
      000036 F0               [ 8]  157 	movx	@dptr,a
      000037 75 86 00         [12]  158 	mov	dps,#0
      00003A A3               [12]  159 	inc	dptr
      00003B 12s00r00r00      [16]  160 	lcall	__gptrgetWord
      00003F 75 86 01         [12]  161 	mov	dps,#1
      000042 A3               [12]  162 	inc	dptr
      000043 F0               [ 8]  163 	movx	@dptr,a
      000044 75 86 01         [12]  164 	mov     dps, #1
      000047 A3               [12]  165 	inc	dptr
      000048 E5 9C            [ 8]  166 	mov	a,acc1
      00004A F0               [ 8]  167 	movx	@dptr,a
      00004B 75 86 00         [12]  168 	mov	dps,#0
      00004E C0 02            [ 8]  169 	push	ar2
      000050 C0 03            [ 8]  170 	push	ar3
      000052 C0 04            [ 8]  171 	push	ar4
      000054 C0 05            [ 8]  172 	push	ar5
      000056 8E 82            [ 8]  173 	mov	dpl,r6
      000058 8F 83            [ 8]  174 	mov	dph,r7
      00005A 88 93            [ 8]  175 	mov	dpx,r0
      00005C 89 F0            [ 8]  176 	mov	b,r1
      00005E 12s00r00r00      [16]  177 	lcall	__gptrgetWord
      000062 FA               [ 4]  178 	mov	r2,a
      000063 AB 9C            [ 8]  179 	mov	r3,acc1
      000065 A3               [12]  180 	inc	dptr
      000066 12s00r00r00      [16]  181 	lcall	__gptrgetWord
      00006A FC               [ 4]  182 	mov	r4,a
      00006B AD 9C            [ 8]  183 	mov	r5,acc1
      00006D 90s00r00r04      [12]  184 	mov	dptr,#_wcscmp_sloc0_1_0
      000071 E0               [ 8]  185 	movx	a,@dptr
      000072 B5 02 11         [16]  186 	cjne	a,ar2,00132$
      000075 A3               [12]  187 	inc	dptr
      000076 E0               [ 8]  188 	movx	a,@dptr
      000077 B5 03 0C         [16]  189 	cjne	a,ar3,00132$
      00007A A3               [12]  190 	inc	dptr
      00007B E0               [ 8]  191 	movx	a,@dptr
      00007C B5 04 07         [16]  192 	cjne	a,ar4,00132$
      00007F A3               [12]  193 	inc	dptr
      000080 E0               [ 8]  194 	movx	a,@dptr
      000081 B5 05 02         [16]  195 	cjne	a,ar5,00132$
      000084 80 0A            [12]  196 	sjmp	00133$
      000086                        197 00132$:
      000086 D0 05            [ 8]  198 	pop	ar5
      000088 D0 04            [ 8]  199 	pop	ar4
      00008A D0 03            [ 8]  200 	pop	ar3
      00008C D0 02            [ 8]  201 	pop	ar2
      00008E 80 35            [12]  202 	sjmp 00104$
      000090                        203 00133$:
      000090 D0 05            [ 8]  204 	pop	ar5
      000092 D0 04            [ 8]  205 	pop	ar4
      000094 D0 03            [ 8]  206 	pop	ar3
      000096 D0 02            [ 8]  207 	pop	ar2
      000098 90s00r00r04      [12]  208 	mov	dptr,#_wcscmp_sloc0_1_0
      00009C E0               [ 8]  209 	movx	a,@dptr
      00009D F5 F0            [ 8]  210 	mov	b,a
      00009F A3               [12]  211 	inc	dptr
      0000A0 E0               [ 8]  212 	movx	a,@dptr
      0000A1 42 F0            [ 8]  213 	orl	b,a
      0000A3 A3               [12]  214 	inc	dptr
      0000A4 E0               [ 8]  215 	movx	a,@dptr
      0000A5 42 F0            [ 8]  216 	orl	b,a
      0000A7 A3               [12]  217 	inc	dptr
      0000A8 E0               [ 8]  218 	movx	a,@dptr
      0000A9 45 F0            [ 8]  219 	orl	a,b
      0000AB 60 18            [12]  220 	jz  00104$
      0000AD                        221 00134$:
                                    222 ;	wcscmp.c:34: s1++, s2++;
      0000AD 74 04            [ 8]  223 	mov	a,#0x04
      0000AF 2A               [ 4]  224 	add	a,r2
      0000B0 FA               [ 4]  225 	mov	r2,a
      0000B1 E4               [ 4]  226 	clr	a
      0000B2 3B               [ 4]  227 	addc	a,r3
      0000B3 FB               [ 4]  228 	mov	r3,a
      0000B4 E4               [ 4]  229 	clr	a
      0000B5 3C               [ 4]  230 	addc	a,r4
      0000B6 FC               [ 4]  231 	mov	r4,a
      0000B7 74 04            [ 8]  232 	mov	a,#0x04
      0000B9 2E               [ 4]  233 	add	a,r6
      0000BA FE               [ 4]  234 	mov	r6,a
      0000BB E4               [ 4]  235 	clr	a
      0000BC 3F               [ 4]  236 	addc	a,r7
      0000BD FF               [ 4]  237 	mov	r7,a
      0000BE E4               [ 4]  238 	clr	a
      0000BF 38               [ 4]  239 	addc	a,r0
      0000C0 F8               [ 4]  240 	mov	r0,a
      0000C1 02s00r00r17      [16]  241 	ljmp	00102$
      0000C5                        242 00104$:
                                    243 ;	wcscmp.c:36: if(*s1 < *s2)
      0000C5 8A 82            [ 8]  244 	mov	dpl,r2
      0000C7 8B 83            [ 8]  245 	mov	dph,r3
      0000C9 8C 93            [ 8]  246 	mov	dpx,r4
      0000CB 8D F0            [ 8]  247 	mov	b,r5
      0000CD 12s00r00r00      [16]  248 	lcall	__gptrgetWord
      0000D1 FA               [ 4]  249 	mov	r2,a
      0000D2 AB 9C            [ 8]  250 	mov	r3,acc1
      0000D4 A3               [12]  251 	inc	dptr
      0000D5 12s00r00r00      [16]  252 	lcall	__gptrgetWord
      0000D9 FC               [ 4]  253 	mov	r4,a
      0000DA AD 9C            [ 8]  254 	mov	r5,acc1
      0000DC 8E 82            [ 8]  255 	mov	dpl,r6
      0000DE 8F 83            [ 8]  256 	mov	dph,r7
      0000E0 88 93            [ 8]  257 	mov	dpx,r0
      0000E2 89 F0            [ 8]  258 	mov	b,r1
      0000E4 12s00r00r00      [16]  259 	lcall	__gptrgetWord
      0000E8 FE               [ 4]  260 	mov	r6,a
      0000E9 AF 9C            [ 8]  261 	mov	r7,acc1
      0000EB A3               [12]  262 	inc	dptr
      0000EC 12s00r00r00      [16]  263 	lcall	__gptrgetWord
      0000F0 F8               [ 4]  264 	mov	r0,a
      0000F1 A9 9C            [ 8]  265 	mov	r1,acc1
      0000F3 C3               [ 4]  266 	clr	c
      0000F4 EA               [ 4]  267 	mov	a,r2
      0000F5 9E               [ 4]  268 	subb	a,r6
      0000F6 EB               [ 4]  269 	mov	a,r3
      0000F7 9F               [ 4]  270 	subb	a,r7
      0000F8 EC               [ 4]  271 	mov	a,r4
      0000F9 98               [ 4]  272 	subb	a,r0
      0000FA ED               [ 4]  273 	mov	a,r5
      0000FB 99               [ 4]  274 	subb	a,r1
      0000FC 50 06            [12]  275 	jnc  00106$
      0000FE                        276 00135$:
                                    277 ;	wcscmp.c:37: return(-1);
      0000FE 90 00 FF FF      [12]  278 	mov  dptr,#0xffff
      000102 80 14            [12]  279 	sjmp 00109$
      000104                        280 00106$:
                                    281 ;	wcscmp.c:38: if(*s1 > *s2)
      000104 C3               [ 4]  282 	clr	c
      000105 EE               [ 4]  283 	mov	a,r6
      000106 9A               [ 4]  284 	subb	a,r2
      000107 EF               [ 4]  285 	mov	a,r7
      000108 9B               [ 4]  286 	subb	a,r3
      000109 E8               [ 4]  287 	mov	a,r0
      00010A 9C               [ 4]  288 	subb	a,r4
      00010B E9               [ 4]  289 	mov	a,r1
      00010C 9D               [ 4]  290 	subb	a,r5
      00010D 50 05            [12]  291 	jnc  00108$
      00010F                        292 00136$:
                                    293 ;	wcscmp.c:39: return(1);
      00010F 90 00 00 01      [12]  294 	mov  dptr,#0x0001
                                    295 ;	wcscmp.c:40: return(0);
                                    296 ;	wcscmp.c:41: }
      000113 22               [16]  297 	ret
      000114                        298 00108$:
      000114 90 00 00 00      [12]  299 	mov     dptr,#0x0000
      000118                        300 00109$:
      000118 22               [16]  301 	ret
                                    302 	.area CSEG    (CODE)
                                    303 	.area CONST   (CODE)
                                    304 	.area XINIT   (CODE)
                                    305 	.area CABS    (ABS,CODE)
