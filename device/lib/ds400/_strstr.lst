                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strstr
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strstr_PARM_2
                                     35 	.globl _strstr
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; uninitialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 _strstr_PARM_2:
      000000                         78 	.ds 4
      000004                         79 _strstr_cp_65536_28:
      000004                         80 	.ds 4
      000008                         81 _strstr_sloc0_1_0:
      000008                         82 	.ds 4
      00000C                         83 _strstr_sloc1_1_0:
      00000C                         84 	.ds 4
      000010                         85 _strstr_sloc2_1_0:
      000010                         86 	.ds 1
      000011                         87 _strstr_sloc3_1_0:
      000011                         88 	.ds 1
                                     89 ;--------------------------------------------------------
                                     90 ; absolute external ram data
                                     91 ;--------------------------------------------------------
                                     92 	.area XABS    (ABS,XDATA)
                                     93 ;--------------------------------------------------------
                                     94 ; initialized external ram data
                                     95 ;--------------------------------------------------------
                                     96 	.area XISEG   (XDATA)
                                     97 ;--------------------------------------------------------
                                     98 ; global & static initialisations
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area GSINIT  (CODE)
                                    102 	.area GSFINAL (CODE)
                                    103 	.area GSINIT  (CODE)
                                    104 ;--------------------------------------------------------
                                    105 ; Home
                                    106 ;--------------------------------------------------------
                                    107 	.area HOME    (CODE)
                                    108 	.area HOME    (CODE)
                                    109 ;--------------------------------------------------------
                                    110 ; code
                                    111 ;--------------------------------------------------------
                                    112 	.area CSEG    (CODE)
                                    113 ;------------------------------------------------------------
                                    114 ;Allocation info for local variables in function 'strstr'
                                    115 ;------------------------------------------------------------
                                    116 ;str2                      Allocated with name '_strstr_PARM_2'
                                    117 ;str1                      Allocated to registers r6 r3 r4 r5 
                                    118 ;cp                        Allocated with name '_strstr_cp_65536_28'
                                    119 ;s1                        Allocated to registers 
                                    120 ;s2                        Allocated to registers 
                                    121 ;sloc0                     Allocated with name '_strstr_sloc0_1_0'
                                    122 ;sloc1                     Allocated with name '_strstr_sloc1_1_0'
                                    123 ;sloc2                     Allocated with name '_strstr_sloc2_1_0'
                                    124 ;sloc3                     Allocated with name '_strstr_sloc3_1_0'
                                    125 ;------------------------------------------------------------
                                    126 ;	_strstr.c:31: char *strstr ( const char *str1, const char *str2 )
                                    127 ;	-----------------------------------------
                                    128 ;	 function strstr
                                    129 ;	-----------------------------------------
      000000                        130 _strstr:
                           000002   131 	ar2 = 0x02
                           000003   132 	ar3 = 0x03
                           000004   133 	ar4 = 0x04
                           000005   134 	ar5 = 0x05
                           000006   135 	ar6 = 0x06
                           000007   136 	ar7 = 0x07
                           000000   137 	ar0 = 0x00
                           000001   138 	ar1 = 0x01
      000000 AE 82            [ 8]  139 	mov	r6,dpl
      000002 AB 83            [ 8]  140 	mov	r3,dph
      000004 AC 93            [ 8]  141 	mov	r4,dpx
      000006 AD F0            [ 8]  142 	mov	r5,b
                                    143 ;	_strstr.c:33: const char *cp = str1;
                                    144 ;	genAssign: resultIsFar = TRUE
      000008 90s00r00r04      [12]  145 	mov	dptr,#_strstr_cp_65536_28
      00000C EE               [ 4]  146 	mov	a,r6
      00000D F0               [ 8]  147 	movx	@dptr,a
      00000E A3               [12]  148 	inc	dptr
      00000F EB               [ 4]  149 	mov	a,r3
      000010 F0               [ 8]  150 	movx	@dptr,a
      000011 A3               [12]  151 	inc	dptr
      000012 EC               [ 4]  152 	mov	a,r4
      000013 F0               [ 8]  153 	movx	@dptr,a
      000014 A3               [12]  154 	inc	dptr
      000015 ED               [ 4]  155 	mov	a,r5
      000016 F0               [ 8]  156 	movx	@dptr,a
                                    157 ;	_strstr.c:37: if (!*str2)
      000017 90s00r00r00      [12]  158 	mov	dptr,#_strstr_PARM_2
                                    159 ;	genAssign: resultIsFar = TRUE
      00001B 75 86 21         [12]  160 	mov	dps,#0x21
      00001E 90s00r00r08      [12]  161 	mov	dptr,#_strstr_sloc0_1_0
      000022 E0               [ 8]  162 	movx	a,@dptr
      000023 F0               [ 8]  163 	movx	@dptr,a
      000024 A3               [12]  164 	inc	dptr
      000025 A3               [12]  165 	inc	dptr
      000026 E0               [ 8]  166 	movx	a,@dptr
      000027 F0               [ 8]  167 	movx	@dptr,a
      000028 A3               [12]  168 	inc	dptr
      000029 A3               [12]  169 	inc	dptr
      00002A E0               [ 8]  170 	movx	a,@dptr
      00002B F0               [ 8]  171 	movx	@dptr,a
      00002C A3               [12]  172 	inc	dptr
      00002D A3               [12]  173 	inc	dptr
      00002E E0               [ 8]  174 	movx	a,@dptr
      00002F F0               [ 8]  175 	movx	@dptr,a
      000030 75 86 00         [12]  176 	mov	dps,#0
      000033 90s00r00r08      [12]  177 	mov	dptr,#_strstr_sloc0_1_0
      000037 E0               [ 8]  178 	movx	a,@dptr
      000038 C0 E0            [ 8]  179 	push	acc
      00003A A3               [12]  180 	inc	dptr
      00003B E0               [ 8]  181 	movx	a,@dptr
      00003C C0 E0            [ 8]  182 	push	acc
      00003E A3               [12]  183 	inc	dptr
      00003F E0               [ 8]  184 	movx	a,@dptr
      000040 C0 E0            [ 8]  185 	push	acc
      000042 A3               [12]  186 	inc	dptr
      000043 E0               [ 8]  187 	movx	a,@dptr
      000044 F5 F0            [ 8]  188 	mov	b,a
      000046 D0 93            [ 8]  189 	pop	dpx
      000048 D0 83            [ 8]  190 	pop	dph
      00004A D0 82            [ 8]  191 	pop	dpl
      00004C 12s00r00r00      [16]  192 	lcall	__gptrget
      000050 FA               [ 4]  193 	mov  r2,a
      000051 70 0C            [12]  194 	jnz  00122$
      000053                        195 00148$:
                                    196 ;	_strstr.c:38: return ((char*)str1);
      000053 8E 82            [ 8]  197 	mov	dpl,r6
      000055 8B 83            [ 8]  198 	mov	dph,r3
      000057 8C 93            [ 8]  199 	mov	dpx,r4
      000059 8D F0            [ 8]  200 	mov	b,r5
      00005B 02s00r01r82      [16]  201 	ljmp	00113$
                                    202 ;	_strstr.c:40: while (*cp)
      00005F                        203 00122$:
                                    204 ;	genAssign: resultIsFar = FALSE
      00005F 8E 02            [ 8]  205 	mov	ar2,r6
      000061                        206 00110$:
      000061 8A 82            [ 8]  207 	mov	dpl,r2
      000063 8B 83            [ 8]  208 	mov	dph,r3
      000065 8C 93            [ 8]  209 	mov	dpx,r4
      000067 8D F0            [ 8]  210 	mov	b,r5
      000069 12s00r00r00      [16]  211 	lcall	__gptrget
      00006D FE               [ 4]  212 	mov  r6,a
      00006E 70 04            [12]  213 	jnz	00149$
      000070 02s00r01r7B      [16]  214 	ljmp	00112$
      000074                        215 00149$:
                                    216 ;	_strstr.c:43: s2 = str2;
      000074 90s00r00r08      [12]  217 	mov	dptr,#_strstr_sloc0_1_0
                                    218 ;	genAssign: resultIsFar = FALSE
      000078 E0               [ 8]  219 	movx	a,@dptr
      000079 FE               [ 4]  220 	mov	r6,a
      00007A A3               [12]  221 	inc	dptr
      00007B E0               [ 8]  222 	movx	a,@dptr
      00007C FF               [ 4]  223 	mov	r7,a
      00007D A3               [12]  224 	inc	dptr
      00007E E0               [ 8]  225 	movx	a,@dptr
      00007F F8               [ 4]  226 	mov	r0,a
      000080 A3               [12]  227 	inc	dptr
      000081 E0               [ 8]  228 	movx	a,@dptr
      000082 F9               [ 4]  229 	mov	r1,a
                                    230 ;	_strstr.c:45: while (*s1 && *s2 && !(*s1-*s2))
                                    231 ;	genAssign: resultIsFar = TRUE
      000083 90s00r00r0C      [12]  232 	mov	dptr,#_strstr_sloc1_1_0
      000087 EA               [ 4]  233 	mov	a,r2
      000088 F0               [ 8]  234 	movx	@dptr,a
      000089 A3               [12]  235 	inc	dptr
      00008A EB               [ 4]  236 	mov	a,r3
      00008B F0               [ 8]  237 	movx	@dptr,a
      00008C A3               [12]  238 	inc	dptr
      00008D EC               [ 4]  239 	mov	a,r4
      00008E F0               [ 8]  240 	movx	@dptr,a
      00008F A3               [12]  241 	inc	dptr
      000090 ED               [ 4]  242 	mov	a,r5
      000091 F0               [ 8]  243 	movx	@dptr,a
      000092                        244 00105$:
      000092 90s00r00r0C      [12]  245 	mov	dptr,#_strstr_sloc1_1_0
      000096 E0               [ 8]  246 	movx	a,@dptr
      000097 C0 E0            [ 8]  247 	push	acc
      000099 A3               [12]  248 	inc	dptr
      00009A E0               [ 8]  249 	movx	a,@dptr
      00009B C0 E0            [ 8]  250 	push	acc
      00009D A3               [12]  251 	inc	dptr
      00009E E0               [ 8]  252 	movx	a,@dptr
      00009F C0 E0            [ 8]  253 	push	acc
      0000A1 A3               [12]  254 	inc	dptr
      0000A2 E0               [ 8]  255 	movx	a,@dptr
      0000A3 F5 F0            [ 8]  256 	mov	b,a
      0000A5 D0 93            [ 8]  257 	pop	dpx
      0000A7 D0 83            [ 8]  258 	pop	dph
      0000A9 D0 82            [ 8]  259 	pop	dpl
      0000AB 75 86 01         [12]  260 	mov	dps, #1
      0000AE 90s00r00r10      [12]  261 	mov	dptr, #_strstr_sloc2_1_0
      0000B2 15 86            [ 8]  262 	dec	dps
      0000B4 12s00r00r00      [16]  263 	lcall	__gptrget
      0000B8 75 86 01         [12]  264 	mov	dps,#1
      0000BB F0               [ 8]  265 	movx	@dptr,a
      0000BC 75 86 00         [12]  266 	mov	dps,#0
      0000BF 90s00r00r10      [12]  267 	mov	dptr,#_strstr_sloc2_1_0
      0000C3 E0               [ 8]  268 	movx	a,@dptr
      0000C4 60 6F            [12]  269 	jz  00107$
      0000C6                        270 00150$:
      0000C6 8E 82            [ 8]  271 	mov	dpl,r6
      0000C8 8F 83            [ 8]  272 	mov	dph,r7
      0000CA 88 93            [ 8]  273 	mov	dpx,r0
      0000CC 89 F0            [ 8]  274 	mov	b,r1
      0000CE 75 86 01         [12]  275 	mov	dps, #1
      0000D1 90s00r00r11      [12]  276 	mov	dptr, #_strstr_sloc3_1_0
      0000D5 15 86            [ 8]  277 	dec	dps
      0000D7 12s00r00r00      [16]  278 	lcall	__gptrget
      0000DB 75 86 01         [12]  279 	mov	dps,#1
      0000DE F0               [ 8]  280 	movx	@dptr,a
      0000DF 75 86 00         [12]  281 	mov	dps,#0
      0000E2 90s00r00r11      [12]  282 	mov	dptr,#_strstr_sloc3_1_0
      0000E6 E0               [ 8]  283 	movx	a,@dptr
      0000E7 60 4C            [12]  284 	jz  00107$
      0000E9                        285 00151$:
      0000E9 C0 02            [ 8]  286 	push	ar2
      0000EB C0 03            [ 8]  287 	push	ar3
      0000ED C0 04            [ 8]  288 	push	ar4
      0000EF C0 05            [ 8]  289 	push	ar5
      0000F1 90s00r00r10      [12]  290 	mov	dptr,#_strstr_sloc2_1_0
      0000F5 E0               [ 8]  291 	movx	a,@dptr
      0000F6 FA               [ 4]  292 	mov	r2,a
      0000F7 7B 00            [ 8]  293 	mov	r3,#0x00
      0000F9 90s00r00r11      [12]  294 	mov	dptr,#_strstr_sloc3_1_0
      0000FD E0               [ 8]  295 	movx	a,@dptr
      0000FE FC               [ 4]  296 	mov	r4,a
      0000FF 7D 00            [ 8]  297 	mov	r5,#0x00
      000101 C3               [ 4]  298 	clr	c
      000102 EA               [ 4]  299 	mov	a,r2
      000103 9C               [ 4]  300 	subb	a,r4
      000104 FA               [ 4]  301 	mov	r2,a
      000105 EB               [ 4]  302 	mov	a,r3
      000106 9D               [ 4]  303 	subb	a,r5
      000107 FB               [ 4]  304 	mov  r3,a
      000108 4A               [ 4]  305 	orl  a,r2
      000109 D0 05            [ 8]  306 	pop	ar5
      00010B D0 04            [ 8]  307 	pop	ar4
      00010D D0 03            [ 8]  308 	pop	ar3
      00010F D0 02            [ 8]  309 	pop	ar2
      000111 70 22            [12]  310 	jnz  00107$
      000113                        311 00152$:
                                    312 ;	_strstr.c:46: s1++, s2++;
      000113 90s00r00r0C      [12]  313 	mov	dptr,#_strstr_sloc1_1_0
      000117 E0               [ 8]  314 	movx	a,@dptr
      000118 24 01            [ 8]  315 	add	a,#0x01
      00011A F0               [ 8]  316 	movx	@dptr,a
      00011B A3               [12]  317 	inc	dptr
      00011C E0               [ 8]  318 	movx	a,@dptr
      00011D 34 00            [ 8]  319 	addc	a,#0x00
      00011F F0               [ 8]  320 	movx	@dptr,a
      000120 A3               [12]  321 	inc	dptr
      000121 E0               [ 8]  322 	movx	a,@dptr
      000122 34 00            [ 8]  323 	addc	a,#0x00
      000124 F0               [ 8]  324 	movx	@dptr,a
      000125 A3               [12]  325 	inc	dptr
      000126 E0               [ 8]  326 	movx	a,@dptr
      000127 F0               [ 8]  327 	movx	@dptr,a
      000128 0E               [ 4]  328 	inc	r6
      000129 BE 00 05         [16]  329 	cjne	r6,#0x00,00153$
      00012C 0F               [ 4]  330 	inc	r7
      00012D BF 00 01         [16]  331 	cjne	r7,#0x00,00153$
      000130 08               [ 4]  332 	inc	r0
      000131                        333 00153$:
      000131 02s00r00r92      [16]  334 	ljmp	00105$
      000135                        335 00107$:
                                    336 ;	_strstr.c:48: if (!*s2)
      000135 8E 82            [ 8]  337 	mov	dpl,r6
      000137 8F 83            [ 8]  338 	mov	dph,r7
      000139 88 93            [ 8]  339 	mov	dpx,r0
      00013B 89 F0            [ 8]  340 	mov	b,r1
      00013D 12s00r00r00      [16]  341 	lcall	__gptrget
      000141 FE               [ 4]  342 	mov  r6,a
      000142 70 1B            [12]  343 	jnz  00109$
      000144                        344 00154$:
                                    345 ;	_strstr.c:49: return ((char*)cp);
      000144 75 86 01         [12]  346 	mov     dps, #1
      000147 90s00r00r04      [12]  347 	mov     dptr, #_strstr_cp_65536_28
      00014B E0               [ 8]  348 	movx	a,@dptr
      00014C F5 82            [ 8]  349 	mov	dpl,a
      00014E A3               [12]  350 	inc	dptr
      00014F E0               [ 8]  351 	movx	a,@dptr
      000150 F5 83            [ 8]  352 	mov	dph,a
      000152 A3               [12]  353 	inc	dptr
      000153 E0               [ 8]  354 	movx	a,@dptr
      000154 F5 93            [ 8]  355 	mov	dpx,a
      000156 A3               [12]  356 	inc	dptr
      000157 E0               [ 8]  357 	movx	a,@dptr
      000158 F5 F0            [ 8]  358 	mov	b,a
      00015A 75 86 00         [12]  359 	mov	dps,#0
      00015D 80 23            [12]  360 	sjmp 00113$
      00015F                        361 00109$:
                                    362 ;	_strstr.c:51: cp++;
      00015F 0A               [ 4]  363 	inc	r2
      000160 BA 00 05         [16]  364 	cjne	r2,#0x00,00155$
      000163 0B               [ 4]  365 	inc	r3
      000164 BB 00 01         [16]  366 	cjne	r3,#0x00,00155$
      000167 0C               [ 4]  367 	inc	r4
      000168                        368 00155$:
                                    369 ;	genAssign: resultIsFar = TRUE
      000168 90s00r00r04      [12]  370 	mov	dptr,#_strstr_cp_65536_28
      00016C EA               [ 4]  371 	mov	a,r2
      00016D F0               [ 8]  372 	movx	@dptr,a
      00016E A3               [12]  373 	inc	dptr
      00016F EB               [ 4]  374 	mov	a,r3
      000170 F0               [ 8]  375 	movx	@dptr,a
      000171 A3               [12]  376 	inc	dptr
      000172 EC               [ 4]  377 	mov	a,r4
      000173 F0               [ 8]  378 	movx	@dptr,a
      000174 A3               [12]  379 	inc	dptr
      000175 ED               [ 4]  380 	mov	a,r5
      000176 F0               [ 8]  381 	movx	@dptr,a
      000177 02s00r00r61      [16]  382 	ljmp	00110$
      00017B                        383 00112$:
                                    384 ;	_strstr.c:54: return (NULL) ;
      00017B 90 00 00 00      [12]  385 	mov  dptr,#0x0000
      00017F 75 F0 00         [12]  386 	mov	b,#0x00
      000182                        387 00113$:
                                    388 ;	_strstr.c:55: }
      000182 22               [16]  389 	ret
                                    390 	.area CSEG    (CODE)
                                    391 	.area CONST   (CODE)
                                    392 	.area XINIT   (CODE)
                                    393 	.area CABS    (ABS,CODE)
