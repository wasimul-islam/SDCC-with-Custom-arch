                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strcmp
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strcmp_PARM_2
                                     35 	.globl _strcmp
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 	.area	OSEG    (OVR,DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 _strcmp_PARM_2:
      000000                         79 	.ds 4
      000004                         80 _strcmp_sloc0_1_0:
      000004                         81 	.ds 4
      000008                         82 _strcmp_sloc1_1_0:
      000008                         83 	.ds 2
                                     84 ;--------------------------------------------------------
                                     85 ; absolute external ram data
                                     86 ;--------------------------------------------------------
                                     87 	.area XABS    (ABS,XDATA)
                                     88 ;--------------------------------------------------------
                                     89 ; initialized external ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area XISEG   (XDATA)
                                     92 ;--------------------------------------------------------
                                     93 ; global & static initialisations
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 	.area GSFINAL (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; Home
                                    101 ;--------------------------------------------------------
                                    102 	.area HOME    (CODE)
                                    103 	.area HOME    (CODE)
                                    104 ;--------------------------------------------------------
                                    105 ; code
                                    106 ;--------------------------------------------------------
                                    107 	.area CSEG    (CODE)
                                    108 ;------------------------------------------------------------
                                    109 ;Allocation info for local variables in function 'strcmp'
                                    110 ;------------------------------------------------------------
                                    111 ;adst                      Allocated with name '_strcmp_PARM_2'
                                    112 ;asrc                      Allocated to registers 
                                    113 ;sloc0                     Allocated with name '_strcmp_sloc0_1_0'
                                    114 ;sloc1                     Allocated with name '_strcmp_sloc1_1_0'
                                    115 ;ret                       Allocated with name '_strcmp_sloc1_1_0'
                                    116 ;------------------------------------------------------------
                                    117 ;	_strcmp.c:34: int strcmp ( const char * asrc, const char * adst )
                                    118 ;	-----------------------------------------
                                    119 ;	 function strcmp
                                    120 ;	-----------------------------------------
      000000                        121 _strcmp:
                           000002   122 	ar2 = 0x02
                           000003   123 	ar3 = 0x03
                           000004   124 	ar4 = 0x04
                           000005   125 	ar5 = 0x05
                           000006   126 	ar6 = 0x06
                           000007   127 	ar7 = 0x07
                           000000   128 	ar0 = 0x00
                           000001   129 	ar1 = 0x01
      000000 AA 82            [ 8]  130 	mov	r2,dpl
      000002 AB 83            [ 8]  131 	mov	r3,dph
      000004 AC 93            [ 8]  132 	mov	r4,dpx
      000006 AD F0            [ 8]  133 	mov	r5,b
                                    134 ;	_strcmp.c:51: while( ! (ret = *(unsigned char *)asrc - *(unsigned char *)adst) && *adst)
      000008 90s00r00r00      [12]  135 	mov	dptr,#_strcmp_PARM_2
                                    136 ;	genAssign: resultIsFar = TRUE
      00000C 75 86 21         [12]  137 	mov	dps,#0x21
      00000F 90s00r00r04      [12]  138 	mov	dptr,#_strcmp_sloc0_1_0
      000013 E0               [ 8]  139 	movx	a,@dptr
      000014 F0               [ 8]  140 	movx	@dptr,a
      000015 A3               [12]  141 	inc	dptr
      000016 A3               [12]  142 	inc	dptr
      000017 E0               [ 8]  143 	movx	a,@dptr
      000018 F0               [ 8]  144 	movx	@dptr,a
      000019 A3               [12]  145 	inc	dptr
      00001A A3               [12]  146 	inc	dptr
      00001B E0               [ 8]  147 	movx	a,@dptr
      00001C F0               [ 8]  148 	movx	@dptr,a
      00001D A3               [12]  149 	inc	dptr
      00001E A3               [12]  150 	inc	dptr
      00001F E0               [ 8]  151 	movx	a,@dptr
      000020 F0               [ 8]  152 	movx	@dptr,a
      000021 75 86 00         [12]  153 	mov	dps,#0
      000024                        154 00102$:
      000024 8A 82            [ 8]  155 	mov	dpl,r2
      000026 8B 83            [ 8]  156 	mov	dph,r3
      000028 8C 93            [ 8]  157 	mov	dpx,r4
      00002A 8D F0            [ 8]  158 	mov	b,r5
      00002C 12s00r00r00      [16]  159 	lcall	__gptrget
      000030 FE               [ 4]  160 	mov	r6,a
      000031 7F 00            [ 8]  161 	mov	r7,#0x00
      000033 90s00r00r04      [12]  162 	mov	dptr,#_strcmp_sloc0_1_0
      000037 E0               [ 8]  163 	movx	a,@dptr
      000038 C0 E0            [ 8]  164 	push	acc
      00003A A3               [12]  165 	inc	dptr
      00003B E0               [ 8]  166 	movx	a,@dptr
      00003C C0 E0            [ 8]  167 	push	acc
      00003E A3               [12]  168 	inc	dptr
      00003F E0               [ 8]  169 	movx	a,@dptr
      000040 C0 E0            [ 8]  170 	push	acc
      000042 A3               [12]  171 	inc	dptr
      000043 E0               [ 8]  172 	movx	a,@dptr
      000044 F5 F0            [ 8]  173 	mov	b,a
      000046 D0 93            [ 8]  174 	pop	dpx
      000048 D0 83            [ 8]  175 	pop	dph
      00004A D0 82            [ 8]  176 	pop	dpl
      00004C 12s00r00r00      [16]  177 	lcall	__gptrget
      000050 F8               [ 4]  178 	mov	r0,a
      000051 C0 02            [ 8]  179 	push	ar2
      000053 C0 03            [ 8]  180 	push	ar3
      000055 C0 04            [ 8]  181 	push	ar4
      000057 C0 05            [ 8]  182 	push	ar5
      000059 88 01            [ 8]  183 	mov	ar1,r0
      00005B 7A 00            [ 8]  184 	mov	r2,#0x00
      00005D C3               [ 4]  185 	clr	c
      00005E EE               [ 4]  186 	mov	a,r6
      00005F 99               [ 4]  187 	subb	a,r1
      000060 FE               [ 4]  188 	mov	r6,a
      000061 EF               [ 4]  189 	mov	a,r7
      000062 9A               [ 4]  190 	subb	a,r2
      000063 FF               [ 4]  191 	mov	r7,a
                                    192 ;	genAssign: resultIsFar = TRUE
      000064 90s00r00r08      [12]  193 	mov	dptr,#_strcmp_sloc1_1_0
      000068 EE               [ 4]  194 	mov	a,r6
      000069 F0               [ 8]  195 	movx	@dptr,a
      00006A A3               [12]  196 	inc	dptr
      00006B EF               [ 4]  197 	mov	a,r7
      00006C F0               [ 8]  198 	movx	@dptr,a
      00006D D0 05            [ 8]  199 	pop	ar5
      00006F D0 04            [ 8]  200 	pop	ar4
      000071 D0 03            [ 8]  201 	pop	ar3
      000073 D0 02            [ 8]  202 	pop	ar2
      000075 EE               [ 4]  203 	mov	a,r6
      000076 4F               [ 4]  204 	orl	a,r7
      000077 70 23            [12]  205 	jnz  00104$
      000079                        206 00120$:
      000079 E8               [ 4]  207 	mov	a,r0
      00007A 60 20            [12]  208 	jz  00104$
      00007C                        209 00121$:
                                    210 ;	_strcmp.c:52: ++asrc, ++adst;
      00007C 0A               [ 4]  211 	inc	r2
      00007D BA 00 05         [16]  212 	cjne	r2,#0x00,00122$
      000080 0B               [ 4]  213 	inc	r3
      000081 BB 00 01         [16]  214 	cjne	r3,#0x00,00122$
      000084 0C               [ 4]  215 	inc	r4
      000085                        216 00122$:
      000085 90s00r00r04      [12]  217 	mov	dptr,#_strcmp_sloc0_1_0
      000089 E0               [ 8]  218 	movx	a,@dptr
      00008A 24 01            [ 8]  219 	add	a,#0x01
      00008C F0               [ 8]  220 	movx	@dptr,a
      00008D A3               [12]  221 	inc	dptr
      00008E E0               [ 8]  222 	movx	a,@dptr
      00008F 34 00            [ 8]  223 	addc	a,#0x00
      000091 F0               [ 8]  224 	movx	@dptr,a
      000092 A3               [12]  225 	inc	dptr
      000093 E0               [ 8]  226 	movx	a,@dptr
      000094 34 00            [ 8]  227 	addc	a,#0x00
      000096 F0               [ 8]  228 	movx	@dptr,a
      000097 A3               [12]  229 	inc	dptr
      000098 E0               [ 8]  230 	movx	a,@dptr
      000099 F0               [ 8]  231 	movx	@dptr,a
      00009A 80 88            [12]  232 	sjmp 00102$
      00009C                        233 00104$:
                                    234 ;	_strcmp.c:54: return( ret );
      00009C 75 86 01         [12]  235 	mov     dps, #1
      00009F 90s00r00r08      [12]  236 	mov     dptr, #_strcmp_sloc1_1_0
      0000A3 E0               [ 8]  237 	movx	a,@dptr
      0000A4 F5 82            [ 8]  238 	mov	dpl,a
      0000A6 A3               [12]  239 	inc	dptr
      0000A7 E0               [ 8]  240 	movx	a,@dptr
      0000A8 F5 83            [ 8]  241 	mov	dph,a
      0000AA 75 86 00         [12]  242 	mov	dps,#0
      0000AD                        243 00105$:
                                    244 ;	_strcmp.c:56: }
      0000AD 22               [16]  245 	ret
                                    246 	.area CSEG    (CODE)
                                    247 	.area CONST   (CODE)
                                    248 	.area XINIT   (CODE)
                                    249 	.area CABS    (ABS,CODE)
