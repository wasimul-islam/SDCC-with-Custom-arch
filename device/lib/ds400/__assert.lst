                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __assert
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl ___assert
                                     35 	.globl _printf
                                     36 	.globl ___assert_PARM_4
                                     37 	.globl ___assert_PARM_3
                                     38 	.globl ___assert_PARM_2
                                     39 ;--------------------------------------------------------
                                     40 ; special function registers
                                     41 ;--------------------------------------------------------
                           000080    42 _P4	=	0x0080
                           000081    43 _SP	=	0x0081
                           000082    44 _DPL	=	0x0082
                           000083    45 _DPH	=	0x0083
                           000084    46 _DPL1	=	0x0084
                           000085    47 _DPH1	=	0x0085
                           000086    48 _DPS	=	0x0086
                           000087    49 _PCON	=	0x0087
                           000088    50 _TCON	=	0x0088
                           000089    51 _TMOD	=	0x0089
                           00008A    52 _TL0	=	0x008a
                           00008B    53 _TL1	=	0x008b
                           00008C    54 _TH0	=	0x008c
                           00008D    55 _TH1	=	0x008d
                           00008E    56 _CKCON	=	0x008e
                           000090    57 _P1	=	0x0090
                           000091    58 _EXIF	=	0x0091
                           000092    59 _P4CNT	=	0x0092
                           000093    60 _DPX	=	0x0093
                           000095    61 _DPX1	=	0x0095
                           000098    62 _SCON0	=	0x0098
                           000099    63 _SBUF0	=	0x0099
                           00009B    64 _ESP	=	0x009b
                           00009C    65 _AP	=	0x009c
                           00009D    66 _ACON	=	0x009d
                           0000A0    67 _P2	=	0x00a0
                           0000A1    68 _P5	=	0x00a1
                           0000A2    69 _P5CNT	=	0x00a2
                           0000A8    70 _IE	=	0x00a8
                           0000B0    71 _P3	=	0x00b0
                           0000B8    72 _IP	=	0x00b8
                           0000C0    73 _SCON1	=	0x00c0
                           0000C1    74 _SBUF1	=	0x00c1
                           0000C4    75 _PMR	=	0x00c4
                           0000C6    76 _MCON	=	0x00c6
                           0000C7    77 _TA	=	0x00c7
                           0000C8    78 _T2CON	=	0x00c8
                           0000C9    79 _T2MOD	=	0x00c9
                           0000CA    80 _RCAP2L	=	0x00ca
                           0000CA    81 _RTL2	=	0x00ca
                           0000CB    82 _RCAP2H	=	0x00cb
                           0000CB    83 _RTH2	=	0x00cb
                           0000CC    84 _TL2	=	0x00cc
                           0000CD    85 _TH2	=	0x00cd
                           0000D0    86 _PSW	=	0x00d0
                           0000D1    87 _MCNT0	=	0x00d1
                           0000D2    88 _MCNT1	=	0x00d2
                           0000D3    89 _MA	=	0x00d3
                           0000D4    90 _MB	=	0x00d4
                           0000D5    91 _MC	=	0x00d5
                           0000D8    92 _WDCON	=	0x00d8
                           0000E0    93 _ACC	=	0x00e0
                           0000E8    94 _EIE	=	0x00e8
                           0000EA    95 _MXAX	=	0x00ea
                           0000F0    96 _B	=	0x00f0
                           0000F8    97 _EIP	=	0x00f8
                           008C8A    98 _TMR0	=	0x8c8a
                           008D8B    99 _TMR1	=	0x8d8b
                           00CDCC   100 _TMR2	=	0xcdcc
                           00CBCA   101 _RCAP2	=	0xcbca
                                    102 ;--------------------------------------------------------
                                    103 ; special function bits
                                    104 ;--------------------------------------------------------
                           000088   105 _IT0	=	0x0088
                           000089   106 _IE0	=	0x0089
                           00008A   107 _IT1	=	0x008a
                           00008B   108 _IE1	=	0x008b
                           00008C   109 _TR0	=	0x008c
                           00008D   110 _TF0	=	0x008d
                           00008E   111 _TR1	=	0x008e
                           00008F   112 _TF1	=	0x008f
                           000090   113 _T2	=	0x0090
                           000091   114 _T2EX	=	0x0091
                           000092   115 _RXD1	=	0x0092
                           000093   116 _TXD1	=	0x0093
                           000094   117 _INT2	=	0x0094
                           000095   118 _INT3	=	0x0095
                           000096   119 _INT4	=	0x0096
                           000097   120 _INT5	=	0x0097
                           000098   121 _RI_0	=	0x0098
                           000099   122 _TI_0	=	0x0099
                           00009A   123 _RB8_0	=	0x009a
                           00009B   124 _TB8_0	=	0x009b
                           00009C   125 _REN_0	=	0x009c
                           00009D   126 _SM2_0	=	0x009d
                           00009E   127 _SM1_0	=	0x009e
                           00009F   128 _SM0_0	=	0x009f
                           00009F   129 _FE_0	=	0x009f
                           0000A8   130 _EX0	=	0x00a8
                           0000A9   131 _ET0	=	0x00a9
                           0000AA   132 _EX1	=	0x00aa
                           0000AB   133 _ET1	=	0x00ab
                           0000AC   134 _ES0	=	0x00ac
                           0000AD   135 _ET2	=	0x00ad
                           0000AE   136 _ES1	=	0x00ae
                           0000AF   137 _EA	=	0x00af
                           0000B0   138 _RXD0	=	0x00b0
                           0000B1   139 _TXD0	=	0x00b1
                           0000B2   140 _INT0	=	0x00b2
                           0000B3   141 _INT1	=	0x00b3
                           0000B4   142 _T0	=	0x00b4
                           0000B5   143 _T1	=	0x00b5
                           0000B6   144 _WR	=	0x00b6
                           0000B7   145 _RD	=	0x00b7
                           0000B8   146 _PX0	=	0x00b8
                           0000B9   147 _PT0	=	0x00b9
                           0000BA   148 _PX1	=	0x00ba
                           0000BB   149 _PT1	=	0x00bb
                           0000BC   150 _PS0	=	0x00bc
                           0000BD   151 _PT2	=	0x00bd
                           0000BE   152 _PS1	=	0x00be
                           0000C0   153 _RI_1	=	0x00c0
                           0000C1   154 _TI_1	=	0x00c1
                           0000C2   155 _RB8_1	=	0x00c2
                           0000C3   156 _TB8_1	=	0x00c3
                           0000C4   157 _REN_1	=	0x00c4
                           0000C5   158 _SM2_1	=	0x00c5
                           0000C6   159 _SM1_1	=	0x00c6
                           0000C7   160 _SM0_1	=	0x00c7
                           0000C7   161 _FE_1	=	0x00c7
                           0000C8   162 _CP_RL	=	0x00c8
                           0000C9   163 _C_T	=	0x00c9
                           0000CA   164 _TR2	=	0x00ca
                           0000CB   165 _EXEN2	=	0x00cb
                           0000CC   166 _TCLK	=	0x00cc
                           0000CD   167 _RCLK	=	0x00cd
                           0000CE   168 _EXF2	=	0x00ce
                           0000CF   169 _TF2	=	0x00cf
                           0000D0   170 _P	=	0x00d0
                           0000D1   171 _F1	=	0x00d1
                           0000D2   172 _OV	=	0x00d2
                           0000D3   173 _RS0	=	0x00d3
                           0000D4   174 _RS1	=	0x00d4
                           0000D5   175 _F0	=	0x00d5
                           0000D6   176 _AC	=	0x00d6
                           0000D7   177 _CY	=	0x00d7
                           0000D8   178 _RWT	=	0x00d8
                           0000D9   179 _EWT	=	0x00d9
                           0000DA   180 _WDRF	=	0x00da
                           0000DB   181 _WDIF	=	0x00db
                           0000DC   182 _PFI	=	0x00dc
                           0000DD   183 _EPFI	=	0x00dd
                           0000DE   184 _POR	=	0x00de
                           0000DF   185 _SMOD_1	=	0x00df
                           0000E8   186 _EX2	=	0x00e8
                           0000E9   187 _EX3	=	0x00e9
                           0000EA   188 _EX4	=	0x00ea
                           0000EB   189 _EX5	=	0x00eb
                           0000EC   190 _EWDI	=	0x00ec
                           0000ED   191 _C1IE	=	0x00ed
                           0000EE   192 _C0IE	=	0x00ee
                           0000EF   193 _CANBIE	=	0x00ef
                           0000F8   194 _PX2	=	0x00f8
                           0000F9   195 _PX3	=	0x00f9
                           0000FA   196 _PX4	=	0x00fa
                           0000FB   197 _PX5	=	0x00fb
                           0000FC   198 _PWDI	=	0x00fc
                           0000FD   199 _C1IP	=	0x00fd
                           0000FE   200 _C0IP	=	0x00fe
                           0000FF   201 _CANBIP	=	0x00ff
                                    202 ;--------------------------------------------------------
                                    203 ; overlayable register banks
                                    204 ;--------------------------------------------------------
                                    205 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        206 	.ds 8
                                    207 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                        208 	.ds 8
                                    209 ;--------------------------------------------------------
                                    210 ; internal ram data
                                    211 ;--------------------------------------------------------
                                    212 	.area DSEG    (DATA)
                                    213 ;--------------------------------------------------------
                                    214 ; overlayable items in internal ram
                                    215 ;--------------------------------------------------------
                                    216 ;--------------------------------------------------------
                                    217 ; indirectly addressable internal ram data
                                    218 ;--------------------------------------------------------
                                    219 	.area ISEG    (DATA)
                                    220 ;--------------------------------------------------------
                                    221 ; absolute internal ram data
                                    222 ;--------------------------------------------------------
                                    223 	.area IABS    (ABS,DATA)
                                    224 	.area IABS    (ABS,DATA)
                                    225 ;--------------------------------------------------------
                                    226 ; bit data
                                    227 ;--------------------------------------------------------
                                    228 	.area BSEG    (BIT)
                                    229 ;--------------------------------------------------------
                                    230 ; paged external ram data
                                    231 ;--------------------------------------------------------
                                    232 	.area PSEG    (PAG,XDATA)
                                    233 ;--------------------------------------------------------
                                    234 ; uninitialized external ram data
                                    235 ;--------------------------------------------------------
                                    236 	.area XSEG    (XDATA)
      000000                        237 ___assert_PARM_2:
      000000                        238 	.ds 4
      000004                        239 ___assert_PARM_3:
      000004                        240 	.ds 4
      000008                        241 ___assert_PARM_4:
      000008                        242 	.ds 2
                                    243 ;--------------------------------------------------------
                                    244 ; absolute external ram data
                                    245 ;--------------------------------------------------------
                                    246 	.area XABS    (ABS,XDATA)
                                    247 ;--------------------------------------------------------
                                    248 ; initialized external ram data
                                    249 ;--------------------------------------------------------
                                    250 	.area XISEG   (XDATA)
                                    251 ;--------------------------------------------------------
                                    252 ; global & static initialisations
                                    253 ;--------------------------------------------------------
                                    254 	.area HOME    (CODE)
                                    255 	.area GSINIT  (CODE)
                                    256 	.area GSFINAL (CODE)
                                    257 	.area GSINIT  (CODE)
                                    258 ;--------------------------------------------------------
                                    259 ; Home
                                    260 ;--------------------------------------------------------
                                    261 	.area HOME    (CODE)
                                    262 	.area HOME    (CODE)
                                    263 ;--------------------------------------------------------
                                    264 ; code
                                    265 ;--------------------------------------------------------
                                    266 	.area CSEG    (CODE)
                                    267 ;------------------------------------------------------------
                                    268 ;Allocation info for local variables in function '__assert'
                                    269 ;------------------------------------------------------------
                                    270 ;functionname              Allocated with name '___assert_PARM_2'
                                    271 ;filename                  Allocated with name '___assert_PARM_3'
                                    272 ;linenumber                Allocated with name '___assert_PARM_4'
                                    273 ;expression                Allocated to registers r2 r3 r4 r5 
                                    274 ;------------------------------------------------------------
                                    275 ;	__assert.c:32: void __assert(const char *expression, const char *functionname, const char *filename, unsigned int linenumber)
                                    276 ;	-----------------------------------------
                                    277 ;	 function __assert
                                    278 ;	-----------------------------------------
      000000                        279 ___assert:
                           000002   280 	ar2 = 0x02
                           000003   281 	ar3 = 0x03
                           000004   282 	ar4 = 0x04
                           000005   283 	ar5 = 0x05
                           000006   284 	ar6 = 0x06
                           000007   285 	ar7 = 0x07
                           000000   286 	ar0 = 0x00
                           000001   287 	ar1 = 0x01
      000000 AA 82            [ 8]  288 	mov	r2,dpl
      000002 AB 83            [ 8]  289 	mov	r3,dph
      000004 AC 93            [ 8]  290 	mov	r4,dpx
      000006 AD F0            [ 8]  291 	mov	r5,b
                                    292 ;	__assert.c:34: printf("Assert(%s) failed in function %s at line %u in file %s.\n",
      000008 90s00r00r04      [12]  293 	mov	dptr,#___assert_PARM_3
      00000C E0               [ 8]  294 	movx	a,@dptr
      00000D C0 E0            [ 8]  295 	push	acc
      00000F A3               [12]  296 	inc	dptr
      000010 E0               [ 8]  297 	movx	a,@dptr
      000011 C0 E0            [ 8]  298 	push	acc
      000013 A3               [12]  299 	inc	dptr
      000014 E0               [ 8]  300 	movx	a,@dptr
      000015 C0 E0            [ 8]  301 	push	acc
      000017 A3               [12]  302 	inc	dptr
      000018 E0               [ 8]  303 	movx	a,@dptr
      000019 C0 E0            [ 8]  304 	push	acc
      00001B 90s00r00r08      [12]  305 	mov	dptr,#___assert_PARM_4
      00001F E0               [ 8]  306 	movx	a,@dptr
      000020 C0 E0            [ 8]  307 	push	acc
      000022 A3               [12]  308 	inc	dptr
      000023 E0               [ 8]  309 	movx	a,@dptr
      000024 C0 E0            [ 8]  310 	push	acc
      000026 90s00r00r00      [12]  311 	mov	dptr,#___assert_PARM_2
      00002A E0               [ 8]  312 	movx	a,@dptr
      00002B C0 E0            [ 8]  313 	push	acc
      00002D A3               [12]  314 	inc	dptr
      00002E E0               [ 8]  315 	movx	a,@dptr
      00002F C0 E0            [ 8]  316 	push	acc
      000031 A3               [12]  317 	inc	dptr
      000032 E0               [ 8]  318 	movx	a,@dptr
      000033 C0 E0            [ 8]  319 	push	acc
      000035 A3               [12]  320 	inc	dptr
      000036 E0               [ 8]  321 	movx	a,@dptr
      000037 C0 E0            [ 8]  322 	push	acc
      000039 C0 02            [ 8]  323 	push	ar2
      00003B C0 03            [ 8]  324 	push	ar3
      00003D C0 04            [ 8]  325 	push	ar4
      00003F C0 05            [ 8]  326 	push	ar5
      000041 74r00            [ 8]  327 	mov	a,#___str_0
      000043 C0 E0            [ 8]  328 	push	acc
      000045 74s00            [ 8]  329 	mov	a,#(___str_0 >> 8)
      000047 C0 E0            [ 8]  330 	push	acc
      000049 74s00            [ 8]  331 	mov	a,#(___str_0 >> 16)
      00004B C0 E0            [ 8]  332 	push	acc
      00004D 74 80            [ 8]  333 	mov	a,#0x80
      00004F C0 E0            [ 8]  334 	push	acc
      000051 12s00r00r00      [16]  335 	lcall	_printf
      000055 C3               [ 4]  336 	clr	c
      000056 E5 81            [ 8]  337 	mov	a,sp
      000058 94 12            [ 8]  338 	subb	a,#0x12
      00005A F5 81            [ 8]  339 	mov	sp,a
      00005C E5 9B            [ 8]  340 	mov	a,esp
      00005E 54 03            [ 8]  341 	anl	a,#3
      000060 44 DC            [ 8]  342 	orl	a,#0xdc
      000062 94 00            [ 8]  343 	subb	a,#0x00
      000064 F5 9B            [ 8]  344 	mov	esp,a
      000066                        345 00103$:
      000066 80 FE            [12]  346 	sjmp 00103$
      000068                        347 00104$:
                                    348 ;	__assert.c:37: }
      000068 22               [16]  349 	ret
                                    350 	.area CSEG    (CODE)
                                    351 	.area CONST   (CODE)
                                    352 	.area CONST   (CODE)
      000000                        353 ___str_0:
      000000 41 73 73 65 72 74 28   354 	.ascii "Assert(%s) failed in function %s at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 69 6E 20
             66 75 6E 63 74 69 6F
             6E 20 25 73 20 61 74
             20 6C 69 6E 65 20 25
             75 20 69 6E 20 66 69
             6C 65 20 25 73 2E
      000037 0A                     355 	.db 0x0a
      000038 00                     356 	.db 0x00
                                    357 	.area CSEG    (CODE)
                                    358 	.area XINIT   (CODE)
                                    359 	.area CABS    (ABS,CODE)
