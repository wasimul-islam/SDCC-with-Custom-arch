                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mblen
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _mblen_PARM_2
                                     35 	.globl _mblen
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; uninitialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 _mblen_PARM_2:
      000000                         78 	.ds 2
                                     79 ;--------------------------------------------------------
                                     80 ; absolute external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XABS    (ABS,XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; initialized external ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area XISEG   (XDATA)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'mblen'
                                    105 ;------------------------------------------------------------
                                    106 ;n                         Allocated with name '_mblen_PARM_2'
                                    107 ;s                         Allocated to registers r2 r3 r4 r5 
                                    108 ;m                         Allocated to registers 
                                    109 ;c                         Allocated to registers r6 
                                    110 ;------------------------------------------------------------
                                    111 ;	mblen.c:31: int mblen(const char *s, size_t n)
                                    112 ;	-----------------------------------------
                                    113 ;	 function mblen
                                    114 ;	-----------------------------------------
      000000                        115 _mblen:
                           000002   116 	ar2 = 0x02
                           000003   117 	ar3 = 0x03
                           000004   118 	ar4 = 0x04
                           000005   119 	ar5 = 0x05
                           000006   120 	ar6 = 0x06
                           000007   121 	ar7 = 0x07
                           000000   122 	ar0 = 0x00
                           000001   123 	ar1 = 0x01
      000000 AA 82            [ 8]  124 	mov	r2,dpl
      000002 AB 83            [ 8]  125 	mov	r3,dph
      000004 AC 93            [ 8]  126 	mov	r4,dpx
      000006 AD F0            [ 8]  127 	mov	r5,b
                                    128 ;	mblen.c:36: if(!s)
      000008 EA               [ 4]  129 	mov	a,r2
      000009 4B               [ 4]  130 	orl	a,r3
      00000A 4C               [ 4]  131 	orl	a,r4
      00000B 70 08            [12]  132 	jnz  00102$
      00000D                        133 00162$:
                                    134 ;	mblen.c:37: return(0);
      00000D 90 00 00 00      [12]  135 	mov  dptr,#0x0000
      000011 02s00r00rB3      [16]  136 	ljmp	00119$
      000015                        137 00102$:
                                    138 ;	mblen.c:39: if(!n)
      000015 90s00r00r00      [12]  139 	mov	dptr,#_mblen_PARM_2
      000019 E0               [ 8]  140 	movx	a,@dptr
      00001A F5 F0            [ 8]  141 	mov	b,a
      00001C A3               [12]  142 	inc	dptr
      00001D E0               [ 8]  143 	movx	a,@dptr
      00001E 45 F0            [ 8]  144 	orl	a,b
      000020 70 08            [12]  145 	jnz  00104$
      000022                        146 00163$:
                                    147 ;	mblen.c:40: return(-1);
      000022 90 00 FF FF      [12]  148 	mov  dptr,#0xffff
      000026 02s00r00rB3      [16]  149 	ljmp	00119$
      00002A                        150 00104$:
                                    151 ;	mblen.c:42: c = *s;
      00002A 8A 82            [ 8]  152 	mov	dpl,r2
      00002C 8B 83            [ 8]  153 	mov	dph,r3
      00002E 8C 93            [ 8]  154 	mov	dpx,r4
      000030 8D F0            [ 8]  155 	mov	b,r5
      000032 12s00r00r00      [16]  156 	lcall	__gptrget
                                    157 ;	genAssign: resultIsFar = TRUE
                                    158 ;	mblen.c:44: if(!c)
      000036 FE               [ 4]  159 	mov  r6,a
      000037 70 08            [12]  160 	jnz  00106$
      000039                        161 00164$:
                                    162 ;	mblen.c:45: return(0);
      000039 90 00 00 00      [12]  163 	mov  dptr,#0x0000
      00003D 02s00r00rB3      [16]  164 	ljmp	00119$
      000041                        165 00106$:
                                    166 ;	mblen.c:47: if(c <= 0x7f)
      000041 C3               [ 4]  167 	clr	c
      000042 74 7F            [ 8]  168 	mov	a,#0x7f
      000044 9E               [ 4]  169 	subb	a,r6
      000045 40 06            [12]  170 	jc   00126$
      000047                        171 00165$:
                                    172 ;	mblen.c:48: return(1);
      000047 90 00 00 01      [12]  173 	mov  dptr,#0x0001
                                    174 ;	mblen.c:50: while(c & 0x80)
      00004B 80 66            [12]  175 	sjmp 00119$
      00004D                        176 00126$:
                                    177 ;	genAssign: resultIsFar = FALSE
      00004D 7F 00            [ 8]  178 	mov	r7,#0x00
      00004F                        179 00109$:
      00004F EE               [ 4]  180 	mov	a,r6
      000050 30 E7 0B         [12]  181 	jnb  acc[7],00111$
      000053                        182 00166$:
                                    183 ;	mblen.c:52: c <<= 1;
      000053 8E 00            [ 8]  184 	mov	ar0,r6
      000055 E8               [ 4]  185 	mov	a,r0
      000056 25 E0            [ 8]  186 	add	a,acc
      000058 F8               [ 4]  187 	mov	r0,a
                                    188 ;	genAssign: resultIsFar = TRUE
      000059 88 06            [ 8]  189 	mov	ar6,r0
                                    190 ;	mblen.c:53: m++;
      00005B 0F               [ 4]  191 	inc	r7
      00005C 80 F1            [12]  192 	sjmp 00109$
      00005E                        193 00111$:
                                    194 ;	mblen.c:56: if(m > n)
      00005E 8F 06            [ 8]  195 	mov	ar6,r7
      000060 78 00            [ 8]  196 	mov	r0,#0x00
      000062 90s00r00r00      [12]  197 	mov	dptr,#_mblen_PARM_2
      000066 C3               [ 4]  198 	clr	c
      000067 E0               [ 8]  199 	movx	a,@dptr
      000068 9E               [ 4]  200 	subb	a,r6
      000069 A3               [12]  201 	inc	dptr
      00006A E0               [ 8]  202 	movx	a,@dptr
      00006B 98               [ 4]  203 	subb	a,r0
      00006C 50 06            [12]  204 	jnc  00129$
      00006E                        205 00167$:
                                    206 ;	mblen.c:57: return(-1);
      00006E 90 00 FF FF      [12]  207 	mov  dptr,#0xffff
                                    208 ;	mblen.c:60: while(--m)
      000072 80 3F            [12]  209 	sjmp 00119$
      000074                        210 00129$:
                                    211 ;	genAssign: resultIsFar = FALSE
                                    212 ;	genAssign: resultIsFar = FALSE
      000074                        213 00116$:
      000074 1F               [ 4]  214 	dec	r7
      000075 EF               [ 4]  215 	mov	a,r7
      000076 60 37            [12]  216 	jz  00118$
      000078                        217 00168$:
                                    218 ;	mblen.c:61: if((*++s & 0xc0) != 0x80)
      000078 C0 06            [ 8]  219 	push	ar6
      00007A C0 00            [ 8]  220 	push	ar0
      00007C 0A               [ 4]  221 	inc	r2
      00007D BA 00 05         [16]  222 	cjne	r2,#0x00,00169$
      000080 0B               [ 4]  223 	inc	r3
      000081 BB 00 01         [16]  224 	cjne	r3,#0x00,00169$
      000084 0C               [ 4]  225 	inc	r4
      000085                        226 00169$:
      000085 8A 82            [ 8]  227 	mov	dpl,r2
      000087 8B 83            [ 8]  228 	mov	dph,r3
      000089 8C 93            [ 8]  229 	mov	dpx,r4
      00008B 8D F0            [ 8]  230 	mov	b,r5
      00008D 12s00r00r00      [16]  231 	lcall	__gptrget
      000091 F9               [ 4]  232 	mov	r1,a
      000092 7E 00            [ 8]  233 	mov	r6,#0x00
      000094 53 01 C0         [12]  234 	anl	ar1,#0xc0
      000097 7E 00            [ 8]  235 	mov	r6,#0x00
      000099 B9 80 09         [16]  236 	cjne	r1,#0x80,00170$
      00009C BE 00 06         [16]  237 	cjne	r6,#0x00,00170$
      00009F D0 00            [ 8]  238 	pop	ar0
      0000A1 D0 06            [ 8]  239 	pop	ar6
      0000A3 80 CF            [12]  240 	sjmp 00116$
      0000A5                        241 00170$:
      0000A5 D0 00            [ 8]  242 	pop	ar0
      0000A7 D0 06            [ 8]  243 	pop	ar6
                                    244 ;	mblen.c:62: return(-1);
      0000A9 90 00 FF FF      [12]  245 	mov  dptr,#0xffff
      0000AD 80 04            [12]  246 	sjmp 00119$
      0000AF                        247 00118$:
                                    248 ;	mblen.c:64: return(n);
      0000AF 8E 82            [ 8]  249 	mov	dpl,r6
      0000B1 88 83            [ 8]  250 	mov	dph,r0
      0000B3                        251 00119$:
                                    252 ;	mblen.c:65: }
      0000B3 22               [16]  253 	ret
                                    254 	.area CSEG    (CODE)
                                    255 	.area CONST   (CODE)
                                    256 	.area XINIT   (CODE)
                                    257 	.area CABS    (ABS,CODE)
