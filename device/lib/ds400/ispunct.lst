                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ispunct
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _isalnum
                                     35 	.globl _isspace
                                     36 	.globl _isprint
                                     37 	.globl _ispunct
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         50 	.ds 8
                                     51 ;--------------------------------------------------------
                                     52 ; internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DSEG    (DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; overlayable items in internal ram
                                     57 ;--------------------------------------------------------
                                     58 ;--------------------------------------------------------
                                     59 ; indirectly addressable internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area ISEG    (DATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute internal ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area IABS    (ABS,DATA)
                                     66 	.area IABS    (ABS,DATA)
                                     67 ;--------------------------------------------------------
                                     68 ; bit data
                                     69 ;--------------------------------------------------------
                                     70 	.area BSEG    (BIT)
      000000                         71 _ispunct_sloc0_1_0:
      000000                         72 	.ds 1
                                     73 ;--------------------------------------------------------
                                     74 ; paged external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area PSEG    (PAG,XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; uninitialized external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XSEG    (XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; absolute external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XABS    (ABS,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; initialized external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XISEG   (XDATA)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'ispunct'
                                    107 ;------------------------------------------------------------
                                    108 ;c                         Allocated to registers r2 r3 
                                    109 ;------------------------------------------------------------
                                    110 ;	ispunct.c:33: int ispunct (int c)
                                    111 ;	-----------------------------------------
                                    112 ;	 function ispunct
                                    113 ;	-----------------------------------------
      000000                        114 _ispunct:
                           000002   115 	ar2 = 0x02
                           000003   116 	ar3 = 0x03
                           000004   117 	ar4 = 0x04
                           000005   118 	ar5 = 0x05
                           000006   119 	ar6 = 0x06
                           000007   120 	ar7 = 0x07
                           000000   121 	ar0 = 0x00
                           000001   122 	ar1 = 0x01
      000000 AA 82            [ 8]  123 	mov	r2,dpl
      000002 AB 83            [ 8]  124 	mov	r3,dph
                                    125 ;	ispunct.c:35: return (isprint (c) && !isspace (c) && !isalnum (c));
      000004 C0 02            [ 8]  126 	push	ar2
      000006 C0 03            [ 8]  127 	push	ar3
      000008 8A 82            [ 8]  128 	mov	dpl,r2
      00000A 8B 83            [ 8]  129 	mov	dph,r3
      00000C 12s00r00r00      [16]  130 	lcall	_isprint
      000010 D0 03            [ 8]  131 	pop	ar3
      000012 D0 02            [ 8]  132 	pop	ar2
      000014 E5 82            [ 8]  133 	mov	a,dpl
      000016 45 83            [ 8]  134 	orl	a,dph
      000018 60 24            [12]  135 	jz  00103$
      00001A                        136 00116$:
      00001A C0 02            [ 8]  137 	push	ar2
      00001C C0 03            [ 8]  138 	push	ar3
      00001E 8A 82            [ 8]  139 	mov	dpl,r2
      000020 8B 83            [ 8]  140 	mov	dph,r3
      000022 12s00r00r00      [16]  141 	lcall	_isspace
      000026 D0 03            [ 8]  142 	pop	ar3
      000028 D0 02            [ 8]  143 	pop	ar2
      00002A E5 82            [ 8]  144 	mov	a,dpl
      00002C 45 83            [ 8]  145 	orl	a,dph
      00002E 70 0E            [12]  146 	jnz  00103$
      000030                        147 00117$:
      000030 8A 82            [ 8]  148 	mov	dpl,r2
      000032 8B 83            [ 8]  149 	mov	dph,r3
      000034 12s00r00r00      [16]  150 	lcall	_isalnum
      000038 E5 82            [ 8]  151 	mov	a,dpl
      00003A 45 83            [ 8]  152 	orl	a,dph
      00003C 60 04            [12]  153 	jz  00104$
      00003E                        154 00118$:
      00003E                        155 00103$:
                                    156 ;	genAssign: resultIsFar = FALSE
      00003E C2*00            [ 8]  157 	clr	_ispunct_sloc0_1_0
      000040 80 02            [12]  158 	sjmp 00105$
      000042                        159 00104$:
                                    160 ;	genAssign: resultIsFar = FALSE
      000042 D2*00            [ 8]  161 	setb	_ispunct_sloc0_1_0
      000044                        162 00105$:
      000044 A2*00            [ 8]  163 	mov	c,_ispunct_sloc0_1_0
      000046 E4               [ 4]  164 	clr	a
      000047 33               [ 4]  165 	rlc	a
      000048 F5 84            [ 8]  166 	mov	dpl1,a
      00004A 75 85 00         [12]  167 	mov	dph1,#0x00
      00004D 85 84 82         [12]  168 	mov	dpl,dpl1
      000050 85 85 83         [12]  169 	mov	dph,dph1
      000053                        170 00101$:
                                    171 ;	ispunct.c:36: }
      000053 22               [16]  172 	ret
                                    173 	.area CSEG    (CODE)
                                    174 	.area CONST   (CODE)
                                    175 	.area XINIT   (CODE)
                                    176 	.area CABS    (ABS,CODE)
