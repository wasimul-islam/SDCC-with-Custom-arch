                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module bsearch
                                      6 	.optsdcc -mds400 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _bsearch_PARM_5
                                     35 	.globl _bsearch_PARM_4
                                     36 	.globl _bsearch_PARM_3
                                     37 	.globl _bsearch_PARM_2
                                     38 	.globl _bsearch
                                     39 ;--------------------------------------------------------
                                     40 ; special function registers
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; special function bits
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; overlayable register banks
                                     47 ;--------------------------------------------------------
                                     48 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 	.area REG_BANK_3	(REL,OVR,DATA)
      000000                         51 	.ds 8
                                     52 ;--------------------------------------------------------
                                     53 ; internal ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area DSEG    (DATA)
                                     56 ;--------------------------------------------------------
                                     57 ; overlayable items in internal ram
                                     58 ;--------------------------------------------------------
                                     59 ;--------------------------------------------------------
                                     60 ; indirectly addressable internal ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area ISEG    (DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; absolute internal ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area IABS    (ABS,DATA)
                                     67 	.area IABS    (ABS,DATA)
                                     68 ;--------------------------------------------------------
                                     69 ; bit data
                                     70 ;--------------------------------------------------------
                                     71 	.area BSEG    (BIT)
                                     72 ;--------------------------------------------------------
                                     73 ; paged external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area PSEG    (PAG,XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; uninitialized external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XSEG    (XDATA)
      000000                         80 _bsearch_PARM_2:
      000000                         81 	.ds 4
      000004                         82 _bsearch_PARM_3:
      000004                         83 	.ds 2
      000006                         84 _bsearch_PARM_4:
      000006                         85 	.ds 2
      000008                         86 _bsearch_PARM_5:
      000008                         87 	.ds 3
      00000B                         88 _bsearch_key_65536_36:
      00000B                         89 	.ds 4
      00000F                         90 _bsearch_left_131072_39:
      00000F                         91 	.ds 4
      000013                         92 _bsearch_middle_196608_40:
      000013                         93 	.ds 4
                                     94 ;--------------------------------------------------------
                                     95 ; absolute external ram data
                                     96 ;--------------------------------------------------------
                                     97 	.area XABS    (ABS,XDATA)
                                     98 ;--------------------------------------------------------
                                     99 ; initialized external ram data
                                    100 ;--------------------------------------------------------
                                    101 	.area XISEG   (XDATA)
                                    102 ;--------------------------------------------------------
                                    103 ; global & static initialisations
                                    104 ;--------------------------------------------------------
                                    105 	.area HOME    (CODE)
                                    106 	.area GSINIT  (CODE)
                                    107 	.area GSFINAL (CODE)
                                    108 	.area GSINIT  (CODE)
                                    109 ;--------------------------------------------------------
                                    110 ; Home
                                    111 ;--------------------------------------------------------
                                    112 	.area HOME    (CODE)
                                    113 	.area HOME    (CODE)
                                    114 ;--------------------------------------------------------
                                    115 ; code
                                    116 ;--------------------------------------------------------
                                    117 	.area CSEG    (CODE)
                                    118 ;------------------------------------------------------------
                                    119 ;Allocation info for local variables in function 'bsearch'
                                    120 ;------------------------------------------------------------
                                    121 ;base                      Allocated with name '_bsearch_PARM_2'
                                    122 ;nmemb                     Allocated with name '_bsearch_PARM_3'
                                    123 ;size                      Allocated with name '_bsearch_PARM_4'
                                    124 ;compar                    Allocated with name '_bsearch_PARM_5'
                                    125 ;key                       Allocated with name '_bsearch_key_65536_36'
                                    126 ;left                      Allocated with name '_bsearch_left_131072_39'
                                    127 ;middle                    Allocated with name '_bsearch_middle_196608_40'
                                    128 ;c                         Allocated to registers r2 r3 
                                    129 ;------------------------------------------------------------
                                    130 ;	bsearch.c:31: void *bsearch(const void *key, const void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *) __reentrant)
                                    131 ;	-----------------------------------------
                                    132 ;	 function bsearch
                                    133 ;	-----------------------------------------
      000000                        134 _bsearch:
                           000002   135 	ar2 = 0x02
                           000003   136 	ar3 = 0x03
                           000004   137 	ar4 = 0x04
                           000005   138 	ar5 = 0x05
                           000006   139 	ar6 = 0x06
                           000007   140 	ar7 = 0x07
                           000000   141 	ar0 = 0x00
                           000001   142 	ar1 = 0x01
      000000 75 86 01         [12]  143 	mov     dps, #1
      000003 90s00r00r0B      [12]  144 	mov     dptr, #_bsearch_key_65536_36
      000007 E5 82            [ 8]  145 	mov	a,dpl
      000009 F0               [ 8]  146 	movx	@dptr,a
      00000A A3               [12]  147 	inc	dptr
      00000B E5 83            [ 8]  148 	mov	a,dph
      00000D F0               [ 8]  149 	movx	@dptr,a
      00000E A3               [12]  150 	inc	dptr
      00000F E5 93            [ 8]  151 	mov	a,dpx
      000011 F0               [ 8]  152 	movx	@dptr,a
      000012 A3               [12]  153 	inc	dptr
      000013 E5 F0            [ 8]  154 	mov	a,b
      000015 F0               [ 8]  155 	movx	@dptr,a
      000016 75 86 00         [12]  156 	mov	dps,#0
                                    157 ;	bsearch.c:33: for(const char *left = base; nmemb;)
      000019 90s00r00r00      [12]  158 	mov	dptr,#_bsearch_PARM_2
                                    159 ;	genAssign: resultIsFar = FALSE
      00001D E0               [ 8]  160 	movx	a,@dptr
      00001E FE               [ 4]  161 	mov	r6,a
      00001F A3               [12]  162 	inc	dptr
      000020 E0               [ 8]  163 	movx	a,@dptr
      000021 FF               [ 4]  164 	mov	r7,a
      000022 A3               [12]  165 	inc	dptr
      000023 E0               [ 8]  166 	movx	a,@dptr
      000024 F8               [ 4]  167 	mov	r0,a
      000025 A3               [12]  168 	inc	dptr
      000026 E0               [ 8]  169 	movx	a,@dptr
      000027 F9               [ 4]  170 	mov	r1,a
      000028 90s00r00r0F      [12]  171 	mov	dptr,#_bsearch_left_131072_39
      00002C EE               [ 4]  172 	mov	a,r6
      00002D F0               [ 8]  173 	movx	@dptr,a
      00002E A3               [12]  174 	inc	dptr
      00002F EF               [ 4]  175 	mov	a,r7
      000030 F0               [ 8]  176 	movx	@dptr,a
      000031 A3               [12]  177 	inc	dptr
      000032 E8               [ 4]  178 	mov	a,r0
      000033 F0               [ 8]  179 	movx	@dptr,a
      000034 A3               [12]  180 	inc	dptr
      000035 E9               [ 4]  181 	mov	a,r1
      000036 F0               [ 8]  182 	movx	@dptr,a
      000037                        183 00109$:
      000037 90s00r00r04      [12]  184 	mov	dptr,#_bsearch_PARM_3
      00003B E0               [ 8]  185 	movx	a,@dptr
      00003C F5 F0            [ 8]  186 	mov	b,a
      00003E A3               [12]  187 	inc	dptr
      00003F E0               [ 8]  188 	movx	a,@dptr
      000040 45 F0            [ 8]  189 	orl	a,b
      000042 70 04            [12]  190 	jnz	00129$
      000044 02s00r01rB1      [16]  191 	ljmp	00107$
      000048                        192 00129$:
                                    193 ;	bsearch.c:35: const char *middle = left + nmemb / 2 * size;
      000048 90s00r00r04      [12]  194 	mov	dptr,#_bsearch_PARM_3
      00004C E0               [ 8]  195 	movx	a,@dptr
      00004D FE               [ 4]  196 	mov	r6,a
      00004E A3               [12]  197 	inc	dptr
      00004F E0               [ 8]  198 	movx	a,@dptr
      000050 C3               [ 4]  199 	clr	c
      000051 13               [ 4]  200 	rrc	a
      000052 CE               [ 4]  201 	xch	a,r6
      000053 13               [ 4]  202 	rrc	a
      000054 CE               [ 4]  203 	xch	a,r6
      000055 FF               [ 4]  204 	mov	r7,a
      000056 90s00r00r06      [12]  205 	mov	dptr,#_bsearch_PARM_4
                                    206 ;	genAssign: resultIsFar = TRUE
      00005A 75 86 21         [12]  207 	mov	dps,#0x21
      00005D 90s00r00r00      [12]  208 	mov	dptr,#__mulint_PARM_2
      000061 E0               [ 8]  209 	movx	a,@dptr
      000062 F0               [ 8]  210 	movx	@dptr,a
      000063 A3               [12]  211 	inc	dptr
      000064 A3               [12]  212 	inc	dptr
      000065 E0               [ 8]  213 	movx	a,@dptr
      000066 F0               [ 8]  214 	movx	@dptr,a
      000067 75 86 00         [12]  215 	mov	dps,#0
      00006A C0 06            [ 8]  216 	push	ar6
      00006C C0 07            [ 8]  217 	push	ar7
      00006E 8E 82            [ 8]  218 	mov	dpl,r6
      000070 8F 83            [ 8]  219 	mov	dph,r7
      000072 12s00r00r00      [16]  220 	lcall	__mulint
      000076 A8 82            [ 8]  221 	mov	r0,dpl
      000078 A9 83            [ 8]  222 	mov	r1,dph
      00007A D0 07            [ 8]  223 	pop	ar7
      00007C D0 06            [ 8]  224 	pop	ar6
      00007E 90s00r00r0F      [12]  225 	mov	dptr,#_bsearch_left_131072_39
      000082 75 86 01         [12]  226 	mov	dps, #1
      000085 90s00r00r13      [12]  227 	mov	dptr, #_bsearch_middle_196608_40
      000089 15 86            [ 8]  228 	dec	dps
      00008B E0               [ 8]  229 	movx	a,@dptr
      00008C 28               [ 4]  230 	add	a,r0
      00008D 05 86            [ 8]  231 	inc	dps
      00008F F0               [ 8]  232 	movx	@dptr,a
      000090 15 86            [ 8]  233 	dec	dps
      000092 A3               [12]  234 	inc	dptr
      000093 E0               [ 8]  235 	movx	a,@dptr
      000094 39               [ 4]  236 	addc	a,r1
      000095 05 86            [ 8]  237 	inc	dps
      000097 A3               [12]  238 	inc	dptr
      000098 F0               [ 8]  239 	movx	@dptr,a
      000099 15 86            [ 8]  240 	dec	dps
      00009B A3               [12]  241 	inc	dptr
      00009C E0               [ 8]  242 	movx	a,@dptr
      00009D 34 00            [ 8]  243 	addc	a,#0x00
      00009F 05 86            [ 8]  244 	inc	dps
      0000A1 A3               [12]  245 	inc	dptr
      0000A2 F0               [ 8]  246 	movx	@dptr,a
      0000A3 75 86 00         [12]  247 	mov	dps,#0
      0000A6 A3               [12]  248 	inc	dptr
      0000A7 E0               [ 8]  249 	movx	a,@dptr
      0000A8 75 86 01         [12]  250 	mov	dps,#1
      0000AB A3               [12]  251 	inc	dptr
      0000AC F0               [ 8]  252 	movx	@dptr,a
      0000AD 75 86 00         [12]  253 	mov	dps,#0
                                    254 ;	bsearch.c:36: int c = (*compar)(key, middle);
      0000B0 90s00r00r13      [12]  255 	mov	dptr,#_bsearch_middle_196608_40
                                    256 ;	genAssign: resultIsFar = FALSE
      0000B4 E0               [ 8]  257 	movx	a,@dptr
      0000B5 FC               [ 4]  258 	mov	r4,a
      0000B6 A3               [12]  259 	inc	dptr
      0000B7 E0               [ 8]  260 	movx	a,@dptr
      0000B8 FD               [ 4]  261 	mov	r5,a
      0000B9 A3               [12]  262 	inc	dptr
      0000BA E0               [ 8]  263 	movx	a,@dptr
      0000BB FA               [ 4]  264 	mov	r2,a
      0000BC A3               [12]  265 	inc	dptr
      0000BD E0               [ 8]  266 	movx	a,@dptr
      0000BE FB               [ 4]  267 	mov	r3,a
      0000BF C0 06            [ 8]  268 	push	ar6
      0000C1 C0 07            [ 8]  269 	push	ar7
      0000C3 C0 04            [ 8]  270 	push	ar4
      0000C5 C0 05            [ 8]  271 	push	ar5
      0000C7 C0 02            [ 8]  272 	push	ar2
      0000C9 C0 03            [ 8]  273 	push	ar3
      0000CB 74rFF            [ 8]  274 	mov	a,#00130$
      0000CD C0 E0            [ 8]  275 	push	acc
      0000CF 74s00            [ 8]  276 	mov	a,#(00130$ >> 8)
      0000D1 C0 E0            [ 8]  277 	push	acc
      0000D3 74s00            [ 8]  278 	mov	a,#(00130$ >> 16)
      0000D5 C0 E0            [ 8]  279 	push	acc
      0000D7 90s00r00r08      [12]  280 	mov	dptr,#_bsearch_PARM_5
      0000DB E0               [ 8]  281 	movx	a,@dptr
      0000DC C0 E0            [ 8]  282 	push	acc
      0000DE A3               [12]  283 	inc	dptr
      0000DF E0               [ 8]  284 	movx	a,@dptr
      0000E0 C0 E0            [ 8]  285 	push	acc
      0000E2 A3               [12]  286 	inc	dptr
      0000E3 E0               [ 8]  287 	movx	a,@dptr
      0000E4 C0 E0            [ 8]  288 	push	acc
      0000E6 05 86            [ 8]  289 	inc	dps
      0000E8 90s00r00r0B      [12]  290 	mov	dptr,#_bsearch_key_65536_36
      0000EC E0               [ 8]  291 	movx	a,@dptr
      0000ED F5 82            [ 8]  292 	mov	dpl,a
      0000EF A3               [12]  293 	inc	dptr
      0000F0 E0               [ 8]  294 	movx	a,@dptr
      0000F1 F5 83            [ 8]  295 	mov	dph,a
      0000F3 A3               [12]  296 	inc	dptr
      0000F4 E0               [ 8]  297 	movx	a,@dptr
      0000F5 F5 93            [ 8]  298 	mov	dpx,a
      0000F7 A3               [12]  299 	inc	dptr
      0000F8 E0               [ 8]  300 	movx	a,@dptr
      0000F9 F5 F0            [ 8]  301 	mov	b,a
      0000FB 75 86 00         [12]  302 	mov	dps,#0
      0000FE 22               [16]  303 	ret
      0000FF                        304 00130$:
      0000FF AA 82            [ 8]  305 	mov	r2,dpl
      000101 AB 83            [ 8]  306 	mov	r3,dph
                                    307 ;	stack adjustment for parms
      000103 D0 E0            [ 8]  308 	pop	acc
      000105 D0 E0            [ 8]  309 	pop	acc
      000107 D0 E0            [ 8]  310 	pop	acc
      000109 D0 E0            [ 8]  311 	pop	acc
      00010B D0 07            [ 8]  312 	pop	ar7
      00010D D0 06            [ 8]  313 	pop	ar6
                                    314 ;	genAssign: resultIsFar = TRUE
                                    315 ;	bsearch.c:38: if(c < 0)
      00010F EB               [ 4]  316 	mov	a,r3
      000110 30 E7 0D         [12]  317 	jnb  acc[7],00105$
      000113                        318 00131$:
                                    319 ;	bsearch.c:39: nmemb = nmemb / 2;	
                                    320 ;	genAssign: resultIsFar = TRUE
      000113 90s00r00r04      [12]  321 	mov	dptr,#_bsearch_PARM_3
      000117 EE               [ 4]  322 	mov	a,r6
      000118 F0               [ 8]  323 	movx	@dptr,a
      000119 A3               [12]  324 	inc	dptr
      00011A EF               [ 4]  325 	mov	a,r7
      00011B F0               [ 8]  326 	movx	@dptr,a
      00011C 02s00r00r37      [16]  327 	ljmp	00109$
      000120                        328 00105$:
                                    329 ;	bsearch.c:40: else if(c > 0)
      000120 C3               [ 4]  330 	clr	c
      000121 E4               [ 4]  331 	clr	a
      000122 9A               [ 4]  332 	subb	a,r2
      000123 E4               [ 4]  333 	clr	a
      000124 64 80            [ 8]  334 	xrl	a,#0x80
      000126 8B F0            [ 8]  335 	mov	b,r3
      000128 63 F0 80         [12]  336 	xrl	b,#0x80
      00012B 95 F0            [ 8]  337 	subb	a,b
      00012D 50 69            [12]  338 	jnc  00102$
      00012F                        339 00132$:
                                    340 ;	bsearch.c:42: left = middle + size;
      00012F 90s00r00r06      [12]  341 	mov	dptr,#_bsearch_PARM_4
      000133 75 86 01         [12]  342 	mov	dps, #1
      000136 90s00r00r13      [12]  343 	mov	dptr, #_bsearch_middle_196608_40
      00013A 15 86            [ 8]  344 	dec	dps
      00013C E0               [ 8]  345 	movx	a,@dptr
      00013D C5 9C            [ 8]  346 	xch	a, acc1
      00013F 05 86            [ 8]  347 	inc	dps
      000141 E0               [ 8]  348 	movx	a,@dptr
      000142 C5 9C            [ 8]  349 	xch	a, acc1
      000144 25 9C            [ 8]  350 	add	a,acc1
      000146 FA               [ 4]  351 	mov	r2,a
      000147 15 86            [ 8]  352 	dec	dps
      000149 A3               [12]  353 	inc	dptr
      00014A E0               [ 8]  354 	movx	a,@dptr
      00014B C5 9C            [ 8]  355 	xch	a, acc1
      00014D 05 86            [ 8]  356 	inc	dps
      00014F A3               [12]  357 	inc	dptr
      000150 E0               [ 8]  358 	movx	a,@dptr
      000151 C5 9C            [ 8]  359 	xch	a, acc1
      000153 35 9C            [ 8]  360 	addc	a,acc1
      000155 FB               [ 4]  361 	mov	r3,a
      000156 E4               [ 4]  362 	clr	a
      000157 C5 9C            [ 8]  363 	xch	a, acc1
      000159 A3               [12]  364 	inc	dptr
      00015A E0               [ 8]  365 	movx	a,@dptr
      00015B C5 9C            [ 8]  366 	xch	a, acc1
      00015D 35 9C            [ 8]  367 	addc	a,acc1
      00015F FC               [ 4]  368 	mov	r4,a
      000160 75 86 01         [12]  369 	mov     dps, #1
      000163 A3               [12]  370 	inc	dptr
      000164 E0               [ 8]  371 	movx	a,@dptr
      000165 75 86 00         [12]  372 	mov	dps,#0
      000168 FD               [ 4]  373 	mov	r5,a
                                    374 ;	genAssign: resultIsFar = TRUE
      000169 90s00r00r0F      [12]  375 	mov	dptr,#_bsearch_left_131072_39
      00016D EA               [ 4]  376 	mov	a,r2
      00016E F0               [ 8]  377 	movx	@dptr,a
      00016F A3               [12]  378 	inc	dptr
      000170 EB               [ 4]  379 	mov	a,r3
      000171 F0               [ 8]  380 	movx	@dptr,a
      000172 A3               [12]  381 	inc	dptr
      000173 EC               [ 4]  382 	mov	a,r4
      000174 F0               [ 8]  383 	movx	@dptr,a
      000175 A3               [12]  384 	inc	dptr
      000176 ED               [ 4]  385 	mov	a,r5
      000177 F0               [ 8]  386 	movx	@dptr,a
                                    387 ;	bsearch.c:43: nmemb = (nmemb - 1) / 2;
      000178 90s00r00r04      [12]  388 	mov	dptr,#_bsearch_PARM_3
      00017C E0               [ 8]  389 	movx	a,@dptr
      00017D 24 FF            [ 8]  390 	add	a,#0xff
      00017F FA               [ 4]  391 	mov	r2,a
      000180 A3               [12]  392 	inc	dptr
      000181 E0               [ 8]  393 	movx	a,@dptr
      000182 34 FF            [ 8]  394 	addc	a,#0xff
      000184 FB               [ 4]  395 	mov  r3,a
      000185 C3               [ 4]  396 	clr	c
      000186 13               [ 4]  397 	rrc	a
      000187 CA               [ 4]  398 	xch	a,r2
      000188 13               [ 4]  399 	rrc	a
      000189 CA               [ 4]  400 	xch	a,r2
      00018A FB               [ 4]  401 	mov	r3,a
                                    402 ;	genAssign: resultIsFar = TRUE
      00018B 90s00r00r04      [12]  403 	mov	dptr,#_bsearch_PARM_3
      00018F EA               [ 4]  404 	mov	a,r2
      000190 F0               [ 8]  405 	movx	@dptr,a
      000191 A3               [12]  406 	inc	dptr
      000192 EB               [ 4]  407 	mov	a,r3
      000193 F0               [ 8]  408 	movx	@dptr,a
      000194 02s00r00r37      [16]  409 	ljmp	00109$
      000198                        410 00102$:
                                    411 ;	bsearch.c:46: return(middle);
      000198 90s00r00r13      [12]  412 	mov	dptr,#_bsearch_middle_196608_40
                                    413 ;	genAssign: resultIsFar = FALSE
      00019C E0               [ 8]  414 	movx	a,@dptr
      00019D FA               [ 4]  415 	mov	r2,a
      00019E A3               [12]  416 	inc	dptr
      00019F E0               [ 8]  417 	movx	a,@dptr
      0001A0 FB               [ 4]  418 	mov	r3,a
      0001A1 A3               [12]  419 	inc	dptr
      0001A2 E0               [ 8]  420 	movx	a,@dptr
      0001A3 FC               [ 4]  421 	mov	r4,a
      0001A4 A3               [12]  422 	inc	dptr
      0001A5 E0               [ 8]  423 	movx	a,@dptr
      0001A6 FD               [ 4]  424 	mov	r5,a
      0001A7 8A 82            [ 8]  425 	mov	dpl,r2
      0001A9 8B 83            [ 8]  426 	mov	dph,r3
      0001AB 8C 93            [ 8]  427 	mov	dpx,r4
      0001AD 8D F0            [ 8]  428 	mov	b,r5
      0001AF 80 07            [12]  429 	sjmp 00111$
      0001B1                        430 00107$:
                                    431 ;	bsearch.c:49: return(0);
      0001B1 90 00 00 00      [12]  432 	mov  dptr,#0x0000
      0001B5 75 F0 00         [12]  433 	mov	b,#0x00
      0001B8                        434 00111$:
                                    435 ;	bsearch.c:50: }
      0001B8 22               [16]  436 	ret
                                    437 	.area CSEG    (CODE)
                                    438 	.area CONST   (CODE)
                                    439 	.area XINIT   (CODE)
                                    440 	.area CABS    (ABS,CODE)
