                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __stdc_bit_ceilull
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___stdc_bit_ceilull
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '__stdc_bit_ceilull'
                                     91 ;------------------------------------------------------------
                                     92 ;value                     Allocated to stack - _bp +1
                                     93 ;i                         Allocated to registers r7 
                                     94 ;sloc0                     Allocated to stack - _bp +9
                                     95 ;------------------------------------------------------------
                                     96 ;	__stdc_bit_ceilull.c:37: unsigned long long __stdc_bit_ceilull(unsigned long long value)
                                     97 ;	-----------------------------------------
                                     98 ;	 function __stdc_bit_ceilull
                                     99 ;	-----------------------------------------
      000000                        100 ___stdc_bit_ceilull:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 85 81*00         [24]  110 	mov	_bp,sp
      000005 C0 82            [24]  111 	push	dpl
      000007 C0 83            [24]  112 	push	dph
      000009 C0 F0            [24]  113 	push	b
      00000B C0 E0            [24]  114 	push	acc
      00000D C0 04            [24]  115 	push	ar4
      00000F C0 05            [24]  116 	push	ar5
      000011 C0 06            [24]  117 	push	ar6
      000013 C0 07            [24]  118 	push	ar7
      000015 E5 81            [12]  119 	mov	a,sp
      000017 24 08            [12]  120 	add	a,#0x08
      000019 F5 81            [12]  121 	mov	sp,a
                                    122 ;	__stdc_bit_ceilull.c:40: for(i = 0; i < ULLONG_WIDTH; i++)
      00001B 7F 00            [12]  123 	mov	r7,#0x00
      00001D                        124 00104$:
                                    125 ;	__stdc_bit_ceilull.c:41: if(value <= (1ull << i))
      00001D 8F F0            [24]  126 	mov	b,r7
      00001F 05 F0            [12]  127 	inc	b
      000021 E5*00            [12]  128 	mov	a,_bp
      000023 24 09            [12]  129 	add	a,#0x09
      000025 F8               [12]  130 	mov	r0,a
      000026 76 01            [12]  131 	mov	@r0,#0x01
      000028 08               [12]  132 	inc	r0
      000029 76 00            [12]  133 	mov	@r0,#0x00
      00002B 08               [12]  134 	inc	r0
      00002C 76 00            [12]  135 	mov	@r0,#0x00
      00002E 08               [12]  136 	inc	r0
      00002F 76 00            [12]  137 	mov	@r0,#0x00
      000031 08               [12]  138 	inc	r0
      000032 76 00            [12]  139 	mov	@r0,#0x00
      000034 08               [12]  140 	inc	r0
      000035 76 00            [12]  141 	mov	@r0,#0x00
      000037 08               [12]  142 	inc	r0
      000038 76 00            [12]  143 	mov	@r0,#0x00
      00003A 08               [12]  144 	inc	r0
      00003B 76 00            [12]  145 	mov	@r0,#0x00
      00003D 18               [12]  146 	dec	r0
      00003E 18               [12]  147 	dec	r0
      00003F 18               [12]  148 	dec	r0
      000040 18               [12]  149 	dec	r0
      000041 18               [12]  150 	dec	r0
      000042 18               [12]  151 	dec	r0
      000043 18               [12]  152 	dec	r0
      000044 80 26            [24]  153 	sjmp	00118$
      000046                        154 00117$:
      000046 E6               [12]  155 	mov	a,@r0
      000047 26               [12]  156 	add	a,@r0
      000048 F6               [12]  157 	mov	@r0,a
      000049 08               [12]  158 	inc	r0
      00004A E6               [12]  159 	mov	a,@r0
      00004B 33               [12]  160 	rlc	a
      00004C F6               [12]  161 	mov	@r0,a
      00004D 08               [12]  162 	inc	r0
      00004E E6               [12]  163 	mov	a,@r0
      00004F 33               [12]  164 	rlc	a
      000050 F6               [12]  165 	mov	@r0,a
      000051 08               [12]  166 	inc	r0
      000052 E6               [12]  167 	mov	a,@r0
      000053 33               [12]  168 	rlc	a
      000054 F6               [12]  169 	mov	@r0,a
      000055 08               [12]  170 	inc	r0
      000056 E6               [12]  171 	mov	a,@r0
      000057 33               [12]  172 	rlc	a
      000058 F6               [12]  173 	mov	@r0,a
      000059 08               [12]  174 	inc	r0
      00005A E6               [12]  175 	mov	a,@r0
      00005B 33               [12]  176 	rlc	a
      00005C F6               [12]  177 	mov	@r0,a
      00005D 08               [12]  178 	inc	r0
      00005E E6               [12]  179 	mov	a,@r0
      00005F 33               [12]  180 	rlc	a
      000060 F6               [12]  181 	mov	@r0,a
      000061 08               [12]  182 	inc	r0
      000062 E6               [12]  183 	mov	a,@r0
      000063 33               [12]  184 	rlc	a
      000064 F6               [12]  185 	mov	@r0,a
      000065 18               [12]  186 	dec	r0
      000066 18               [12]  187 	dec	r0
      000067 18               [12]  188 	dec	r0
      000068 18               [12]  189 	dec	r0
      000069 18               [12]  190 	dec	r0
      00006A 18               [12]  191 	dec	r0
      00006B 18               [12]  192 	dec	r0
      00006C                        193 00118$:
      00006C D5 F0 D7         [24]  194 	djnz	b,00117$
      00006F A8*00            [24]  195 	mov	r0,_bp
      000071 08               [12]  196 	inc	r0
      000072 E5*00            [12]  197 	mov	a,_bp
      000074 24 09            [12]  198 	add	a,#0x09
      000076 F9               [12]  199 	mov	r1,a
      000077 C3               [12]  200 	clr	c
      000078 E7               [12]  201 	mov	a,@r1
      000079 96               [12]  202 	subb	a,@r0
      00007A 09               [12]  203 	inc	r1
      00007B E7               [12]  204 	mov	a,@r1
      00007C 08               [12]  205 	inc	r0
      00007D 96               [12]  206 	subb	a,@r0
      00007E 09               [12]  207 	inc	r1
      00007F E7               [12]  208 	mov	a,@r1
      000080 08               [12]  209 	inc	r0
      000081 96               [12]  210 	subb	a,@r0
      000082 09               [12]  211 	inc	r1
      000083 E7               [12]  212 	mov	a,@r1
      000084 08               [12]  213 	inc	r0
      000085 96               [12]  214 	subb	a,@r0
      000086 09               [12]  215 	inc	r1
      000087 E7               [12]  216 	mov	a,@r1
      000088 08               [12]  217 	inc	r0
      000089 96               [12]  218 	subb	a,@r0
      00008A 09               [12]  219 	inc	r1
      00008B E7               [12]  220 	mov	a,@r1
      00008C 08               [12]  221 	inc	r0
      00008D 96               [12]  222 	subb	a,@r0
      00008E 09               [12]  223 	inc	r1
      00008F E7               [12]  224 	mov	a,@r1
      000090 08               [12]  225 	inc	r0
      000091 96               [12]  226 	subb	a,@r0
      000092 09               [12]  227 	inc	r1
      000093 E7               [12]  228 	mov	a,@r1
      000094 08               [12]  229 	inc	r0
      000095 96               [12]  230 	subb	a,@r0
      000096 50 09            [24]  231 	jnc	00103$
                                    232 ;	__stdc_bit_ceilull.c:40: for(i = 0; i < ULLONG_WIDTH; i++)
      000098 0F               [12]  233 	inc	r7
      000099 BF 40 00         [24]  234 	cjne	r7,#0x40,00120$
      00009C                        235 00120$:
      00009C 50 03            [24]  236 	jnc	00121$
      00009E 02r00r1D         [24]  237 	ljmp	00104$
      0000A1                        238 00121$:
      0000A1                        239 00103$:
                                    240 ;	__stdc_bit_ceilull.c:43: return (1ull << i);
      0000A1 8F F0            [24]  241 	mov	b,r7
      0000A3 05 F0            [12]  242 	inc	b
      0000A5 E5*00            [12]  243 	mov	a,_bp
      0000A7 24 09            [12]  244 	add	a,#0x09
      0000A9 F8               [12]  245 	mov	r0,a
      0000AA 76 01            [12]  246 	mov	@r0,#0x01
      0000AC 08               [12]  247 	inc	r0
      0000AD 76 00            [12]  248 	mov	@r0,#0x00
      0000AF 08               [12]  249 	inc	r0
      0000B0 76 00            [12]  250 	mov	@r0,#0x00
      0000B2 08               [12]  251 	inc	r0
      0000B3 76 00            [12]  252 	mov	@r0,#0x00
      0000B5 08               [12]  253 	inc	r0
      0000B6 76 00            [12]  254 	mov	@r0,#0x00
      0000B8 08               [12]  255 	inc	r0
      0000B9 76 00            [12]  256 	mov	@r0,#0x00
      0000BB 08               [12]  257 	inc	r0
      0000BC 76 00            [12]  258 	mov	@r0,#0x00
      0000BE 08               [12]  259 	inc	r0
      0000BF 76 00            [12]  260 	mov	@r0,#0x00
      0000C1 18               [12]  261 	dec	r0
      0000C2 18               [12]  262 	dec	r0
      0000C3 18               [12]  263 	dec	r0
      0000C4 18               [12]  264 	dec	r0
      0000C5 18               [12]  265 	dec	r0
      0000C6 18               [12]  266 	dec	r0
      0000C7 18               [12]  267 	dec	r0
      0000C8 80 26            [24]  268 	sjmp	00123$
      0000CA                        269 00122$:
      0000CA E6               [12]  270 	mov	a,@r0
      0000CB 26               [12]  271 	add	a,@r0
      0000CC F6               [12]  272 	mov	@r0,a
      0000CD 08               [12]  273 	inc	r0
      0000CE E6               [12]  274 	mov	a,@r0
      0000CF 33               [12]  275 	rlc	a
      0000D0 F6               [12]  276 	mov	@r0,a
      0000D1 08               [12]  277 	inc	r0
      0000D2 E6               [12]  278 	mov	a,@r0
      0000D3 33               [12]  279 	rlc	a
      0000D4 F6               [12]  280 	mov	@r0,a
      0000D5 08               [12]  281 	inc	r0
      0000D6 E6               [12]  282 	mov	a,@r0
      0000D7 33               [12]  283 	rlc	a
      0000D8 F6               [12]  284 	mov	@r0,a
      0000D9 08               [12]  285 	inc	r0
      0000DA E6               [12]  286 	mov	a,@r0
      0000DB 33               [12]  287 	rlc	a
      0000DC F6               [12]  288 	mov	@r0,a
      0000DD 08               [12]  289 	inc	r0
      0000DE E6               [12]  290 	mov	a,@r0
      0000DF 33               [12]  291 	rlc	a
      0000E0 F6               [12]  292 	mov	@r0,a
      0000E1 08               [12]  293 	inc	r0
      0000E2 E6               [12]  294 	mov	a,@r0
      0000E3 33               [12]  295 	rlc	a
      0000E4 F6               [12]  296 	mov	@r0,a
      0000E5 08               [12]  297 	inc	r0
      0000E6 E6               [12]  298 	mov	a,@r0
      0000E7 33               [12]  299 	rlc	a
      0000E8 F6               [12]  300 	mov	@r0,a
      0000E9 18               [12]  301 	dec	r0
      0000EA 18               [12]  302 	dec	r0
      0000EB 18               [12]  303 	dec	r0
      0000EC 18               [12]  304 	dec	r0
      0000ED 18               [12]  305 	dec	r0
      0000EE 18               [12]  306 	dec	r0
      0000EF 18               [12]  307 	dec	r0
      0000F0                        308 00123$:
      0000F0 D5 F0 D7         [24]  309 	djnz	b,00122$
      0000F3 E5*00            [12]  310 	mov	a,_bp
      0000F5 24 09            [12]  311 	add	a,#0x09
      0000F7 F8               [12]  312 	mov	r0,a
      0000F8 86 82            [24]  313 	mov	dpl,@r0
      0000FA 08               [12]  314 	inc	r0
      0000FB 86 83            [24]  315 	mov	dph,@r0
      0000FD 08               [12]  316 	inc	r0
      0000FE 86 F0            [24]  317 	mov	b,@r0
      000100 08               [12]  318 	inc	r0
      000101 E6               [12]  319 	mov	a,@r0
      000102 08               [12]  320 	inc	r0
      000103 86 04            [24]  321 	mov	ar4,@r0
      000105 08               [12]  322 	inc	r0
      000106 86 05            [24]  323 	mov	ar5,@r0
      000108 08               [12]  324 	inc	r0
      000109 86 06            [24]  325 	mov	ar6,@r0
      00010B 08               [12]  326 	inc	r0
      00010C 86 07            [24]  327 	mov	ar7,@r0
                                    328 ;	__stdc_bit_ceilull.c:44: }
      00010E 85*00 81         [24]  329 	mov	sp,_bp
      000111 D0*00            [24]  330 	pop	_bp
      000113 22               [24]  331 	ret
                                    332 	.area CSEG    (CODE)
                                    333 	.area CONST   (CODE)
                                    334 	.area XINIT   (CODE)
                                    335 	.area CABS    (ABS,CODE)
