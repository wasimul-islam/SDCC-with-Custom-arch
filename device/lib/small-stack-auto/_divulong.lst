                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divulong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 ;--------------------------------------------------------
                                     12 ; special function registers
                                     13 ;--------------------------------------------------------
                                     14 	.area RSEG    (ABS,DATA)
      000000                         15 	.org 0x0000
                                     16 ;--------------------------------------------------------
                                     17 ; special function bits
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; overlayable register banks
                                     23 ;--------------------------------------------------------
                                     24 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         25 	.ds 8
                                     26 ;--------------------------------------------------------
                                     27 ; internal ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area DSEG    (DATA)
                                     30 ;--------------------------------------------------------
                                     31 ; overlayable items in internal ram
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; indirectly addressable internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area ISEG    (DATA)
                                     37 ;--------------------------------------------------------
                                     38 ; absolute internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area IABS    (ABS,DATA)
                                     41 	.area IABS    (ABS,DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; bit data
                                     44 ;--------------------------------------------------------
                                     45 	.area BSEG    (BIT)
                                     46 ;--------------------------------------------------------
                                     47 ; paged external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area PSEG    (PAG,XDATA)
                                     50 ;--------------------------------------------------------
                                     51 ; uninitialized external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area XSEG    (XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XABS    (ABS,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; initialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XISEG   (XDATA)
                                     62 	.area HOME    (CODE)
                                     63 	.area GSINIT0 (CODE)
                                     64 	.area GSINIT1 (CODE)
                                     65 	.area GSINIT2 (CODE)
                                     66 	.area GSINIT3 (CODE)
                                     67 	.area GSINIT4 (CODE)
                                     68 	.area GSINIT5 (CODE)
                                     69 	.area GSINIT  (CODE)
                                     70 	.area GSFINAL (CODE)
                                     71 	.area CSEG    (CODE)
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area HOME    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; code
                                     86 ;--------------------------------------------------------
                                     87 	.area CSEG    (CODE)
                                     88 ;------------------------------------------------------------
                                     89 ;Allocation info for local variables in function '_divlong_dummy'
                                     90 ;------------------------------------------------------------
                                     91 ;	_divulong.c:198: _divlong_dummy (void) __naked
                                     92 ;	-----------------------------------------
                                     93 ;	 function _divlong_dummy
                                     94 ;	-----------------------------------------
      000000                         95 __divlong_dummy:
                                     96 ;	naked function: no prologue.
                                     97 ;	_divulong.c:329: __endasm;
                                     98 	.globl	__divulong
      000000                         99 __divulong:
                                    100 	.globl	__divlong ; entry point for __divslong
                                    101 ;	parameter x comes in a, b, dph, dpl
      000000 FB               [12]  102 	mov	r3,a ; save parameter r3
      000001 E5 81            [12]  103 	mov	a,sp
      000003 24 FB            [12]  104 	add	a,#-2-3 ; 2 bytes return address, 3 bytes param y
      000005 F8               [12]  105 	mov	r0,a ; r0 points to r1
      000006                        106 __divlong:
                                    107 ; entry point for __divslong
      000006 E6               [12]  108 	mov	a,@r0 ; load r1
      000007 F9               [12]  109 	mov	r1,a
      000008 08               [12]  110 	inc	r0 ; r0 points to y1
      000009 7A 20            [12]  111 	mov	r2,#32
      00000B E4               [12]  112 	clr	a
      00000C FC               [12]  113 	mov	r4,a
      00000D FD               [12]  114 	mov	r5,a
      00000E FE               [12]  115 	mov	r6,a
      00000F FF               [12]  116 	mov	r7,a
                                    117 ;	optimization loop in lp0 until the first bit is shifted into rest
      000010                        118 lp0:
      000010 E5 82            [12]  119 	mov a,dpl ; x <<= 1
      000012 25 82            [12]  120 	add	a,dpl
      000014 F5 82            [12]  121 	mov	dpl,a
      000016 E5 83            [12]  122 	mov	a,dph
      000018 33               [12]  123 	rlc	a
      000019 F5 83            [12]  124 	mov	dph,a
      00001B E5 F0            [12]  125 	mov	a,b
      00001D 33               [12]  126 	rlc	a
      00001E F5 F0            [12]  127 	mov	b,a
      000020 EB               [12]  128 	mov	a,r3
      000021 33               [12]  129 	rlc	a
      000022 FB               [12]  130 	mov	r3,a
      000023 40 17            [24]  131 	jc	in_lp
      000025 DA E9            [24]  132 	djnz	r2,lp0
      000027 80 42            [24]  133 	sjmp	exit
      000029                        134 loop:
      000029 E5 82            [12]  135 	mov a,dpl ; x <<= 1
      00002B 25 82            [12]  136 	add	a,dpl
      00002D F5 82            [12]  137 	mov	dpl,a
      00002F E5 83            [12]  138 	mov	a,dph
      000031 33               [12]  139 	rlc	a
      000032 F5 83            [12]  140 	mov	dph,a
      000034 E5 F0            [12]  141 	mov	a,b
      000036 33               [12]  142 	rlc	a
      000037 F5 F0            [12]  143 	mov	b,a
      000039 EB               [12]  144 	mov	a,r3
      00003A 33               [12]  145 	rlc	a
      00003B FB               [12]  146 	mov	r3,a
      00003C                        147 in_lp:
      00003C EC               [12]  148 	mov a,r4 ; reste <<= 1
      00003D 33               [12]  149 	rlc	a ; feed in carry
      00003E FC               [12]  150 	mov	r4,a
      00003F ED               [12]  151 	mov	a,r5
      000040 33               [12]  152 	rlc	a
      000041 FD               [12]  153 	mov	r5,a
      000042 EE               [12]  154 	mov	a,r6
      000043 33               [12]  155 	rlc	a
      000044 FE               [12]  156 	mov	r6,a
      000045 EF               [12]  157 	mov	a,r7
      000046 33               [12]  158 	rlc	a
      000047 FF               [12]  159 	mov	r7,a
      000048 EC               [12]  160 	mov	a,r4 ; reste - y
      000049 99               [12]  161 	subb	a,r1 ; carry is always clear here, because
                                    162 ;	reste <<= 1 never overflows
      00004A ED               [12]  163 	mov	a,r5
      00004B 96               [12]  164 	subb	a,@r0 ; y1
      00004C EE               [12]  165 	mov	a,r6
      00004D 08               [12]  166 	inc	r0
      00004E 96               [12]  167 	subb	a,@r0 ; y2
      00004F EF               [12]  168 	mov	a,r7
      000050 08               [12]  169 	inc	r0
      000051 96               [12]  170 	subb	a,@r0 ; y3
      000052 18               [12]  171 	dec	r0
      000053 18               [12]  172 	dec	r0
      000054 40 13            [24]  173 	jc	minus ; reste >= y?
                                    174 ;	-> yes; reste -= y;
      000056 EC               [12]  175 	mov	a,r4
      000057 99               [12]  176 	subb	a,r1 ; carry is always clear here (jc)
      000058 FC               [12]  177 	mov	r4,a
      000059 ED               [12]  178 	mov	a,r5
      00005A 96               [12]  179 	subb	a,@r0 ; y1
      00005B FD               [12]  180 	mov	r5,a
      00005C EE               [12]  181 	mov	a,r6
      00005D 08               [12]  182 	inc	r0
      00005E 96               [12]  183 	subb	a,@r0 ; y2
      00005F FE               [12]  184 	mov	r6,a
      000060 EF               [12]  185 	mov	a,r7
      000061 08               [12]  186 	inc	r0
      000062 96               [12]  187 	subb	a,@r0 ; y3
      000063 FF               [12]  188 	mov	r7,a
      000064 18               [12]  189 	dec	r0
      000065 18               [12]  190 	dec	r0
      000066 43 82 01         [24]  191 	orl	dpl,#1
      000069                        192 minus:
      000069 DA BE            [24]  193 	djnz r2,loop ; -> no
      00006B                        194 exit:
      00006B EB               [12]  195 	mov a,r3 ; prepare the return value
      00006C 22               [24]  196 	ret
                                    197 ;	_divulong.c:330: }
                                    198 ;	naked function: no epilogue.
                                    199 	.area CSEG    (CODE)
                                    200 	.area CONST   (CODE)
                                    201 	.area XINIT   (CODE)
                                    202 	.area CABS    (ABS,CODE)
