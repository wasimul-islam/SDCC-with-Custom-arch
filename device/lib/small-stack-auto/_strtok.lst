                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strtok
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strtok
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _strtok_s_65536_27:
      000000                         33 	.ds 3
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'strtok'
                                     94 ;------------------------------------------------------------
                                     95 ;control                   Allocated to stack - _bp -5
                                     96 ;str                       Allocated to registers r5 r6 r7 
                                     97 ;s1                        Allocated to registers r5 r6 r7 
                                     98 ;s                         Allocated with name '_strtok_s_65536_27'
                                     99 ;------------------------------------------------------------
                                    100 ;	_strtok.c:36: char * strtok ( char * str, const char * control )
                                    101 ;	-----------------------------------------
                                    102 ;	 function strtok
                                    103 ;	-----------------------------------------
      000000                        104 _strtok:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 AD 82            [24]  115 	mov	r5,dpl
      000007 AE 83            [24]  116 	mov	r6,dph
      000009 AF F0            [24]  117 	mov	r7,b
                                    118 ;	_strtok.c:41: if ( str )
      00000B ED               [12]  119 	mov	a,r5
      00000C 4E               [12]  120 	orl	a,r6
      00000D 60 06            [24]  121 	jz	00102$
                                    122 ;	_strtok.c:42: s = str;
      00000F 8D*00            [24]  123 	mov	_strtok_s_65536_27,r5
      000011 8E*01            [24]  124 	mov	(_strtok_s_65536_27 + 1),r6
      000013 8F*02            [24]  125 	mov	(_strtok_s_65536_27 + 2),r7
      000015                        126 00102$:
                                    127 ;	_strtok.c:43: if ( !s )
      000015 E5*00            [12]  128 	mov	a,_strtok_s_65536_27
      000017 45*01            [12]  129 	orl	a,(_strtok_s_65536_27 + 1)
                                    130 ;	_strtok.c:44: return NULL;
      000019 70 08            [24]  131 	jnz	00108$
      00001B 90 00 00         [24]  132 	mov	dptr,#0x0000
      00001E F5 F0            [12]  133 	mov	b,a
      000020 02r01r04         [24]  134 	ljmp	00119$
                                    135 ;	_strtok.c:46: while (*s) {
      000023                        136 00108$:
      000023 AD*00            [24]  137 	mov	r5,_strtok_s_65536_27
      000025 AE*01            [24]  138 	mov	r6,(_strtok_s_65536_27 + 1)
      000027 AF*02            [24]  139 	mov	r7,(_strtok_s_65536_27 + 2)
      000029 8D 82            [24]  140 	mov	dpl,r5
      00002B 8E 83            [24]  141 	mov	dph,r6
      00002D 8F F0            [24]  142 	mov	b,r7
      00002F 12r00r00         [24]  143 	lcall	__gptrget
      000032 60 38            [24]  144 	jz	00110$
                                    145 ;	_strtok.c:47: if (strchr(control,*s))
      000034 AD*00            [24]  146 	mov	r5,_strtok_s_65536_27
      000036 AE*01            [24]  147 	mov	r6,(_strtok_s_65536_27 + 1)
      000038 AF*02            [24]  148 	mov	r7,(_strtok_s_65536_27 + 2)
      00003A 8D 82            [24]  149 	mov	dpl,r5
      00003C 8E 83            [24]  150 	mov	dph,r6
      00003E 8F F0            [24]  151 	mov	b,r7
      000040 12r00r00         [24]  152 	lcall	__gptrget
      000043 FD               [12]  153 	mov	r5,a
      000044 C0 05            [24]  154 	push	ar5
      000046 E5*00            [12]  155 	mov	a,_bp
      000048 24 FB            [12]  156 	add	a,#0xfb
      00004A F8               [12]  157 	mov	r0,a
      00004B 86 82            [24]  158 	mov	dpl,@r0
      00004D 08               [12]  159 	inc	r0
      00004E 86 83            [24]  160 	mov	dph,@r0
      000050 08               [12]  161 	inc	r0
      000051 86 F0            [24]  162 	mov	b,@r0
      000053 12r00r00         [24]  163 	lcall	_strchr
      000056 AD 82            [24]  164 	mov	r5,dpl
      000058 AE 83            [24]  165 	mov	r6,dph
      00005A AF F0            [24]  166 	mov	r7,b
      00005C 15 81            [12]  167 	dec	sp
      00005E ED               [12]  168 	mov	a,r5
      00005F 4E               [12]  169 	orl	a,r6
      000060 60 0A            [24]  170 	jz	00110$
                                    171 ;	_strtok.c:48: s++;
      000062 05*00            [12]  172 	inc	_strtok_s_65536_27
      000064 E4               [12]  173 	clr	a
                                    174 ;	_strtok.c:50: break;
      000065 B5*00 BB         [24]  175 	cjne	a,_strtok_s_65536_27,00108$
      000068 05*01            [12]  176 	inc	(_strtok_s_65536_27 + 1)
      00006A 80 B7            [24]  177 	sjmp	00108$
      00006C                        178 00110$:
                                    179 ;	_strtok.c:53: s1 = s;
      00006C AD*00            [24]  180 	mov	r5,_strtok_s_65536_27
      00006E AE*01            [24]  181 	mov	r6,(_strtok_s_65536_27 + 1)
      000070 AF*02            [24]  182 	mov	r7,(_strtok_s_65536_27 + 2)
                                    183 ;	_strtok.c:55: while (*s) {
      000072                        184 00113$:
      000072 AA*00            [24]  185 	mov	r2,_strtok_s_65536_27
      000074 AB*01            [24]  186 	mov	r3,(_strtok_s_65536_27 + 1)
      000076 AC*02            [24]  187 	mov	r4,(_strtok_s_65536_27 + 2)
      000078 8A 82            [24]  188 	mov	dpl,r2
      00007A 8B 83            [24]  189 	mov	dph,r3
      00007C 8C F0            [24]  190 	mov	b,r4
      00007E 12r00r00         [24]  191 	lcall	__gptrget
      000081 60 61            [24]  192 	jz	00115$
                                    193 ;	_strtok.c:56: if (strchr(control,*s)) {
      000083 AA*00            [24]  194 	mov	r2,_strtok_s_65536_27
      000085 AB*01            [24]  195 	mov	r3,(_strtok_s_65536_27 + 1)
      000087 AC*02            [24]  196 	mov	r4,(_strtok_s_65536_27 + 2)
      000089 8A 82            [24]  197 	mov	dpl,r2
      00008B 8B 83            [24]  198 	mov	dph,r3
      00008D 8C F0            [24]  199 	mov	b,r4
      00008F 12r00r00         [24]  200 	lcall	__gptrget
      000092 FA               [12]  201 	mov	r2,a
      000093 C0 07            [24]  202 	push	ar7
      000095 C0 06            [24]  203 	push	ar6
      000097 C0 05            [24]  204 	push	ar5
      000099 C0 02            [24]  205 	push	ar2
      00009B E5*00            [12]  206 	mov	a,_bp
      00009D 24 FB            [12]  207 	add	a,#0xfb
      00009F F8               [12]  208 	mov	r0,a
      0000A0 86 82            [24]  209 	mov	dpl,@r0
      0000A2 08               [12]  210 	inc	r0
      0000A3 86 83            [24]  211 	mov	dph,@r0
      0000A5 08               [12]  212 	inc	r0
      0000A6 86 F0            [24]  213 	mov	b,@r0
      0000A8 12r00r00         [24]  214 	lcall	_strchr
      0000AB AA 82            [24]  215 	mov	r2,dpl
      0000AD AB 83            [24]  216 	mov	r3,dph
      0000AF 15 81            [12]  217 	dec	sp
      0000B1 D0 05            [24]  218 	pop	ar5
      0000B3 D0 06            [24]  219 	pop	ar6
      0000B5 D0 07            [24]  220 	pop	ar7
      0000B7 EA               [12]  221 	mov	a,r2
      0000B8 4B               [12]  222 	orl	a,r3
      0000B9 60 1F            [24]  223 	jz	00112$
                                    224 ;	_strtok.c:57: *s++ = '\0';
      0000BB AA*00            [24]  225 	mov	r2,_strtok_s_65536_27
      0000BD AB*01            [24]  226 	mov	r3,(_strtok_s_65536_27 + 1)
      0000BF AC*02            [24]  227 	mov	r4,(_strtok_s_65536_27 + 2)
      0000C1 8A 82            [24]  228 	mov	dpl,r2
      0000C3 8B 83            [24]  229 	mov	dph,r3
      0000C5 8C F0            [24]  230 	mov	b,r4
      0000C7 E4               [12]  231 	clr	a
      0000C8 12r00r00         [24]  232 	lcall	__gptrput
      0000CB 05*00            [12]  233 	inc	_strtok_s_65536_27
      0000CD B5*00 02         [24]  234 	cjne	a,_strtok_s_65536_27,00164$
      0000D0 05*01            [12]  235 	inc	(_strtok_s_65536_27 + 1)
      0000D2                        236 00164$:
                                    237 ;	_strtok.c:58: return s1;
      0000D2 8D 82            [24]  238 	mov	dpl,r5
      0000D4 8E 83            [24]  239 	mov	dph,r6
      0000D6 8F F0            [24]  240 	mov	b,r7
      0000D8 80 2A            [24]  241 	sjmp	00119$
      0000DA                        242 00112$:
                                    243 ;	_strtok.c:60: s++ ;
      0000DA 05*00            [12]  244 	inc	_strtok_s_65536_27
      0000DC E4               [12]  245 	clr	a
      0000DD B5*00 92         [24]  246 	cjne	a,_strtok_s_65536_27,00113$
      0000E0 05*01            [12]  247 	inc	(_strtok_s_65536_27 + 1)
      0000E2 80 8E            [24]  248 	sjmp	00113$
      0000E4                        249 00115$:
                                    250 ;	_strtok.c:63: s = NULL;
      0000E4 E4               [12]  251 	clr	a
      0000E5 F5*00            [12]  252 	mov	_strtok_s_65536_27,a
      0000E7 F5*01            [12]  253 	mov	(_strtok_s_65536_27 + 1),a
      0000E9 F5*02            [12]  254 	mov	(_strtok_s_65536_27 + 2),a
                                    255 ;	_strtok.c:65: if (*s1)
      0000EB 8D 82            [24]  256 	mov	dpl,r5
      0000ED 8E 83            [24]  257 	mov	dph,r6
      0000EF 8F F0            [24]  258 	mov	b,r7
      0000F1 12r00r00         [24]  259 	lcall	__gptrget
      0000F4 60 08            [24]  260 	jz	00117$
                                    261 ;	_strtok.c:66: return s1;
      0000F6 8D 82            [24]  262 	mov	dpl,r5
      0000F8 8E 83            [24]  263 	mov	dph,r6
      0000FA 8F F0            [24]  264 	mov	b,r7
      0000FC 80 06            [24]  265 	sjmp	00119$
      0000FE                        266 00117$:
                                    267 ;	_strtok.c:68: return NULL;
      0000FE 90 00 00         [24]  268 	mov	dptr,#0x0000
      000101 75 F0 00         [24]  269 	mov	b,#0x00
      000104                        270 00119$:
                                    271 ;	_strtok.c:69: }
      000104 D0*00            [24]  272 	pop	_bp
      000106 22               [24]  273 	ret
                                    274 	.area CSEG    (CODE)
                                    275 	.area CONST   (CODE)
                                    276 	.area XINIT   (CODE)
                                    277 	.area CABS    (ABS,CODE)
