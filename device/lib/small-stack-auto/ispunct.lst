                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ispunct
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _isalnum
                                     12 	.globl _isspace
                                     13 	.globl _isprint
                                     14 	.globl _ispunct
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; overlayable bit register bank
                                     32 ;--------------------------------------------------------
                                     33 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         34 bits:
      000000                         35 	.ds 1
                           008000    36 	b0 = bits[0]
                           008100    37 	b1 = bits[1]
                           008200    38 	b2 = bits[2]
                           008300    39 	b3 = bits[3]
                           008400    40 	b4 = bits[4]
                           008500    41 	b5 = bits[5]
                           008600    42 	b6 = bits[6]
                           008700    43 	b7 = bits[7]
                                     44 ;--------------------------------------------------------
                                     45 ; internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area DSEG    (DATA)
                                     48 ;--------------------------------------------------------
                                     49 ; overlayable items in internal ram
                                     50 ;--------------------------------------------------------
                                     51 ;--------------------------------------------------------
                                     52 ; indirectly addressable internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area ISEG    (DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute internal ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area IABS    (ABS,DATA)
                                     59 	.area IABS    (ABS,DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; bit data
                                     62 ;--------------------------------------------------------
                                     63 	.area BSEG    (BIT)
                                     64 ;--------------------------------------------------------
                                     65 ; paged external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area PSEG    (PAG,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; uninitialized external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XSEG    (XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; absolute external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XABS    (ABS,XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; initialized external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XISEG   (XDATA)
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT0 (CODE)
                                     82 	.area GSINIT1 (CODE)
                                     83 	.area GSINIT2 (CODE)
                                     84 	.area GSINIT3 (CODE)
                                     85 	.area GSINIT4 (CODE)
                                     86 	.area GSINIT5 (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area CSEG    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 	.area GSFINAL (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area HOME    (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area CSEG    (CODE)
                                    106 ;------------------------------------------------------------
                                    107 ;Allocation info for local variables in function 'ispunct'
                                    108 ;------------------------------------------------------------
                                    109 ;c                         Allocated to registers r6 r7 
                                    110 ;------------------------------------------------------------
                                    111 ;	ispunct.c:33: int ispunct (int c)
                                    112 ;	-----------------------------------------
                                    113 ;	 function ispunct
                                    114 ;	-----------------------------------------
      000000                        115 _ispunct:
                           000007   116 	ar7 = 0x07
                           000006   117 	ar6 = 0x06
                           000005   118 	ar5 = 0x05
                           000004   119 	ar4 = 0x04
                           000003   120 	ar3 = 0x03
                           000002   121 	ar2 = 0x02
                           000001   122 	ar1 = 0x01
                           000000   123 	ar0 = 0x00
                                    124 ;	ispunct.c:35: return (isprint (c) && !isspace (c) && !isalnum (c));
      000000 AE 82            [24]  125 	mov	r6,dpl
      000002 AF 83            [24]  126 	mov  r7,dph
      000004 C0 07            [24]  127 	push	ar7
      000006 C0 06            [24]  128 	push	ar6
      000008 12r00r00         [24]  129 	lcall	_isprint
      00000B E5 82            [12]  130 	mov	a,dpl
      00000D 85 83 F0         [24]  131 	mov	b,dph
      000010 D0 06            [24]  132 	pop	ar6
      000012 D0 07            [24]  133 	pop	ar7
      000014 45 F0            [12]  134 	orl	a,b
      000016 60 26            [24]  135 	jz	00103$
      000018 8E 82            [24]  136 	mov	dpl,r6
      00001A 8F 83            [24]  137 	mov	dph,r7
      00001C C0 07            [24]  138 	push	ar7
      00001E C0 06            [24]  139 	push	ar6
      000020 12r00r00         [24]  140 	lcall	_isspace
      000023 AC 82            [24]  141 	mov	r4,dpl
      000025 AD 83            [24]  142 	mov	r5,dph
      000027 D0 06            [24]  143 	pop	ar6
      000029 D0 07            [24]  144 	pop	ar7
      00002B EC               [12]  145 	mov	a,r4
      00002C 4D               [12]  146 	orl	a,r5
      00002D 70 0F            [24]  147 	jnz	00103$
      00002F 8E 82            [24]  148 	mov	dpl,r6
      000031 8F 83            [24]  149 	mov	dph,r7
      000033 12r00r00         [24]  150 	lcall	_isalnum
      000036 AE 82            [24]  151 	mov	r6,dpl
      000038 AF 83            [24]  152 	mov	r7,dph
      00003A EE               [12]  153 	mov	a,r6
      00003B 4F               [12]  154 	orl	a,r7
      00003C 60 04            [24]  155 	jz	00104$
      00003E                        156 00103$:
                                    157 ;	assignBit
      00003E C2*00            [12]  158 	clr	b0
      000040 80 02            [24]  159 	sjmp	00105$
      000042                        160 00104$:
                                    161 ;	assignBit
      000042 D2*00            [12]  162 	setb	b0
      000044                        163 00105$:
      000044 A2*00            [12]  164 	mov	c,b0
      000046 E4               [12]  165 	clr	a
      000047 33               [12]  166 	rlc	a
      000048 FE               [12]  167 	mov	r6,a
      000049 7F 00            [12]  168 	mov	r7,#0x00
      00004B 8E 82            [24]  169 	mov	dpl,r6
      00004D 8F 83            [24]  170 	mov	dph,r7
                                    171 ;	ispunct.c:36: }
      00004F 22               [24]  172 	ret
                                    173 	.area CSEG    (CODE)
                                    174 	.area CONST   (CODE)
                                    175 	.area XINIT   (CODE)
                                    176 	.area CABS    (ABS,CODE)
