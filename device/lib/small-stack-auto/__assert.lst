                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __assert
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___assert
                                     12 	.globl _printf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; initialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function '__assert'
                                     92 ;------------------------------------------------------------
                                     93 ;functionname              Allocated to stack - _bp -5
                                     94 ;filename                  Allocated to stack - _bp -8
                                     95 ;linenumber                Allocated to stack - _bp -10
                                     96 ;expression                Allocated to registers r5 r6 r7 
                                     97 ;------------------------------------------------------------
                                     98 ;	__assert.c:32: void __assert(const char *expression, const char *functionname, const char *filename, unsigned int linenumber)
                                     99 ;	-----------------------------------------
                                    100 ;	 function __assert
                                    101 ;	-----------------------------------------
      000000                        102 ___assert:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 AD 82            [24]  113 	mov	r5,dpl
      000007 AE 83            [24]  114 	mov	r6,dph
      000009 AF F0            [24]  115 	mov	r7,b
                                    116 ;	__assert.c:34: printf("Assert(%s) failed in function %s at line %u in file %s.\n",
      00000B E5*00            [12]  117 	mov	a,_bp
      00000D 24 F8            [12]  118 	add	a,#0xf8
      00000F F8               [12]  119 	mov	r0,a
      000010 E6               [12]  120 	mov	a,@r0
      000011 C0 E0            [24]  121 	push	acc
      000013 08               [12]  122 	inc	r0
      000014 E6               [12]  123 	mov	a,@r0
      000015 C0 E0            [24]  124 	push	acc
      000017 08               [12]  125 	inc	r0
      000018 E6               [12]  126 	mov	a,@r0
      000019 C0 E0            [24]  127 	push	acc
      00001B E5*00            [12]  128 	mov	a,_bp
      00001D 24 F6            [12]  129 	add	a,#0xf6
      00001F F8               [12]  130 	mov	r0,a
      000020 E6               [12]  131 	mov	a,@r0
      000021 C0 E0            [24]  132 	push	acc
      000023 08               [12]  133 	inc	r0
      000024 E6               [12]  134 	mov	a,@r0
      000025 C0 E0            [24]  135 	push	acc
      000027 E5*00            [12]  136 	mov	a,_bp
      000029 24 FB            [12]  137 	add	a,#0xfb
      00002B F8               [12]  138 	mov	r0,a
      00002C E6               [12]  139 	mov	a,@r0
      00002D C0 E0            [24]  140 	push	acc
      00002F 08               [12]  141 	inc	r0
      000030 E6               [12]  142 	mov	a,@r0
      000031 C0 E0            [24]  143 	push	acc
      000033 08               [12]  144 	inc	r0
      000034 E6               [12]  145 	mov	a,@r0
      000035 C0 E0            [24]  146 	push	acc
      000037 C0 05            [24]  147 	push	ar5
      000039 C0 06            [24]  148 	push	ar6
      00003B C0 07            [24]  149 	push	ar7
      00003D 74r00            [12]  150 	mov	a,#___str_0
      00003F C0 E0            [24]  151 	push	acc
      000041 74s00            [12]  152 	mov	a,#(___str_0 >> 8)
      000043 C0 E0            [24]  153 	push	acc
      000045 74 80            [12]  154 	mov	a,#0x80
      000047 C0 E0            [24]  155 	push	acc
      000049 12r00r00         [24]  156 	lcall	_printf
      00004C E5 81            [12]  157 	mov	a,sp
      00004E 24 F2            [12]  158 	add	a,#0xf2
      000050 F5 81            [12]  159 	mov	sp,a
      000052                        160 00103$:
      000052 80 FE            [24]  161 	sjmp	00103$
                                    162 ;	__assert.c:37: }
      000054 D0*00            [24]  163 	pop	_bp
      000056 22               [24]  164 	ret
                                    165 	.area CSEG    (CODE)
                                    166 	.area CONST   (CODE)
                                    167 	.area CONST   (CODE)
      000000                        168 ___str_0:
      000000 41 73 73 65 72 74 28   169 	.ascii "Assert(%s) failed in function %s at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 69 6E 20
             66 75 6E 63 74 69 6F
             6E 20 25 73 20 61 74
             20 6C 69 6E 65 20 25
             75 20 69 6E 20 66 69
             6C 65 20 25 73 2E
      000037 0A                     170 	.db 0x0a
      000038 00                     171 	.db 0x00
                                    172 	.area CSEG    (CODE)
                                    173 	.area XINIT   (CODE)
                                    174 	.area CABS    (ABS,CODE)
