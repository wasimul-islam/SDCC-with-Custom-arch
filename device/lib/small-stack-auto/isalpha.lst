                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module isalpha
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _isalpha
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; overlayable bit register bank
                                     29 ;--------------------------------------------------------
                                     30 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         31 bits:
      000000                         32 	.ds 1
                           008000    33 	b0 = bits[0]
                           008100    34 	b1 = bits[1]
                           008200    35 	b2 = bits[2]
                           008300    36 	b3 = bits[3]
                           008400    37 	b4 = bits[4]
                           008500    38 	b5 = bits[5]
                           008600    39 	b6 = bits[6]
                           008700    40 	b7 = bits[7]
                                     41 ;--------------------------------------------------------
                                     42 ; internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area DSEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; overlayable items in internal ram
                                     47 ;--------------------------------------------------------
                                     48 ;--------------------------------------------------------
                                     49 ; indirectly addressable internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area ISEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; absolute internal ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area IABS    (ABS,DATA)
                                     56 	.area IABS    (ABS,DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; bit data
                                     59 ;--------------------------------------------------------
                                     60 	.area BSEG    (BIT)
                                     61 ;--------------------------------------------------------
                                     62 ; paged external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area PSEG    (PAG,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; uninitialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XSEG    (XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; absolute external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XABS    (ABS,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; initialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XISEG   (XDATA)
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT0 (CODE)
                                     79 	.area GSINIT1 (CODE)
                                     80 	.area GSINIT2 (CODE)
                                     81 	.area GSINIT3 (CODE)
                                     82 	.area GSINIT4 (CODE)
                                     83 	.area GSINIT5 (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area CSEG    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'isalpha'
                                    105 ;------------------------------------------------------------
                                    106 ;c                         Allocated to registers r6 r7 
                                    107 ;__1310720004              Allocated to registers 
                                    108 ;__1310720001              Allocated to registers 
                                    109 ;__1310720002              Allocated to registers 
                                    110 ;c                         Allocated to registers 
                                    111 ;__1310720005              Allocated to registers 
                                    112 ;c                         Allocated to registers 
                                    113 ;------------------------------------------------------------
                                    114 ;	isalpha.c:37: int isalpha (int c)
                                    115 ;	-----------------------------------------
                                    116 ;	 function isalpha
                                    117 ;	-----------------------------------------
      000000                        118 _isalpha:
                           000007   119 	ar7 = 0x07
                           000006   120 	ar6 = 0x06
                           000005   121 	ar5 = 0x05
                           000004   122 	ar4 = 0x04
                           000003   123 	ar3 = 0x03
                           000002   124 	ar2 = 0x02
                           000001   125 	ar1 = 0x01
                           000000   126 	ar0 = 0x00
      000000 AE 82            [24]  127 	mov	r6,dpl
                                    128 ;	../../device/include/ctype.h:80: return ((unsigned char)c >= 'A' && (unsigned char)c <= 'Z');
      000002 BE 41 00         [24]  129 	cjne	r6,#0x41,00124$
      000005                        130 00124$:
      000005 92*00            [24]  131 	mov	b0,c
      000007 40 07            [24]  132 	jc	00110$
      000009 EE               [12]  133 	mov	a,r6
      00000A 24 A5            [12]  134 	add	a,#0xff - 0x5a
      00000C 92*00            [24]  135 	mov	b0,c
      00000E 50 12            [24]  136 	jnc	00106$
      000010                        137 00110$:
                                    138 ;	../../device/include/ctype.h:71: return ((unsigned char)c >= 'a' && (unsigned char)c <= 'z');
      000010 BE 61 00         [24]  139 	cjne	r6,#0x61,00127$
      000013                        140 00127$:
      000013 92*00            [24]  141 	mov	b0,c
      000015 40 07            [24]  142 	jc	00113$
      000017 EE               [12]  143 	mov	a,r6
      000018 24 85            [12]  144 	add	a,#0xff - 0x7a
      00001A 92*00            [24]  145 	mov	b0,c
      00001C 50 04            [24]  146 	jnc	00106$
      00001E                        147 00113$:
                                    148 ;	isalpha.c:39: return (isupper (c) || islower (c));
                                    149 ;	assignBit
      00001E C2*00            [12]  150 	clr	b0
      000020 80 02            [24]  151 	sjmp	00107$
      000022                        152 00106$:
                                    153 ;	assignBit
      000022 D2*00            [12]  154 	setb	b0
      000024                        155 00107$:
      000024 A2*00            [12]  156 	mov	c,b0
      000026 E4               [12]  157 	clr	a
      000027 33               [12]  158 	rlc	a
      000028 FE               [12]  159 	mov	r6,a
      000029 7F 00            [12]  160 	mov	r7,#0x00
      00002B 8E 82            [24]  161 	mov	dpl,r6
      00002D 8F 83            [24]  162 	mov	dph,r7
                                    163 ;	isalpha.c:40: }
      00002F 22               [24]  164 	ret
                                    165 	.area CSEG    (CODE)
                                    166 	.area CONST   (CODE)
                                    167 	.area XINIT   (CODE)
                                    168 	.area CABS    (ABS,CODE)
