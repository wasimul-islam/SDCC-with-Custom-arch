                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wctomb
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wctomb
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'wctomb'
                                     91 ;------------------------------------------------------------
                                     92 ;wc                        Allocated to stack - _bp -6
                                     93 ;s                         Allocated to stack - _bp +1
                                     94 ;sloc0                     Allocated to stack - _bp +4
                                     95 ;------------------------------------------------------------
                                     96 ;	wctomb.c:31: int wctomb(char *s, wchar_t wc)
                                     97 ;	-----------------------------------------
                                     98 ;	 function wctomb
                                     99 ;	-----------------------------------------
      000000                        100 _wctomb:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 85 81*00         [24]  110 	mov	_bp,sp
      000005 C0 82            [24]  111 	push	dpl
      000007 C0 83            [24]  112 	push	dph
      000009 C0 F0            [24]  113 	push	b
      00000B 05 81            [12]  114 	inc	sp
      00000D 05 81            [12]  115 	inc	sp
      00000F 05 81            [12]  116 	inc	sp
                                    117 ;	wctomb.c:33: if(!s)
      000011 A8*00            [24]  118 	mov	r0,_bp
      000013 08               [12]  119 	inc	r0
      000014 E6               [12]  120 	mov	a,@r0
      000015 08               [12]  121 	inc	r0
      000016 46               [12]  122 	orl	a,@r0
      000017 70 06            [24]  123 	jnz	00102$
                                    124 ;	wctomb.c:34: return(0);
      000019 90 00 00         [24]  125 	mov	dptr,#0x0000
      00001C 02r02r85         [24]  126 	ljmp	00119$
      00001F                        127 00102$:
                                    128 ;	wctomb.c:36: if(wc < 0x80)
      00001F E5*00            [12]  129 	mov	a,_bp
      000021 24 FA            [12]  130 	add	a,#0xfa
      000023 F8               [12]  131 	mov	r0,a
      000024 C3               [12]  132 	clr	c
      000025 E6               [12]  133 	mov	a,@r0
      000026 94 80            [12]  134 	subb	a,#0x80
      000028 08               [12]  135 	inc	r0
      000029 E6               [12]  136 	mov	a,@r0
      00002A 94 00            [12]  137 	subb	a,#0x00
      00002C 08               [12]  138 	inc	r0
      00002D E6               [12]  139 	mov	a,@r0
      00002E 94 00            [12]  140 	subb	a,#0x00
      000030 08               [12]  141 	inc	r0
      000031 E6               [12]  142 	mov	a,@r0
      000032 94 00            [12]  143 	subb	a,#0x00
      000034 50 1C            [24]  144 	jnc	00117$
                                    145 ;	wctomb.c:38: s[0] = wc;
      000036 E5*00            [12]  146 	mov	a,_bp
      000038 24 FA            [12]  147 	add	a,#0xfa
      00003A F8               [12]  148 	mov	r0,a
      00003B 86 04            [24]  149 	mov	ar4,@r0
      00003D A8*00            [24]  150 	mov	r0,_bp
      00003F 08               [12]  151 	inc	r0
      000040 86 82            [24]  152 	mov	dpl,@r0
      000042 08               [12]  153 	inc	r0
      000043 86 83            [24]  154 	mov	dph,@r0
      000045 08               [12]  155 	inc	r0
      000046 86 F0            [24]  156 	mov	b,@r0
      000048 EC               [12]  157 	mov	a,r4
      000049 12r00r00         [24]  158 	lcall	__gptrput
                                    159 ;	wctomb.c:39: return(1);
      00004C 90 00 01         [24]  160 	mov	dptr,#0x0001
      00004F 02r02r85         [24]  161 	ljmp	00119$
      000052                        162 00117$:
                                    163 ;	wctomb.c:41: else if(wc < 0x800)
      000052 E5*00            [12]  164 	mov	a,_bp
      000054 24 FA            [12]  165 	add	a,#0xfa
      000056 F8               [12]  166 	mov	r0,a
      000057 C3               [12]  167 	clr	c
      000058 08               [12]  168 	inc	r0
      000059 E6               [12]  169 	mov	a,@r0
      00005A 94 08            [12]  170 	subb	a,#0x08
      00005C 08               [12]  171 	inc	r0
      00005D E6               [12]  172 	mov	a,@r0
      00005E 94 00            [12]  173 	subb	a,#0x00
      000060 08               [12]  174 	inc	r0
      000061 E6               [12]  175 	mov	a,@r0
      000062 94 00            [12]  176 	subb	a,#0x00
      000064 50 58            [24]  177 	jnc	00114$
                                    178 ;	wctomb.c:43: s[0] = (wc >> 6) & 0x1f | 0xc0;
      000066 E5*00            [12]  179 	mov	a,_bp
      000068 24 FA            [12]  180 	add	a,#0xfa
      00006A F8               [12]  181 	mov	r0,a
      00006B 86 03            [24]  182 	mov	ar3,@r0
      00006D 08               [12]  183 	inc	r0
      00006E E6               [12]  184 	mov	a,@r0
      00006F A2 E7            [12]  185 	mov	c,acc.7
      000071 CB               [12]  186 	xch	a,r3
      000072 33               [12]  187 	rlc	a
      000073 CB               [12]  188 	xch	a,r3
      000074 33               [12]  189 	rlc	a
      000075 A2 E7            [12]  190 	mov	c,acc.7
      000077 CB               [12]  191 	xch	a,r3
      000078 33               [12]  192 	rlc	a
      000079 CB               [12]  193 	xch	a,r3
      00007A 33               [12]  194 	rlc	a
      00007B CB               [12]  195 	xch	a,r3
      00007C 54 03            [12]  196 	anl	a,#0x03
      00007E 53 03 1F         [24]  197 	anl	ar3,#0x1f
      000081 43 03 C0         [24]  198 	orl	ar3,#0xc0
      000084 A8*00            [24]  199 	mov	r0,_bp
      000086 08               [12]  200 	inc	r0
      000087 86 82            [24]  201 	mov	dpl,@r0
      000089 08               [12]  202 	inc	r0
      00008A 86 83            [24]  203 	mov	dph,@r0
      00008C 08               [12]  204 	inc	r0
      00008D 86 F0            [24]  205 	mov	b,@r0
      00008F EB               [12]  206 	mov	a,r3
      000090 12r00r00         [24]  207 	lcall	__gptrput
                                    208 ;	wctomb.c:44: s[1] = (wc >> 0) & 0x3f | 0x80;
      000093 A8*00            [24]  209 	mov	r0,_bp
      000095 08               [12]  210 	inc	r0
      000096 74 01            [12]  211 	mov	a,#0x01
      000098 26               [12]  212 	add	a,@r0
      000099 FF               [12]  213 	mov	r7,a
      00009A E4               [12]  214 	clr	a
      00009B 08               [12]  215 	inc	r0
      00009C 36               [12]  216 	addc	a,@r0
      00009D FE               [12]  217 	mov	r6,a
      00009E 08               [12]  218 	inc	r0
      00009F 86 05            [24]  219 	mov	ar5,@r0
      0000A1 E5*00            [12]  220 	mov	a,_bp
      0000A3 24 FA            [12]  221 	add	a,#0xfa
      0000A5 F8               [12]  222 	mov	r0,a
      0000A6 86 04            [24]  223 	mov	ar4,@r0
      0000A8 53 04 3F         [24]  224 	anl	ar4,#0x3f
      0000AB 43 04 80         [24]  225 	orl	ar4,#0x80
      0000AE 8F 82            [24]  226 	mov	dpl,r7
      0000B0 8E 83            [24]  227 	mov	dph,r6
      0000B2 8D F0            [24]  228 	mov	b,r5
      0000B4 EC               [12]  229 	mov	a,r4
      0000B5 12r00r00         [24]  230 	lcall	__gptrput
                                    231 ;	wctomb.c:45: return(2);
      0000B8 90 00 02         [24]  232 	mov	dptr,#0x0002
      0000BB 02r02r85         [24]  233 	ljmp	00119$
      0000BE                        234 00114$:
                                    235 ;	wctomb.c:47: else if(wc >= 0xd800 && wc < 0xe000) // Unpaired surrogate
      0000BE E5*00            [12]  236 	mov	a,_bp
      0000C0 24 FA            [12]  237 	add	a,#0xfa
      0000C2 F8               [12]  238 	mov	r0,a
      0000C3 C3               [12]  239 	clr	c
      0000C4 08               [12]  240 	inc	r0
      0000C5 E6               [12]  241 	mov	a,@r0
      0000C6 94 D8            [12]  242 	subb	a,#0xd8
      0000C8 08               [12]  243 	inc	r0
      0000C9 E6               [12]  244 	mov	a,@r0
      0000CA 94 00            [12]  245 	subb	a,#0x00
      0000CC 08               [12]  246 	inc	r0
      0000CD E6               [12]  247 	mov	a,@r0
      0000CE 94 00            [12]  248 	subb	a,#0x00
      0000D0 40 1A            [24]  249 	jc	00110$
      0000D2 E5*00            [12]  250 	mov	a,_bp
      0000D4 24 FA            [12]  251 	add	a,#0xfa
      0000D6 F8               [12]  252 	mov	r0,a
      0000D7 C3               [12]  253 	clr	c
      0000D8 08               [12]  254 	inc	r0
      0000D9 E6               [12]  255 	mov	a,@r0
      0000DA 94 E0            [12]  256 	subb	a,#0xe0
      0000DC 08               [12]  257 	inc	r0
      0000DD E6               [12]  258 	mov	a,@r0
      0000DE 94 00            [12]  259 	subb	a,#0x00
      0000E0 08               [12]  260 	inc	r0
      0000E1 E6               [12]  261 	mov	a,@r0
      0000E2 94 00            [12]  262 	subb	a,#0x00
      0000E4 50 06            [24]  263 	jnc	00110$
                                    264 ;	wctomb.c:48: return(-1);
      0000E6 90 FF FF         [24]  265 	mov	dptr,#0xffff
      0000E9 02r02r85         [24]  266 	ljmp	00119$
      0000EC                        267 00110$:
                                    268 ;	wctomb.c:49: else if(wc < 0x10000)
      0000EC E5*00            [12]  269 	mov	a,_bp
      0000EE 24 FA            [12]  270 	add	a,#0xfa
      0000F0 F8               [12]  271 	mov	r0,a
      0000F1 C3               [12]  272 	clr	c
      0000F2 08               [12]  273 	inc	r0
      0000F3 08               [12]  274 	inc	r0
      0000F4 E6               [12]  275 	mov	a,@r0
      0000F5 94 01            [12]  276 	subb	a,#0x01
      0000F7 08               [12]  277 	inc	r0
      0000F8 E6               [12]  278 	mov	a,@r0
      0000F9 94 00            [12]  279 	subb	a,#0x00
      0000FB 40 03            [24]  280 	jc	00154$
      0000FD 02r01r97         [24]  281 	ljmp	00107$
      000100                        282 00154$:
                                    283 ;	wctomb.c:51: s[0] = (wc >> 12) & 0x0f | 0xe0;
      000100 E5*00            [12]  284 	mov	a,_bp
      000102 24 FA            [12]  285 	add	a,#0xfa
      000104 F8               [12]  286 	mov	r0,a
      000105 08               [12]  287 	inc	r0
      000106 86 02            [24]  288 	mov	ar2,@r0
      000108 08               [12]  289 	inc	r0
      000109 E6               [12]  290 	mov	a,@r0
      00010A C4               [12]  291 	swap	a
      00010B CA               [12]  292 	xch	a,r2
      00010C C4               [12]  293 	swap	a
      00010D 54 0F            [12]  294 	anl	a,#0x0f
      00010F 6A               [12]  295 	xrl	a,r2
      000110 CA               [12]  296 	xch	a,r2
      000111 54 0F            [12]  297 	anl	a,#0x0f
      000113 CA               [12]  298 	xch	a,r2
      000114 6A               [12]  299 	xrl	a,r2
      000115 CA               [12]  300 	xch	a,r2
      000116 FB               [12]  301 	mov	r3,a
      000117 08               [12]  302 	inc	r0
      000118 E6               [12]  303 	mov	a,@r0
      000119 C4               [12]  304 	swap	a
      00011A 54 F0            [12]  305 	anl	a,#0xf0
      00011C 4B               [12]  306 	orl	a,r3
      00011D E6               [12]  307 	mov	a,@r0
      00011E C4               [12]  308 	swap	a
      00011F 54 0F            [12]  309 	anl	a,#0x0f
      000121 53 02 0F         [24]  310 	anl	ar2,#0x0f
      000124 43 02 E0         [24]  311 	orl	ar2,#0xe0
      000127 A8*00            [24]  312 	mov	r0,_bp
      000129 08               [12]  313 	inc	r0
      00012A 86 82            [24]  314 	mov	dpl,@r0
      00012C 08               [12]  315 	inc	r0
      00012D 86 83            [24]  316 	mov	dph,@r0
      00012F 08               [12]  317 	inc	r0
      000130 86 F0            [24]  318 	mov	b,@r0
      000132 EA               [12]  319 	mov	a,r2
      000133 12r00r00         [24]  320 	lcall	__gptrput
                                    321 ;	wctomb.c:52: s[1] = (wc >> 6) & 0x3f  | 0x80;
      000136 A8*00            [24]  322 	mov	r0,_bp
      000138 08               [12]  323 	inc	r0
      000139 74 01            [12]  324 	mov	a,#0x01
      00013B 26               [12]  325 	add	a,@r0
      00013C FD               [12]  326 	mov	r5,a
      00013D E4               [12]  327 	clr	a
      00013E 08               [12]  328 	inc	r0
      00013F 36               [12]  329 	addc	a,@r0
      000140 FE               [12]  330 	mov	r6,a
      000141 08               [12]  331 	inc	r0
      000142 86 07            [24]  332 	mov	ar7,@r0
      000144 E5*00            [12]  333 	mov	a,_bp
      000146 24 FA            [12]  334 	add	a,#0xfa
      000148 F8               [12]  335 	mov	r0,a
      000149 86 03            [24]  336 	mov	ar3,@r0
      00014B 08               [12]  337 	inc	r0
      00014C E6               [12]  338 	mov	a,@r0
      00014D A2 E7            [12]  339 	mov	c,acc.7
      00014F CB               [12]  340 	xch	a,r3
      000150 33               [12]  341 	rlc	a
      000151 CB               [12]  342 	xch	a,r3
      000152 33               [12]  343 	rlc	a
      000153 A2 E7            [12]  344 	mov	c,acc.7
      000155 CB               [12]  345 	xch	a,r3
      000156 33               [12]  346 	rlc	a
      000157 CB               [12]  347 	xch	a,r3
      000158 33               [12]  348 	rlc	a
      000159 CB               [12]  349 	xch	a,r3
      00015A 54 03            [12]  350 	anl	a,#0x03
      00015C 53 03 3F         [24]  351 	anl	ar3,#0x3f
      00015F 43 03 80         [24]  352 	orl	ar3,#0x80
      000162 8D 82            [24]  353 	mov	dpl,r5
      000164 8E 83            [24]  354 	mov	dph,r6
      000166 8F F0            [24]  355 	mov	b,r7
      000168 EB               [12]  356 	mov	a,r3
      000169 12r00r00         [24]  357 	lcall	__gptrput
                                    358 ;	wctomb.c:53: s[2] = (wc >> 0) & 0x3f  | 0x80;
      00016C A8*00            [24]  359 	mov	r0,_bp
      00016E 08               [12]  360 	inc	r0
      00016F 74 02            [12]  361 	mov	a,#0x02
      000171 26               [12]  362 	add	a,@r0
      000172 FD               [12]  363 	mov	r5,a
      000173 E4               [12]  364 	clr	a
      000174 08               [12]  365 	inc	r0
      000175 36               [12]  366 	addc	a,@r0
      000176 FE               [12]  367 	mov	r6,a
      000177 08               [12]  368 	inc	r0
      000178 86 07            [24]  369 	mov	ar7,@r0
      00017A E5*00            [12]  370 	mov	a,_bp
      00017C 24 FA            [12]  371 	add	a,#0xfa
      00017E F8               [12]  372 	mov	r0,a
      00017F 86 04            [24]  373 	mov	ar4,@r0
      000181 53 04 3F         [24]  374 	anl	ar4,#0x3f
      000184 43 04 80         [24]  375 	orl	ar4,#0x80
      000187 8D 82            [24]  376 	mov	dpl,r5
      000189 8E 83            [24]  377 	mov	dph,r6
      00018B 8F F0            [24]  378 	mov	b,r7
      00018D EC               [12]  379 	mov	a,r4
      00018E 12r00r00         [24]  380 	lcall	__gptrput
                                    381 ;	wctomb.c:54: return(3);
      000191 90 00 03         [24]  382 	mov	dptr,#0x0003
      000194 02r02r85         [24]  383 	ljmp	00119$
      000197                        384 00107$:
                                    385 ;	wctomb.c:56: else if(wc < 0x110000)
      000197 E5*00            [12]  386 	mov	a,_bp
      000199 24 FA            [12]  387 	add	a,#0xfa
      00019B F8               [12]  388 	mov	r0,a
      00019C C3               [12]  389 	clr	c
      00019D 08               [12]  390 	inc	r0
      00019E 08               [12]  391 	inc	r0
      00019F E6               [12]  392 	mov	a,@r0
      0001A0 94 11            [12]  393 	subb	a,#0x11
      0001A2 08               [12]  394 	inc	r0
      0001A3 E6               [12]  395 	mov	a,@r0
      0001A4 94 00            [12]  396 	subb	a,#0x00
      0001A6 40 03            [24]  397 	jc	00155$
      0001A8 02r02r82         [24]  398 	ljmp	00104$
      0001AB                        399 00155$:
                                    400 ;	wctomb.c:58: s[0] = (wc >> 18) & 0x07 | 0xf0;
      0001AB E5*00            [12]  401 	mov	a,_bp
      0001AD 24 FA            [12]  402 	add	a,#0xfa
      0001AF F8               [12]  403 	mov	r0,a
      0001B0 08               [12]  404 	inc	r0
      0001B1 08               [12]  405 	inc	r0
      0001B2 86 04            [24]  406 	mov	ar4,@r0
      0001B4 08               [12]  407 	inc	r0
      0001B5 E6               [12]  408 	mov	a,@r0
      0001B6 C3               [12]  409 	clr	c
      0001B7 13               [12]  410 	rrc	a
      0001B8 CC               [12]  411 	xch	a,r4
      0001B9 13               [12]  412 	rrc	a
      0001BA CC               [12]  413 	xch	a,r4
      0001BB C3               [12]  414 	clr	c
      0001BC 13               [12]  415 	rrc	a
      0001BD CC               [12]  416 	xch	a,r4
      0001BE 13               [12]  417 	rrc	a
      0001BF CC               [12]  418 	xch	a,r4
      0001C0 53 04 07         [24]  419 	anl	ar4,#0x07
      0001C3 43 04 F0         [24]  420 	orl	ar4,#0xf0
      0001C6 A8*00            [24]  421 	mov	r0,_bp
      0001C8 08               [12]  422 	inc	r0
      0001C9 86 82            [24]  423 	mov	dpl,@r0
      0001CB 08               [12]  424 	inc	r0
      0001CC 86 83            [24]  425 	mov	dph,@r0
      0001CE 08               [12]  426 	inc	r0
      0001CF 86 F0            [24]  427 	mov	b,@r0
      0001D1 EC               [12]  428 	mov	a,r4
      0001D2 12r00r00         [24]  429 	lcall	__gptrput
                                    430 ;	wctomb.c:59: s[1] = (wc >> 12) & 0x3f | 0x80;
      0001D5 A8*00            [24]  431 	mov	r0,_bp
      0001D7 08               [12]  432 	inc	r0
      0001D8 E5*00            [12]  433 	mov	a,_bp
      0001DA 24 04            [12]  434 	add	a,#0x04
      0001DC F9               [12]  435 	mov	r1,a
      0001DD 74 01            [12]  436 	mov	a,#0x01
      0001DF 26               [12]  437 	add	a,@r0
      0001E0 F7               [12]  438 	mov	@r1,a
      0001E1 E4               [12]  439 	clr	a
      0001E2 08               [12]  440 	inc	r0
      0001E3 36               [12]  441 	addc	a,@r0
      0001E4 09               [12]  442 	inc	r1
      0001E5 F7               [12]  443 	mov	@r1,a
      0001E6 08               [12]  444 	inc	r0
      0001E7 E6               [12]  445 	mov	a,@r0
      0001E8 09               [12]  446 	inc	r1
      0001E9 F7               [12]  447 	mov	@r1,a
      0001EA E5*00            [12]  448 	mov	a,_bp
      0001EC 24 FA            [12]  449 	add	a,#0xfa
      0001EE F8               [12]  450 	mov	r0,a
      0001EF 08               [12]  451 	inc	r0
      0001F0 86 02            [24]  452 	mov	ar2,@r0
      0001F2 08               [12]  453 	inc	r0
      0001F3 E6               [12]  454 	mov	a,@r0
      0001F4 C4               [12]  455 	swap	a
      0001F5 CA               [12]  456 	xch	a,r2
      0001F6 C4               [12]  457 	swap	a
      0001F7 54 0F            [12]  458 	anl	a,#0x0f
      0001F9 6A               [12]  459 	xrl	a,r2
      0001FA CA               [12]  460 	xch	a,r2
      0001FB 54 0F            [12]  461 	anl	a,#0x0f
      0001FD CA               [12]  462 	xch	a,r2
      0001FE 6A               [12]  463 	xrl	a,r2
      0001FF CA               [12]  464 	xch	a,r2
      000200 FB               [12]  465 	mov	r3,a
      000201 08               [12]  466 	inc	r0
      000202 E6               [12]  467 	mov	a,@r0
      000203 C4               [12]  468 	swap	a
      000204 54 F0            [12]  469 	anl	a,#0xf0
      000206 4B               [12]  470 	orl	a,r3
      000207 E6               [12]  471 	mov	a,@r0
      000208 C4               [12]  472 	swap	a
      000209 54 0F            [12]  473 	anl	a,#0x0f
      00020B 53 02 3F         [24]  474 	anl	ar2,#0x3f
      00020E 43 02 80         [24]  475 	orl	ar2,#0x80
      000211 E5*00            [12]  476 	mov	a,_bp
      000213 24 04            [12]  477 	add	a,#0x04
      000215 F8               [12]  478 	mov	r0,a
      000216 86 82            [24]  479 	mov	dpl,@r0
      000218 08               [12]  480 	inc	r0
      000219 86 83            [24]  481 	mov	dph,@r0
      00021B 08               [12]  482 	inc	r0
      00021C 86 F0            [24]  483 	mov	b,@r0
      00021E EA               [12]  484 	mov	a,r2
      00021F 12r00r00         [24]  485 	lcall	__gptrput
                                    486 ;	wctomb.c:60: s[2] = (wc >> 6) & 0x3f  | 0x80;
      000222 A8*00            [24]  487 	mov	r0,_bp
      000224 08               [12]  488 	inc	r0
      000225 74 02            [12]  489 	mov	a,#0x02
      000227 26               [12]  490 	add	a,@r0
      000228 FD               [12]  491 	mov	r5,a
      000229 E4               [12]  492 	clr	a
      00022A 08               [12]  493 	inc	r0
      00022B 36               [12]  494 	addc	a,@r0
      00022C FE               [12]  495 	mov	r6,a
      00022D 08               [12]  496 	inc	r0
      00022E 86 07            [24]  497 	mov	ar7,@r0
      000230 E5*00            [12]  498 	mov	a,_bp
      000232 24 FA            [12]  499 	add	a,#0xfa
      000234 F8               [12]  500 	mov	r0,a
      000235 86 03            [24]  501 	mov	ar3,@r0
      000237 08               [12]  502 	inc	r0
      000238 E6               [12]  503 	mov	a,@r0
      000239 A2 E7            [12]  504 	mov	c,acc.7
      00023B CB               [12]  505 	xch	a,r3
      00023C 33               [12]  506 	rlc	a
      00023D CB               [12]  507 	xch	a,r3
      00023E 33               [12]  508 	rlc	a
      00023F A2 E7            [12]  509 	mov	c,acc.7
      000241 CB               [12]  510 	xch	a,r3
      000242 33               [12]  511 	rlc	a
      000243 CB               [12]  512 	xch	a,r3
      000244 33               [12]  513 	rlc	a
      000245 CB               [12]  514 	xch	a,r3
      000246 54 03            [12]  515 	anl	a,#0x03
      000248 53 03 3F         [24]  516 	anl	ar3,#0x3f
      00024B 43 03 80         [24]  517 	orl	ar3,#0x80
      00024E 8D 82            [24]  518 	mov	dpl,r5
      000250 8E 83            [24]  519 	mov	dph,r6
      000252 8F F0            [24]  520 	mov	b,r7
      000254 EB               [12]  521 	mov	a,r3
      000255 12r00r00         [24]  522 	lcall	__gptrput
                                    523 ;	wctomb.c:61: s[3] = (wc >> 0) & 0x3f  | 0x80;
      000258 A8*00            [24]  524 	mov	r0,_bp
      00025A 08               [12]  525 	inc	r0
      00025B 74 03            [12]  526 	mov	a,#0x03
      00025D 26               [12]  527 	add	a,@r0
      00025E FD               [12]  528 	mov	r5,a
      00025F E4               [12]  529 	clr	a
      000260 08               [12]  530 	inc	r0
      000261 36               [12]  531 	addc	a,@r0
      000262 FE               [12]  532 	mov	r6,a
      000263 08               [12]  533 	inc	r0
      000264 86 07            [24]  534 	mov	ar7,@r0
      000266 E5*00            [12]  535 	mov	a,_bp
      000268 24 FA            [12]  536 	add	a,#0xfa
      00026A F8               [12]  537 	mov	r0,a
      00026B 86 04            [24]  538 	mov	ar4,@r0
      00026D 53 04 3F         [24]  539 	anl	ar4,#0x3f
      000270 43 04 80         [24]  540 	orl	ar4,#0x80
      000273 8D 82            [24]  541 	mov	dpl,r5
      000275 8E 83            [24]  542 	mov	dph,r6
      000277 8F F0            [24]  543 	mov	b,r7
      000279 EC               [12]  544 	mov	a,r4
      00027A 12r00r00         [24]  545 	lcall	__gptrput
                                    546 ;	wctomb.c:62: return(4);
      00027D 90 00 04         [24]  547 	mov	dptr,#0x0004
      000280 80 03            [24]  548 	sjmp	00119$
      000282                        549 00104$:
                                    550 ;	wctomb.c:65: return(-1);
      000282 90 FF FF         [24]  551 	mov	dptr,#0xffff
      000285                        552 00119$:
                                    553 ;	wctomb.c:66: }
      000285 85*00 81         [24]  554 	mov	sp,_bp
      000288 D0*00            [24]  555 	pop	_bp
      00028A 22               [24]  556 	ret
                                    557 	.area CSEG    (CODE)
                                    558 	.area CONST   (CODE)
                                    559 	.area XINIT   (CODE)
                                    560 	.area CABS    (ABS,CODE)
