                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _modulong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 ;--------------------------------------------------------
                                     12 ; special function registers
                                     13 ;--------------------------------------------------------
                                     14 	.area RSEG    (ABS,DATA)
      000000                         15 	.org 0x0000
                                     16 ;--------------------------------------------------------
                                     17 ; special function bits
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; overlayable register banks
                                     23 ;--------------------------------------------------------
                                     24 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         25 	.ds 8
                                     26 ;--------------------------------------------------------
                                     27 ; internal ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area DSEG    (DATA)
                                     30 ;--------------------------------------------------------
                                     31 ; overlayable items in internal ram
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; indirectly addressable internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area ISEG    (DATA)
                                     37 ;--------------------------------------------------------
                                     38 ; absolute internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area IABS    (ABS,DATA)
                                     41 	.area IABS    (ABS,DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; bit data
                                     44 ;--------------------------------------------------------
                                     45 	.area BSEG    (BIT)
                                     46 ;--------------------------------------------------------
                                     47 ; paged external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area PSEG    (PAG,XDATA)
                                     50 ;--------------------------------------------------------
                                     51 ; uninitialized external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area XSEG    (XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XABS    (ABS,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; initialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XISEG   (XDATA)
                                     62 	.area HOME    (CODE)
                                     63 	.area GSINIT0 (CODE)
                                     64 	.area GSINIT1 (CODE)
                                     65 	.area GSINIT2 (CODE)
                                     66 	.area GSINIT3 (CODE)
                                     67 	.area GSINIT4 (CODE)
                                     68 	.area GSINIT5 (CODE)
                                     69 	.area GSINIT  (CODE)
                                     70 	.area GSFINAL (CODE)
                                     71 	.area CSEG    (CODE)
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area HOME    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; code
                                     86 ;--------------------------------------------------------
                                     87 	.area CSEG    (CODE)
                                     88 ;------------------------------------------------------------
                                     89 ;Allocation info for local variables in function '_modlong_dummy'
                                     90 ;------------------------------------------------------------
                                     91 ;	_modulong.c:197: _modlong_dummy (void) __naked
                                     92 ;	-----------------------------------------
                                     93 ;	 function _modlong_dummy
                                     94 ;	-----------------------------------------
      000000                         95 __modlong_dummy:
                                     96 ;	naked function: no prologue.
                                     97 ;	_modulong.c:338: __endasm;
                                     98 	.globl	__modulong
      000000                         99 __modulong:
                           000002   100 	ar2	= 2 ; BUG register set is not considered
                           000003   101 	ar3	= 3
                           000004   102 	ar4	= 4
                           000005   103 	ar5	= 5
                                    104 	.globl	__modlong ; entry point for __modslong
                                    105 ;	parameter a comes in a, b, dph, dpl
      000000 F9               [12]  106 	mov	r1,a ; save parameter r1
      000001 E5 81            [12]  107 	mov	a,sp
      000003 24 FB            [12]  108 	add	a,#-2-3 ; 2 bytes return address, 3 bytes param b
      000005 F8               [12]  109 	mov	r0,a ; r1 points to r2
      000006 86 02            [24]  110 	mov	ar2,@r0 ; load r2
      000008 08               [12]  111 	inc	r0 ; r0 points to r3
      000009 86 03            [24]  112 	mov	ar3,@r0 ; r3
      00000B 08               [12]  113 	inc	r0
      00000C 86 04            [24]  114 	mov	ar4,@r0 ; r4
      00000E 08               [12]  115 	inc	r0
      00000F 86 05            [24]  116 	mov	ar5,@r0 ; r5
      000011                        117 __modlong:
                                    118 ; entry point for __modslong
                                    119 ;	a in r1, b, dph, dpl
                                    120 ;	b in r5, r4, r3, r2
      000011 78 00            [12]  121 	mov	r0,#0
      000013 EA               [12]  122 	mov	a,r2 ; b == 0? avoid endless loop
      000014 4B               [12]  123 	orl	a,r3
      000015 4C               [12]  124 	orl	a,r4
      000016 4D               [12]  125 	orl	a,r5
      000017 60 58            [24]  126 	jz	div_by_0
      000019 78 00            [12]  127 	mov	r0,#0
      00001B C3               [12]  128 	clr	c ; when loop1 jumps immediately to loop2
      00001C                        129 loop1:
      00001C 08               [12]  130 	inc r0
      00001D ED               [12]  131 	mov	a,r5 ; if (!MSB_SET(b))
      00001E 20 E7 27         [24]  132 	jb	acc.7,loop2
      000021 EA               [12]  133 	mov	a,r2 ; b <<= 1
      000022 25 E0            [12]  134 	add	a,acc
      000024 FA               [12]  135 	mov	r2,a
      000025 EB               [12]  136 	mov	a,r3
      000026 33               [12]  137 	rlc	a
      000027 FB               [12]  138 	mov	r3,a
      000028 EC               [12]  139 	mov	a,r4
      000029 33               [12]  140 	rlc	a
      00002A FC               [12]  141 	mov	r4,a
      00002B ED               [12]  142 	mov	a,r5
      00002C 33               [12]  143 	rlc	a
      00002D FD               [12]  144 	mov	r5,a
      00002E E5 82            [12]  145 	mov	a,dpl ; a - b
      000030 9A               [12]  146 	subb	a,r2 ; here carry is always clear
      000031 E5 83            [12]  147 	mov	a,dph
      000033 9B               [12]  148 	subb	a,r3
      000034 E5 F0            [12]  149 	mov	a,b
      000036 9C               [12]  150 	subb	a,r4
      000037 E9               [12]  151 	mov	a,r1
      000038 9D               [12]  152 	subb	a,r5
      000039 50 E1            [24]  153 	jnc	loop1
      00003B C3               [12]  154 	clr	c
      00003C ED               [12]  155 	mov	a,r5 ; b >>= 1;
      00003D 13               [12]  156 	rrc	a
      00003E FD               [12]  157 	mov	r5,a
      00003F EC               [12]  158 	mov	a,r4
      000040 13               [12]  159 	rrc	a
      000041 FC               [12]  160 	mov	r4,a
      000042 EB               [12]  161 	mov	a,r3
      000043 13               [12]  162 	rrc	a
      000044 FB               [12]  163 	mov	r3,a
      000045 EA               [12]  164 	mov	a,r2
      000046 13               [12]  165 	rrc	a
      000047 FA               [12]  166 	mov	r2,a
      000048                        167 loop2:
                                    168 ; clr c never set
      000048 E5 82            [12]  169 	mov	a,dpl ; a - b
      00004A 9A               [12]  170 	subb	a,r2
      00004B E5 83            [12]  171 	mov	a,dph
      00004D 9B               [12]  172 	subb	a,r3
      00004E FE               [12]  173 	mov	r6,a ; d1
      00004F E5 F0            [12]  174 	mov	a,b
      000051 9C               [12]  175 	subb	a,r4
      000052 FF               [12]  176 	mov	r7,a ; d2
      000053 E9               [12]  177 	mov	a,r1
      000054 9D               [12]  178 	subb	a,r5
      000055 40 0A            [24]  179 	jc	smaller ; a >= b?
      000057 F9               [12]  180 	mov	r1,a ; -> yes; a = a - b;
      000058 8F F0            [24]  181 	mov	b,r7
      00005A 8E 83            [24]  182 	mov	dph,r6
      00005C E5 82            [12]  183 	mov	a,dpl
      00005E 9A               [12]  184 	subb	a,r2
      00005F F5 82            [12]  185 	mov	dpl,a
      000061                        186 smaller:
                                    187 ; -> no
      000061 C3               [12]  188 	clr	c
      000062 ED               [12]  189 	mov	a,r5 ; b >>= 1;
      000063 13               [12]  190 	rrc	a
      000064 FD               [12]  191 	mov	r5,a
      000065 EC               [12]  192 	mov	a,r4
      000066 13               [12]  193 	rrc	a
      000067 FC               [12]  194 	mov	r4,a
      000068 EB               [12]  195 	mov	a,r3
      000069 13               [12]  196 	rrc	a
      00006A FB               [12]  197 	mov	r3,a
      00006B EA               [12]  198 	mov	a,r2
      00006C 13               [12]  199 	rrc	a
      00006D FA               [12]  200 	mov	r2,a
      00006E D8 D8            [24]  201 	djnz	r0,loop2
      000070 E9               [12]  202 	mov	a,r1 ; prepare the return value
      000071                        203 div_by_0:
      000071 22               [24]  204 	ret
                                    205 ;	_modulong.c:339: }
                                    206 ;	naked function: no epilogue.
                                    207 	.area CSEG    (CODE)
                                    208 	.area CONST   (CODE)
                                    209 	.area XINIT   (CODE)
                                    210 	.area CABS    (ABS,CODE)
