                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _modulonglong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __modulonglong
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_modulonglong'
                                     91 ;------------------------------------------------------------
                                     92 ;b                         Allocated to stack - _bp -10
                                     93 ;a                         Allocated to stack - _bp +1
                                     94 ;count                     Allocated to registers r7 
                                     95 ;------------------------------------------------------------
                                     96 ;	_modulonglong.c:44: _modulonglong (unsigned long long a, unsigned long long b) __SDCC_NONBANKED
                                     97 ;	-----------------------------------------
                                     98 ;	 function _modulonglong
                                     99 ;	-----------------------------------------
      000000                        100 __modulonglong:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 85 81*00         [24]  110 	mov	_bp,sp
      000005 C0 82            [24]  111 	push	dpl
      000007 C0 83            [24]  112 	push	dph
      000009 C0 F0            [24]  113 	push	b
      00000B C0 E0            [24]  114 	push	acc
      00000D C0 04            [24]  115 	push	ar4
      00000F C0 05            [24]  116 	push	ar5
      000011 C0 06            [24]  117 	push	ar6
      000013 C0 07            [24]  118 	push	ar7
                                    119 ;	_modulonglong.c:46: unsigned char count = 0;
      000015 7F 00            [12]  120 	mov	r7,#0x00
                                    121 ;	_modulonglong.c:48: while (!MSB_SET(b))
      000017 7E 00            [12]  122 	mov	r6,#0x00
      000019                        123 00103$:
      000019 E5*00            [12]  124 	mov	a,_bp
      00001B 24 F6            [12]  125 	add	a,#0xf6
      00001D F8               [12]  126 	mov	r0,a
      00001E 08               [12]  127 	inc	r0
      00001F 08               [12]  128 	inc	r0
      000020 08               [12]  129 	inc	r0
      000021 08               [12]  130 	inc	r0
      000022 08               [12]  131 	inc	r0
      000023 08               [12]  132 	inc	r0
      000024 08               [12]  133 	inc	r0
      000025 E6               [12]  134 	mov	a,@r0
      000026 23               [12]  135 	rl	a
      000027 54 01            [12]  136 	anl	a,#0x01
      000029 FD               [12]  137 	mov	r5,a
      00002A 60 03            [24]  138 	jz	00138$
      00002C 02r00rB0         [24]  139 	ljmp	00117$
      00002F                        140 00138$:
                                    141 ;	_modulonglong.c:50: b <<= 1;
      00002F E5*00            [12]  142 	mov	a,_bp
      000031 24 F6            [12]  143 	add	a,#0xf6
      000033 F8               [12]  144 	mov	r0,a
      000034 E6               [12]  145 	mov	a,@r0
      000035 26               [12]  146 	add	a,@r0
      000036 F6               [12]  147 	mov	@r0,a
      000037 08               [12]  148 	inc	r0
      000038 E6               [12]  149 	mov	a,@r0
      000039 33               [12]  150 	rlc	a
      00003A F6               [12]  151 	mov	@r0,a
      00003B 08               [12]  152 	inc	r0
      00003C E6               [12]  153 	mov	a,@r0
      00003D 33               [12]  154 	rlc	a
      00003E F6               [12]  155 	mov	@r0,a
      00003F 08               [12]  156 	inc	r0
      000040 E6               [12]  157 	mov	a,@r0
      000041 33               [12]  158 	rlc	a
      000042 F6               [12]  159 	mov	@r0,a
      000043 08               [12]  160 	inc	r0
      000044 E6               [12]  161 	mov	a,@r0
      000045 33               [12]  162 	rlc	a
      000046 F6               [12]  163 	mov	@r0,a
      000047 08               [12]  164 	inc	r0
      000048 E6               [12]  165 	mov	a,@r0
      000049 33               [12]  166 	rlc	a
      00004A F6               [12]  167 	mov	@r0,a
      00004B 08               [12]  168 	inc	r0
      00004C E6               [12]  169 	mov	a,@r0
      00004D 33               [12]  170 	rlc	a
      00004E F6               [12]  171 	mov	@r0,a
      00004F 08               [12]  172 	inc	r0
      000050 E6               [12]  173 	mov	a,@r0
      000051 33               [12]  174 	rlc	a
      000052 F6               [12]  175 	mov	@r0,a
                                    176 ;	_modulonglong.c:51: if (b > a)
      000053 E5*00            [12]  177 	mov	a,_bp
      000055 24 F6            [12]  178 	add	a,#0xf6
      000057 F8               [12]  179 	mov	r0,a
      000058 A9*00            [24]  180 	mov	r1,_bp
      00005A 09               [12]  181 	inc	r1
      00005B C3               [12]  182 	clr	c
      00005C E7               [12]  183 	mov	a,@r1
      00005D 96               [12]  184 	subb	a,@r0
      00005E 09               [12]  185 	inc	r1
      00005F E7               [12]  186 	mov	a,@r1
      000060 08               [12]  187 	inc	r0
      000061 96               [12]  188 	subb	a,@r0
      000062 09               [12]  189 	inc	r1
      000063 E7               [12]  190 	mov	a,@r1
      000064 08               [12]  191 	inc	r0
      000065 96               [12]  192 	subb	a,@r0
      000066 09               [12]  193 	inc	r1
      000067 E7               [12]  194 	mov	a,@r1
      000068 08               [12]  195 	inc	r0
      000069 96               [12]  196 	subb	a,@r0
      00006A 09               [12]  197 	inc	r1
      00006B E7               [12]  198 	mov	a,@r1
      00006C 08               [12]  199 	inc	r0
      00006D 96               [12]  200 	subb	a,@r0
      00006E 09               [12]  201 	inc	r1
      00006F E7               [12]  202 	mov	a,@r1
      000070 08               [12]  203 	inc	r0
      000071 96               [12]  204 	subb	a,@r0
      000072 09               [12]  205 	inc	r1
      000073 E7               [12]  206 	mov	a,@r1
      000074 08               [12]  207 	inc	r0
      000075 96               [12]  208 	subb	a,@r0
      000076 09               [12]  209 	inc	r1
      000077 E7               [12]  210 	mov	a,@r1
      000078 08               [12]  211 	inc	r0
      000079 96               [12]  212 	subb	a,@r0
      00007A 50 2E            [24]  213 	jnc	00102$
                                    214 ;	_modulonglong.c:53: b >>=1;
      00007C E5*00            [12]  215 	mov	a,_bp
      00007E 24 F6            [12]  216 	add	a,#0xf6
      000080 F8               [12]  217 	mov	r0,a
      000081 08               [12]  218 	inc	r0
      000082 08               [12]  219 	inc	r0
      000083 08               [12]  220 	inc	r0
      000084 08               [12]  221 	inc	r0
      000085 08               [12]  222 	inc	r0
      000086 08               [12]  223 	inc	r0
      000087 08               [12]  224 	inc	r0
      000088 E6               [12]  225 	mov	a,@r0
      000089 C3               [12]  226 	clr	c
      00008A 13               [12]  227 	rrc	a
      00008B F6               [12]  228 	mov	@r0,a
      00008C 18               [12]  229 	dec	r0
      00008D E6               [12]  230 	mov	a,@r0
      00008E 13               [12]  231 	rrc	a
      00008F F6               [12]  232 	mov	@r0,a
      000090 18               [12]  233 	dec	r0
      000091 E6               [12]  234 	mov	a,@r0
      000092 13               [12]  235 	rrc	a
      000093 F6               [12]  236 	mov	@r0,a
      000094 18               [12]  237 	dec	r0
      000095 E6               [12]  238 	mov	a,@r0
      000096 13               [12]  239 	rrc	a
      000097 F6               [12]  240 	mov	@r0,a
      000098 18               [12]  241 	dec	r0
      000099 E6               [12]  242 	mov	a,@r0
      00009A 13               [12]  243 	rrc	a
      00009B F6               [12]  244 	mov	@r0,a
      00009C 18               [12]  245 	dec	r0
      00009D E6               [12]  246 	mov	a,@r0
      00009E 13               [12]  247 	rrc	a
      00009F F6               [12]  248 	mov	@r0,a
      0000A0 18               [12]  249 	dec	r0
      0000A1 E6               [12]  250 	mov	a,@r0
      0000A2 13               [12]  251 	rrc	a
      0000A3 F6               [12]  252 	mov	@r0,a
      0000A4 18               [12]  253 	dec	r0
      0000A5 E6               [12]  254 	mov	a,@r0
      0000A6 13               [12]  255 	rrc	a
      0000A7 F6               [12]  256 	mov	@r0,a
                                    257 ;	_modulonglong.c:54: break;
      0000A8 80 06            [24]  258 	sjmp	00117$
      0000AA                        259 00102$:
                                    260 ;	_modulonglong.c:56: count++;
      0000AA 0E               [12]  261 	inc	r6
      0000AB 8E 07            [24]  262 	mov	ar7,r6
      0000AD 02r00r19         [24]  263 	ljmp	00103$
                                    264 ;	_modulonglong.c:58: do
      0000B0                        265 00117$:
      0000B0                        266 00108$:
                                    267 ;	_modulonglong.c:60: if (a >= b)
      0000B0 A8*00            [24]  268 	mov	r0,_bp
      0000B2 08               [12]  269 	inc	r0
      0000B3 E5*00            [12]  270 	mov	a,_bp
      0000B5 24 F6            [12]  271 	add	a,#0xf6
      0000B7 F9               [12]  272 	mov	r1,a
      0000B8 C3               [12]  273 	clr	c
      0000B9 E6               [12]  274 	mov	a,@r0
      0000BA 97               [12]  275 	subb	a,@r1
      0000BB 08               [12]  276 	inc	r0
      0000BC E6               [12]  277 	mov	a,@r0
      0000BD 09               [12]  278 	inc	r1
      0000BE 97               [12]  279 	subb	a,@r1
      0000BF 08               [12]  280 	inc	r0
      0000C0 E6               [12]  281 	mov	a,@r0
      0000C1 09               [12]  282 	inc	r1
      0000C2 97               [12]  283 	subb	a,@r1
      0000C3 08               [12]  284 	inc	r0
      0000C4 E6               [12]  285 	mov	a,@r0
      0000C5 09               [12]  286 	inc	r1
      0000C6 97               [12]  287 	subb	a,@r1
      0000C7 08               [12]  288 	inc	r0
      0000C8 E6               [12]  289 	mov	a,@r0
      0000C9 09               [12]  290 	inc	r1
      0000CA 97               [12]  291 	subb	a,@r1
      0000CB 08               [12]  292 	inc	r0
      0000CC E6               [12]  293 	mov	a,@r0
      0000CD 09               [12]  294 	inc	r1
      0000CE 97               [12]  295 	subb	a,@r1
      0000CF 08               [12]  296 	inc	r0
      0000D0 E6               [12]  297 	mov	a,@r0
      0000D1 09               [12]  298 	inc	r1
      0000D2 97               [12]  299 	subb	a,@r1
      0000D3 08               [12]  300 	inc	r0
      0000D4 E6               [12]  301 	mov	a,@r0
      0000D5 09               [12]  302 	inc	r1
      0000D6 97               [12]  303 	subb	a,@r1
      0000D7 40 2F            [24]  304 	jc	00107$
                                    305 ;	_modulonglong.c:61: a -= b;
      0000D9 A8*00            [24]  306 	mov	r0,_bp
      0000DB 08               [12]  307 	inc	r0
      0000DC E5*00            [12]  308 	mov	a,_bp
      0000DE 24 F6            [12]  309 	add	a,#0xf6
      0000E0 F9               [12]  310 	mov	r1,a
      0000E1 E6               [12]  311 	mov	a,@r0
      0000E2 C3               [12]  312 	clr	c
      0000E3 97               [12]  313 	subb	a,@r1
      0000E4 F6               [12]  314 	mov	@r0,a
      0000E5 08               [12]  315 	inc	r0
      0000E6 E6               [12]  316 	mov	a,@r0
      0000E7 09               [12]  317 	inc	r1
      0000E8 97               [12]  318 	subb	a,@r1
      0000E9 F6               [12]  319 	mov	@r0,a
      0000EA 08               [12]  320 	inc	r0
      0000EB E6               [12]  321 	mov	a,@r0
      0000EC 09               [12]  322 	inc	r1
      0000ED 97               [12]  323 	subb	a,@r1
      0000EE F6               [12]  324 	mov	@r0,a
      0000EF 08               [12]  325 	inc	r0
      0000F0 E6               [12]  326 	mov	a,@r0
      0000F1 09               [12]  327 	inc	r1
      0000F2 97               [12]  328 	subb	a,@r1
      0000F3 F6               [12]  329 	mov	@r0,a
      0000F4 08               [12]  330 	inc	r0
      0000F5 E6               [12]  331 	mov	a,@r0
      0000F6 09               [12]  332 	inc	r1
      0000F7 97               [12]  333 	subb	a,@r1
      0000F8 F6               [12]  334 	mov	@r0,a
      0000F9 08               [12]  335 	inc	r0
      0000FA E6               [12]  336 	mov	a,@r0
      0000FB 09               [12]  337 	inc	r1
      0000FC 97               [12]  338 	subb	a,@r1
      0000FD F6               [12]  339 	mov	@r0,a
      0000FE 08               [12]  340 	inc	r0
      0000FF E6               [12]  341 	mov	a,@r0
      000100 09               [12]  342 	inc	r1
      000101 97               [12]  343 	subb	a,@r1
      000102 F6               [12]  344 	mov	@r0,a
      000103 08               [12]  345 	inc	r0
      000104 E6               [12]  346 	mov	a,@r0
      000105 09               [12]  347 	inc	r1
      000106 97               [12]  348 	subb	a,@r1
      000107 F6               [12]  349 	mov	@r0,a
      000108                        350 00107$:
                                    351 ;	_modulonglong.c:62: b >>= 1;
      000108 E5*00            [12]  352 	mov	a,_bp
      00010A 24 F6            [12]  353 	add	a,#0xf6
      00010C F8               [12]  354 	mov	r0,a
      00010D 08               [12]  355 	inc	r0
      00010E 08               [12]  356 	inc	r0
      00010F 08               [12]  357 	inc	r0
      000110 08               [12]  358 	inc	r0
      000111 08               [12]  359 	inc	r0
      000112 08               [12]  360 	inc	r0
      000113 08               [12]  361 	inc	r0
      000114 E6               [12]  362 	mov	a,@r0
      000115 C3               [12]  363 	clr	c
      000116 13               [12]  364 	rrc	a
      000117 F6               [12]  365 	mov	@r0,a
      000118 18               [12]  366 	dec	r0
      000119 E6               [12]  367 	mov	a,@r0
      00011A 13               [12]  368 	rrc	a
      00011B F6               [12]  369 	mov	@r0,a
      00011C 18               [12]  370 	dec	r0
      00011D E6               [12]  371 	mov	a,@r0
      00011E 13               [12]  372 	rrc	a
      00011F F6               [12]  373 	mov	@r0,a
      000120 18               [12]  374 	dec	r0
      000121 E6               [12]  375 	mov	a,@r0
      000122 13               [12]  376 	rrc	a
      000123 F6               [12]  377 	mov	@r0,a
      000124 18               [12]  378 	dec	r0
      000125 E6               [12]  379 	mov	a,@r0
      000126 13               [12]  380 	rrc	a
      000127 F6               [12]  381 	mov	@r0,a
      000128 18               [12]  382 	dec	r0
      000129 E6               [12]  383 	mov	a,@r0
      00012A 13               [12]  384 	rrc	a
      00012B F6               [12]  385 	mov	@r0,a
      00012C 18               [12]  386 	dec	r0
      00012D E6               [12]  387 	mov	a,@r0
      00012E 13               [12]  388 	rrc	a
      00012F F6               [12]  389 	mov	@r0,a
      000130 18               [12]  390 	dec	r0
      000131 E6               [12]  391 	mov	a,@r0
      000132 13               [12]  392 	rrc	a
      000133 F6               [12]  393 	mov	@r0,a
                                    394 ;	_modulonglong.c:64: while (count--);
      000134 8F 06            [24]  395 	mov	ar6,r7
      000136 1F               [12]  396 	dec	r7
      000137 EE               [12]  397 	mov	a,r6
      000138 60 03            [24]  398 	jz	00141$
      00013A 02r00rB0         [24]  399 	ljmp	00108$
      00013D                        400 00141$:
                                    401 ;	_modulonglong.c:66: return a;
      00013D A8*00            [24]  402 	mov	r0,_bp
      00013F 08               [12]  403 	inc	r0
      000140 86 82            [24]  404 	mov	dpl,@r0
      000142 08               [12]  405 	inc	r0
      000143 86 83            [24]  406 	mov	dph,@r0
      000145 08               [12]  407 	inc	r0
      000146 86 F0            [24]  408 	mov	b,@r0
      000148 08               [12]  409 	inc	r0
      000149 E6               [12]  410 	mov	a,@r0
      00014A 08               [12]  411 	inc	r0
      00014B 86 04            [24]  412 	mov	ar4,@r0
      00014D 08               [12]  413 	inc	r0
      00014E 86 05            [24]  414 	mov	ar5,@r0
      000150 08               [12]  415 	inc	r0
      000151 86 06            [24]  416 	mov	ar6,@r0
      000153 08               [12]  417 	inc	r0
      000154 86 07            [24]  418 	mov	ar7,@r0
                                    419 ;	_modulonglong.c:67: }
      000156 85*00 81         [24]  420 	mov	sp,_bp
      000159 D0*00            [24]  421 	pop	_bp
      00015B 22               [24]  422 	ret
                                    423 	.area CSEG    (CODE)
                                    424 	.area CONST   (CODE)
                                    425 	.area XINIT   (CODE)
                                    426 	.area CABS    (ABS,CODE)
