                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tancotf
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _tancotf
                                     12 	.globl _fabsf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; initialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'tancotf'
                                     92 ;------------------------------------------------------------
                                     93 ;iscotan                   Allocated to stack - _bp -3
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;f                         Allocated to stack - _bp +13
                                     96 ;g                         Allocated to registers r7 r6 r5 r4 
                                     97 ;xn                        Allocated to stack - _bp +17
                                     98 ;xnum                      Allocated to stack - _bp +21
                                     99 ;xden                      Allocated to stack - _bp +25
                                    100 ;n                         Allocated to stack - _bp +29
                                    101 ;sloc0                     Allocated to stack - _bp +5
                                    102 ;sloc1                     Allocated to stack - _bp +9
                                    103 ;------------------------------------------------------------
                                    104 ;	tancotf.c:53: float tancotf(float x, bool iscotan)
                                    105 ;	-----------------------------------------
                                    106 ;	 function tancotf
                                    107 ;	-----------------------------------------
      000000                        108 _tancotf:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 C0*00            [24]  117 	push	_bp
      000002 85 81*00         [24]  118 	mov	_bp,sp
      000005 C0 82            [24]  119 	push	dpl
      000007 C0 83            [24]  120 	push	dph
      000009 C0 F0            [24]  121 	push	b
      00000B C0 E0            [24]  122 	push	acc
      00000D E5 81            [12]  123 	mov	a,sp
      00000F 24 1A            [12]  124 	add	a,#0x1a
      000011 F5 81            [12]  125 	mov	sp,a
                                    126 ;	tancotf.c:58: if (fabsf(x) > YMAX)
      000013 A8*00            [24]  127 	mov	r0,_bp
      000015 08               [12]  128 	inc	r0
      000016 86 82            [24]  129 	mov	dpl,@r0
      000018 08               [12]  130 	inc	r0
      000019 86 83            [24]  131 	mov	dph,@r0
      00001B 08               [12]  132 	inc	r0
      00001C 86 F0            [24]  133 	mov	b,@r0
      00001E 08               [12]  134 	inc	r0
      00001F E6               [12]  135 	mov	a,@r0
      000020 12r00r00         [24]  136 	lcall	_fabsf
      000023 AA 82            [24]  137 	mov	r2,dpl
      000025 AB 83            [24]  138 	mov	r3,dph
      000027 AE F0            [24]  139 	mov	r6,b
      000029 FF               [12]  140 	mov	r7,a
      00002A C0 02            [24]  141 	push	ar2
      00002C C0 03            [24]  142 	push	ar3
      00002E C0 06            [24]  143 	push	ar6
      000030 C0 07            [24]  144 	push	ar7
      000032 90 08 00         [24]  145 	mov	dptr,#0x0800
      000035 75 F0 C9         [24]  146 	mov	b,#0xc9
      000038 74 45            [12]  147 	mov	a,#0x45
      00003A 12r00r00         [24]  148 	lcall	___fslt
      00003D AF 82            [24]  149 	mov	r7,dpl
      00003F E5 81            [12]  150 	mov	a,sp
      000041 24 FC            [12]  151 	add	a,#0xfc
      000043 F5 81            [12]  152 	mov	sp,a
      000045 EF               [12]  153 	mov	a,r7
      000046 60 0F            [24]  154 	jz	00102$
                                    155 ;	tancotf.c:60: errno = ERANGE;
      000048 75*00 22         [24]  156 	mov	_errno,#0x22
      00004B 75*01 00         [24]  157 	mov	(_errno + 1),#0x00
                                    158 ;	tancotf.c:61: return 0.0;
      00004E 90 00 00         [24]  159 	mov	dptr,#(0x00&0x00ff)
      000051 E4               [12]  160 	clr	a
      000052 F5 F0            [12]  161 	mov	b,a
      000054 02r05rBF         [24]  162 	ljmp	00115$
      000057                        163 00102$:
                                    164 ;	tancotf.c:65: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
      000057 A8*00            [24]  165 	mov	r0,_bp
      000059 08               [12]  166 	inc	r0
      00005A E6               [12]  167 	mov	a,@r0
      00005B C0 E0            [24]  168 	push	acc
      00005D 08               [12]  169 	inc	r0
      00005E E6               [12]  170 	mov	a,@r0
      00005F C0 E0            [24]  171 	push	acc
      000061 08               [12]  172 	inc	r0
      000062 E6               [12]  173 	mov	a,@r0
      000063 C0 E0            [24]  174 	push	acc
      000065 08               [12]  175 	inc	r0
      000066 E6               [12]  176 	mov	a,@r0
      000067 C0 E0            [24]  177 	push	acc
      000069 90 F9 83         [24]  178 	mov	dptr,#0xf983
      00006C 75 F0 22         [24]  179 	mov	b,#0x22
      00006F 74 3F            [12]  180 	mov	a,#0x3f
      000071 12r00r00         [24]  181 	lcall	___fsmul
      000074 AC 82            [24]  182 	mov	r4,dpl
      000076 AD 83            [24]  183 	mov	r5,dph
      000078 AE F0            [24]  184 	mov	r6,b
      00007A FF               [12]  185 	mov	r7,a
      00007B E5 81            [12]  186 	mov	a,sp
      00007D 24 FC            [12]  187 	add	a,#0xfc
      00007F F5 81            [12]  188 	mov	sp,a
      000081 C0 07            [24]  189 	push	ar7
      000083 C0 06            [24]  190 	push	ar6
      000085 C0 05            [24]  191 	push	ar5
      000087 C0 04            [24]  192 	push	ar4
      000089 A8*00            [24]  193 	mov	r0,_bp
      00008B 08               [12]  194 	inc	r0
      00008C E6               [12]  195 	mov	a,@r0
      00008D C0 E0            [24]  196 	push	acc
      00008F 08               [12]  197 	inc	r0
      000090 E6               [12]  198 	mov	a,@r0
      000091 C0 E0            [24]  199 	push	acc
      000093 08               [12]  200 	inc	r0
      000094 E6               [12]  201 	mov	a,@r0
      000095 C0 E0            [24]  202 	push	acc
      000097 08               [12]  203 	inc	r0
      000098 E6               [12]  204 	mov	a,@r0
      000099 C0 E0            [24]  205 	push	acc
      00009B 90 00 00         [24]  206 	mov	dptr,#(0x00&0x00ff)
      00009E E4               [12]  207 	clr	a
      00009F F5 F0            [12]  208 	mov	b,a
      0000A1 12r00r00         [24]  209 	lcall	___fslt
      0000A4 AB 82            [24]  210 	mov	r3,dpl
      0000A6 E5 81            [12]  211 	mov	a,sp
      0000A8 24 FC            [12]  212 	add	a,#0xfc
      0000AA F5 81            [12]  213 	mov	sp,a
      0000AC D0 04            [24]  214 	pop	ar4
      0000AE D0 05            [24]  215 	pop	ar5
      0000B0 D0 06            [24]  216 	pop	ar6
      0000B2 D0 07            [24]  217 	pop	ar7
      0000B4 EB               [12]  218 	mov	a,r3
      0000B5 60 10            [24]  219 	jz	00117$
      0000B7 E5*00            [12]  220 	mov	a,_bp
      0000B9 24 05            [12]  221 	add	a,#0x05
      0000BB F8               [12]  222 	mov	r0,a
      0000BC E4               [12]  223 	clr	a
      0000BD F6               [12]  224 	mov	@r0,a
      0000BE 08               [12]  225 	inc	r0
      0000BF F6               [12]  226 	mov	@r0,a
      0000C0 08               [12]  227 	inc	r0
      0000C1 F6               [12]  228 	mov	@r0,a
      0000C2 08               [12]  229 	inc	r0
      0000C3 76 3F            [12]  230 	mov	@r0,#0x3f
      0000C5 80 0E            [24]  231 	sjmp	00118$
      0000C7                        232 00117$:
      0000C7 E5*00            [12]  233 	mov	a,_bp
      0000C9 24 05            [12]  234 	add	a,#0x05
      0000CB F8               [12]  235 	mov	r0,a
      0000CC E4               [12]  236 	clr	a
      0000CD F6               [12]  237 	mov	@r0,a
      0000CE 08               [12]  238 	inc	r0
      0000CF F6               [12]  239 	mov	@r0,a
      0000D0 08               [12]  240 	inc	r0
      0000D1 F6               [12]  241 	mov	@r0,a
      0000D2 08               [12]  242 	inc	r0
      0000D3 76 BF            [12]  243 	mov	@r0,#0xbf
      0000D5                        244 00118$:
      0000D5 E5*00            [12]  245 	mov	a,_bp
      0000D7 24 05            [12]  246 	add	a,#0x05
      0000D9 F8               [12]  247 	mov	r0,a
      0000DA E6               [12]  248 	mov	a,@r0
      0000DB C0 E0            [24]  249 	push	acc
      0000DD 08               [12]  250 	inc	r0
      0000DE E6               [12]  251 	mov	a,@r0
      0000DF C0 E0            [24]  252 	push	acc
      0000E1 08               [12]  253 	inc	r0
      0000E2 E6               [12]  254 	mov	a,@r0
      0000E3 C0 E0            [24]  255 	push	acc
      0000E5 08               [12]  256 	inc	r0
      0000E6 E6               [12]  257 	mov	a,@r0
      0000E7 C0 E0            [24]  258 	push	acc
      0000E9 8C 82            [24]  259 	mov	dpl,r4
      0000EB 8D 83            [24]  260 	mov	dph,r5
      0000ED 8E F0            [24]  261 	mov	b,r6
      0000EF EF               [12]  262 	mov	a,r7
      0000F0 12r00r00         [24]  263 	lcall	___fsadd
      0000F3 AC 82            [24]  264 	mov	r4,dpl
      0000F5 AD 83            [24]  265 	mov	r5,dph
      0000F7 AE F0            [24]  266 	mov	r6,b
      0000F9 FF               [12]  267 	mov	r7,a
      0000FA E5 81            [12]  268 	mov	a,sp
      0000FC 24 FC            [12]  269 	add	a,#0xfc
      0000FE F5 81            [12]  270 	mov	sp,a
      000100 8C 82            [24]  271 	mov	dpl,r4
      000102 8D 83            [24]  272 	mov	dph,r5
      000104 8E F0            [24]  273 	mov	b,r6
      000106 EF               [12]  274 	mov	a,r7
      000107 12r00r00         [24]  275 	lcall	___fs2sint
      00010A AE 82            [24]  276 	mov	r6,dpl
      00010C AF 83            [24]  277 	mov	r7,dph
      00010E E5*00            [12]  278 	mov	a,_bp
      000110 24 1D            [12]  279 	add	a,#0x1d
      000112 F8               [12]  280 	mov	r0,a
      000113 A6 06            [24]  281 	mov	@r0,ar6
      000115 08               [12]  282 	inc	r0
      000116 A6 07            [24]  283 	mov	@r0,ar7
                                    284 ;	tancotf.c:66: xn=n;
      000118 E5*00            [12]  285 	mov	a,_bp
      00011A 24 1D            [12]  286 	add	a,#0x1d
      00011C F8               [12]  287 	mov	r0,a
      00011D 86 82            [24]  288 	mov	dpl,@r0
      00011F 08               [12]  289 	inc	r0
      000120 86 83            [24]  290 	mov	dph,@r0
      000122 12r00r00         [24]  291 	lcall	___sint2fs
      000125 AA 82            [24]  292 	mov	r2,dpl
      000127 AB 83            [24]  293 	mov	r3,dph
      000129 AC F0            [24]  294 	mov	r4,b
      00012B FD               [12]  295 	mov	r5,a
      00012C E5*00            [12]  296 	mov	a,_bp
      00012E 24 11            [12]  297 	add	a,#0x11
      000130 F8               [12]  298 	mov	r0,a
      000131 A6 02            [24]  299 	mov	@r0,ar2
      000133 08               [12]  300 	inc	r0
      000134 A6 03            [24]  301 	mov	@r0,ar3
      000136 08               [12]  302 	inc	r0
      000137 A6 04            [24]  303 	mov	@r0,ar4
      000139 08               [12]  304 	inc	r0
      00013A A6 05            [24]  305 	mov	@r0,ar5
                                    306 ;	tancotf.c:68: xnum=(int)x;
      00013C A8*00            [24]  307 	mov	r0,_bp
      00013E 08               [12]  308 	inc	r0
      00013F 86 82            [24]  309 	mov	dpl,@r0
      000141 08               [12]  310 	inc	r0
      000142 86 83            [24]  311 	mov	dph,@r0
      000144 08               [12]  312 	inc	r0
      000145 86 F0            [24]  313 	mov	b,@r0
      000147 08               [12]  314 	inc	r0
      000148 E6               [12]  315 	mov	a,@r0
      000149 12r00r00         [24]  316 	lcall	___fs2sint
      00014C 12r00r00         [24]  317 	lcall	___sint2fs
      00014F C8               [12]  318 	xch	a,r0
      000150 E5*00            [12]  319 	mov	a,_bp
      000152 24 05            [12]  320 	add	a,#0x05
      000154 C8               [12]  321 	xch	a,r0
      000155 A6 82            [24]  322 	mov	@r0,dpl
      000157 08               [12]  323 	inc	r0
      000158 A6 83            [24]  324 	mov	@r0,dph
      00015A 08               [12]  325 	inc	r0
      00015B A6 F0            [24]  326 	mov	@r0,b
      00015D 08               [12]  327 	inc	r0
      00015E F6               [12]  328 	mov	@r0,a
                                    329 ;	tancotf.c:69: xden=x-xnum;
      00015F E5*00            [12]  330 	mov	a,_bp
      000161 24 05            [12]  331 	add	a,#0x05
      000163 F8               [12]  332 	mov	r0,a
      000164 E6               [12]  333 	mov	a,@r0
      000165 C0 E0            [24]  334 	push	acc
      000167 08               [12]  335 	inc	r0
      000168 E6               [12]  336 	mov	a,@r0
      000169 C0 E0            [24]  337 	push	acc
      00016B 08               [12]  338 	inc	r0
      00016C E6               [12]  339 	mov	a,@r0
      00016D C0 E0            [24]  340 	push	acc
      00016F 08               [12]  341 	inc	r0
      000170 E6               [12]  342 	mov	a,@r0
      000171 C0 E0            [24]  343 	push	acc
      000173 A8*00            [24]  344 	mov	r0,_bp
      000175 08               [12]  345 	inc	r0
      000176 86 82            [24]  346 	mov	dpl,@r0
      000178 08               [12]  347 	inc	r0
      000179 86 83            [24]  348 	mov	dph,@r0
      00017B 08               [12]  349 	inc	r0
      00017C 86 F0            [24]  350 	mov	b,@r0
      00017E 08               [12]  351 	inc	r0
      00017F E6               [12]  352 	mov	a,@r0
      000180 12r00r00         [24]  353 	lcall	___fssub
      000183 C8               [12]  354 	xch	a,r0
      000184 E5*00            [12]  355 	mov	a,_bp
      000186 24 09            [12]  356 	add	a,#0x09
      000188 C8               [12]  357 	xch	a,r0
      000189 A6 82            [24]  358 	mov	@r0,dpl
      00018B 08               [12]  359 	inc	r0
      00018C A6 83            [24]  360 	mov	@r0,dph
      00018E 08               [12]  361 	inc	r0
      00018F A6 F0            [24]  362 	mov	@r0,b
      000191 08               [12]  363 	inc	r0
      000192 F6               [12]  364 	mov	@r0,a
      000193 E5 81            [12]  365 	mov	a,sp
      000195 24 FC            [12]  366 	add	a,#0xfc
      000197 F5 81            [12]  367 	mov	sp,a
                                    368 ;	tancotf.c:70: f=((xnum-xn*C1)+xden)-xn*C2;
      000199 E5*00            [12]  369 	mov	a,_bp
      00019B 24 11            [12]  370 	add	a,#0x11
      00019D F8               [12]  371 	mov	r0,a
      00019E E6               [12]  372 	mov	a,@r0
      00019F C0 E0            [24]  373 	push	acc
      0001A1 08               [12]  374 	inc	r0
      0001A2 E6               [12]  375 	mov	a,@r0
      0001A3 C0 E0            [24]  376 	push	acc
      0001A5 08               [12]  377 	inc	r0
      0001A6 E6               [12]  378 	mov	a,@r0
      0001A7 C0 E0            [24]  379 	push	acc
      0001A9 08               [12]  380 	inc	r0
      0001AA E6               [12]  381 	mov	a,@r0
      0001AB C0 E0            [24]  382 	push	acc
      0001AD 90 00 00         [24]  383 	mov	dptr,#0x0000
      0001B0 75 F0 C9         [24]  384 	mov	b,#0xc9
      0001B3 74 3F            [12]  385 	mov	a,#0x3f
      0001B5 12r00r00         [24]  386 	lcall	___fsmul
      0001B8 AC 82            [24]  387 	mov	r4,dpl
      0001BA AD 83            [24]  388 	mov	r5,dph
      0001BC AE F0            [24]  389 	mov	r6,b
      0001BE FF               [12]  390 	mov	r7,a
      0001BF E5 81            [12]  391 	mov	a,sp
      0001C1 24 FC            [12]  392 	add	a,#0xfc
      0001C3 F5 81            [12]  393 	mov	sp,a
      0001C5 C0 04            [24]  394 	push	ar4
      0001C7 C0 05            [24]  395 	push	ar5
      0001C9 C0 06            [24]  396 	push	ar6
      0001CB C0 07            [24]  397 	push	ar7
      0001CD E5*00            [12]  398 	mov	a,_bp
      0001CF 24 05            [12]  399 	add	a,#0x05
      0001D1 F8               [12]  400 	mov	r0,a
      0001D2 86 82            [24]  401 	mov	dpl,@r0
      0001D4 08               [12]  402 	inc	r0
      0001D5 86 83            [24]  403 	mov	dph,@r0
      0001D7 08               [12]  404 	inc	r0
      0001D8 86 F0            [24]  405 	mov	b,@r0
      0001DA 08               [12]  406 	inc	r0
      0001DB E6               [12]  407 	mov	a,@r0
      0001DC 12r00r00         [24]  408 	lcall	___fssub
      0001DF AC 82            [24]  409 	mov	r4,dpl
      0001E1 AD 83            [24]  410 	mov	r5,dph
      0001E3 AE F0            [24]  411 	mov	r6,b
      0001E5 FF               [12]  412 	mov	r7,a
      0001E6 E5 81            [12]  413 	mov	a,sp
      0001E8 24 FC            [12]  414 	add	a,#0xfc
      0001EA F5 81            [12]  415 	mov	sp,a
      0001EC E5*00            [12]  416 	mov	a,_bp
      0001EE 24 09            [12]  417 	add	a,#0x09
      0001F0 F8               [12]  418 	mov	r0,a
      0001F1 E6               [12]  419 	mov	a,@r0
      0001F2 C0 E0            [24]  420 	push	acc
      0001F4 08               [12]  421 	inc	r0
      0001F5 E6               [12]  422 	mov	a,@r0
      0001F6 C0 E0            [24]  423 	push	acc
      0001F8 08               [12]  424 	inc	r0
      0001F9 E6               [12]  425 	mov	a,@r0
      0001FA C0 E0            [24]  426 	push	acc
      0001FC 08               [12]  427 	inc	r0
      0001FD E6               [12]  428 	mov	a,@r0
      0001FE C0 E0            [24]  429 	push	acc
      000200 8C 82            [24]  430 	mov	dpl,r4
      000202 8D 83            [24]  431 	mov	dph,r5
      000204 8E F0            [24]  432 	mov	b,r6
      000206 EF               [12]  433 	mov	a,r7
      000207 12r00r00         [24]  434 	lcall	___fsadd
      00020A C8               [12]  435 	xch	a,r0
      00020B E5*00            [12]  436 	mov	a,_bp
      00020D 24 09            [12]  437 	add	a,#0x09
      00020F C8               [12]  438 	xch	a,r0
      000210 A6 82            [24]  439 	mov	@r0,dpl
      000212 08               [12]  440 	inc	r0
      000213 A6 83            [24]  441 	mov	@r0,dph
      000215 08               [12]  442 	inc	r0
      000216 A6 F0            [24]  443 	mov	@r0,b
      000218 08               [12]  444 	inc	r0
      000219 F6               [12]  445 	mov	@r0,a
      00021A E5 81            [12]  446 	mov	a,sp
      00021C 24 FC            [12]  447 	add	a,#0xfc
      00021E F5 81            [12]  448 	mov	sp,a
      000220 E5*00            [12]  449 	mov	a,_bp
      000222 24 11            [12]  450 	add	a,#0x11
      000224 F8               [12]  451 	mov	r0,a
      000225 E6               [12]  452 	mov	a,@r0
      000226 C0 E0            [24]  453 	push	acc
      000228 08               [12]  454 	inc	r0
      000229 E6               [12]  455 	mov	a,@r0
      00022A C0 E0            [24]  456 	push	acc
      00022C 08               [12]  457 	inc	r0
      00022D E6               [12]  458 	mov	a,@r0
      00022E C0 E0            [24]  459 	push	acc
      000230 08               [12]  460 	inc	r0
      000231 E6               [12]  461 	mov	a,@r0
      000232 C0 E0            [24]  462 	push	acc
      000234 90 AA 22         [24]  463 	mov	dptr,#0xaa22
      000237 75 F0 FD         [24]  464 	mov	b,#0xfd
      00023A 74 39            [12]  465 	mov	a,#0x39
      00023C 12r00r00         [24]  466 	lcall	___fsmul
      00023F AA 82            [24]  467 	mov	r2,dpl
      000241 AB 83            [24]  468 	mov	r3,dph
      000243 AE F0            [24]  469 	mov	r6,b
      000245 FF               [12]  470 	mov	r7,a
      000246 E5 81            [12]  471 	mov	a,sp
      000248 24 FC            [12]  472 	add	a,#0xfc
      00024A F5 81            [12]  473 	mov	sp,a
      00024C C0 02            [24]  474 	push	ar2
      00024E C0 03            [24]  475 	push	ar3
      000250 C0 06            [24]  476 	push	ar6
      000252 C0 07            [24]  477 	push	ar7
      000254 E5*00            [12]  478 	mov	a,_bp
      000256 24 09            [12]  479 	add	a,#0x09
      000258 F8               [12]  480 	mov	r0,a
      000259 86 82            [24]  481 	mov	dpl,@r0
      00025B 08               [12]  482 	inc	r0
      00025C 86 83            [24]  483 	mov	dph,@r0
      00025E 08               [12]  484 	inc	r0
      00025F 86 F0            [24]  485 	mov	b,@r0
      000261 08               [12]  486 	inc	r0
      000262 E6               [12]  487 	mov	a,@r0
      000263 12r00r00         [24]  488 	lcall	___fssub
      000266 AC 82            [24]  489 	mov	r4,dpl
      000268 AD 83            [24]  490 	mov	r5,dph
      00026A AE F0            [24]  491 	mov	r6,b
      00026C FF               [12]  492 	mov	r7,a
      00026D E5 81            [12]  493 	mov	a,sp
      00026F 24 FC            [12]  494 	add	a,#0xfc
      000271 F5 81            [12]  495 	mov	sp,a
      000273 E5*00            [12]  496 	mov	a,_bp
      000275 24 0D            [12]  497 	add	a,#0x0d
      000277 F8               [12]  498 	mov	r0,a
      000278 A6 04            [24]  499 	mov	@r0,ar4
      00027A 08               [12]  500 	inc	r0
      00027B A6 05            [24]  501 	mov	@r0,ar5
      00027D 08               [12]  502 	inc	r0
      00027E A6 06            [24]  503 	mov	@r0,ar6
      000280 08               [12]  504 	inc	r0
      000281 A6 07            [24]  505 	mov	@r0,ar7
                                    506 ;	tancotf.c:72: if (fabsf(f) < EPS)
      000283 E5*00            [12]  507 	mov	a,_bp
      000285 24 0D            [12]  508 	add	a,#0x0d
      000287 F8               [12]  509 	mov	r0,a
      000288 86 82            [24]  510 	mov	dpl,@r0
      00028A 08               [12]  511 	inc	r0
      00028B 86 83            [24]  512 	mov	dph,@r0
      00028D 08               [12]  513 	inc	r0
      00028E 86 F0            [24]  514 	mov	b,@r0
      000290 08               [12]  515 	inc	r0
      000291 E6               [12]  516 	mov	a,@r0
      000292 12r00r00         [24]  517 	lcall	_fabsf
      000295 AA 82            [24]  518 	mov	r2,dpl
      000297 AB 83            [24]  519 	mov	r3,dph
      000299 AE F0            [24]  520 	mov	r6,b
      00029B FF               [12]  521 	mov	r7,a
      00029C E4               [12]  522 	clr	a
      00029D C0 E0            [24]  523 	push	acc
      00029F C0 E0            [24]  524 	push	acc
      0002A1 74 80            [12]  525 	mov	a,#0x80
      0002A3 C0 E0            [24]  526 	push	acc
      0002A5 74 39            [12]  527 	mov	a,#0x39
      0002A7 C0 E0            [24]  528 	push	acc
      0002A9 8A 82            [24]  529 	mov	dpl,r2
      0002AB 8B 83            [24]  530 	mov	dph,r3
      0002AD 8E F0            [24]  531 	mov	b,r6
      0002AF EF               [12]  532 	mov	a,r7
      0002B0 12r00r00         [24]  533 	lcall	___fslt
      0002B3 AF 82            [24]  534 	mov	r7,dpl
      0002B5 E5 81            [12]  535 	mov	a,sp
      0002B7 24 FC            [12]  536 	add	a,#0xfc
      0002B9 F5 81            [12]  537 	mov	sp,a
      0002BB EF               [12]  538 	mov	a,r7
      0002BC 60 2A            [24]  539 	jz	00104$
                                    540 ;	tancotf.c:74: xnum = f;
      0002BE E5*00            [12]  541 	mov	a,_bp
      0002C0 24 0D            [12]  542 	add	a,#0x0d
      0002C2 F8               [12]  543 	mov	r0,a
      0002C3 E5*00            [12]  544 	mov	a,_bp
      0002C5 24 15            [12]  545 	add	a,#0x15
      0002C7 F9               [12]  546 	mov	r1,a
      0002C8 E6               [12]  547 	mov	a,@r0
      0002C9 F7               [12]  548 	mov	@r1,a
      0002CA 08               [12]  549 	inc	r0
      0002CB E6               [12]  550 	mov	a,@r0
      0002CC 09               [12]  551 	inc	r1
      0002CD F7               [12]  552 	mov	@r1,a
      0002CE 08               [12]  553 	inc	r0
      0002CF E6               [12]  554 	mov	a,@r0
      0002D0 09               [12]  555 	inc	r1
      0002D1 F7               [12]  556 	mov	@r1,a
      0002D2 08               [12]  557 	inc	r0
      0002D3 E6               [12]  558 	mov	a,@r0
      0002D4 09               [12]  559 	inc	r1
      0002D5 F7               [12]  560 	mov	@r1,a
                                    561 ;	tancotf.c:75: xden = 1.0;
      0002D6 E5*00            [12]  562 	mov	a,_bp
      0002D8 24 19            [12]  563 	add	a,#0x19
      0002DA F8               [12]  564 	mov	r0,a
      0002DB E4               [12]  565 	clr	a
      0002DC F6               [12]  566 	mov	@r0,a
      0002DD 08               [12]  567 	inc	r0
      0002DE F6               [12]  568 	mov	@r0,a
      0002DF 08               [12]  569 	inc	r0
      0002E0 76 80            [12]  570 	mov	@r0,#0x80
      0002E2 08               [12]  571 	inc	r0
      0002E3 76 3F            [12]  572 	mov	@r0,#0x3f
      0002E5 02r04r9F         [24]  573 	ljmp	00105$
      0002E8                        574 00104$:
                                    575 ;	tancotf.c:79: g = f*f;
      0002E8 E5*00            [12]  576 	mov	a,_bp
      0002EA 24 0D            [12]  577 	add	a,#0x0d
      0002EC F8               [12]  578 	mov	r0,a
      0002ED E6               [12]  579 	mov	a,@r0
      0002EE C0 E0            [24]  580 	push	acc
      0002F0 08               [12]  581 	inc	r0
      0002F1 E6               [12]  582 	mov	a,@r0
      0002F2 C0 E0            [24]  583 	push	acc
      0002F4 08               [12]  584 	inc	r0
      0002F5 E6               [12]  585 	mov	a,@r0
      0002F6 C0 E0            [24]  586 	push	acc
      0002F8 08               [12]  587 	inc	r0
      0002F9 E6               [12]  588 	mov	a,@r0
      0002FA C0 E0            [24]  589 	push	acc
      0002FC E5*00            [12]  590 	mov	a,_bp
      0002FE 24 0D            [12]  591 	add	a,#0x0d
      000300 F8               [12]  592 	mov	r0,a
      000301 86 82            [24]  593 	mov	dpl,@r0
      000303 08               [12]  594 	inc	r0
      000304 86 83            [24]  595 	mov	dph,@r0
      000306 08               [12]  596 	inc	r0
      000307 86 F0            [24]  597 	mov	b,@r0
      000309 08               [12]  598 	inc	r0
      00030A E6               [12]  599 	mov	a,@r0
      00030B 12r00r00         [24]  600 	lcall	___fsmul
      00030E AF 82            [24]  601 	mov	r7,dpl
      000310 AE 83            [24]  602 	mov	r6,dph
      000312 AD F0            [24]  603 	mov	r5,b
      000314 FC               [12]  604 	mov	r4,a
      000315 E5 81            [12]  605 	mov	a,sp
      000317 24 FC            [12]  606 	add	a,#0xfc
      000319 F5 81            [12]  607 	mov	sp,a
                                    608 ;	tancotf.c:80: xnum = P(f,g);
      00031B C0 07            [24]  609 	push	ar7
      00031D C0 06            [24]  610 	push	ar6
      00031F C0 05            [24]  611 	push	ar5
      000321 C0 04            [24]  612 	push	ar4
      000323 C0 07            [24]  613 	push	ar7
      000325 C0 06            [24]  614 	push	ar6
      000327 C0 05            [24]  615 	push	ar5
      000329 C0 04            [24]  616 	push	ar4
      00032B 90 33 B8         [24]  617 	mov	dptr,#0x33b8
      00032E 75 F0 C4         [24]  618 	mov	b,#0xc4
      000331 74 BD            [12]  619 	mov	a,#0xbd
      000333 12r00r00         [24]  620 	lcall	___fsmul
      000336 C8               [12]  621 	xch	a,r0
      000337 E5*00            [12]  622 	mov	a,_bp
      000339 24 09            [12]  623 	add	a,#0x09
      00033B C8               [12]  624 	xch	a,r0
      00033C A6 82            [24]  625 	mov	@r0,dpl
      00033E 08               [12]  626 	inc	r0
      00033F A6 83            [24]  627 	mov	@r0,dph
      000341 08               [12]  628 	inc	r0
      000342 A6 F0            [24]  629 	mov	@r0,b
      000344 08               [12]  630 	inc	r0
      000345 F6               [12]  631 	mov	@r0,a
      000346 E5 81            [12]  632 	mov	a,sp
      000348 24 FC            [12]  633 	add	a,#0xfc
      00034A F5 81            [12]  634 	mov	sp,a
      00034C E5*00            [12]  635 	mov	a,_bp
      00034E 24 0D            [12]  636 	add	a,#0x0d
      000350 F8               [12]  637 	mov	r0,a
      000351 E6               [12]  638 	mov	a,@r0
      000352 C0 E0            [24]  639 	push	acc
      000354 08               [12]  640 	inc	r0
      000355 E6               [12]  641 	mov	a,@r0
      000356 C0 E0            [24]  642 	push	acc
      000358 08               [12]  643 	inc	r0
      000359 E6               [12]  644 	mov	a,@r0
      00035A C0 E0            [24]  645 	push	acc
      00035C 08               [12]  646 	inc	r0
      00035D E6               [12]  647 	mov	a,@r0
      00035E C0 E0            [24]  648 	push	acc
      000360 E5*00            [12]  649 	mov	a,_bp
      000362 24 09            [12]  650 	add	a,#0x09
      000364 F8               [12]  651 	mov	r0,a
      000365 86 82            [24]  652 	mov	dpl,@r0
      000367 08               [12]  653 	inc	r0
      000368 86 83            [24]  654 	mov	dph,@r0
      00036A 08               [12]  655 	inc	r0
      00036B 86 F0            [24]  656 	mov	b,@r0
      00036D 08               [12]  657 	inc	r0
      00036E E6               [12]  658 	mov	a,@r0
      00036F 12r00r00         [24]  659 	lcall	___fsmul
      000372 C8               [12]  660 	xch	a,r0
      000373 E5*00            [12]  661 	mov	a,_bp
      000375 24 09            [12]  662 	add	a,#0x09
      000377 C8               [12]  663 	xch	a,r0
      000378 A6 82            [24]  664 	mov	@r0,dpl
      00037A 08               [12]  665 	inc	r0
      00037B A6 83            [24]  666 	mov	@r0,dph
      00037D 08               [12]  667 	inc	r0
      00037E A6 F0            [24]  668 	mov	@r0,b
      000380 08               [12]  669 	inc	r0
      000381 F6               [12]  670 	mov	@r0,a
      000382 E5 81            [12]  671 	mov	a,sp
      000384 24 FC            [12]  672 	add	a,#0xfc
      000386 F5 81            [12]  673 	mov	sp,a
      000388 E5*00            [12]  674 	mov	a,_bp
      00038A 24 0D            [12]  675 	add	a,#0x0d
      00038C F8               [12]  676 	mov	r0,a
      00038D E6               [12]  677 	mov	a,@r0
      00038E C0 E0            [24]  678 	push	acc
      000390 08               [12]  679 	inc	r0
      000391 E6               [12]  680 	mov	a,@r0
      000392 C0 E0            [24]  681 	push	acc
      000394 08               [12]  682 	inc	r0
      000395 E6               [12]  683 	mov	a,@r0
      000396 C0 E0            [24]  684 	push	acc
      000398 08               [12]  685 	inc	r0
      000399 E6               [12]  686 	mov	a,@r0
      00039A C0 E0            [24]  687 	push	acc
      00039C E5*00            [12]  688 	mov	a,_bp
      00039E 24 09            [12]  689 	add	a,#0x09
      0003A0 F8               [12]  690 	mov	r0,a
      0003A1 86 82            [24]  691 	mov	dpl,@r0
      0003A3 08               [12]  692 	inc	r0
      0003A4 86 83            [24]  693 	mov	dph,@r0
      0003A6 08               [12]  694 	inc	r0
      0003A7 86 F0            [24]  695 	mov	b,@r0
      0003A9 08               [12]  696 	inc	r0
      0003AA E6               [12]  697 	mov	a,@r0
      0003AB 12r00r00         [24]  698 	lcall	___fsadd
      0003AE C8               [12]  699 	xch	a,r0
      0003AF E5*00            [12]  700 	mov	a,_bp
      0003B1 24 09            [12]  701 	add	a,#0x09
      0003B3 C8               [12]  702 	xch	a,r0
      0003B4 A6 82            [24]  703 	mov	@r0,dpl
      0003B6 08               [12]  704 	inc	r0
      0003B7 A6 83            [24]  705 	mov	@r0,dph
      0003B9 08               [12]  706 	inc	r0
      0003BA A6 F0            [24]  707 	mov	@r0,b
      0003BC 08               [12]  708 	inc	r0
      0003BD F6               [12]  709 	mov	@r0,a
      0003BE E5 81            [12]  710 	mov	a,sp
      0003C0 24 FC            [12]  711 	add	a,#0xfc
      0003C2 F5 81            [12]  712 	mov	sp,a
      0003C4 D0 04            [24]  713 	pop	ar4
      0003C6 D0 05            [24]  714 	pop	ar5
      0003C8 D0 06            [24]  715 	pop	ar6
      0003CA D0 07            [24]  716 	pop	ar7
      0003CC E5*00            [12]  717 	mov	a,_bp
      0003CE 24 09            [12]  718 	add	a,#0x09
      0003D0 F8               [12]  719 	mov	r0,a
      0003D1 E5*00            [12]  720 	mov	a,_bp
      0003D3 24 15            [12]  721 	add	a,#0x15
      0003D5 F9               [12]  722 	mov	r1,a
      0003D6 E6               [12]  723 	mov	a,@r0
      0003D7 F7               [12]  724 	mov	@r1,a
      0003D8 08               [12]  725 	inc	r0
      0003D9 E6               [12]  726 	mov	a,@r0
      0003DA 09               [12]  727 	inc	r1
      0003DB F7               [12]  728 	mov	@r1,a
      0003DC 08               [12]  729 	inc	r0
      0003DD E6               [12]  730 	mov	a,@r0
      0003DE 09               [12]  731 	inc	r1
      0003DF F7               [12]  732 	mov	@r1,a
      0003E0 08               [12]  733 	inc	r0
      0003E1 E6               [12]  734 	mov	a,@r0
      0003E2 09               [12]  735 	inc	r1
      0003E3 F7               [12]  736 	mov	@r1,a
                                    737 ;	tancotf.c:81: xden = Q(g);
      0003E4 C0 07            [24]  738 	push	ar7
      0003E6 C0 06            [24]  739 	push	ar6
      0003E8 C0 05            [24]  740 	push	ar5
      0003EA C0 04            [24]  741 	push	ar4
      0003EC C0 07            [24]  742 	push	ar7
      0003EE C0 06            [24]  743 	push	ar6
      0003F0 C0 05            [24]  744 	push	ar5
      0003F2 C0 04            [24]  745 	push	ar4
      0003F4 90 33 75         [24]  746 	mov	dptr,#0x3375
      0003F7 75 F0 1F         [24]  747 	mov	b,#0x1f
      0003FA 74 3C            [12]  748 	mov	a,#0x3c
      0003FC 12r00r00         [24]  749 	lcall	___fsmul
      0003FF C8               [12]  750 	xch	a,r0
      000400 E5*00            [12]  751 	mov	a,_bp
      000402 24 09            [12]  752 	add	a,#0x09
      000404 C8               [12]  753 	xch	a,r0
      000405 A6 82            [24]  754 	mov	@r0,dpl
      000407 08               [12]  755 	inc	r0
      000408 A6 83            [24]  756 	mov	@r0,dph
      00040A 08               [12]  757 	inc	r0
      00040B A6 F0            [24]  758 	mov	@r0,b
      00040D 08               [12]  759 	inc	r0
      00040E F6               [12]  760 	mov	@r0,a
      00040F E5 81            [12]  761 	mov	a,sp
      000411 24 FC            [12]  762 	add	a,#0xfc
      000413 F5 81            [12]  763 	mov	sp,a
      000415 74 AF            [12]  764 	mov	a,#0xaf
      000417 C0 E0            [24]  765 	push	acc
      000419 74 B7            [12]  766 	mov	a,#0xb7
      00041B C0 E0            [24]  767 	push	acc
      00041D 03               [12]  768 	rr	a
      00041E C0 E0            [24]  769 	push	acc
      000420 74 BE            [12]  770 	mov	a,#0xbe
      000422 C0 E0            [24]  771 	push	acc
      000424 E5*00            [12]  772 	mov	a,_bp
      000426 24 09            [12]  773 	add	a,#0x09
      000428 F8               [12]  774 	mov	r0,a
      000429 86 82            [24]  775 	mov	dpl,@r0
      00042B 08               [12]  776 	inc	r0
      00042C 86 83            [24]  777 	mov	dph,@r0
      00042E 08               [12]  778 	inc	r0
      00042F 86 F0            [24]  779 	mov	b,@r0
      000431 08               [12]  780 	inc	r0
      000432 E6               [12]  781 	mov	a,@r0
      000433 12r00r00         [24]  782 	lcall	___fsadd
      000436 C8               [12]  783 	xch	a,r0
      000437 E5*00            [12]  784 	mov	a,_bp
      000439 24 09            [12]  785 	add	a,#0x09
      00043B C8               [12]  786 	xch	a,r0
      00043C A6 82            [24]  787 	mov	@r0,dpl
      00043E 08               [12]  788 	inc	r0
      00043F A6 83            [24]  789 	mov	@r0,dph
      000441 08               [12]  790 	inc	r0
      000442 A6 F0            [24]  791 	mov	@r0,b
      000444 08               [12]  792 	inc	r0
      000445 F6               [12]  793 	mov	@r0,a
      000446 E5 81            [12]  794 	mov	a,sp
      000448 24 FC            [12]  795 	add	a,#0xfc
      00044A F5 81            [12]  796 	mov	sp,a
      00044C E5*00            [12]  797 	mov	a,_bp
      00044E 24 09            [12]  798 	add	a,#0x09
      000450 F8               [12]  799 	mov	r0,a
      000451 86 82            [24]  800 	mov	dpl,@r0
      000453 08               [12]  801 	inc	r0
      000454 86 83            [24]  802 	mov	dph,@r0
      000456 08               [12]  803 	inc	r0
      000457 86 F0            [24]  804 	mov	b,@r0
      000459 08               [12]  805 	inc	r0
      00045A E6               [12]  806 	mov	a,@r0
      00045B 12r00r00         [24]  807 	lcall	___fsmul
      00045E AF 82            [24]  808 	mov	r7,dpl
      000460 AE 83            [24]  809 	mov	r6,dph
      000462 AD F0            [24]  810 	mov	r5,b
      000464 FC               [12]  811 	mov	r4,a
      000465 E5 81            [12]  812 	mov	a,sp
      000467 24 FC            [12]  813 	add	a,#0xfc
      000469 F5 81            [12]  814 	mov	sp,a
      00046B E4               [12]  815 	clr	a
      00046C C0 E0            [24]  816 	push	acc
      00046E C0 E0            [24]  817 	push	acc
      000470 74 80            [12]  818 	mov	a,#0x80
      000472 C0 E0            [24]  819 	push	acc
      000474 74 3F            [12]  820 	mov	a,#0x3f
      000476 C0 E0            [24]  821 	push	acc
      000478 8F 82            [24]  822 	mov	dpl,r7
      00047A 8E 83            [24]  823 	mov	dph,r6
      00047C 8D F0            [24]  824 	mov	b,r5
      00047E EC               [12]  825 	mov	a,r4
      00047F 12r00r00         [24]  826 	lcall	___fsadd
      000482 AC 82            [24]  827 	mov	r4,dpl
      000484 AD 83            [24]  828 	mov	r5,dph
      000486 AE F0            [24]  829 	mov	r6,b
      000488 FF               [12]  830 	mov	r7,a
      000489 E5 81            [12]  831 	mov	a,sp
      00048B 24 FC            [12]  832 	add	a,#0xfc
      00048D F5 81            [12]  833 	mov	sp,a
      00048F E5*00            [12]  834 	mov	a,_bp
      000491 24 19            [12]  835 	add	a,#0x19
      000493 F8               [12]  836 	mov	r0,a
      000494 A6 04            [24]  837 	mov	@r0,ar4
      000496 08               [12]  838 	inc	r0
      000497 A6 05            [24]  839 	mov	@r0,ar5
      000499 08               [12]  840 	inc	r0
      00049A A6 06            [24]  841 	mov	@r0,ar6
      00049C 08               [12]  842 	inc	r0
      00049D A6 07            [24]  843 	mov	@r0,ar7
      00049F                        844 00105$:
                                    845 ;	tancotf.c:84: if(n&1)
      00049F E5*00            [12]  846 	mov	a,_bp
      0004A1 24 1D            [12]  847 	add	a,#0x1d
      0004A3 F8               [12]  848 	mov	r0,a
      0004A4 E6               [12]  849 	mov	a,@r0
      0004A5 20 E0 03         [24]  850 	jb	acc.0,00152$
      0004A8 02r05r41         [24]  851 	ljmp	00113$
      0004AB                        852 00152$:
                                    853 ;	tancotf.c:87: if(iscotan) return (-xnum/xden);
      0004AB E5*00            [12]  854 	mov	a,_bp
      0004AD 24 FD            [12]  855 	add	a,#0xfd
      0004AF F8               [12]  856 	mov	r0,a
      0004B0 E6               [12]  857 	mov	a,@r0
      0004B1 60 47            [24]  858 	jz	00107$
      0004B3 E5*00            [12]  859 	mov	a,_bp
      0004B5 24 15            [12]  860 	add	a,#0x15
      0004B7 F8               [12]  861 	mov	r0,a
      0004B8 86 04            [24]  862 	mov	ar4,@r0
      0004BA 08               [12]  863 	inc	r0
      0004BB 86 05            [24]  864 	mov	ar5,@r0
      0004BD 08               [12]  865 	inc	r0
      0004BE 86 06            [24]  866 	mov	ar6,@r0
      0004C0 08               [12]  867 	inc	r0
      0004C1 E6               [12]  868 	mov	a,@r0
      0004C2 B2 E7            [12]  869 	cpl	acc.7
      0004C4 FF               [12]  870 	mov	r7,a
      0004C5 E5*00            [12]  871 	mov	a,_bp
      0004C7 24 19            [12]  872 	add	a,#0x19
      0004C9 F8               [12]  873 	mov	r0,a
      0004CA E6               [12]  874 	mov	a,@r0
      0004CB C0 E0            [24]  875 	push	acc
      0004CD 08               [12]  876 	inc	r0
      0004CE E6               [12]  877 	mov	a,@r0
      0004CF C0 E0            [24]  878 	push	acc
      0004D1 08               [12]  879 	inc	r0
      0004D2 E6               [12]  880 	mov	a,@r0
      0004D3 C0 E0            [24]  881 	push	acc
      0004D5 08               [12]  882 	inc	r0
      0004D6 E6               [12]  883 	mov	a,@r0
      0004D7 C0 E0            [24]  884 	push	acc
      0004D9 8C 82            [24]  885 	mov	dpl,r4
      0004DB 8D 83            [24]  886 	mov	dph,r5
      0004DD 8E F0            [24]  887 	mov	b,r6
      0004DF EF               [12]  888 	mov	a,r7
      0004E0 12r00r00         [24]  889 	lcall	___fsdiv
      0004E3 AC 82            [24]  890 	mov	r4,dpl
      0004E5 AD 83            [24]  891 	mov	r5,dph
      0004E7 AE F0            [24]  892 	mov	r6,b
      0004E9 FF               [12]  893 	mov	r7,a
      0004EA E5 81            [12]  894 	mov	a,sp
      0004EC 24 FC            [12]  895 	add	a,#0xfc
      0004EE F5 81            [12]  896 	mov	sp,a
      0004F0 8C 82            [24]  897 	mov	dpl,r4
      0004F2 8D 83            [24]  898 	mov	dph,r5
      0004F4 8E F0            [24]  899 	mov	b,r6
      0004F6 EF               [12]  900 	mov	a,r7
      0004F7 02r05rBF         [24]  901 	ljmp	00115$
      0004FA                        902 00107$:
                                    903 ;	tancotf.c:88: else return (-xden/xnum);
      0004FA E5*00            [12]  904 	mov	a,_bp
      0004FC 24 19            [12]  905 	add	a,#0x19
      0004FE F8               [12]  906 	mov	r0,a
      0004FF 86 04            [24]  907 	mov	ar4,@r0
      000501 08               [12]  908 	inc	r0
      000502 86 05            [24]  909 	mov	ar5,@r0
      000504 08               [12]  910 	inc	r0
      000505 86 06            [24]  911 	mov	ar6,@r0
      000507 08               [12]  912 	inc	r0
      000508 E6               [12]  913 	mov	a,@r0
      000509 B2 E7            [12]  914 	cpl	acc.7
      00050B FF               [12]  915 	mov	r7,a
      00050C E5*00            [12]  916 	mov	a,_bp
      00050E 24 15            [12]  917 	add	a,#0x15
      000510 F8               [12]  918 	mov	r0,a
      000511 E6               [12]  919 	mov	a,@r0
      000512 C0 E0            [24]  920 	push	acc
      000514 08               [12]  921 	inc	r0
      000515 E6               [12]  922 	mov	a,@r0
      000516 C0 E0            [24]  923 	push	acc
      000518 08               [12]  924 	inc	r0
      000519 E6               [12]  925 	mov	a,@r0
      00051A C0 E0            [24]  926 	push	acc
      00051C 08               [12]  927 	inc	r0
      00051D E6               [12]  928 	mov	a,@r0
      00051E C0 E0            [24]  929 	push	acc
      000520 8C 82            [24]  930 	mov	dpl,r4
      000522 8D 83            [24]  931 	mov	dph,r5
      000524 8E F0            [24]  932 	mov	b,r6
      000526 EF               [12]  933 	mov	a,r7
      000527 12r00r00         [24]  934 	lcall	___fsdiv
      00052A AC 82            [24]  935 	mov	r4,dpl
      00052C AD 83            [24]  936 	mov	r5,dph
      00052E AE F0            [24]  937 	mov	r6,b
      000530 FF               [12]  938 	mov	r7,a
      000531 E5 81            [12]  939 	mov	a,sp
      000533 24 FC            [12]  940 	add	a,#0xfc
      000535 F5 81            [12]  941 	mov	sp,a
      000537 8C 82            [24]  942 	mov	dpl,r4
      000539 8D 83            [24]  943 	mov	dph,r5
      00053B 8E F0            [24]  944 	mov	b,r6
      00053D EF               [12]  945 	mov	a,r7
      00053E 02r05rBF         [24]  946 	ljmp	00115$
      000541                        947 00113$:
                                    948 ;	tancotf.c:92: if(iscotan) return (xden/xnum);
      000541 E5*00            [12]  949 	mov	a,_bp
      000543 24 FD            [12]  950 	add	a,#0xfd
      000545 F8               [12]  951 	mov	r0,a
      000546 E6               [12]  952 	mov	a,@r0
      000547 60 3C            [24]  953 	jz	00110$
      000549 E5*00            [12]  954 	mov	a,_bp
      00054B 24 15            [12]  955 	add	a,#0x15
      00054D F8               [12]  956 	mov	r0,a
      00054E E6               [12]  957 	mov	a,@r0
      00054F C0 E0            [24]  958 	push	acc
      000551 08               [12]  959 	inc	r0
      000552 E6               [12]  960 	mov	a,@r0
      000553 C0 E0            [24]  961 	push	acc
      000555 08               [12]  962 	inc	r0
      000556 E6               [12]  963 	mov	a,@r0
      000557 C0 E0            [24]  964 	push	acc
      000559 08               [12]  965 	inc	r0
      00055A E6               [12]  966 	mov	a,@r0
      00055B C0 E0            [24]  967 	push	acc
      00055D E5*00            [12]  968 	mov	a,_bp
      00055F 24 19            [12]  969 	add	a,#0x19
      000561 F8               [12]  970 	mov	r0,a
      000562 86 82            [24]  971 	mov	dpl,@r0
      000564 08               [12]  972 	inc	r0
      000565 86 83            [24]  973 	mov	dph,@r0
      000567 08               [12]  974 	inc	r0
      000568 86 F0            [24]  975 	mov	b,@r0
      00056A 08               [12]  976 	inc	r0
      00056B E6               [12]  977 	mov	a,@r0
      00056C 12r00r00         [24]  978 	lcall	___fsdiv
      00056F AC 82            [24]  979 	mov	r4,dpl
      000571 AD 83            [24]  980 	mov	r5,dph
      000573 AE F0            [24]  981 	mov	r6,b
      000575 FF               [12]  982 	mov	r7,a
      000576 E5 81            [12]  983 	mov	a,sp
      000578 24 FC            [12]  984 	add	a,#0xfc
      00057A F5 81            [12]  985 	mov	sp,a
      00057C 8C 82            [24]  986 	mov	dpl,r4
      00057E 8D 83            [24]  987 	mov	dph,r5
      000580 8E F0            [24]  988 	mov	b,r6
      000582 EF               [12]  989 	mov	a,r7
      000583 80 3A            [24]  990 	sjmp	00115$
      000585                        991 00110$:
                                    992 ;	tancotf.c:93: else return (xnum/xden);
      000585 E5*00            [12]  993 	mov	a,_bp
      000587 24 19            [12]  994 	add	a,#0x19
      000589 F8               [12]  995 	mov	r0,a
      00058A E6               [12]  996 	mov	a,@r0
      00058B C0 E0            [24]  997 	push	acc
      00058D 08               [12]  998 	inc	r0
      00058E E6               [12]  999 	mov	a,@r0
      00058F C0 E0            [24] 1000 	push	acc
      000591 08               [12] 1001 	inc	r0
      000592 E6               [12] 1002 	mov	a,@r0
      000593 C0 E0            [24] 1003 	push	acc
      000595 08               [12] 1004 	inc	r0
      000596 E6               [12] 1005 	mov	a,@r0
      000597 C0 E0            [24] 1006 	push	acc
      000599 E5*00            [12] 1007 	mov	a,_bp
      00059B 24 15            [12] 1008 	add	a,#0x15
      00059D F8               [12] 1009 	mov	r0,a
      00059E 86 82            [24] 1010 	mov	dpl,@r0
      0005A0 08               [12] 1011 	inc	r0
      0005A1 86 83            [24] 1012 	mov	dph,@r0
      0005A3 08               [12] 1013 	inc	r0
      0005A4 86 F0            [24] 1014 	mov	b,@r0
      0005A6 08               [12] 1015 	inc	r0
      0005A7 E6               [12] 1016 	mov	a,@r0
      0005A8 12r00r00         [24] 1017 	lcall	___fsdiv
      0005AB AC 82            [24] 1018 	mov	r4,dpl
      0005AD AD 83            [24] 1019 	mov	r5,dph
      0005AF AE F0            [24] 1020 	mov	r6,b
      0005B1 FF               [12] 1021 	mov	r7,a
      0005B2 E5 81            [12] 1022 	mov	a,sp
      0005B4 24 FC            [12] 1023 	add	a,#0xfc
      0005B6 F5 81            [12] 1024 	mov	sp,a
      0005B8 8C 82            [24] 1025 	mov	dpl,r4
      0005BA 8D 83            [24] 1026 	mov	dph,r5
      0005BC 8E F0            [24] 1027 	mov	b,r6
      0005BE EF               [12] 1028 	mov	a,r7
      0005BF                       1029 00115$:
                                   1030 ;	tancotf.c:95: }
      0005BF 85*00 81         [24] 1031 	mov	sp,_bp
      0005C2 D0*00            [24] 1032 	pop	_bp
      0005C4 22               [24] 1033 	ret
                                   1034 	.area CSEG    (CODE)
                                   1035 	.area CONST   (CODE)
                                   1036 	.area XINIT   (CODE)
                                   1037 	.area CABS    (ABS,CODE)
