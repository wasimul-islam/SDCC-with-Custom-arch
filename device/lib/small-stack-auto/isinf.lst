                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module isinf
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _isinf
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; overlayable bit register bank
                                     29 ;--------------------------------------------------------
                                     30 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         31 bits:
      000000                         32 	.ds 1
                           008000    33 	b0 = bits[0]
                           008100    34 	b1 = bits[1]
                           008200    35 	b2 = bits[2]
                           008300    36 	b3 = bits[3]
                           008400    37 	b4 = bits[4]
                           008500    38 	b5 = bits[5]
                           008600    39 	b6 = bits[6]
                           008700    40 	b7 = bits[7]
                                     41 ;--------------------------------------------------------
                                     42 ; internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area DSEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; overlayable items in internal ram
                                     47 ;--------------------------------------------------------
                                     48 ;--------------------------------------------------------
                                     49 ; indirectly addressable internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area ISEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; absolute internal ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area IABS    (ABS,DATA)
                                     56 	.area IABS    (ABS,DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; bit data
                                     59 ;--------------------------------------------------------
                                     60 	.area BSEG    (BIT)
                                     61 ;--------------------------------------------------------
                                     62 ; paged external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area PSEG    (PAG,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; uninitialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XSEG    (XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; absolute external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XABS    (ABS,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; initialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XISEG   (XDATA)
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT0 (CODE)
                                     79 	.area GSINIT1 (CODE)
                                     80 	.area GSINIT2 (CODE)
                                     81 	.area GSINIT3 (CODE)
                                     82 	.area GSINIT4 (CODE)
                                     83 	.area GSINIT5 (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area CSEG    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'isinf'
                                    105 ;------------------------------------------------------------
                                    106 ;f                         Allocated to stack - _bp +1
                                    107 ;pl                        Allocated to registers r7 r5 r6 
                                    108 ;------------------------------------------------------------
                                    109 ;	isinf.c:33: int isinf (float f)
                                    110 ;	-----------------------------------------
                                    111 ;	 function isinf
                                    112 ;	-----------------------------------------
      000000                        113 _isinf:
                           000007   114 	ar7 = 0x07
                           000006   115 	ar6 = 0x06
                           000005   116 	ar5 = 0x05
                           000004   117 	ar4 = 0x04
                           000003   118 	ar3 = 0x03
                           000002   119 	ar2 = 0x02
                           000001   120 	ar1 = 0x01
                           000000   121 	ar0 = 0x00
      000000 C0*00            [24]  122 	push	_bp
      000002 85 81*00         [24]  123 	mov	_bp,sp
      000005 C0 82            [24]  124 	push	dpl
      000007 C0 83            [24]  125 	push	dph
      000009 C0 F0            [24]  126 	push	b
      00000B C0 E0            [24]  127 	push	acc
                                    128 ;	isinf.c:35: unsigned long *pl = (unsigned long *) &f;
      00000D AF*00            [24]  129 	mov	r7,_bp
      00000F 0F               [12]  130 	inc	r7
      000010 7D 00            [12]  131 	mov	r5,#0x00
      000012 7E 40            [12]  132 	mov	r6,#0x40
                                    133 ;	isinf.c:36: return *pl == 0x7f800000 || *pl == 0xff800000;
      000014 8F 82            [24]  134 	mov	dpl,r7
      000016 8D 83            [24]  135 	mov	dph,r5
      000018 8E F0            [24]  136 	mov	b,r6
      00001A 12r00r00         [24]  137 	lcall	__gptrget
      00001D FC               [12]  138 	mov	r4,a
      00001E A3               [24]  139 	inc	dptr
      00001F 12r00r00         [24]  140 	lcall	__gptrget
      000022 FD               [12]  141 	mov	r5,a
      000023 A3               [24]  142 	inc	dptr
      000024 12r00r00         [24]  143 	lcall	__gptrget
      000027 FE               [12]  144 	mov	r6,a
      000028 A3               [24]  145 	inc	dptr
      000029 12r00r00         [24]  146 	lcall	__gptrget
      00002C FF               [12]  147 	mov	r7,a
      00002D BC 00 0B         [24]  148 	cjne	r4,#0x00,00114$
      000030 BD 00 08         [24]  149 	cjne	r5,#0x00,00114$
      000033 BE 80 05         [24]  150 	cjne	r6,#0x80,00114$
      000036 BF 7F 02         [24]  151 	cjne	r7,#0x7f,00114$
      000039 80 12            [24]  152 	sjmp	00104$
      00003B                        153 00114$:
      00003B BC 00 0B         [24]  154 	cjne	r4,#0x00,00115$
      00003E BD 00 08         [24]  155 	cjne	r5,#0x00,00115$
      000041 BE 80 05         [24]  156 	cjne	r6,#0x80,00115$
      000044 BF FF 02         [24]  157 	cjne	r7,#0xff,00115$
      000047 80 04            [24]  158 	sjmp	00104$
      000049                        159 00115$:
                                    160 ;	assignBit
      000049 C2*00            [12]  161 	clr	b0
      00004B 80 02            [24]  162 	sjmp	00105$
      00004D                        163 00104$:
                                    164 ;	assignBit
      00004D D2*00            [12]  165 	setb	b0
      00004F                        166 00105$:
      00004F A2*00            [12]  167 	mov	c,b0
      000051 E4               [12]  168 	clr	a
      000052 33               [12]  169 	rlc	a
      000053 FE               [12]  170 	mov	r6,a
      000054 7F 00            [12]  171 	mov	r7,#0x00
      000056 8E 82            [24]  172 	mov	dpl,r6
      000058 8F 83            [24]  173 	mov	dph,r7
                                    174 ;	isinf.c:37: }
      00005A 85*00 81         [24]  175 	mov	sp,_bp
      00005D D0*00            [24]  176 	pop	_bp
      00005F 22               [24]  177 	ret
                                    178 	.area CSEG    (CODE)
                                    179 	.area CONST   (CODE)
                                    180 	.area XINIT   (CODE)
                                    181 	.area CABS    (ABS,CODE)
