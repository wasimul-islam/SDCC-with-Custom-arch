                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module sqrtf
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ldexpf
                                     12 	.globl _frexpf
                                     13 	.globl _sqrtf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; uninitialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; initialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'sqrtf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;f                         Allocated to stack - _bp +9
                                     96 ;y                         Allocated to registers r4 r5 r6 r7 
                                     97 ;n                         Allocated to stack - _bp +13
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;------------------------------------------------------------
                                    100 ;	sqrtf.c:37: float sqrtf(float x) _FLOAT_FUNC_REENTRANT
                                    101 ;	-----------------------------------------
                                    102 ;	 function sqrtf
                                    103 ;	-----------------------------------------
      000000                        104 _sqrtf:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C0 82            [24]  115 	push	dpl
      000007 C0 83            [24]  116 	push	dph
      000009 C0 F0            [24]  117 	push	b
      00000B C0 E0            [24]  118 	push	acc
      00000D E5 81            [12]  119 	mov	a,sp
      00000F 24 0A            [12]  120 	add	a,#0x0a
      000011 F5 81            [12]  121 	mov	sp,a
                                    122 ;	sqrtf.c:42: if (x==0.0) return x;
      000013 A8*00            [24]  123 	mov	r0,_bp
      000015 08               [12]  124 	inc	r0
      000016 86 F0            [24]  125 	mov	b,@r0
      000018 08               [12]  126 	inc	r0
      000019 E6               [12]  127 	mov	a,@r0
      00001A 42 F0            [12]  128 	orl	b,a
      00001C 08               [12]  129 	inc	r0
      00001D E6               [12]  130 	mov	a,@r0
      00001E 42 F0            [12]  131 	orl	b,a
      000020 08               [12]  132 	inc	r0
      000021 E6               [12]  133 	mov	a,@r0
      000022 54 7F            [12]  134 	anl	a,#0x7F
      000024 45 F0            [12]  135 	orl	a,b
      000026 70 10            [24]  136 	jnz	00107$
      000028 A8*00            [24]  137 	mov	r0,_bp
      00002A 08               [12]  138 	inc	r0
      00002B 86 82            [24]  139 	mov	dpl,@r0
      00002D 08               [12]  140 	inc	r0
      00002E 86 83            [24]  141 	mov	dph,@r0
      000030 08               [12]  142 	inc	r0
      000031 86 F0            [24]  143 	mov	b,@r0
      000033 08               [12]  144 	inc	r0
      000034 E6               [12]  145 	mov	a,@r0
      000035 02r02r92         [24]  146 	ljmp	00111$
      000038                        147 00107$:
                                    148 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
      000038 E4               [12]  149 	clr	a
      000039 C0 E0            [24]  150 	push	acc
      00003B C0 E0            [24]  151 	push	acc
      00003D 74 80            [12]  152 	mov	a,#0x80
      00003F C0 E0            [24]  153 	push	acc
      000041 74 3F            [12]  154 	mov	a,#0x3f
      000043 C0 E0            [24]  155 	push	acc
      000045 A8*00            [24]  156 	mov	r0,_bp
      000047 08               [12]  157 	inc	r0
      000048 86 82            [24]  158 	mov	dpl,@r0
      00004A 08               [12]  159 	inc	r0
      00004B 86 83            [24]  160 	mov	dph,@r0
      00004D 08               [12]  161 	inc	r0
      00004E 86 F0            [24]  162 	mov	b,@r0
      000050 08               [12]  163 	inc	r0
      000051 E6               [12]  164 	mov	a,@r0
      000052 12r00r00         [24]  165 	lcall	___fseq
      000055 AB 82            [24]  166 	mov	r3,dpl
      000057 E5 81            [12]  167 	mov	a,sp
      000059 24 FC            [12]  168 	add	a,#0xfc
      00005B F5 81            [12]  169 	mov	sp,a
      00005D EB               [12]  170 	mov	a,r3
      00005E 60 0B            [24]  171 	jz	00104$
      000060 90 00 00         [24]  172 	mov	dptr,#0x0000
      000063 75 F0 80         [24]  173 	mov	b,#0x80
      000066 74 3F            [12]  174 	mov	a,#0x3f
      000068 02r02r92         [24]  175 	ljmp	00111$
      00006B                        176 00104$:
                                    177 ;	sqrtf.c:44: else if (x<0.0)
      00006B E4               [12]  178 	clr	a
      00006C C0 E0            [24]  179 	push	acc
      00006E C0 E0            [24]  180 	push	acc
      000070 C0 E0            [24]  181 	push	acc
      000072 C0 E0            [24]  182 	push	acc
      000074 A8*00            [24]  183 	mov	r0,_bp
      000076 08               [12]  184 	inc	r0
      000077 86 82            [24]  185 	mov	dpl,@r0
      000079 08               [12]  186 	inc	r0
      00007A 86 83            [24]  187 	mov	dph,@r0
      00007C 08               [12]  188 	inc	r0
      00007D 86 F0            [24]  189 	mov	b,@r0
      00007F 08               [12]  190 	inc	r0
      000080 E6               [12]  191 	mov	a,@r0
      000081 12r00r00         [24]  192 	lcall	___fslt
      000084 AB 82            [24]  193 	mov	r3,dpl
      000086 E5 81            [12]  194 	mov	a,sp
      000088 24 FC            [12]  195 	add	a,#0xfc
      00008A F5 81            [12]  196 	mov	sp,a
      00008C EB               [12]  197 	mov	a,r3
      00008D 60 0F            [24]  198 	jz	00108$
                                    199 ;	sqrtf.c:46: errno=EDOM;
      00008F 75*00 21         [24]  200 	mov	_errno,#0x21
      000092 75*01 00         [24]  201 	mov	(_errno + 1),#0x00
                                    202 ;	sqrtf.c:47: return 0.0;
      000095 90 00 00         [24]  203 	mov	dptr,#(0x00&0x00ff)
      000098 E4               [12]  204 	clr	a
      000099 F5 F0            [12]  205 	mov	b,a
      00009B 02r02r92         [24]  206 	ljmp	00111$
      00009E                        207 00108$:
                                    208 ;	sqrtf.c:49: f=frexpf(x, &n);
      00009E E5*00            [12]  209 	mov	a,_bp
      0000A0 24 0D            [12]  210 	add	a,#0x0d
      0000A2 FA               [12]  211 	mov	r2,a
      0000A3 7B 00            [12]  212 	mov	r3,#0x00
      0000A5 7F 40            [12]  213 	mov	r7,#0x40
      0000A7 C0 02            [24]  214 	push	ar2
      0000A9 C0 03            [24]  215 	push	ar3
      0000AB C0 07            [24]  216 	push	ar7
      0000AD A8*00            [24]  217 	mov	r0,_bp
      0000AF 08               [12]  218 	inc	r0
      0000B0 86 82            [24]  219 	mov	dpl,@r0
      0000B2 08               [12]  220 	inc	r0
      0000B3 86 83            [24]  221 	mov	dph,@r0
      0000B5 08               [12]  222 	inc	r0
      0000B6 86 F0            [24]  223 	mov	b,@r0
      0000B8 08               [12]  224 	inc	r0
      0000B9 E6               [12]  225 	mov	a,@r0
      0000BA 12r00r00         [24]  226 	lcall	_frexpf
      0000BD AC 82            [24]  227 	mov	r4,dpl
      0000BF AD 83            [24]  228 	mov	r5,dph
      0000C1 AE F0            [24]  229 	mov	r6,b
      0000C3 FF               [12]  230 	mov	r7,a
      0000C4 15 81            [12]  231 	dec	sp
      0000C6 15 81            [12]  232 	dec	sp
      0000C8 15 81            [12]  233 	dec	sp
      0000CA E5*00            [12]  234 	mov	a,_bp
      0000CC 24 09            [12]  235 	add	a,#0x09
      0000CE F8               [12]  236 	mov	r0,a
      0000CF A6 04            [24]  237 	mov	@r0,ar4
      0000D1 08               [12]  238 	inc	r0
      0000D2 A6 05            [24]  239 	mov	@r0,ar5
      0000D4 08               [12]  240 	inc	r0
      0000D5 A6 06            [24]  241 	mov	@r0,ar6
      0000D7 08               [12]  242 	inc	r0
      0000D8 A6 07            [24]  243 	mov	@r0,ar7
                                    244 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
      0000DA E5*00            [12]  245 	mov	a,_bp
      0000DC 24 09            [12]  246 	add	a,#0x09
      0000DE F8               [12]  247 	mov	r0,a
      0000DF E6               [12]  248 	mov	a,@r0
      0000E0 C0 E0            [24]  249 	push	acc
      0000E2 08               [12]  250 	inc	r0
      0000E3 E6               [12]  251 	mov	a,@r0
      0000E4 C0 E0            [24]  252 	push	acc
      0000E6 08               [12]  253 	inc	r0
      0000E7 E6               [12]  254 	mov	a,@r0
      0000E8 C0 E0            [24]  255 	push	acc
      0000EA 08               [12]  256 	inc	r0
      0000EB E6               [12]  257 	mov	a,@r0
      0000EC C0 E0            [24]  258 	push	acc
      0000EE 90 14 BA         [24]  259 	mov	dptr,#0x14ba
      0000F1 75 F0 17         [24]  260 	mov	b,#0x17
      0000F4 74 3F            [12]  261 	mov	a,#0x3f
      0000F6 12r00r00         [24]  262 	lcall	___fsmul
      0000F9 AA 82            [24]  263 	mov	r2,dpl
      0000FB AB 83            [24]  264 	mov	r3,dph
      0000FD AE F0            [24]  265 	mov	r6,b
      0000FF FF               [12]  266 	mov	r7,a
      000100 E5 81            [12]  267 	mov	a,sp
      000102 24 FC            [12]  268 	add	a,#0xfc
      000104 F5 81            [12]  269 	mov	sp,a
      000106 74 A8            [12]  270 	mov	a,#0xa8
      000108 C0 E0            [24]  271 	push	acc
      00010A 04               [12]  272 	inc	a
      00010B C0 E0            [24]  273 	push	acc
      00010D 74 D5            [12]  274 	mov	a,#0xd5
      00010F C0 E0            [24]  275 	push	acc
      000111 74 3E            [12]  276 	mov	a,#0x3e
      000113 C0 E0            [24]  277 	push	acc
      000115 8A 82            [24]  278 	mov	dpl,r2
      000117 8B 83            [24]  279 	mov	dph,r3
      000119 8E F0            [24]  280 	mov	b,r6
      00011B EF               [12]  281 	mov	a,r7
      00011C 12r00r00         [24]  282 	lcall	___fsadd
      00011F C8               [12]  283 	xch	a,r0
      000120 E5*00            [12]  284 	mov	a,_bp
      000122 24 05            [12]  285 	add	a,#0x05
      000124 C8               [12]  286 	xch	a,r0
      000125 A6 82            [24]  287 	mov	@r0,dpl
      000127 08               [12]  288 	inc	r0
      000128 A6 83            [24]  289 	mov	@r0,dph
      00012A 08               [12]  290 	inc	r0
      00012B A6 F0            [24]  291 	mov	@r0,b
      00012D 08               [12]  292 	inc	r0
      00012E F6               [12]  293 	mov	@r0,a
      00012F E5 81            [12]  294 	mov	a,sp
      000131 24 FC            [12]  295 	add	a,#0xfc
      000133 F5 81            [12]  296 	mov	sp,a
                                    297 ;	sqrtf.c:52: y+=f/y;
      000135 E5*00            [12]  298 	mov	a,_bp
      000137 24 05            [12]  299 	add	a,#0x05
      000139 F8               [12]  300 	mov	r0,a
      00013A E6               [12]  301 	mov	a,@r0
      00013B C0 E0            [24]  302 	push	acc
      00013D 08               [12]  303 	inc	r0
      00013E E6               [12]  304 	mov	a,@r0
      00013F C0 E0            [24]  305 	push	acc
      000141 08               [12]  306 	inc	r0
      000142 E6               [12]  307 	mov	a,@r0
      000143 C0 E0            [24]  308 	push	acc
      000145 08               [12]  309 	inc	r0
      000146 E6               [12]  310 	mov	a,@r0
      000147 C0 E0            [24]  311 	push	acc
      000149 E5*00            [12]  312 	mov	a,_bp
      00014B 24 09            [12]  313 	add	a,#0x09
      00014D F8               [12]  314 	mov	r0,a
      00014E 86 82            [24]  315 	mov	dpl,@r0
      000150 08               [12]  316 	inc	r0
      000151 86 83            [24]  317 	mov	dph,@r0
      000153 08               [12]  318 	inc	r0
      000154 86 F0            [24]  319 	mov	b,@r0
      000156 08               [12]  320 	inc	r0
      000157 E6               [12]  321 	mov	a,@r0
      000158 12r00r00         [24]  322 	lcall	___fsdiv
      00015B AA 82            [24]  323 	mov	r2,dpl
      00015D AB 83            [24]  324 	mov	r3,dph
      00015F AE F0            [24]  325 	mov	r6,b
      000161 FF               [12]  326 	mov	r7,a
      000162 E5 81            [12]  327 	mov	a,sp
      000164 24 FC            [12]  328 	add	a,#0xfc
      000166 F5 81            [12]  329 	mov	sp,a
      000168 C0 02            [24]  330 	push	ar2
      00016A C0 03            [24]  331 	push	ar3
      00016C C0 06            [24]  332 	push	ar6
      00016E C0 07            [24]  333 	push	ar7
      000170 E5*00            [12]  334 	mov	a,_bp
      000172 24 05            [12]  335 	add	a,#0x05
      000174 F8               [12]  336 	mov	r0,a
      000175 86 82            [24]  337 	mov	dpl,@r0
      000177 08               [12]  338 	inc	r0
      000178 86 83            [24]  339 	mov	dph,@r0
      00017A 08               [12]  340 	inc	r0
      00017B 86 F0            [24]  341 	mov	b,@r0
      00017D 08               [12]  342 	inc	r0
      00017E E6               [12]  343 	mov	a,@r0
      00017F 12r00r00         [24]  344 	lcall	___fsadd
      000182 AC 82            [24]  345 	mov	r4,dpl
      000184 AD 83            [24]  346 	mov	r5,dph
      000186 AE F0            [24]  347 	mov	r6,b
      000188 FF               [12]  348 	mov	r7,a
      000189 E5 81            [12]  349 	mov	a,sp
      00018B 24 FC            [12]  350 	add	a,#0xfc
      00018D F5 81            [12]  351 	mov	sp,a
                                    352 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
      00018F C0 07            [24]  353 	push	ar7
      000191 C0 06            [24]  354 	push	ar6
      000193 C0 05            [24]  355 	push	ar5
      000195 C0 04            [24]  356 	push	ar4
      000197 74 FE            [12]  357 	mov	a,#0xfe
      000199 C0 E0            [24]  358 	push	acc
      00019B 04               [12]  359 	inc	a
      00019C C0 E0            [24]  360 	push	acc
      00019E 8C 82            [24]  361 	mov	dpl,r4
      0001A0 8D 83            [24]  362 	mov	dph,r5
      0001A2 8E F0            [24]  363 	mov	b,r6
      0001A4 EF               [12]  364 	mov	a,r7
      0001A5 12r00r00         [24]  365 	lcall	_ldexpf
      0001A8 C8               [12]  366 	xch	a,r0
      0001A9 E5*00            [12]  367 	mov	a,_bp
      0001AB 24 05            [12]  368 	add	a,#0x05
      0001AD C8               [12]  369 	xch	a,r0
      0001AE A6 82            [24]  370 	mov	@r0,dpl
      0001B0 08               [12]  371 	inc	r0
      0001B1 A6 83            [24]  372 	mov	@r0,dph
      0001B3 08               [12]  373 	inc	r0
      0001B4 A6 F0            [24]  374 	mov	@r0,b
      0001B6 08               [12]  375 	inc	r0
      0001B7 F6               [12]  376 	mov	@r0,a
      0001B8 15 81            [12]  377 	dec	sp
      0001BA 15 81            [12]  378 	dec	sp
      0001BC D0 04            [24]  379 	pop	ar4
      0001BE D0 05            [24]  380 	pop	ar5
      0001C0 D0 06            [24]  381 	pop	ar6
      0001C2 D0 07            [24]  382 	pop	ar7
      0001C4 C0 04            [24]  383 	push	ar4
      0001C6 C0 05            [24]  384 	push	ar5
      0001C8 C0 06            [24]  385 	push	ar6
      0001CA C0 07            [24]  386 	push	ar7
      0001CC E5*00            [12]  387 	mov	a,_bp
      0001CE 24 09            [12]  388 	add	a,#0x09
      0001D0 F8               [12]  389 	mov	r0,a
      0001D1 86 82            [24]  390 	mov	dpl,@r0
      0001D3 08               [12]  391 	inc	r0
      0001D4 86 83            [24]  392 	mov	dph,@r0
      0001D6 08               [12]  393 	inc	r0
      0001D7 86 F0            [24]  394 	mov	b,@r0
      0001D9 08               [12]  395 	inc	r0
      0001DA E6               [12]  396 	mov	a,@r0
      0001DB 12r00r00         [24]  397 	lcall	___fsdiv
      0001DE AC 82            [24]  398 	mov	r4,dpl
      0001E0 AD 83            [24]  399 	mov	r5,dph
      0001E2 AE F0            [24]  400 	mov	r6,b
      0001E4 FF               [12]  401 	mov	r7,a
      0001E5 E5 81            [12]  402 	mov	a,sp
      0001E7 24 FC            [12]  403 	add	a,#0xfc
      0001E9 F5 81            [12]  404 	mov	sp,a
      0001EB C0 04            [24]  405 	push	ar4
      0001ED C0 05            [24]  406 	push	ar5
      0001EF C0 06            [24]  407 	push	ar6
      0001F1 C0 07            [24]  408 	push	ar7
      0001F3 E5*00            [12]  409 	mov	a,_bp
      0001F5 24 05            [12]  410 	add	a,#0x05
      0001F7 F8               [12]  411 	mov	r0,a
      0001F8 86 82            [24]  412 	mov	dpl,@r0
      0001FA 08               [12]  413 	inc	r0
      0001FB 86 83            [24]  414 	mov	dph,@r0
      0001FD 08               [12]  415 	inc	r0
      0001FE 86 F0            [24]  416 	mov	b,@r0
      000200 08               [12]  417 	inc	r0
      000201 E6               [12]  418 	mov	a,@r0
      000202 12r00r00         [24]  419 	lcall	___fsadd
      000205 AC 82            [24]  420 	mov	r4,dpl
      000207 AD 83            [24]  421 	mov	r5,dph
      000209 AE F0            [24]  422 	mov	r6,b
      00020B FF               [12]  423 	mov	r7,a
      00020C E5 81            [12]  424 	mov	a,sp
      00020E 24 FC            [12]  425 	add	a,#0xfc
      000210 F5 81            [12]  426 	mov	sp,a
                                    427 ;	sqrtf.c:55: if (n&1)
      000212 E5*00            [12]  428 	mov	a,_bp
      000214 24 0D            [12]  429 	add	a,#0x0d
      000216 F8               [12]  430 	mov	r0,a
      000217 E6               [12]  431 	mov	a,@r0
      000218 30 E0 2B         [24]  432 	jnb	acc.0,00110$
                                    433 ;	sqrtf.c:57: y*=0.7071067812;
      00021B C0 04            [24]  434 	push	ar4
      00021D C0 05            [24]  435 	push	ar5
      00021F C0 06            [24]  436 	push	ar6
      000221 C0 07            [24]  437 	push	ar7
      000223 90 04 F3         [24]  438 	mov	dptr,#0x04f3
      000226 75 F0 35         [24]  439 	mov	b,#0x35
      000229 74 3F            [12]  440 	mov	a,#0x3f
      00022B 12r00r00         [24]  441 	lcall	___fsmul
      00022E AC 82            [24]  442 	mov	r4,dpl
      000230 AD 83            [24]  443 	mov	r5,dph
      000232 AE F0            [24]  444 	mov	r6,b
      000234 FF               [12]  445 	mov	r7,a
      000235 E5 81            [12]  446 	mov	a,sp
      000237 24 FC            [12]  447 	add	a,#0xfc
      000239 F5 81            [12]  448 	mov	sp,a
                                    449 ;	sqrtf.c:58: ++n;
      00023B E5*00            [12]  450 	mov	a,_bp
      00023D 24 0D            [12]  451 	add	a,#0x0d
      00023F F8               [12]  452 	mov	r0,a
      000240 06               [12]  453 	inc	@r0
      000241 B6 00 02         [24]  454 	cjne	@r0,#0x00,00137$
      000244 08               [12]  455 	inc	r0
      000245 06               [12]  456 	inc	@r0
      000246                        457 00137$:
      000246                        458 00110$:
                                    459 ;	sqrtf.c:60: return ldexpf(y, n/2);
      000246 C0 07            [24]  460 	push	ar7
      000248 C0 06            [24]  461 	push	ar6
      00024A C0 05            [24]  462 	push	ar5
      00024C C0 04            [24]  463 	push	ar4
      00024E 74 02            [12]  464 	mov	a,#0x02
      000250 C0 E0            [24]  465 	push	acc
      000252 E4               [12]  466 	clr	a
      000253 C0 E0            [24]  467 	push	acc
      000255 E5*00            [12]  468 	mov	a,_bp
      000257 24 0D            [12]  469 	add	a,#0x0d
      000259 F8               [12]  470 	mov	r0,a
      00025A 86 82            [24]  471 	mov	dpl,@r0
      00025C 08               [12]  472 	inc	r0
      00025D 86 83            [24]  473 	mov	dph,@r0
      00025F 12r00r00         [24]  474 	lcall	__divsint
      000262 AA 82            [24]  475 	mov	r2,dpl
      000264 AB 83            [24]  476 	mov	r3,dph
      000266 15 81            [12]  477 	dec	sp
      000268 15 81            [12]  478 	dec	sp
      00026A D0 04            [24]  479 	pop	ar4
      00026C D0 05            [24]  480 	pop	ar5
      00026E D0 06            [24]  481 	pop	ar6
      000270 D0 07            [24]  482 	pop	ar7
      000272 C0 02            [24]  483 	push	ar2
      000274 C0 03            [24]  484 	push	ar3
      000276 8C 82            [24]  485 	mov	dpl,r4
      000278 8D 83            [24]  486 	mov	dph,r5
      00027A 8E F0            [24]  487 	mov	b,r6
      00027C EF               [12]  488 	mov	a,r7
      00027D 12r00r00         [24]  489 	lcall	_ldexpf
      000280 AC 82            [24]  490 	mov	r4,dpl
      000282 AD 83            [24]  491 	mov	r5,dph
      000284 AE F0            [24]  492 	mov	r6,b
      000286 FF               [12]  493 	mov	r7,a
      000287 15 81            [12]  494 	dec	sp
      000289 15 81            [12]  495 	dec	sp
      00028B 8C 82            [24]  496 	mov	dpl,r4
      00028D 8D 83            [24]  497 	mov	dph,r5
      00028F 8E F0            [24]  498 	mov	b,r6
      000291 EF               [12]  499 	mov	a,r7
      000292                        500 00111$:
                                    501 ;	sqrtf.c:61: }
      000292 85*00 81         [24]  502 	mov	sp,_bp
      000295 D0*00            [24]  503 	pop	_bp
      000297 22               [24]  504 	ret
                                    505 	.area CSEG    (CODE)
                                    506 	.area CONST   (CODE)
                                    507 	.area XINIT   (CODE)
                                    508 	.area CABS    (ABS,CODE)
