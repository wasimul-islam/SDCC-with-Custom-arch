                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module modff
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _modff
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'modff'
                                     91 ;------------------------------------------------------------
                                     92 ;y                         Allocated to stack - _bp -5
                                     93 ;x                         Allocated to stack - _bp +1
                                     94 ;sloc0                     Allocated to stack - _bp +5
                                     95 ;------------------------------------------------------------
                                     96 ;	modff.c:33: float modff(float x, float * y)
                                     97 ;	-----------------------------------------
                                     98 ;	 function modff
                                     99 ;	-----------------------------------------
      000000                        100 _modff:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 85 81*00         [24]  110 	mov	_bp,sp
      000005 C0 82            [24]  111 	push	dpl
      000007 C0 83            [24]  112 	push	dph
      000009 C0 F0            [24]  113 	push	b
      00000B C0 E0            [24]  114 	push	acc
      00000D 05 81            [12]  115 	inc	sp
      00000F 05 81            [12]  116 	inc	sp
      000011 05 81            [12]  117 	inc	sp
                                    118 ;	modff.c:35: *y=(long)x;
      000013 E5*00            [12]  119 	mov	a,_bp
      000015 24 FB            [12]  120 	add	a,#0xfb
      000017 F8               [12]  121 	mov	r0,a
      000018 E5*00            [12]  122 	mov	a,_bp
      00001A 24 05            [12]  123 	add	a,#0x05
      00001C F9               [12]  124 	mov	r1,a
      00001D E6               [12]  125 	mov	a,@r0
      00001E F7               [12]  126 	mov	@r1,a
      00001F 08               [12]  127 	inc	r0
      000020 E6               [12]  128 	mov	a,@r0
      000021 09               [12]  129 	inc	r1
      000022 F7               [12]  130 	mov	@r1,a
      000023 08               [12]  131 	inc	r0
      000024 E6               [12]  132 	mov	a,@r0
      000025 09               [12]  133 	inc	r1
      000026 F7               [12]  134 	mov	@r1,a
      000027 A8*00            [24]  135 	mov	r0,_bp
      000029 08               [12]  136 	inc	r0
      00002A 86 82            [24]  137 	mov	dpl,@r0
      00002C 08               [12]  138 	inc	r0
      00002D 86 83            [24]  139 	mov	dph,@r0
      00002F 08               [12]  140 	inc	r0
      000030 86 F0            [24]  141 	mov	b,@r0
      000032 08               [12]  142 	inc	r0
      000033 E6               [12]  143 	mov	a,@r0
      000034 12r00r00         [24]  144 	lcall	___fs2slong
      000037 12r00r00         [24]  145 	lcall	___slong2fs
      00003A AC 82            [24]  146 	mov	r4,dpl
      00003C AD 83            [24]  147 	mov	r5,dph
      00003E AE F0            [24]  148 	mov	r6,b
      000040 FF               [12]  149 	mov	r7,a
      000041 E5*00            [12]  150 	mov	a,_bp
      000043 24 05            [12]  151 	add	a,#0x05
      000045 F8               [12]  152 	mov	r0,a
      000046 86 82            [24]  153 	mov	dpl,@r0
      000048 08               [12]  154 	inc	r0
      000049 86 83            [24]  155 	mov	dph,@r0
      00004B 08               [12]  156 	inc	r0
      00004C 86 F0            [24]  157 	mov	b,@r0
      00004E EC               [12]  158 	mov	a,r4
      00004F 12r00r00         [24]  159 	lcall	__gptrput
      000052 A3               [24]  160 	inc	dptr
      000053 ED               [12]  161 	mov	a,r5
      000054 12r00r00         [24]  162 	lcall	__gptrput
      000057 A3               [24]  163 	inc	dptr
      000058 EE               [12]  164 	mov	a,r6
      000059 12r00r00         [24]  165 	lcall	__gptrput
      00005C A3               [24]  166 	inc	dptr
      00005D EF               [12]  167 	mov	a,r7
      00005E 12r00r00         [24]  168 	lcall	__gptrput
                                    169 ;	modff.c:36: return (x-*y);
      000061 C0 04            [24]  170 	push	ar4
      000063 C0 05            [24]  171 	push	ar5
      000065 C0 06            [24]  172 	push	ar6
      000067 C0 07            [24]  173 	push	ar7
      000069 A8*00            [24]  174 	mov	r0,_bp
      00006B 08               [12]  175 	inc	r0
      00006C 86 82            [24]  176 	mov	dpl,@r0
      00006E 08               [12]  177 	inc	r0
      00006F 86 83            [24]  178 	mov	dph,@r0
      000071 08               [12]  179 	inc	r0
      000072 86 F0            [24]  180 	mov	b,@r0
      000074 08               [12]  181 	inc	r0
      000075 E6               [12]  182 	mov	a,@r0
      000076 12r00r00         [24]  183 	lcall	___fssub
      000079 AC 82            [24]  184 	mov	r4,dpl
      00007B AD 83            [24]  185 	mov	r5,dph
      00007D AE F0            [24]  186 	mov	r6,b
      00007F FF               [12]  187 	mov	r7,a
      000080 E5 81            [12]  188 	mov	a,sp
      000082 24 FC            [12]  189 	add	a,#0xfc
      000084 F5 81            [12]  190 	mov	sp,a
      000086 8C 82            [24]  191 	mov	dpl,r4
      000088 8D 83            [24]  192 	mov	dph,r5
      00008A 8E F0            [24]  193 	mov	b,r6
      00008C EF               [12]  194 	mov	a,r7
                                    195 ;	modff.c:37: }
      00008D 85*00 81         [24]  196 	mov	sp,_bp
      000090 D0*00            [24]  197 	pop	_bp
      000092 22               [24]  198 	ret
                                    199 	.area CSEG    (CODE)
                                    200 	.area CONST   (CODE)
                                    201 	.area XINIT   (CODE)
                                    202 	.area CABS    (ABS,CODE)
