                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strspn
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strspn
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; initialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'strspn'
                                     92 ;------------------------------------------------------------
                                     93 ;control                   Allocated to stack - _bp -5
                                     94 ;string                    Allocated to registers 
                                     95 ;count                     Allocated to stack - _bp +1
                                     96 ;ch                        Allocated to registers 
                                     97 ;------------------------------------------------------------
                                     98 ;	_strspn.c:31: size_t strspn ( const char * string, const char * control )
                                     99 ;	-----------------------------------------
                                    100 ;	 function strspn
                                    101 ;	-----------------------------------------
      000000                        102 _strspn:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 05 81            [12]  113 	inc	sp
      000007 05 81            [12]  114 	inc	sp
      000009 AD 82            [24]  115 	mov	r5,dpl
      00000B AE 83            [24]  116 	mov	r6,dph
      00000D AF F0            [24]  117 	mov	r7,b
                                    118 ;	_strspn.c:36: while (ch = *string) {
      00000F A8*00            [24]  119 	mov	r0,_bp
      000011 08               [12]  120 	inc	r0
      000012 E4               [12]  121 	clr	a
      000013 F6               [12]  122 	mov	@r0,a
      000014 08               [12]  123 	inc	r0
      000015 F6               [12]  124 	mov	@r0,a
      000016                        125 00104$:
      000016 8D 82            [24]  126 	mov	dpl,r5
      000018 8E 83            [24]  127 	mov	dph,r6
      00001A 8F F0            [24]  128 	mov	b,r7
      00001C 12r00r00         [24]  129 	lcall	__gptrget
      00001F FA               [12]  130 	mov	r2,a
      000020 60 38            [24]  131 	jz	00106$
                                    132 ;	_strspn.c:37: if ( strchr(control,ch) )
      000022 C0 07            [24]  133 	push	ar7
      000024 C0 06            [24]  134 	push	ar6
      000026 C0 05            [24]  135 	push	ar5
      000028 C0 02            [24]  136 	push	ar2
      00002A E5*00            [12]  137 	mov	a,_bp
      00002C 24 FB            [12]  138 	add	a,#0xfb
      00002E F8               [12]  139 	mov	r0,a
      00002F 86 82            [24]  140 	mov	dpl,@r0
      000031 08               [12]  141 	inc	r0
      000032 86 83            [24]  142 	mov	dph,@r0
      000034 08               [12]  143 	inc	r0
      000035 86 F0            [24]  144 	mov	b,@r0
      000037 12r00r00         [24]  145 	lcall	_strchr
      00003A AA 82            [24]  146 	mov	r2,dpl
      00003C AB 83            [24]  147 	mov	r3,dph
      00003E 15 81            [12]  148 	dec	sp
      000040 D0 05            [24]  149 	pop	ar5
      000042 D0 06            [24]  150 	pop	ar6
      000044 D0 07            [24]  151 	pop	ar7
      000046 EA               [12]  152 	mov	a,r2
      000047 4B               [12]  153 	orl	a,r3
      000048 60 10            [24]  154 	jz	00106$
                                    155 ;	_strspn.c:38: count++ ;
      00004A A8*00            [24]  156 	mov	r0,_bp
      00004C 08               [12]  157 	inc	r0
      00004D 06               [12]  158 	inc	@r0
      00004E B6 00 02         [24]  159 	cjne	@r0,#0x00,00124$
      000051 08               [12]  160 	inc	r0
      000052 06               [12]  161 	inc	@r0
      000053                        162 00124$:
                                    163 ;	_strspn.c:41: string++ ;
      000053 0D               [12]  164 	inc	r5
      000054 BD 00 BF         [24]  165 	cjne	r5,#0x00,00104$
      000057 0E               [12]  166 	inc	r6
      000058 80 BC            [24]  167 	sjmp	00104$
      00005A                        168 00106$:
                                    169 ;	_strspn.c:44: return count ;
      00005A A8*00            [24]  170 	mov	r0,_bp
      00005C 08               [12]  171 	inc	r0
      00005D 86 82            [24]  172 	mov	dpl,@r0
      00005F 08               [12]  173 	inc	r0
      000060 86 83            [24]  174 	mov	dph,@r0
                                    175 ;	_strspn.c:45: }
      000062 85*00 81         [24]  176 	mov	sp,_bp
      000065 D0*00            [24]  177 	pop	_bp
      000067 22               [24]  178 	ret
                                    179 	.area CSEG    (CODE)
                                    180 	.area CONST   (CODE)
                                    181 	.area XINIT   (CODE)
                                    182 	.area CABS    (ABS,CODE)
