                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module logf
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _frexpf
                                     12 	.globl _logf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; overlayable bit register bank
                                     30 ;--------------------------------------------------------
                                     31 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         32 bits:
      000000                         33 	.ds 1
                           008000    34 	b0 = bits[0]
                           008100    35 	b1 = bits[1]
                           008200    36 	b2 = bits[2]
                           008300    37 	b3 = bits[3]
                           008400    38 	b4 = bits[4]
                           008500    39 	b5 = bits[5]
                           008600    40 	b6 = bits[6]
                           008700    41 	b7 = bits[7]
                                     42 ;--------------------------------------------------------
                                     43 ; internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DSEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; overlayable items in internal ram
                                     48 ;--------------------------------------------------------
                                     49 ;--------------------------------------------------------
                                     50 ; indirectly addressable internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area ISEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; absolute internal ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area IABS    (ABS,DATA)
                                     57 	.area IABS    (ABS,DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; bit data
                                     60 ;--------------------------------------------------------
                                     61 	.area BSEG    (BIT)
                                     62 ;--------------------------------------------------------
                                     63 ; paged external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area PSEG    (PAG,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; uninitialized external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XSEG    (XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; absolute external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XABS    (ABS,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; initialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XISEG   (XDATA)
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT0 (CODE)
                                     80 	.area GSINIT1 (CODE)
                                     81 	.area GSINIT2 (CODE)
                                     82 	.area GSINIT3 (CODE)
                                     83 	.area GSINIT4 (CODE)
                                     84 	.area GSINIT5 (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area CSEG    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; global & static initialisations
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 	.area GSFINAL (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; Home
                                     97 ;--------------------------------------------------------
                                     98 	.area HOME    (CODE)
                                     99 	.area HOME    (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; code
                                    102 ;--------------------------------------------------------
                                    103 	.area CSEG    (CODE)
                                    104 ;------------------------------------------------------------
                                    105 ;Allocation info for local variables in function 'logf'
                                    106 ;------------------------------------------------------------
                                    107 ;x                         Allocated to stack - _bp +1
                                    108 ;Rz                        Allocated to stack - _bp +9
                                    109 ;f                         Allocated to registers r4 r3 r6 r7 
                                    110 ;z                         Allocated to stack - _bp +13
                                    111 ;w                         Allocated to registers r7 r6 r5 r4 
                                    112 ;znum                      Allocated to stack - _bp +17
                                    113 ;zden                      Allocated to stack - _bp +21
                                    114 ;xn                        Allocated to stack - _bp +25
                                    115 ;n                         Allocated to stack - _bp +29
                                    116 ;sloc0                     Allocated to stack - _bp +5
                                    117 ;------------------------------------------------------------
                                    118 ;	logf.c:216: float logf(float x) _FLOAT_FUNC_REENTRANT
                                    119 ;	-----------------------------------------
                                    120 ;	 function logf
                                    121 ;	-----------------------------------------
      000000                        122 _logf:
                           000007   123 	ar7 = 0x07
                           000006   124 	ar6 = 0x06
                           000005   125 	ar5 = 0x05
                           000004   126 	ar4 = 0x04
                           000003   127 	ar3 = 0x03
                           000002   128 	ar2 = 0x02
                           000001   129 	ar1 = 0x01
                           000000   130 	ar0 = 0x00
      000000 C0*00            [24]  131 	push	_bp
      000002 85 81*00         [24]  132 	mov	_bp,sp
      000005 C0 82            [24]  133 	push	dpl
      000007 C0 83            [24]  134 	push	dph
      000009 C0 F0            [24]  135 	push	b
      00000B C0 E0            [24]  136 	push	acc
      00000D E5 81            [12]  137 	mov	a,sp
      00000F 24 1A            [12]  138 	add	a,#0x1a
      000011 F5 81            [12]  139 	mov	sp,a
                                    140 ;	logf.c:226: if (x<=0.0)
      000013 A8*00            [24]  141 	mov	r0,_bp
      000015 08               [12]  142 	inc	r0
      000016 E6               [12]  143 	mov	a,@r0
      000017 C0 E0            [24]  144 	push	acc
      000019 08               [12]  145 	inc	r0
      00001A E6               [12]  146 	mov	a,@r0
      00001B C0 E0            [24]  147 	push	acc
      00001D 08               [12]  148 	inc	r0
      00001E E6               [12]  149 	mov	a,@r0
      00001F C0 E0            [24]  150 	push	acc
      000021 08               [12]  151 	inc	r0
      000022 E6               [12]  152 	mov	a,@r0
      000023 C0 E0            [24]  153 	push	acc
      000025 90 00 00         [24]  154 	mov	dptr,#(0x00&0x00ff)
      000028 E4               [12]  155 	clr	a
      000029 F5 F0            [12]  156 	mov	b,a
      00002B 12r00r00         [24]  157 	lcall	___fslt
      00002E E5 81            [12]  158 	mov	a,sp
      000030 24 FC            [12]  159 	add	a,#0xfc
      000032 F5 81            [12]  160 	mov	sp,a
      000034 E5 82            [12]  161 	mov	a,dpl
      000036 24 FF            [12]  162 	add	a,#0xff
      000038 92*00            [24]  163 	mov	b0,c
      00003A 40 0F            [24]  164 	jc	00102$
                                    165 ;	logf.c:228: errno=EDOM;
      00003C 75*00 21         [24]  166 	mov	_errno,#0x21
      00003F 75*01 00         [24]  167 	mov	(_errno + 1),#0x00
                                    168 ;	logf.c:229: return 0.0;
      000042 90 00 00         [24]  169 	mov	dptr,#(0x00&0x00ff)
      000045 E4               [12]  170 	clr	a
      000046 F5 F0            [12]  171 	mov	b,a
      000048 02r04r27         [24]  172 	ljmp	00106$
      00004B                        173 00102$:
                                    174 ;	logf.c:231: f=frexpf(x, &n);
      00004B E5*00            [12]  175 	mov	a,_bp
      00004D 24 1D            [12]  176 	add	a,#0x1d
      00004F FA               [12]  177 	mov	r2,a
      000050 7B 00            [12]  178 	mov	r3,#0x00
      000052 7F 40            [12]  179 	mov	r7,#0x40
      000054 C0 02            [24]  180 	push	ar2
      000056 C0 03            [24]  181 	push	ar3
      000058 C0 07            [24]  182 	push	ar7
      00005A A8*00            [24]  183 	mov	r0,_bp
      00005C 08               [12]  184 	inc	r0
      00005D 86 82            [24]  185 	mov	dpl,@r0
      00005F 08               [12]  186 	inc	r0
      000060 86 83            [24]  187 	mov	dph,@r0
      000062 08               [12]  188 	inc	r0
      000063 86 F0            [24]  189 	mov	b,@r0
      000065 08               [12]  190 	inc	r0
      000066 E6               [12]  191 	mov	a,@r0
      000067 12r00r00         [24]  192 	lcall	_frexpf
      00006A AC 82            [24]  193 	mov	r4,dpl
      00006C AD 83            [24]  194 	mov	r5,dph
      00006E AE F0            [24]  195 	mov	r6,b
      000070 FF               [12]  196 	mov	r7,a
      000071 15 81            [12]  197 	dec	sp
      000073 15 81            [12]  198 	dec	sp
      000075 15 81            [12]  199 	dec	sp
      000077 8D 03            [24]  200 	mov	ar3,r5
                                    201 ;	logf.c:232: znum=f-0.5;
      000079 C0 07            [24]  202 	push	ar7
      00007B C0 06            [24]  203 	push	ar6
      00007D C0 04            [24]  204 	push	ar4
      00007F C0 03            [24]  205 	push	ar3
      000081 E4               [12]  206 	clr	a
      000082 C0 E0            [24]  207 	push	acc
      000084 C0 E0            [24]  208 	push	acc
      000086 C0 E0            [24]  209 	push	acc
      000088 74 3F            [12]  210 	mov	a,#0x3f
      00008A C0 E0            [24]  211 	push	acc
      00008C 8C 82            [24]  212 	mov	dpl,r4
      00008E 8B 83            [24]  213 	mov	dph,r3
      000090 8E F0            [24]  214 	mov	b,r6
      000092 EF               [12]  215 	mov	a,r7
      000093 12r00r00         [24]  216 	lcall	___fssub
      000096 C8               [12]  217 	xch	a,r0
      000097 E5*00            [12]  218 	mov	a,_bp
      000099 24 11            [12]  219 	add	a,#0x11
      00009B C8               [12]  220 	xch	a,r0
      00009C A6 82            [24]  221 	mov	@r0,dpl
      00009E 08               [12]  222 	inc	r0
      00009F A6 83            [24]  223 	mov	@r0,dph
      0000A1 08               [12]  224 	inc	r0
      0000A2 A6 F0            [24]  225 	mov	@r0,b
      0000A4 08               [12]  226 	inc	r0
      0000A5 F6               [12]  227 	mov	@r0,a
      0000A6 E5 81            [12]  228 	mov	a,sp
      0000A8 24 FC            [12]  229 	add	a,#0xfc
      0000AA F5 81            [12]  230 	mov	sp,a
      0000AC D0 03            [24]  231 	pop	ar3
      0000AE D0 04            [24]  232 	pop	ar4
      0000B0 D0 06            [24]  233 	pop	ar6
      0000B2 D0 07            [24]  234 	pop	ar7
      0000B4 E5*00            [12]  235 	mov	a,_bp
      0000B6 24 11            [12]  236 	add	a,#0x11
                                    237 ;	logf.c:233: if (f>C0)
      0000B8 C0 07            [24]  238 	push	ar7
      0000BA C0 06            [24]  239 	push	ar6
      0000BC C0 04            [24]  240 	push	ar4
      0000BE C0 03            [24]  241 	push	ar3
      0000C0 C0 04            [24]  242 	push	ar4
      0000C2 C0 03            [24]  243 	push	ar3
      0000C4 C0 06            [24]  244 	push	ar6
      0000C6 C0 07            [24]  245 	push	ar7
      0000C8 90 04 F3         [24]  246 	mov	dptr,#0x04f3
      0000CB 75 F0 35         [24]  247 	mov	b,#0x35
      0000CE 74 3F            [12]  248 	mov	a,#0x3f
      0000D0 12r00r00         [24]  249 	lcall	___fslt
      0000D3 AD 82            [24]  250 	mov	r5,dpl
      0000D5 E5 81            [12]  251 	mov	a,sp
      0000D7 24 FC            [12]  252 	add	a,#0xfc
      0000D9 F5 81            [12]  253 	mov	sp,a
      0000DB D0 03            [24]  254 	pop	ar3
      0000DD D0 04            [24]  255 	pop	ar4
      0000DF D0 06            [24]  256 	pop	ar6
      0000E1 D0 07            [24]  257 	pop	ar7
      0000E3 ED               [12]  258 	mov	a,r5
      0000E4 70 03            [24]  259 	jnz	00117$
      0000E6 02r01r88         [24]  260 	ljmp	00104$
      0000E9                        261 00117$:
                                    262 ;	logf.c:235: znum-=0.5;
      0000E9 C0 07            [24]  263 	push	ar7
      0000EB C0 06            [24]  264 	push	ar6
      0000ED C0 04            [24]  265 	push	ar4
      0000EF C0 03            [24]  266 	push	ar3
      0000F1 E4               [12]  267 	clr	a
      0000F2 C0 E0            [24]  268 	push	acc
      0000F4 C0 E0            [24]  269 	push	acc
      0000F6 C0 E0            [24]  270 	push	acc
      0000F8 74 3F            [12]  271 	mov	a,#0x3f
      0000FA C0 E0            [24]  272 	push	acc
      0000FC E5*00            [12]  273 	mov	a,_bp
      0000FE 24 11            [12]  274 	add	a,#0x11
      000100 F8               [12]  275 	mov	r0,a
      000101 86 82            [24]  276 	mov	dpl,@r0
      000103 08               [12]  277 	inc	r0
      000104 86 83            [24]  278 	mov	dph,@r0
      000106 08               [12]  279 	inc	r0
      000107 86 F0            [24]  280 	mov	b,@r0
      000109 08               [12]  281 	inc	r0
      00010A E6               [12]  282 	mov	a,@r0
      00010B 12r00r00         [24]  283 	lcall	___fssub
      00010E C8               [12]  284 	xch	a,r0
      00010F E5*00            [12]  285 	mov	a,_bp
      000111 24 05            [12]  286 	add	a,#0x05
      000113 C8               [12]  287 	xch	a,r0
      000114 A6 82            [24]  288 	mov	@r0,dpl
      000116 08               [12]  289 	inc	r0
      000117 A6 83            [24]  290 	mov	@r0,dph
      000119 08               [12]  291 	inc	r0
      00011A A6 F0            [24]  292 	mov	@r0,b
      00011C 08               [12]  293 	inc	r0
      00011D F6               [12]  294 	mov	@r0,a
      00011E E5 81            [12]  295 	mov	a,sp
      000120 24 FC            [12]  296 	add	a,#0xfc
      000122 F5 81            [12]  297 	mov	sp,a
      000124 D0 03            [24]  298 	pop	ar3
      000126 D0 04            [24]  299 	pop	ar4
      000128 D0 06            [24]  300 	pop	ar6
      00012A D0 07            [24]  301 	pop	ar7
      00012C E5*00            [12]  302 	mov	a,_bp
      00012E 24 05            [12]  303 	add	a,#0x05
      000130 F8               [12]  304 	mov	r0,a
      000131 E5*00            [12]  305 	mov	a,_bp
      000133 24 11            [12]  306 	add	a,#0x11
      000135 F9               [12]  307 	mov	r1,a
      000136 E6               [12]  308 	mov	a,@r0
      000137 F7               [12]  309 	mov	@r1,a
      000138 08               [12]  310 	inc	r0
      000139 E6               [12]  311 	mov	a,@r0
      00013A 09               [12]  312 	inc	r1
      00013B F7               [12]  313 	mov	@r1,a
      00013C 08               [12]  314 	inc	r0
      00013D E6               [12]  315 	mov	a,@r0
      00013E 09               [12]  316 	inc	r1
      00013F F7               [12]  317 	mov	@r1,a
      000140 08               [12]  318 	inc	r0
      000141 E6               [12]  319 	mov	a,@r0
      000142 09               [12]  320 	inc	r1
      000143 F7               [12]  321 	mov	@r1,a
                                    322 ;	logf.c:236: zden=(f*0.5)+0.5;
      000144 C0 04            [24]  323 	push	ar4
      000146 C0 03            [24]  324 	push	ar3
      000148 C0 06            [24]  325 	push	ar6
      00014A C0 07            [24]  326 	push	ar7
      00014C 90 00 00         [24]  327 	mov	dptr,#(0x00&0x00ff)
      00014F E4               [12]  328 	clr	a
      000150 F5 F0            [12]  329 	mov	b,a
      000152 74 3F            [12]  330 	mov	a,#0x3f
      000154 12r00r00         [24]  331 	lcall	___fsmul
      000157 AC 82            [24]  332 	mov	r4,dpl
      000159 AD 83            [24]  333 	mov	r5,dph
      00015B AE F0            [24]  334 	mov	r6,b
      00015D FF               [12]  335 	mov	r7,a
      00015E E5 81            [12]  336 	mov	a,sp
      000160 24 FC            [12]  337 	add	a,#0xfc
      000162 F5 81            [12]  338 	mov	sp,a
      000164 E4               [12]  339 	clr	a
      000165 C0 E0            [24]  340 	push	acc
      000167 C0 E0            [24]  341 	push	acc
      000169 C0 E0            [24]  342 	push	acc
      00016B 74 3F            [12]  343 	mov	a,#0x3f
      00016D C0 E0            [24]  344 	push	acc
      00016F 8C 82            [24]  345 	mov	dpl,r4
      000171 8D 83            [24]  346 	mov	dph,r5
      000173 8E F0            [24]  347 	mov	b,r6
      000175 EF               [12]  348 	mov	a,r7
      000176 12r00r00         [24]  349 	lcall	___fsadd
      000179 AC 82            [24]  350 	mov	r4,dpl
      00017B AD 83            [24]  351 	mov	r5,dph
      00017D AE F0            [24]  352 	mov	r6,b
      00017F FF               [12]  353 	mov	r7,a
      000180 E5 81            [12]  354 	mov	a,sp
      000182 24 FC            [12]  355 	add	a,#0xfc
      000184 F5 81            [12]  356 	mov	sp,a
      000186 80 72            [24]  357 	sjmp	00105$
      000188                        358 00104$:
                                    359 ;	logf.c:240: n--;
      000188 E5*00            [12]  360 	mov	a,_bp
      00018A 24 1D            [12]  361 	add	a,#0x1d
      00018C F8               [12]  362 	mov	r0,a
      00018D 16               [12]  363 	dec	@r0
      00018E B6 FF 02         [24]  364 	cjne	@r0,#0xff,00118$
      000191 08               [12]  365 	inc	r0
      000192 16               [12]  366 	dec	@r0
      000193                        367 00118$:
                                    368 ;	logf.c:241: zden=znum*0.5+0.5;
      000193 E5*00            [12]  369 	mov	a,_bp
      000195 24 11            [12]  370 	add	a,#0x11
      000197 F8               [12]  371 	mov	r0,a
      000198 E6               [12]  372 	mov	a,@r0
      000199 C0 E0            [24]  373 	push	acc
      00019B 08               [12]  374 	inc	r0
      00019C E6               [12]  375 	mov	a,@r0
      00019D C0 E0            [24]  376 	push	acc
      00019F 08               [12]  377 	inc	r0
      0001A0 E6               [12]  378 	mov	a,@r0
      0001A1 C0 E0            [24]  379 	push	acc
      0001A3 08               [12]  380 	inc	r0
      0001A4 E6               [12]  381 	mov	a,@r0
      0001A5 C0 E0            [24]  382 	push	acc
      0001A7 90 00 00         [24]  383 	mov	dptr,#(0x00&0x00ff)
      0001AA E4               [12]  384 	clr	a
      0001AB F5 F0            [12]  385 	mov	b,a
      0001AD 74 3F            [12]  386 	mov	a,#0x3f
      0001AF 12r00r00         [24]  387 	lcall	___fsmul
      0001B2 AF 82            [24]  388 	mov	r7,dpl
      0001B4 AE 83            [24]  389 	mov	r6,dph
      0001B6 AD F0            [24]  390 	mov	r5,b
      0001B8 FC               [12]  391 	mov	r4,a
      0001B9 E5 81            [12]  392 	mov	a,sp
      0001BB 24 FC            [12]  393 	add	a,#0xfc
      0001BD F5 81            [12]  394 	mov	sp,a
      0001BF E4               [12]  395 	clr	a
      0001C0 C0 E0            [24]  396 	push	acc
      0001C2 C0 E0            [24]  397 	push	acc
      0001C4 C0 E0            [24]  398 	push	acc
      0001C6 74 3F            [12]  399 	mov	a,#0x3f
      0001C8 C0 E0            [24]  400 	push	acc
      0001CA 8F 82            [24]  401 	mov	dpl,r7
      0001CC 8E 83            [24]  402 	mov	dph,r6
      0001CE 8D F0            [24]  403 	mov	b,r5
      0001D0 EC               [12]  404 	mov	a,r4
      0001D1 12r00r00         [24]  405 	lcall	___fsadd
      0001D4 C8               [12]  406 	xch	a,r0
      0001D5 E5*00            [12]  407 	mov	a,_bp
      0001D7 24 15            [12]  408 	add	a,#0x15
      0001D9 C8               [12]  409 	xch	a,r0
      0001DA A6 82            [24]  410 	mov	@r0,dpl
      0001DC 08               [12]  411 	inc	r0
      0001DD A6 83            [24]  412 	mov	@r0,dph
      0001DF 08               [12]  413 	inc	r0
      0001E0 A6 F0            [24]  414 	mov	@r0,b
      0001E2 08               [12]  415 	inc	r0
      0001E3 F6               [12]  416 	mov	@r0,a
      0001E4 E5 81            [12]  417 	mov	a,sp
      0001E6 24 FC            [12]  418 	add	a,#0xfc
      0001E8 F5 81            [12]  419 	mov	sp,a
      0001EA E5*00            [12]  420 	mov	a,_bp
      0001EC 24 15            [12]  421 	add	a,#0x15
      0001EE F8               [12]  422 	mov	r0,a
      0001EF 86 04            [24]  423 	mov	ar4,@r0
      0001F1 08               [12]  424 	inc	r0
      0001F2 86 05            [24]  425 	mov	ar5,@r0
      0001F4 08               [12]  426 	inc	r0
      0001F5 86 06            [24]  427 	mov	ar6,@r0
      0001F7 08               [12]  428 	inc	r0
      0001F8 86 07            [24]  429 	mov	ar7,@r0
      0001FA                        430 00105$:
                                    431 ;	logf.c:243: z=znum/zden;
      0001FA C0 04            [24]  432 	push	ar4
      0001FC C0 05            [24]  433 	push	ar5
      0001FE C0 06            [24]  434 	push	ar6
      000200 C0 07            [24]  435 	push	ar7
      000202 E5*00            [12]  436 	mov	a,_bp
      000204 24 11            [12]  437 	add	a,#0x11
      000206 F8               [12]  438 	mov	r0,a
      000207 86 82            [24]  439 	mov	dpl,@r0
      000209 08               [12]  440 	inc	r0
      00020A 86 83            [24]  441 	mov	dph,@r0
      00020C 08               [12]  442 	inc	r0
      00020D 86 F0            [24]  443 	mov	b,@r0
      00020F 08               [12]  444 	inc	r0
      000210 E6               [12]  445 	mov	a,@r0
      000211 12r00r00         [24]  446 	lcall	___fsdiv
      000214 AC 82            [24]  447 	mov	r4,dpl
      000216 AD 83            [24]  448 	mov	r5,dph
      000218 AE F0            [24]  449 	mov	r6,b
      00021A FF               [12]  450 	mov	r7,a
      00021B E5 81            [12]  451 	mov	a,sp
      00021D 24 FC            [12]  452 	add	a,#0xfc
      00021F F5 81            [12]  453 	mov	sp,a
      000221 E5*00            [12]  454 	mov	a,_bp
      000223 24 0D            [12]  455 	add	a,#0x0d
      000225 F8               [12]  456 	mov	r0,a
      000226 A6 04            [24]  457 	mov	@r0,ar4
      000228 08               [12]  458 	inc	r0
      000229 A6 05            [24]  459 	mov	@r0,ar5
      00022B 08               [12]  460 	inc	r0
      00022C A6 06            [24]  461 	mov	@r0,ar6
      00022E 08               [12]  462 	inc	r0
      00022F A6 07            [24]  463 	mov	@r0,ar7
                                    464 ;	logf.c:244: w=z*z;
      000231 E5*00            [12]  465 	mov	a,_bp
      000233 24 0D            [12]  466 	add	a,#0x0d
      000235 F8               [12]  467 	mov	r0,a
      000236 E6               [12]  468 	mov	a,@r0
      000237 C0 E0            [24]  469 	push	acc
      000239 08               [12]  470 	inc	r0
      00023A E6               [12]  471 	mov	a,@r0
      00023B C0 E0            [24]  472 	push	acc
      00023D 08               [12]  473 	inc	r0
      00023E E6               [12]  474 	mov	a,@r0
      00023F C0 E0            [24]  475 	push	acc
      000241 08               [12]  476 	inc	r0
      000242 E6               [12]  477 	mov	a,@r0
      000243 C0 E0            [24]  478 	push	acc
      000245 E5*00            [12]  479 	mov	a,_bp
      000247 24 0D            [12]  480 	add	a,#0x0d
      000249 F8               [12]  481 	mov	r0,a
      00024A 86 82            [24]  482 	mov	dpl,@r0
      00024C 08               [12]  483 	inc	r0
      00024D 86 83            [24]  484 	mov	dph,@r0
      00024F 08               [12]  485 	inc	r0
      000250 86 F0            [24]  486 	mov	b,@r0
      000252 08               [12]  487 	inc	r0
      000253 E6               [12]  488 	mov	a,@r0
      000254 12r00r00         [24]  489 	lcall	___fsmul
      000257 AF 82            [24]  490 	mov	r7,dpl
      000259 AE 83            [24]  491 	mov	r6,dph
      00025B AD F0            [24]  492 	mov	r5,b
      00025D FC               [12]  493 	mov	r4,a
      00025E E5 81            [12]  494 	mov	a,sp
      000260 24 FC            [12]  495 	add	a,#0xfc
      000262 F5 81            [12]  496 	mov	sp,a
                                    497 ;	logf.c:246: Rz=z+z*(w*A(w)/B(w));
      000264 C0 07            [24]  498 	push	ar7
      000266 C0 06            [24]  499 	push	ar6
      000268 C0 05            [24]  500 	push	ar5
      00026A C0 04            [24]  501 	push	ar4
      00026C C0 07            [24]  502 	push	ar7
      00026E C0 06            [24]  503 	push	ar6
      000270 C0 05            [24]  504 	push	ar5
      000272 C0 04            [24]  505 	push	ar4
      000274 90 7E 3D         [24]  506 	mov	dptr,#0x7e3d
      000277 75 F0 0D         [24]  507 	mov	b,#0x0d
      00027A 74 BF            [12]  508 	mov	a,#0xbf
      00027C 12r00r00         [24]  509 	lcall	___fsmul
      00027F C8               [12]  510 	xch	a,r0
      000280 E5*00            [12]  511 	mov	a,_bp
      000282 24 05            [12]  512 	add	a,#0x05
      000284 C8               [12]  513 	xch	a,r0
      000285 A6 82            [24]  514 	mov	@r0,dpl
      000287 08               [12]  515 	inc	r0
      000288 A6 83            [24]  516 	mov	@r0,dph
      00028A 08               [12]  517 	inc	r0
      00028B A6 F0            [24]  518 	mov	@r0,b
      00028D 08               [12]  519 	inc	r0
      00028E F6               [12]  520 	mov	@r0,a
      00028F E5 81            [12]  521 	mov	a,sp
      000291 24 FC            [12]  522 	add	a,#0xfc
      000293 F5 81            [12]  523 	mov	sp,a
      000295 D0 04            [24]  524 	pop	ar4
      000297 D0 05            [24]  525 	pop	ar5
      000299 D0 06            [24]  526 	pop	ar6
      00029B D0 07            [24]  527 	pop	ar7
      00029D 74 3A            [12]  528 	mov	a,#0x3a
      00029F C0 E0            [24]  529 	push	acc
      0002A1 74 3F            [12]  530 	mov	a,#0x3f
      0002A3 C0 E0            [24]  531 	push	acc
      0002A5 74 D4            [12]  532 	mov	a,#0xd4
      0002A7 C0 E0            [24]  533 	push	acc
      0002A9 74 C0            [12]  534 	mov	a,#0xc0
      0002AB C0 E0            [24]  535 	push	acc
      0002AD 8F 82            [24]  536 	mov	dpl,r7
      0002AF 8E 83            [24]  537 	mov	dph,r6
      0002B1 8D F0            [24]  538 	mov	b,r5
      0002B3 EC               [12]  539 	mov	a,r4
      0002B4 12r00r00         [24]  540 	lcall	___fsadd
      0002B7 AC 82            [24]  541 	mov	r4,dpl
      0002B9 AD 83            [24]  542 	mov	r5,dph
      0002BB AE F0            [24]  543 	mov	r6,b
      0002BD FF               [12]  544 	mov	r7,a
      0002BE E5 81            [12]  545 	mov	a,sp
      0002C0 24 FC            [12]  546 	add	a,#0xfc
      0002C2 F5 81            [12]  547 	mov	sp,a
      0002C4 C0 04            [24]  548 	push	ar4
      0002C6 C0 05            [24]  549 	push	ar5
      0002C8 C0 06            [24]  550 	push	ar6
      0002CA C0 07            [24]  551 	push	ar7
      0002CC E5*00            [12]  552 	mov	a,_bp
      0002CE 24 05            [12]  553 	add	a,#0x05
      0002D0 F8               [12]  554 	mov	r0,a
      0002D1 86 82            [24]  555 	mov	dpl,@r0
      0002D3 08               [12]  556 	inc	r0
      0002D4 86 83            [24]  557 	mov	dph,@r0
      0002D6 08               [12]  558 	inc	r0
      0002D7 86 F0            [24]  559 	mov	b,@r0
      0002D9 08               [12]  560 	inc	r0
      0002DA E6               [12]  561 	mov	a,@r0
      0002DB 12r00r00         [24]  562 	lcall	___fsdiv
      0002DE AC 82            [24]  563 	mov	r4,dpl
      0002E0 AD 83            [24]  564 	mov	r5,dph
      0002E2 AE F0            [24]  565 	mov	r6,b
      0002E4 FF               [12]  566 	mov	r7,a
      0002E5 E5 81            [12]  567 	mov	a,sp
      0002E7 24 FC            [12]  568 	add	a,#0xfc
      0002E9 F5 81            [12]  569 	mov	sp,a
      0002EB C0 04            [24]  570 	push	ar4
      0002ED C0 05            [24]  571 	push	ar5
      0002EF C0 06            [24]  572 	push	ar6
      0002F1 C0 07            [24]  573 	push	ar7
      0002F3 E5*00            [12]  574 	mov	a,_bp
      0002F5 24 0D            [12]  575 	add	a,#0x0d
      0002F7 F8               [12]  576 	mov	r0,a
      0002F8 86 82            [24]  577 	mov	dpl,@r0
      0002FA 08               [12]  578 	inc	r0
      0002FB 86 83            [24]  579 	mov	dph,@r0
      0002FD 08               [12]  580 	inc	r0
      0002FE 86 F0            [24]  581 	mov	b,@r0
      000300 08               [12]  582 	inc	r0
      000301 E6               [12]  583 	mov	a,@r0
      000302 12r00r00         [24]  584 	lcall	___fsmul
      000305 AC 82            [24]  585 	mov	r4,dpl
      000307 AD 83            [24]  586 	mov	r5,dph
      000309 AE F0            [24]  587 	mov	r6,b
      00030B FF               [12]  588 	mov	r7,a
      00030C E5 81            [12]  589 	mov	a,sp
      00030E 24 FC            [12]  590 	add	a,#0xfc
      000310 F5 81            [12]  591 	mov	sp,a
      000312 C0 04            [24]  592 	push	ar4
      000314 C0 05            [24]  593 	push	ar5
      000316 C0 06            [24]  594 	push	ar6
      000318 C0 07            [24]  595 	push	ar7
      00031A E5*00            [12]  596 	mov	a,_bp
      00031C 24 0D            [12]  597 	add	a,#0x0d
      00031E F8               [12]  598 	mov	r0,a
      00031F 86 82            [24]  599 	mov	dpl,@r0
      000321 08               [12]  600 	inc	r0
      000322 86 83            [24]  601 	mov	dph,@r0
      000324 08               [12]  602 	inc	r0
      000325 86 F0            [24]  603 	mov	b,@r0
      000327 08               [12]  604 	inc	r0
      000328 E6               [12]  605 	mov	a,@r0
      000329 12r00r00         [24]  606 	lcall	___fsadd
      00032C AC 82            [24]  607 	mov	r4,dpl
      00032E AD 83            [24]  608 	mov	r5,dph
      000330 AE F0            [24]  609 	mov	r6,b
      000332 FF               [12]  610 	mov	r7,a
      000333 E5 81            [12]  611 	mov	a,sp
      000335 24 FC            [12]  612 	add	a,#0xfc
      000337 F5 81            [12]  613 	mov	sp,a
      000339 E5*00            [12]  614 	mov	a,_bp
      00033B 24 09            [12]  615 	add	a,#0x09
      00033D F8               [12]  616 	mov	r0,a
      00033E A6 04            [24]  617 	mov	@r0,ar4
      000340 08               [12]  618 	inc	r0
      000341 A6 05            [24]  619 	mov	@r0,ar5
      000343 08               [12]  620 	inc	r0
      000344 A6 06            [24]  621 	mov	@r0,ar6
      000346 08               [12]  622 	inc	r0
      000347 A6 07            [24]  623 	mov	@r0,ar7
                                    624 ;	logf.c:247: xn=n;
      000349 E5*00            [12]  625 	mov	a,_bp
      00034B 24 1D            [12]  626 	add	a,#0x1d
      00034D F8               [12]  627 	mov	r0,a
      00034E 86 82            [24]  628 	mov	dpl,@r0
      000350 08               [12]  629 	inc	r0
      000351 86 83            [24]  630 	mov	dph,@r0
      000353 12r00r00         [24]  631 	lcall	___sint2fs
      000356 AC 82            [24]  632 	mov	r4,dpl
      000358 AD 83            [24]  633 	mov	r5,dph
      00035A AE F0            [24]  634 	mov	r6,b
      00035C FF               [12]  635 	mov	r7,a
      00035D E5*00            [12]  636 	mov	a,_bp
      00035F 24 19            [12]  637 	add	a,#0x19
      000361 F8               [12]  638 	mov	r0,a
      000362 A6 04            [24]  639 	mov	@r0,ar4
      000364 08               [12]  640 	inc	r0
      000365 A6 05            [24]  641 	mov	@r0,ar5
      000367 08               [12]  642 	inc	r0
      000368 A6 06            [24]  643 	mov	@r0,ar6
      00036A 08               [12]  644 	inc	r0
      00036B A6 07            [24]  645 	mov	@r0,ar7
                                    646 ;	logf.c:248: return ((xn*C2+Rz)+xn*C1);
      00036D E5*00            [12]  647 	mov	a,_bp
      00036F 24 19            [12]  648 	add	a,#0x19
      000371 F8               [12]  649 	mov	r0,a
      000372 E6               [12]  650 	mov	a,@r0
      000373 C0 E0            [24]  651 	push	acc
      000375 08               [12]  652 	inc	r0
      000376 E6               [12]  653 	mov	a,@r0
      000377 C0 E0            [24]  654 	push	acc
      000379 08               [12]  655 	inc	r0
      00037A E6               [12]  656 	mov	a,@r0
      00037B C0 E0            [24]  657 	push	acc
      00037D 08               [12]  658 	inc	r0
      00037E E6               [12]  659 	mov	a,@r0
      00037F C0 E0            [24]  660 	push	acc
      000381 90 80 83         [24]  661 	mov	dptr,#0x8083
      000384 75 F0 5E         [24]  662 	mov	b,#0x5e
      000387 74 B9            [12]  663 	mov	a,#0xb9
      000389 12r00r00         [24]  664 	lcall	___fsmul
      00038C AA 82            [24]  665 	mov	r2,dpl
      00038E AB 83            [24]  666 	mov	r3,dph
      000390 AE F0            [24]  667 	mov	r6,b
      000392 FF               [12]  668 	mov	r7,a
      000393 E5 81            [12]  669 	mov	a,sp
      000395 24 FC            [12]  670 	add	a,#0xfc
      000397 F5 81            [12]  671 	mov	sp,a
      000399 E5*00            [12]  672 	mov	a,_bp
      00039B 24 09            [12]  673 	add	a,#0x09
      00039D F8               [12]  674 	mov	r0,a
      00039E E6               [12]  675 	mov	a,@r0
      00039F C0 E0            [24]  676 	push	acc
      0003A1 08               [12]  677 	inc	r0
      0003A2 E6               [12]  678 	mov	a,@r0
      0003A3 C0 E0            [24]  679 	push	acc
      0003A5 08               [12]  680 	inc	r0
      0003A6 E6               [12]  681 	mov	a,@r0
      0003A7 C0 E0            [24]  682 	push	acc
      0003A9 08               [12]  683 	inc	r0
      0003AA E6               [12]  684 	mov	a,@r0
      0003AB C0 E0            [24]  685 	push	acc
      0003AD 8A 82            [24]  686 	mov	dpl,r2
      0003AF 8B 83            [24]  687 	mov	dph,r3
      0003B1 8E F0            [24]  688 	mov	b,r6
      0003B3 EF               [12]  689 	mov	a,r7
      0003B4 12r00r00         [24]  690 	lcall	___fsadd
      0003B7 C8               [12]  691 	xch	a,r0
      0003B8 E5*00            [12]  692 	mov	a,_bp
      0003BA 24 05            [12]  693 	add	a,#0x05
      0003BC C8               [12]  694 	xch	a,r0
      0003BD A6 82            [24]  695 	mov	@r0,dpl
      0003BF 08               [12]  696 	inc	r0
      0003C0 A6 83            [24]  697 	mov	@r0,dph
      0003C2 08               [12]  698 	inc	r0
      0003C3 A6 F0            [24]  699 	mov	@r0,b
      0003C5 08               [12]  700 	inc	r0
      0003C6 F6               [12]  701 	mov	@r0,a
      0003C7 E5 81            [12]  702 	mov	a,sp
      0003C9 24 FC            [12]  703 	add	a,#0xfc
      0003CB F5 81            [12]  704 	mov	sp,a
      0003CD E5*00            [12]  705 	mov	a,_bp
      0003CF 24 19            [12]  706 	add	a,#0x19
      0003D1 F8               [12]  707 	mov	r0,a
      0003D2 E6               [12]  708 	mov	a,@r0
      0003D3 C0 E0            [24]  709 	push	acc
      0003D5 08               [12]  710 	inc	r0
      0003D6 E6               [12]  711 	mov	a,@r0
      0003D7 C0 E0            [24]  712 	push	acc
      0003D9 08               [12]  713 	inc	r0
      0003DA E6               [12]  714 	mov	a,@r0
      0003DB C0 E0            [24]  715 	push	acc
      0003DD 08               [12]  716 	inc	r0
      0003DE E6               [12]  717 	mov	a,@r0
      0003DF C0 E0            [24]  718 	push	acc
      0003E1 90 80 00         [24]  719 	mov	dptr,#0x8000
      0003E4 75 F0 31         [24]  720 	mov	b,#0x31
      0003E7 74 3F            [12]  721 	mov	a,#0x3f
      0003E9 12r00r00         [24]  722 	lcall	___fsmul
      0003EC AA 82            [24]  723 	mov	r2,dpl
      0003EE AB 83            [24]  724 	mov	r3,dph
      0003F0 AE F0            [24]  725 	mov	r6,b
      0003F2 FF               [12]  726 	mov	r7,a
      0003F3 E5 81            [12]  727 	mov	a,sp
      0003F5 24 FC            [12]  728 	add	a,#0xfc
      0003F7 F5 81            [12]  729 	mov	sp,a
      0003F9 C0 02            [24]  730 	push	ar2
      0003FB C0 03            [24]  731 	push	ar3
      0003FD C0 06            [24]  732 	push	ar6
      0003FF C0 07            [24]  733 	push	ar7
      000401 E5*00            [12]  734 	mov	a,_bp
      000403 24 05            [12]  735 	add	a,#0x05
      000405 F8               [12]  736 	mov	r0,a
      000406 86 82            [24]  737 	mov	dpl,@r0
      000408 08               [12]  738 	inc	r0
      000409 86 83            [24]  739 	mov	dph,@r0
      00040B 08               [12]  740 	inc	r0
      00040C 86 F0            [24]  741 	mov	b,@r0
      00040E 08               [12]  742 	inc	r0
      00040F E6               [12]  743 	mov	a,@r0
      000410 12r00r00         [24]  744 	lcall	___fsadd
      000413 AC 82            [24]  745 	mov	r4,dpl
      000415 AD 83            [24]  746 	mov	r5,dph
      000417 AE F0            [24]  747 	mov	r6,b
      000419 FF               [12]  748 	mov	r7,a
      00041A E5 81            [12]  749 	mov	a,sp
      00041C 24 FC            [12]  750 	add	a,#0xfc
      00041E F5 81            [12]  751 	mov	sp,a
      000420 8C 82            [24]  752 	mov	dpl,r4
      000422 8D 83            [24]  753 	mov	dph,r5
      000424 8E F0            [24]  754 	mov	b,r6
      000426 EF               [12]  755 	mov	a,r7
      000427                        756 00106$:
                                    757 ;	logf.c:249: }
      000427 85*00 81         [24]  758 	mov	sp,_bp
      00042A D0*00            [24]  759 	pop	_bp
      00042C 22               [24]  760 	ret
                                    761 	.area CSEG    (CODE)
                                    762 	.area CONST   (CODE)
                                    763 	.area XINIT   (CODE)
                                    764 	.area CABS    (ABS,CODE)
