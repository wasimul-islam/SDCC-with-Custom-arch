                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memset
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memset
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'memset'
                                     91 ;------------------------------------------------------------
                                     92 ;c                         Allocated to stack - _bp -3
                                     93 ;n                         Allocated to stack - _bp -5
                                     94 ;s                         Allocated to stack - _bp +1
                                     95 ;sz                        Allocated to registers r5 r6 
                                     96 ;dst                       Allocated to registers 
                                     97 ;data                      Allocated to registers r7 
                                     98 ;------------------------------------------------------------
                                     99 ;	_memset.c:42: void *memset (void *s, unsigned char c, size_t n)
                                    100 ;	-----------------------------------------
                                    101 ;	 function memset
                                    102 ;	-----------------------------------------
      000000                        103 _memset:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 C0 82            [24]  114 	push	dpl
      000007 C0 83            [24]  115 	push	dph
      000009 C0 F0            [24]  116 	push	b
                                    117 ;	_memset.c:189: register size_t sz = n;
      00000B E5*00            [12]  118 	mov	a,_bp
      00000D 24 FB            [12]  119 	add	a,#0xfb
      00000F F8               [12]  120 	mov	r0,a
      000010 86 05            [24]  121 	mov	ar5,@r0
      000012 08               [12]  122 	inc	r0
      000013 86 06            [24]  123 	mov	ar6,@r0
                                    124 ;	_memset.c:190: if (sz != 0)
      000015 E5*00            [12]  125 	mov	a,_bp
      000017 24 FB            [12]  126 	add	a,#0xfb
      000019 F8               [12]  127 	mov	r0,a
      00001A E6               [12]  128 	mov	a,@r0
      00001B 08               [12]  129 	inc	r0
      00001C 46               [12]  130 	orl	a,@r0
      00001D 60 2A            [24]  131 	jz	00105$
                                    132 ;	_memset.c:192: register char *dst = s;
      00001F A8*00            [24]  133 	mov	r0,_bp
      000021 08               [12]  134 	inc	r0
      000022 86 02            [24]  135 	mov	ar2,@r0
      000024 08               [12]  136 	inc	r0
      000025 86 03            [24]  137 	mov	ar3,@r0
      000027 08               [12]  138 	inc	r0
      000028 86 04            [24]  139 	mov	ar4,@r0
                                    140 ;	_memset.c:193: register char data = (char)c;
      00002A E5*00            [12]  141 	mov	a,_bp
      00002C 24 FD            [12]  142 	add	a,#0xfd
      00002E F8               [12]  143 	mov	r0,a
      00002F 86 07            [24]  144 	mov	ar7,@r0
                                    145 ;	_memset.c:194: do {
      000031                        146 00101$:
                                    147 ;	_memset.c:195: *dst++ = data;
      000031 8A 82            [24]  148 	mov	dpl,r2
      000033 8B 83            [24]  149 	mov	dph,r3
      000035 8C F0            [24]  150 	mov	b,r4
      000037 EF               [12]  151 	mov	a,r7
      000038 12r00r00         [24]  152 	lcall	__gptrput
      00003B A3               [24]  153 	inc	dptr
      00003C AA 82            [24]  154 	mov	r2,dpl
      00003E AB 83            [24]  155 	mov	r3,dph
                                    156 ;	_memset.c:196: } while (--sz);
      000040 1D               [12]  157 	dec	r5
      000041 BD FF 01         [24]  158 	cjne	r5,#0xff,00118$
      000044 1E               [12]  159 	dec	r6
      000045                        160 00118$:
      000045 ED               [12]  161 	mov	a,r5
      000046 4E               [12]  162 	orl	a,r6
      000047 70 E8            [24]  163 	jnz	00101$
      000049                        164 00105$:
                                    165 ;	_memset.c:198: return s;
      000049 A8*00            [24]  166 	mov	r0,_bp
      00004B 08               [12]  167 	inc	r0
      00004C 86 82            [24]  168 	mov	dpl,@r0
      00004E 08               [12]  169 	inc	r0
      00004F 86 83            [24]  170 	mov	dph,@r0
      000051 08               [12]  171 	inc	r0
      000052 86 F0            [24]  172 	mov	b,@r0
                                    173 ;	_memset.c:199: }
      000054 85*00 81         [24]  174 	mov	sp,_bp
      000057 D0*00            [24]  175 	pop	_bp
      000059 22               [24]  176 	ret
                                    177 	.area CSEG    (CODE)
                                    178 	.area CONST   (CODE)
                                    179 	.area XINIT   (CODE)
                                    180 	.area CABS    (ABS,CODE)
