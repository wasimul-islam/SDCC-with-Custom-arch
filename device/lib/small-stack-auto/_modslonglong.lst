                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _modslonglong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __modslonglong
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; overlayable bit register bank
                                     29 ;--------------------------------------------------------
                                     30 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         31 bits:
      000000                         32 	.ds 1
                           008000    33 	b0 = bits[0]
                           008100    34 	b1 = bits[1]
                           008200    35 	b2 = bits[2]
                           008300    36 	b3 = bits[3]
                           008400    37 	b4 = bits[4]
                           008500    38 	b5 = bits[5]
                           008600    39 	b6 = bits[6]
                           008700    40 	b7 = bits[7]
                                     41 ;--------------------------------------------------------
                                     42 ; internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area DSEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; overlayable items in internal ram
                                     47 ;--------------------------------------------------------
                                     48 ;--------------------------------------------------------
                                     49 ; indirectly addressable internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area ISEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; absolute internal ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area IABS    (ABS,DATA)
                                     56 	.area IABS    (ABS,DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; bit data
                                     59 ;--------------------------------------------------------
                                     60 	.area BSEG    (BIT)
                                     61 ;--------------------------------------------------------
                                     62 ; paged external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area PSEG    (PAG,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; uninitialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XSEG    (XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; absolute external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XABS    (ABS,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; initialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XISEG   (XDATA)
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT0 (CODE)
                                     79 	.area GSINIT1 (CODE)
                                     80 	.area GSINIT2 (CODE)
                                     81 	.area GSINIT3 (CODE)
                                     82 	.area GSINIT4 (CODE)
                                     83 	.area GSINIT5 (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area CSEG    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function '_modslonglong'
                                    105 ;------------------------------------------------------------
                                    106 ;denominator               Allocated to stack - _bp -10
                                    107 ;numerator                 Allocated to stack - _bp +1
                                    108 ;numeratorneg              Allocated to registers b0 
                                    109 ;denominatorneg            Allocated to registers b1 
                                    110 ;r                         Allocated to stack - _bp +25
                                    111 ;sloc0                     Allocated to stack - _bp +9
                                    112 ;sloc1                     Allocated to stack - _bp +17
                                    113 ;------------------------------------------------------------
                                    114 ;	_modslonglong.c:40: _modslonglong (long long numerator, long long denominator) __SDCC_NONBANKED
                                    115 ;	-----------------------------------------
                                    116 ;	 function _modslonglong
                                    117 ;	-----------------------------------------
      000000                        118 __modslonglong:
                           000007   119 	ar7 = 0x07
                           000006   120 	ar6 = 0x06
                           000005   121 	ar5 = 0x05
                           000004   122 	ar4 = 0x04
                           000003   123 	ar3 = 0x03
                           000002   124 	ar2 = 0x02
                           000001   125 	ar1 = 0x01
                           000000   126 	ar0 = 0x00
      000000 C0*00            [24]  127 	push	_bp
      000002 85 81*00         [24]  128 	mov	_bp,sp
      000005 C0 82            [24]  129 	push	dpl
      000007 C0 83            [24]  130 	push	dph
      000009 C0 F0            [24]  131 	push	b
      00000B C0 E0            [24]  132 	push	acc
      00000D C0 04            [24]  133 	push	ar4
      00000F C0 05            [24]  134 	push	ar5
      000011 C0 06            [24]  135 	push	ar6
      000013 C0 07            [24]  136 	push	ar7
      000015 E5 81            [12]  137 	mov	a,sp
      000017 24 18            [12]  138 	add	a,#0x18
      000019 F5 81            [12]  139 	mov	sp,a
                                    140 ;	_modslonglong.c:42: bool numeratorneg = (numerator < 0);
      00001B A8*00            [24]  141 	mov	r0,_bp
      00001D 08               [12]  142 	inc	r0
      00001E 08               [12]  143 	inc	r0
      00001F 08               [12]  144 	inc	r0
      000020 08               [12]  145 	inc	r0
      000021 08               [12]  146 	inc	r0
      000022 08               [12]  147 	inc	r0
      000023 08               [12]  148 	inc	r0
      000024 08               [12]  149 	inc	r0
      000025 E6               [12]  150 	mov	a,@r0
      000026 33               [12]  151 	rlc	a
      000027 92*00            [24]  152 	mov	b0,c
                                    153 ;	_modslonglong.c:43: bool denominatorneg = (denominator < 0);
      000029 E5*00            [12]  154 	mov	a,_bp
      00002B 24 F6            [12]  155 	add	a,#0xf6
      00002D F8               [12]  156 	mov	r0,a
      00002E 08               [12]  157 	inc	r0
      00002F 08               [12]  158 	inc	r0
      000030 08               [12]  159 	inc	r0
      000031 08               [12]  160 	inc	r0
      000032 08               [12]  161 	inc	r0
      000033 08               [12]  162 	inc	r0
      000034 08               [12]  163 	inc	r0
      000035 E6               [12]  164 	mov	a,@r0
      000036 33               [12]  165 	rlc	a
      000037 92*00            [24]  166 	mov	b1,c
                                    167 ;	_modslonglong.c:46: if (numeratorneg)
      000039 30*00 23         [24]  168 	jnb	b0,00102$
                                    169 ;	_modslonglong.c:47: numerator = -numerator;
      00003C A8*00            [24]  170 	mov	r0,_bp
      00003E 08               [12]  171 	inc	r0
      00003F C3               [12]  172 	clr	c
      000040 E4               [12]  173 	clr	a
      000041 96               [12]  174 	subb	a,@r0
      000042 F6               [12]  175 	mov	@r0,a
      000043 08               [12]  176 	inc	r0
      000044 E4               [12]  177 	clr	a
      000045 96               [12]  178 	subb	a,@r0
      000046 F6               [12]  179 	mov	@r0,a
      000047 08               [12]  180 	inc	r0
      000048 E4               [12]  181 	clr	a
      000049 96               [12]  182 	subb	a,@r0
      00004A F6               [12]  183 	mov	@r0,a
      00004B 08               [12]  184 	inc	r0
      00004C E4               [12]  185 	clr	a
      00004D 96               [12]  186 	subb	a,@r0
      00004E F6               [12]  187 	mov	@r0,a
      00004F 08               [12]  188 	inc	r0
      000050 E4               [12]  189 	clr	a
      000051 96               [12]  190 	subb	a,@r0
      000052 F6               [12]  191 	mov	@r0,a
      000053 08               [12]  192 	inc	r0
      000054 E4               [12]  193 	clr	a
      000055 96               [12]  194 	subb	a,@r0
      000056 F6               [12]  195 	mov	@r0,a
      000057 08               [12]  196 	inc	r0
      000058 E4               [12]  197 	clr	a
      000059 96               [12]  198 	subb	a,@r0
      00005A F6               [12]  199 	mov	@r0,a
      00005B 08               [12]  200 	inc	r0
      00005C E4               [12]  201 	clr	a
      00005D 96               [12]  202 	subb	a,@r0
      00005E F6               [12]  203 	mov	@r0,a
      00005F                        204 00102$:
                                    205 ;	_modslonglong.c:48: if (denominatorneg)
      00005F 30*00 25         [24]  206 	jnb	b1,00104$
                                    207 ;	_modslonglong.c:49: denominator = -denominator;
      000062 E5*00            [12]  208 	mov	a,_bp
      000064 24 F6            [12]  209 	add	a,#0xf6
      000066 F8               [12]  210 	mov	r0,a
      000067 C3               [12]  211 	clr	c
      000068 E4               [12]  212 	clr	a
      000069 96               [12]  213 	subb	a,@r0
      00006A F6               [12]  214 	mov	@r0,a
      00006B 08               [12]  215 	inc	r0
      00006C E4               [12]  216 	clr	a
      00006D 96               [12]  217 	subb	a,@r0
      00006E F6               [12]  218 	mov	@r0,a
      00006F 08               [12]  219 	inc	r0
      000070 E4               [12]  220 	clr	a
      000071 96               [12]  221 	subb	a,@r0
      000072 F6               [12]  222 	mov	@r0,a
      000073 08               [12]  223 	inc	r0
      000074 E4               [12]  224 	clr	a
      000075 96               [12]  225 	subb	a,@r0
      000076 F6               [12]  226 	mov	@r0,a
      000077 08               [12]  227 	inc	r0
      000078 E4               [12]  228 	clr	a
      000079 96               [12]  229 	subb	a,@r0
      00007A F6               [12]  230 	mov	@r0,a
      00007B 08               [12]  231 	inc	r0
      00007C E4               [12]  232 	clr	a
      00007D 96               [12]  233 	subb	a,@r0
      00007E F6               [12]  234 	mov	@r0,a
      00007F 08               [12]  235 	inc	r0
      000080 E4               [12]  236 	clr	a
      000081 96               [12]  237 	subb	a,@r0
      000082 F6               [12]  238 	mov	@r0,a
      000083 08               [12]  239 	inc	r0
      000084 E4               [12]  240 	clr	a
      000085 96               [12]  241 	subb	a,@r0
      000086 F6               [12]  242 	mov	@r0,a
      000087                        243 00104$:
                                    244 ;	_modslonglong.c:51: r = (unsigned long long)numerator % (unsigned long long)denominator;
      000087 A8*00            [24]  245 	mov	r0,_bp
      000089 08               [12]  246 	inc	r0
      00008A E5*00            [12]  247 	mov	a,_bp
      00008C 24 09            [12]  248 	add	a,#0x09
      00008E F9               [12]  249 	mov	r1,a
      00008F E6               [12]  250 	mov	a,@r0
      000090 F7               [12]  251 	mov	@r1,a
      000091 08               [12]  252 	inc	r0
      000092 E6               [12]  253 	mov	a,@r0
      000093 09               [12]  254 	inc	r1
      000094 F7               [12]  255 	mov	@r1,a
      000095 08               [12]  256 	inc	r0
      000096 E6               [12]  257 	mov	a,@r0
      000097 09               [12]  258 	inc	r1
      000098 F7               [12]  259 	mov	@r1,a
      000099 08               [12]  260 	inc	r0
      00009A E6               [12]  261 	mov	a,@r0
      00009B 09               [12]  262 	inc	r1
      00009C F7               [12]  263 	mov	@r1,a
      00009D 08               [12]  264 	inc	r0
      00009E E6               [12]  265 	mov	a,@r0
      00009F 09               [12]  266 	inc	r1
      0000A0 F7               [12]  267 	mov	@r1,a
      0000A1 08               [12]  268 	inc	r0
      0000A2 E6               [12]  269 	mov	a,@r0
      0000A3 09               [12]  270 	inc	r1
      0000A4 F7               [12]  271 	mov	@r1,a
      0000A5 08               [12]  272 	inc	r0
      0000A6 E6               [12]  273 	mov	a,@r0
      0000A7 09               [12]  274 	inc	r1
      0000A8 F7               [12]  275 	mov	@r1,a
      0000A9 08               [12]  276 	inc	r0
      0000AA E6               [12]  277 	mov	a,@r0
      0000AB 09               [12]  278 	inc	r1
      0000AC F7               [12]  279 	mov	@r1,a
      0000AD E5*00            [12]  280 	mov	a,_bp
      0000AF 24 F6            [12]  281 	add	a,#0xf6
      0000B1 F8               [12]  282 	mov	r0,a
      0000B2 E5*00            [12]  283 	mov	a,_bp
      0000B4 24 11            [12]  284 	add	a,#0x11
      0000B6 F9               [12]  285 	mov	r1,a
      0000B7 E6               [12]  286 	mov	a,@r0
      0000B8 F7               [12]  287 	mov	@r1,a
      0000B9 08               [12]  288 	inc	r0
      0000BA E6               [12]  289 	mov	a,@r0
      0000BB 09               [12]  290 	inc	r1
      0000BC F7               [12]  291 	mov	@r1,a
      0000BD 08               [12]  292 	inc	r0
      0000BE E6               [12]  293 	mov	a,@r0
      0000BF 09               [12]  294 	inc	r1
      0000C0 F7               [12]  295 	mov	@r1,a
      0000C1 08               [12]  296 	inc	r0
      0000C2 E6               [12]  297 	mov	a,@r0
      0000C3 09               [12]  298 	inc	r1
      0000C4 F7               [12]  299 	mov	@r1,a
      0000C5 08               [12]  300 	inc	r0
      0000C6 E6               [12]  301 	mov	a,@r0
      0000C7 09               [12]  302 	inc	r1
      0000C8 F7               [12]  303 	mov	@r1,a
      0000C9 08               [12]  304 	inc	r0
      0000CA E6               [12]  305 	mov	a,@r0
      0000CB 09               [12]  306 	inc	r1
      0000CC F7               [12]  307 	mov	@r1,a
      0000CD 08               [12]  308 	inc	r0
      0000CE E6               [12]  309 	mov	a,@r0
      0000CF 09               [12]  310 	inc	r1
      0000D0 F7               [12]  311 	mov	@r1,a
      0000D1 08               [12]  312 	inc	r0
      0000D2 E6               [12]  313 	mov	a,@r0
      0000D3 09               [12]  314 	inc	r1
      0000D4 F7               [12]  315 	mov	@r1,a
      0000D5 C0*00            [24]  316 	push	bits
      0000D7 E5*00            [12]  317 	mov	a,_bp
      0000D9 24 11            [12]  318 	add	a,#0x11
      0000DB F8               [12]  319 	mov	r0,a
      0000DC E6               [12]  320 	mov	a,@r0
      0000DD C0 E0            [24]  321 	push	acc
      0000DF 08               [12]  322 	inc	r0
      0000E0 E6               [12]  323 	mov	a,@r0
      0000E1 C0 E0            [24]  324 	push	acc
      0000E3 08               [12]  325 	inc	r0
      0000E4 E6               [12]  326 	mov	a,@r0
      0000E5 C0 E0            [24]  327 	push	acc
      0000E7 08               [12]  328 	inc	r0
      0000E8 E6               [12]  329 	mov	a,@r0
      0000E9 C0 E0            [24]  330 	push	acc
      0000EB 08               [12]  331 	inc	r0
      0000EC E6               [12]  332 	mov	a,@r0
      0000ED C0 E0            [24]  333 	push	acc
      0000EF 08               [12]  334 	inc	r0
      0000F0 E6               [12]  335 	mov	a,@r0
      0000F1 C0 E0            [24]  336 	push	acc
      0000F3 08               [12]  337 	inc	r0
      0000F4 E6               [12]  338 	mov	a,@r0
      0000F5 C0 E0            [24]  339 	push	acc
      0000F7 08               [12]  340 	inc	r0
      0000F8 E6               [12]  341 	mov	a,@r0
      0000F9 C0 E0            [24]  342 	push	acc
      0000FB E5*00            [12]  343 	mov	a,_bp
      0000FD 24 09            [12]  344 	add	a,#0x09
      0000FF F8               [12]  345 	mov	r0,a
      000100 86 82            [24]  346 	mov	dpl,@r0
      000102 08               [12]  347 	inc	r0
      000103 86 83            [24]  348 	mov	dph,@r0
      000105 08               [12]  349 	inc	r0
      000106 86 F0            [24]  350 	mov	b,@r0
      000108 08               [12]  351 	inc	r0
      000109 E6               [12]  352 	mov	a,@r0
      00010A 08               [12]  353 	inc	r0
      00010B 86 04            [24]  354 	mov	ar4,@r0
      00010D 08               [12]  355 	inc	r0
      00010E 86 05            [24]  356 	mov	ar5,@r0
      000110 08               [12]  357 	inc	r0
      000111 86 06            [24]  358 	mov	ar6,@r0
      000113 08               [12]  359 	inc	r0
      000114 86 07            [24]  360 	mov	ar7,@r0
      000116 12r00r00         [24]  361 	lcall	__modulonglong
      000119 C8               [12]  362 	xch	a,r0
      00011A E5*00            [12]  363 	mov	a,_bp
      00011C 24 19            [12]  364 	add	a,#0x19
      00011E C8               [12]  365 	xch	a,r0
      00011F A6 82            [24]  366 	mov	@r0,dpl
      000121 08               [12]  367 	inc	r0
      000122 A6 83            [24]  368 	mov	@r0,dph
      000124 08               [12]  369 	inc	r0
      000125 A6 F0            [24]  370 	mov	@r0,b
      000127 08               [12]  371 	inc	r0
      000128 F6               [12]  372 	mov	@r0,a
      000129 08               [12]  373 	inc	r0
      00012A A6 04            [24]  374 	mov	@r0,ar4
      00012C 08               [12]  375 	inc	r0
      00012D A6 05            [24]  376 	mov	@r0,ar5
      00012F 08               [12]  377 	inc	r0
      000130 A6 06            [24]  378 	mov	@r0,ar6
      000132 08               [12]  379 	inc	r0
      000133 A6 07            [24]  380 	mov	@r0,ar7
      000135 E5 81            [12]  381 	mov	a,sp
      000137 24 F8            [12]  382 	add	a,#0xf8
      000139 F5 81            [12]  383 	mov	sp,a
      00013B D0*00            [24]  384 	pop	bits
      00013D E5*00            [12]  385 	mov	a,_bp
      00013F 24 19            [12]  386 	add	a,#0x19
                                    387 ;	_modslonglong.c:53: return (numeratorneg ? -r : r);
      000141 30*00 33         [24]  388 	jnb	b0,00107$
      000144 E5*00            [12]  389 	mov	a,_bp
      000146 24 19            [12]  390 	add	a,#0x19
      000148 F8               [12]  391 	mov	r0,a
      000149 E5*00            [12]  392 	mov	a,_bp
      00014B 24 11            [12]  393 	add	a,#0x11
      00014D F9               [12]  394 	mov	r1,a
      00014E C3               [12]  395 	clr	c
      00014F E4               [12]  396 	clr	a
      000150 96               [12]  397 	subb	a,@r0
      000151 F7               [12]  398 	mov	@r1,a
      000152 08               [12]  399 	inc	r0
      000153 E4               [12]  400 	clr	a
      000154 96               [12]  401 	subb	a,@r0
      000155 09               [12]  402 	inc	r1
      000156 F7               [12]  403 	mov	@r1,a
      000157 08               [12]  404 	inc	r0
      000158 E4               [12]  405 	clr	a
      000159 96               [12]  406 	subb	a,@r0
      00015A 09               [12]  407 	inc	r1
      00015B F7               [12]  408 	mov	@r1,a
      00015C 08               [12]  409 	inc	r0
      00015D E4               [12]  410 	clr	a
      00015E 96               [12]  411 	subb	a,@r0
      00015F 09               [12]  412 	inc	r1
      000160 F7               [12]  413 	mov	@r1,a
      000161 08               [12]  414 	inc	r0
      000162 E4               [12]  415 	clr	a
      000163 96               [12]  416 	subb	a,@r0
      000164 09               [12]  417 	inc	r1
      000165 F7               [12]  418 	mov	@r1,a
      000166 08               [12]  419 	inc	r0
      000167 E4               [12]  420 	clr	a
      000168 96               [12]  421 	subb	a,@r0
      000169 09               [12]  422 	inc	r1
      00016A F7               [12]  423 	mov	@r1,a
      00016B 08               [12]  424 	inc	r0
      00016C E4               [12]  425 	clr	a
      00016D 96               [12]  426 	subb	a,@r0
      00016E 09               [12]  427 	inc	r1
      00016F F7               [12]  428 	mov	@r1,a
      000170 08               [12]  429 	inc	r0
      000171 E4               [12]  430 	clr	a
      000172 96               [12]  431 	subb	a,@r0
      000173 09               [12]  432 	inc	r1
      000174 F7               [12]  433 	mov	@r1,a
      000175 80 28            [24]  434 	sjmp	00108$
      000177                        435 00107$:
      000177 E5*00            [12]  436 	mov	a,_bp
      000179 24 19            [12]  437 	add	a,#0x19
      00017B F8               [12]  438 	mov	r0,a
      00017C E5*00            [12]  439 	mov	a,_bp
      00017E 24 11            [12]  440 	add	a,#0x11
      000180 F9               [12]  441 	mov	r1,a
      000181 E6               [12]  442 	mov	a,@r0
      000182 F7               [12]  443 	mov	@r1,a
      000183 08               [12]  444 	inc	r0
      000184 E6               [12]  445 	mov	a,@r0
      000185 09               [12]  446 	inc	r1
      000186 F7               [12]  447 	mov	@r1,a
      000187 08               [12]  448 	inc	r0
      000188 E6               [12]  449 	mov	a,@r0
      000189 09               [12]  450 	inc	r1
      00018A F7               [12]  451 	mov	@r1,a
      00018B 08               [12]  452 	inc	r0
      00018C E6               [12]  453 	mov	a,@r0
      00018D 09               [12]  454 	inc	r1
      00018E F7               [12]  455 	mov	@r1,a
      00018F 08               [12]  456 	inc	r0
      000190 E6               [12]  457 	mov	a,@r0
      000191 09               [12]  458 	inc	r1
      000192 F7               [12]  459 	mov	@r1,a
      000193 08               [12]  460 	inc	r0
      000194 E6               [12]  461 	mov	a,@r0
      000195 09               [12]  462 	inc	r1
      000196 F7               [12]  463 	mov	@r1,a
      000197 08               [12]  464 	inc	r0
      000198 E6               [12]  465 	mov	a,@r0
      000199 09               [12]  466 	inc	r1
      00019A F7               [12]  467 	mov	@r1,a
      00019B 08               [12]  468 	inc	r0
      00019C E6               [12]  469 	mov	a,@r0
      00019D 09               [12]  470 	inc	r1
      00019E F7               [12]  471 	mov	@r1,a
      00019F                        472 00108$:
      00019F E5*00            [12]  473 	mov	a,_bp
      0001A1 24 11            [12]  474 	add	a,#0x11
      0001A3 F8               [12]  475 	mov	r0,a
      0001A4 86 82            [24]  476 	mov	dpl,@r0
      0001A6 08               [12]  477 	inc	r0
      0001A7 86 83            [24]  478 	mov	dph,@r0
      0001A9 08               [12]  479 	inc	r0
      0001AA 86 F0            [24]  480 	mov	b,@r0
      0001AC 08               [12]  481 	inc	r0
      0001AD E6               [12]  482 	mov	a,@r0
      0001AE 08               [12]  483 	inc	r0
      0001AF 86 04            [24]  484 	mov	ar4,@r0
      0001B1 08               [12]  485 	inc	r0
      0001B2 86 05            [24]  486 	mov	ar5,@r0
      0001B4 08               [12]  487 	inc	r0
      0001B5 86 06            [24]  488 	mov	ar6,@r0
      0001B7 08               [12]  489 	inc	r0
      0001B8 86 07            [24]  490 	mov	ar7,@r0
                                    491 ;	_modslonglong.c:54: }
      0001BA 85*00 81         [24]  492 	mov	sp,_bp
      0001BD D0*00            [24]  493 	pop	_bp
      0001BF 22               [24]  494 	ret
                                    495 	.area CSEG    (CODE)
                                    496 	.area CONST   (CODE)
                                    497 	.area XINIT   (CODE)
                                    498 	.area CABS    (ABS,CODE)
