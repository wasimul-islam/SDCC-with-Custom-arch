                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strcmp
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strcmp
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'strcmp'
                                     91 ;------------------------------------------------------------
                                     92 ;adst                      Allocated to stack - _bp -5
                                     93 ;asrc                      Allocated to registers 
                                     94 ;ret                       Allocated to stack - _bp +4
                                     95 ;sloc0                     Allocated to stack - _bp +1
                                     96 ;sloc1                     Allocated to stack - _bp +4
                                     97 ;------------------------------------------------------------
                                     98 ;	_strcmp.c:34: int strcmp ( const char * asrc, const char * adst )
                                     99 ;	-----------------------------------------
                                    100 ;	 function strcmp
                                    101 ;	-----------------------------------------
      000000                        102 _strcmp:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 E5 81            [12]  112 	mov	a,sp
      000004 F5*00            [12]  113 	mov	_bp,a
      000006 24 05            [12]  114 	add	a,#0x05
      000008 F5 81            [12]  115 	mov	sp,a
      00000A AD 82            [24]  116 	mov	r5,dpl
      00000C AE 83            [24]  117 	mov	r6,dph
      00000E AF F0            [24]  118 	mov	r7,b
                                    119 ;	_strcmp.c:51: while( ! (ret = *(unsigned char *)asrc - *(unsigned char *)adst) && *adst)
      000010 E5*00            [12]  120 	mov	a,_bp
      000012 24 FB            [12]  121 	add	a,#0xfb
      000014 F8               [12]  122 	mov	r0,a
      000015 A9*00            [24]  123 	mov	r1,_bp
      000017 09               [12]  124 	inc	r1
      000018 E6               [12]  125 	mov	a,@r0
      000019 F7               [12]  126 	mov	@r1,a
      00001A 08               [12]  127 	inc	r0
      00001B E6               [12]  128 	mov	a,@r0
      00001C 09               [12]  129 	inc	r1
      00001D F7               [12]  130 	mov	@r1,a
      00001E 08               [12]  131 	inc	r0
      00001F E6               [12]  132 	mov	a,@r0
      000020 09               [12]  133 	inc	r1
      000021 F7               [12]  134 	mov	@r1,a
      000022                        135 00102$:
      000022 8D 82            [24]  136 	mov	dpl,r5
      000024 8E 83            [24]  137 	mov	dph,r6
      000026 8F F0            [24]  138 	mov	b,r7
      000028 12r00r00         [24]  139 	lcall	__gptrget
      00002B FC               [12]  140 	mov	r4,a
      00002C 7B 00            [12]  141 	mov	r3,#0x00
      00002E A8*00            [24]  142 	mov	r0,_bp
      000030 08               [12]  143 	inc	r0
      000031 86 82            [24]  144 	mov	dpl,@r0
      000033 08               [12]  145 	inc	r0
      000034 86 83            [24]  146 	mov	dph,@r0
      000036 08               [12]  147 	inc	r0
      000037 86 F0            [24]  148 	mov	b,@r0
      000039 12r00r00         [24]  149 	lcall	__gptrget
      00003C FA               [12]  150 	mov	r2,a
      00003D C0 05            [24]  151 	push	ar5
      00003F C0 06            [24]  152 	push	ar6
      000041 C0 07            [24]  153 	push	ar7
      000043 8A 06            [24]  154 	mov	ar6,r2
      000045 7F 00            [12]  155 	mov	r7,#0x00
      000047 EC               [12]  156 	mov	a,r4
      000048 C3               [12]  157 	clr	c
      000049 9E               [12]  158 	subb	a,r6
      00004A FC               [12]  159 	mov	r4,a
      00004B EB               [12]  160 	mov	a,r3
      00004C 9F               [12]  161 	subb	a,r7
      00004D FB               [12]  162 	mov	r3,a
      00004E E5*00            [12]  163 	mov	a,_bp
      000050 24 04            [12]  164 	add	a,#0x04
      000052 F8               [12]  165 	mov	r0,a
      000053 A6 04            [24]  166 	mov	@r0,ar4
      000055 08               [12]  167 	inc	r0
      000056 A6 03            [24]  168 	mov	@r0,ar3
      000058 D0 07            [24]  169 	pop	ar7
      00005A D0 06            [24]  170 	pop	ar6
      00005C D0 05            [24]  171 	pop	ar5
      00005E EC               [12]  172 	mov	a,r4
      00005F 4B               [12]  173 	orl	a,r3
      000060 70 13            [24]  174 	jnz	00104$
      000062 EA               [12]  175 	mov	a,r2
      000063 60 10            [24]  176 	jz	00104$
                                    177 ;	_strcmp.c:52: ++asrc, ++adst;
      000065 0D               [12]  178 	inc	r5
      000066 BD 00 01         [24]  179 	cjne	r5,#0x00,00122$
      000069 0E               [12]  180 	inc	r6
      00006A                        181 00122$:
      00006A A8*00            [24]  182 	mov	r0,_bp
      00006C 08               [12]  183 	inc	r0
      00006D 06               [12]  184 	inc	@r0
      00006E B6 00 02         [24]  185 	cjne	@r0,#0x00,00123$
      000071 08               [12]  186 	inc	r0
      000072 06               [12]  187 	inc	@r0
      000073                        188 00123$:
      000073 80 AD            [24]  189 	sjmp	00102$
      000075                        190 00104$:
                                    191 ;	_strcmp.c:54: return( ret );
      000075 E5*00            [12]  192 	mov	a,_bp
      000077 24 04            [12]  193 	add	a,#0x04
      000079 F8               [12]  194 	mov	r0,a
      00007A 86 82            [24]  195 	mov	dpl,@r0
      00007C 08               [12]  196 	inc	r0
      00007D 86 83            [24]  197 	mov	dph,@r0
                                    198 ;	_strcmp.c:56: }
      00007F 85*00 81         [24]  199 	mov	sp,_bp
      000082 D0*00            [24]  200 	pop	_bp
      000084 22               [24]  201 	ret
                                    202 	.area CSEG    (CODE)
                                    203 	.area CONST   (CODE)
                                    204 	.area XINIT   (CODE)
                                    205 	.area CABS    (ABS,CODE)
