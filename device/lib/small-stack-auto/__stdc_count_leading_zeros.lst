                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __stdc_count_leading_zeros
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___stdc_count_leading_zeros
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '__stdc_count_leading_zeros'
                                     91 ;------------------------------------------------------------
                                     92 ;width                     Allocated to stack - _bp -3
                                     93 ;value                     Allocated to stack - _bp +1
                                     94 ;i                         Allocated to registers r6 
                                     95 ;sloc0                     Allocated to stack - _bp +10
                                     96 ;sloc1                     Allocated to stack - _bp +9
                                     97 ;------------------------------------------------------------
                                     98 ;	__stdc_count_leading_zeros.c:36: int_fast8_t __stdc_count_leading_zeros(unsigned long long value, uint_fast8_t width)
                                     99 ;	-----------------------------------------
                                    100 ;	 function __stdc_count_leading_zeros
                                    101 ;	-----------------------------------------
      000000                        102 ___stdc_count_leading_zeros:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 C0 82            [24]  113 	push	dpl
      000007 C0 83            [24]  114 	push	dph
      000009 C0 F0            [24]  115 	push	b
      00000B C0 E0            [24]  116 	push	acc
      00000D C0 04            [24]  117 	push	ar4
      00000F C0 05            [24]  118 	push	ar5
      000011 C0 06            [24]  119 	push	ar6
      000013 C0 07            [24]  120 	push	ar7
      000015 E5 81            [12]  121 	mov	a,sp
      000017 24 08            [12]  122 	add	a,#0x08
      000019 F5 81            [12]  123 	mov	sp,a
                                    124 ;	__stdc_count_leading_zeros.c:38: for(int_fast8_t i = width - 1; i >= 0; i--)
      00001B E5*00            [12]  125 	mov	a,_bp
      00001D 24 FD            [12]  126 	add	a,#0xfd
      00001F F8               [12]  127 	mov	r0,a
      000020 E6               [12]  128 	mov	a,@r0
      000021 FF               [12]  129 	mov	r7,a
      000022 14               [12]  130 	dec	a
      000023 FE               [12]  131 	mov	r6,a
      000024 FD               [12]  132 	mov	r5,a
      000025                        133 00105$:
      000025 ED               [12]  134 	mov	a,r5
      000026 30 E7 03         [24]  135 	jnb	acc.7,00121$
      000029 02r00rD6         [24]  136 	ljmp	00103$
      00002C                        137 00121$:
                                    138 ;	__stdc_count_leading_zeros.c:39: if(value & (1ull << i))
      00002C C0 07            [24]  139 	push	ar7
      00002E 8D 04            [24]  140 	mov	ar4,r5
      000030 8C F0            [24]  141 	mov	b,r4
      000032 05 F0            [12]  142 	inc	b
      000034 E5*00            [12]  143 	mov	a,_bp
      000036 24 09            [12]  144 	add	a,#0x09
      000038 F8               [12]  145 	mov	r0,a
      000039 76 01            [12]  146 	mov	@r0,#0x01
      00003B 08               [12]  147 	inc	r0
      00003C 76 00            [12]  148 	mov	@r0,#0x00
      00003E 08               [12]  149 	inc	r0
      00003F 76 00            [12]  150 	mov	@r0,#0x00
      000041 08               [12]  151 	inc	r0
      000042 76 00            [12]  152 	mov	@r0,#0x00
      000044 08               [12]  153 	inc	r0
      000045 76 00            [12]  154 	mov	@r0,#0x00
      000047 08               [12]  155 	inc	r0
      000048 76 00            [12]  156 	mov	@r0,#0x00
      00004A 08               [12]  157 	inc	r0
      00004B 76 00            [12]  158 	mov	@r0,#0x00
      00004D 08               [12]  159 	inc	r0
      00004E 76 00            [12]  160 	mov	@r0,#0x00
      000050 18               [12]  161 	dec	r0
      000051 18               [12]  162 	dec	r0
      000052 18               [12]  163 	dec	r0
      000053 18               [12]  164 	dec	r0
      000054 18               [12]  165 	dec	r0
      000055 18               [12]  166 	dec	r0
      000056 18               [12]  167 	dec	r0
      000057 80 26            [24]  168 	sjmp	00123$
      000059                        169 00122$:
      000059 E6               [12]  170 	mov	a,@r0
      00005A 26               [12]  171 	add	a,@r0
      00005B F6               [12]  172 	mov	@r0,a
      00005C 08               [12]  173 	inc	r0
      00005D E6               [12]  174 	mov	a,@r0
      00005E 33               [12]  175 	rlc	a
      00005F F6               [12]  176 	mov	@r0,a
      000060 08               [12]  177 	inc	r0
      000061 E6               [12]  178 	mov	a,@r0
      000062 33               [12]  179 	rlc	a
      000063 F6               [12]  180 	mov	@r0,a
      000064 08               [12]  181 	inc	r0
      000065 E6               [12]  182 	mov	a,@r0
      000066 33               [12]  183 	rlc	a
      000067 F6               [12]  184 	mov	@r0,a
      000068 08               [12]  185 	inc	r0
      000069 E6               [12]  186 	mov	a,@r0
      00006A 33               [12]  187 	rlc	a
      00006B F6               [12]  188 	mov	@r0,a
      00006C 08               [12]  189 	inc	r0
      00006D E6               [12]  190 	mov	a,@r0
      00006E 33               [12]  191 	rlc	a
      00006F F6               [12]  192 	mov	@r0,a
      000070 08               [12]  193 	inc	r0
      000071 E6               [12]  194 	mov	a,@r0
      000072 33               [12]  195 	rlc	a
      000073 F6               [12]  196 	mov	@r0,a
      000074 08               [12]  197 	inc	r0
      000075 E6               [12]  198 	mov	a,@r0
      000076 33               [12]  199 	rlc	a
      000077 F6               [12]  200 	mov	@r0,a
      000078 18               [12]  201 	dec	r0
      000079 18               [12]  202 	dec	r0
      00007A 18               [12]  203 	dec	r0
      00007B 18               [12]  204 	dec	r0
      00007C 18               [12]  205 	dec	r0
      00007D 18               [12]  206 	dec	r0
      00007E 18               [12]  207 	dec	r0
      00007F                        208 00123$:
      00007F D5 F0 D7         [24]  209 	djnz	b,00122$
      000082 A8*00            [24]  210 	mov	r0,_bp
      000084 08               [12]  211 	inc	r0
      000085 E5*00            [12]  212 	mov	a,_bp
      000087 24 09            [12]  213 	add	a,#0x09
      000089 F9               [12]  214 	mov	r1,a
      00008A E6               [12]  215 	mov	a,@r0
      00008B 57               [12]  216 	anl	a,@r1
      00008C F7               [12]  217 	mov	@r1,a
      00008D 08               [12]  218 	inc	r0
      00008E E6               [12]  219 	mov	a,@r0
      00008F 09               [12]  220 	inc	r1
      000090 57               [12]  221 	anl	a,@r1
      000091 F7               [12]  222 	mov	@r1,a
      000092 08               [12]  223 	inc	r0
      000093 E6               [12]  224 	mov	a,@r0
      000094 09               [12]  225 	inc	r1
      000095 57               [12]  226 	anl	a,@r1
      000096 F7               [12]  227 	mov	@r1,a
      000097 08               [12]  228 	inc	r0
      000098 E6               [12]  229 	mov	a,@r0
      000099 09               [12]  230 	inc	r1
      00009A 57               [12]  231 	anl	a,@r1
      00009B F7               [12]  232 	mov	@r1,a
      00009C 08               [12]  233 	inc	r0
      00009D E6               [12]  234 	mov	a,@r0
      00009E 09               [12]  235 	inc	r1
      00009F 57               [12]  236 	anl	a,@r1
      0000A0 F7               [12]  237 	mov	@r1,a
      0000A1 08               [12]  238 	inc	r0
      0000A2 E6               [12]  239 	mov	a,@r0
      0000A3 09               [12]  240 	inc	r1
      0000A4 57               [12]  241 	anl	a,@r1
      0000A5 F7               [12]  242 	mov	@r1,a
      0000A6 08               [12]  243 	inc	r0
      0000A7 E6               [12]  244 	mov	a,@r0
      0000A8 09               [12]  245 	inc	r1
      0000A9 57               [12]  246 	anl	a,@r1
      0000AA F7               [12]  247 	mov	@r1,a
      0000AB 08               [12]  248 	inc	r0
      0000AC E6               [12]  249 	mov	a,@r0
      0000AD 09               [12]  250 	inc	r1
      0000AE 57               [12]  251 	anl	a,@r1
      0000AF F7               [12]  252 	mov	@r1,a
      0000B0 D0 07            [24]  253 	pop	ar7
      0000B2 E5*00            [12]  254 	mov	a,_bp
      0000B4 24 09            [12]  255 	add	a,#0x09
      0000B6 F8               [12]  256 	mov	r0,a
      0000B7 E6               [12]  257 	mov	a,@r0
      0000B8 08               [12]  258 	inc	r0
      0000B9 46               [12]  259 	orl	a,@r0
      0000BA 08               [12]  260 	inc	r0
      0000BB 46               [12]  261 	orl	a,@r0
      0000BC 08               [12]  262 	inc	r0
      0000BD 46               [12]  263 	orl	a,@r0
      0000BE 08               [12]  264 	inc	r0
      0000BF 46               [12]  265 	orl	a,@r0
      0000C0 08               [12]  266 	inc	r0
      0000C1 46               [12]  267 	orl	a,@r0
      0000C2 08               [12]  268 	inc	r0
      0000C3 46               [12]  269 	orl	a,@r0
      0000C4 08               [12]  270 	inc	r0
      0000C5 46               [12]  271 	orl	a,@r0
      0000C6 60 08            [24]  272 	jz	00106$
                                    273 ;	__stdc_count_leading_zeros.c:40: return (width - i - 1);
      0000C8 EF               [12]  274 	mov	a,r7
      0000C9 C3               [12]  275 	clr	c
      0000CA 9E               [12]  276 	subb	a,r6
      0000CB 14               [12]  277 	dec	a
      0000CC F5 82            [12]  278 	mov	dpl,a
      0000CE 80 0D            [24]  279 	sjmp	00107$
      0000D0                        280 00106$:
                                    281 ;	__stdc_count_leading_zeros.c:38: for(int_fast8_t i = width - 1; i >= 0; i--)
      0000D0 1D               [12]  282 	dec	r5
      0000D1 8D 06            [24]  283 	mov	ar6,r5
      0000D3 02r00r25         [24]  284 	ljmp	00105$
      0000D6                        285 00103$:
                                    286 ;	__stdc_count_leading_zeros.c:41: return width;
      0000D6 E5*00            [12]  287 	mov	a,_bp
      0000D8 24 FD            [12]  288 	add	a,#0xfd
      0000DA F8               [12]  289 	mov	r0,a
      0000DB 86 82            [24]  290 	mov	dpl,@r0
      0000DD                        291 00107$:
                                    292 ;	__stdc_count_leading_zeros.c:42: }
      0000DD 85*00 81         [24]  293 	mov	sp,_bp
      0000E0 D0*00            [24]  294 	pop	_bp
      0000E2 22               [24]  295 	ret
                                    296 	.area CSEG    (CODE)
                                    297 	.area CONST   (CODE)
                                    298 	.area XINIT   (CODE)
                                    299 	.area CABS    (ABS,CODE)
