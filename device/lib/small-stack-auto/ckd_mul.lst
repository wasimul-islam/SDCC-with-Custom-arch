                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ckd_mul
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___ckd_mul_schar
                                     12 	.globl ___ckd_mul_uchar
                                     13 	.globl ___ckd_mul_short
                                     14 	.globl ___ckd_mul_ushort
                                     15 	.globl ___ckd_mul_int
                                     16 	.globl ___ckd_mul_uint
                                     17 	.globl ___ckd_mul_long
                                     18 	.globl ___ckd_mul_ulong
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; special function bits
                                     26 ;--------------------------------------------------------
                                     27 	.area RSEG    (ABS,DATA)
      000000                         28 	.org 0x0000
                                     29 ;--------------------------------------------------------
                                     30 ; overlayable register banks
                                     31 ;--------------------------------------------------------
                                     32 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         33 	.ds 8
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable bit register bank
                                     36 ;--------------------------------------------------------
                                     37 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         38 bits:
      000000                         39 	.ds 1
                           008000    40 	b0 = bits[0]
                           008100    41 	b1 = bits[1]
                           008200    42 	b2 = bits[2]
                           008300    43 	b3 = bits[3]
                           008400    44 	b4 = bits[4]
                           008500    45 	b5 = bits[5]
                           008600    46 	b6 = bits[6]
                           008700    47 	b7 = bits[7]
                                     48 ;--------------------------------------------------------
                                     49 ; internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area DSEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; overlayable items in internal ram
                                     54 ;--------------------------------------------------------
                                     55 ;--------------------------------------------------------
                                     56 ; indirectly addressable internal ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area ISEG    (DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute internal ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area IABS    (ABS,DATA)
                                     63 	.area IABS    (ABS,DATA)
                                     64 ;--------------------------------------------------------
                                     65 ; bit data
                                     66 ;--------------------------------------------------------
                                     67 	.area BSEG    (BIT)
                                     68 ;--------------------------------------------------------
                                     69 ; paged external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area PSEG    (PAG,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; uninitialized external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XSEG    (XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; absolute external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XABS    (ABS,XDATA)
                                     80 ;--------------------------------------------------------
                                     81 ; initialized external ram data
                                     82 ;--------------------------------------------------------
                                     83 	.area XISEG   (XDATA)
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT0 (CODE)
                                     86 	.area GSINIT1 (CODE)
                                     87 	.area GSINIT2 (CODE)
                                     88 	.area GSINIT3 (CODE)
                                     89 	.area GSINIT4 (CODE)
                                     90 	.area GSINIT5 (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area CSEG    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; global & static initialisations
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 	.area GSFINAL (CODE)
                                    100 	.area GSINIT  (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; Home
                                    103 ;--------------------------------------------------------
                                    104 	.area HOME    (CODE)
                                    105 	.area HOME    (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; code
                                    108 ;--------------------------------------------------------
                                    109 	.area CSEG    (CODE)
                                    110 ;------------------------------------------------------------
                                    111 ;Allocation info for local variables in function '__ckd_mul_schar'
                                    112 ;------------------------------------------------------------
                                    113 ;a                         Allocated to stack - _bp -10
                                    114 ;b                         Allocated to stack - _bp -18
                                    115 ;r                         Allocated to registers r6 r5 r4 
                                    116 ;result                    Allocated to stack - _bp +9
                                    117 ;sloc0                     Allocated to stack - _bp +1
                                    118 ;------------------------------------------------------------
                                    119 ;	../../device/include/stdckdint.h:69: inline _Bool __ckd_mul_schar __CKD_DEFAULT_IMPL(signed char, *)
                                    120 ;	-----------------------------------------
                                    121 ;	 function __ckd_mul_schar
                                    122 ;	-----------------------------------------
      000000                        123 ___ckd_mul_schar:
                           000007   124 	ar7 = 0x07
                           000006   125 	ar6 = 0x06
                           000005   126 	ar5 = 0x05
                           000004   127 	ar4 = 0x04
                           000003   128 	ar3 = 0x03
                           000002   129 	ar2 = 0x02
                           000001   130 	ar1 = 0x01
                           000000   131 	ar0 = 0x00
      000000 C0*00            [24]  132 	push	_bp
      000002 E5 81            [12]  133 	mov	a,sp
      000004 F5*00            [12]  134 	mov	_bp,a
      000006 24 10            [12]  135 	add	a,#0x10
      000008 F5 81            [12]  136 	mov	sp,a
      00000A AE 82            [24]  137 	mov	r6,dpl
      00000C AD 83            [24]  138 	mov	r5,dph
      00000E AC F0            [24]  139 	mov	r4,b
      000010 C0 06            [24]  140 	push	ar6
      000012 C0 05            [24]  141 	push	ar5
      000014 C0 04            [24]  142 	push	ar4
      000016 E5*00            [12]  143 	mov	a,_bp
      000018 24 EE            [12]  144 	add	a,#0xee
      00001A F8               [12]  145 	mov	r0,a
      00001B E6               [12]  146 	mov	a,@r0
      00001C C0 E0            [24]  147 	push	acc
      00001E 08               [12]  148 	inc	r0
      00001F E6               [12]  149 	mov	a,@r0
      000020 C0 E0            [24]  150 	push	acc
      000022 08               [12]  151 	inc	r0
      000023 E6               [12]  152 	mov	a,@r0
      000024 C0 E0            [24]  153 	push	acc
      000026 08               [12]  154 	inc	r0
      000027 E6               [12]  155 	mov	a,@r0
      000028 C0 E0            [24]  156 	push	acc
      00002A 08               [12]  157 	inc	r0
      00002B E6               [12]  158 	mov	a,@r0
      00002C C0 E0            [24]  159 	push	acc
      00002E 08               [12]  160 	inc	r0
      00002F E6               [12]  161 	mov	a,@r0
      000030 C0 E0            [24]  162 	push	acc
      000032 08               [12]  163 	inc	r0
      000033 E6               [12]  164 	mov	a,@r0
      000034 C0 E0            [24]  165 	push	acc
      000036 08               [12]  166 	inc	r0
      000037 E6               [12]  167 	mov	a,@r0
      000038 C0 E0            [24]  168 	push	acc
      00003A E5*00            [12]  169 	mov	a,_bp
      00003C 24 F6            [12]  170 	add	a,#0xf6
      00003E F8               [12]  171 	mov	r0,a
      00003F 86 82            [24]  172 	mov	dpl,@r0
      000041 08               [12]  173 	inc	r0
      000042 86 83            [24]  174 	mov	dph,@r0
      000044 08               [12]  175 	inc	r0
      000045 86 F0            [24]  176 	mov	b,@r0
      000047 08               [12]  177 	inc	r0
      000048 E6               [12]  178 	mov	a,@r0
      000049 08               [12]  179 	inc	r0
      00004A 86 04            [24]  180 	mov	ar4,@r0
      00004C 08               [12]  181 	inc	r0
      00004D 86 05            [24]  182 	mov	ar5,@r0
      00004F 08               [12]  183 	inc	r0
      000050 86 06            [24]  184 	mov	ar6,@r0
      000052 08               [12]  185 	inc	r0
      000053 86 07            [24]  186 	mov	ar7,@r0
      000055 12r00r00         [24]  187 	lcall	__mullonglong
      000058 C8               [12]  188 	xch	a,r0
      000059 E5*00            [12]  189 	mov	a,_bp
      00005B 24 09            [12]  190 	add	a,#0x09
      00005D C8               [12]  191 	xch	a,r0
      00005E A6 82            [24]  192 	mov	@r0,dpl
      000060 08               [12]  193 	inc	r0
      000061 A6 83            [24]  194 	mov	@r0,dph
      000063 08               [12]  195 	inc	r0
      000064 A6 F0            [24]  196 	mov	@r0,b
      000066 08               [12]  197 	inc	r0
      000067 F6               [12]  198 	mov	@r0,a
      000068 08               [12]  199 	inc	r0
      000069 A6 04            [24]  200 	mov	@r0,ar4
      00006B 08               [12]  201 	inc	r0
      00006C A6 05            [24]  202 	mov	@r0,ar5
      00006E 08               [12]  203 	inc	r0
      00006F A6 06            [24]  204 	mov	@r0,ar6
      000071 08               [12]  205 	inc	r0
      000072 A6 07            [24]  206 	mov	@r0,ar7
      000074 E5 81            [12]  207 	mov	a,sp
      000076 24 F8            [12]  208 	add	a,#0xf8
      000078 F5 81            [12]  209 	mov	sp,a
      00007A D0 04            [24]  210 	pop	ar4
      00007C D0 05            [24]  211 	pop	ar5
      00007E D0 06            [24]  212 	pop	ar6
      000080 E5*00            [12]  213 	mov	a,_bp
      000082 24 09            [12]  214 	add	a,#0x09
      000084 E5*00            [12]  215 	mov	a,_bp
      000086 24 09            [12]  216 	add	a,#0x09
      000088 F8               [12]  217 	mov	r0,a
      000089 86 07            [24]  218 	mov	ar7,@r0
      00008B 8E 82            [24]  219 	mov	dpl,r6
      00008D 8D 83            [24]  220 	mov	dph,r5
      00008F 8C F0            [24]  221 	mov	b,r4
      000091 EF               [12]  222 	mov	a,r7
      000092 12r00r00         [24]  223 	lcall	__gptrput
      000095 A8*00            [24]  224 	mov	r0,_bp
      000097 08               [12]  225 	inc	r0
      000098 A6 07            [24]  226 	mov	@r0,ar7
      00009A EF               [12]  227 	mov	a,r7
      00009B 33               [12]  228 	rlc	a
      00009C 95 E0            [12]  229 	subb	a,acc
      00009E 08               [12]  230 	inc	r0
      00009F F6               [12]  231 	mov	@r0,a
      0000A0 08               [12]  232 	inc	r0
      0000A1 F6               [12]  233 	mov	@r0,a
      0000A2 08               [12]  234 	inc	r0
      0000A3 F6               [12]  235 	mov	@r0,a
      0000A4 08               [12]  236 	inc	r0
      0000A5 F6               [12]  237 	mov	@r0,a
      0000A6 08               [12]  238 	inc	r0
      0000A7 F6               [12]  239 	mov	@r0,a
      0000A8 08               [12]  240 	inc	r0
      0000A9 F6               [12]  241 	mov	@r0,a
      0000AA 08               [12]  242 	inc	r0
      0000AB F6               [12]  243 	mov	@r0,a
      0000AC A8*00            [24]  244 	mov	r0,_bp
      0000AE 08               [12]  245 	inc	r0
      0000AF E5*00            [12]  246 	mov	a,_bp
      0000B1 24 09            [12]  247 	add	a,#0x09
      0000B3 F9               [12]  248 	mov	r1,a
      0000B4 86 F0            [24]  249 	mov	b,@r0
      0000B6 E7               [12]  250 	mov	a,@r1
      0000B7 B5 F0 3B         [24]  251 	cjne	a,b,00103$
      0000BA 08               [12]  252 	inc	r0
      0000BB 86 F0            [24]  253 	mov	b,@r0
      0000BD 09               [12]  254 	inc	r1
      0000BE E7               [12]  255 	mov	a,@r1
      0000BF B5 F0 33         [24]  256 	cjne	a,b,00103$
      0000C2 08               [12]  257 	inc	r0
      0000C3 86 F0            [24]  258 	mov	b,@r0
      0000C5 09               [12]  259 	inc	r1
      0000C6 E7               [12]  260 	mov	a,@r1
      0000C7 B5 F0 2B         [24]  261 	cjne	a,b,00103$
      0000CA 08               [12]  262 	inc	r0
      0000CB 86 F0            [24]  263 	mov	b,@r0
      0000CD 09               [12]  264 	inc	r1
      0000CE E7               [12]  265 	mov	a,@r1
      0000CF B5 F0 23         [24]  266 	cjne	a,b,00103$
      0000D2 08               [12]  267 	inc	r0
      0000D3 86 F0            [24]  268 	mov	b,@r0
      0000D5 09               [12]  269 	inc	r1
      0000D6 E7               [12]  270 	mov	a,@r1
      0000D7 B5 F0 1B         [24]  271 	cjne	a,b,00103$
      0000DA 08               [12]  272 	inc	r0
      0000DB 86 F0            [24]  273 	mov	b,@r0
      0000DD 09               [12]  274 	inc	r1
      0000DE E7               [12]  275 	mov	a,@r1
      0000DF B5 F0 13         [24]  276 	cjne	a,b,00103$
      0000E2 08               [12]  277 	inc	r0
      0000E3 86 F0            [24]  278 	mov	b,@r0
      0000E5 09               [12]  279 	inc	r1
      0000E6 E7               [12]  280 	mov	a,@r1
      0000E7 B5 F0 0B         [24]  281 	cjne	a,b,00103$
      0000EA 08               [12]  282 	inc	r0
      0000EB 86 F0            [24]  283 	mov	b,@r0
      0000ED 09               [12]  284 	inc	r1
      0000EE E7               [12]  285 	mov	a,@r1
      0000EF B5 F0 03         [24]  286 	cjne	a,b,00103$
      0000F2 D3               [12]  287 	setb	c
      0000F3 80 01            [24]  288 	sjmp	00104$
      0000F5                        289 00103$:
      0000F5 C3               [12]  290 	clr	c
      0000F6                        291 00104$:
      0000F6 92*00            [24]  292 	mov  b0,c
      0000F8 B3               [12]  293 	cpl	c
      0000F9 E4               [12]  294 	clr	a
      0000FA 33               [12]  295 	rlc	a
      0000FB F5 82            [12]  296 	mov	dpl,a
      0000FD 85*00 81         [24]  297 	mov	sp,_bp
      000100 D0*00            [24]  298 	pop	_bp
      000102 22               [24]  299 	ret
                                    300 ;------------------------------------------------------------
                                    301 ;Allocation info for local variables in function '__ckd_mul_uchar'
                                    302 ;------------------------------------------------------------
                                    303 ;a                         Allocated to stack - _bp -10
                                    304 ;b                         Allocated to stack - _bp -18
                                    305 ;r                         Allocated to registers r6 r5 r4 
                                    306 ;result                    Allocated to stack - _bp +9
                                    307 ;sloc0                     Allocated to stack - _bp +1
                                    308 ;------------------------------------------------------------
                                    309 ;	../../device/include/stdckdint.h:70: inline _Bool __ckd_mul_uchar __CKD_DEFAULT_IMPL(unsigned char, *)
                                    310 ;	-----------------------------------------
                                    311 ;	 function __ckd_mul_uchar
                                    312 ;	-----------------------------------------
      000103                        313 ___ckd_mul_uchar:
      000103 C0*00            [24]  314 	push	_bp
      000105 E5 81            [12]  315 	mov	a,sp
      000107 F5*00            [12]  316 	mov	_bp,a
      000109 24 10            [12]  317 	add	a,#0x10
      00010B F5 81            [12]  318 	mov	sp,a
      00010D AE 82            [24]  319 	mov	r6,dpl
      00010F AD 83            [24]  320 	mov	r5,dph
      000111 AC F0            [24]  321 	mov	r4,b
      000113 C0 06            [24]  322 	push	ar6
      000115 C0 05            [24]  323 	push	ar5
      000117 C0 04            [24]  324 	push	ar4
      000119 E5*00            [12]  325 	mov	a,_bp
      00011B 24 EE            [12]  326 	add	a,#0xee
      00011D F8               [12]  327 	mov	r0,a
      00011E E6               [12]  328 	mov	a,@r0
      00011F C0 E0            [24]  329 	push	acc
      000121 08               [12]  330 	inc	r0
      000122 E6               [12]  331 	mov	a,@r0
      000123 C0 E0            [24]  332 	push	acc
      000125 08               [12]  333 	inc	r0
      000126 E6               [12]  334 	mov	a,@r0
      000127 C0 E0            [24]  335 	push	acc
      000129 08               [12]  336 	inc	r0
      00012A E6               [12]  337 	mov	a,@r0
      00012B C0 E0            [24]  338 	push	acc
      00012D 08               [12]  339 	inc	r0
      00012E E6               [12]  340 	mov	a,@r0
      00012F C0 E0            [24]  341 	push	acc
      000131 08               [12]  342 	inc	r0
      000132 E6               [12]  343 	mov	a,@r0
      000133 C0 E0            [24]  344 	push	acc
      000135 08               [12]  345 	inc	r0
      000136 E6               [12]  346 	mov	a,@r0
      000137 C0 E0            [24]  347 	push	acc
      000139 08               [12]  348 	inc	r0
      00013A E6               [12]  349 	mov	a,@r0
      00013B C0 E0            [24]  350 	push	acc
      00013D E5*00            [12]  351 	mov	a,_bp
      00013F 24 F6            [12]  352 	add	a,#0xf6
      000141 F8               [12]  353 	mov	r0,a
      000142 86 82            [24]  354 	mov	dpl,@r0
      000144 08               [12]  355 	inc	r0
      000145 86 83            [24]  356 	mov	dph,@r0
      000147 08               [12]  357 	inc	r0
      000148 86 F0            [24]  358 	mov	b,@r0
      00014A 08               [12]  359 	inc	r0
      00014B E6               [12]  360 	mov	a,@r0
      00014C 08               [12]  361 	inc	r0
      00014D 86 04            [24]  362 	mov	ar4,@r0
      00014F 08               [12]  363 	inc	r0
      000150 86 05            [24]  364 	mov	ar5,@r0
      000152 08               [12]  365 	inc	r0
      000153 86 06            [24]  366 	mov	ar6,@r0
      000155 08               [12]  367 	inc	r0
      000156 86 07            [24]  368 	mov	ar7,@r0
      000158 12r00r00         [24]  369 	lcall	__mullonglong
      00015B C8               [12]  370 	xch	a,r0
      00015C E5*00            [12]  371 	mov	a,_bp
      00015E 24 09            [12]  372 	add	a,#0x09
      000160 C8               [12]  373 	xch	a,r0
      000161 A6 82            [24]  374 	mov	@r0,dpl
      000163 08               [12]  375 	inc	r0
      000164 A6 83            [24]  376 	mov	@r0,dph
      000166 08               [12]  377 	inc	r0
      000167 A6 F0            [24]  378 	mov	@r0,b
      000169 08               [12]  379 	inc	r0
      00016A F6               [12]  380 	mov	@r0,a
      00016B 08               [12]  381 	inc	r0
      00016C A6 04            [24]  382 	mov	@r0,ar4
      00016E 08               [12]  383 	inc	r0
      00016F A6 05            [24]  384 	mov	@r0,ar5
      000171 08               [12]  385 	inc	r0
      000172 A6 06            [24]  386 	mov	@r0,ar6
      000174 08               [12]  387 	inc	r0
      000175 A6 07            [24]  388 	mov	@r0,ar7
      000177 E5 81            [12]  389 	mov	a,sp
      000179 24 F8            [12]  390 	add	a,#0xf8
      00017B F5 81            [12]  391 	mov	sp,a
      00017D D0 04            [24]  392 	pop	ar4
      00017F D0 05            [24]  393 	pop	ar5
      000181 D0 06            [24]  394 	pop	ar6
      000183 E5*00            [12]  395 	mov	a,_bp
      000185 24 09            [12]  396 	add	a,#0x09
      000187 E5*00            [12]  397 	mov	a,_bp
      000189 24 09            [12]  398 	add	a,#0x09
      00018B F8               [12]  399 	mov	r0,a
      00018C 86 07            [24]  400 	mov	ar7,@r0
      00018E 8E 82            [24]  401 	mov	dpl,r6
      000190 8D 83            [24]  402 	mov	dph,r5
      000192 8C F0            [24]  403 	mov	b,r4
      000194 EF               [12]  404 	mov	a,r7
      000195 12r00r00         [24]  405 	lcall	__gptrput
      000198 A8*00            [24]  406 	mov	r0,_bp
      00019A 08               [12]  407 	inc	r0
      00019B A6 07            [24]  408 	mov	@r0,ar7
      00019D 08               [12]  409 	inc	r0
      00019E 76 00            [12]  410 	mov	@r0,#0x00
      0001A0 08               [12]  411 	inc	r0
      0001A1 76 00            [12]  412 	mov	@r0,#0x00
      0001A3 08               [12]  413 	inc	r0
      0001A4 76 00            [12]  414 	mov	@r0,#0x00
      0001A6 08               [12]  415 	inc	r0
      0001A7 76 00            [12]  416 	mov	@r0,#0x00
      0001A9 08               [12]  417 	inc	r0
      0001AA 76 00            [12]  418 	mov	@r0,#0x00
      0001AC 08               [12]  419 	inc	r0
      0001AD 76 00            [12]  420 	mov	@r0,#0x00
      0001AF 08               [12]  421 	inc	r0
      0001B0 76 00            [12]  422 	mov	@r0,#0x00
      0001B2 A8*00            [24]  423 	mov	r0,_bp
      0001B4 08               [12]  424 	inc	r0
      0001B5 E5*00            [12]  425 	mov	a,_bp
      0001B7 24 09            [12]  426 	add	a,#0x09
      0001B9 F9               [12]  427 	mov	r1,a
      0001BA 86 F0            [24]  428 	mov	b,@r0
      0001BC E7               [12]  429 	mov	a,@r1
      0001BD B5 F0 3B         [24]  430 	cjne	a,b,00103$
      0001C0 08               [12]  431 	inc	r0
      0001C1 86 F0            [24]  432 	mov	b,@r0
      0001C3 09               [12]  433 	inc	r1
      0001C4 E7               [12]  434 	mov	a,@r1
      0001C5 B5 F0 33         [24]  435 	cjne	a,b,00103$
      0001C8 08               [12]  436 	inc	r0
      0001C9 86 F0            [24]  437 	mov	b,@r0
      0001CB 09               [12]  438 	inc	r1
      0001CC E7               [12]  439 	mov	a,@r1
      0001CD B5 F0 2B         [24]  440 	cjne	a,b,00103$
      0001D0 08               [12]  441 	inc	r0
      0001D1 86 F0            [24]  442 	mov	b,@r0
      0001D3 09               [12]  443 	inc	r1
      0001D4 E7               [12]  444 	mov	a,@r1
      0001D5 B5 F0 23         [24]  445 	cjne	a,b,00103$
      0001D8 08               [12]  446 	inc	r0
      0001D9 86 F0            [24]  447 	mov	b,@r0
      0001DB 09               [12]  448 	inc	r1
      0001DC E7               [12]  449 	mov	a,@r1
      0001DD B5 F0 1B         [24]  450 	cjne	a,b,00103$
      0001E0 08               [12]  451 	inc	r0
      0001E1 86 F0            [24]  452 	mov	b,@r0
      0001E3 09               [12]  453 	inc	r1
      0001E4 E7               [12]  454 	mov	a,@r1
      0001E5 B5 F0 13         [24]  455 	cjne	a,b,00103$
      0001E8 08               [12]  456 	inc	r0
      0001E9 86 F0            [24]  457 	mov	b,@r0
      0001EB 09               [12]  458 	inc	r1
      0001EC E7               [12]  459 	mov	a,@r1
      0001ED B5 F0 0B         [24]  460 	cjne	a,b,00103$
      0001F0 08               [12]  461 	inc	r0
      0001F1 86 F0            [24]  462 	mov	b,@r0
      0001F3 09               [12]  463 	inc	r1
      0001F4 E7               [12]  464 	mov	a,@r1
      0001F5 B5 F0 03         [24]  465 	cjne	a,b,00103$
      0001F8 D3               [12]  466 	setb	c
      0001F9 80 01            [24]  467 	sjmp	00104$
      0001FB                        468 00103$:
      0001FB C3               [12]  469 	clr	c
      0001FC                        470 00104$:
      0001FC 92*00            [24]  471 	mov  b0,c
      0001FE B3               [12]  472 	cpl	c
      0001FF E4               [12]  473 	clr	a
      000200 33               [12]  474 	rlc	a
      000201 F5 82            [12]  475 	mov	dpl,a
      000203 85*00 81         [24]  476 	mov	sp,_bp
      000206 D0*00            [24]  477 	pop	_bp
      000208 22               [24]  478 	ret
                                    479 ;------------------------------------------------------------
                                    480 ;Allocation info for local variables in function '__ckd_mul_short'
                                    481 ;------------------------------------------------------------
                                    482 ;a                         Allocated to stack - _bp -10
                                    483 ;b                         Allocated to stack - _bp -18
                                    484 ;r                         Allocated to registers r5 r4 r3 
                                    485 ;result                    Allocated to stack - _bp +9
                                    486 ;sloc0                     Allocated to stack - _bp +1
                                    487 ;------------------------------------------------------------
                                    488 ;	../../device/include/stdckdint.h:71: inline _Bool __ckd_mul_short __CKD_DEFAULT_IMPL(short, *)
                                    489 ;	-----------------------------------------
                                    490 ;	 function __ckd_mul_short
                                    491 ;	-----------------------------------------
      000209                        492 ___ckd_mul_short:
      000209 C0*00            [24]  493 	push	_bp
      00020B E5 81            [12]  494 	mov	a,sp
      00020D F5*00            [12]  495 	mov	_bp,a
      00020F 24 10            [12]  496 	add	a,#0x10
      000211 F5 81            [12]  497 	mov	sp,a
      000213 AD 82            [24]  498 	mov	r5,dpl
      000215 AC 83            [24]  499 	mov	r4,dph
      000217 AB F0            [24]  500 	mov	r3,b
      000219 C0 05            [24]  501 	push	ar5
      00021B C0 04            [24]  502 	push	ar4
      00021D C0 03            [24]  503 	push	ar3
      00021F E5*00            [12]  504 	mov	a,_bp
      000221 24 EE            [12]  505 	add	a,#0xee
      000223 F8               [12]  506 	mov	r0,a
      000224 E6               [12]  507 	mov	a,@r0
      000225 C0 E0            [24]  508 	push	acc
      000227 08               [12]  509 	inc	r0
      000228 E6               [12]  510 	mov	a,@r0
      000229 C0 E0            [24]  511 	push	acc
      00022B 08               [12]  512 	inc	r0
      00022C E6               [12]  513 	mov	a,@r0
      00022D C0 E0            [24]  514 	push	acc
      00022F 08               [12]  515 	inc	r0
      000230 E6               [12]  516 	mov	a,@r0
      000231 C0 E0            [24]  517 	push	acc
      000233 08               [12]  518 	inc	r0
      000234 E6               [12]  519 	mov	a,@r0
      000235 C0 E0            [24]  520 	push	acc
      000237 08               [12]  521 	inc	r0
      000238 E6               [12]  522 	mov	a,@r0
      000239 C0 E0            [24]  523 	push	acc
      00023B 08               [12]  524 	inc	r0
      00023C E6               [12]  525 	mov	a,@r0
      00023D C0 E0            [24]  526 	push	acc
      00023F 08               [12]  527 	inc	r0
      000240 E6               [12]  528 	mov	a,@r0
      000241 C0 E0            [24]  529 	push	acc
      000243 E5*00            [12]  530 	mov	a,_bp
      000245 24 F6            [12]  531 	add	a,#0xf6
      000247 F8               [12]  532 	mov	r0,a
      000248 86 82            [24]  533 	mov	dpl,@r0
      00024A 08               [12]  534 	inc	r0
      00024B 86 83            [24]  535 	mov	dph,@r0
      00024D 08               [12]  536 	inc	r0
      00024E 86 F0            [24]  537 	mov	b,@r0
      000250 08               [12]  538 	inc	r0
      000251 E6               [12]  539 	mov	a,@r0
      000252 08               [12]  540 	inc	r0
      000253 86 04            [24]  541 	mov	ar4,@r0
      000255 08               [12]  542 	inc	r0
      000256 86 05            [24]  543 	mov	ar5,@r0
      000258 08               [12]  544 	inc	r0
      000259 86 06            [24]  545 	mov	ar6,@r0
      00025B 08               [12]  546 	inc	r0
      00025C 86 07            [24]  547 	mov	ar7,@r0
      00025E 12r00r00         [24]  548 	lcall	__mullonglong
      000261 C8               [12]  549 	xch	a,r0
      000262 E5*00            [12]  550 	mov	a,_bp
      000264 24 09            [12]  551 	add	a,#0x09
      000266 C8               [12]  552 	xch	a,r0
      000267 A6 82            [24]  553 	mov	@r0,dpl
      000269 08               [12]  554 	inc	r0
      00026A A6 83            [24]  555 	mov	@r0,dph
      00026C 08               [12]  556 	inc	r0
      00026D A6 F0            [24]  557 	mov	@r0,b
      00026F 08               [12]  558 	inc	r0
      000270 F6               [12]  559 	mov	@r0,a
      000271 08               [12]  560 	inc	r0
      000272 A6 04            [24]  561 	mov	@r0,ar4
      000274 08               [12]  562 	inc	r0
      000275 A6 05            [24]  563 	mov	@r0,ar5
      000277 08               [12]  564 	inc	r0
      000278 A6 06            [24]  565 	mov	@r0,ar6
      00027A 08               [12]  566 	inc	r0
      00027B A6 07            [24]  567 	mov	@r0,ar7
      00027D E5 81            [12]  568 	mov	a,sp
      00027F 24 F8            [12]  569 	add	a,#0xf8
      000281 F5 81            [12]  570 	mov	sp,a
      000283 D0 03            [24]  571 	pop	ar3
      000285 D0 04            [24]  572 	pop	ar4
      000287 D0 05            [24]  573 	pop	ar5
      000289 E5*00            [12]  574 	mov	a,_bp
      00028B 24 09            [12]  575 	add	a,#0x09
      00028D E5*00            [12]  576 	mov	a,_bp
      00028F 24 09            [12]  577 	add	a,#0x09
      000291 F8               [12]  578 	mov	r0,a
      000292 86 06            [24]  579 	mov	ar6,@r0
      000294 08               [12]  580 	inc	r0
      000295 86 07            [24]  581 	mov	ar7,@r0
      000297 8D 82            [24]  582 	mov	dpl,r5
      000299 8C 83            [24]  583 	mov	dph,r4
      00029B 8B F0            [24]  584 	mov	b,r3
      00029D EE               [12]  585 	mov	a,r6
      00029E 12r00r00         [24]  586 	lcall	__gptrput
      0002A1 A3               [24]  587 	inc	dptr
      0002A2 EF               [12]  588 	mov	a,r7
      0002A3 12r00r00         [24]  589 	lcall	__gptrput
      0002A6 A8*00            [24]  590 	mov	r0,_bp
      0002A8 08               [12]  591 	inc	r0
      0002A9 A6 06            [24]  592 	mov	@r0,ar6
      0002AB 08               [12]  593 	inc	r0
      0002AC A6 07            [24]  594 	mov	@r0,ar7
      0002AE EF               [12]  595 	mov	a,r7
      0002AF 33               [12]  596 	rlc	a
      0002B0 95 E0            [12]  597 	subb	a,acc
      0002B2 08               [12]  598 	inc	r0
      0002B3 F6               [12]  599 	mov	@r0,a
      0002B4 08               [12]  600 	inc	r0
      0002B5 F6               [12]  601 	mov	@r0,a
      0002B6 08               [12]  602 	inc	r0
      0002B7 F6               [12]  603 	mov	@r0,a
      0002B8 08               [12]  604 	inc	r0
      0002B9 F6               [12]  605 	mov	@r0,a
      0002BA 08               [12]  606 	inc	r0
      0002BB F6               [12]  607 	mov	@r0,a
      0002BC 08               [12]  608 	inc	r0
      0002BD F6               [12]  609 	mov	@r0,a
      0002BE A8*00            [24]  610 	mov	r0,_bp
      0002C0 08               [12]  611 	inc	r0
      0002C1 E5*00            [12]  612 	mov	a,_bp
      0002C3 24 09            [12]  613 	add	a,#0x09
      0002C5 F9               [12]  614 	mov	r1,a
      0002C6 86 F0            [24]  615 	mov	b,@r0
      0002C8 E7               [12]  616 	mov	a,@r1
      0002C9 B5 F0 3B         [24]  617 	cjne	a,b,00103$
      0002CC 08               [12]  618 	inc	r0
      0002CD 86 F0            [24]  619 	mov	b,@r0
      0002CF 09               [12]  620 	inc	r1
      0002D0 E7               [12]  621 	mov	a,@r1
      0002D1 B5 F0 33         [24]  622 	cjne	a,b,00103$
      0002D4 08               [12]  623 	inc	r0
      0002D5 86 F0            [24]  624 	mov	b,@r0
      0002D7 09               [12]  625 	inc	r1
      0002D8 E7               [12]  626 	mov	a,@r1
      0002D9 B5 F0 2B         [24]  627 	cjne	a,b,00103$
      0002DC 08               [12]  628 	inc	r0
      0002DD 86 F0            [24]  629 	mov	b,@r0
      0002DF 09               [12]  630 	inc	r1
      0002E0 E7               [12]  631 	mov	a,@r1
      0002E1 B5 F0 23         [24]  632 	cjne	a,b,00103$
      0002E4 08               [12]  633 	inc	r0
      0002E5 86 F0            [24]  634 	mov	b,@r0
      0002E7 09               [12]  635 	inc	r1
      0002E8 E7               [12]  636 	mov	a,@r1
      0002E9 B5 F0 1B         [24]  637 	cjne	a,b,00103$
      0002EC 08               [12]  638 	inc	r0
      0002ED 86 F0            [24]  639 	mov	b,@r0
      0002EF 09               [12]  640 	inc	r1
      0002F0 E7               [12]  641 	mov	a,@r1
      0002F1 B5 F0 13         [24]  642 	cjne	a,b,00103$
      0002F4 08               [12]  643 	inc	r0
      0002F5 86 F0            [24]  644 	mov	b,@r0
      0002F7 09               [12]  645 	inc	r1
      0002F8 E7               [12]  646 	mov	a,@r1
      0002F9 B5 F0 0B         [24]  647 	cjne	a,b,00103$
      0002FC 08               [12]  648 	inc	r0
      0002FD 86 F0            [24]  649 	mov	b,@r0
      0002FF 09               [12]  650 	inc	r1
      000300 E7               [12]  651 	mov	a,@r1
      000301 B5 F0 03         [24]  652 	cjne	a,b,00103$
      000304 D3               [12]  653 	setb	c
      000305 80 01            [24]  654 	sjmp	00104$
      000307                        655 00103$:
      000307 C3               [12]  656 	clr	c
      000308                        657 00104$:
      000308 92*00            [24]  658 	mov  b0,c
      00030A B3               [12]  659 	cpl	c
      00030B E4               [12]  660 	clr	a
      00030C 33               [12]  661 	rlc	a
      00030D F5 82            [12]  662 	mov	dpl,a
      00030F 85*00 81         [24]  663 	mov	sp,_bp
      000312 D0*00            [24]  664 	pop	_bp
      000314 22               [24]  665 	ret
                                    666 ;------------------------------------------------------------
                                    667 ;Allocation info for local variables in function '__ckd_mul_ushort'
                                    668 ;------------------------------------------------------------
                                    669 ;a                         Allocated to stack - _bp -10
                                    670 ;b                         Allocated to stack - _bp -18
                                    671 ;r                         Allocated to registers r5 r4 r3 
                                    672 ;result                    Allocated to stack - _bp +9
                                    673 ;sloc0                     Allocated to stack - _bp +1
                                    674 ;------------------------------------------------------------
                                    675 ;	../../device/include/stdckdint.h:72: inline _Bool __ckd_mul_ushort __CKD_DEFAULT_IMPL(unsigned short, *)
                                    676 ;	-----------------------------------------
                                    677 ;	 function __ckd_mul_ushort
                                    678 ;	-----------------------------------------
      000315                        679 ___ckd_mul_ushort:
      000315 C0*00            [24]  680 	push	_bp
      000317 E5 81            [12]  681 	mov	a,sp
      000319 F5*00            [12]  682 	mov	_bp,a
      00031B 24 10            [12]  683 	add	a,#0x10
      00031D F5 81            [12]  684 	mov	sp,a
      00031F AD 82            [24]  685 	mov	r5,dpl
      000321 AC 83            [24]  686 	mov	r4,dph
      000323 AB F0            [24]  687 	mov	r3,b
      000325 C0 05            [24]  688 	push	ar5
      000327 C0 04            [24]  689 	push	ar4
      000329 C0 03            [24]  690 	push	ar3
      00032B E5*00            [12]  691 	mov	a,_bp
      00032D 24 EE            [12]  692 	add	a,#0xee
      00032F F8               [12]  693 	mov	r0,a
      000330 E6               [12]  694 	mov	a,@r0
      000331 C0 E0            [24]  695 	push	acc
      000333 08               [12]  696 	inc	r0
      000334 E6               [12]  697 	mov	a,@r0
      000335 C0 E0            [24]  698 	push	acc
      000337 08               [12]  699 	inc	r0
      000338 E6               [12]  700 	mov	a,@r0
      000339 C0 E0            [24]  701 	push	acc
      00033B 08               [12]  702 	inc	r0
      00033C E6               [12]  703 	mov	a,@r0
      00033D C0 E0            [24]  704 	push	acc
      00033F 08               [12]  705 	inc	r0
      000340 E6               [12]  706 	mov	a,@r0
      000341 C0 E0            [24]  707 	push	acc
      000343 08               [12]  708 	inc	r0
      000344 E6               [12]  709 	mov	a,@r0
      000345 C0 E0            [24]  710 	push	acc
      000347 08               [12]  711 	inc	r0
      000348 E6               [12]  712 	mov	a,@r0
      000349 C0 E0            [24]  713 	push	acc
      00034B 08               [12]  714 	inc	r0
      00034C E6               [12]  715 	mov	a,@r0
      00034D C0 E0            [24]  716 	push	acc
      00034F E5*00            [12]  717 	mov	a,_bp
      000351 24 F6            [12]  718 	add	a,#0xf6
      000353 F8               [12]  719 	mov	r0,a
      000354 86 82            [24]  720 	mov	dpl,@r0
      000356 08               [12]  721 	inc	r0
      000357 86 83            [24]  722 	mov	dph,@r0
      000359 08               [12]  723 	inc	r0
      00035A 86 F0            [24]  724 	mov	b,@r0
      00035C 08               [12]  725 	inc	r0
      00035D E6               [12]  726 	mov	a,@r0
      00035E 08               [12]  727 	inc	r0
      00035F 86 04            [24]  728 	mov	ar4,@r0
      000361 08               [12]  729 	inc	r0
      000362 86 05            [24]  730 	mov	ar5,@r0
      000364 08               [12]  731 	inc	r0
      000365 86 06            [24]  732 	mov	ar6,@r0
      000367 08               [12]  733 	inc	r0
      000368 86 07            [24]  734 	mov	ar7,@r0
      00036A 12r00r00         [24]  735 	lcall	__mullonglong
      00036D C8               [12]  736 	xch	a,r0
      00036E E5*00            [12]  737 	mov	a,_bp
      000370 24 09            [12]  738 	add	a,#0x09
      000372 C8               [12]  739 	xch	a,r0
      000373 A6 82            [24]  740 	mov	@r0,dpl
      000375 08               [12]  741 	inc	r0
      000376 A6 83            [24]  742 	mov	@r0,dph
      000378 08               [12]  743 	inc	r0
      000379 A6 F0            [24]  744 	mov	@r0,b
      00037B 08               [12]  745 	inc	r0
      00037C F6               [12]  746 	mov	@r0,a
      00037D 08               [12]  747 	inc	r0
      00037E A6 04            [24]  748 	mov	@r0,ar4
      000380 08               [12]  749 	inc	r0
      000381 A6 05            [24]  750 	mov	@r0,ar5
      000383 08               [12]  751 	inc	r0
      000384 A6 06            [24]  752 	mov	@r0,ar6
      000386 08               [12]  753 	inc	r0
      000387 A6 07            [24]  754 	mov	@r0,ar7
      000389 E5 81            [12]  755 	mov	a,sp
      00038B 24 F8            [12]  756 	add	a,#0xf8
      00038D F5 81            [12]  757 	mov	sp,a
      00038F D0 03            [24]  758 	pop	ar3
      000391 D0 04            [24]  759 	pop	ar4
      000393 D0 05            [24]  760 	pop	ar5
      000395 E5*00            [12]  761 	mov	a,_bp
      000397 24 09            [12]  762 	add	a,#0x09
      000399 E5*00            [12]  763 	mov	a,_bp
      00039B 24 09            [12]  764 	add	a,#0x09
      00039D F8               [12]  765 	mov	r0,a
      00039E 86 06            [24]  766 	mov	ar6,@r0
      0003A0 08               [12]  767 	inc	r0
      0003A1 86 07            [24]  768 	mov	ar7,@r0
      0003A3 8D 82            [24]  769 	mov	dpl,r5
      0003A5 8C 83            [24]  770 	mov	dph,r4
      0003A7 8B F0            [24]  771 	mov	b,r3
      0003A9 EE               [12]  772 	mov	a,r6
      0003AA 12r00r00         [24]  773 	lcall	__gptrput
      0003AD A3               [24]  774 	inc	dptr
      0003AE EF               [12]  775 	mov	a,r7
      0003AF 12r00r00         [24]  776 	lcall	__gptrput
      0003B2 A8*00            [24]  777 	mov	r0,_bp
      0003B4 08               [12]  778 	inc	r0
      0003B5 A6 06            [24]  779 	mov	@r0,ar6
      0003B7 08               [12]  780 	inc	r0
      0003B8 A6 07            [24]  781 	mov	@r0,ar7
      0003BA 08               [12]  782 	inc	r0
      0003BB 76 00            [12]  783 	mov	@r0,#0x00
      0003BD 08               [12]  784 	inc	r0
      0003BE 76 00            [12]  785 	mov	@r0,#0x00
      0003C0 08               [12]  786 	inc	r0
      0003C1 76 00            [12]  787 	mov	@r0,#0x00
      0003C3 08               [12]  788 	inc	r0
      0003C4 76 00            [12]  789 	mov	@r0,#0x00
      0003C6 08               [12]  790 	inc	r0
      0003C7 76 00            [12]  791 	mov	@r0,#0x00
      0003C9 08               [12]  792 	inc	r0
      0003CA 76 00            [12]  793 	mov	@r0,#0x00
      0003CC A8*00            [24]  794 	mov	r0,_bp
      0003CE 08               [12]  795 	inc	r0
      0003CF E5*00            [12]  796 	mov	a,_bp
      0003D1 24 09            [12]  797 	add	a,#0x09
      0003D3 F9               [12]  798 	mov	r1,a
      0003D4 86 F0            [24]  799 	mov	b,@r0
      0003D6 E7               [12]  800 	mov	a,@r1
      0003D7 B5 F0 3B         [24]  801 	cjne	a,b,00103$
      0003DA 08               [12]  802 	inc	r0
      0003DB 86 F0            [24]  803 	mov	b,@r0
      0003DD 09               [12]  804 	inc	r1
      0003DE E7               [12]  805 	mov	a,@r1
      0003DF B5 F0 33         [24]  806 	cjne	a,b,00103$
      0003E2 08               [12]  807 	inc	r0
      0003E3 86 F0            [24]  808 	mov	b,@r0
      0003E5 09               [12]  809 	inc	r1
      0003E6 E7               [12]  810 	mov	a,@r1
      0003E7 B5 F0 2B         [24]  811 	cjne	a,b,00103$
      0003EA 08               [12]  812 	inc	r0
      0003EB 86 F0            [24]  813 	mov	b,@r0
      0003ED 09               [12]  814 	inc	r1
      0003EE E7               [12]  815 	mov	a,@r1
      0003EF B5 F0 23         [24]  816 	cjne	a,b,00103$
      0003F2 08               [12]  817 	inc	r0
      0003F3 86 F0            [24]  818 	mov	b,@r0
      0003F5 09               [12]  819 	inc	r1
      0003F6 E7               [12]  820 	mov	a,@r1
      0003F7 B5 F0 1B         [24]  821 	cjne	a,b,00103$
      0003FA 08               [12]  822 	inc	r0
      0003FB 86 F0            [24]  823 	mov	b,@r0
      0003FD 09               [12]  824 	inc	r1
      0003FE E7               [12]  825 	mov	a,@r1
      0003FF B5 F0 13         [24]  826 	cjne	a,b,00103$
      000402 08               [12]  827 	inc	r0
      000403 86 F0            [24]  828 	mov	b,@r0
      000405 09               [12]  829 	inc	r1
      000406 E7               [12]  830 	mov	a,@r1
      000407 B5 F0 0B         [24]  831 	cjne	a,b,00103$
      00040A 08               [12]  832 	inc	r0
      00040B 86 F0            [24]  833 	mov	b,@r0
      00040D 09               [12]  834 	inc	r1
      00040E E7               [12]  835 	mov	a,@r1
      00040F B5 F0 03         [24]  836 	cjne	a,b,00103$
      000412 D3               [12]  837 	setb	c
      000413 80 01            [24]  838 	sjmp	00104$
      000415                        839 00103$:
      000415 C3               [12]  840 	clr	c
      000416                        841 00104$:
      000416 92*00            [24]  842 	mov  b0,c
      000418 B3               [12]  843 	cpl	c
      000419 E4               [12]  844 	clr	a
      00041A 33               [12]  845 	rlc	a
      00041B F5 82            [12]  846 	mov	dpl,a
      00041D 85*00 81         [24]  847 	mov	sp,_bp
      000420 D0*00            [24]  848 	pop	_bp
      000422 22               [24]  849 	ret
                                    850 ;------------------------------------------------------------
                                    851 ;Allocation info for local variables in function '__ckd_mul_int'
                                    852 ;------------------------------------------------------------
                                    853 ;a                         Allocated to stack - _bp -10
                                    854 ;b                         Allocated to stack - _bp -18
                                    855 ;r                         Allocated to registers r5 r4 r3 
                                    856 ;result                    Allocated to stack - _bp +9
                                    857 ;sloc0                     Allocated to stack - _bp +1
                                    858 ;------------------------------------------------------------
                                    859 ;	../../device/include/stdckdint.h:73: inline _Bool __ckd_mul_int __CKD_DEFAULT_IMPL(int, *)
                                    860 ;	-----------------------------------------
                                    861 ;	 function __ckd_mul_int
                                    862 ;	-----------------------------------------
      000423                        863 ___ckd_mul_int:
      000423 C0*00            [24]  864 	push	_bp
      000425 E5 81            [12]  865 	mov	a,sp
      000427 F5*00            [12]  866 	mov	_bp,a
      000429 24 10            [12]  867 	add	a,#0x10
      00042B F5 81            [12]  868 	mov	sp,a
      00042D AD 82            [24]  869 	mov	r5,dpl
      00042F AC 83            [24]  870 	mov	r4,dph
      000431 AB F0            [24]  871 	mov	r3,b
      000433 C0 05            [24]  872 	push	ar5
      000435 C0 04            [24]  873 	push	ar4
      000437 C0 03            [24]  874 	push	ar3
      000439 E5*00            [12]  875 	mov	a,_bp
      00043B 24 EE            [12]  876 	add	a,#0xee
      00043D F8               [12]  877 	mov	r0,a
      00043E E6               [12]  878 	mov	a,@r0
      00043F C0 E0            [24]  879 	push	acc
      000441 08               [12]  880 	inc	r0
      000442 E6               [12]  881 	mov	a,@r0
      000443 C0 E0            [24]  882 	push	acc
      000445 08               [12]  883 	inc	r0
      000446 E6               [12]  884 	mov	a,@r0
      000447 C0 E0            [24]  885 	push	acc
      000449 08               [12]  886 	inc	r0
      00044A E6               [12]  887 	mov	a,@r0
      00044B C0 E0            [24]  888 	push	acc
      00044D 08               [12]  889 	inc	r0
      00044E E6               [12]  890 	mov	a,@r0
      00044F C0 E0            [24]  891 	push	acc
      000451 08               [12]  892 	inc	r0
      000452 E6               [12]  893 	mov	a,@r0
      000453 C0 E0            [24]  894 	push	acc
      000455 08               [12]  895 	inc	r0
      000456 E6               [12]  896 	mov	a,@r0
      000457 C0 E0            [24]  897 	push	acc
      000459 08               [12]  898 	inc	r0
      00045A E6               [12]  899 	mov	a,@r0
      00045B C0 E0            [24]  900 	push	acc
      00045D E5*00            [12]  901 	mov	a,_bp
      00045F 24 F6            [12]  902 	add	a,#0xf6
      000461 F8               [12]  903 	mov	r0,a
      000462 86 82            [24]  904 	mov	dpl,@r0
      000464 08               [12]  905 	inc	r0
      000465 86 83            [24]  906 	mov	dph,@r0
      000467 08               [12]  907 	inc	r0
      000468 86 F0            [24]  908 	mov	b,@r0
      00046A 08               [12]  909 	inc	r0
      00046B E6               [12]  910 	mov	a,@r0
      00046C 08               [12]  911 	inc	r0
      00046D 86 04            [24]  912 	mov	ar4,@r0
      00046F 08               [12]  913 	inc	r0
      000470 86 05            [24]  914 	mov	ar5,@r0
      000472 08               [12]  915 	inc	r0
      000473 86 06            [24]  916 	mov	ar6,@r0
      000475 08               [12]  917 	inc	r0
      000476 86 07            [24]  918 	mov	ar7,@r0
      000478 12r00r00         [24]  919 	lcall	__mullonglong
      00047B C8               [12]  920 	xch	a,r0
      00047C E5*00            [12]  921 	mov	a,_bp
      00047E 24 09            [12]  922 	add	a,#0x09
      000480 C8               [12]  923 	xch	a,r0
      000481 A6 82            [24]  924 	mov	@r0,dpl
      000483 08               [12]  925 	inc	r0
      000484 A6 83            [24]  926 	mov	@r0,dph
      000486 08               [12]  927 	inc	r0
      000487 A6 F0            [24]  928 	mov	@r0,b
      000489 08               [12]  929 	inc	r0
      00048A F6               [12]  930 	mov	@r0,a
      00048B 08               [12]  931 	inc	r0
      00048C A6 04            [24]  932 	mov	@r0,ar4
      00048E 08               [12]  933 	inc	r0
      00048F A6 05            [24]  934 	mov	@r0,ar5
      000491 08               [12]  935 	inc	r0
      000492 A6 06            [24]  936 	mov	@r0,ar6
      000494 08               [12]  937 	inc	r0
      000495 A6 07            [24]  938 	mov	@r0,ar7
      000497 E5 81            [12]  939 	mov	a,sp
      000499 24 F8            [12]  940 	add	a,#0xf8
      00049B F5 81            [12]  941 	mov	sp,a
      00049D D0 03            [24]  942 	pop	ar3
      00049F D0 04            [24]  943 	pop	ar4
      0004A1 D0 05            [24]  944 	pop	ar5
      0004A3 E5*00            [12]  945 	mov	a,_bp
      0004A5 24 09            [12]  946 	add	a,#0x09
      0004A7 E5*00            [12]  947 	mov	a,_bp
      0004A9 24 09            [12]  948 	add	a,#0x09
      0004AB F8               [12]  949 	mov	r0,a
      0004AC 86 06            [24]  950 	mov	ar6,@r0
      0004AE 08               [12]  951 	inc	r0
      0004AF 86 07            [24]  952 	mov	ar7,@r0
      0004B1 8D 82            [24]  953 	mov	dpl,r5
      0004B3 8C 83            [24]  954 	mov	dph,r4
      0004B5 8B F0            [24]  955 	mov	b,r3
      0004B7 EE               [12]  956 	mov	a,r6
      0004B8 12r00r00         [24]  957 	lcall	__gptrput
      0004BB A3               [24]  958 	inc	dptr
      0004BC EF               [12]  959 	mov	a,r7
      0004BD 12r00r00         [24]  960 	lcall	__gptrput
      0004C0 A8*00            [24]  961 	mov	r0,_bp
      0004C2 08               [12]  962 	inc	r0
      0004C3 A6 06            [24]  963 	mov	@r0,ar6
      0004C5 08               [12]  964 	inc	r0
      0004C6 A6 07            [24]  965 	mov	@r0,ar7
      0004C8 EF               [12]  966 	mov	a,r7
      0004C9 33               [12]  967 	rlc	a
      0004CA 95 E0            [12]  968 	subb	a,acc
      0004CC 08               [12]  969 	inc	r0
      0004CD F6               [12]  970 	mov	@r0,a
      0004CE 08               [12]  971 	inc	r0
      0004CF F6               [12]  972 	mov	@r0,a
      0004D0 08               [12]  973 	inc	r0
      0004D1 F6               [12]  974 	mov	@r0,a
      0004D2 08               [12]  975 	inc	r0
      0004D3 F6               [12]  976 	mov	@r0,a
      0004D4 08               [12]  977 	inc	r0
      0004D5 F6               [12]  978 	mov	@r0,a
      0004D6 08               [12]  979 	inc	r0
      0004D7 F6               [12]  980 	mov	@r0,a
      0004D8 A8*00            [24]  981 	mov	r0,_bp
      0004DA 08               [12]  982 	inc	r0
      0004DB E5*00            [12]  983 	mov	a,_bp
      0004DD 24 09            [12]  984 	add	a,#0x09
      0004DF F9               [12]  985 	mov	r1,a
      0004E0 86 F0            [24]  986 	mov	b,@r0
      0004E2 E7               [12]  987 	mov	a,@r1
      0004E3 B5 F0 3B         [24]  988 	cjne	a,b,00103$
      0004E6 08               [12]  989 	inc	r0
      0004E7 86 F0            [24]  990 	mov	b,@r0
      0004E9 09               [12]  991 	inc	r1
      0004EA E7               [12]  992 	mov	a,@r1
      0004EB B5 F0 33         [24]  993 	cjne	a,b,00103$
      0004EE 08               [12]  994 	inc	r0
      0004EF 86 F0            [24]  995 	mov	b,@r0
      0004F1 09               [12]  996 	inc	r1
      0004F2 E7               [12]  997 	mov	a,@r1
      0004F3 B5 F0 2B         [24]  998 	cjne	a,b,00103$
      0004F6 08               [12]  999 	inc	r0
      0004F7 86 F0            [24] 1000 	mov	b,@r0
      0004F9 09               [12] 1001 	inc	r1
      0004FA E7               [12] 1002 	mov	a,@r1
      0004FB B5 F0 23         [24] 1003 	cjne	a,b,00103$
      0004FE 08               [12] 1004 	inc	r0
      0004FF 86 F0            [24] 1005 	mov	b,@r0
      000501 09               [12] 1006 	inc	r1
      000502 E7               [12] 1007 	mov	a,@r1
      000503 B5 F0 1B         [24] 1008 	cjne	a,b,00103$
      000506 08               [12] 1009 	inc	r0
      000507 86 F0            [24] 1010 	mov	b,@r0
      000509 09               [12] 1011 	inc	r1
      00050A E7               [12] 1012 	mov	a,@r1
      00050B B5 F0 13         [24] 1013 	cjne	a,b,00103$
      00050E 08               [12] 1014 	inc	r0
      00050F 86 F0            [24] 1015 	mov	b,@r0
      000511 09               [12] 1016 	inc	r1
      000512 E7               [12] 1017 	mov	a,@r1
      000513 B5 F0 0B         [24] 1018 	cjne	a,b,00103$
      000516 08               [12] 1019 	inc	r0
      000517 86 F0            [24] 1020 	mov	b,@r0
      000519 09               [12] 1021 	inc	r1
      00051A E7               [12] 1022 	mov	a,@r1
      00051B B5 F0 03         [24] 1023 	cjne	a,b,00103$
      00051E D3               [12] 1024 	setb	c
      00051F 80 01            [24] 1025 	sjmp	00104$
      000521                       1026 00103$:
      000521 C3               [12] 1027 	clr	c
      000522                       1028 00104$:
      000522 92*00            [24] 1029 	mov  b0,c
      000524 B3               [12] 1030 	cpl	c
      000525 E4               [12] 1031 	clr	a
      000526 33               [12] 1032 	rlc	a
      000527 F5 82            [12] 1033 	mov	dpl,a
      000529 85*00 81         [24] 1034 	mov	sp,_bp
      00052C D0*00            [24] 1035 	pop	_bp
      00052E 22               [24] 1036 	ret
                                   1037 ;------------------------------------------------------------
                                   1038 ;Allocation info for local variables in function '__ckd_mul_uint'
                                   1039 ;------------------------------------------------------------
                                   1040 ;a                         Allocated to stack - _bp -10
                                   1041 ;b                         Allocated to stack - _bp -18
                                   1042 ;r                         Allocated to registers r5 r4 r3 
                                   1043 ;result                    Allocated to stack - _bp +9
                                   1044 ;sloc0                     Allocated to stack - _bp +1
                                   1045 ;------------------------------------------------------------
                                   1046 ;	../../device/include/stdckdint.h:74: inline _Bool __ckd_mul_uint __CKD_DEFAULT_IMPL(unsigned int, *)
                                   1047 ;	-----------------------------------------
                                   1048 ;	 function __ckd_mul_uint
                                   1049 ;	-----------------------------------------
      00052F                       1050 ___ckd_mul_uint:
      00052F C0*00            [24] 1051 	push	_bp
      000531 E5 81            [12] 1052 	mov	a,sp
      000533 F5*00            [12] 1053 	mov	_bp,a
      000535 24 10            [12] 1054 	add	a,#0x10
      000537 F5 81            [12] 1055 	mov	sp,a
      000539 AD 82            [24] 1056 	mov	r5,dpl
      00053B AC 83            [24] 1057 	mov	r4,dph
      00053D AB F0            [24] 1058 	mov	r3,b
      00053F C0 05            [24] 1059 	push	ar5
      000541 C0 04            [24] 1060 	push	ar4
      000543 C0 03            [24] 1061 	push	ar3
      000545 E5*00            [12] 1062 	mov	a,_bp
      000547 24 EE            [12] 1063 	add	a,#0xee
      000549 F8               [12] 1064 	mov	r0,a
      00054A E6               [12] 1065 	mov	a,@r0
      00054B C0 E0            [24] 1066 	push	acc
      00054D 08               [12] 1067 	inc	r0
      00054E E6               [12] 1068 	mov	a,@r0
      00054F C0 E0            [24] 1069 	push	acc
      000551 08               [12] 1070 	inc	r0
      000552 E6               [12] 1071 	mov	a,@r0
      000553 C0 E0            [24] 1072 	push	acc
      000555 08               [12] 1073 	inc	r0
      000556 E6               [12] 1074 	mov	a,@r0
      000557 C0 E0            [24] 1075 	push	acc
      000559 08               [12] 1076 	inc	r0
      00055A E6               [12] 1077 	mov	a,@r0
      00055B C0 E0            [24] 1078 	push	acc
      00055D 08               [12] 1079 	inc	r0
      00055E E6               [12] 1080 	mov	a,@r0
      00055F C0 E0            [24] 1081 	push	acc
      000561 08               [12] 1082 	inc	r0
      000562 E6               [12] 1083 	mov	a,@r0
      000563 C0 E0            [24] 1084 	push	acc
      000565 08               [12] 1085 	inc	r0
      000566 E6               [12] 1086 	mov	a,@r0
      000567 C0 E0            [24] 1087 	push	acc
      000569 E5*00            [12] 1088 	mov	a,_bp
      00056B 24 F6            [12] 1089 	add	a,#0xf6
      00056D F8               [12] 1090 	mov	r0,a
      00056E 86 82            [24] 1091 	mov	dpl,@r0
      000570 08               [12] 1092 	inc	r0
      000571 86 83            [24] 1093 	mov	dph,@r0
      000573 08               [12] 1094 	inc	r0
      000574 86 F0            [24] 1095 	mov	b,@r0
      000576 08               [12] 1096 	inc	r0
      000577 E6               [12] 1097 	mov	a,@r0
      000578 08               [12] 1098 	inc	r0
      000579 86 04            [24] 1099 	mov	ar4,@r0
      00057B 08               [12] 1100 	inc	r0
      00057C 86 05            [24] 1101 	mov	ar5,@r0
      00057E 08               [12] 1102 	inc	r0
      00057F 86 06            [24] 1103 	mov	ar6,@r0
      000581 08               [12] 1104 	inc	r0
      000582 86 07            [24] 1105 	mov	ar7,@r0
      000584 12r00r00         [24] 1106 	lcall	__mullonglong
      000587 C8               [12] 1107 	xch	a,r0
      000588 E5*00            [12] 1108 	mov	a,_bp
      00058A 24 09            [12] 1109 	add	a,#0x09
      00058C C8               [12] 1110 	xch	a,r0
      00058D A6 82            [24] 1111 	mov	@r0,dpl
      00058F 08               [12] 1112 	inc	r0
      000590 A6 83            [24] 1113 	mov	@r0,dph
      000592 08               [12] 1114 	inc	r0
      000593 A6 F0            [24] 1115 	mov	@r0,b
      000595 08               [12] 1116 	inc	r0
      000596 F6               [12] 1117 	mov	@r0,a
      000597 08               [12] 1118 	inc	r0
      000598 A6 04            [24] 1119 	mov	@r0,ar4
      00059A 08               [12] 1120 	inc	r0
      00059B A6 05            [24] 1121 	mov	@r0,ar5
      00059D 08               [12] 1122 	inc	r0
      00059E A6 06            [24] 1123 	mov	@r0,ar6
      0005A0 08               [12] 1124 	inc	r0
      0005A1 A6 07            [24] 1125 	mov	@r0,ar7
      0005A3 E5 81            [12] 1126 	mov	a,sp
      0005A5 24 F8            [12] 1127 	add	a,#0xf8
      0005A7 F5 81            [12] 1128 	mov	sp,a
      0005A9 D0 03            [24] 1129 	pop	ar3
      0005AB D0 04            [24] 1130 	pop	ar4
      0005AD D0 05            [24] 1131 	pop	ar5
      0005AF E5*00            [12] 1132 	mov	a,_bp
      0005B1 24 09            [12] 1133 	add	a,#0x09
      0005B3 E5*00            [12] 1134 	mov	a,_bp
      0005B5 24 09            [12] 1135 	add	a,#0x09
      0005B7 F8               [12] 1136 	mov	r0,a
      0005B8 86 06            [24] 1137 	mov	ar6,@r0
      0005BA 08               [12] 1138 	inc	r0
      0005BB 86 07            [24] 1139 	mov	ar7,@r0
      0005BD 8D 82            [24] 1140 	mov	dpl,r5
      0005BF 8C 83            [24] 1141 	mov	dph,r4
      0005C1 8B F0            [24] 1142 	mov	b,r3
      0005C3 EE               [12] 1143 	mov	a,r6
      0005C4 12r00r00         [24] 1144 	lcall	__gptrput
      0005C7 A3               [24] 1145 	inc	dptr
      0005C8 EF               [12] 1146 	mov	a,r7
      0005C9 12r00r00         [24] 1147 	lcall	__gptrput
      0005CC A8*00            [24] 1148 	mov	r0,_bp
      0005CE 08               [12] 1149 	inc	r0
      0005CF A6 06            [24] 1150 	mov	@r0,ar6
      0005D1 08               [12] 1151 	inc	r0
      0005D2 A6 07            [24] 1152 	mov	@r0,ar7
      0005D4 08               [12] 1153 	inc	r0
      0005D5 76 00            [12] 1154 	mov	@r0,#0x00
      0005D7 08               [12] 1155 	inc	r0
      0005D8 76 00            [12] 1156 	mov	@r0,#0x00
      0005DA 08               [12] 1157 	inc	r0
      0005DB 76 00            [12] 1158 	mov	@r0,#0x00
      0005DD 08               [12] 1159 	inc	r0
      0005DE 76 00            [12] 1160 	mov	@r0,#0x00
      0005E0 08               [12] 1161 	inc	r0
      0005E1 76 00            [12] 1162 	mov	@r0,#0x00
      0005E3 08               [12] 1163 	inc	r0
      0005E4 76 00            [12] 1164 	mov	@r0,#0x00
      0005E6 A8*00            [24] 1165 	mov	r0,_bp
      0005E8 08               [12] 1166 	inc	r0
      0005E9 E5*00            [12] 1167 	mov	a,_bp
      0005EB 24 09            [12] 1168 	add	a,#0x09
      0005ED F9               [12] 1169 	mov	r1,a
      0005EE 86 F0            [24] 1170 	mov	b,@r0
      0005F0 E7               [12] 1171 	mov	a,@r1
      0005F1 B5 F0 3B         [24] 1172 	cjne	a,b,00103$
      0005F4 08               [12] 1173 	inc	r0
      0005F5 86 F0            [24] 1174 	mov	b,@r0
      0005F7 09               [12] 1175 	inc	r1
      0005F8 E7               [12] 1176 	mov	a,@r1
      0005F9 B5 F0 33         [24] 1177 	cjne	a,b,00103$
      0005FC 08               [12] 1178 	inc	r0
      0005FD 86 F0            [24] 1179 	mov	b,@r0
      0005FF 09               [12] 1180 	inc	r1
      000600 E7               [12] 1181 	mov	a,@r1
      000601 B5 F0 2B         [24] 1182 	cjne	a,b,00103$
      000604 08               [12] 1183 	inc	r0
      000605 86 F0            [24] 1184 	mov	b,@r0
      000607 09               [12] 1185 	inc	r1
      000608 E7               [12] 1186 	mov	a,@r1
      000609 B5 F0 23         [24] 1187 	cjne	a,b,00103$
      00060C 08               [12] 1188 	inc	r0
      00060D 86 F0            [24] 1189 	mov	b,@r0
      00060F 09               [12] 1190 	inc	r1
      000610 E7               [12] 1191 	mov	a,@r1
      000611 B5 F0 1B         [24] 1192 	cjne	a,b,00103$
      000614 08               [12] 1193 	inc	r0
      000615 86 F0            [24] 1194 	mov	b,@r0
      000617 09               [12] 1195 	inc	r1
      000618 E7               [12] 1196 	mov	a,@r1
      000619 B5 F0 13         [24] 1197 	cjne	a,b,00103$
      00061C 08               [12] 1198 	inc	r0
      00061D 86 F0            [24] 1199 	mov	b,@r0
      00061F 09               [12] 1200 	inc	r1
      000620 E7               [12] 1201 	mov	a,@r1
      000621 B5 F0 0B         [24] 1202 	cjne	a,b,00103$
      000624 08               [12] 1203 	inc	r0
      000625 86 F0            [24] 1204 	mov	b,@r0
      000627 09               [12] 1205 	inc	r1
      000628 E7               [12] 1206 	mov	a,@r1
      000629 B5 F0 03         [24] 1207 	cjne	a,b,00103$
      00062C D3               [12] 1208 	setb	c
      00062D 80 01            [24] 1209 	sjmp	00104$
      00062F                       1210 00103$:
      00062F C3               [12] 1211 	clr	c
      000630                       1212 00104$:
      000630 92*00            [24] 1213 	mov  b0,c
      000632 B3               [12] 1214 	cpl	c
      000633 E4               [12] 1215 	clr	a
      000634 33               [12] 1216 	rlc	a
      000635 F5 82            [12] 1217 	mov	dpl,a
      000637 85*00 81         [24] 1218 	mov	sp,_bp
      00063A D0*00            [24] 1219 	pop	_bp
      00063C 22               [24] 1220 	ret
                                   1221 ;------------------------------------------------------------
                                   1222 ;Allocation info for local variables in function '__ckd_mul_long'
                                   1223 ;------------------------------------------------------------
                                   1224 ;a                         Allocated to stack - _bp -10
                                   1225 ;b                         Allocated to stack - _bp -18
                                   1226 ;r                         Allocated to stack - _bp +1
                                   1227 ;result                    Allocated to stack - _bp +12
                                   1228 ;sloc0                     Allocated to stack - _bp +4
                                   1229 ;------------------------------------------------------------
                                   1230 ;	../../device/include/stdckdint.h:75: inline _Bool __ckd_mul_long __CKD_DEFAULT_IMPL(long, *)
                                   1231 ;	-----------------------------------------
                                   1232 ;	 function __ckd_mul_long
                                   1233 ;	-----------------------------------------
      00063D                       1234 ___ckd_mul_long:
      00063D C0*00            [24] 1235 	push	_bp
      00063F 85 81*00         [24] 1236 	mov	_bp,sp
      000642 C0 82            [24] 1237 	push	dpl
      000644 C0 83            [24] 1238 	push	dph
      000646 C0 F0            [24] 1239 	push	b
      000648 E5 81            [12] 1240 	mov	a,sp
      00064A 24 10            [12] 1241 	add	a,#0x10
      00064C F5 81            [12] 1242 	mov	sp,a
      00064E E5*00            [12] 1243 	mov	a,_bp
      000650 24 EE            [12] 1244 	add	a,#0xee
      000652 F8               [12] 1245 	mov	r0,a
      000653 E6               [12] 1246 	mov	a,@r0
      000654 C0 E0            [24] 1247 	push	acc
      000656 08               [12] 1248 	inc	r0
      000657 E6               [12] 1249 	mov	a,@r0
      000658 C0 E0            [24] 1250 	push	acc
      00065A 08               [12] 1251 	inc	r0
      00065B E6               [12] 1252 	mov	a,@r0
      00065C C0 E0            [24] 1253 	push	acc
      00065E 08               [12] 1254 	inc	r0
      00065F E6               [12] 1255 	mov	a,@r0
      000660 C0 E0            [24] 1256 	push	acc
      000662 08               [12] 1257 	inc	r0
      000663 E6               [12] 1258 	mov	a,@r0
      000664 C0 E0            [24] 1259 	push	acc
      000666 08               [12] 1260 	inc	r0
      000667 E6               [12] 1261 	mov	a,@r0
      000668 C0 E0            [24] 1262 	push	acc
      00066A 08               [12] 1263 	inc	r0
      00066B E6               [12] 1264 	mov	a,@r0
      00066C C0 E0            [24] 1265 	push	acc
      00066E 08               [12] 1266 	inc	r0
      00066F E6               [12] 1267 	mov	a,@r0
      000670 C0 E0            [24] 1268 	push	acc
      000672 E5*00            [12] 1269 	mov	a,_bp
      000674 24 F6            [12] 1270 	add	a,#0xf6
      000676 F8               [12] 1271 	mov	r0,a
      000677 86 82            [24] 1272 	mov	dpl,@r0
      000679 08               [12] 1273 	inc	r0
      00067A 86 83            [24] 1274 	mov	dph,@r0
      00067C 08               [12] 1275 	inc	r0
      00067D 86 F0            [24] 1276 	mov	b,@r0
      00067F 08               [12] 1277 	inc	r0
      000680 E6               [12] 1278 	mov	a,@r0
      000681 08               [12] 1279 	inc	r0
      000682 86 04            [24] 1280 	mov	ar4,@r0
      000684 08               [12] 1281 	inc	r0
      000685 86 05            [24] 1282 	mov	ar5,@r0
      000687 08               [12] 1283 	inc	r0
      000688 86 06            [24] 1284 	mov	ar6,@r0
      00068A 08               [12] 1285 	inc	r0
      00068B 86 07            [24] 1286 	mov	ar7,@r0
      00068D 12r00r00         [24] 1287 	lcall	__mullonglong
      000690 C8               [12] 1288 	xch	a,r0
      000691 E5*00            [12] 1289 	mov	a,_bp
      000693 24 0C            [12] 1290 	add	a,#0x0c
      000695 C8               [12] 1291 	xch	a,r0
      000696 A6 82            [24] 1292 	mov	@r0,dpl
      000698 08               [12] 1293 	inc	r0
      000699 A6 83            [24] 1294 	mov	@r0,dph
      00069B 08               [12] 1295 	inc	r0
      00069C A6 F0            [24] 1296 	mov	@r0,b
      00069E 08               [12] 1297 	inc	r0
      00069F F6               [12] 1298 	mov	@r0,a
      0006A0 08               [12] 1299 	inc	r0
      0006A1 A6 04            [24] 1300 	mov	@r0,ar4
      0006A3 08               [12] 1301 	inc	r0
      0006A4 A6 05            [24] 1302 	mov	@r0,ar5
      0006A6 08               [12] 1303 	inc	r0
      0006A7 A6 06            [24] 1304 	mov	@r0,ar6
      0006A9 08               [12] 1305 	inc	r0
      0006AA A6 07            [24] 1306 	mov	@r0,ar7
      0006AC E5 81            [12] 1307 	mov	a,sp
      0006AE 24 F8            [12] 1308 	add	a,#0xf8
      0006B0 F5 81            [12] 1309 	mov	sp,a
      0006B2 E5*00            [12] 1310 	mov	a,_bp
      0006B4 24 0C            [12] 1311 	add	a,#0x0c
      0006B6 E5*00            [12] 1312 	mov	a,_bp
      0006B8 24 0C            [12] 1313 	add	a,#0x0c
      0006BA F8               [12] 1314 	mov	r0,a
      0006BB 86 05            [24] 1315 	mov	ar5,@r0
      0006BD 08               [12] 1316 	inc	r0
      0006BE 86 06            [24] 1317 	mov	ar6,@r0
      0006C0 08               [12] 1318 	inc	r0
      0006C1 86 04            [24] 1319 	mov	ar4,@r0
      0006C3 08               [12] 1320 	inc	r0
      0006C4 86 07            [24] 1321 	mov	ar7,@r0
      0006C6 A8*00            [24] 1322 	mov	r0,_bp
      0006C8 08               [12] 1323 	inc	r0
      0006C9 86 82            [24] 1324 	mov	dpl,@r0
      0006CB 08               [12] 1325 	inc	r0
      0006CC 86 83            [24] 1326 	mov	dph,@r0
      0006CE 08               [12] 1327 	inc	r0
      0006CF 86 F0            [24] 1328 	mov	b,@r0
      0006D1 ED               [12] 1329 	mov	a,r5
      0006D2 12r00r00         [24] 1330 	lcall	__gptrput
      0006D5 A3               [24] 1331 	inc	dptr
      0006D6 EE               [12] 1332 	mov	a,r6
      0006D7 12r00r00         [24] 1333 	lcall	__gptrput
      0006DA A3               [24] 1334 	inc	dptr
      0006DB EC               [12] 1335 	mov	a,r4
      0006DC 12r00r00         [24] 1336 	lcall	__gptrput
      0006DF A3               [24] 1337 	inc	dptr
      0006E0 EF               [12] 1338 	mov	a,r7
      0006E1 12r00r00         [24] 1339 	lcall	__gptrput
      0006E4 E5*00            [12] 1340 	mov	a,_bp
      0006E6 24 04            [12] 1341 	add	a,#0x04
      0006E8 F8               [12] 1342 	mov	r0,a
      0006E9 A6 05            [24] 1343 	mov	@r0,ar5
      0006EB 08               [12] 1344 	inc	r0
      0006EC A6 06            [24] 1345 	mov	@r0,ar6
      0006EE 08               [12] 1346 	inc	r0
      0006EF A6 04            [24] 1347 	mov	@r0,ar4
      0006F1 08               [12] 1348 	inc	r0
      0006F2 A6 07            [24] 1349 	mov	@r0,ar7
      0006F4 EF               [12] 1350 	mov	a,r7
      0006F5 33               [12] 1351 	rlc	a
      0006F6 95 E0            [12] 1352 	subb	a,acc
      0006F8 08               [12] 1353 	inc	r0
      0006F9 F6               [12] 1354 	mov	@r0,a
      0006FA 08               [12] 1355 	inc	r0
      0006FB F6               [12] 1356 	mov	@r0,a
      0006FC 08               [12] 1357 	inc	r0
      0006FD F6               [12] 1358 	mov	@r0,a
      0006FE 08               [12] 1359 	inc	r0
      0006FF F6               [12] 1360 	mov	@r0,a
      000700 E5*00            [12] 1361 	mov	a,_bp
      000702 24 04            [12] 1362 	add	a,#0x04
      000704 F8               [12] 1363 	mov	r0,a
      000705 E5*00            [12] 1364 	mov	a,_bp
      000707 24 0C            [12] 1365 	add	a,#0x0c
      000709 F9               [12] 1366 	mov	r1,a
      00070A 86 F0            [24] 1367 	mov	b,@r0
      00070C E7               [12] 1368 	mov	a,@r1
      00070D B5 F0 3B         [24] 1369 	cjne	a,b,00103$
      000710 08               [12] 1370 	inc	r0
      000711 86 F0            [24] 1371 	mov	b,@r0
      000713 09               [12] 1372 	inc	r1
      000714 E7               [12] 1373 	mov	a,@r1
      000715 B5 F0 33         [24] 1374 	cjne	a,b,00103$
      000718 08               [12] 1375 	inc	r0
      000719 86 F0            [24] 1376 	mov	b,@r0
      00071B 09               [12] 1377 	inc	r1
      00071C E7               [12] 1378 	mov	a,@r1
      00071D B5 F0 2B         [24] 1379 	cjne	a,b,00103$
      000720 08               [12] 1380 	inc	r0
      000721 86 F0            [24] 1381 	mov	b,@r0
      000723 09               [12] 1382 	inc	r1
      000724 E7               [12] 1383 	mov	a,@r1
      000725 B5 F0 23         [24] 1384 	cjne	a,b,00103$
      000728 08               [12] 1385 	inc	r0
      000729 86 F0            [24] 1386 	mov	b,@r0
      00072B 09               [12] 1387 	inc	r1
      00072C E7               [12] 1388 	mov	a,@r1
      00072D B5 F0 1B         [24] 1389 	cjne	a,b,00103$
      000730 08               [12] 1390 	inc	r0
      000731 86 F0            [24] 1391 	mov	b,@r0
      000733 09               [12] 1392 	inc	r1
      000734 E7               [12] 1393 	mov	a,@r1
      000735 B5 F0 13         [24] 1394 	cjne	a,b,00103$
      000738 08               [12] 1395 	inc	r0
      000739 86 F0            [24] 1396 	mov	b,@r0
      00073B 09               [12] 1397 	inc	r1
      00073C E7               [12] 1398 	mov	a,@r1
      00073D B5 F0 0B         [24] 1399 	cjne	a,b,00103$
      000740 08               [12] 1400 	inc	r0
      000741 86 F0            [24] 1401 	mov	b,@r0
      000743 09               [12] 1402 	inc	r1
      000744 E7               [12] 1403 	mov	a,@r1
      000745 B5 F0 03         [24] 1404 	cjne	a,b,00103$
      000748 D3               [12] 1405 	setb	c
      000749 80 01            [24] 1406 	sjmp	00104$
      00074B                       1407 00103$:
      00074B C3               [12] 1408 	clr	c
      00074C                       1409 00104$:
      00074C 92*00            [24] 1410 	mov  b0,c
      00074E B3               [12] 1411 	cpl	c
      00074F E4               [12] 1412 	clr	a
      000750 33               [12] 1413 	rlc	a
      000751 F5 82            [12] 1414 	mov	dpl,a
      000753 85*00 81         [24] 1415 	mov	sp,_bp
      000756 D0*00            [24] 1416 	pop	_bp
      000758 22               [24] 1417 	ret
                                   1418 ;------------------------------------------------------------
                                   1419 ;Allocation info for local variables in function '__ckd_mul_ulong'
                                   1420 ;------------------------------------------------------------
                                   1421 ;a                         Allocated to stack - _bp -10
                                   1422 ;b                         Allocated to stack - _bp -18
                                   1423 ;r                         Allocated to stack - _bp +1
                                   1424 ;result                    Allocated to stack - _bp +12
                                   1425 ;sloc0                     Allocated to stack - _bp +4
                                   1426 ;------------------------------------------------------------
                                   1427 ;	../../device/include/stdckdint.h:76: inline _Bool __ckd_mul_ulong __CKD_DEFAULT_IMPL(unsigned long, *)
                                   1428 ;	-----------------------------------------
                                   1429 ;	 function __ckd_mul_ulong
                                   1430 ;	-----------------------------------------
      000759                       1431 ___ckd_mul_ulong:
      000759 C0*00            [24] 1432 	push	_bp
      00075B 85 81*00         [24] 1433 	mov	_bp,sp
      00075E C0 82            [24] 1434 	push	dpl
      000760 C0 83            [24] 1435 	push	dph
      000762 C0 F0            [24] 1436 	push	b
      000764 E5 81            [12] 1437 	mov	a,sp
      000766 24 10            [12] 1438 	add	a,#0x10
      000768 F5 81            [12] 1439 	mov	sp,a
      00076A E5*00            [12] 1440 	mov	a,_bp
      00076C 24 EE            [12] 1441 	add	a,#0xee
      00076E F8               [12] 1442 	mov	r0,a
      00076F E6               [12] 1443 	mov	a,@r0
      000770 C0 E0            [24] 1444 	push	acc
      000772 08               [12] 1445 	inc	r0
      000773 E6               [12] 1446 	mov	a,@r0
      000774 C0 E0            [24] 1447 	push	acc
      000776 08               [12] 1448 	inc	r0
      000777 E6               [12] 1449 	mov	a,@r0
      000778 C0 E0            [24] 1450 	push	acc
      00077A 08               [12] 1451 	inc	r0
      00077B E6               [12] 1452 	mov	a,@r0
      00077C C0 E0            [24] 1453 	push	acc
      00077E 08               [12] 1454 	inc	r0
      00077F E6               [12] 1455 	mov	a,@r0
      000780 C0 E0            [24] 1456 	push	acc
      000782 08               [12] 1457 	inc	r0
      000783 E6               [12] 1458 	mov	a,@r0
      000784 C0 E0            [24] 1459 	push	acc
      000786 08               [12] 1460 	inc	r0
      000787 E6               [12] 1461 	mov	a,@r0
      000788 C0 E0            [24] 1462 	push	acc
      00078A 08               [12] 1463 	inc	r0
      00078B E6               [12] 1464 	mov	a,@r0
      00078C C0 E0            [24] 1465 	push	acc
      00078E E5*00            [12] 1466 	mov	a,_bp
      000790 24 F6            [12] 1467 	add	a,#0xf6
      000792 F8               [12] 1468 	mov	r0,a
      000793 86 82            [24] 1469 	mov	dpl,@r0
      000795 08               [12] 1470 	inc	r0
      000796 86 83            [24] 1471 	mov	dph,@r0
      000798 08               [12] 1472 	inc	r0
      000799 86 F0            [24] 1473 	mov	b,@r0
      00079B 08               [12] 1474 	inc	r0
      00079C E6               [12] 1475 	mov	a,@r0
      00079D 08               [12] 1476 	inc	r0
      00079E 86 04            [24] 1477 	mov	ar4,@r0
      0007A0 08               [12] 1478 	inc	r0
      0007A1 86 05            [24] 1479 	mov	ar5,@r0
      0007A3 08               [12] 1480 	inc	r0
      0007A4 86 06            [24] 1481 	mov	ar6,@r0
      0007A6 08               [12] 1482 	inc	r0
      0007A7 86 07            [24] 1483 	mov	ar7,@r0
      0007A9 12r00r00         [24] 1484 	lcall	__mullonglong
      0007AC C8               [12] 1485 	xch	a,r0
      0007AD E5*00            [12] 1486 	mov	a,_bp
      0007AF 24 0C            [12] 1487 	add	a,#0x0c
      0007B1 C8               [12] 1488 	xch	a,r0
      0007B2 A6 82            [24] 1489 	mov	@r0,dpl
      0007B4 08               [12] 1490 	inc	r0
      0007B5 A6 83            [24] 1491 	mov	@r0,dph
      0007B7 08               [12] 1492 	inc	r0
      0007B8 A6 F0            [24] 1493 	mov	@r0,b
      0007BA 08               [12] 1494 	inc	r0
      0007BB F6               [12] 1495 	mov	@r0,a
      0007BC 08               [12] 1496 	inc	r0
      0007BD A6 04            [24] 1497 	mov	@r0,ar4
      0007BF 08               [12] 1498 	inc	r0
      0007C0 A6 05            [24] 1499 	mov	@r0,ar5
      0007C2 08               [12] 1500 	inc	r0
      0007C3 A6 06            [24] 1501 	mov	@r0,ar6
      0007C5 08               [12] 1502 	inc	r0
      0007C6 A6 07            [24] 1503 	mov	@r0,ar7
      0007C8 E5 81            [12] 1504 	mov	a,sp
      0007CA 24 F8            [12] 1505 	add	a,#0xf8
      0007CC F5 81            [12] 1506 	mov	sp,a
      0007CE E5*00            [12] 1507 	mov	a,_bp
      0007D0 24 0C            [12] 1508 	add	a,#0x0c
      0007D2 E5*00            [12] 1509 	mov	a,_bp
      0007D4 24 0C            [12] 1510 	add	a,#0x0c
      0007D6 F8               [12] 1511 	mov	r0,a
      0007D7 86 05            [24] 1512 	mov	ar5,@r0
      0007D9 08               [12] 1513 	inc	r0
      0007DA 86 06            [24] 1514 	mov	ar6,@r0
      0007DC 08               [12] 1515 	inc	r0
      0007DD 86 04            [24] 1516 	mov	ar4,@r0
      0007DF 08               [12] 1517 	inc	r0
      0007E0 86 07            [24] 1518 	mov	ar7,@r0
      0007E2 A8*00            [24] 1519 	mov	r0,_bp
      0007E4 08               [12] 1520 	inc	r0
      0007E5 86 82            [24] 1521 	mov	dpl,@r0
      0007E7 08               [12] 1522 	inc	r0
      0007E8 86 83            [24] 1523 	mov	dph,@r0
      0007EA 08               [12] 1524 	inc	r0
      0007EB 86 F0            [24] 1525 	mov	b,@r0
      0007ED ED               [12] 1526 	mov	a,r5
      0007EE 12r00r00         [24] 1527 	lcall	__gptrput
      0007F1 A3               [24] 1528 	inc	dptr
      0007F2 EE               [12] 1529 	mov	a,r6
      0007F3 12r00r00         [24] 1530 	lcall	__gptrput
      0007F6 A3               [24] 1531 	inc	dptr
      0007F7 EC               [12] 1532 	mov	a,r4
      0007F8 12r00r00         [24] 1533 	lcall	__gptrput
      0007FB A3               [24] 1534 	inc	dptr
      0007FC EF               [12] 1535 	mov	a,r7
      0007FD 12r00r00         [24] 1536 	lcall	__gptrput
      000800 E5*00            [12] 1537 	mov	a,_bp
      000802 24 04            [12] 1538 	add	a,#0x04
      000804 F8               [12] 1539 	mov	r0,a
      000805 A6 05            [24] 1540 	mov	@r0,ar5
      000807 08               [12] 1541 	inc	r0
      000808 A6 06            [24] 1542 	mov	@r0,ar6
      00080A 08               [12] 1543 	inc	r0
      00080B A6 04            [24] 1544 	mov	@r0,ar4
      00080D 08               [12] 1545 	inc	r0
      00080E A6 07            [24] 1546 	mov	@r0,ar7
      000810 08               [12] 1547 	inc	r0
      000811 76 00            [12] 1548 	mov	@r0,#0x00
      000813 08               [12] 1549 	inc	r0
      000814 76 00            [12] 1550 	mov	@r0,#0x00
      000816 08               [12] 1551 	inc	r0
      000817 76 00            [12] 1552 	mov	@r0,#0x00
      000819 08               [12] 1553 	inc	r0
      00081A 76 00            [12] 1554 	mov	@r0,#0x00
      00081C E5*00            [12] 1555 	mov	a,_bp
      00081E 24 04            [12] 1556 	add	a,#0x04
      000820 F8               [12] 1557 	mov	r0,a
      000821 E5*00            [12] 1558 	mov	a,_bp
      000823 24 0C            [12] 1559 	add	a,#0x0c
      000825 F9               [12] 1560 	mov	r1,a
      000826 86 F0            [24] 1561 	mov	b,@r0
      000828 E7               [12] 1562 	mov	a,@r1
      000829 B5 F0 3B         [24] 1563 	cjne	a,b,00103$
      00082C 08               [12] 1564 	inc	r0
      00082D 86 F0            [24] 1565 	mov	b,@r0
      00082F 09               [12] 1566 	inc	r1
      000830 E7               [12] 1567 	mov	a,@r1
      000831 B5 F0 33         [24] 1568 	cjne	a,b,00103$
      000834 08               [12] 1569 	inc	r0
      000835 86 F0            [24] 1570 	mov	b,@r0
      000837 09               [12] 1571 	inc	r1
      000838 E7               [12] 1572 	mov	a,@r1
      000839 B5 F0 2B         [24] 1573 	cjne	a,b,00103$
      00083C 08               [12] 1574 	inc	r0
      00083D 86 F0            [24] 1575 	mov	b,@r0
      00083F 09               [12] 1576 	inc	r1
      000840 E7               [12] 1577 	mov	a,@r1
      000841 B5 F0 23         [24] 1578 	cjne	a,b,00103$
      000844 08               [12] 1579 	inc	r0
      000845 86 F0            [24] 1580 	mov	b,@r0
      000847 09               [12] 1581 	inc	r1
      000848 E7               [12] 1582 	mov	a,@r1
      000849 B5 F0 1B         [24] 1583 	cjne	a,b,00103$
      00084C 08               [12] 1584 	inc	r0
      00084D 86 F0            [24] 1585 	mov	b,@r0
      00084F 09               [12] 1586 	inc	r1
      000850 E7               [12] 1587 	mov	a,@r1
      000851 B5 F0 13         [24] 1588 	cjne	a,b,00103$
      000854 08               [12] 1589 	inc	r0
      000855 86 F0            [24] 1590 	mov	b,@r0
      000857 09               [12] 1591 	inc	r1
      000858 E7               [12] 1592 	mov	a,@r1
      000859 B5 F0 0B         [24] 1593 	cjne	a,b,00103$
      00085C 08               [12] 1594 	inc	r0
      00085D 86 F0            [24] 1595 	mov	b,@r0
      00085F 09               [12] 1596 	inc	r1
      000860 E7               [12] 1597 	mov	a,@r1
      000861 B5 F0 03         [24] 1598 	cjne	a,b,00103$
      000864 D3               [12] 1599 	setb	c
      000865 80 01            [24] 1600 	sjmp	00104$
      000867                       1601 00103$:
      000867 C3               [12] 1602 	clr	c
      000868                       1603 00104$:
      000868 92*00            [24] 1604 	mov  b0,c
      00086A B3               [12] 1605 	cpl	c
      00086B E4               [12] 1606 	clr	a
      00086C 33               [12] 1607 	rlc	a
      00086D F5 82            [12] 1608 	mov	dpl,a
      00086F 85*00 81         [24] 1609 	mov	sp,_bp
      000872 D0*00            [24] 1610 	pop	_bp
      000874 22               [24] 1611 	ret
                                   1612 	.area CSEG    (CODE)
                                   1613 	.area CONST   (CODE)
                                   1614 	.area XINIT   (CODE)
                                   1615 	.area CABS    (ABS,CODE)
