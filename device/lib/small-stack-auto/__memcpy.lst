                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __memcpy
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___memcpy
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '__memcpy'
                                     91 ;------------------------------------------------------------
                                     92 ;src                       Allocated to stack - _bp -5
                                     93 ;n                         Allocated to stack - _bp -7
                                     94 ;dst                       Allocated to registers r5 r6 r7 
                                     95 ;ret                       Allocated to stack - _bp +6
                                     96 ;d                         Allocated to registers 
                                     97 ;s                         Allocated to registers 
                                     98 ;sloc0                     Allocated to stack - _bp +1
                                     99 ;sloc1                     Allocated to stack - _bp +4
                                    100 ;------------------------------------------------------------
                                    101 ;	__memcpy.c:31: void *__memcpy (void *dst, const void *src, size_t n)
                                    102 ;	-----------------------------------------
                                    103 ;	 function __memcpy
                                    104 ;	-----------------------------------------
      000000                        105 ___memcpy:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 E5 81            [12]  115 	mov	a,sp
      000004 F5*00            [12]  116 	mov	_bp,a
      000006 24 08            [12]  117 	add	a,#0x08
      000008 F5 81            [12]  118 	mov	sp,a
      00000A AD 82            [24]  119 	mov	r5,dpl
      00000C AE 83            [24]  120 	mov	r6,dph
      00000E AF F0            [24]  121 	mov	r7,b
                                    122 ;	__memcpy.c:33: void *ret = dst;
      000010 E5*00            [12]  123 	mov	a,_bp
      000012 24 06            [12]  124 	add	a,#0x06
      000014 F8               [12]  125 	mov	r0,a
      000015 A6 05            [24]  126 	mov	@r0,ar5
      000017 08               [12]  127 	inc	r0
      000018 A6 06            [24]  128 	mov	@r0,ar6
      00001A 08               [12]  129 	inc	r0
      00001B A6 07            [24]  130 	mov	@r0,ar7
                                    131 ;	__memcpy.c:34: char *d = dst;
                                    132 ;	__memcpy.c:35: const char *s = src;
      00001D E5*00            [12]  133 	mov	a,_bp
      00001F 24 FB            [12]  134 	add	a,#0xfb
      000021 F8               [12]  135 	mov	r0,a
      000022 A9*00            [24]  136 	mov	r1,_bp
      000024 09               [12]  137 	inc	r1
      000025 E6               [12]  138 	mov	a,@r0
      000026 F7               [12]  139 	mov	@r1,a
      000027 08               [12]  140 	inc	r0
      000028 E6               [12]  141 	mov	a,@r0
      000029 09               [12]  142 	inc	r1
      00002A F7               [12]  143 	mov	@r1,a
      00002B 08               [12]  144 	inc	r0
      00002C E6               [12]  145 	mov	a,@r0
      00002D 09               [12]  146 	inc	r1
      00002E F7               [12]  147 	mov	@r1,a
                                    148 ;	__memcpy.c:37: while (n--)
      00002F E5*00            [12]  149 	mov	a,_bp
      000031 24 F9            [12]  150 	add	a,#0xf9
      000033 F8               [12]  151 	mov	r0,a
      000034 E5*00            [12]  152 	mov	a,_bp
      000036 24 04            [12]  153 	add	a,#0x04
      000038 F9               [12]  154 	mov	r1,a
      000039 E6               [12]  155 	mov	a,@r0
      00003A F7               [12]  156 	mov	@r1,a
      00003B 08               [12]  157 	inc	r0
      00003C E6               [12]  158 	mov	a,@r0
      00003D 09               [12]  159 	inc	r1
      00003E F7               [12]  160 	mov	@r1,a
      00003F                        161 00101$:
      00003F E5*00            [12]  162 	mov	a,_bp
      000041 24 04            [12]  163 	add	a,#0x04
      000043 F8               [12]  164 	mov	r0,a
      000044 86 03            [24]  165 	mov	ar3,@r0
      000046 08               [12]  166 	inc	r0
      000047 86 04            [24]  167 	mov	ar4,@r0
      000049 E5*00            [12]  168 	mov	a,_bp
      00004B 24 04            [12]  169 	add	a,#0x04
      00004D F8               [12]  170 	mov	r0,a
      00004E 16               [12]  171 	dec	@r0
      00004F B6 FF 02         [24]  172 	cjne	@r0,#0xff,00115$
      000052 08               [12]  173 	inc	r0
      000053 16               [12]  174 	dec	@r0
      000054                        175 00115$:
      000054 EB               [12]  176 	mov	a,r3
      000055 4C               [12]  177 	orl	a,r4
      000056 60 28            [24]  178 	jz	00103$
                                    179 ;	__memcpy.c:38: *d++ = *s++;
      000058 A8*00            [24]  180 	mov	r0,_bp
      00005A 08               [12]  181 	inc	r0
      00005B 86 82            [24]  182 	mov	dpl,@r0
      00005D 08               [12]  183 	inc	r0
      00005E 86 83            [24]  184 	mov	dph,@r0
      000060 08               [12]  185 	inc	r0
      000061 86 F0            [24]  186 	mov	b,@r0
      000063 12r00r00         [24]  187 	lcall	__gptrget
      000066 FC               [12]  188 	mov	r4,a
      000067 A3               [24]  189 	inc	dptr
      000068 18               [12]  190 	dec	r0
      000069 18               [12]  191 	dec	r0
      00006A A6 82            [24]  192 	mov	@r0,dpl
      00006C 08               [12]  193 	inc	r0
      00006D A6 83            [24]  194 	mov	@r0,dph
      00006F 8D 82            [24]  195 	mov	dpl,r5
      000071 8E 83            [24]  196 	mov	dph,r6
      000073 8F F0            [24]  197 	mov	b,r7
      000075 EC               [12]  198 	mov	a,r4
      000076 12r00r00         [24]  199 	lcall	__gptrput
      000079 A3               [24]  200 	inc	dptr
      00007A AD 82            [24]  201 	mov	r5,dpl
      00007C AE 83            [24]  202 	mov	r6,dph
      00007E 80 BF            [24]  203 	sjmp	00101$
      000080                        204 00103$:
                                    205 ;	__memcpy.c:40: return(ret);
      000080 E5*00            [12]  206 	mov	a,_bp
      000082 24 06            [12]  207 	add	a,#0x06
      000084 F8               [12]  208 	mov	r0,a
      000085 86 82            [24]  209 	mov	dpl,@r0
      000087 08               [12]  210 	inc	r0
      000088 86 83            [24]  211 	mov	dph,@r0
      00008A 08               [12]  212 	inc	r0
      00008B 86 F0            [24]  213 	mov	b,@r0
                                    214 ;	__memcpy.c:41: }
      00008D 85*00 81         [24]  215 	mov	sp,_bp
      000090 D0*00            [24]  216 	pop	_bp
      000092 22               [24]  217 	ret
                                    218 	.area CSEG    (CODE)
                                    219 	.area CONST   (CODE)
                                    220 	.area XINIT   (CODE)
                                    221 	.area CABS    (ABS,CODE)
