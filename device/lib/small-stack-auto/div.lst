                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module div
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _div
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'div'
                                     91 ;------------------------------------------------------------
                                     92 ;numer                     Allocated to stack - _bp -4
                                     93 ;denom                     Allocated to stack - _bp -6
                                     94 ;ret                       Allocated to stack - _bp +1
                                     95 ;------------------------------------------------------------
                                     96 ;	div.c:32: div_t div(int numer, int denom)
                                     97 ;	-----------------------------------------
                                     98 ;	 function div
                                     99 ;	-----------------------------------------
      000000                        100 _div:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 E5 81            [12]  110 	mov	a,sp
      000004 F5*00            [12]  111 	mov	_bp,a
      000006 24 04            [12]  112 	add	a,#0x04
      000008 F5 81            [12]  113 	mov	sp,a
                                    114 ;	div.c:35: ret.quot = numer / denom;
      00000A A9*00            [24]  115 	mov	r1,_bp
      00000C 09               [12]  116 	inc	r1
      00000D C0 01            [24]  117 	push	ar1
      00000F E5*00            [12]  118 	mov	a,_bp
      000011 24 F7            [12]  119 	add	a,#0xf7
      000013 F8               [12]  120 	mov	r0,a
      000014 E6               [12]  121 	mov	a,@r0
      000015 C0 E0            [24]  122 	push	acc
      000017 08               [12]  123 	inc	r0
      000018 E6               [12]  124 	mov	a,@r0
      000019 C0 E0            [24]  125 	push	acc
      00001B E5*00            [12]  126 	mov	a,_bp
      00001D 24 F9            [12]  127 	add	a,#0xf9
      00001F F8               [12]  128 	mov	r0,a
      000020 86 82            [24]  129 	mov	dpl,@r0
      000022 08               [12]  130 	inc	r0
      000023 86 83            [24]  131 	mov	dph,@r0
      000025 12r00r00         [24]  132 	lcall	__divsint
      000028 AE 82            [24]  133 	mov	r6,dpl
      00002A AF 83            [24]  134 	mov	r7,dph
      00002C 15 81            [12]  135 	dec	sp
      00002E 15 81            [12]  136 	dec	sp
      000030 D0 01            [24]  137 	pop	ar1
      000032 A7 06            [24]  138 	mov	@r1,ar6
      000034 09               [12]  139 	inc	r1
      000035 A7 07            [24]  140 	mov	@r1,ar7
                                    141 ;	div.c:36: ret.rem = numer % denom;
      000037 E5*00            [12]  142 	mov	a,_bp
      000039 04               [12]  143 	inc	a
      00003A 24 02            [12]  144 	add	a,#0x02
      00003C F9               [12]  145 	mov	r1,a
      00003D C0 01            [24]  146 	push	ar1
      00003F E5*00            [12]  147 	mov	a,_bp
      000041 24 F7            [12]  148 	add	a,#0xf7
      000043 F8               [12]  149 	mov	r0,a
      000044 E6               [12]  150 	mov	a,@r0
      000045 C0 E0            [24]  151 	push	acc
      000047 08               [12]  152 	inc	r0
      000048 E6               [12]  153 	mov	a,@r0
      000049 C0 E0            [24]  154 	push	acc
      00004B E5*00            [12]  155 	mov	a,_bp
      00004D 24 F9            [12]  156 	add	a,#0xf9
      00004F F8               [12]  157 	mov	r0,a
      000050 86 82            [24]  158 	mov	dpl,@r0
      000052 08               [12]  159 	inc	r0
      000053 86 83            [24]  160 	mov	dph,@r0
      000055 12r00r00         [24]  161 	lcall	__modsint
      000058 AE 82            [24]  162 	mov	r6,dpl
      00005A AF 83            [24]  163 	mov	r7,dph
      00005C 15 81            [12]  164 	dec	sp
      00005E 15 81            [12]  165 	dec	sp
      000060 D0 01            [24]  166 	pop	ar1
      000062 A7 06            [24]  167 	mov	@r1,ar6
      000064 09               [12]  168 	inc	r1
      000065 A7 07            [24]  169 	mov	@r1,ar7
                                    170 ;	div.c:37: return(ret);
      000067 A8*00            [24]  171 	mov	r0,_bp
      000069 08               [12]  172 	inc	r0
      00006A E5 81            [12]  173 	mov	a,sp
      00006C 24 F7            [12]  174 	add	a,#0xf7
      00006E F9               [12]  175 	mov	r1,a
      00006F 87 82            [24]  176 	mov	dpl,@r1
      000071 09               [12]  177 	inc	r1
      000072 87 83            [24]  178 	mov	dph,@r1
      000074 09               [12]  179 	inc	r1
      000075 87 F0            [24]  180 	mov	b,@r1
      000077 E6               [12]  181 	mov	a,@r0
      000078 12r00r00         [24]  182 	lcall	__gptrput
      00007B A3               [24]  183 	inc	dptr
      00007C 08               [12]  184 	inc	r0
      00007D E6               [12]  185 	mov	a,@r0
      00007E 12r00r00         [24]  186 	lcall	__gptrput
      000081 A3               [24]  187 	inc	dptr
      000082 08               [12]  188 	inc	r0
      000083 E6               [12]  189 	mov	a,@r0
      000084 12r00r00         [24]  190 	lcall	__gptrput
      000087 A3               [24]  191 	inc	dptr
      000088 08               [12]  192 	inc	r0
      000089 E6               [12]  193 	mov	a,@r0
      00008A 12r00r00         [24]  194 	lcall	__gptrput
                                    195 ;	div.c:38: }
      00008D 85*00 81         [24]  196 	mov	sp,_bp
      000090 D0*00            [24]  197 	pop	_bp
      000092 22               [24]  198 	ret
                                    199 	.area CSEG    (CODE)
                                    200 	.area CONST   (CODE)
                                    201 	.area XINIT   (CODE)
                                    202 	.area CABS    (ABS,CODE)
