                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divulonglong
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __divulonglong
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_divulonglong'
                                     91 ;------------------------------------------------------------
                                     92 ;y                         Allocated to stack - _bp -10
                                     93 ;x                         Allocated to stack - _bp +1
                                     94 ;reste                     Allocated to stack - _bp +9
                                     95 ;count                     Allocated to registers r7 
                                     96 ;c                         Allocated to registers r6 
                                     97 ;------------------------------------------------------------
                                     98 ;	_divulonglong.c:43: _divulonglong (unsigned long long x, unsigned long long y) __SDCC_NONBANKED
                                     99 ;	-----------------------------------------
                                    100 ;	 function _divulonglong
                                    101 ;	-----------------------------------------
      000000                        102 __divulonglong:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 C0 82            [24]  113 	push	dpl
      000007 C0 83            [24]  114 	push	dph
      000009 C0 F0            [24]  115 	push	b
      00000B C0 E0            [24]  116 	push	acc
      00000D C0 04            [24]  117 	push	ar4
      00000F C0 05            [24]  118 	push	ar5
      000011 C0 06            [24]  119 	push	ar6
      000013 C0 07            [24]  120 	push	ar7
      000015 E5 81            [12]  121 	mov	a,sp
      000017 24 08            [12]  122 	add	a,#0x08
      000019 F5 81            [12]  123 	mov	sp,a
                                    124 ;	_divulonglong.c:45: unsigned long long reste = 0L;
      00001B E5*00            [12]  125 	mov	a,_bp
      00001D 24 09            [12]  126 	add	a,#0x09
      00001F F8               [12]  127 	mov	r0,a
      000020 E4               [12]  128 	clr	a
      000021 F6               [12]  129 	mov	@r0,a
      000022 08               [12]  130 	inc	r0
      000023 F6               [12]  131 	mov	@r0,a
      000024 08               [12]  132 	inc	r0
      000025 F6               [12]  133 	mov	@r0,a
      000026 08               [12]  134 	inc	r0
      000027 F6               [12]  135 	mov	@r0,a
      000028 08               [12]  136 	inc	r0
      000029 F6               [12]  137 	mov	@r0,a
      00002A 08               [12]  138 	inc	r0
      00002B F6               [12]  139 	mov	@r0,a
      00002C 08               [12]  140 	inc	r0
      00002D F6               [12]  141 	mov	@r0,a
      00002E 08               [12]  142 	inc	r0
      00002F F6               [12]  143 	mov	@r0,a
                                    144 ;	_divulonglong.c:49: do
      000030 7F 40            [12]  145 	mov	r7,#0x40
      000032                        146 00105$:
                                    147 ;	_divulonglong.c:52: c = MSB_SET(x);
      000032 A8*00            [24]  148 	mov	r0,_bp
      000034 08               [12]  149 	inc	r0
      000035 08               [12]  150 	inc	r0
      000036 08               [12]  151 	inc	r0
      000037 08               [12]  152 	inc	r0
      000038 08               [12]  153 	inc	r0
      000039 08               [12]  154 	inc	r0
      00003A 08               [12]  155 	inc	r0
      00003B 08               [12]  156 	inc	r0
      00003C E6               [12]  157 	mov	a,@r0
      00003D 23               [12]  158 	rl	a
      00003E 54 01            [12]  159 	anl	a,#0x01
      000040 FE               [12]  160 	mov	r6,a
                                    161 ;	_divulonglong.c:53: x <<= 1;
      000041 A8*00            [24]  162 	mov	r0,_bp
      000043 08               [12]  163 	inc	r0
      000044 E6               [12]  164 	mov	a,@r0
      000045 26               [12]  165 	add	a,@r0
      000046 F6               [12]  166 	mov	@r0,a
      000047 08               [12]  167 	inc	r0
      000048 E6               [12]  168 	mov	a,@r0
      000049 33               [12]  169 	rlc	a
      00004A F6               [12]  170 	mov	@r0,a
      00004B 08               [12]  171 	inc	r0
      00004C E6               [12]  172 	mov	a,@r0
      00004D 33               [12]  173 	rlc	a
      00004E F6               [12]  174 	mov	@r0,a
      00004F 08               [12]  175 	inc	r0
      000050 E6               [12]  176 	mov	a,@r0
      000051 33               [12]  177 	rlc	a
      000052 F6               [12]  178 	mov	@r0,a
      000053 08               [12]  179 	inc	r0
      000054 E6               [12]  180 	mov	a,@r0
      000055 33               [12]  181 	rlc	a
      000056 F6               [12]  182 	mov	@r0,a
      000057 08               [12]  183 	inc	r0
      000058 E6               [12]  184 	mov	a,@r0
      000059 33               [12]  185 	rlc	a
      00005A F6               [12]  186 	mov	@r0,a
      00005B 08               [12]  187 	inc	r0
      00005C E6               [12]  188 	mov	a,@r0
      00005D 33               [12]  189 	rlc	a
      00005E F6               [12]  190 	mov	@r0,a
      00005F 08               [12]  191 	inc	r0
      000060 E6               [12]  192 	mov	a,@r0
      000061 33               [12]  193 	rlc	a
      000062 F6               [12]  194 	mov	@r0,a
                                    195 ;	_divulonglong.c:54: reste <<= 1;
      000063 E5*00            [12]  196 	mov	a,_bp
      000065 24 09            [12]  197 	add	a,#0x09
      000067 F8               [12]  198 	mov	r0,a
      000068 E6               [12]  199 	mov	a,@r0
      000069 26               [12]  200 	add	a,@r0
      00006A F6               [12]  201 	mov	@r0,a
      00006B 08               [12]  202 	inc	r0
      00006C E6               [12]  203 	mov	a,@r0
      00006D 33               [12]  204 	rlc	a
      00006E F6               [12]  205 	mov	@r0,a
      00006F 08               [12]  206 	inc	r0
      000070 E6               [12]  207 	mov	a,@r0
      000071 33               [12]  208 	rlc	a
      000072 F6               [12]  209 	mov	@r0,a
      000073 08               [12]  210 	inc	r0
      000074 E6               [12]  211 	mov	a,@r0
      000075 33               [12]  212 	rlc	a
      000076 F6               [12]  213 	mov	@r0,a
      000077 08               [12]  214 	inc	r0
      000078 E6               [12]  215 	mov	a,@r0
      000079 33               [12]  216 	rlc	a
      00007A F6               [12]  217 	mov	@r0,a
      00007B 08               [12]  218 	inc	r0
      00007C E6               [12]  219 	mov	a,@r0
      00007D 33               [12]  220 	rlc	a
      00007E F6               [12]  221 	mov	@r0,a
      00007F 08               [12]  222 	inc	r0
      000080 E6               [12]  223 	mov	a,@r0
      000081 33               [12]  224 	rlc	a
      000082 F6               [12]  225 	mov	@r0,a
      000083 08               [12]  226 	inc	r0
      000084 E6               [12]  227 	mov	a,@r0
      000085 33               [12]  228 	rlc	a
      000086 F6               [12]  229 	mov	@r0,a
                                    230 ;	_divulonglong.c:55: if (c)
      000087 EE               [12]  231 	mov	a,r6
      000088 60 09            [24]  232 	jz	00102$
                                    233 ;	_divulonglong.c:56: reste |= 1L;
      00008A E5*00            [12]  234 	mov	a,_bp
      00008C 24 09            [12]  235 	add	a,#0x09
      00008E F8               [12]  236 	mov	r0,a
      00008F E6               [12]  237 	mov	a,@r0
      000090 44 01            [12]  238 	orl	a,#0x01
      000092 F6               [12]  239 	mov	@r0,a
      000093                        240 00102$:
                                    241 ;	_divulonglong.c:58: if (reste >= y)
      000093 E5*00            [12]  242 	mov	a,_bp
      000095 24 09            [12]  243 	add	a,#0x09
      000097 F8               [12]  244 	mov	r0,a
      000098 E5*00            [12]  245 	mov	a,_bp
      00009A 24 F6            [12]  246 	add	a,#0xf6
      00009C F9               [12]  247 	mov	r1,a
      00009D C3               [12]  248 	clr	c
      00009E E6               [12]  249 	mov	a,@r0
      00009F 97               [12]  250 	subb	a,@r1
      0000A0 08               [12]  251 	inc	r0
      0000A1 E6               [12]  252 	mov	a,@r0
      0000A2 09               [12]  253 	inc	r1
      0000A3 97               [12]  254 	subb	a,@r1
      0000A4 08               [12]  255 	inc	r0
      0000A5 E6               [12]  256 	mov	a,@r0
      0000A6 09               [12]  257 	inc	r1
      0000A7 97               [12]  258 	subb	a,@r1
      0000A8 08               [12]  259 	inc	r0
      0000A9 E6               [12]  260 	mov	a,@r0
      0000AA 09               [12]  261 	inc	r1
      0000AB 97               [12]  262 	subb	a,@r1
      0000AC 08               [12]  263 	inc	r0
      0000AD E6               [12]  264 	mov	a,@r0
      0000AE 09               [12]  265 	inc	r1
      0000AF 97               [12]  266 	subb	a,@r1
      0000B0 08               [12]  267 	inc	r0
      0000B1 E6               [12]  268 	mov	a,@r0
      0000B2 09               [12]  269 	inc	r1
      0000B3 97               [12]  270 	subb	a,@r1
      0000B4 08               [12]  271 	inc	r0
      0000B5 E6               [12]  272 	mov	a,@r0
      0000B6 09               [12]  273 	inc	r1
      0000B7 97               [12]  274 	subb	a,@r1
      0000B8 08               [12]  275 	inc	r0
      0000B9 E6               [12]  276 	mov	a,@r0
      0000BA 09               [12]  277 	inc	r1
      0000BB 97               [12]  278 	subb	a,@r1
      0000BC 40 38            [24]  279 	jc	00106$
                                    280 ;	_divulonglong.c:60: reste -= y;
      0000BE E5*00            [12]  281 	mov	a,_bp
      0000C0 24 09            [12]  282 	add	a,#0x09
      0000C2 F8               [12]  283 	mov	r0,a
      0000C3 E5*00            [12]  284 	mov	a,_bp
      0000C5 24 F6            [12]  285 	add	a,#0xf6
      0000C7 F9               [12]  286 	mov	r1,a
      0000C8 E6               [12]  287 	mov	a,@r0
      0000C9 C3               [12]  288 	clr	c
      0000CA 97               [12]  289 	subb	a,@r1
      0000CB F6               [12]  290 	mov	@r0,a
      0000CC 08               [12]  291 	inc	r0
      0000CD E6               [12]  292 	mov	a,@r0
      0000CE 09               [12]  293 	inc	r1
      0000CF 97               [12]  294 	subb	a,@r1
      0000D0 F6               [12]  295 	mov	@r0,a
      0000D1 08               [12]  296 	inc	r0
      0000D2 E6               [12]  297 	mov	a,@r0
      0000D3 09               [12]  298 	inc	r1
      0000D4 97               [12]  299 	subb	a,@r1
      0000D5 F6               [12]  300 	mov	@r0,a
      0000D6 08               [12]  301 	inc	r0
      0000D7 E6               [12]  302 	mov	a,@r0
      0000D8 09               [12]  303 	inc	r1
      0000D9 97               [12]  304 	subb	a,@r1
      0000DA F6               [12]  305 	mov	@r0,a
      0000DB 08               [12]  306 	inc	r0
      0000DC E6               [12]  307 	mov	a,@r0
      0000DD 09               [12]  308 	inc	r1
      0000DE 97               [12]  309 	subb	a,@r1
      0000DF F6               [12]  310 	mov	@r0,a
      0000E0 08               [12]  311 	inc	r0
      0000E1 E6               [12]  312 	mov	a,@r0
      0000E2 09               [12]  313 	inc	r1
      0000E3 97               [12]  314 	subb	a,@r1
      0000E4 F6               [12]  315 	mov	@r0,a
      0000E5 08               [12]  316 	inc	r0
      0000E6 E6               [12]  317 	mov	a,@r0
      0000E7 09               [12]  318 	inc	r1
      0000E8 97               [12]  319 	subb	a,@r1
      0000E9 F6               [12]  320 	mov	@r0,a
      0000EA 08               [12]  321 	inc	r0
      0000EB E6               [12]  322 	mov	a,@r0
      0000EC 09               [12]  323 	inc	r1
      0000ED 97               [12]  324 	subb	a,@r1
      0000EE F6               [12]  325 	mov	@r0,a
                                    326 ;	_divulonglong.c:62: x |= 1L;
      0000EF A8*00            [24]  327 	mov	r0,_bp
      0000F1 08               [12]  328 	inc	r0
      0000F2 E6               [12]  329 	mov	a,@r0
      0000F3 44 01            [12]  330 	orl	a,#0x01
      0000F5 F6               [12]  331 	mov	@r0,a
      0000F6                        332 00106$:
                                    333 ;	_divulonglong.c:65: while (--count);
      0000F6 1F               [12]  334 	dec	r7
      0000F7 EF               [12]  335 	mov	a,r7
      0000F8 60 03            [24]  336 	jz	00129$
      0000FA 02r00r32         [24]  337 	ljmp	00105$
      0000FD                        338 00129$:
                                    339 ;	_divulonglong.c:66: return x;
      0000FD A8*00            [24]  340 	mov	r0,_bp
      0000FF 08               [12]  341 	inc	r0
      000100 86 82            [24]  342 	mov	dpl,@r0
      000102 08               [12]  343 	inc	r0
      000103 86 83            [24]  344 	mov	dph,@r0
      000105 08               [12]  345 	inc	r0
      000106 86 F0            [24]  346 	mov	b,@r0
      000108 08               [12]  347 	inc	r0
      000109 E6               [12]  348 	mov	a,@r0
      00010A 08               [12]  349 	inc	r0
      00010B 86 04            [24]  350 	mov	ar4,@r0
      00010D 08               [12]  351 	inc	r0
      00010E 86 05            [24]  352 	mov	ar5,@r0
      000110 08               [12]  353 	inc	r0
      000111 86 06            [24]  354 	mov	ar6,@r0
      000113 08               [12]  355 	inc	r0
      000114 86 07            [24]  356 	mov	ar7,@r0
                                    357 ;	_divulonglong.c:67: }
      000116 85*00 81         [24]  358 	mov	sp,_bp
      000119 D0*00            [24]  359 	pop	_bp
      00011B 22               [24]  360 	ret
                                    361 	.area CSEG    (CODE)
                                    362 	.area CONST   (CODE)
                                    363 	.area XINIT   (CODE)
                                    364 	.area CABS    (ABS,CODE)
