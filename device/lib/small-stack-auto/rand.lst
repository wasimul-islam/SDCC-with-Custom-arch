                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module rand
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rand
                                     12 	.globl _srand
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _s:
      000000                         33 	.ds 4
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;	rand.c:38: static uint32_t s = 0x80000001;
      000000 75*00 01         [24]   84 	mov	_s,#0x01
      000003 E4               [12]   85 	clr	a
      000004 F5*01            [12]   86 	mov	(_s + 1),a
      000006 F5*02            [12]   87 	mov	(_s + 2),a
      000008 75*03 80         [24]   88 	mov	(_s + 3),#0x80
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'rand'
                                    100 ;------------------------------------------------------------
                                    101 ;t                         Allocated to stack - _bp +5
                                    102 ;sloc0                     Allocated to stack - _bp +1
                                    103 ;------------------------------------------------------------
                                    104 ;	rand.c:40: int rand(void)
                                    105 ;	-----------------------------------------
                                    106 ;	 function rand
                                    107 ;	-----------------------------------------
      000000                        108 _rand:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 C0*00            [24]  117 	push	_bp
      000002 E5 81            [12]  118 	mov	a,sp
      000004 F5*00            [12]  119 	mov	_bp,a
      000006 24 08            [12]  120 	add	a,#0x08
      000008 F5 81            [12]  121 	mov	sp,a
                                    122 ;	rand.c:42: register unsigned long t = s;
      00000A A8*00            [24]  123 	mov	r0,_bp
      00000C 08               [12]  124 	inc	r0
      00000D A6*00            [24]  125 	mov	@r0,_s
      00000F 08               [12]  126 	inc	r0
      000010 A6*01            [24]  127 	mov	@r0,(_s + 1)
      000012 08               [12]  128 	inc	r0
      000013 A6*02            [24]  129 	mov	@r0,(_s + 2)
      000015 08               [12]  130 	inc	r0
      000016 A6*03            [24]  131 	mov	@r0,(_s + 3)
                                    132 ;	rand.c:44: t ^= t >> 10;
      000018 A8*00            [24]  133 	mov	r0,_bp
      00001A 08               [12]  134 	inc	r0
      00001B 08               [12]  135 	inc	r0
      00001C 86 02            [24]  136 	mov	ar2,@r0
      00001E 08               [12]  137 	inc	r0
      00001F E6               [12]  138 	mov	a,@r0
      000020 C3               [12]  139 	clr	c
      000021 13               [12]  140 	rrc	a
      000022 CA               [12]  141 	xch	a,r2
      000023 13               [12]  142 	rrc	a
      000024 CA               [12]  143 	xch	a,r2
      000025 C3               [12]  144 	clr	c
      000026 13               [12]  145 	rrc	a
      000027 CA               [12]  146 	xch	a,r2
      000028 13               [12]  147 	rrc	a
      000029 CA               [12]  148 	xch	a,r2
      00002A FB               [12]  149 	mov	r3,a
      00002B 08               [12]  150 	inc	r0
      00002C E6               [12]  151 	mov	a,@r0
      00002D 03               [12]  152 	rr	a
      00002E 03               [12]  153 	rr	a
      00002F 54 C0            [12]  154 	anl	a,#0xc0
      000031 4B               [12]  155 	orl	a,r3
      000032 FB               [12]  156 	mov	r3,a
      000033 E6               [12]  157 	mov	a,@r0
      000034 03               [12]  158 	rr	a
      000035 03               [12]  159 	rr	a
      000036 54 3F            [12]  160 	anl	a,#0x3f
      000038 FE               [12]  161 	mov	r6,a
      000039 7F 00            [12]  162 	mov	r7,#0x00
      00003B A8*00            [24]  163 	mov	r0,_bp
      00003D 08               [12]  164 	inc	r0
      00003E EA               [12]  165 	mov	a,r2
      00003F 66               [12]  166 	xrl	a,@r0
      000040 F6               [12]  167 	mov	@r0,a
      000041 EB               [12]  168 	mov	a,r3
      000042 08               [12]  169 	inc	r0
      000043 66               [12]  170 	xrl	a,@r0
      000044 F6               [12]  171 	mov	@r0,a
      000045 EE               [12]  172 	mov	a,r6
      000046 08               [12]  173 	inc	r0
      000047 66               [12]  174 	xrl	a,@r0
      000048 F6               [12]  175 	mov	@r0,a
      000049 EF               [12]  176 	mov	a,r7
      00004A 08               [12]  177 	inc	r0
      00004B 66               [12]  178 	xrl	a,@r0
      00004C F6               [12]  179 	mov	@r0,a
                                    180 ;	rand.c:45: t ^= t << 9;
      00004D A8*00            [24]  181 	mov	r0,_bp
      00004F 08               [12]  182 	inc	r0
      000050 E6               [12]  183 	mov	a,@r0
      000051 26               [12]  184 	add	a,@r0
      000052 FD               [12]  185 	mov	r5,a
      000053 08               [12]  186 	inc	r0
      000054 E6               [12]  187 	mov	a,@r0
      000055 33               [12]  188 	rlc	a
      000056 FE               [12]  189 	mov	r6,a
      000057 08               [12]  190 	inc	r0
      000058 E6               [12]  191 	mov	a,@r0
      000059 33               [12]  192 	rlc	a
      00005A FF               [12]  193 	mov	r7,a
      00005B 7C 00            [12]  194 	mov	r4,#0x00
      00005D A8*00            [24]  195 	mov	r0,_bp
      00005F 08               [12]  196 	inc	r0
      000060 E6               [12]  197 	mov	a,@r0
      000061 62 04            [12]  198 	xrl	ar4,a
      000063 08               [12]  199 	inc	r0
      000064 E6               [12]  200 	mov	a,@r0
      000065 62 05            [12]  201 	xrl	ar5,a
      000067 08               [12]  202 	inc	r0
      000068 E6               [12]  203 	mov	a,@r0
      000069 62 06            [12]  204 	xrl	ar6,a
      00006B 08               [12]  205 	inc	r0
      00006C E6               [12]  206 	mov	a,@r0
      00006D 62 07            [12]  207 	xrl	ar7,a
      00006F E5*00            [12]  208 	mov	a,_bp
      000071 24 05            [12]  209 	add	a,#0x05
      000073 F8               [12]  210 	mov	r0,a
      000074 A6 04            [24]  211 	mov	@r0,ar4
      000076 08               [12]  212 	inc	r0
      000077 A6 05            [24]  213 	mov	@r0,ar5
      000079 08               [12]  214 	inc	r0
      00007A A6 06            [24]  215 	mov	@r0,ar6
      00007C 08               [12]  216 	inc	r0
      00007D A6 07            [24]  217 	mov	@r0,ar7
                                    218 ;	rand.c:46: t ^= t >> 25;
      00007F E5*00            [12]  219 	mov	a,_bp
      000081 24 05            [12]  220 	add	a,#0x05
      000083 F8               [12]  221 	mov	r0,a
      000084 08               [12]  222 	inc	r0
      000085 08               [12]  223 	inc	r0
      000086 08               [12]  224 	inc	r0
      000087 E6               [12]  225 	mov	a,@r0
      000088 C3               [12]  226 	clr	c
      000089 13               [12]  227 	rrc	a
      00008A FA               [12]  228 	mov	r2,a
      00008B E4               [12]  229 	clr	a
      00008C FB               [12]  230 	mov	r3,a
      00008D FE               [12]  231 	mov	r6,a
      00008E FF               [12]  232 	mov	r7,a
      00008F E5*00            [12]  233 	mov	a,_bp
      000091 24 05            [12]  234 	add	a,#0x05
      000093 F8               [12]  235 	mov	r0,a
      000094 E6               [12]  236 	mov	a,@r0
      000095 62 02            [12]  237 	xrl	ar2,a
      000097 08               [12]  238 	inc	r0
      000098 E6               [12]  239 	mov	a,@r0
      000099 62 03            [12]  240 	xrl	ar3,a
      00009B 08               [12]  241 	inc	r0
      00009C E6               [12]  242 	mov	a,@r0
      00009D 62 06            [12]  243 	xrl	ar6,a
      00009F 08               [12]  244 	inc	r0
      0000A0 E6               [12]  245 	mov	a,@r0
      0000A1 62 07            [12]  246 	xrl	ar7,a
                                    247 ;	rand.c:48: s = t;
      0000A3 8A*00            [24]  248 	mov	_s,r2
      0000A5 8B*01            [24]  249 	mov	(_s + 1),r3
      0000A7 8E*02            [24]  250 	mov	(_s + 2),r6
      0000A9 8F*03            [24]  251 	mov	(_s + 3),r7
                                    252 ;	rand.c:50: return(t & RAND_MAX);
      0000AB 8A 82            [24]  253 	mov	dpl,r2
      0000AD 74 7F            [12]  254 	mov	a,#0x7f
      0000AF 5B               [12]  255 	anl	a,r3
      0000B0 F5 83            [12]  256 	mov	dph,a
                                    257 ;	rand.c:51: }
      0000B2 85*00 81         [24]  258 	mov	sp,_bp
      0000B5 D0*00            [24]  259 	pop	_bp
      0000B7 22               [24]  260 	ret
                                    261 ;------------------------------------------------------------
                                    262 ;Allocation info for local variables in function 'srand'
                                    263 ;------------------------------------------------------------
                                    264 ;seed                      Allocated to registers r6 r7 
                                    265 ;------------------------------------------------------------
                                    266 ;	rand.c:53: void srand(unsigned int seed)
                                    267 ;	-----------------------------------------
                                    268 ;	 function srand
                                    269 ;	-----------------------------------------
      0000B8                        270 _srand:
      0000B8 AE 82            [24]  271 	mov	r6,dpl
      0000BA AF 83            [24]  272 	mov	r7,dph
                                    273 ;	rand.c:55: s = seed | 0x80000000; /* s shall not become 0 */
      0000BC 7D 00            [12]  274 	mov	r5,#0x00
      0000BE 7C 00            [12]  275 	mov	r4,#0x00
      0000C0 8E*00            [24]  276 	mov	_s,r6
      0000C2 8F*01            [24]  277 	mov	(_s + 1),r7
      0000C4 8D*02            [24]  278 	mov	(_s + 2),r5
      0000C6 74 80            [12]  279 	mov	a,#0x80
      0000C8 4C               [12]  280 	orl	a,r4
      0000C9 F5*03            [12]  281 	mov	(_s + 3),a
                                    282 ;	rand.c:56: }
      0000CB 22               [24]  283 	ret
                                    284 	.area CSEG    (CODE)
                                    285 	.area CONST   (CODE)
                                    286 	.area XINIT   (CODE)
                                    287 	.area CABS    (ABS,CODE)
