                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atan2f
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _atanf
                                     13 	.globl _atan2f
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; overlayable bit register bank
                                     31 ;--------------------------------------------------------
                                     32 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         33 bits:
      000000                         34 	.ds 1
                           008000    35 	b0 = bits[0]
                           008100    36 	b1 = bits[1]
                           008200    37 	b2 = bits[2]
                           008300    38 	b3 = bits[3]
                           008400    39 	b4 = bits[4]
                           008500    40 	b5 = bits[5]
                           008600    41 	b6 = bits[6]
                           008700    42 	b7 = bits[7]
                                     43 ;--------------------------------------------------------
                                     44 ; internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DSEG    (DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; overlayable items in internal ram
                                     49 ;--------------------------------------------------------
                                     50 ;--------------------------------------------------------
                                     51 ; indirectly addressable internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area ISEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area IABS    (ABS,DATA)
                                     58 	.area IABS    (ABS,DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; bit data
                                     61 ;--------------------------------------------------------
                                     62 	.area BSEG    (BIT)
                                     63 ;--------------------------------------------------------
                                     64 ; paged external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area PSEG    (PAG,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; uninitialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XSEG    (XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XABS    (ABS,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; initialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XISEG   (XDATA)
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'atan2f'
                                    107 ;------------------------------------------------------------
                                    108 ;y                         Allocated to stack - _bp -6
                                    109 ;x                         Allocated to stack - _bp +1
                                    110 ;r                         Allocated to registers r7 r6 r5 r4 
                                    111 ;sloc0                     Allocated to stack - _bp +5
                                    112 ;------------------------------------------------------------
                                    113 ;	atan2f.c:34: float atan2f(float x, float y)
                                    114 ;	-----------------------------------------
                                    115 ;	 function atan2f
                                    116 ;	-----------------------------------------
      000000                        117 _atan2f:
                           000007   118 	ar7 = 0x07
                           000006   119 	ar6 = 0x06
                           000005   120 	ar5 = 0x05
                           000004   121 	ar4 = 0x04
                           000003   122 	ar3 = 0x03
                           000002   123 	ar2 = 0x02
                           000001   124 	ar1 = 0x01
                           000000   125 	ar0 = 0x00
      000000 C0*00            [24]  126 	push	_bp
      000002 85 81*00         [24]  127 	mov	_bp,sp
      000005 C0 82            [24]  128 	push	dpl
      000007 C0 83            [24]  129 	push	dph
      000009 C0 F0            [24]  130 	push	b
      00000B C0 E0            [24]  131 	push	acc
      00000D E5 81            [12]  132 	mov	a,sp
      00000F 24 04            [12]  133 	add	a,#0x04
      000011 F5 81            [12]  134 	mov	sp,a
                                    135 ;	atan2f.c:38: if ((x==0.0) && (y==0.0))
      000013 A8*00            [24]  136 	mov	r0,_bp
      000015 08               [12]  137 	inc	r0
      000016 86 F0            [24]  138 	mov	b,@r0
      000018 08               [12]  139 	inc	r0
      000019 E6               [12]  140 	mov	a,@r0
      00001A 42 F0            [12]  141 	orl	b,a
      00001C 08               [12]  142 	inc	r0
      00001D E6               [12]  143 	mov	a,@r0
      00001E 42 F0            [12]  144 	orl	b,a
      000020 08               [12]  145 	inc	r0
      000021 E6               [12]  146 	mov	a,@r0
      000022 54 7F            [12]  147 	anl	a,#0x7F
      000024 45 F0            [12]  148 	orl	a,b
      000026 70 25            [24]  149 	jnz	00102$
      000028 E5*00            [12]  150 	mov	a,_bp
      00002A 24 FA            [12]  151 	add	a,#0xfa
      00002C F8               [12]  152 	mov	r0,a
      00002D 86 F0            [24]  153 	mov	b,@r0
      00002F 08               [12]  154 	inc	r0
      000030 E6               [12]  155 	mov	a,@r0
      000031 42 F0            [12]  156 	orl	b,a
      000033 08               [12]  157 	inc	r0
      000034 E6               [12]  158 	mov	a,@r0
      000035 42 F0            [12]  159 	orl	b,a
      000037 08               [12]  160 	inc	r0
      000038 E6               [12]  161 	mov	a,@r0
      000039 54 7F            [12]  162 	anl	a,#0x7F
      00003B 45 F0            [12]  163 	orl	a,b
                                    164 ;	atan2f.c:40: errno=EDOM;
      00003D 70 0E            [24]  165 	jnz	00102$
      00003F 75*00 21         [24]  166 	mov	_errno,#0x21
      000042 F5*01            [12]  167 	mov	(_errno + 1),a
                                    168 ;	atan2f.c:41: return 0.0;
      000044 90 00 00         [24]  169 	mov	dptr,#(0x00&0x00ff)
      000047 E4               [12]  170 	clr	a
      000048 F5 F0            [12]  171 	mov	b,a
      00004A 02r02r7F         [24]  172 	ljmp	00109$
      00004D                        173 00102$:
                                    174 ;	atan2f.c:44: if(fabsf(y)>=fabsf(x))
      00004D E5*00            [12]  175 	mov	a,_bp
      00004F 24 FA            [12]  176 	add	a,#0xfa
      000051 F8               [12]  177 	mov	r0,a
      000052 86 82            [24]  178 	mov	dpl,@r0
      000054 08               [12]  179 	inc	r0
      000055 86 83            [24]  180 	mov	dph,@r0
      000057 08               [12]  181 	inc	r0
      000058 86 F0            [24]  182 	mov	b,@r0
      00005A 08               [12]  183 	inc	r0
      00005B E6               [12]  184 	mov	a,@r0
      00005C 12r00r00         [24]  185 	lcall	_fabsf
      00005F C8               [12]  186 	xch	a,r0
      000060 E5*00            [12]  187 	mov	a,_bp
      000062 24 05            [12]  188 	add	a,#0x05
      000064 C8               [12]  189 	xch	a,r0
      000065 A6 82            [24]  190 	mov	@r0,dpl
      000067 08               [12]  191 	inc	r0
      000068 A6 83            [24]  192 	mov	@r0,dph
      00006A 08               [12]  193 	inc	r0
      00006B A6 F0            [24]  194 	mov	@r0,b
      00006D 08               [12]  195 	inc	r0
      00006E F6               [12]  196 	mov	@r0,a
      00006F A8*00            [24]  197 	mov	r0,_bp
      000071 08               [12]  198 	inc	r0
      000072 86 82            [24]  199 	mov	dpl,@r0
      000074 08               [12]  200 	inc	r0
      000075 86 83            [24]  201 	mov	dph,@r0
      000077 08               [12]  202 	inc	r0
      000078 86 F0            [24]  203 	mov	b,@r0
      00007A 08               [12]  204 	inc	r0
      00007B E6               [12]  205 	mov	a,@r0
      00007C 12r00r00         [24]  206 	lcall	_fabsf
      00007F AC 82            [24]  207 	mov	r4,dpl
      000081 AD 83            [24]  208 	mov	r5,dph
      000083 AE F0            [24]  209 	mov	r6,b
      000085 FF               [12]  210 	mov	r7,a
      000086 C0 04            [24]  211 	push	ar4
      000088 C0 05            [24]  212 	push	ar5
      00008A C0 06            [24]  213 	push	ar6
      00008C C0 07            [24]  214 	push	ar7
      00008E E5*00            [12]  215 	mov	a,_bp
      000090 24 05            [12]  216 	add	a,#0x05
      000092 F8               [12]  217 	mov	r0,a
      000093 86 82            [24]  218 	mov	dpl,@r0
      000095 08               [12]  219 	inc	r0
      000096 86 83            [24]  220 	mov	dph,@r0
      000098 08               [12]  221 	inc	r0
      000099 86 F0            [24]  222 	mov	b,@r0
      00009B 08               [12]  223 	inc	r0
      00009C E6               [12]  224 	mov	a,@r0
      00009D 12r00r00         [24]  225 	lcall	___fslt
      0000A0 E5 81            [12]  226 	mov	a,sp
      0000A2 24 FC            [12]  227 	add	a,#0xfc
      0000A4 F5 81            [12]  228 	mov	sp,a
      0000A6 E5 82            [12]  229 	mov	a,dpl
      0000A8 24 FF            [12]  230 	add	a,#0xff
      0000AA 92*00            [24]  231 	mov	b0,c
      0000AC 50 03            [24]  232 	jnc	00147$
      0000AE 02r01rB3         [24]  233 	ljmp	00107$
      0000B1                        234 00147$:
                                    235 ;	atan2f.c:46: r=atanf(x/y);
      0000B1 E5*00            [12]  236 	mov	a,_bp
      0000B3 24 FA            [12]  237 	add	a,#0xfa
      0000B5 F8               [12]  238 	mov	r0,a
      0000B6 E6               [12]  239 	mov	a,@r0
      0000B7 C0 E0            [24]  240 	push	acc
      0000B9 08               [12]  241 	inc	r0
      0000BA E6               [12]  242 	mov	a,@r0
      0000BB C0 E0            [24]  243 	push	acc
      0000BD 08               [12]  244 	inc	r0
      0000BE E6               [12]  245 	mov	a,@r0
      0000BF C0 E0            [24]  246 	push	acc
      0000C1 08               [12]  247 	inc	r0
      0000C2 E6               [12]  248 	mov	a,@r0
      0000C3 C0 E0            [24]  249 	push	acc
      0000C5 A8*00            [24]  250 	mov	r0,_bp
      0000C7 08               [12]  251 	inc	r0
      0000C8 86 82            [24]  252 	mov	dpl,@r0
      0000CA 08               [12]  253 	inc	r0
      0000CB 86 83            [24]  254 	mov	dph,@r0
      0000CD 08               [12]  255 	inc	r0
      0000CE 86 F0            [24]  256 	mov	b,@r0
      0000D0 08               [12]  257 	inc	r0
      0000D1 E6               [12]  258 	mov	a,@r0
      0000D2 12r00r00         [24]  259 	lcall	___fsdiv
      0000D5 AC 82            [24]  260 	mov	r4,dpl
      0000D7 AD 83            [24]  261 	mov	r5,dph
      0000D9 AE F0            [24]  262 	mov	r6,b
      0000DB FF               [12]  263 	mov	r7,a
      0000DC E5 81            [12]  264 	mov	a,sp
      0000DE 24 FC            [12]  265 	add	a,#0xfc
      0000E0 F5 81            [12]  266 	mov	sp,a
      0000E2 8C 82            [24]  267 	mov	dpl,r4
      0000E4 8D 83            [24]  268 	mov	dph,r5
      0000E6 8E F0            [24]  269 	mov	b,r6
      0000E8 EF               [12]  270 	mov	a,r7
      0000E9 12r00r00         [24]  271 	lcall	_atanf
      0000EC AC 82            [24]  272 	mov	r4,dpl
      0000EE AD 83            [24]  273 	mov	r5,dph
      0000F0 AE F0            [24]  274 	mov	r6,b
      0000F2 FF               [12]  275 	mov	r7,a
                                    276 ;	atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
      0000F3 C0 07            [24]  277 	push	ar7
      0000F5 C0 06            [24]  278 	push	ar6
      0000F7 C0 05            [24]  279 	push	ar5
      0000F9 C0 04            [24]  280 	push	ar4
      0000FB E4               [12]  281 	clr	a
      0000FC C0 E0            [24]  282 	push	acc
      0000FE C0 E0            [24]  283 	push	acc
      000100 C0 E0            [24]  284 	push	acc
      000102 C0 E0            [24]  285 	push	acc
      000104 E5*00            [12]  286 	mov	a,_bp
      000106 24 FA            [12]  287 	add	a,#0xfa
      000108 F8               [12]  288 	mov	r0,a
      000109 86 82            [24]  289 	mov	dpl,@r0
      00010B 08               [12]  290 	inc	r0
      00010C 86 83            [24]  291 	mov	dph,@r0
      00010E 08               [12]  292 	inc	r0
      00010F 86 F0            [24]  293 	mov	b,@r0
      000111 08               [12]  294 	inc	r0
      000112 E6               [12]  295 	mov	a,@r0
      000113 12r00r00         [24]  296 	lcall	___fslt
      000116 AB 82            [24]  297 	mov	r3,dpl
      000118 E5 81            [12]  298 	mov	a,sp
      00011A 24 FC            [12]  299 	add	a,#0xfc
      00011C F5 81            [12]  300 	mov	sp,a
      00011E D0 04            [24]  301 	pop	ar4
      000120 D0 05            [24]  302 	pop	ar5
      000122 D0 06            [24]  303 	pop	ar6
      000124 D0 07            [24]  304 	pop	ar7
      000126 EB               [12]  305 	mov	a,r3
      000127 70 03            [24]  306 	jnz	00148$
      000129 02r02r78         [24]  307 	ljmp	00108$
      00012C                        308 00148$:
      00012C C0 07            [24]  309 	push	ar7
      00012E C0 06            [24]  310 	push	ar6
      000130 C0 05            [24]  311 	push	ar5
      000132 C0 04            [24]  312 	push	ar4
      000134 E4               [12]  313 	clr	a
      000135 C0 E0            [24]  314 	push	acc
      000137 C0 E0            [24]  315 	push	acc
      000139 C0 E0            [24]  316 	push	acc
      00013B C0 E0            [24]  317 	push	acc
      00013D A8*00            [24]  318 	mov	r0,_bp
      00013F 08               [12]  319 	inc	r0
      000140 86 82            [24]  320 	mov	dpl,@r0
      000142 08               [12]  321 	inc	r0
      000143 86 83            [24]  322 	mov	dph,@r0
      000145 08               [12]  323 	inc	r0
      000146 86 F0            [24]  324 	mov	b,@r0
      000148 08               [12]  325 	inc	r0
      000149 E6               [12]  326 	mov	a,@r0
      00014A 12r00r00         [24]  327 	lcall	___fslt
      00014D E5 81            [12]  328 	mov	a,sp
      00014F 24 FC            [12]  329 	add	a,#0xfc
      000151 F5 81            [12]  330 	mov	sp,a
      000153 D0 04            [24]  331 	pop	ar4
      000155 D0 05            [24]  332 	pop	ar5
      000157 D0 06            [24]  333 	pop	ar6
      000159 D0 07            [24]  334 	pop	ar7
      00015B E5 82            [12]  335 	mov	a,dpl
      00015D 24 FF            [12]  336 	add	a,#0xff
      00015F 92*00            [24]  337 	mov	b0,c
      000161 40 12            [24]  338 	jc	00111$
      000163 E5*00            [12]  339 	mov	a,_bp
      000165 24 05            [12]  340 	add	a,#0x05
      000167 F8               [12]  341 	mov	r0,a
      000168 76 DB            [12]  342 	mov	@r0,#0xdb
      00016A 08               [12]  343 	inc	r0
      00016B 76 0F            [12]  344 	mov	@r0,#0x0f
      00016D 08               [12]  345 	inc	r0
      00016E 76 49            [12]  346 	mov	@r0,#0x49
      000170 08               [12]  347 	inc	r0
      000171 76 40            [12]  348 	mov	@r0,#0x40
      000173 80 10            [24]  349 	sjmp	00112$
      000175                        350 00111$:
      000175 E5*00            [12]  351 	mov	a,_bp
      000177 24 05            [12]  352 	add	a,#0x05
      000179 F8               [12]  353 	mov	r0,a
      00017A 76 DB            [12]  354 	mov	@r0,#0xdb
      00017C 08               [12]  355 	inc	r0
      00017D 76 0F            [12]  356 	mov	@r0,#0x0f
      00017F 08               [12]  357 	inc	r0
      000180 76 49            [12]  358 	mov	@r0,#0x49
      000182 08               [12]  359 	inc	r0
      000183 76 C0            [12]  360 	mov	@r0,#0xc0
      000185                        361 00112$:
      000185 E5*00            [12]  362 	mov	a,_bp
      000187 24 05            [12]  363 	add	a,#0x05
      000189 F8               [12]  364 	mov	r0,a
      00018A E6               [12]  365 	mov	a,@r0
      00018B C0 E0            [24]  366 	push	acc
      00018D 08               [12]  367 	inc	r0
      00018E E6               [12]  368 	mov	a,@r0
      00018F C0 E0            [24]  369 	push	acc
      000191 08               [12]  370 	inc	r0
      000192 E6               [12]  371 	mov	a,@r0
      000193 C0 E0            [24]  372 	push	acc
      000195 08               [12]  373 	inc	r0
      000196 E6               [12]  374 	mov	a,@r0
      000197 C0 E0            [24]  375 	push	acc
      000199 8C 82            [24]  376 	mov	dpl,r4
      00019B 8D 83            [24]  377 	mov	dph,r5
      00019D 8E F0            [24]  378 	mov	b,r6
      00019F EF               [12]  379 	mov	a,r7
      0001A0 12r00r00         [24]  380 	lcall	___fsadd
      0001A3 AC 82            [24]  381 	mov	r4,dpl
      0001A5 AD 83            [24]  382 	mov	r5,dph
      0001A7 AE F0            [24]  383 	mov	r6,b
      0001A9 FF               [12]  384 	mov	r7,a
      0001AA E5 81            [12]  385 	mov	a,sp
      0001AC 24 FC            [12]  386 	add	a,#0xfc
      0001AE F5 81            [12]  387 	mov	sp,a
      0001B0 02r02r78         [24]  388 	ljmp	00108$
      0001B3                        389 00107$:
                                    390 ;	atan2f.c:51: r=-atanf(y/x);
      0001B3 A8*00            [24]  391 	mov	r0,_bp
      0001B5 08               [12]  392 	inc	r0
      0001B6 E6               [12]  393 	mov	a,@r0
      0001B7 C0 E0            [24]  394 	push	acc
      0001B9 08               [12]  395 	inc	r0
      0001BA E6               [12]  396 	mov	a,@r0
      0001BB C0 E0            [24]  397 	push	acc
      0001BD 08               [12]  398 	inc	r0
      0001BE E6               [12]  399 	mov	a,@r0
      0001BF C0 E0            [24]  400 	push	acc
      0001C1 08               [12]  401 	inc	r0
      0001C2 E6               [12]  402 	mov	a,@r0
      0001C3 C0 E0            [24]  403 	push	acc
      0001C5 E5*00            [12]  404 	mov	a,_bp
      0001C7 24 FA            [12]  405 	add	a,#0xfa
      0001C9 F8               [12]  406 	mov	r0,a
      0001CA 86 82            [24]  407 	mov	dpl,@r0
      0001CC 08               [12]  408 	inc	r0
      0001CD 86 83            [24]  409 	mov	dph,@r0
      0001CF 08               [12]  410 	inc	r0
      0001D0 86 F0            [24]  411 	mov	b,@r0
      0001D2 08               [12]  412 	inc	r0
      0001D3 E6               [12]  413 	mov	a,@r0
      0001D4 12r00r00         [24]  414 	lcall	___fsdiv
      0001D7 AF 82            [24]  415 	mov	r7,dpl
      0001D9 AE 83            [24]  416 	mov	r6,dph
      0001DB AD F0            [24]  417 	mov	r5,b
      0001DD FC               [12]  418 	mov	r4,a
      0001DE E5 81            [12]  419 	mov	a,sp
      0001E0 24 FC            [12]  420 	add	a,#0xfc
      0001E2 F5 81            [12]  421 	mov	sp,a
      0001E4 8F 82            [24]  422 	mov	dpl,r7
      0001E6 8E 83            [24]  423 	mov	dph,r6
      0001E8 8D F0            [24]  424 	mov	b,r5
      0001EA EC               [12]  425 	mov	a,r4
      0001EB 12r00r00         [24]  426 	lcall	_atanf
      0001EE AF 82            [24]  427 	mov	r7,dpl
      0001F0 AE 83            [24]  428 	mov	r6,dph
      0001F2 AD F0            [24]  429 	mov	r5,b
      0001F4 B2 E7            [12]  430 	cpl	acc.7
      0001F6 FC               [12]  431 	mov	r4,a
                                    432 ;	atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0001F7 C0 07            [24]  433 	push	ar7
      0001F9 C0 06            [24]  434 	push	ar6
      0001FB C0 05            [24]  435 	push	ar5
      0001FD C0 04            [24]  436 	push	ar4
      0001FF E4               [12]  437 	clr	a
      000200 C0 E0            [24]  438 	push	acc
      000202 C0 E0            [24]  439 	push	acc
      000204 C0 E0            [24]  440 	push	acc
      000206 C0 E0            [24]  441 	push	acc
      000208 A8*00            [24]  442 	mov	r0,_bp
      00020A 08               [12]  443 	inc	r0
      00020B 86 82            [24]  444 	mov	dpl,@r0
      00020D 08               [12]  445 	inc	r0
      00020E 86 83            [24]  446 	mov	dph,@r0
      000210 08               [12]  447 	inc	r0
      000211 86 F0            [24]  448 	mov	b,@r0
      000213 08               [12]  449 	inc	r0
      000214 E6               [12]  450 	mov	a,@r0
      000215 12r00r00         [24]  451 	lcall	___fslt
      000218 AB 82            [24]  452 	mov	r3,dpl
      00021A E5 81            [12]  453 	mov	a,sp
      00021C 24 FC            [12]  454 	add	a,#0xfc
      00021E F5 81            [12]  455 	mov	sp,a
      000220 D0 04            [24]  456 	pop	ar4
      000222 D0 05            [24]  457 	pop	ar5
      000224 D0 06            [24]  458 	pop	ar6
      000226 D0 07            [24]  459 	pop	ar7
      000228 EB               [12]  460 	mov	a,r3
      000229 60 12            [24]  461 	jz	00113$
      00022B E5*00            [12]  462 	mov	a,_bp
      00022D 24 05            [12]  463 	add	a,#0x05
      00022F F8               [12]  464 	mov	r0,a
      000230 76 DB            [12]  465 	mov	@r0,#0xdb
      000232 08               [12]  466 	inc	r0
      000233 76 0F            [12]  467 	mov	@r0,#0x0f
      000235 08               [12]  468 	inc	r0
      000236 76 C9            [12]  469 	mov	@r0,#0xc9
      000238 08               [12]  470 	inc	r0
      000239 76 BF            [12]  471 	mov	@r0,#0xbf
      00023B 80 10            [24]  472 	sjmp	00114$
      00023D                        473 00113$:
      00023D E5*00            [12]  474 	mov	a,_bp
      00023F 24 05            [12]  475 	add	a,#0x05
      000241 F8               [12]  476 	mov	r0,a
      000242 76 DB            [12]  477 	mov	@r0,#0xdb
      000244 08               [12]  478 	inc	r0
      000245 76 0F            [12]  479 	mov	@r0,#0x0f
      000247 08               [12]  480 	inc	r0
      000248 76 C9            [12]  481 	mov	@r0,#0xc9
      00024A 08               [12]  482 	inc	r0
      00024B 76 3F            [12]  483 	mov	@r0,#0x3f
      00024D                        484 00114$:
      00024D E5*00            [12]  485 	mov	a,_bp
      00024F 24 05            [12]  486 	add	a,#0x05
      000251 F8               [12]  487 	mov	r0,a
      000252 E6               [12]  488 	mov	a,@r0
      000253 C0 E0            [24]  489 	push	acc
      000255 08               [12]  490 	inc	r0
      000256 E6               [12]  491 	mov	a,@r0
      000257 C0 E0            [24]  492 	push	acc
      000259 08               [12]  493 	inc	r0
      00025A E6               [12]  494 	mov	a,@r0
      00025B C0 E0            [24]  495 	push	acc
      00025D 08               [12]  496 	inc	r0
      00025E E6               [12]  497 	mov	a,@r0
      00025F C0 E0            [24]  498 	push	acc
      000261 8F 82            [24]  499 	mov	dpl,r7
      000263 8E 83            [24]  500 	mov	dph,r6
      000265 8D F0            [24]  501 	mov	b,r5
      000267 EC               [12]  502 	mov	a,r4
      000268 12r00r00         [24]  503 	lcall	___fsadd
      00026B AC 82            [24]  504 	mov	r4,dpl
      00026D AD 83            [24]  505 	mov	r5,dph
      00026F AE F0            [24]  506 	mov	r6,b
      000271 FF               [12]  507 	mov	r7,a
      000272 E5 81            [12]  508 	mov	a,sp
      000274 24 FC            [12]  509 	add	a,#0xfc
      000276 F5 81            [12]  510 	mov	sp,a
      000278                        511 00108$:
                                    512 ;	atan2f.c:54: return r;
      000278 8C 82            [24]  513 	mov	dpl,r4
      00027A 8D 83            [24]  514 	mov	dph,r5
      00027C 8E F0            [24]  515 	mov	b,r6
      00027E EF               [12]  516 	mov	a,r7
      00027F                        517 00109$:
                                    518 ;	atan2f.c:55: }
      00027F 85*00 81         [24]  519 	mov	sp,_bp
      000282 D0*00            [24]  520 	pop	_bp
      000284 22               [24]  521 	ret
                                    522 	.area CSEG    (CODE)
                                    523 	.area CONST   (CODE)
                                    524 	.area XINIT   (CODE)
                                    525 	.area CABS    (ABS,CODE)
