                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strchr
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'strchr'
                                     91 ;------------------------------------------------------------
                                     92 ;ch                        Allocated to stack - _bp -3
                                     93 ;string                    Allocated to registers 
                                     94 ;------------------------------------------------------------
                                     95 ;	_strchr.c:34: char * strchr ( const char * string, char ch )
                                     96 ;	-----------------------------------------
                                     97 ;	 function strchr
                                     98 ;	-----------------------------------------
      000000                         99 _strchr:
                           000007   100 	ar7 = 0x07
                           000006   101 	ar6 = 0x06
                           000005   102 	ar5 = 0x05
                           000004   103 	ar4 = 0x04
                           000003   104 	ar3 = 0x03
                           000002   105 	ar2 = 0x02
                           000001   106 	ar1 = 0x01
                           000000   107 	ar0 = 0x00
      000000 C0*00            [24]  108 	push	_bp
      000002 85 81*00         [24]  109 	mov	_bp,sp
      000005 AD 82            [24]  110 	mov	r5,dpl
      000007 AE 83            [24]  111 	mov	r6,dph
      000009 AF F0            [24]  112 	mov	r7,b
                                    113 ;	_strchr.c:39: while (*string && *string != (char)ch)
      00000B                        114 00102$:
      00000B 8D 82            [24]  115 	mov	dpl,r5
      00000D 8E 83            [24]  116 	mov	dph,r6
      00000F 8F F0            [24]  117 	mov	b,r7
      000011 12r00r00         [24]  118 	lcall	__gptrget
      000014 FC               [12]  119 	mov	r4,a
      000015 60 12            [24]  120 	jz	00104$
      000017 E5*00            [12]  121 	mov	a,_bp
      000019 24 FD            [12]  122 	add	a,#0xfd
      00001B F8               [12]  123 	mov	r0,a
      00001C E6               [12]  124 	mov	a,@r0
      00001D B5 04 02         [24]  125 	cjne	a,ar4,00127$
      000020 80 07            [24]  126 	sjmp	00104$
      000022                        127 00127$:
                                    128 ;	_strchr.c:40: string++;
      000022 0D               [12]  129 	inc	r5
      000023 BD 00 E5         [24]  130 	cjne	r5,#0x00,00102$
      000026 0E               [12]  131 	inc	r6
      000027 80 E2            [24]  132 	sjmp	00102$
      000029                        133 00104$:
                                    134 ;	_strchr.c:42: if (*string == (char)ch)
      000029 8D 82            [24]  135 	mov	dpl,r5
      00002B 8E 83            [24]  136 	mov	dph,r6
      00002D 8F F0            [24]  137 	mov	b,r7
      00002F 12r00r00         [24]  138 	lcall	__gptrget
      000032 FC               [12]  139 	mov	r4,a
      000033 E5*00            [12]  140 	mov	a,_bp
      000035 24 FD            [12]  141 	add	a,#0xfd
      000037 F8               [12]  142 	mov	r0,a
      000038 E6               [12]  143 	mov	a,@r0
      000039 B5 04 08         [24]  144 	cjne	a,ar4,00106$
                                    145 ;	_strchr.c:43: return((char *)string);
      00003C 8D 82            [24]  146 	mov	dpl,r5
      00003E 8E 83            [24]  147 	mov	dph,r6
      000040 8F F0            [24]  148 	mov	b,r7
      000042 80 06            [24]  149 	sjmp	00107$
      000044                        150 00106$:
                                    151 ;	_strchr.c:44: return ( NULL );
      000044 90 00 00         [24]  152 	mov	dptr,#0x0000
      000047 75 F0 00         [24]  153 	mov	b,#0x00
      00004A                        154 00107$:
                                    155 ;	_strchr.c:45: }
      00004A D0*00            [24]  156 	pop	_bp
      00004C 22               [24]  157 	ret
                                    158 	.area CSEG    (CODE)
                                    159 	.area CONST   (CODE)
                                    160 	.area XINIT   (CODE)
                                    161 	.area CABS    (ABS,CODE)
