                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _setjmp
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 ;--------------------------------------------------------
                                     12 ; special function registers
                                     13 ;--------------------------------------------------------
                                     14 	.area RSEG    (ABS,DATA)
      000000                         15 	.org 0x0000
                                     16 ;--------------------------------------------------------
                                     17 ; special function bits
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; overlayable register banks
                                     23 ;--------------------------------------------------------
                                     24 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         25 	.ds 8
                                     26 ;--------------------------------------------------------
                                     27 ; internal ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area DSEG    (DATA)
                                     30 ;--------------------------------------------------------
                                     31 ; overlayable items in internal ram
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; indirectly addressable internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area ISEG    (DATA)
                                     37 ;--------------------------------------------------------
                                     38 ; absolute internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area IABS    (ABS,DATA)
                                     41 	.area IABS    (ABS,DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; bit data
                                     44 ;--------------------------------------------------------
                                     45 	.area BSEG    (BIT)
                                     46 ;--------------------------------------------------------
                                     47 ; paged external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area PSEG    (PAG,XDATA)
                                     50 ;--------------------------------------------------------
                                     51 ; uninitialized external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area XSEG    (XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XABS    (ABS,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; initialized external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XISEG   (XDATA)
                                     62 	.area HOME    (CODE)
                                     63 	.area GSINIT0 (CODE)
                                     64 	.area GSINIT1 (CODE)
                                     65 	.area GSINIT2 (CODE)
                                     66 	.area GSINIT3 (CODE)
                                     67 	.area GSINIT4 (CODE)
                                     68 	.area GSINIT5 (CODE)
                                     69 	.area GSINIT  (CODE)
                                     70 	.area GSFINAL (CODE)
                                     71 	.area CSEG    (CODE)
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area HOME    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; code
                                     86 ;--------------------------------------------------------
                                     87 	.area CSEG    (CODE)
                                     88 ;------------------------------------------------------------
                                     89 ;Allocation info for local variables in function 'dummy'
                                     90 ;------------------------------------------------------------
                                     91 ;	_setjmp.c:267: static void dummy (void) __naked
                                     92 ;	-----------------------------------------
                                     93 ;	 function dummy
                                     94 ;	-----------------------------------------
      000000                         95 _dummy:
                                     96 ;	naked function: no prologue.
                                     97 ;	_setjmp.c:438: __endasm;
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation	info for local variables in function 'setjmp'
                                    100 ;------------------------------------------------------------
                                    101 ;buf	Allocated to registers dptr b
                                    102 ;------------------------------------------------------------
                                    103 ;../../device/lib/_setjmp.c:122:int	__setjmp(unsigned char *buf)
                                    104 ;	-----------------------------------------
                                    105 ;	function setjmp
                                    106 ;	-----------------------------------------
                                    107 	.globl	___setjmp
      000000                        108 ___setjmp:
                           000002   109 	ar2	= 0x02
                           000003   110 	ar3	= 0x03
                           000004   111 	ar4	= 0x04
                           000005   112 	ar5	= 0x05
                           000006   113 	ar6	= 0x06
                           000007   114 	ar7	= 0x07
                           000000   115 	ar0	= 0x00
                           000001   116 	ar1	= 0x01
                                    117 ;	genReceive
                                    118 ;../../device/lib/_setjmp.c:125:*buf	= BP;
                                    119 ;	genPointerSet
                                    120 ;	genGenPointerSet
      000000 E5*00            [12]  121 	mov	a,_bp
      000002 12r00r00         [24]  122 	lcall	__gptrput
      000005 A3               [24]  123 	inc	dptr
                                    124 ;../../device/lib/_setjmp.c:126:*buf	= SP;
                                    125 ;	genPointerSet
                                    126 ;	genGenPointerSet
      000006 E5 81            [12]  127 	mov	a,sp
      000008 12r00r00         [24]  128 	lcall	__gptrput
      00000B A3               [24]  129 	inc	dptr
                                    130 ;../../device/lib/_setjmp.c:127:*buf++	= *((unsigned char __data *) SP );
                                    131 ;	genCast
      00000C A8 81            [24]  132 	mov	r0,sp
                                    133 ;	genPointerGet
                                    134 ;	genNearPointerGet
      00000E E6               [12]  135 	mov	a,@r0
                                    136 ;	genPointerSet
                                    137 ;	genGenPointerSet
      00000F 12r00r00         [24]  138 	lcall	__gptrput
      000012 A3               [24]  139 	inc	dptr
                                    140 ;../../device/lib/_setjmp.c:128:*buf++	= *((unsigned char __data *)SP - 1);
                                    141 ;	genCast
                                    142 ;	genMinus
                                    143 ;	genMinusDec
      000013 18               [12]  144 	dec	r0
                                    145 ;	genPointerGet
                                    146 ;	genNearPointerGet
      000014 E6               [12]  147 	mov	a,@r0
                                    148 ;	genPointerSet
                                    149 ;	genGenPointerSet
      000015 12r00r00         [24]  150 	lcall	__gptrput
                                    151 ;../../device/lib/_setjmp.c:130:return	0;
                                    152 ;	genRet
      000018 90 00 00         [24]  153 	mov	dptr,#0x0000
      00001B 22               [24]  154 	ret
                                    155 ;------------------------------------------------------------
                                    156 ;Allocation	info for local variables in function 'longjmp'
                                    157 ;------------------------------------------------------------
                                    158 ;rv	Allocated to stack - offset -3
                                    159 ;buf	Allocated to registers dptr b
                                    160 ;lsp	Allocated to registers r5
                                    161 ;------------------------------------------------------------
                                    162 ;../../device/lib/_setjmp.c:28:int	longjmp (jmp_buf buf, int rv)
                                    163 ;	-----------------------------------------
                                    164 ;	function longjmp
                                    165 ;	-----------------------------------------
                                    166 	.globl	_longjmp
      00001C                        167 _longjmp:
                           000002   168 	ar2	= 0x02
                           000003   169 	ar3	= 0x03
                           000004   170 	ar4	= 0x04
                           000005   171 	ar5	= 0x05
                           000006   172 	ar6	= 0x06
                           000007   173 	ar7	= 0x07
                           000000   174 	ar0	= 0x00
                           000001   175 	ar1	= 0x01
                                    176 ;	genReceive
      00001C A8 81            [24]  177 	mov	r0,sp
      00001E 18               [12]  178 	dec	r0
      00001F 18               [12]  179 	dec	r0
      000020 86 02            [24]  180 	mov	ar2,@r0
      000022 18               [12]  181 	dec	r0
      000023 86 03            [24]  182 	mov	ar3,@r0
                                    183 ;../../device/lib/_setjmp.c:30:bp	= *buf++;
                                    184 ;	genPointerGet
                                    185 ;	genGenPointerGet
      000025 12r00r00         [24]  186 	lcall	__gptrget
      000028 A3               [24]  187 	inc	dptr
                                    188 ;	genAssign
      000029 F5*00            [12]  189 	mov	_bp,a
                                    190 ;../../device/lib/_setjmp.c:31:lsp	= *buf++;
                                    191 ;	genPointerGet
                                    192 ;	genGenPointerGet
      00002B 12r00r00         [24]  193 	lcall	__gptrget
      00002E A3               [24]  194 	inc	dptr
                                    195 ;	genAssign
      00002F FD               [12]  196 	mov	r5,a
                                    197 ;../../device/lib/_setjmp.c:32:*((unsigned	char __data *) lsp) = *buf++;
                                    198 ;	genCast
      000030 F8               [12]  199 	mov	r0,a
                                    200 ;	genPointerGet
                                    201 ;	genGenPointerGet
      000031 12r00r00         [24]  202 	lcall	__gptrget
      000034 A3               [24]  203 	inc	dptr
                                    204 ;	genPointerSet
                                    205 ;	genNearPointerSet
      000035 F6               [12]  206 	mov	@r0,a
                                    207 ;../../device/lib/_setjmp.c:33:*((unsigned	char __data *) lsp - 1) = *buf;
                                    208 ;	genCast
                                    209 ;	genMinus
                                    210 ;	genMinusDec
      000036 18               [12]  211 	dec	r0
                                    212 ;	genPointerGet
                                    213 ;	genGenPointerGet
      000037 12r00r00         [24]  214 	lcall	__gptrget
                                    215 ;	genPointerSet
                                    216 ;	genNearPointerSet
      00003A F6               [12]  217 	mov	@r0,a
                                    218 ;../../device/lib/_setjmp.c:35:SP	= lsp;
                                    219 ;	genAssign
      00003B 8D 81            [24]  220 	mov	sp,r5
                                    221 ;../../device/lib/_setjmp.c:36:return	rv ? rv : 1;
                                    222 ;	genAssign
      00003D 8A 83            [24]  223 	mov	dph,r2
      00003F 8B 82            [24]  224 	mov	dpl,r3
      000041 EA               [12]  225 	mov	a,r2
      000042 4B               [12]  226 	orl	a,r3
      000043 70 01            [24]  227 	jnz	00001$
      000045 A3               [24]  228 	inc	dptr
                                    229 ;	genRet
      000046                        230 00001$:
      000046 22               [24]  231 	ret
                                    232 ;	_setjmp.c:439: }
                                    233 ;	naked function: no epilogue.
                                    234 	.area CSEG    (CODE)
                                    235 	.area CONST   (CODE)
                                    236 	.area XINIT   (CODE)
                                    237 	.area CABS    (ABS,CODE)
