                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcslen
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wcslen
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'wcslen'
                                     91 ;------------------------------------------------------------
                                     92 ;s                         Allocated to registers 
                                     93 ;n                         Allocated to registers r4 r3 
                                     94 ;sloc0                     Allocated to stack - _bp +1
                                     95 ;------------------------------------------------------------
                                     96 ;	wcslen.c:31: size_t wcslen(const wchar_t *s)
                                     97 ;	-----------------------------------------
                                     98 ;	 function wcslen
                                     99 ;	-----------------------------------------
      000000                        100 _wcslen:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 E5 81            [12]  110 	mov	a,sp
      000004 F5*00            [12]  111 	mov	_bp,a
      000006 24 04            [12]  112 	add	a,#0x04
      000008 F5 81            [12]  113 	mov	sp,a
      00000A AD 82            [24]  114 	mov	r5,dpl
      00000C AE 83            [24]  115 	mov	r6,dph
      00000E AF F0            [24]  116 	mov	r7,b
                                    117 ;	wcslen.c:34: while (*s)
      000010 7C 00            [12]  118 	mov	r4,#0x00
      000012 7B 00            [12]  119 	mov	r3,#0x00
      000014                        120 00101$:
      000014 8D 82            [24]  121 	mov	dpl,r5
      000016 8E 83            [24]  122 	mov	dph,r6
      000018 8F F0            [24]  123 	mov	b,r7
      00001A A8*00            [24]  124 	mov	r0,_bp
      00001C 08               [12]  125 	inc	r0
      00001D 12r00r00         [24]  126 	lcall	__gptrget
      000020 F6               [12]  127 	mov	@r0,a
      000021 A3               [24]  128 	inc	dptr
      000022 12r00r00         [24]  129 	lcall	__gptrget
      000025 08               [12]  130 	inc	r0
      000026 F6               [12]  131 	mov	@r0,a
      000027 A3               [24]  132 	inc	dptr
      000028 12r00r00         [24]  133 	lcall	__gptrget
      00002B 08               [12]  134 	inc	r0
      00002C F6               [12]  135 	mov	@r0,a
      00002D A3               [24]  136 	inc	dptr
      00002E 12r00r00         [24]  137 	lcall	__gptrget
      000031 08               [12]  138 	inc	r0
      000032 F6               [12]  139 	mov	@r0,a
      000033 A8*00            [24]  140 	mov	r0,_bp
      000035 08               [12]  141 	inc	r0
      000036 E6               [12]  142 	mov	a,@r0
      000037 08               [12]  143 	inc	r0
      000038 46               [12]  144 	orl	a,@r0
      000039 08               [12]  145 	inc	r0
      00003A 46               [12]  146 	orl	a,@r0
      00003B 08               [12]  147 	inc	r0
      00003C 46               [12]  148 	orl	a,@r0
      00003D 60 0E            [24]  149 	jz	00103$
                                    150 ;	wcslen.c:36: n++;
      00003F 0C               [12]  151 	inc	r4
      000040 BC 00 01         [24]  152 	cjne	r4,#0x00,00116$
      000043 0B               [12]  153 	inc	r3
      000044                        154 00116$:
                                    155 ;	wcslen.c:37: s++;
      000044 74 04            [12]  156 	mov	a,#0x04
      000046 2D               [12]  157 	add	a,r5
      000047 FD               [12]  158 	mov	r5,a
      000048 E4               [12]  159 	clr	a
      000049 3E               [12]  160 	addc	a,r6
      00004A FE               [12]  161 	mov	r6,a
      00004B 80 C7            [24]  162 	sjmp	00101$
      00004D                        163 00103$:
                                    164 ;	wcslen.c:40: return n;
      00004D 8C 82            [24]  165 	mov	dpl,r4
      00004F 8B 83            [24]  166 	mov	dph,r3
                                    167 ;	wcslen.c:41: }
      000051 85*00 81         [24]  168 	mov	sp,_bp
      000054 D0*00            [24]  169 	pop	_bp
      000056 22               [24]  170 	ret
                                    171 	.area CSEG    (CODE)
                                    172 	.area CONST   (CODE)
                                    173 	.area XINIT   (CODE)
                                    174 	.area CABS    (ABS,CODE)
