                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module asincosf
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _asincosf
                                     12 	.globl _ldexpf
                                     13 	.globl _fabsf
                                     14 	.globl _sqrtf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'asincosf'
                                     94 ;------------------------------------------------------------
                                     95 ;isacos                    Allocated to stack - _bp -3
                                     96 ;x                         Allocated to stack - _bp +1
                                     97 ;y                         Allocated to registers r7 r6 r5 r4 
                                     98 ;g                         Allocated to stack - _bp +17
                                     99 ;r                         Allocated to registers r4 r5 r6 r7 
                                    100 ;i                         Allocated to registers r3 
                                    101 ;quartPI                   Allocated to stack - _bp +21
                                    102 ;sloc0                     Allocated to stack - _bp +5
                                    103 ;sloc1                     Allocated to stack - _bp +9
                                    104 ;sloc2                     Allocated to stack - _bp +13
                                    105 ;------------------------------------------------------------
                                    106 ;	asincosf.c:47: float asincosf(float x, bool isacos)
                                    107 ;	-----------------------------------------
                                    108 ;	 function asincosf
                                    109 ;	-----------------------------------------
      000000                        110 _asincosf:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 C0*00            [24]  119 	push	_bp
      000002 85 81*00         [24]  120 	mov	_bp,sp
      000005 C0 82            [24]  121 	push	dpl
      000007 C0 83            [24]  122 	push	dph
      000009 C0 F0            [24]  123 	push	b
      00000B C0 E0            [24]  124 	push	acc
      00000D E5 81            [12]  125 	mov	a,sp
      00000F 24 11            [12]  126 	add	a,#0x11
      000011 F5 81            [12]  127 	mov	sp,a
                                    128 ;	asincosf.c:51: bool quartPI = isacos;
      000013 E5*00            [12]  129 	mov	a,_bp
      000015 24 FD            [12]  130 	add	a,#0xfd
      000017 F8               [12]  131 	mov	r0,a
      000018 E5*00            [12]  132 	mov	a,_bp
      00001A 24 15            [12]  133 	add	a,#0x15
      00001C F9               [12]  134 	mov	r1,a
      00001D E6               [12]  135 	mov	a,@r0
      00001E F7               [12]  136 	mov	@r1,a
                                    137 ;	asincosf.c:56: y = fabsf(x);
      00001F A8*00            [24]  138 	mov	r0,_bp
      000021 08               [12]  139 	inc	r0
      000022 86 82            [24]  140 	mov	dpl,@r0
      000024 08               [12]  141 	inc	r0
      000025 86 83            [24]  142 	mov	dph,@r0
      000027 08               [12]  143 	inc	r0
      000028 86 F0            [24]  144 	mov	b,@r0
      00002A 08               [12]  145 	inc	r0
      00002B E6               [12]  146 	mov	a,@r0
      00002C 12r00r00         [24]  147 	lcall	_fabsf
      00002F C8               [12]  148 	xch	a,r0
      000030 E5*00            [12]  149 	mov	a,_bp
      000032 24 0D            [12]  150 	add	a,#0x0d
      000034 C8               [12]  151 	xch	a,r0
      000035 A6 82            [24]  152 	mov	@r0,dpl
      000037 08               [12]  153 	inc	r0
      000038 A6 83            [24]  154 	mov	@r0,dph
      00003A 08               [12]  155 	inc	r0
      00003B A6 F0            [24]  156 	mov	@r0,b
      00003D 08               [12]  157 	inc	r0
      00003E F6               [12]  158 	mov	@r0,a
                                    159 ;	asincosf.c:57: if (y < EPS)
      00003F E4               [12]  160 	clr	a
      000040 C0 E0            [24]  161 	push	acc
      000042 C0 E0            [24]  162 	push	acc
      000044 74 80            [12]  163 	mov	a,#0x80
      000046 C0 E0            [24]  164 	push	acc
      000048 74 39            [12]  165 	mov	a,#0x39
      00004A C0 E0            [24]  166 	push	acc
      00004C E5*00            [12]  167 	mov	a,_bp
      00004E 24 0D            [12]  168 	add	a,#0x0d
      000050 F8               [12]  169 	mov	r0,a
      000051 86 82            [24]  170 	mov	dpl,@r0
      000053 08               [12]  171 	inc	r0
      000054 86 83            [24]  172 	mov	dph,@r0
      000056 08               [12]  173 	inc	r0
      000057 86 F0            [24]  174 	mov	b,@r0
      000059 08               [12]  175 	inc	r0
      00005A E6               [12]  176 	mov	a,@r0
      00005B 12r00r00         [24]  177 	lcall	___fslt
      00005E AD 82            [24]  178 	mov	r5,dpl
      000060 E5 81            [12]  179 	mov	a,sp
      000062 24 FC            [12]  180 	add	a,#0xfc
      000064 F5 81            [12]  181 	mov	sp,a
      000066 ED               [12]  182 	mov	a,r5
      000067 60 1B            [24]  183 	jz	00107$
                                    184 ;	asincosf.c:59: r = y;
      000069 E5*00            [12]  185 	mov	a,_bp
      00006B 24 0D            [12]  186 	add	a,#0x0d
      00006D F8               [12]  187 	mov	r0,a
      00006E E5*00            [12]  188 	mov	a,_bp
      000070 24 05            [12]  189 	add	a,#0x05
      000072 F9               [12]  190 	mov	r1,a
      000073 E6               [12]  191 	mov	a,@r0
      000074 F7               [12]  192 	mov	@r1,a
      000075 08               [12]  193 	inc	r0
      000076 E6               [12]  194 	mov	a,@r0
      000077 09               [12]  195 	inc	r1
      000078 F7               [12]  196 	mov	@r1,a
      000079 08               [12]  197 	inc	r0
      00007A E6               [12]  198 	mov	a,@r0
      00007B 09               [12]  199 	inc	r1
      00007C F7               [12]  200 	mov	@r1,a
      00007D 08               [12]  201 	inc	r0
      00007E E6               [12]  202 	mov	a,@r0
      00007F 09               [12]  203 	inc	r1
      000080 F7               [12]  204 	mov	@r1,a
      000081 02r03r62         [24]  205 	ljmp	00108$
      000084                        206 00107$:
                                    207 ;	asincosf.c:63: if (y > 0.5)
      000084 E5*00            [12]  208 	mov	a,_bp
      000086 24 0D            [12]  209 	add	a,#0x0d
      000088 F8               [12]  210 	mov	r0,a
      000089 E6               [12]  211 	mov	a,@r0
      00008A C0 E0            [24]  212 	push	acc
      00008C 08               [12]  213 	inc	r0
      00008D E6               [12]  214 	mov	a,@r0
      00008E C0 E0            [24]  215 	push	acc
      000090 08               [12]  216 	inc	r0
      000091 E6               [12]  217 	mov	a,@r0
      000092 C0 E0            [24]  218 	push	acc
      000094 08               [12]  219 	inc	r0
      000095 E6               [12]  220 	mov	a,@r0
      000096 C0 E0            [24]  221 	push	acc
      000098 90 00 00         [24]  222 	mov	dptr,#(0x00&0x00ff)
      00009B E4               [12]  223 	clr	a
      00009C F5 F0            [12]  224 	mov	b,a
      00009E 74 3F            [12]  225 	mov	a,#0x3f
      0000A0 12r00r00         [24]  226 	lcall	___fslt
      0000A3 AD 82            [24]  227 	mov	r5,dpl
      0000A5 E5 81            [12]  228 	mov	a,sp
      0000A7 24 FC            [12]  229 	add	a,#0xfc
      0000A9 F5 81            [12]  230 	mov	sp,a
      0000AB ED               [12]  231 	mov	a,r5
      0000AC 70 03            [24]  232 	jnz	00150$
      0000AE 02r01r99         [24]  233 	ljmp	00104$
      0000B1                        234 00150$:
                                    235 ;	asincosf.c:65: quartPI = !isacos;
      0000B1 E5*00            [12]  236 	mov	a,_bp
      0000B3 24 15            [12]  237 	add	a,#0x15
      0000B5 F8               [12]  238 	mov	r0,a
      0000B6 E6               [12]  239 	mov	a,@r0
      0000B7 B4 01 00         [24]  240 	cjne	a,#0x01,00151$
      0000BA                        241 00151$:
      0000BA E4               [12]  242 	clr	a
      0000BB 33               [12]  243 	rlc	a
      0000BC F6               [12]  244 	mov	@r0,a
                                    245 ;	asincosf.c:66: if (y > 1.0)
      0000BD E5*00            [12]  246 	mov	a,_bp
      0000BF 24 0D            [12]  247 	add	a,#0x0d
      0000C1 F8               [12]  248 	mov	r0,a
      0000C2 E6               [12]  249 	mov	a,@r0
      0000C3 C0 E0            [24]  250 	push	acc
      0000C5 08               [12]  251 	inc	r0
      0000C6 E6               [12]  252 	mov	a,@r0
      0000C7 C0 E0            [24]  253 	push	acc
      0000C9 08               [12]  254 	inc	r0
      0000CA E6               [12]  255 	mov	a,@r0
      0000CB C0 E0            [24]  256 	push	acc
      0000CD 08               [12]  257 	inc	r0
      0000CE E6               [12]  258 	mov	a,@r0
      0000CF C0 E0            [24]  259 	push	acc
      0000D1 90 00 00         [24]  260 	mov	dptr,#0x0000
      0000D4 75 F0 80         [24]  261 	mov	b,#0x80
      0000D7 74 3F            [12]  262 	mov	a,#0x3f
      0000D9 12r00r00         [24]  263 	lcall	___fslt
      0000DC AD 82            [24]  264 	mov	r5,dpl
      0000DE E5 81            [12]  265 	mov	a,sp
      0000E0 24 FC            [12]  266 	add	a,#0xfc
      0000E2 F5 81            [12]  267 	mov	sp,a
      0000E4 ED               [12]  268 	mov	a,r5
      0000E5 60 0F            [24]  269 	jz	00102$
                                    270 ;	asincosf.c:68: errno = EDOM;
      0000E7 75*00 21         [24]  271 	mov	_errno,#0x21
      0000EA 75*01 00         [24]  272 	mov	(_errno + 1),#0x00
                                    273 ;	asincosf.c:69: return 0.0;
      0000ED 90 00 00         [24]  274 	mov	dptr,#(0x00&0x00ff)
      0000F0 E4               [12]  275 	clr	a
      0000F1 F5 F0            [12]  276 	mov	b,a
      0000F3 02r05r8C         [24]  277 	ljmp	00117$
      0000F6                        278 00102$:
                                    279 ;	asincosf.c:71: g = (0.5 - y) + 0.5;
      0000F6 E5*00            [12]  280 	mov	a,_bp
      0000F8 24 0D            [12]  281 	add	a,#0x0d
      0000FA F8               [12]  282 	mov	r0,a
      0000FB E6               [12]  283 	mov	a,@r0
      0000FC C0 E0            [24]  284 	push	acc
      0000FE 08               [12]  285 	inc	r0
      0000FF E6               [12]  286 	mov	a,@r0
      000100 C0 E0            [24]  287 	push	acc
      000102 08               [12]  288 	inc	r0
      000103 E6               [12]  289 	mov	a,@r0
      000104 C0 E0            [24]  290 	push	acc
      000106 08               [12]  291 	inc	r0
      000107 E6               [12]  292 	mov	a,@r0
      000108 C0 E0            [24]  293 	push	acc
      00010A 90 00 00         [24]  294 	mov	dptr,#0x0000
      00010D 75 F0 80         [24]  295 	mov	b,#0x80
      000110 74 3F            [12]  296 	mov	a,#0x3f
      000112 12r00r00         [24]  297 	lcall	___fssub
      000115 AF 82            [24]  298 	mov	r7,dpl
      000117 AE 83            [24]  299 	mov	r6,dph
      000119 AD F0            [24]  300 	mov	r5,b
      00011B FC               [12]  301 	mov	r4,a
      00011C E5 81            [12]  302 	mov	a,sp
      00011E 24 FC            [12]  303 	add	a,#0xfc
      000120 F5 81            [12]  304 	mov	sp,a
                                    305 ;	asincosf.c:72: g = ldexpf(g, -1);
      000122 74 FF            [12]  306 	mov	a,#0xff
      000124 C0 E0            [24]  307 	push	acc
      000126 C0 E0            [24]  308 	push	acc
      000128 8F 82            [24]  309 	mov	dpl,r7
      00012A 8E 83            [24]  310 	mov	dph,r6
      00012C 8D F0            [24]  311 	mov	b,r5
      00012E EC               [12]  312 	mov	a,r4
      00012F 12r00r00         [24]  313 	lcall	_ldexpf
      000132 AF 82            [24]  314 	mov	r7,dpl
      000134 AE 83            [24]  315 	mov	r6,dph
      000136 AD F0            [24]  316 	mov	r5,b
      000138 FC               [12]  317 	mov	r4,a
      000139 15 81            [12]  318 	dec	sp
      00013B 15 81            [12]  319 	dec	sp
      00013D E5*00            [12]  320 	mov	a,_bp
      00013F 24 11            [12]  321 	add	a,#0x11
      000141 F8               [12]  322 	mov	r0,a
      000142 A6 07            [24]  323 	mov	@r0,ar7
      000144 08               [12]  324 	inc	r0
      000145 A6 06            [24]  325 	mov	@r0,ar6
      000147 08               [12]  326 	inc	r0
      000148 A6 05            [24]  327 	mov	@r0,ar5
      00014A 08               [12]  328 	inc	r0
      00014B A6 04            [24]  329 	mov	@r0,ar4
                                    330 ;	asincosf.c:73: y = sqrtf(g);
      00014D E5*00            [12]  331 	mov	a,_bp
      00014F 24 11            [12]  332 	add	a,#0x11
      000151 F8               [12]  333 	mov	r0,a
      000152 86 82            [24]  334 	mov	dpl,@r0
      000154 08               [12]  335 	inc	r0
      000155 86 83            [24]  336 	mov	dph,@r0
      000157 08               [12]  337 	inc	r0
      000158 86 F0            [24]  338 	mov	b,@r0
      00015A 08               [12]  339 	inc	r0
      00015B E6               [12]  340 	mov	a,@r0
      00015C 12r00r00         [24]  341 	lcall	_sqrtf
      00015F AF 82            [24]  342 	mov	r7,dpl
      000161 AE 83            [24]  343 	mov	r6,dph
      000163 AD F0            [24]  344 	mov	r5,b
      000165 FC               [12]  345 	mov	r4,a
                                    346 ;	asincosf.c:74: y = -(y + y);
      000166 C0 07            [24]  347 	push	ar7
      000168 C0 06            [24]  348 	push	ar6
      00016A C0 05            [24]  349 	push	ar5
      00016C C0 04            [24]  350 	push	ar4
      00016E 8F 82            [24]  351 	mov	dpl,r7
      000170 8E 83            [24]  352 	mov	dph,r6
      000172 8D F0            [24]  353 	mov	b,r5
      000174 EC               [12]  354 	mov	a,r4
      000175 12r00r00         [24]  355 	lcall	___fsadd
      000178 AC 82            [24]  356 	mov	r4,dpl
      00017A AD 83            [24]  357 	mov	r5,dph
      00017C AE F0            [24]  358 	mov	r6,b
      00017E FF               [12]  359 	mov	r7,a
      00017F E5 81            [12]  360 	mov	a,sp
      000181 24 FC            [12]  361 	add	a,#0xfc
      000183 F5 81            [12]  362 	mov	sp,a
      000185 E5*00            [12]  363 	mov	a,_bp
      000187 24 0D            [12]  364 	add	a,#0x0d
      000189 F8               [12]  365 	mov	r0,a
      00018A A6 04            [24]  366 	mov	@r0,ar4
      00018C 08               [12]  367 	inc	r0
      00018D A6 05            [24]  368 	mov	@r0,ar5
      00018F 08               [12]  369 	inc	r0
      000190 A6 06            [24]  370 	mov	@r0,ar6
      000192 EF               [12]  371 	mov	a,r7
      000193 B2 E7            [12]  372 	cpl	acc.7
      000195 08               [12]  373 	inc	r0
      000196 F6               [12]  374 	mov	@r0,a
      000197 80 43            [24]  375 	sjmp	00105$
      000199                        376 00104$:
                                    377 ;	asincosf.c:78: g = y * y;
      000199 E5*00            [12]  378 	mov	a,_bp
      00019B 24 0D            [12]  379 	add	a,#0x0d
      00019D F8               [12]  380 	mov	r0,a
      00019E E6               [12]  381 	mov	a,@r0
      00019F C0 E0            [24]  382 	push	acc
      0001A1 08               [12]  383 	inc	r0
      0001A2 E6               [12]  384 	mov	a,@r0
      0001A3 C0 E0            [24]  385 	push	acc
      0001A5 08               [12]  386 	inc	r0
      0001A6 E6               [12]  387 	mov	a,@r0
      0001A7 C0 E0            [24]  388 	push	acc
      0001A9 08               [12]  389 	inc	r0
      0001AA E6               [12]  390 	mov	a,@r0
      0001AB C0 E0            [24]  391 	push	acc
      0001AD E5*00            [12]  392 	mov	a,_bp
      0001AF 24 0D            [12]  393 	add	a,#0x0d
      0001B1 F8               [12]  394 	mov	r0,a
      0001B2 86 82            [24]  395 	mov	dpl,@r0
      0001B4 08               [12]  396 	inc	r0
      0001B5 86 83            [24]  397 	mov	dph,@r0
      0001B7 08               [12]  398 	inc	r0
      0001B8 86 F0            [24]  399 	mov	b,@r0
      0001BA 08               [12]  400 	inc	r0
      0001BB E6               [12]  401 	mov	a,@r0
      0001BC 12r00r00         [24]  402 	lcall	___fsmul
      0001BF AC 82            [24]  403 	mov	r4,dpl
      0001C1 AD 83            [24]  404 	mov	r5,dph
      0001C3 AE F0            [24]  405 	mov	r6,b
      0001C5 FF               [12]  406 	mov	r7,a
      0001C6 E5 81            [12]  407 	mov	a,sp
      0001C8 24 FC            [12]  408 	add	a,#0xfc
      0001CA F5 81            [12]  409 	mov	sp,a
      0001CC E5*00            [12]  410 	mov	a,_bp
      0001CE 24 11            [12]  411 	add	a,#0x11
      0001D0 F8               [12]  412 	mov	r0,a
      0001D1 A6 04            [24]  413 	mov	@r0,ar4
      0001D3 08               [12]  414 	inc	r0
      0001D4 A6 05            [24]  415 	mov	@r0,ar5
      0001D6 08               [12]  416 	inc	r0
      0001D7 A6 06            [24]  417 	mov	@r0,ar6
      0001D9 08               [12]  418 	inc	r0
      0001DA A6 07            [24]  419 	mov	@r0,ar7
      0001DC                        420 00105$:
                                    421 ;	asincosf.c:80: r = y + y * ((P(g) * g) / Q(g));
      0001DC E5*00            [12]  422 	mov	a,_bp
      0001DE 24 11            [12]  423 	add	a,#0x11
      0001E0 F8               [12]  424 	mov	r0,a
      0001E1 E6               [12]  425 	mov	a,@r0
      0001E2 C0 E0            [24]  426 	push	acc
      0001E4 08               [12]  427 	inc	r0
      0001E5 E6               [12]  428 	mov	a,@r0
      0001E6 C0 E0            [24]  429 	push	acc
      0001E8 08               [12]  430 	inc	r0
      0001E9 E6               [12]  431 	mov	a,@r0
      0001EA C0 E0            [24]  432 	push	acc
      0001EC 08               [12]  433 	inc	r0
      0001ED E6               [12]  434 	mov	a,@r0
      0001EE C0 E0            [24]  435 	push	acc
      0001F0 90 20 65         [24]  436 	mov	dptr,#0x2065
      0001F3 75 F0 01         [24]  437 	mov	b,#0x01
      0001F6 74 BF            [12]  438 	mov	a,#0xbf
      0001F8 12r00r00         [24]  439 	lcall	___fsmul
      0001FB AC 82            [24]  440 	mov	r4,dpl
      0001FD AD 83            [24]  441 	mov	r5,dph
      0001FF AE F0            [24]  442 	mov	r6,b
      000201 FF               [12]  443 	mov	r7,a
      000202 E5 81            [12]  444 	mov	a,sp
      000204 24 FC            [12]  445 	add	a,#0xfc
      000206 F5 81            [12]  446 	mov	sp,a
      000208 74 6B            [12]  447 	mov	a,#0x6b
      00020A C0 E0            [24]  448 	push	acc
      00020C 74 16            [12]  449 	mov	a,#0x16
      00020E C0 E0            [24]  450 	push	acc
      000210 74 6F            [12]  451 	mov	a,#0x6f
      000212 C0 E0            [24]  452 	push	acc
      000214 74 3F            [12]  453 	mov	a,#0x3f
      000216 C0 E0            [24]  454 	push	acc
      000218 8C 82            [24]  455 	mov	dpl,r4
      00021A 8D 83            [24]  456 	mov	dph,r5
      00021C 8E F0            [24]  457 	mov	b,r6
      00021E EF               [12]  458 	mov	a,r7
      00021F 12r00r00         [24]  459 	lcall	___fsadd
      000222 AC 82            [24]  460 	mov	r4,dpl
      000224 AD 83            [24]  461 	mov	r5,dph
      000226 AE F0            [24]  462 	mov	r6,b
      000228 FF               [12]  463 	mov	r7,a
      000229 E5 81            [12]  464 	mov	a,sp
      00022B 24 FC            [12]  465 	add	a,#0xfc
      00022D F5 81            [12]  466 	mov	sp,a
      00022F E5*00            [12]  467 	mov	a,_bp
      000231 24 11            [12]  468 	add	a,#0x11
      000233 F8               [12]  469 	mov	r0,a
      000234 E6               [12]  470 	mov	a,@r0
      000235 C0 E0            [24]  471 	push	acc
      000237 08               [12]  472 	inc	r0
      000238 E6               [12]  473 	mov	a,@r0
      000239 C0 E0            [24]  474 	push	acc
      00023B 08               [12]  475 	inc	r0
      00023C E6               [12]  476 	mov	a,@r0
      00023D C0 E0            [24]  477 	push	acc
      00023F 08               [12]  478 	inc	r0
      000240 E6               [12]  479 	mov	a,@r0
      000241 C0 E0            [24]  480 	push	acc
      000243 8C 82            [24]  481 	mov	dpl,r4
      000245 8D 83            [24]  482 	mov	dph,r5
      000247 8E F0            [24]  483 	mov	b,r6
      000249 EF               [12]  484 	mov	a,r7
      00024A 12r00r00         [24]  485 	lcall	___fsmul
      00024D C8               [12]  486 	xch	a,r0
      00024E E5*00            [12]  487 	mov	a,_bp
      000250 24 09            [12]  488 	add	a,#0x09
      000252 C8               [12]  489 	xch	a,r0
      000253 A6 82            [24]  490 	mov	@r0,dpl
      000255 08               [12]  491 	inc	r0
      000256 A6 83            [24]  492 	mov	@r0,dph
      000258 08               [12]  493 	inc	r0
      000259 A6 F0            [24]  494 	mov	@r0,b
      00025B 08               [12]  495 	inc	r0
      00025C F6               [12]  496 	mov	@r0,a
      00025D E5 81            [12]  497 	mov	a,sp
      00025F 24 FC            [12]  498 	add	a,#0xfc
      000261 F5 81            [12]  499 	mov	sp,a
      000263 74 0B            [12]  500 	mov	a,#0x0b
      000265 C0 E0            [24]  501 	push	acc
      000267 74 8D            [12]  502 	mov	a,#0x8d
      000269 C0 E0            [24]  503 	push	acc
      00026B 74 B1            [12]  504 	mov	a,#0xb1
      00026D C0 E0            [24]  505 	push	acc
      00026F 74 C0            [12]  506 	mov	a,#0xc0
      000271 C0 E0            [24]  507 	push	acc
      000273 E5*00            [12]  508 	mov	a,_bp
      000275 24 11            [12]  509 	add	a,#0x11
      000277 F8               [12]  510 	mov	r0,a
      000278 86 82            [24]  511 	mov	dpl,@r0
      00027A 08               [12]  512 	inc	r0
      00027B 86 83            [24]  513 	mov	dph,@r0
      00027D 08               [12]  514 	inc	r0
      00027E 86 F0            [24]  515 	mov	b,@r0
      000280 08               [12]  516 	inc	r0
      000281 E6               [12]  517 	mov	a,@r0
      000282 12r00r00         [24]  518 	lcall	___fsadd
      000285 AA 82            [24]  519 	mov	r2,dpl
      000287 AB 83            [24]  520 	mov	r3,dph
      000289 AE F0            [24]  521 	mov	r6,b
      00028B FF               [12]  522 	mov	r7,a
      00028C E5 81            [12]  523 	mov	a,sp
      00028E 24 FC            [12]  524 	add	a,#0xfc
      000290 F5 81            [12]  525 	mov	sp,a
      000292 E5*00            [12]  526 	mov	a,_bp
      000294 24 11            [12]  527 	add	a,#0x11
      000296 F8               [12]  528 	mov	r0,a
      000297 E6               [12]  529 	mov	a,@r0
      000298 C0 E0            [24]  530 	push	acc
      00029A 08               [12]  531 	inc	r0
      00029B E6               [12]  532 	mov	a,@r0
      00029C C0 E0            [24]  533 	push	acc
      00029E 08               [12]  534 	inc	r0
      00029F E6               [12]  535 	mov	a,@r0
      0002A0 C0 E0            [24]  536 	push	acc
      0002A2 08               [12]  537 	inc	r0
      0002A3 E6               [12]  538 	mov	a,@r0
      0002A4 C0 E0            [24]  539 	push	acc
      0002A6 8A 82            [24]  540 	mov	dpl,r2
      0002A8 8B 83            [24]  541 	mov	dph,r3
      0002AA 8E F0            [24]  542 	mov	b,r6
      0002AC EF               [12]  543 	mov	a,r7
      0002AD 12r00r00         [24]  544 	lcall	___fsmul
      0002B0 AC 82            [24]  545 	mov	r4,dpl
      0002B2 AD 83            [24]  546 	mov	r5,dph
      0002B4 AE F0            [24]  547 	mov	r6,b
      0002B6 FF               [12]  548 	mov	r7,a
      0002B7 E5 81            [12]  549 	mov	a,sp
      0002B9 24 FC            [12]  550 	add	a,#0xfc
      0002BB F5 81            [12]  551 	mov	sp,a
      0002BD 74 F0            [12]  552 	mov	a,#0xf0
      0002BF C0 E0            [24]  553 	push	acc
      0002C1 74 50            [12]  554 	mov	a,#0x50
      0002C3 C0 E0            [24]  555 	push	acc
      0002C5 74 B3            [12]  556 	mov	a,#0xb3
      0002C7 C0 E0            [24]  557 	push	acc
      0002C9 74 40            [12]  558 	mov	a,#0x40
      0002CB C0 E0            [24]  559 	push	acc
      0002CD 8C 82            [24]  560 	mov	dpl,r4
      0002CF 8D 83            [24]  561 	mov	dph,r5
      0002D1 8E F0            [24]  562 	mov	b,r6
      0002D3 EF               [12]  563 	mov	a,r7
      0002D4 12r00r00         [24]  564 	lcall	___fsadd
      0002D7 AC 82            [24]  565 	mov	r4,dpl
      0002D9 AD 83            [24]  566 	mov	r5,dph
      0002DB AE F0            [24]  567 	mov	r6,b
      0002DD FF               [12]  568 	mov	r7,a
      0002DE E5 81            [12]  569 	mov	a,sp
      0002E0 24 FC            [12]  570 	add	a,#0xfc
      0002E2 F5 81            [12]  571 	mov	sp,a
      0002E4 C0 04            [24]  572 	push	ar4
      0002E6 C0 05            [24]  573 	push	ar5
      0002E8 C0 06            [24]  574 	push	ar6
      0002EA C0 07            [24]  575 	push	ar7
      0002EC E5*00            [12]  576 	mov	a,_bp
      0002EE 24 09            [12]  577 	add	a,#0x09
      0002F0 F8               [12]  578 	mov	r0,a
      0002F1 86 82            [24]  579 	mov	dpl,@r0
      0002F3 08               [12]  580 	inc	r0
      0002F4 86 83            [24]  581 	mov	dph,@r0
      0002F6 08               [12]  582 	inc	r0
      0002F7 86 F0            [24]  583 	mov	b,@r0
      0002F9 08               [12]  584 	inc	r0
      0002FA E6               [12]  585 	mov	a,@r0
      0002FB 12r00r00         [24]  586 	lcall	___fsdiv
      0002FE AC 82            [24]  587 	mov	r4,dpl
      000300 AD 83            [24]  588 	mov	r5,dph
      000302 AE F0            [24]  589 	mov	r6,b
      000304 FF               [12]  590 	mov	r7,a
      000305 E5 81            [12]  591 	mov	a,sp
      000307 24 FC            [12]  592 	add	a,#0xfc
      000309 F5 81            [12]  593 	mov	sp,a
      00030B C0 04            [24]  594 	push	ar4
      00030D C0 05            [24]  595 	push	ar5
      00030F C0 06            [24]  596 	push	ar6
      000311 C0 07            [24]  597 	push	ar7
      000313 E5*00            [12]  598 	mov	a,_bp
      000315 24 0D            [12]  599 	add	a,#0x0d
      000317 F8               [12]  600 	mov	r0,a
      000318 86 82            [24]  601 	mov	dpl,@r0
      00031A 08               [12]  602 	inc	r0
      00031B 86 83            [24]  603 	mov	dph,@r0
      00031D 08               [12]  604 	inc	r0
      00031E 86 F0            [24]  605 	mov	b,@r0
      000320 08               [12]  606 	inc	r0
      000321 E6               [12]  607 	mov	a,@r0
      000322 12r00r00         [24]  608 	lcall	___fsmul
      000325 AC 82            [24]  609 	mov	r4,dpl
      000327 AD 83            [24]  610 	mov	r5,dph
      000329 AE F0            [24]  611 	mov	r6,b
      00032B FF               [12]  612 	mov	r7,a
      00032C E5 81            [12]  613 	mov	a,sp
      00032E 24 FC            [12]  614 	add	a,#0xfc
      000330 F5 81            [12]  615 	mov	sp,a
      000332 C0 04            [24]  616 	push	ar4
      000334 C0 05            [24]  617 	push	ar5
      000336 C0 06            [24]  618 	push	ar6
      000338 C0 07            [24]  619 	push	ar7
      00033A E5*00            [12]  620 	mov	a,_bp
      00033C 24 0D            [12]  621 	add	a,#0x0d
      00033E F8               [12]  622 	mov	r0,a
      00033F 86 82            [24]  623 	mov	dpl,@r0
      000341 08               [12]  624 	inc	r0
      000342 86 83            [24]  625 	mov	dph,@r0
      000344 08               [12]  626 	inc	r0
      000345 86 F0            [24]  627 	mov	b,@r0
      000347 08               [12]  628 	inc	r0
      000348 E6               [12]  629 	mov	a,@r0
      000349 12r00r00         [24]  630 	lcall	___fsadd
      00034C C8               [12]  631 	xch	a,r0
      00034D E5*00            [12]  632 	mov	a,_bp
      00034F 24 05            [12]  633 	add	a,#0x05
      000351 C8               [12]  634 	xch	a,r0
      000352 A6 82            [24]  635 	mov	@r0,dpl
      000354 08               [12]  636 	inc	r0
      000355 A6 83            [24]  637 	mov	@r0,dph
      000357 08               [12]  638 	inc	r0
      000358 A6 F0            [24]  639 	mov	@r0,b
      00035A 08               [12]  640 	inc	r0
      00035B F6               [12]  641 	mov	@r0,a
      00035C E5 81            [12]  642 	mov	a,sp
      00035E 24 FC            [12]  643 	add	a,#0xfc
      000360 F5 81            [12]  644 	mov	sp,a
      000362                        645 00108$:
                                    646 ;	asincosf.c:82: i = quartPI;
      000362 E5*00            [12]  647 	mov	a,_bp
      000364 24 15            [12]  648 	add	a,#0x15
      000366 F8               [12]  649 	mov	r0,a
      000367 86 03            [24]  650 	mov	ar3,@r0
                                    651 ;	asincosf.c:83: if (isacos)
      000369 E5*00            [12]  652 	mov	a,_bp
      00036B 24 FD            [12]  653 	add	a,#0xfd
      00036D F8               [12]  654 	mov	r0,a
      00036E E6               [12]  655 	mov	a,@r0
      00036F 70 03            [24]  656 	jnz	00153$
      000371 02r04rBB         [24]  657 	ljmp	00115$
      000374                        658 00153$:
                                    659 ;	asincosf.c:85: if (x < 0.0)
      000374 C0 03            [24]  660 	push	ar3
      000376 E4               [12]  661 	clr	a
      000377 C0 E0            [24]  662 	push	acc
      000379 C0 E0            [24]  663 	push	acc
      00037B C0 E0            [24]  664 	push	acc
      00037D C0 E0            [24]  665 	push	acc
      00037F A8*00            [24]  666 	mov	r0,_bp
      000381 08               [12]  667 	inc	r0
      000382 86 82            [24]  668 	mov	dpl,@r0
      000384 08               [12]  669 	inc	r0
      000385 86 83            [24]  670 	mov	dph,@r0
      000387 08               [12]  671 	inc	r0
      000388 86 F0            [24]  672 	mov	b,@r0
      00038A 08               [12]  673 	inc	r0
      00038B E6               [12]  674 	mov	a,@r0
      00038C 12r00r00         [24]  675 	lcall	___fslt
      00038F AF 82            [24]  676 	mov	r7,dpl
      000391 E5 81            [12]  677 	mov	a,sp
      000393 24 FC            [12]  678 	add	a,#0xfc
      000395 F5 81            [12]  679 	mov	sp,a
      000397 D0 03            [24]  680 	pop	ar3
      000399 EF               [12]  681 	mov	a,r7
      00039A 70 03            [24]  682 	jnz	00154$
      00039C 02r04r26         [24]  683 	ljmp	00110$
      00039F                        684 00154$:
                                    685 ;	asincosf.c:86: r = (b[i] + r) + b[i];
      00039F EB               [12]  686 	mov	a,r3
      0003A0 75 F0 04         [24]  687 	mov	b,#0x04
      0003A3 A4               [48]  688 	mul	ab
      0003A4 24r08            [12]  689 	add	a,#_asincosf_b_65536_26
      0003A6 F5 82            [12]  690 	mov	dpl,a
      0003A8 74s00            [12]  691 	mov	a,#(_asincosf_b_65536_26 >> 8)
      0003AA 35 F0            [12]  692 	addc	a,b
      0003AC F5 83            [12]  693 	mov	dph,a
      0003AE E5*00            [12]  694 	mov	a,_bp
      0003B0 24 0D            [12]  695 	add	a,#0x0d
      0003B2 F8               [12]  696 	mov	r0,a
      0003B3 E4               [12]  697 	clr	a
      0003B4 93               [24]  698 	movc	a,@a+dptr
      0003B5 F6               [12]  699 	mov	@r0,a
      0003B6 A3               [24]  700 	inc	dptr
      0003B7 E4               [12]  701 	clr	a
      0003B8 93               [24]  702 	movc	a,@a+dptr
      0003B9 08               [12]  703 	inc	r0
      0003BA F6               [12]  704 	mov	@r0,a
      0003BB A3               [24]  705 	inc	dptr
      0003BC E4               [12]  706 	clr	a
      0003BD 93               [24]  707 	movc	a,@a+dptr
      0003BE 08               [12]  708 	inc	r0
      0003BF F6               [12]  709 	mov	@r0,a
      0003C0 A3               [24]  710 	inc	dptr
      0003C1 E4               [12]  711 	clr	a
      0003C2 93               [24]  712 	movc	a,@a+dptr
      0003C3 08               [12]  713 	inc	r0
      0003C4 F6               [12]  714 	mov	@r0,a
      0003C5 E5*00            [12]  715 	mov	a,_bp
      0003C7 24 05            [12]  716 	add	a,#0x05
      0003C9 F8               [12]  717 	mov	r0,a
      0003CA E6               [12]  718 	mov	a,@r0
      0003CB C0 E0            [24]  719 	push	acc
      0003CD 08               [12]  720 	inc	r0
      0003CE E6               [12]  721 	mov	a,@r0
      0003CF C0 E0            [24]  722 	push	acc
      0003D1 08               [12]  723 	inc	r0
      0003D2 E6               [12]  724 	mov	a,@r0
      0003D3 C0 E0            [24]  725 	push	acc
      0003D5 08               [12]  726 	inc	r0
      0003D6 E6               [12]  727 	mov	a,@r0
      0003D7 C0 E0            [24]  728 	push	acc
      0003D9 E5*00            [12]  729 	mov	a,_bp
      0003DB 24 0D            [12]  730 	add	a,#0x0d
      0003DD F8               [12]  731 	mov	r0,a
      0003DE 86 82            [24]  732 	mov	dpl,@r0
      0003E0 08               [12]  733 	inc	r0
      0003E1 86 83            [24]  734 	mov	dph,@r0
      0003E3 08               [12]  735 	inc	r0
      0003E4 86 F0            [24]  736 	mov	b,@r0
      0003E6 08               [12]  737 	inc	r0
      0003E7 E6               [12]  738 	mov	a,@r0
      0003E8 12r00r00         [24]  739 	lcall	___fsadd
      0003EB AA 82            [24]  740 	mov	r2,dpl
      0003ED AD 83            [24]  741 	mov	r5,dph
      0003EF AE F0            [24]  742 	mov	r6,b
      0003F1 FF               [12]  743 	mov	r7,a
      0003F2 E5 81            [12]  744 	mov	a,sp
      0003F4 24 FC            [12]  745 	add	a,#0xfc
      0003F6 F5 81            [12]  746 	mov	sp,a
      0003F8 E5*00            [12]  747 	mov	a,_bp
      0003FA 24 0D            [12]  748 	add	a,#0x0d
      0003FC F8               [12]  749 	mov	r0,a
      0003FD E6               [12]  750 	mov	a,@r0
      0003FE C0 E0            [24]  751 	push	acc
      000400 08               [12]  752 	inc	r0
      000401 E6               [12]  753 	mov	a,@r0
      000402 C0 E0            [24]  754 	push	acc
      000404 08               [12]  755 	inc	r0
      000405 E6               [12]  756 	mov	a,@r0
      000406 C0 E0            [24]  757 	push	acc
      000408 08               [12]  758 	inc	r0
      000409 E6               [12]  759 	mov	a,@r0
      00040A C0 E0            [24]  760 	push	acc
      00040C 8A 82            [24]  761 	mov	dpl,r2
      00040E 8D 83            [24]  762 	mov	dph,r5
      000410 8E F0            [24]  763 	mov	b,r6
      000412 EF               [12]  764 	mov	a,r7
      000413 12r00r00         [24]  765 	lcall	___fsadd
      000416 AC 82            [24]  766 	mov	r4,dpl
      000418 AD 83            [24]  767 	mov	r5,dph
      00041A AE F0            [24]  768 	mov	r6,b
      00041C FF               [12]  769 	mov	r7,a
      00041D E5 81            [12]  770 	mov	a,sp
      00041F 24 FC            [12]  771 	add	a,#0xfc
      000421 F5 81            [12]  772 	mov	sp,a
      000423 02r05r85         [24]  773 	ljmp	00116$
      000426                        774 00110$:
                                    775 ;	asincosf.c:88: r = (a[i] - r) + a[i];
      000426 EB               [12]  776 	mov	a,r3
      000427 75 F0 04         [24]  777 	mov	b,#0x04
      00042A A4               [48]  778 	mul	ab
      00042B 24r00            [12]  779 	add	a,#_asincosf_a_65536_26
      00042D F5 82            [12]  780 	mov	dpl,a
      00042F 74s00            [12]  781 	mov	a,#(_asincosf_a_65536_26 >> 8)
      000431 35 F0            [12]  782 	addc	a,b
      000433 F5 83            [12]  783 	mov	dph,a
      000435 E4               [12]  784 	clr	a
      000436 93               [24]  785 	movc	a,@a+dptr
      000437 FF               [12]  786 	mov	r7,a
      000438 A3               [24]  787 	inc	dptr
      000439 E4               [12]  788 	clr	a
      00043A 93               [24]  789 	movc	a,@a+dptr
      00043B FE               [12]  790 	mov	r6,a
      00043C A3               [24]  791 	inc	dptr
      00043D E4               [12]  792 	clr	a
      00043E 93               [24]  793 	movc	a,@a+dptr
      00043F FD               [12]  794 	mov	r5,a
      000440 A3               [24]  795 	inc	dptr
      000441 E4               [12]  796 	clr	a
      000442 93               [24]  797 	movc	a,@a+dptr
      000443 FC               [12]  798 	mov	r4,a
      000444 C0 07            [24]  799 	push	ar7
      000446 C0 06            [24]  800 	push	ar6
      000448 C0 05            [24]  801 	push	ar5
      00044A C0 04            [24]  802 	push	ar4
      00044C E5*00            [12]  803 	mov	a,_bp
      00044E 24 05            [12]  804 	add	a,#0x05
      000450 F8               [12]  805 	mov	r0,a
      000451 E6               [12]  806 	mov	a,@r0
      000452 C0 E0            [24]  807 	push	acc
      000454 08               [12]  808 	inc	r0
      000455 E6               [12]  809 	mov	a,@r0
      000456 C0 E0            [24]  810 	push	acc
      000458 08               [12]  811 	inc	r0
      000459 E6               [12]  812 	mov	a,@r0
      00045A C0 E0            [24]  813 	push	acc
      00045C 08               [12]  814 	inc	r0
      00045D E6               [12]  815 	mov	a,@r0
      00045E C0 E0            [24]  816 	push	acc
      000460 8F 82            [24]  817 	mov	dpl,r7
      000462 8E 83            [24]  818 	mov	dph,r6
      000464 8D F0            [24]  819 	mov	b,r5
      000466 EC               [12]  820 	mov	a,r4
      000467 12r00r00         [24]  821 	lcall	___fssub
      00046A C8               [12]  822 	xch	a,r0
      00046B E5*00            [12]  823 	mov	a,_bp
      00046D 24 09            [12]  824 	add	a,#0x09
      00046F C8               [12]  825 	xch	a,r0
      000470 A6 82            [24]  826 	mov	@r0,dpl
      000472 08               [12]  827 	inc	r0
      000473 A6 83            [24]  828 	mov	@r0,dph
      000475 08               [12]  829 	inc	r0
      000476 A6 F0            [24]  830 	mov	@r0,b
      000478 08               [12]  831 	inc	r0
      000479 F6               [12]  832 	mov	@r0,a
      00047A E5 81            [12]  833 	mov	a,sp
      00047C 24 FC            [12]  834 	add	a,#0xfc
      00047E F5 81            [12]  835 	mov	sp,a
      000480 E5*00            [12]  836 	mov	a,_bp
      000482 24 09            [12]  837 	add	a,#0x09
      000484 F8               [12]  838 	mov	r0,a
      000485 86 82            [24]  839 	mov	dpl,@r0
      000487 08               [12]  840 	inc	r0
      000488 86 83            [24]  841 	mov	dph,@r0
      00048A 08               [12]  842 	inc	r0
      00048B 86 F0            [24]  843 	mov	b,@r0
      00048D 08               [12]  844 	inc	r0
      00048E E6               [12]  845 	mov	a,@r0
      00048F 12r00r00         [24]  846 	lcall	___fsadd
      000492 C8               [12]  847 	xch	a,r0
      000493 E5*00            [12]  848 	mov	a,_bp
      000495 24 0D            [12]  849 	add	a,#0x0d
      000497 C8               [12]  850 	xch	a,r0
      000498 A6 82            [24]  851 	mov	@r0,dpl
      00049A 08               [12]  852 	inc	r0
      00049B A6 83            [24]  853 	mov	@r0,dph
      00049D 08               [12]  854 	inc	r0
      00049E A6 F0            [24]  855 	mov	@r0,b
      0004A0 08               [12]  856 	inc	r0
      0004A1 F6               [12]  857 	mov	@r0,a
      0004A2 E5 81            [12]  858 	mov	a,sp
      0004A4 24 FC            [12]  859 	add	a,#0xfc
      0004A6 F5 81            [12]  860 	mov	sp,a
      0004A8 E5*00            [12]  861 	mov	a,_bp
      0004AA 24 0D            [12]  862 	add	a,#0x0d
      0004AC F8               [12]  863 	mov	r0,a
      0004AD 86 04            [24]  864 	mov	ar4,@r0
      0004AF 08               [12]  865 	inc	r0
      0004B0 86 05            [24]  866 	mov	ar5,@r0
      0004B2 08               [12]  867 	inc	r0
      0004B3 86 06            [24]  868 	mov	ar6,@r0
      0004B5 08               [12]  869 	inc	r0
      0004B6 86 07            [24]  870 	mov	ar7,@r0
      0004B8 02r05r85         [24]  871 	ljmp	00116$
      0004BB                        872 00115$:
                                    873 ;	asincosf.c:92: r = (a[i] + r) + a[i];
      0004BB EB               [12]  874 	mov	a,r3
      0004BC 75 F0 04         [24]  875 	mov	b,#0x04
      0004BF A4               [48]  876 	mul	ab
      0004C0 24r00            [12]  877 	add	a,#_asincosf_a_65536_26
      0004C2 F5 82            [12]  878 	mov	dpl,a
      0004C4 74s00            [12]  879 	mov	a,#(_asincosf_a_65536_26 >> 8)
      0004C6 35 F0            [12]  880 	addc	a,b
      0004C8 F5 83            [12]  881 	mov	dph,a
      0004CA E4               [12]  882 	clr	a
      0004CB 93               [24]  883 	movc	a,@a+dptr
      0004CC FF               [12]  884 	mov	r7,a
      0004CD A3               [24]  885 	inc	dptr
      0004CE E4               [12]  886 	clr	a
      0004CF 93               [24]  887 	movc	a,@a+dptr
      0004D0 FE               [12]  888 	mov	r6,a
      0004D1 A3               [24]  889 	inc	dptr
      0004D2 E4               [12]  890 	clr	a
      0004D3 93               [24]  891 	movc	a,@a+dptr
      0004D4 FD               [12]  892 	mov	r5,a
      0004D5 A3               [24]  893 	inc	dptr
      0004D6 E4               [12]  894 	clr	a
      0004D7 93               [24]  895 	movc	a,@a+dptr
      0004D8 FC               [12]  896 	mov	r4,a
      0004D9 C0 07            [24]  897 	push	ar7
      0004DB C0 06            [24]  898 	push	ar6
      0004DD C0 05            [24]  899 	push	ar5
      0004DF C0 04            [24]  900 	push	ar4
      0004E1 E5*00            [12]  901 	mov	a,_bp
      0004E3 24 05            [12]  902 	add	a,#0x05
      0004E5 F8               [12]  903 	mov	r0,a
      0004E6 E6               [12]  904 	mov	a,@r0
      0004E7 C0 E0            [24]  905 	push	acc
      0004E9 08               [12]  906 	inc	r0
      0004EA E6               [12]  907 	mov	a,@r0
      0004EB C0 E0            [24]  908 	push	acc
      0004ED 08               [12]  909 	inc	r0
      0004EE E6               [12]  910 	mov	a,@r0
      0004EF C0 E0            [24]  911 	push	acc
      0004F1 08               [12]  912 	inc	r0
      0004F2 E6               [12]  913 	mov	a,@r0
      0004F3 C0 E0            [24]  914 	push	acc
      0004F5 8F 82            [24]  915 	mov	dpl,r7
      0004F7 8E 83            [24]  916 	mov	dph,r6
      0004F9 8D F0            [24]  917 	mov	b,r5
      0004FB EC               [12]  918 	mov	a,r4
      0004FC 12r00r00         [24]  919 	lcall	___fsadd
      0004FF C8               [12]  920 	xch	a,r0
      000500 E5*00            [12]  921 	mov	a,_bp
      000502 24 09            [12]  922 	add	a,#0x09
      000504 C8               [12]  923 	xch	a,r0
      000505 A6 82            [24]  924 	mov	@r0,dpl
      000507 08               [12]  925 	inc	r0
      000508 A6 83            [24]  926 	mov	@r0,dph
      00050A 08               [12]  927 	inc	r0
      00050B A6 F0            [24]  928 	mov	@r0,b
      00050D 08               [12]  929 	inc	r0
      00050E F6               [12]  930 	mov	@r0,a
      00050F E5 81            [12]  931 	mov	a,sp
      000511 24 FC            [12]  932 	add	a,#0xfc
      000513 F5 81            [12]  933 	mov	sp,a
      000515 E5*00            [12]  934 	mov	a,_bp
      000517 24 09            [12]  935 	add	a,#0x09
      000519 F8               [12]  936 	mov	r0,a
      00051A 86 82            [24]  937 	mov	dpl,@r0
      00051C 08               [12]  938 	inc	r0
      00051D 86 83            [24]  939 	mov	dph,@r0
      00051F 08               [12]  940 	inc	r0
      000520 86 F0            [24]  941 	mov	b,@r0
      000522 08               [12]  942 	inc	r0
      000523 E6               [12]  943 	mov	a,@r0
      000524 12r00r00         [24]  944 	lcall	___fsadd
      000527 C8               [12]  945 	xch	a,r0
      000528 E5*00            [12]  946 	mov	a,_bp
      00052A 24 0D            [12]  947 	add	a,#0x0d
      00052C C8               [12]  948 	xch	a,r0
      00052D A6 82            [24]  949 	mov	@r0,dpl
      00052F 08               [12]  950 	inc	r0
      000530 A6 83            [24]  951 	mov	@r0,dph
      000532 08               [12]  952 	inc	r0
      000533 A6 F0            [24]  953 	mov	@r0,b
      000535 08               [12]  954 	inc	r0
      000536 F6               [12]  955 	mov	@r0,a
      000537 E5 81            [12]  956 	mov	a,sp
      000539 24 FC            [12]  957 	add	a,#0xfc
      00053B F5 81            [12]  958 	mov	sp,a
      00053D E5*00            [12]  959 	mov	a,_bp
      00053F 24 0D            [12]  960 	add	a,#0x0d
      000541 F8               [12]  961 	mov	r0,a
      000542 86 04            [24]  962 	mov	ar4,@r0
      000544 08               [12]  963 	inc	r0
      000545 86 05            [24]  964 	mov	ar5,@r0
      000547 08               [12]  965 	inc	r0
      000548 86 06            [24]  966 	mov	ar6,@r0
      00054A 08               [12]  967 	inc	r0
      00054B 86 07            [24]  968 	mov	ar7,@r0
                                    969 ;	asincosf.c:93: if (x < 0.0)
      00054D C0 07            [24]  970 	push	ar7
      00054F C0 06            [24]  971 	push	ar6
      000551 C0 05            [24]  972 	push	ar5
      000553 C0 04            [24]  973 	push	ar4
      000555 E4               [12]  974 	clr	a
      000556 C0 E0            [24]  975 	push	acc
      000558 C0 E0            [24]  976 	push	acc
      00055A C0 E0            [24]  977 	push	acc
      00055C C0 E0            [24]  978 	push	acc
      00055E A8*00            [24]  979 	mov	r0,_bp
      000560 08               [12]  980 	inc	r0
      000561 86 82            [24]  981 	mov	dpl,@r0
      000563 08               [12]  982 	inc	r0
      000564 86 83            [24]  983 	mov	dph,@r0
      000566 08               [12]  984 	inc	r0
      000567 86 F0            [24]  985 	mov	b,@r0
      000569 08               [12]  986 	inc	r0
      00056A E6               [12]  987 	mov	a,@r0
      00056B 12r00r00         [24]  988 	lcall	___fslt
      00056E AB 82            [24]  989 	mov	r3,dpl
      000570 E5 81            [12]  990 	mov	a,sp
      000572 24 FC            [12]  991 	add	a,#0xfc
      000574 F5 81            [12]  992 	mov	sp,a
      000576 D0 04            [24]  993 	pop	ar4
      000578 D0 05            [24]  994 	pop	ar5
      00057A D0 06            [24]  995 	pop	ar6
      00057C D0 07            [24]  996 	pop	ar7
      00057E EB               [12]  997 	mov	a,r3
      00057F 60 04            [24]  998 	jz	00116$
                                    999 ;	asincosf.c:94: r = -r;
      000581 EF               [12] 1000 	mov	a,r7
      000582 B2 E7            [12] 1001 	cpl	acc.7
      000584 FF               [12] 1002 	mov	r7,a
      000585                       1003 00116$:
                                   1004 ;	asincosf.c:96: return r;
      000585 8C 82            [24] 1005 	mov	dpl,r4
      000587 8D 83            [24] 1006 	mov	dph,r5
      000589 8E F0            [24] 1007 	mov	b,r6
      00058B EF               [12] 1008 	mov	a,r7
      00058C                       1009 00117$:
                                   1010 ;	asincosf.c:97: }
      00058C 85*00 81         [24] 1011 	mov	sp,_bp
      00058F D0*00            [24] 1012 	pop	_bp
      000591 22               [24] 1013 	ret
                                   1014 	.area CSEG    (CODE)
                                   1015 	.area CONST   (CODE)
      000000                       1016 _asincosf_a_65536_26:
      000000 00 00 00 00           1017 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000004 DB 0F 49 3F           1018 	.byte #0xdb, #0x0f, #0x49, #0x3f	;  7.853982e-01
      000008                       1019 _asincosf_b_65536_26:
      000008 DB 0F C9 3F           1020 	.byte #0xdb, #0x0f, #0xc9, #0x3f	;  1.570796e+00
      00000C DB 0F 49 3F           1021 	.byte #0xdb, #0x0f, #0x49, #0x3f	;  7.853982e-01
                                   1022 	.area XINIT   (CODE)
                                   1023 	.area CABS    (ABS,CODE)
