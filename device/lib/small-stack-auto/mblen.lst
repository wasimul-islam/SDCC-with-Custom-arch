                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mblen
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mblen
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'mblen'
                                     91 ;------------------------------------------------------------
                                     92 ;n                         Allocated to stack - _bp -4
                                     93 ;s                         Allocated to registers r5 r6 r7 
                                     94 ;m                         Allocated to registers r3 
                                     95 ;c                         Allocated to registers r4 
                                     96 ;------------------------------------------------------------
                                     97 ;	mblen.c:31: int mblen(const char *s, size_t n)
                                     98 ;	-----------------------------------------
                                     99 ;	 function mblen
                                    100 ;	-----------------------------------------
      000000                        101 _mblen:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 AD 82            [24]  112 	mov	r5,dpl
      000007 AE 83            [24]  113 	mov	r6,dph
      000009 AF F0            [24]  114 	mov	r7,b
                                    115 ;	mblen.c:36: if(!s)
      00000B ED               [12]  116 	mov	a,r5
      00000C 4E               [12]  117 	orl	a,r6
      00000D 70 06            [24]  118 	jnz	00102$
                                    119 ;	mblen.c:37: return(0);
      00000F 90 00 00         [24]  120 	mov	dptr,#0x0000
      000012 02r00r99         [24]  121 	ljmp	00119$
      000015                        122 00102$:
                                    123 ;	mblen.c:39: if(!n)
      000015 E5*00            [12]  124 	mov	a,_bp
      000017 24 FC            [12]  125 	add	a,#0xfc
      000019 F8               [12]  126 	mov	r0,a
      00001A E6               [12]  127 	mov	a,@r0
      00001B 08               [12]  128 	inc	r0
      00001C 46               [12]  129 	orl	a,@r0
      00001D 70 06            [24]  130 	jnz	00104$
                                    131 ;	mblen.c:40: return(-1);
      00001F 90 FF FF         [24]  132 	mov	dptr,#0xffff
      000022 02r00r99         [24]  133 	ljmp	00119$
      000025                        134 00104$:
                                    135 ;	mblen.c:42: c = *s;
      000025 8D 82            [24]  136 	mov	dpl,r5
      000027 8E 83            [24]  137 	mov	dph,r6
      000029 8F F0            [24]  138 	mov	b,r7
      00002B 12r00r00         [24]  139 	lcall	__gptrget
                                    140 ;	mblen.c:44: if(!c)
      00002E FC               [12]  141 	mov	r4,a
      00002F 70 05            [24]  142 	jnz	00106$
                                    143 ;	mblen.c:45: return(0);
      000031 90 00 00         [24]  144 	mov	dptr,#0x0000
      000034 80 63            [24]  145 	sjmp	00119$
      000036                        146 00106$:
                                    147 ;	mblen.c:47: if(c <= 0x7f)
      000036 EC               [12]  148 	mov	a,r4
      000037 24 80            [12]  149 	add	a,#0xff - 0x7f
      000039 40 05            [24]  150 	jc	00126$
                                    151 ;	mblen.c:48: return(1);
      00003B 90 00 01         [24]  152 	mov	dptr,#0x0001
                                    153 ;	mblen.c:50: while(c & 0x80)
      00003E 80 59            [24]  154 	sjmp	00119$
      000040                        155 00126$:
      000040 7B 00            [12]  156 	mov	r3,#0x00
      000042                        157 00109$:
      000042 EC               [12]  158 	mov	a,r4
      000043 30 E7 08         [24]  159 	jnb	acc.7,00111$
                                    160 ;	mblen.c:52: c <<= 1;
      000046 8C 02            [24]  161 	mov	ar2,r4
      000048 EA               [12]  162 	mov	a,r2
      000049 2A               [12]  163 	add	a,r2
      00004A FC               [12]  164 	mov	r4,a
                                    165 ;	mblen.c:53: m++;
      00004B 0B               [12]  166 	inc	r3
      00004C 80 F4            [24]  167 	sjmp	00109$
      00004E                        168 00111$:
                                    169 ;	mblen.c:56: if(m > n)
      00004E 8B 02            [24]  170 	mov	ar2,r3
      000050 7C 00            [12]  171 	mov	r4,#0x00
      000052 E5*00            [12]  172 	mov	a,_bp
      000054 24 FC            [12]  173 	add	a,#0xfc
      000056 F8               [12]  174 	mov	r0,a
      000057 C3               [12]  175 	clr	c
      000058 E6               [12]  176 	mov	a,@r0
      000059 9A               [12]  177 	subb	a,r2
      00005A 08               [12]  178 	inc	r0
      00005B E6               [12]  179 	mov	a,@r0
      00005C 9C               [12]  180 	subb	a,r4
      00005D 50 05            [24]  181 	jnc	00129$
                                    182 ;	mblen.c:57: return(-1);
      00005F 90 FF FF         [24]  183 	mov	dptr,#0xffff
                                    184 ;	mblen.c:60: while(--m)
      000062 80 35            [24]  185 	sjmp	00119$
      000064                        186 00129$:
      000064                        187 00116$:
      000064 1B               [12]  188 	dec	r3
      000065 EB               [12]  189 	mov	a,r3
      000066 60 2D            [24]  190 	jz	00118$
                                    191 ;	mblen.c:61: if((*++s & 0xc0) != 0x80)
      000068 C0 02            [24]  192 	push	ar2
      00006A C0 04            [24]  193 	push	ar4
      00006C 0D               [12]  194 	inc	r5
      00006D BD 00 01         [24]  195 	cjne	r5,#0x00,00169$
      000070 0E               [12]  196 	inc	r6
      000071                        197 00169$:
      000071 8D 82            [24]  198 	mov	dpl,r5
      000073 8E 83            [24]  199 	mov	dph,r6
      000075 8F F0            [24]  200 	mov	b,r7
      000077 12r00r00         [24]  201 	lcall	__gptrget
      00007A FC               [12]  202 	mov	r4,a
      00007B 53 04 C0         [24]  203 	anl	ar4,#0xc0
      00007E 7A 00            [12]  204 	mov	r2,#0x00
      000080 BC 80 09         [24]  205 	cjne	r4,#0x80,00170$
      000083 BA 00 06         [24]  206 	cjne	r2,#0x00,00170$
      000086 D0 04            [24]  207 	pop	ar4
      000088 D0 02            [24]  208 	pop	ar2
      00008A 80 D8            [24]  209 	sjmp	00116$
      00008C                        210 00170$:
      00008C D0 04            [24]  211 	pop	ar4
      00008E D0 02            [24]  212 	pop	ar2
                                    213 ;	mblen.c:62: return(-1);
      000090 90 FF FF         [24]  214 	mov	dptr,#0xffff
      000093 80 04            [24]  215 	sjmp	00119$
      000095                        216 00118$:
                                    217 ;	mblen.c:64: return(n);
      000095 8A 82            [24]  218 	mov	dpl,r2
      000097 8C 83            [24]  219 	mov	dph,r4
      000099                        220 00119$:
                                    221 ;	mblen.c:65: }
      000099 D0*00            [24]  222 	pop	_bp
      00009B 22               [24]  223 	ret
                                    224 	.area CSEG    (CODE)
                                    225 	.area CONST   (CODE)
                                    226 	.area XINIT   (CODE)
                                    227 	.area CABS    (ABS,CODE)
