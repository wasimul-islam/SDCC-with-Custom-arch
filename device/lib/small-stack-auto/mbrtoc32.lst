                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtoc32
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbrtowc
                                     12 	.globl _mbrtoc32
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
      000000                         32 _mbrtoc32_sps_65536_16:
      000000                         33 	.ds 3
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'mbrtoc32'
                                     94 ;------------------------------------------------------------
                                     95 ;s                         Allocated to stack - _bp -5
                                     96 ;n                         Allocated to stack - _bp -7
                                     97 ;ps                        Allocated to stack - _bp -10
                                     98 ;pc32                      Allocated to registers r5 r6 r7 
                                     99 ;wc                        Allocated to stack - _bp +1
                                    100 ;ret                       Allocated to registers r3 r4 
                                    101 ;sps                       Allocated with name '_mbrtoc32_sps_65536_16'
                                    102 ;------------------------------------------------------------
                                    103 ;	mbrtoc32.c:34: size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    104 ;	-----------------------------------------
                                    105 ;	 function mbrtoc32
                                    106 ;	-----------------------------------------
      000000                        107 _mbrtoc32:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
      000000 C0*00            [24]  116 	push	_bp
      000002 E5 81            [12]  117 	mov	a,sp
      000004 F5*00            [12]  118 	mov	_bp,a
      000006 24 04            [12]  119 	add	a,#0x04
      000008 F5 81            [12]  120 	mov	sp,a
      00000A AD 82            [24]  121 	mov	r5,dpl
      00000C AE 83            [24]  122 	mov	r6,dph
      00000E AF F0            [24]  123 	mov	r7,b
                                    124 ;	mbrtoc32.c:40: if(!ps)
      000010 E5*00            [12]  125 	mov	a,_bp
      000012 24 F6            [12]  126 	add	a,#0xf6
      000014 F8               [12]  127 	mov	r0,a
      000015 E6               [12]  128 	mov	a,@r0
      000016 08               [12]  129 	inc	r0
      000017 46               [12]  130 	orl	a,@r0
      000018 70 0D            [24]  131 	jnz	00102$
                                    132 ;	mbrtoc32.c:41: ps = &sps;
      00001A E5*00            [12]  133 	mov	a,_bp
      00001C 24 F6            [12]  134 	add	a,#0xf6
      00001E F8               [12]  135 	mov	r0,a
      00001F 76r00            [12]  136 	mov	@r0,#_mbrtoc32_sps_65536_16
      000021 08               [12]  137 	inc	r0
      000022 76 00            [12]  138 	mov	@r0,#0x00
      000024 08               [12]  139 	inc	r0
      000025 76 40            [12]  140 	mov	@r0,#0x40
      000027                        141 00102$:
                                    142 ;	mbrtoc32.c:43: if(!pc32)
      000027 ED               [12]  143 	mov	a,r5
      000028 4E               [12]  144 	orl	a,r6
      000029 70 3E            [24]  145 	jnz	00104$
                                    146 ;	mbrtoc32.c:44: return(mbrtowc(0, s, n, ps));
      00002B E5*00            [12]  147 	mov	a,_bp
      00002D 24 F6            [12]  148 	add	a,#0xf6
      00002F F8               [12]  149 	mov	r0,a
      000030 E6               [12]  150 	mov	a,@r0
      000031 C0 E0            [24]  151 	push	acc
      000033 08               [12]  152 	inc	r0
      000034 E6               [12]  153 	mov	a,@r0
      000035 C0 E0            [24]  154 	push	acc
      000037 08               [12]  155 	inc	r0
      000038 E6               [12]  156 	mov	a,@r0
      000039 C0 E0            [24]  157 	push	acc
      00003B E5*00            [12]  158 	mov	a,_bp
      00003D 24 F9            [12]  159 	add	a,#0xf9
      00003F F8               [12]  160 	mov	r0,a
      000040 E6               [12]  161 	mov	a,@r0
      000041 C0 E0            [24]  162 	push	acc
      000043 08               [12]  163 	inc	r0
      000044 E6               [12]  164 	mov	a,@r0
      000045 C0 E0            [24]  165 	push	acc
      000047 E5*00            [12]  166 	mov	a,_bp
      000049 24 FB            [12]  167 	add	a,#0xfb
      00004B F8               [12]  168 	mov	r0,a
      00004C E6               [12]  169 	mov	a,@r0
      00004D C0 E0            [24]  170 	push	acc
      00004F 08               [12]  171 	inc	r0
      000050 E6               [12]  172 	mov	a,@r0
      000051 C0 E0            [24]  173 	push	acc
      000053 08               [12]  174 	inc	r0
      000054 E6               [12]  175 	mov	a,@r0
      000055 C0 E0            [24]  176 	push	acc
      000057 90 00 00         [24]  177 	mov	dptr,#0x0000
      00005A 75 F0 00         [24]  178 	mov	b,#0x00
      00005D 12r00r00         [24]  179 	lcall	_mbrtowc
      000060 E5 81            [12]  180 	mov	a,sp
      000062 24 F8            [12]  181 	add	a,#0xf8
      000064 F5 81            [12]  182 	mov	sp,a
      000066 02r00rE6         [24]  183 	ljmp	00107$
      000069                        184 00104$:
                                    185 ;	mbrtoc32.c:46: ret = mbrtowc(&wc, s, n, ps);
      000069 AC*00            [24]  186 	mov	r4,_bp
      00006B 0C               [12]  187 	inc	r4
      00006C 7B 00            [12]  188 	mov	r3,#0x00
      00006E 7A 40            [12]  189 	mov	r2,#0x40
      000070 C0 07            [24]  190 	push	ar7
      000072 C0 06            [24]  191 	push	ar6
      000074 C0 05            [24]  192 	push	ar5
      000076 E5*00            [12]  193 	mov	a,_bp
      000078 24 F6            [12]  194 	add	a,#0xf6
      00007A F8               [12]  195 	mov	r0,a
      00007B E6               [12]  196 	mov	a,@r0
      00007C C0 E0            [24]  197 	push	acc
      00007E 08               [12]  198 	inc	r0
      00007F E6               [12]  199 	mov	a,@r0
      000080 C0 E0            [24]  200 	push	acc
      000082 08               [12]  201 	inc	r0
      000083 E6               [12]  202 	mov	a,@r0
      000084 C0 E0            [24]  203 	push	acc
      000086 E5*00            [12]  204 	mov	a,_bp
      000088 24 F9            [12]  205 	add	a,#0xf9
      00008A F8               [12]  206 	mov	r0,a
      00008B E6               [12]  207 	mov	a,@r0
      00008C C0 E0            [24]  208 	push	acc
      00008E 08               [12]  209 	inc	r0
      00008F E6               [12]  210 	mov	a,@r0
      000090 C0 E0            [24]  211 	push	acc
      000092 E5*00            [12]  212 	mov	a,_bp
      000094 24 FB            [12]  213 	add	a,#0xfb
      000096 F8               [12]  214 	mov	r0,a
      000097 E6               [12]  215 	mov	a,@r0
      000098 C0 E0            [24]  216 	push	acc
      00009A 08               [12]  217 	inc	r0
      00009B E6               [12]  218 	mov	a,@r0
      00009C C0 E0            [24]  219 	push	acc
      00009E 08               [12]  220 	inc	r0
      00009F E6               [12]  221 	mov	a,@r0
      0000A0 C0 E0            [24]  222 	push	acc
      0000A2 8C 82            [24]  223 	mov	dpl,r4
      0000A4 8B 83            [24]  224 	mov	dph,r3
      0000A6 8A F0            [24]  225 	mov	b,r2
      0000A8 12r00r00         [24]  226 	lcall	_mbrtowc
      0000AB AB 82            [24]  227 	mov	r3,dpl
      0000AD AC 83            [24]  228 	mov	r4,dph
      0000AF E5 81            [12]  229 	mov	a,sp
      0000B1 24 F8            [12]  230 	add	a,#0xf8
      0000B3 F5 81            [12]  231 	mov	sp,a
      0000B5 D0 05            [24]  232 	pop	ar5
      0000B7 D0 06            [24]  233 	pop	ar6
      0000B9 D0 07            [24]  234 	pop	ar7
                                    235 ;	mbrtoc32.c:48: if(ret <= MB_LEN_MAX)
      0000BB C3               [12]  236 	clr	c
      0000BC 74 04            [12]  237 	mov	a,#0x04
      0000BE 9B               [12]  238 	subb	a,r3
      0000BF E4               [12]  239 	clr	a
      0000C0 9C               [12]  240 	subb	a,r4
      0000C1 40 1F            [24]  241 	jc	00106$
                                    242 ;	mbrtoc32.c:49: *pc32 = wc;
      0000C3 8D 82            [24]  243 	mov	dpl,r5
      0000C5 8E 83            [24]  244 	mov	dph,r6
      0000C7 8F F0            [24]  245 	mov	b,r7
      0000C9 A8*00            [24]  246 	mov	r0,_bp
      0000CB 08               [12]  247 	inc	r0
      0000CC E6               [12]  248 	mov	a,@r0
      0000CD 12r00r00         [24]  249 	lcall	__gptrput
      0000D0 A3               [24]  250 	inc	dptr
      0000D1 08               [12]  251 	inc	r0
      0000D2 E6               [12]  252 	mov	a,@r0
      0000D3 12r00r00         [24]  253 	lcall	__gptrput
      0000D6 A3               [24]  254 	inc	dptr
      0000D7 08               [12]  255 	inc	r0
      0000D8 E6               [12]  256 	mov	a,@r0
      0000D9 12r00r00         [24]  257 	lcall	__gptrput
      0000DC A3               [24]  258 	inc	dptr
      0000DD 08               [12]  259 	inc	r0
      0000DE E6               [12]  260 	mov	a,@r0
      0000DF 12r00r00         [24]  261 	lcall	__gptrput
      0000E2                        262 00106$:
                                    263 ;	mbrtoc32.c:51: return(ret);
      0000E2 8B 82            [24]  264 	mov	dpl,r3
      0000E4 8C 83            [24]  265 	mov	dph,r4
      0000E6                        266 00107$:
                                    267 ;	mbrtoc32.c:52: }
      0000E6 85*00 81         [24]  268 	mov	sp,_bp
      0000E9 D0*00            [24]  269 	pop	_bp
      0000EB 22               [24]  270 	ret
                                    271 	.area CSEG    (CODE)
                                    272 	.area CONST   (CODE)
                                    273 	.area XINIT   (CODE)
                                    274 	.area CABS    (ABS,CODE)
