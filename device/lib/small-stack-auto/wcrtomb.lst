                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcrtomb
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wctomb
                                     12 	.globl _wcrtomb
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; initialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'wcrtomb'
                                     92 ;------------------------------------------------------------
                                     93 ;wc                        Allocated to stack - _bp -6
                                     94 ;ps                        Allocated to stack - _bp -9
                                     95 ;s                         Allocated to registers r5 r6 r7 
                                     96 ;ret                       Allocated to registers r6 r7 
                                     97 ;------------------------------------------------------------
                                     98 ;	wcrtomb.c:34: size_t wcrtomb(char *restrict s, wchar_t wc, mbstate_t *restrict ps)
                                     99 ;	-----------------------------------------
                                    100 ;	 function wcrtomb
                                    101 ;	-----------------------------------------
      000000                        102 _wcrtomb:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 AD 82            [24]  113 	mov	r5,dpl
      000007 AE 83            [24]  114 	mov	r6,dph
      000009 AF F0            [24]  115 	mov	r7,b
                                    116 ;	wcrtomb.c:40: ret = wctomb(s, wc);
      00000B E5*00            [12]  117 	mov	a,_bp
      00000D 24 FA            [12]  118 	add	a,#0xfa
      00000F F8               [12]  119 	mov	r0,a
      000010 E6               [12]  120 	mov	a,@r0
      000011 C0 E0            [24]  121 	push	acc
      000013 08               [12]  122 	inc	r0
      000014 E6               [12]  123 	mov	a,@r0
      000015 C0 E0            [24]  124 	push	acc
      000017 08               [12]  125 	inc	r0
      000018 E6               [12]  126 	mov	a,@r0
      000019 C0 E0            [24]  127 	push	acc
      00001B 08               [12]  128 	inc	r0
      00001C E6               [12]  129 	mov	a,@r0
      00001D C0 E0            [24]  130 	push	acc
      00001F 8D 82            [24]  131 	mov	dpl,r5
      000021 8E 83            [24]  132 	mov	dph,r6
      000023 8F F0            [24]  133 	mov	b,r7
      000025 12r00r00         [24]  134 	lcall	_wctomb
      000028 AE 82            [24]  135 	mov	r6,dpl
      00002A AF 83            [24]  136 	mov	r7,dph
      00002C E5 81            [12]  137 	mov	a,sp
      00002E 24 FC            [12]  138 	add	a,#0xfc
      000030 F5 81            [12]  139 	mov	sp,a
                                    140 ;	wcrtomb.c:42: if(ret == (size_t)(-1))
      000032 BE FF 09         [24]  141 	cjne	r6,#0xff,00102$
      000035 BF FF 06         [24]  142 	cjne	r7,#0xff,00102$
                                    143 ;	wcrtomb.c:43: errno = EILSEQ;
      000038 75*00 54         [24]  144 	mov	_errno,#0x54
      00003B 75*01 00         [24]  145 	mov	(_errno + 1),#0x00
      00003E                        146 00102$:
                                    147 ;	wcrtomb.c:45: return(ret);
      00003E 8E 82            [24]  148 	mov	dpl,r6
      000040 8F 83            [24]  149 	mov	dph,r7
                                    150 ;	wcrtomb.c:46: }
      000042 D0*00            [24]  151 	pop	_bp
      000044 22               [24]  152 	ret
                                    153 	.area CSEG    (CODE)
                                    154 	.area CONST   (CODE)
                                    155 	.area XINIT   (CODE)
                                    156 	.area CABS    (ABS,CODE)
