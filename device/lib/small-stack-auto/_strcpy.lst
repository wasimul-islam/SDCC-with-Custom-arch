                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strcpy
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strcpy
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'strcpy'
                                     91 ;------------------------------------------------------------
                                     92 ;s                         Allocated to stack - _bp -5
                                     93 ;d                         Allocated to stack - _bp +1
                                     94 ;d1                        Allocated to stack - _bp +4
                                     95 ;------------------------------------------------------------
                                     96 ;	_strcpy.c:36: char * strcpy ( char * d, const char * s )
                                     97 ;	-----------------------------------------
                                     98 ;	 function strcpy
                                     99 ;	-----------------------------------------
      000000                        100 _strcpy:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 85 81*00         [24]  110 	mov	_bp,sp
      000005 C0 82            [24]  111 	push	dpl
      000007 C0 83            [24]  112 	push	dph
      000009 C0 F0            [24]  113 	push	b
      00000B 05 81            [12]  114 	inc	sp
      00000D 05 81            [12]  115 	inc	sp
      00000F 05 81            [12]  116 	inc	sp
                                    117 ;	_strcpy.c:48: while (*d1++ = *s++) ;
      000011 E5*00            [12]  118 	mov	a,_bp
      000013 24 FB            [12]  119 	add	a,#0xfb
      000015 F8               [12]  120 	mov	r0,a
      000016 86 02            [24]  121 	mov	ar2,@r0
      000018 08               [12]  122 	inc	r0
      000019 86 03            [24]  123 	mov	ar3,@r0
      00001B 08               [12]  124 	inc	r0
      00001C 86 04            [24]  125 	mov	ar4,@r0
      00001E A8*00            [24]  126 	mov	r0,_bp
      000020 08               [12]  127 	inc	r0
      000021 E5*00            [12]  128 	mov	a,_bp
      000023 24 04            [12]  129 	add	a,#0x04
      000025 F9               [12]  130 	mov	r1,a
      000026 E6               [12]  131 	mov	a,@r0
      000027 F7               [12]  132 	mov	@r1,a
      000028 08               [12]  133 	inc	r0
      000029 E6               [12]  134 	mov	a,@r0
      00002A 09               [12]  135 	inc	r1
      00002B F7               [12]  136 	mov	@r1,a
      00002C 08               [12]  137 	inc	r0
      00002D E6               [12]  138 	mov	a,@r0
      00002E 09               [12]  139 	inc	r1
      00002F F7               [12]  140 	mov	@r1,a
      000030                        141 00101$:
      000030 8A 82            [24]  142 	mov	dpl,r2
      000032 8B 83            [24]  143 	mov	dph,r3
      000034 8C F0            [24]  144 	mov	b,r4
      000036 12r00r00         [24]  145 	lcall	__gptrget
      000039 FF               [12]  146 	mov	r7,a
      00003A A3               [24]  147 	inc	dptr
      00003B AA 82            [24]  148 	mov	r2,dpl
      00003D AB 83            [24]  149 	mov	r3,dph
      00003F E5*00            [12]  150 	mov	a,_bp
      000041 24 04            [12]  151 	add	a,#0x04
      000043 F8               [12]  152 	mov	r0,a
      000044 86 82            [24]  153 	mov	dpl,@r0
      000046 08               [12]  154 	inc	r0
      000047 86 83            [24]  155 	mov	dph,@r0
      000049 08               [12]  156 	inc	r0
      00004A 86 F0            [24]  157 	mov	b,@r0
      00004C EF               [12]  158 	mov	a,r7
      00004D 12r00r00         [24]  159 	lcall	__gptrput
      000050 A3               [24]  160 	inc	dptr
      000051 18               [12]  161 	dec	r0
      000052 18               [12]  162 	dec	r0
      000053 A6 82            [24]  163 	mov	@r0,dpl
      000055 08               [12]  164 	inc	r0
      000056 A6 83            [24]  165 	mov	@r0,dph
      000058 EF               [12]  166 	mov	a,r7
      000059 70 D5            [24]  167 	jnz	00101$
                                    168 ;	_strcpy.c:50: return d;
      00005B A8*00            [24]  169 	mov	r0,_bp
      00005D 08               [12]  170 	inc	r0
      00005E 86 82            [24]  171 	mov	dpl,@r0
      000060 08               [12]  172 	inc	r0
      000061 86 83            [24]  173 	mov	dph,@r0
      000063 08               [12]  174 	inc	r0
      000064 86 F0            [24]  175 	mov	b,@r0
                                    176 ;	_strcpy.c:52: }
      000066 85*00 81         [24]  177 	mov	sp,_bp
      000069 D0*00            [24]  178 	pop	_bp
      00006B 22               [24]  179 	ret
                                    180 	.area CSEG    (CODE)
                                    181 	.area CONST   (CODE)
                                    182 	.area XINIT   (CODE)
                                    183 	.area CABS    (ABS,CODE)
