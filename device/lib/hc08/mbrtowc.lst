                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbrtowc
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _mbrtowc_PARM_4
                             23 	.globl _mbrtowc_PARM_3
                             24 	.globl _mbrtowc_PARM_2
                             25 	.globl _mbrtowc
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
   0000                      30 _mbrtowc_sloc0_1_0:
   0000                      31 	.ds 2
   0002                      32 _mbrtowc_sloc1_1_0:
   0002                      33 	.ds 2
   0004                      34 _mbrtowc_sloc2_1_0:
   0004                      35 	.ds 1
   0005                      36 _mbrtowc_sloc3_1_0:
   0005                      37 	.ds 2
   0007                      38 _mbrtowc_sloc4_1_0:
   0007                      39 	.ds 2
   0009                      40 _mbrtowc_sloc5_1_0:
   0009                      41 	.ds 2
   000B                      42 _mbrtowc_sloc6_1_0:
   000B                      43 	.ds 2
   000D                      44 _mbrtowc_sloc7_1_0:
   000D                      45 	.ds 2
   000F                      46 _mbrtowc_sloc8_1_0:
   000F                      47 	.ds 1
   0010                      48 _mbrtowc_sloc9_1_0:
   0010                      49 	.ds 4
                             50 ;--------------------------------------------------------
                             51 ; overlayable items in ram
                             52 ;--------------------------------------------------------
                             53 ;--------------------------------------------------------
                             54 ; absolute ram data
                             55 ;--------------------------------------------------------
                             56 	.area IABS    (ABS)
                             57 	.area IABS    (ABS)
                             58 ;--------------------------------------------------------
                             59 ; absolute external ram data
                             60 ;--------------------------------------------------------
                             61 	.area XABS    (ABS)
                             62 ;--------------------------------------------------------
                             63 ; initialized external ram data
                             64 ;--------------------------------------------------------
                             65 	.area XISEG
                             66 ;--------------------------------------------------------
                             67 ; extended address mode data
                             68 ;--------------------------------------------------------
                             69 	.area XSEG
   0000                      70 _mbrtowc_PARM_2:
   0000                      71 	.ds 2
   0002                      72 _mbrtowc_PARM_3:
   0002                      73 	.ds 2
   0004                      74 _mbrtowc_PARM_4:
   0004                      75 	.ds 2
   0006                      76 _mbrtowc_pwc_65536_9:
   0006                      77 	.ds 2
   0008                      78 _mbrtowc_first_byte_65536_10:
   0008                      79 	.ds 1
   0009                      80 _mbrtowc_mbseq_65536_10:
   0009                      81 	.ds 4
   000D                      82 _mbrtowc_codepoint_65536_10:
   000D                      83 	.ds 4
   0011                      84 _mbrtowc_sps_65536_10:
   0011                      85 	.ds 3
                             86 ;--------------------------------------------------------
                             87 ; global & static initialisations
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area GSINIT  (CODE)
                             91 	.area GSFINAL (CODE)
                             92 	.area GSINIT  (CODE)
                             93 ;--------------------------------------------------------
                             94 ; Home
                             95 ;--------------------------------------------------------
                             96 	.area HOME    (CODE)
                             97 	.area HOME    (CODE)
                             98 ;--------------------------------------------------------
                             99 ; code
                            100 ;--------------------------------------------------------
                            101 	.area CSEG    (CODE)
                            102 ;------------------------------------------------------------
                            103 ;Allocation info for local variables in function 'mbrtowc'
                            104 ;------------------------------------------------------------
                            105 ;sloc0                     Allocated with name '_mbrtowc_sloc0_1_0'
                            106 ;sloc1                     Allocated with name '_mbrtowc_sloc1_1_0'
                            107 ;sloc2                     Allocated with name '_mbrtowc_sloc2_1_0'
                            108 ;sloc3                     Allocated with name '_mbrtowc_sloc3_1_0'
                            109 ;sloc4                     Allocated with name '_mbrtowc_sloc4_1_0'
                            110 ;sloc5                     Allocated with name '_mbrtowc_sloc5_1_0'
                            111 ;sloc6                     Allocated with name '_mbrtowc_sloc6_1_0'
                            112 ;sloc7                     Allocated with name '_mbrtowc_sloc7_1_0'
                            113 ;sloc8                     Allocated with name '_mbrtowc_sloc8_1_0'
                            114 ;sloc9                     Allocated with name '_mbrtowc_sloc9_1_0'
                            115 ;s                         Allocated with name '_mbrtowc_PARM_2'
                            116 ;n                         Allocated with name '_mbrtowc_PARM_3'
                            117 ;ps                        Allocated with name '_mbrtowc_PARM_4'
                            118 ;pwc                       Allocated with name '_mbrtowc_pwc_65536_9'
                            119 ;first_byte                Allocated with name '_mbrtowc_first_byte_65536_10'
                            120 ;seqlen                    Allocated to registers 
                            121 ;mbseq                     Allocated with name '_mbrtowc_mbseq_65536_10'
                            122 ;codepoint                 Allocated with name '_mbrtowc_codepoint_65536_10'
                            123 ;i                         Allocated to registers 
                            124 ;j                         Allocated to registers 
                            125 ;sps                       Allocated with name '_mbrtowc_sps_65536_10'
                            126 ;------------------------------------------------------------
                            127 ;../mbrtowc.c:32: size_t mbrtowc(wchar_t *restrict pwc, const char *restrict s, size_t n, mbstate_t *restrict ps)
                            128 ;	-----------------------------------------
                            129 ;	 function mbrtowc
                            130 ;	-----------------------------------------
                            131 ;	Register assignment might be sub-optimal.
                            132 ;	Stack space usage: 0 bytes.
   0000                     133 _mbrtowc:
   0000 C7r00r07      [ 4]  134 	sta	(_mbrtowc_pwc_65536_9 + 1)
   0003 CFr00r06      [ 4]  135 	stx	_mbrtowc_pwc_65536_9
                            136 ;../mbrtowc.c:41: if(!s)
   0006 C6r00r00      [ 4]  137 	lda	_mbrtowc_PARM_2
   0009 CAr00r01      [ 4]  138 	ora	(_mbrtowc_PARM_2 + 1)
   000C 26 16         [ 3]  139 	bne	00102$
                            140 ;../mbrtowc.c:42: return(mbrtowc(0, "", 1, ps));
   000E A6r00         [ 2]  141 	lda	#___str_0
   0010 C7r00r01      [ 4]  142 	sta	(_mbrtowc_PARM_2 + 1)
   0013 A6s00         [ 2]  143 	lda	#>___str_0
   0015 C7r00r00      [ 4]  144 	sta	_mbrtowc_PARM_2
   0018 4F            [ 1]  145 	clra
   0019 C7r00r02      [ 4]  146 	sta	_mbrtowc_PARM_3
   001C 4C            [ 1]  147 	inca
   001D C7r00r03      [ 4]  148 	sta	(_mbrtowc_PARM_3 + 1)
   0020 4A            [ 1]  149 	deca
   0021 97            [ 1]  150 	tax
   0022 20 DC         [ 3]  151 	bra	_mbrtowc
   0024                     152 00102$:
                            153 ;../mbrtowc.c:43: if(!n)
   0024 C6r00r02      [ 4]  154 	lda	_mbrtowc_PARM_3
   0027 CAr00r03      [ 4]  155 	ora	(_mbrtowc_PARM_3 + 1)
   002A 26 03         [ 3]  156 	bne	00280$
   002C CCr02rB1      [ 3]  157 	jmp	00128$
   002F                     158 00280$:
                            159 ;../mbrtowc.c:45: if(!ps)
   002F C6r00r04      [ 4]  160 	lda	_mbrtowc_PARM_4
   0032 CAr00r05      [ 4]  161 	ora	(_mbrtowc_PARM_4 + 1)
   0035 26 0A         [ 3]  162 	bne	00106$
                            163 ;../mbrtowc.c:47: ps = &sps;
   0037 A6r11         [ 2]  164 	lda	#_mbrtowc_sps_65536_10
   0039 C7r00r05      [ 4]  165 	sta	(_mbrtowc_PARM_4 + 1)
   003C A6s00         [ 2]  166 	lda	#>_mbrtowc_sps_65536_10
   003E C7r00r04      [ 4]  167 	sta	_mbrtowc_PARM_4
   0041                     168 00106$:
                            169 ;../mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
   0041 C6r00r04      [ 4]  170 	lda	_mbrtowc_PARM_4
   0044 B7*00         [ 3]  171 	sta	*_mbrtowc_sloc0_1_0
   0046 C6r00r05      [ 4]  172 	lda	(_mbrtowc_PARM_4 + 1)
   0049 B7*01         [ 3]  173 	sta	*(_mbrtowc_sloc0_1_0 + 1)
   004B 4E*00*02      [ 5]  174 	mov	*_mbrtowc_sloc0_1_0,*_mbrtowc_sloc1_1_0
   004E 4E*01*03      [ 5]  175 	mov	*(_mbrtowc_sloc0_1_0 + 1),*(_mbrtowc_sloc1_1_0 + 1)
   0051 4F            [ 1]  176 	clra
   0052                     177 00131$:
   0052 87            [ 2]  178 	psha
   0053 BB*03         [ 3]  179 	add	*(_mbrtowc_sloc1_1_0 + 1)
   0055 97            [ 1]  180 	tax
   0056 4F            [ 1]  181 	clra
   0057 B9*02         [ 3]  182 	adc	*_mbrtowc_sloc1_1_0
   0059 87            [ 2]  183 	psha
   005A 8A            [ 2]  184 	pulh
   005B 86            [ 2]  185 	pula
   005C FE            [ 2]  186 	ldx	,x
   005D BF*04         [ 3]  187 	stx	*_mbrtowc_sloc2_1_0
   005F 3D*04         [ 3]  188 	tst	*_mbrtowc_sloc2_1_0
   0061 27 10         [ 3]  189 	beq	00174$
   0063 A1 03         [ 2]  190 	cmp	#0x03
   0065 24 0C         [ 3]  191 	bcc	00174$
                            192 ;../mbrtowc.c:51: mbseq[i] = ps->c[i];
   0067 97            [ 1]  193 	tax
   0068 8C            [ 1]  194 	clrh
   0069 87            [ 2]  195 	psha
   006A B6*04         [ 3]  196 	lda	*_mbrtowc_sloc2_1_0
   006C D7r00r09      [ 4]  197 	sta	(_mbrtowc_mbseq_65536_10),x
   006F 86            [ 2]  198 	pula
                            199 ;../mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
   0070 4C            [ 1]  200 	inca
   0071 20 DF         [ 3]  201 	bra	00131$
   0073                     202 00174$:
   0073 B7*04         [ 3]  203 	sta	*_mbrtowc_sloc2_1_0
                            204 ;../mbrtowc.c:53: seqlen = 1;
   0075 6E 01*02      [ 4]  205 	mov	#0x01,*_mbrtowc_sloc1_1_0
                            206 ;../mbrtowc.c:54: first_byte = ps->c[0] ? ps->c[0] : *s;
   0078 C6r00r04      [ 4]  207 	lda	_mbrtowc_PARM_4
   007B 87            [ 2]  208 	psha
   007C 8A            [ 2]  209 	pulh
   007D CEr00r05      [ 4]  210 	ldx	(_mbrtowc_PARM_4 + 1)
   0080 FE            [ 2]  211 	ldx	,x
   0081 C6r00r00      [ 4]  212 	lda	_mbrtowc_PARM_2
   0084 B7*05         [ 3]  213 	sta	*_mbrtowc_sloc3_1_0
   0086 C6r00r01      [ 4]  214 	lda	(_mbrtowc_PARM_2 + 1)
   0089 B7*06         [ 3]  215 	sta	*(_mbrtowc_sloc3_1_0 + 1)
   008B 5D            [ 1]  216 	tstx
   008C 27 02         [ 3]  217 	beq	00147$
   008E 20 03         [ 3]  218 	bra	00148$
   0090                     219 00147$:
   0090 55*05         [ 4]  220 	ldhx	*_mbrtowc_sloc3_1_0
   0092 FE            [ 2]  221 	ldx	,x
   0093                     222 00148$:
   0093 CFr00r08      [ 4]  223 	stx	_mbrtowc_first_byte_65536_10
                            224 ;../mbrtowc.c:56: if(first_byte & 0x80)
   0096 C6r00r08      [ 4]  225 	lda	_mbrtowc_first_byte_65536_10
   0099 2A 45         [ 3]  226 	bpl     00112$
                            227 ;../mbrtowc.c:58: while (first_byte & (0x80 >> seqlen))
   009B AE 01         [ 2]  228 	ldx	#0x01
   009D                     229 00108$:
   009D 6E 80*08      [ 4]  230 	mov	#0x80,*(_mbrtowc_sloc4_1_0 + 1)
   00A0 6E 00*07      [ 4]  231 	mov	#0x00,*_mbrtowc_sloc4_1_0
   00A3 9F            [ 1]  232 	txa
   00A4 4D            [ 1]  233 	tsta
   00A5 27 06         [ 3]  234 	beq	00287$
   00A7                     235 00286$:
   00A7 37*07         [ 4]  236 	asr	*_mbrtowc_sloc4_1_0
   00A9 36*08         [ 4]  237 	ror	*(_mbrtowc_sloc4_1_0 + 1)
   00AB 4B FA         [ 3]  238 	dbnza	00286$
   00AD                     239 00287$:
   00AD C6r00r08      [ 4]  240 	lda	_mbrtowc_first_byte_65536_10
   00B0 B7*0A         [ 3]  241 	sta	*(_mbrtowc_sloc5_1_0 + 1)
   00B2 6E 00*09      [ 4]  242 	mov	#0x00,*_mbrtowc_sloc5_1_0
                            243 ;../mbrtowc.c:59: seqlen++;
   00B5 9F            [ 1]  244 	txa
   00B6 AB 01         [ 2]  245 	add	#0x01
                            246 ;../mbrtowc.c:58: while (first_byte & (0x80 >> seqlen))
   00B8 87            [ 2]  247 	psha
   00B9 B6*0A         [ 3]  248 	lda	*(_mbrtowc_sloc5_1_0 + 1)
   00BB B5*08         [ 3]  249 	bit	*(_mbrtowc_sloc4_1_0 + 1)
   00BD 26 04         [ 3]  250 	bne	00288$
   00BF B6*09         [ 3]  251 	lda	*_mbrtowc_sloc5_1_0
   00C1 B5*07         [ 3]  252 	bit	*_mbrtowc_sloc4_1_0
   00C3                     253 00288$:
   00C3 86            [ 2]  254 	pula
   00C4 27 03         [ 3]  255 	beq	00175$
                            256 ;../mbrtowc.c:59: seqlen++;
   00C6 97            [ 1]  257 	tax
   00C7 20 D4         [ 3]  258 	bra	00108$
   00C9                     259 00175$:
   00C9 BF*02         [ 3]  260 	stx	*_mbrtowc_sloc1_1_0
                            261 ;../mbrtowc.c:60: first_byte &= (0xff >> (seqlen + 1));
   00CB 45 00 FF      [ 3]  262 	ldhx	#0x00ff
   00CE 4D            [ 1]  263 	tsta
   00CF 27 08         [ 3]  264 	beq	00291$
   00D1                     265 00290$:
   00D1 8B            [ 2]  266 	pshh
   00D2 9E 67 01      [ 5]  267 	asr	1,s
   00D5 8A            [ 2]  268 	pulh
   00D6 56            [ 1]  269 	rorx
   00D7 4B F8         [ 3]  270 	dbnza	00290$
   00D9                     271 00291$:
   00D9 9F            [ 1]  272 	txa
   00DA C4r00r08      [ 4]  273 	and	_mbrtowc_first_byte_65536_10
   00DD C7r00r08      [ 4]  274 	sta	_mbrtowc_first_byte_65536_10
   00E0                     275 00112$:
                            276 ;../mbrtowc.c:63: if(seqlen > 4)
   00E0 B6*02         [ 3]  277 	lda	*_mbrtowc_sloc1_1_0
   00E2 A1 04         [ 2]  278 	cmp	#0x04
   00E4 23 03         [ 3]  279 	bls	00292$
   00E6 CCr02rB1      [ 3]  280 	jmp	00128$
   00E9                     281 00292$:
                            282 ;../mbrtowc.c:66: if(i + n < seqlen) // Incomplete multibyte character
   00E9 4E*04*0A      [ 5]  283 	mov	*_mbrtowc_sloc2_1_0,*(_mbrtowc_sloc5_1_0 + 1)
   00EC 6E 00*09      [ 4]  284 	mov	#0x00,*_mbrtowc_sloc5_1_0
   00EF B6*0A         [ 3]  285 	lda	*(_mbrtowc_sloc5_1_0 + 1)
   00F1 BE*09         [ 3]  286 	ldx	*_mbrtowc_sloc5_1_0
   00F3 CBr00r03      [ 4]  287 	add	(_mbrtowc_PARM_3 + 1)
   00F6 B7*08         [ 3]  288 	sta	*(_mbrtowc_sloc4_1_0 + 1)
   00F8 9F            [ 1]  289 	txa
   00F9 C9r00r02      [ 4]  290 	adc	_mbrtowc_PARM_3
   00FC B7*07         [ 3]  291 	sta	*_mbrtowc_sloc4_1_0
   00FE BE*02         [ 3]  292 	ldx	*_mbrtowc_sloc1_1_0
   0100 8C            [ 1]  293 	clrh
   0101 75*07         [ 4]  294 	cphx	*_mbrtowc_sloc4_1_0
   0103 23 4F         [ 3]  295 	bls	00164$
                            296 ;../mbrtowc.c:70: return(-2);
   0105 4E*00*07      [ 5]  297 	mov	*_mbrtowc_sloc0_1_0,*_mbrtowc_sloc4_1_0
   0108 4E*01*08      [ 5]  298 	mov	*(_mbrtowc_sloc0_1_0 + 1),*(_mbrtowc_sloc4_1_0 + 1)
   010B 4E*05*0B      [ 5]  299 	mov	*_mbrtowc_sloc3_1_0,*_mbrtowc_sloc6_1_0
   010E 4E*06*0C      [ 5]  300 	mov	*(_mbrtowc_sloc3_1_0 + 1),*(_mbrtowc_sloc6_1_0 + 1)
   0111 B6*04         [ 3]  301 	lda	*_mbrtowc_sloc2_1_0
   0113 CEr00r02      [ 4]  302 	ldx	_mbrtowc_PARM_3
   0116 89            [ 2]  303 	pshx
   0117 8A            [ 2]  304 	pulh
   0118 CEr00r03      [ 4]  305 	ldx	(_mbrtowc_PARM_3 + 1)
   011B                     306 00134$:
                            307 ;../mbrtowc.c:68: for(;n-- ; i++)
   011B 35*0D         [ 4]  308 	sthx	*_mbrtowc_sloc7_1_0
   011D AF FF         [ 2]  309 	aix	#-1
   011F 3D*0E         [ 3]  310 	tst	*(_mbrtowc_sloc7_1_0 + 1)
   0121 26 02         [ 3]  311 	bne	00294$
   0123 3D*0D         [ 3]  312 	tst	*_mbrtowc_sloc7_1_0
   0125                     313 00294$:
   0125 27 28         [ 3]  314 	beq	00115$
                            315 ;../mbrtowc.c:69: ps->c[i] = *s++;
   0127 87            [ 2]  316 	psha
   0128 BB*08         [ 3]  317 	add	*(_mbrtowc_sloc4_1_0 + 1)
   012A B7*0E         [ 3]  318 	sta	*(_mbrtowc_sloc7_1_0 + 1)
   012C 4F            [ 1]  319 	clra
   012D B9*07         [ 3]  320 	adc	*_mbrtowc_sloc4_1_0
   012F B7*0D         [ 3]  321 	sta	*_mbrtowc_sloc7_1_0
   0131 86            [ 2]  322 	pula
   0132 89            [ 2]  323 	pshx
   0133 8B            [ 2]  324 	pshh
   0134 55*0B         [ 4]  325 	ldhx	*_mbrtowc_sloc6_1_0
   0136 87            [ 2]  326 	psha
   0137 F6            [ 2]  327 	lda	,x
   0138 B7*0F         [ 3]  328 	sta	*_mbrtowc_sloc8_1_0
   013A AF 01         [ 2]  329 	aix	#1
   013C 35*0B         [ 4]  330 	sthx	*_mbrtowc_sloc6_1_0
   013E 86            [ 2]  331 	pula
   013F 8A            [ 2]  332 	pulh
   0140 88            [ 2]  333 	pulx
   0141 89            [ 2]  334 	pshx
   0142 8B            [ 2]  335 	pshh
   0143 87            [ 2]  336 	psha
   0144 55*0D         [ 4]  337 	ldhx	*_mbrtowc_sloc7_1_0
   0146 B6*0F         [ 3]  338 	lda	*_mbrtowc_sloc8_1_0
   0148 F7            [ 2]  339 	sta	,x
   0149 86            [ 2]  340 	pula
   014A 8A            [ 2]  341 	pulh
   014B 88            [ 2]  342 	pulx
                            343 ;../mbrtowc.c:68: for(;n-- ; i++)
   014C 4C            [ 1]  344 	inca
   014D 20 CC         [ 3]  345 	bra	00134$
   014F                     346 00115$:
                            347 ;../mbrtowc.c:70: return(-2);
   014F A6 FE         [ 2]  348 	lda	#0xfe
   0151 AE FF         [ 2]  349 	ldx	#0xff
   0153 81            [ 4]  350 	rts
                            351 ;../mbrtowc.c:73: for(j = 0; j < i; j++)
   0154                     352 00164$:
   0154 4E*00*0D      [ 5]  353 	mov	*_mbrtowc_sloc0_1_0,*_mbrtowc_sloc7_1_0
   0157 4E*01*0E      [ 5]  354 	mov	*(_mbrtowc_sloc0_1_0 + 1),*(_mbrtowc_sloc7_1_0 + 1)
   015A 4F            [ 1]  355 	clra
   015B                     356 00137$:
   015B B1*04         [ 3]  357 	cmp	*_mbrtowc_sloc2_1_0
   015D 24 0F         [ 3]  358 	bcc	00118$
                            359 ;../mbrtowc.c:74: ps->c[j] = 0;
   015F 87            [ 2]  360 	psha
   0160 BB*0E         [ 3]  361 	add	*(_mbrtowc_sloc7_1_0 + 1)
   0162 97            [ 1]  362 	tax
   0163 4F            [ 1]  363 	clra
   0164 B9*0D         [ 3]  364 	adc	*_mbrtowc_sloc7_1_0
   0166 87            [ 2]  365 	psha
   0167 8A            [ 2]  366 	pulh
   0168 4F            [ 1]  367 	clra
   0169 F7            [ 2]  368 	sta	,x
   016A 86            [ 2]  369 	pula
                            370 ;../mbrtowc.c:73: for(j = 0; j < i; j++)
   016B 4C            [ 1]  371 	inca
   016C 20 ED         [ 3]  372 	bra	00137$
   016E                     373 00118$:
                            374 ;../mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
   016E 4F            [ 1]  375 	clra
   016F C7r00r02      [ 4]  376 	sta	_mbrtowc_PARM_3
   0172 4C            [ 1]  377 	inca
   0173 C7r00r03      [ 4]  378 	sta	(_mbrtowc_PARM_3 + 1)
   0176 3D*04         [ 3]  379 	tst	*_mbrtowc_sloc2_1_0
   0178 27 04         [ 3]  380 	beq	00149$
   017A 55*09         [ 4]  381 	ldhx	*_mbrtowc_sloc5_1_0
   017C 20 03         [ 3]  382 	bra	00150$
   017E                     383 00149$:
   017E 45 00 01      [ 3]  384 	ldhx	#0x0001
   0181                     385 00150$:
   0181 BF*0F         [ 3]  386 	stx	*_mbrtowc_sloc8_1_0
   0183 4E*05*0D      [ 5]  387 	mov	*_mbrtowc_sloc3_1_0,*_mbrtowc_sloc7_1_0
   0186 4E*06*0E      [ 5]  388 	mov	*(_mbrtowc_sloc3_1_0 + 1),*(_mbrtowc_sloc7_1_0 + 1)
   0189 45 00 01      [ 3]  389 	ldhx	#0x0001
   018C 35*0B         [ 4]  390 	sthx	*_mbrtowc_sloc6_1_0
   018E                     391 00140$:
   018E B6*0F         [ 3]  392 	lda	*_mbrtowc_sloc8_1_0
   0190 B1*02         [ 3]  393 	cmp	*_mbrtowc_sloc1_1_0
   0192 24 33         [ 3]  394 	bcc	00121$
                            395 ;../mbrtowc.c:78: mbseq[i] = *s++;
   0194 BE*0F         [ 3]  396 	ldx	*_mbrtowc_sloc8_1_0
   0196 8C            [ 1]  397 	clrh
   0197 89            [ 2]  398 	pshx
   0198 8B            [ 2]  399 	pshh
   0199 55*0D         [ 4]  400 	ldhx	*_mbrtowc_sloc7_1_0
   019B F6            [ 2]  401 	lda	,x
   019C AF 01         [ 2]  402 	aix	#1
   019E 35*0D         [ 4]  403 	sthx	*_mbrtowc_sloc7_1_0
   01A0 8A            [ 2]  404 	pulh
   01A1 88            [ 2]  405 	pulx
   01A2 D7r00r09      [ 4]  406 	sta	(_mbrtowc_mbseq_65536_10),x
                            407 ;../mbrtowc.c:79: if((mbseq[i] & 0xc0) != 0x80)
   01A5 97            [ 1]  408 	tax
   01A6 8C            [ 1]  409 	clrh
   01A7 9F            [ 1]  410 	txa
   01A8 A4 C0         [ 2]  411 	and	#0xc0
   01AA 97            [ 1]  412 	tax
   01AB 65 00 80      [ 3]  413 	cphx	#0x0080
   01AE 27 03         [ 3]  414 	beq	00299$
   01B0 CCr02rB1      [ 3]  415 	jmp	00128$
   01B3                     416 00299$:
                            417 ;../mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
   01B3 3C*0F         [ 4]  418 	inc	*_mbrtowc_sloc8_1_0
   01B5 55*0B         [ 4]  419 	ldhx	*_mbrtowc_sloc6_1_0
   01B7 AF 01         [ 2]  420 	aix	#1
   01B9 35*0B         [ 4]  421 	sthx	*_mbrtowc_sloc6_1_0
   01BB B6*0B         [ 3]  422 	lda	*_mbrtowc_sloc6_1_0
   01BD C7r00r02      [ 4]  423 	sta	_mbrtowc_PARM_3
   01C0 B6*0C         [ 3]  424 	lda	*(_mbrtowc_sloc6_1_0 + 1)
   01C2 C7r00r03      [ 4]  425 	sta	(_mbrtowc_PARM_3 + 1)
   01C5 20 C7         [ 3]  426 	bra	00140$
   01C7                     427 00121$:
                            428 ;../mbrtowc.c:83: codepoint = first_byte;
   01C7 C6r00r08      [ 4]  429 	lda	_mbrtowc_first_byte_65536_10
   01CA C7r00r10      [ 4]  430 	sta	(_mbrtowc_codepoint_65536_10 + 3)
   01CD 4F            [ 1]  431 	clra
   01CE C7r00r0F      [ 4]  432 	sta	(_mbrtowc_codepoint_65536_10 + 2)
   01D1 C7r00r0E      [ 4]  433 	sta	(_mbrtowc_codepoint_65536_10 + 1)
   01D4 C7r00r0D      [ 4]  434 	sta	_mbrtowc_codepoint_65536_10
                            435 ;../mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
   01D7 45r00r0A      [ 3]  436 	ldhx	#(_mbrtowc_mbseq_65536_10 + 0x0001)
   01DA 35*0D         [ 4]  437 	sthx	*_mbrtowc_sloc7_1_0
   01DC B6*02         [ 3]  438 	lda	*_mbrtowc_sloc1_1_0
   01DE A0 01         [ 2]  439 	sub	#0x01
   01E0 B7*0F         [ 3]  440 	sta	*_mbrtowc_sloc8_1_0
   01E2                     441 00143$:
   01E2 3D*0F         [ 3]  442 	tst	*_mbrtowc_sloc8_1_0
   01E4 27 78         [ 3]  443 	beq	00122$
                            444 ;../mbrtowc.c:87: codepoint <<= 6;
   01E6 C6r00r0E      [ 4]  445 	lda	(_mbrtowc_codepoint_65536_10 + 1)
   01E9 CEr00r0D      [ 4]  446 	ldx	_mbrtowc_codepoint_65536_10
   01EC 48            [ 1]  447 	lsla
   01ED 59            [ 1]  448 	rolx
   01EE 48            [ 1]  449 	lsla
   01EF 59            [ 1]  450 	rolx
   01F0 48            [ 1]  451 	lsla
   01F1 59            [ 1]  452 	rolx
   01F2 48            [ 1]  453 	lsla
   01F3 59            [ 1]  454 	rolx
   01F4 48            [ 1]  455 	lsla
   01F5 59            [ 1]  456 	rolx
   01F6 48            [ 1]  457 	lsla
   01F7 59            [ 1]  458 	rolx
   01F8 C7r00r0E      [ 4]  459 	sta	(_mbrtowc_codepoint_65536_10 + 1)
   01FB CFr00r0D      [ 4]  460 	stx	_mbrtowc_codepoint_65536_10
   01FE C6r00r0F      [ 4]  461 	lda	(_mbrtowc_codepoint_65536_10 + 2)
   0201 44            [ 1]  462 	lsra	
   0202 44            [ 1]  463 	lsra	
   0203 CAr00r0E      [ 4]  464 	ora	(_mbrtowc_codepoint_65536_10 + 1)
   0206 C7r00r0E      [ 4]  465 	sta	(_mbrtowc_codepoint_65536_10 + 1)
   0209 C6r00r10      [ 4]  466 	lda	(_mbrtowc_codepoint_65536_10 + 3)
   020C CEr00r0F      [ 4]  467 	ldx	(_mbrtowc_codepoint_65536_10 + 2)
   020F 48            [ 1]  468 	lsla
   0210 59            [ 1]  469 	rolx
   0211 48            [ 1]  470 	lsla
   0212 59            [ 1]  471 	rolx
   0213 48            [ 1]  472 	lsla
   0214 59            [ 1]  473 	rolx
   0215 48            [ 1]  474 	lsla
   0216 59            [ 1]  475 	rolx
   0217 48            [ 1]  476 	lsla
   0218 59            [ 1]  477 	rolx
   0219 48            [ 1]  478 	lsla
   021A 59            [ 1]  479 	rolx
   021B C7r00r10      [ 4]  480 	sta	(_mbrtowc_codepoint_65536_10 + 3)
   021E CFr00r0F      [ 4]  481 	stx	(_mbrtowc_codepoint_65536_10 + 2)
                            482 ;../mbrtowc.c:88: codepoint |= (*s & 0x3f);
   0221 55*0D         [ 4]  483 	ldhx	*_mbrtowc_sloc7_1_0
   0223 F6            [ 2]  484 	lda	,x
   0224 AF 01         [ 2]  485 	aix	#1
   0226 35*0D         [ 4]  486 	sthx	*_mbrtowc_sloc7_1_0
   0228 5F            [ 1]  487 	clrx
   0229 A4 3F         [ 2]  488 	and	#0x3f
   022B 87            [ 2]  489 	psha
   022C 86            [ 2]  490 	pula
   022D B7*13         [ 3]  491 	sta	*(_mbrtowc_sloc9_1_0 + 3)
   022F 9F            [ 1]  492 	txa
   0230 B7*12         [ 3]  493 	sta	*(_mbrtowc_sloc9_1_0 + 2)
   0232 49            [ 1]  494 	rola	
   0233 4F            [ 1]  495 	clra	
   0234 A2 00         [ 2]  496 	sbc	#0x00
   0236 B7*11         [ 3]  497 	sta	*(_mbrtowc_sloc9_1_0 + 1)
   0238 B7*10         [ 3]  498 	sta	*_mbrtowc_sloc9_1_0
   023A C6r00r10      [ 4]  499 	lda	(_mbrtowc_codepoint_65536_10 + 3)
   023D BA*13         [ 3]  500 	ora	*(_mbrtowc_sloc9_1_0 + 3)
   023F C7r00r10      [ 4]  501 	sta	(_mbrtowc_codepoint_65536_10 + 3)
   0242 C6r00r0F      [ 4]  502 	lda	(_mbrtowc_codepoint_65536_10 + 2)
   0245 BA*12         [ 3]  503 	ora	*(_mbrtowc_sloc9_1_0 + 2)
   0247 C7r00r0F      [ 4]  504 	sta	(_mbrtowc_codepoint_65536_10 + 2)
   024A C6r00r0E      [ 4]  505 	lda	(_mbrtowc_codepoint_65536_10 + 1)
   024D BA*11         [ 3]  506 	ora	*(_mbrtowc_sloc9_1_0 + 1)
   024F C7r00r0E      [ 4]  507 	sta	(_mbrtowc_codepoint_65536_10 + 1)
   0252 C6r00r0D      [ 4]  508 	lda	_mbrtowc_codepoint_65536_10
   0255 BA*10         [ 3]  509 	ora	*_mbrtowc_sloc9_1_0
   0257 C7r00r0D      [ 4]  510 	sta	_mbrtowc_codepoint_65536_10
                            511 ;../mbrtowc.c:89: s++;
                            512 ;../mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
   025A 3A*0F         [ 4]  513 	dec	*_mbrtowc_sloc8_1_0
   025C 20 84         [ 3]  514 	bra	00143$
   025E                     515 00122$:
                            516 ;../mbrtowc.c:92: if(codepoint >= 0xd800 && codepoint <= 0xdfff) // UTF-16 surrogate.
   025E C6r00r0F      [ 4]  517 	lda	(_mbrtowc_codepoint_65536_10 + 2)
   0261 A0 D8         [ 2]  518 	sub	#0xd8
   0263 C6r00r0E      [ 4]  519 	lda	(_mbrtowc_codepoint_65536_10 + 1)
   0266 A2 00         [ 2]  520 	sbc	#0x00
   0268 C6r00r0D      [ 4]  521 	lda	_mbrtowc_codepoint_65536_10
   026B A2 00         [ 2]  522 	sbc	#0x00
   026D 25 18         [ 3]  523 	bcs	00124$
   026F A6 FF         [ 2]  524 	lda	#0xff
   0271 C0r00r10      [ 4]  525 	sub	(_mbrtowc_codepoint_65536_10 + 3)
   0274 A6 DF         [ 2]  526 	lda	#0xdf
   0276 C2r00r0F      [ 4]  527 	sbc	(_mbrtowc_codepoint_65536_10 + 2)
   0279 4F            [ 1]  528 	clra
   027A C2r00r0E      [ 4]  529 	sbc	(_mbrtowc_codepoint_65536_10 + 1)
   027D 4F            [ 1]  530 	clra
   027E C2r00r0D      [ 4]  531 	sbc	_mbrtowc_codepoint_65536_10
   0281 25 04         [ 3]  532 	bcs	00124$
                            533 ;../mbrtowc.c:93: return(-1);
   0283 A6 FF         [ 2]  534 	lda	#0xff
   0285 97            [ 1]  535 	tax
   0286 81            [ 4]  536 	rts
   0287                     537 00124$:
                            538 ;../mbrtowc.c:95: if(pwc)
   0287 C6r00r06      [ 4]  539 	lda	_mbrtowc_pwc_65536_9
   028A CAr00r07      [ 4]  540 	ora	(_mbrtowc_pwc_65536_9 + 1)
   028D 27 1B         [ 3]  541 	beq	00127$
                            542 ;../mbrtowc.c:96: *pwc = codepoint;
   028F C6r00r06      [ 4]  543 	lda	_mbrtowc_pwc_65536_9
   0292 87            [ 2]  544 	psha
   0293 8A            [ 2]  545 	pulh
   0294 CEr00r07      [ 4]  546 	ldx	(_mbrtowc_pwc_65536_9 + 1)
   0297 C6r00r0D      [ 4]  547 	lda	_mbrtowc_codepoint_65536_10
   029A F7            [ 2]  548 	sta	,x
   029B C6r00r0E      [ 4]  549 	lda	(_mbrtowc_codepoint_65536_10 + 1)
   029E E7 01         [ 3]  550 	sta	1,x
   02A0 C6r00r0F      [ 4]  551 	lda	(_mbrtowc_codepoint_65536_10 + 2)
   02A3 E7 02         [ 3]  552 	sta	2,x
   02A5 C6r00r10      [ 4]  553 	lda	(_mbrtowc_codepoint_65536_10 + 3)
   02A8 E7 03         [ 3]  554 	sta	3,x
   02AA                     555 00127$:
                            556 ;../mbrtowc.c:97: return(n);
   02AA CEr00r02      [ 4]  557 	ldx	_mbrtowc_PARM_3
   02AD C6r00r03      [ 4]  558 	lda	(_mbrtowc_PARM_3 + 1)
   02B0 81            [ 4]  559 	rts
                            560 ;../mbrtowc.c:99: eilseq:
   02B1                     561 00128$:
                            562 ;../mbrtowc.c:100: errno = EILSEQ;
   02B1 4F            [ 1]  563 	clra
   02B2 C7r00r00      [ 4]  564 	sta	_errno
   02B5 A6 54         [ 2]  565 	lda	#0x54
   02B7 C7r00r01      [ 4]  566 	sta	(_errno + 1)
                            567 ;../mbrtowc.c:101: return(-1);
   02BA A6 FF         [ 2]  568 	lda	#0xff
   02BC 97            [ 1]  569 	tax
                            570 ;../mbrtowc.c:102: }
   02BD 81            [ 4]  571 	rts
                            572 	.area CSEG    (CODE)
                            573 	.area CONST   (CODE)
                            574 	.area CONST   (CODE)
   0000                     575 ___str_0:
   0000 00                  576 	.db 0x00
                            577 	.area CSEG    (CODE)
                            578 	.area XINIT   (CODE)
                            579 	.area CABS    (ABS,CODE)
