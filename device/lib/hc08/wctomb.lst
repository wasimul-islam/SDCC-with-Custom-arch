                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module wctomb
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _wctomb_PARM_2
                             23 	.globl _wctomb
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area DSEG    (PAG)
                             28 ;--------------------------------------------------------
                             29 ; overlayable items in ram
                             30 ;--------------------------------------------------------
                             31 	.area	OSEG    (PAG, OVR)
   0000                      32 _wctomb_sloc0_1_0:
   0000                      33 	.ds 2
   0002                      34 _wctomb_sloc1_1_0:
   0002                      35 	.ds 4
   0006                      36 _wctomb_sloc2_1_0:
   0006                      37 	.ds 2
   0008                      38 _wctomb_sloc3_1_0:
   0008                      39 	.ds 1
   0009                      40 _wctomb_sloc4_1_0:
   0009                      41 	.ds 4
                             42 ;--------------------------------------------------------
                             43 ; absolute ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS)
                             46 	.area IABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; initialized external ram data
                             53 ;--------------------------------------------------------
                             54 	.area XISEG
                             55 ;--------------------------------------------------------
                             56 ; extended address mode data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG
   0000                      59 _wctomb_PARM_2:
   0000                      60 	.ds 4
   0004                      61 _wctomb_s_65536_36:
   0004                      62 	.ds 2
                             63 ;--------------------------------------------------------
                             64 ; global & static initialisations
                             65 ;--------------------------------------------------------
                             66 	.area HOME    (CODE)
                             67 	.area GSINIT  (CODE)
                             68 	.area GSFINAL (CODE)
                             69 	.area GSINIT  (CODE)
                             70 ;--------------------------------------------------------
                             71 ; Home
                             72 ;--------------------------------------------------------
                             73 	.area HOME    (CODE)
                             74 	.area HOME    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; code
                             77 ;--------------------------------------------------------
                             78 	.area CSEG    (CODE)
                             79 ;------------------------------------------------------------
                             80 ;Allocation info for local variables in function 'wctomb'
                             81 ;------------------------------------------------------------
                             82 ;wc                        Allocated with name '_wctomb_PARM_2'
                             83 ;s                         Allocated with name '_wctomb_s_65536_36'
                             84 ;sloc0                     Allocated with name '_wctomb_sloc0_1_0'
                             85 ;sloc1                     Allocated with name '_wctomb_sloc1_1_0'
                             86 ;sloc2                     Allocated with name '_wctomb_sloc2_1_0'
                             87 ;sloc3                     Allocated with name '_wctomb_sloc3_1_0'
                             88 ;sloc4                     Allocated with name '_wctomb_sloc4_1_0'
                             89 ;------------------------------------------------------------
                             90 ;../wctomb.c:31: int wctomb(char *s, wchar_t wc)
                             91 ;	-----------------------------------------
                             92 ;	 function wctomb
                             93 ;	-----------------------------------------
                             94 ;	Register assignment is optimal.
                             95 ;	Stack space usage: 0 bytes.
   0000                      96 _wctomb:
   0000 C7r00r05      [ 4]   97 	sta	(_wctomb_s_65536_36 + 1)
   0003 CFr00r04      [ 4]   98 	stx	_wctomb_s_65536_36
                             99 ;../wctomb.c:33: if(!s)
   0006 C6r00r04      [ 4]  100 	lda	_wctomb_s_65536_36
   0009 CAr00r05      [ 4]  101 	ora	(_wctomb_s_65536_36 + 1)
   000C 26 03         [ 3]  102 	bne	00102$
                            103 ;../wctomb.c:34: return(0);
   000E 4F            [ 1]  104 	clra
   000F 97            [ 1]  105 	tax
   0010 81            [ 4]  106 	rts
   0011                     107 00102$:
                            108 ;../wctomb.c:36: if(wc < 0x80)
   0011 C6r00r03      [ 4]  109 	lda	(_wctomb_PARM_2 + 3)
   0014 A0 80         [ 2]  110 	sub	#0x80
   0016 C6r00r02      [ 4]  111 	lda	(_wctomb_PARM_2 + 2)
   0019 A2 00         [ 2]  112 	sbc	#0x00
   001B C6r00r01      [ 4]  113 	lda	(_wctomb_PARM_2 + 1)
   001E A2 00         [ 2]  114 	sbc	#0x00
   0020 C6r00r00      [ 4]  115 	lda	_wctomb_PARM_2
   0023 A2 00         [ 2]  116 	sbc	#0x00
   0025 24 10         [ 3]  117 	bcc	00117$
                            118 ;../wctomb.c:38: s[0] = wc;
   0027 C6r00r03      [ 4]  119 	lda	(_wctomb_PARM_2 + 3)
   002A CEr00r04      [ 4]  120 	ldx	_wctomb_s_65536_36
   002D 89            [ 2]  121 	pshx
   002E 8A            [ 2]  122 	pulh
   002F CEr00r05      [ 4]  123 	ldx	(_wctomb_s_65536_36 + 1)
   0032 F7            [ 2]  124 	sta	,x
                            125 ;../wctomb.c:39: return(1);
   0033 A6 01         [ 2]  126 	lda	#0x01
   0035 5F            [ 1]  127 	clrx
   0036 81            [ 4]  128 	rts
   0037                     129 00117$:
                            130 ;../wctomb.c:44: s[1] = (wc >> 0) & 0x3f | 0x80;
   0037 C6r00r04      [ 4]  131 	lda	_wctomb_s_65536_36
   003A B7*00         [ 3]  132 	sta	*_wctomb_sloc0_1_0
   003C C6r00r05      [ 4]  133 	lda	(_wctomb_s_65536_36 + 1)
   003F B7*01         [ 3]  134 	sta	*(_wctomb_sloc0_1_0 + 1)
                            135 ;../wctomb.c:43: s[0] = (wc >> 6) & 0x1f | 0xc0;
   0041 C6r00r03      [ 4]  136 	lda	(_wctomb_PARM_2 + 3)
   0044 CEr00r02      [ 4]  137 	ldx	(_wctomb_PARM_2 + 2)
   0047 54            [ 1]  138 	lsrx
   0048 46            [ 1]  139 	rora
   0049 54            [ 1]  140 	lsrx
   004A 46            [ 1]  141 	rora
   004B 54            [ 1]  142 	lsrx
   004C 46            [ 1]  143 	rora
   004D 54            [ 1]  144 	lsrx
   004E 46            [ 1]  145 	rora
   004F 54            [ 1]  146 	lsrx
   0050 46            [ 1]  147 	rora
   0051 54            [ 1]  148 	lsrx
   0052 46            [ 1]  149 	rora
   0053 87            [ 2]  150 	psha
   0054 8A            [ 2]  151 	pulh
                            152 ;../wctomb.c:41: else if(wc < 0x800)
   0055 C6r00r02      [ 4]  153 	lda	(_wctomb_PARM_2 + 2)
   0058 A0 08         [ 2]  154 	sub	#0x08
   005A C6r00r01      [ 4]  155 	lda	(_wctomb_PARM_2 + 1)
   005D A2 00         [ 2]  156 	sbc	#0x00
   005F C6r00r00      [ 4]  157 	lda	_wctomb_PARM_2
   0062 A2 00         [ 2]  158 	sbc	#0x00
   0064 24 1E         [ 3]  159 	bcc	00114$
                            160 ;../wctomb.c:43: s[0] = (wc >> 6) & 0x1f | 0xc0;
   0066 8B            [ 2]  161 	pshh
   0067 86            [ 2]  162 	pula
   0068 A4 1F         [ 2]  163 	and	#0x1f
   006A AA C0         [ 2]  164 	ora	#0xc0
   006C CEr00r04      [ 4]  165 	ldx	_wctomb_s_65536_36
   006F 89            [ 2]  166 	pshx
   0070 8A            [ 2]  167 	pulh
   0071 CEr00r05      [ 4]  168 	ldx	(_wctomb_s_65536_36 + 1)
   0074 F7            [ 2]  169 	sta	,x
                            170 ;../wctomb.c:44: s[1] = (wc >> 0) & 0x3f | 0x80;
   0075 C6r00r03      [ 4]  171 	lda	(_wctomb_PARM_2 + 3)
   0078 A4 3F         [ 2]  172 	and	#0x3f
   007A AA 80         [ 2]  173 	ora	#0x80
   007C 55*00         [ 4]  174 	ldhx	*_wctomb_sloc0_1_0
   007E E7 01         [ 3]  175 	sta	1,x
                            176 ;../wctomb.c:45: return(2);
   0080 A6 02         [ 2]  177 	lda	#0x02
   0082 5F            [ 1]  178 	clrx
   0083 81            [ 4]  179 	rts
   0084                     180 00114$:
                            181 ;../wctomb.c:47: else if(wc >= 0xd800 && wc < 0xe000) // Unpaired surrogate
   0084 C6r00r02      [ 4]  182 	lda	(_wctomb_PARM_2 + 2)
   0087 A0 D8         [ 2]  183 	sub	#0xd8
   0089 C6r00r01      [ 4]  184 	lda	(_wctomb_PARM_2 + 1)
   008C A2 00         [ 2]  185 	sbc	#0x00
   008E C6r00r00      [ 4]  186 	lda	_wctomb_PARM_2
   0091 A2 00         [ 2]  187 	sbc	#0x00
   0093 25 15         [ 3]  188 	bcs	00110$
   0095 C6r00r02      [ 4]  189 	lda	(_wctomb_PARM_2 + 2)
   0098 A0 E0         [ 2]  190 	sub	#0xe0
   009A C6r00r01      [ 4]  191 	lda	(_wctomb_PARM_2 + 1)
   009D A2 00         [ 2]  192 	sbc	#0x00
   009F C6r00r00      [ 4]  193 	lda	_wctomb_PARM_2
   00A2 A2 00         [ 2]  194 	sbc	#0x00
   00A4 24 04         [ 3]  195 	bcc	00110$
                            196 ;../wctomb.c:48: return(-1);
   00A6 A6 FF         [ 2]  197 	lda	#0xff
   00A8 97            [ 1]  198 	tax
   00A9 81            [ 4]  199 	rts
   00AA                     200 00110$:
                            201 ;../wctomb.c:51: s[0] = (wc >> 12) & 0x0f | 0xe0;
   00AA C6r00r02      [ 4]  202 	lda	(_wctomb_PARM_2 + 2)
   00AD CEr00r01      [ 4]  203 	ldx	(_wctomb_PARM_2 + 1)
   00B0 54            [ 1]  204 	lsrx
   00B1 46            [ 1]  205 	rora
   00B2 54            [ 1]  206 	lsrx
   00B3 46            [ 1]  207 	rora
   00B4 54            [ 1]  208 	lsrx
   00B5 46            [ 1]  209 	rora
   00B6 54            [ 1]  210 	lsrx
   00B7 46            [ 1]  211 	rora
   00B8 B7*05         [ 3]  212 	sta	*(_wctomb_sloc1_1_0 + 3)
   00BA BF*04         [ 3]  213 	stx	*(_wctomb_sloc1_1_0 + 2)
   00BC CEr00r00      [ 4]  214 	ldx	_wctomb_PARM_2
   00BF 4F            [ 1]  215 	clra
   00C0 54            [ 1]  216 	lsrx
   00C1 46            [ 1]  217 	rora
   00C2 54            [ 1]  218 	lsrx
   00C3 46            [ 1]  219 	rora
   00C4 54            [ 1]  220 	lsrx
   00C5 46            [ 1]  221 	rora
   00C6 54            [ 1]  222 	lsrx
   00C7 46            [ 1]  223 	rora
   00C8 BA*04         [ 3]  224 	ora	*(_wctomb_sloc1_1_0 + 2)
   00CA B7*04         [ 3]  225 	sta	*(_wctomb_sloc1_1_0 + 2)
   00CC BF*03         [ 3]  226 	stx	*(_wctomb_sloc1_1_0 + 1)
   00CE 6E 00*02      [ 4]  227 	mov	#0x00,*_wctomb_sloc1_1_0
                            228 ;../wctomb.c:53: s[2] = (wc >> 0) & 0x3f  | 0x80;
   00D1 C6r00r04      [ 4]  229 	lda	_wctomb_s_65536_36
   00D4 B7*06         [ 3]  230 	sta	*_wctomb_sloc2_1_0
   00D6 C6r00r05      [ 4]  231 	lda	(_wctomb_s_65536_36 + 1)
   00D9 B7*07         [ 3]  232 	sta	*(_wctomb_sloc2_1_0 + 1)
                            233 ;../wctomb.c:51: s[0] = (wc >> 12) & 0x0f | 0xe0;
   00DB 4E*05*02      [ 5]  234 	mov	*(_wctomb_sloc1_1_0 + 3),*_wctomb_sloc1_1_0
                            235 ;../wctomb.c:52: s[1] = (wc >> 6) & 0x3f  | 0x80;
   00DE 8B            [ 2]  236 	pshh
   00DF 86            [ 2]  237 	pula
   00E0 A4 3F         [ 2]  238 	and	#0x3f
   00E2 AA 80         [ 2]  239 	ora	#0x80
   00E4 B7*08         [ 3]  240 	sta	*_wctomb_sloc3_1_0
                            241 ;../wctomb.c:49: else if(wc < 0x10000)
   00E6 C6r00r01      [ 4]  242 	lda	(_wctomb_PARM_2 + 1)
   00E9 A0 01         [ 2]  243 	sub	#0x01
   00EB C6r00r00      [ 4]  244 	lda	_wctomb_PARM_2
   00EE A2 00         [ 2]  245 	sbc	#0x00
   00F0 24 24         [ 3]  246 	bcc	00107$
                            247 ;../wctomb.c:51: s[0] = (wc >> 12) & 0x0f | 0xe0;
   00F2 B6*02         [ 3]  248 	lda	*_wctomb_sloc1_1_0
   00F4 A4 0F         [ 2]  249 	and	#0x0f
   00F6 AA E0         [ 2]  250 	ora	#0xe0
   00F8 CEr00r04      [ 4]  251 	ldx	_wctomb_s_65536_36
   00FB 89            [ 2]  252 	pshx
   00FC 8A            [ 2]  253 	pulh
   00FD CEr00r05      [ 4]  254 	ldx	(_wctomb_s_65536_36 + 1)
   0100 F7            [ 2]  255 	sta	,x
                            256 ;../wctomb.c:52: s[1] = (wc >> 6) & 0x3f  | 0x80;
   0101 55*00         [ 4]  257 	ldhx	*_wctomb_sloc0_1_0
   0103 B6*08         [ 3]  258 	lda	*_wctomb_sloc3_1_0
   0105 E7 01         [ 3]  259 	sta	1,x
                            260 ;../wctomb.c:53: s[2] = (wc >> 0) & 0x3f  | 0x80;
   0107 C6r00r03      [ 4]  261 	lda	(_wctomb_PARM_2 + 3)
   010A A4 3F         [ 2]  262 	and	#0x3f
   010C AA 80         [ 2]  263 	ora	#0x80
   010E 55*06         [ 4]  264 	ldhx	*_wctomb_sloc2_1_0
   0110 E7 02         [ 3]  265 	sta	2,x
                            266 ;../wctomb.c:54: return(3);
   0112 A6 03         [ 2]  267 	lda	#0x03
   0114 5F            [ 1]  268 	clrx
   0115 81            [ 4]  269 	rts
   0116                     270 00107$:
                            271 ;../wctomb.c:56: else if(wc < 0x110000)
   0116 C6r00r01      [ 4]  272 	lda	(_wctomb_PARM_2 + 1)
   0119 A0 11         [ 2]  273 	sub	#0x11
   011B C6r00r00      [ 4]  274 	lda	_wctomb_PARM_2
   011E A2 00         [ 2]  275 	sbc	#0x00
   0120 24 48         [ 3]  276 	bcc	00104$
                            277 ;../wctomb.c:58: s[0] = (wc >> 18) & 0x07 | 0xf0;
   0122 C6r00r01      [ 4]  278 	lda	(_wctomb_PARM_2 + 1)
   0125 CEr00r00      [ 4]  279 	ldx	_wctomb_PARM_2
   0128 54            [ 1]  280 	lsrx
   0129 46            [ 1]  281 	rora
   012A 54            [ 1]  282 	lsrx
   012B 46            [ 1]  283 	rora
   012C B7*0C         [ 3]  284 	sta	*(_wctomb_sloc4_1_0 + 3)
   012E BF*0B         [ 3]  285 	stx	*(_wctomb_sloc4_1_0 + 2)
   0130 6E 00*0A      [ 4]  286 	mov	#0x00,*(_wctomb_sloc4_1_0 + 1)
   0133 6E 00*09      [ 4]  287 	mov	#0x00,*_wctomb_sloc4_1_0
   0136 B6*0C         [ 3]  288 	lda	*(_wctomb_sloc4_1_0 + 3)
   0138 A4 07         [ 2]  289 	and	#0x07
   013A AA F0         [ 2]  290 	ora	#0xf0
   013C CEr00r04      [ 4]  291 	ldx	_wctomb_s_65536_36
   013F 89            [ 2]  292 	pshx
   0140 8A            [ 2]  293 	pulh
   0141 CEr00r05      [ 4]  294 	ldx	(_wctomb_s_65536_36 + 1)
   0144 F7            [ 2]  295 	sta	,x
                            296 ;../wctomb.c:59: s[1] = (wc >> 12) & 0x3f | 0x80;
   0145 B6*02         [ 3]  297 	lda	*_wctomb_sloc1_1_0
   0147 A4 3F         [ 2]  298 	and	#0x3f
   0149 AA 80         [ 2]  299 	ora	#0x80
   014B 55*00         [ 4]  300 	ldhx	*_wctomb_sloc0_1_0
   014D E7 01         [ 3]  301 	sta	1,x
                            302 ;../wctomb.c:60: s[2] = (wc >> 6) & 0x3f  | 0x80;
   014F 55*06         [ 4]  303 	ldhx	*_wctomb_sloc2_1_0
   0151 B6*08         [ 3]  304 	lda	*_wctomb_sloc3_1_0
   0153 E7 02         [ 3]  305 	sta	2,x
                            306 ;../wctomb.c:61: s[3] = (wc >> 0) & 0x3f  | 0x80;
   0155 C6r00r04      [ 4]  307 	lda	_wctomb_s_65536_36
   0158 87            [ 2]  308 	psha
   0159 8A            [ 2]  309 	pulh
   015A CEr00r05      [ 4]  310 	ldx	(_wctomb_s_65536_36 + 1)
   015D C6r00r03      [ 4]  311 	lda	(_wctomb_PARM_2 + 3)
   0160 A4 3F         [ 2]  312 	and	#0x3f
   0162 AA 80         [ 2]  313 	ora	#0x80
   0164 E7 03         [ 3]  314 	sta	3,x
                            315 ;../wctomb.c:62: return(4);
   0166 A6 04         [ 2]  316 	lda	#0x04
   0168 5F            [ 1]  317 	clrx
   0169 81            [ 4]  318 	rts
   016A                     319 00104$:
                            320 ;../wctomb.c:65: return(-1);
   016A A6 FF         [ 2]  321 	lda	#0xff
   016C 97            [ 1]  322 	tax
                            323 ;../wctomb.c:66: }
   016D 81            [ 4]  324 	rts
                            325 	.area CSEG    (CODE)
                            326 	.area CONST   (CODE)
                            327 	.area XINIT   (CODE)
                            328 	.area CABS    (ABS,CODE)
