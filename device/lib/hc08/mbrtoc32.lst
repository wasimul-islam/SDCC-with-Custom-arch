                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbrtoc32
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _mbrtowc
                             23 	.globl _mbrtoc32_PARM_4
                             24 	.globl _mbrtoc32_PARM_3
                             25 	.globl _mbrtoc32_PARM_2
                             26 	.globl _mbrtoc32
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _mbrtoc32_sloc0_1_0:
   0000                      32 	.ds 2
   0002                      33 _mbrtoc32_sloc1_1_0:
   0002                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in ram
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; initialized external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 _mbrtoc32_PARM_2:
   0000                      56 	.ds 2
   0002                      57 _mbrtoc32_PARM_3:
   0002                      58 	.ds 2
   0004                      59 _mbrtoc32_PARM_4:
   0004                      60 	.ds 2
   0006                      61 _mbrtoc32_pc32_65536_15:
   0006                      62 	.ds 2
   0008                      63 _mbrtoc32_wc_65536_16:
   0008                      64 	.ds 4
   000C                      65 _mbrtoc32_ret_65536_16:
   000C                      66 	.ds 2
   000E                      67 _mbrtoc32_sps_65536_16:
   000E                      68 	.ds 3
                             69 ;--------------------------------------------------------
                             70 ; global & static initialisations
                             71 ;--------------------------------------------------------
                             72 	.area HOME    (CODE)
                             73 	.area GSINIT  (CODE)
                             74 	.area GSFINAL (CODE)
                             75 	.area GSINIT  (CODE)
                             76 ;--------------------------------------------------------
                             77 ; Home
                             78 ;--------------------------------------------------------
                             79 	.area HOME    (CODE)
                             80 	.area HOME    (CODE)
                             81 ;--------------------------------------------------------
                             82 ; code
                             83 ;--------------------------------------------------------
                             84 	.area CSEG    (CODE)
                             85 ;------------------------------------------------------------
                             86 ;Allocation info for local variables in function 'mbrtoc32'
                             87 ;------------------------------------------------------------
                             88 ;sloc0                     Allocated with name '_mbrtoc32_sloc0_1_0'
                             89 ;sloc1                     Allocated with name '_mbrtoc32_sloc1_1_0'
                             90 ;s                         Allocated with name '_mbrtoc32_PARM_2'
                             91 ;n                         Allocated with name '_mbrtoc32_PARM_3'
                             92 ;ps                        Allocated with name '_mbrtoc32_PARM_4'
                             93 ;pc32                      Allocated with name '_mbrtoc32_pc32_65536_15'
                             94 ;wc                        Allocated with name '_mbrtoc32_wc_65536_16'
                             95 ;ret                       Allocated with name '_mbrtoc32_ret_65536_16'
                             96 ;sps                       Allocated with name '_mbrtoc32_sps_65536_16'
                             97 ;------------------------------------------------------------
                             98 ;../mbrtoc32.c:34: size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
                             99 ;	-----------------------------------------
                            100 ;	 function mbrtoc32
                            101 ;	-----------------------------------------
                            102 ;	Register assignment is optimal.
                            103 ;	Stack space usage: 0 bytes.
   0000                     104 _mbrtoc32:
   0000 C7r00r07      [ 4]  105 	sta	(_mbrtoc32_pc32_65536_15 + 1)
   0003 CFr00r06      [ 4]  106 	stx	_mbrtoc32_pc32_65536_15
                            107 ;../mbrtoc32.c:40: if(!ps)
   0006 C6r00r04      [ 4]  108 	lda	_mbrtoc32_PARM_4
   0009 CAr00r05      [ 4]  109 	ora	(_mbrtoc32_PARM_4 + 1)
   000C 26 0A         [ 3]  110 	bne	00102$
                            111 ;../mbrtoc32.c:41: ps = &sps;
   000E A6r0E         [ 2]  112 	lda	#_mbrtoc32_sps_65536_16
   0010 C7r00r05      [ 4]  113 	sta	(_mbrtoc32_PARM_4 + 1)
   0013 A6s00         [ 2]  114 	lda	#>_mbrtoc32_sps_65536_16
   0015 C7r00r04      [ 4]  115 	sta	_mbrtoc32_PARM_4
   0018                     116 00102$:
                            117 ;../mbrtoc32.c:44: return(mbrtowc(0, s, n, ps));
   0018 C6r00r00      [ 4]  118 	lda	_mbrtoc32_PARM_2
   001B 87            [ 2]  119 	psha
   001C 8A            [ 2]  120 	pulh
   001D CEr00r01      [ 4]  121 	ldx	(_mbrtoc32_PARM_2 + 1)
   0020 C6r00r02      [ 4]  122 	lda	_mbrtoc32_PARM_3
   0023 B7*00         [ 3]  123 	sta	*_mbrtoc32_sloc0_1_0
   0025 C6r00r03      [ 4]  124 	lda	(_mbrtoc32_PARM_3 + 1)
   0028 B7*01         [ 3]  125 	sta	*(_mbrtoc32_sloc0_1_0 + 1)
   002A C6r00r04      [ 4]  126 	lda	_mbrtoc32_PARM_4
   002D B7*02         [ 3]  127 	sta	*_mbrtoc32_sloc1_1_0
   002F C6r00r05      [ 4]  128 	lda	(_mbrtoc32_PARM_4 + 1)
   0032 B7*03         [ 3]  129 	sta	*(_mbrtoc32_sloc1_1_0 + 1)
                            130 ;../mbrtoc32.c:43: if(!pc32)
   0034 C6r00r06      [ 4]  131 	lda	_mbrtoc32_pc32_65536_15
   0037 CAr00r07      [ 4]  132 	ora	(_mbrtoc32_pc32_65536_15 + 1)
   003A 26 21         [ 3]  133 	bne	00104$
                            134 ;../mbrtoc32.c:44: return(mbrtowc(0, s, n, ps));
   003C 8B            [ 2]  135 	pshh
   003D 86            [ 2]  136 	pula
   003E C7r00r00      [ 4]  137 	sta	_mbrtowc_PARM_2
   0041 CFr00r01      [ 4]  138 	stx	(_mbrtowc_PARM_2 + 1)
   0044 B6*00         [ 3]  139 	lda	*_mbrtoc32_sloc0_1_0
   0046 C7r00r00      [ 4]  140 	sta	_mbrtowc_PARM_3
   0049 B6*01         [ 3]  141 	lda	*(_mbrtoc32_sloc0_1_0 + 1)
   004B C7r00r01      [ 4]  142 	sta	(_mbrtowc_PARM_3 + 1)
   004E B6*02         [ 3]  143 	lda	*_mbrtoc32_sloc1_1_0
   0050 C7r00r00      [ 4]  144 	sta	_mbrtowc_PARM_4
   0053 B6*03         [ 3]  145 	lda	*(_mbrtoc32_sloc1_1_0 + 1)
   0055 C7r00r01      [ 4]  146 	sta	(_mbrtowc_PARM_4 + 1)
   0058 4F            [ 1]  147 	clra
   0059 97            [ 1]  148 	tax
   005A CCr00r00      [ 3]  149 	jmp	_mbrtowc
   005D                     150 00104$:
                            151 ;../mbrtoc32.c:46: ret = mbrtowc(&wc, s, n, ps);
   005D 8B            [ 2]  152 	pshh
   005E 86            [ 2]  153 	pula
   005F C7r00r00      [ 4]  154 	sta	_mbrtowc_PARM_2
   0062 CFr00r01      [ 4]  155 	stx	(_mbrtowc_PARM_2 + 1)
   0065 B6*00         [ 3]  156 	lda	*_mbrtoc32_sloc0_1_0
   0067 C7r00r00      [ 4]  157 	sta	_mbrtowc_PARM_3
   006A B6*01         [ 3]  158 	lda	*(_mbrtoc32_sloc0_1_0 + 1)
   006C C7r00r01      [ 4]  159 	sta	(_mbrtowc_PARM_3 + 1)
   006F B6*02         [ 3]  160 	lda	*_mbrtoc32_sloc1_1_0
   0071 C7r00r00      [ 4]  161 	sta	_mbrtowc_PARM_4
   0074 B6*03         [ 3]  162 	lda	*(_mbrtoc32_sloc1_1_0 + 1)
   0076 C7r00r01      [ 4]  163 	sta	(_mbrtowc_PARM_4 + 1)
   0079 A6r08         [ 2]  164 	lda	#_mbrtoc32_wc_65536_16
   007B AEs00         [ 2]  165 	ldx	#>_mbrtoc32_wc_65536_16
   007D CDr00r00      [ 5]  166 	jsr	_mbrtowc
   0080 C7r00r0D      [ 4]  167 	sta	(_mbrtoc32_ret_65536_16 + 1)
   0083 CFr00r0C      [ 4]  168 	stx	_mbrtoc32_ret_65536_16
                            169 ;../mbrtoc32.c:48: if(ret <= MB_LEN_MAX)
   0086 A6 04         [ 2]  170 	lda	#0x04
   0088 C0r00r0D      [ 4]  171 	sub	(_mbrtoc32_ret_65536_16 + 1)
   008B 4F            [ 1]  172 	clra
   008C C2r00r0C      [ 4]  173 	sbc	_mbrtoc32_ret_65536_16
   008F 25 1B         [ 3]  174 	bcs	00106$
                            175 ;../mbrtoc32.c:49: *pc32 = wc;
   0091 C6r00r06      [ 4]  176 	lda	_mbrtoc32_pc32_65536_15
   0094 87            [ 2]  177 	psha
   0095 8A            [ 2]  178 	pulh
   0096 CEr00r07      [ 4]  179 	ldx	(_mbrtoc32_pc32_65536_15 + 1)
   0099 C6r00r08      [ 4]  180 	lda	_mbrtoc32_wc_65536_16
   009C F7            [ 2]  181 	sta	,x
   009D C6r00r09      [ 4]  182 	lda	(_mbrtoc32_wc_65536_16 + 1)
   00A0 E7 01         [ 3]  183 	sta	1,x
   00A2 C6r00r0A      [ 4]  184 	lda	(_mbrtoc32_wc_65536_16 + 2)
   00A5 E7 02         [ 3]  185 	sta	2,x
   00A7 C6r00r0B      [ 4]  186 	lda	(_mbrtoc32_wc_65536_16 + 3)
   00AA E7 03         [ 3]  187 	sta	3,x
   00AC                     188 00106$:
                            189 ;../mbrtoc32.c:51: return(ret);
   00AC CEr00r0C      [ 4]  190 	ldx	_mbrtoc32_ret_65536_16
   00AF C6r00r0D      [ 4]  191 	lda	(_mbrtoc32_ret_65536_16 + 1)
                            192 ;../mbrtoc32.c:52: }
   00B2 81            [ 4]  193 	rts
                            194 	.area CSEG    (CODE)
                            195 	.area CONST   (CODE)
                            196 	.area XINIT   (CODE)
                            197 	.area CABS    (ABS,CODE)
