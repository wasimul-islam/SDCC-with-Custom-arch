                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strstr
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _strstr_PARM_2
                             23 	.globl _strstr
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area DSEG    (PAG)
                             28 ;--------------------------------------------------------
                             29 ; overlayable items in ram
                             30 ;--------------------------------------------------------
                             31 	.area	OSEG    (PAG, OVR)
   0000                      32 _strstr_sloc0_1_0:
   0000                      33 	.ds 2
   0002                      34 _strstr_sloc1_1_0:
   0002                      35 	.ds 1
   0003                      36 _strstr_sloc2_1_0:
   0003                      37 	.ds 2
   0005                      38 _strstr_sloc3_1_0:
   0005                      39 	.ds 2
   0007                      40 _strstr_sloc4_1_0:
   0007                      41 	.ds 2
   0009                      42 _strstr_sloc5_1_0:
   0009                      43 	.ds 2
                             44 ;--------------------------------------------------------
                             45 ; absolute ram data
                             46 ;--------------------------------------------------------
                             47 	.area IABS    (ABS)
                             48 	.area IABS    (ABS)
                             49 ;--------------------------------------------------------
                             50 ; absolute external ram data
                             51 ;--------------------------------------------------------
                             52 	.area XABS    (ABS)
                             53 ;--------------------------------------------------------
                             54 ; initialized external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XISEG
                             57 ;--------------------------------------------------------
                             58 ; extended address mode data
                             59 ;--------------------------------------------------------
                             60 	.area XSEG
   0000                      61 _strstr_PARM_2:
   0000                      62 	.ds 2
   0002                      63 _strstr_cp_65536_27:
   0002                      64 	.ds 2
                             65 ;--------------------------------------------------------
                             66 ; global & static initialisations
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT  (CODE)
                             70 	.area GSFINAL (CODE)
                             71 	.area GSINIT  (CODE)
                             72 ;--------------------------------------------------------
                             73 ; Home
                             74 ;--------------------------------------------------------
                             75 	.area HOME    (CODE)
                             76 	.area HOME    (CODE)
                             77 ;--------------------------------------------------------
                             78 ; code
                             79 ;--------------------------------------------------------
                             80 	.area CSEG    (CODE)
                             81 ;------------------------------------------------------------
                             82 ;Allocation info for local variables in function 'strstr'
                             83 ;------------------------------------------------------------
                             84 ;str2                      Allocated with name '_strstr_PARM_2'
                             85 ;str1                      Allocated to registers x h 
                             86 ;cp                        Allocated with name '_strstr_cp_65536_27'
                             87 ;s1                        Allocated to registers 
                             88 ;s2                        Allocated to registers 
                             89 ;sloc0                     Allocated with name '_strstr_sloc0_1_0'
                             90 ;sloc1                     Allocated with name '_strstr_sloc1_1_0'
                             91 ;sloc2                     Allocated with name '_strstr_sloc2_1_0'
                             92 ;sloc3                     Allocated with name '_strstr_sloc3_1_0'
                             93 ;sloc4                     Allocated with name '_strstr_sloc4_1_0'
                             94 ;sloc5                     Allocated with name '_strstr_sloc5_1_0'
                             95 ;------------------------------------------------------------
                             96 ;../_strstr.c:31: char *strstr ( const char *str1, const char *str2 )
                             97 ;	-----------------------------------------
                             98 ;	 function strstr
                             99 ;	-----------------------------------------
                            100 ;	Register assignment is optimal.
                            101 ;	Stack space usage: 0 bytes.
   0000                     102 _strstr:
   0000 89            [ 2]  103 	pshx
   0001 97            [ 1]  104 	tax
   0002 8A            [ 2]  105 	pulh
                            106 ;../_strstr.c:33: const char *cp = str1;
   0003 8B            [ 2]  107 	pshh
   0004 86            [ 2]  108 	pula
   0005 C7r00r02      [ 4]  109 	sta	_strstr_cp_65536_27
   0008 CFr00r03      [ 4]  110 	stx	(_strstr_cp_65536_27 + 1)
                            111 ;../_strstr.c:37: if (!*str2)
   000B C6r00r00      [ 4]  112 	lda	_strstr_PARM_2
   000E B7*00         [ 3]  113 	sta	*_strstr_sloc0_1_0
   0010 C6r00r01      [ 4]  114 	lda	(_strstr_PARM_2 + 1)
   0013 B7*01         [ 3]  115 	sta	*(_strstr_sloc0_1_0 + 1)
   0015 89            [ 2]  116 	pshx
   0016 8B            [ 2]  117 	pshh
   0017 55*00         [ 4]  118 	ldhx	*_strstr_sloc0_1_0
   0019 F6            [ 2]  119 	lda	,x
   001A 8A            [ 2]  120 	pulh
   001B 88            [ 2]  121 	pulx
   001C 26 05         [ 3]  122 	bne	00122$
                            123 ;../_strstr.c:38: return ((char*)str1);
   001E 89            [ 2]  124 	pshx
   001F 8B            [ 2]  125 	pshh
   0020 88            [ 2]  126 	pulx
   0021 86            [ 2]  127 	pula
   0022 81            [ 4]  128 	rts
                            129 ;../_strstr.c:40: while (*cp)
   0023                     130 00122$:
   0023 35*03         [ 4]  131 	sthx	*_strstr_sloc2_1_0
   0025                     132 00110$:
   0025 55*03         [ 4]  133 	ldhx	*_strstr_sloc2_1_0
   0027 F6            [ 2]  134 	lda	,x
   0028 27 5A         [ 3]  135 	beq	00112$
                            136 ;../_strstr.c:43: s2 = str2;
   002A 4E*00*05      [ 5]  137 	mov	*_strstr_sloc0_1_0,*_strstr_sloc3_1_0
   002D 4E*01*06      [ 5]  138 	mov	*(_strstr_sloc0_1_0 + 1),*(_strstr_sloc3_1_0 + 1)
                            139 ;../_strstr.c:45: while (*s1 && *s2 && !(*s1-*s2))
   0030 4E*03*07      [ 5]  140 	mov	*_strstr_sloc2_1_0,*_strstr_sloc4_1_0
   0033 4E*04*08      [ 5]  141 	mov	*(_strstr_sloc2_1_0 + 1),*(_strstr_sloc4_1_0 + 1)
   0036                     142 00105$:
   0036 55*07         [ 4]  143 	ldhx	*_strstr_sloc4_1_0
   0038 F6            [ 2]  144 	lda	,x
   0039 55*05         [ 4]  145 	ldhx	*_strstr_sloc3_1_0
   003B FE            [ 2]  146 	ldx	,x
   003C BF*02         [ 3]  147 	stx	*_strstr_sloc1_1_0
   003E 4D            [ 1]  148 	tsta
   003F 27 26         [ 3]  149 	beq	00107$
   0041 3D*02         [ 3]  150 	tst	*_strstr_sloc1_1_0
   0043 27 22         [ 3]  151 	beq	00107$
   0045 5F            [ 1]  152 	clrx
   0046 4E*02*0A      [ 5]  153 	mov	*_strstr_sloc1_1_0,*(_strstr_sloc5_1_0 + 1)
   0049 BF*09         [ 3]  154 	stx	*_strstr_sloc5_1_0
   004B B0*0A         [ 3]  155 	sub	*(_strstr_sloc5_1_0 + 1)
   004D 87            [ 2]  156 	psha
   004E 9F            [ 1]  157 	txa
   004F B2*09         [ 3]  158 	sbc	*_strstr_sloc5_1_0
   0051 97            [ 1]  159 	tax
   0052 86            [ 2]  160 	pula
   0053 4D            [ 1]  161 	tsta
   0054 26 01         [ 3]  162 	bne	00160$
   0056 5D            [ 1]  163 	tstx
   0057                     164 00160$:
   0057 26 0E         [ 3]  165 	bne	00107$
                            166 ;../_strstr.c:46: s1++, s2++;
   0059 55*07         [ 4]  167 	ldhx	*_strstr_sloc4_1_0
   005B AF 01         [ 2]  168 	aix	#1
   005D 35*07         [ 4]  169 	sthx	*_strstr_sloc4_1_0
   005F 55*05         [ 4]  170 	ldhx	*_strstr_sloc3_1_0
   0061 AF 01         [ 2]  171 	aix	#1
   0063 35*05         [ 4]  172 	sthx	*_strstr_sloc3_1_0
   0065 20 CF         [ 3]  173 	bra	00105$
   0067                     174 00107$:
                            175 ;../_strstr.c:48: if (!*s2)
   0067 3D*02         [ 3]  176 	tst	*_strstr_sloc1_1_0
   0069 26 07         [ 3]  177 	bne	00109$
                            178 ;../_strstr.c:49: return ((char*)cp);
   006B CEr00r02      [ 4]  179 	ldx	_strstr_cp_65536_27
   006E C6r00r03      [ 4]  180 	lda	(_strstr_cp_65536_27 + 1)
   0071 81            [ 4]  181 	rts
   0072                     182 00109$:
                            183 ;../_strstr.c:51: cp++;
   0072 55*03         [ 4]  184 	ldhx	*_strstr_sloc2_1_0
   0074 AF 01         [ 2]  185 	aix	#1
   0076 35*03         [ 4]  186 	sthx	*_strstr_sloc2_1_0
   0078 B6*03         [ 3]  187 	lda	*_strstr_sloc2_1_0
   007A C7r00r02      [ 4]  188 	sta	_strstr_cp_65536_27
   007D B6*04         [ 3]  189 	lda	*(_strstr_sloc2_1_0 + 1)
   007F C7r00r03      [ 4]  190 	sta	(_strstr_cp_65536_27 + 1)
   0082 20 A1         [ 3]  191 	bra	00110$
   0084                     192 00112$:
                            193 ;../_strstr.c:54: return (NULL) ;
   0084 4F            [ 1]  194 	clra
   0085 97            [ 1]  195 	tax
                            196 ;../_strstr.c:55: }
   0086 81            [ 4]  197 	rts
                            198 	.area CSEG    (CODE)
                            199 	.area CONST   (CODE)
                            200 	.area XINIT   (CODE)
                            201 	.area CABS    (ABS,CODE)
