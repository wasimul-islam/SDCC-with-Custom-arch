                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module powf
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _logf
                             23 	.globl _expf
                             24 	.globl _powf_PARM_2
                             25 	.globl _powf_PARM_1
                             26 	.globl _powf
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _powf_sloc0_1_0:
   0000                      32 	.ds 4
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in ram
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; absolute ram data
                             38 ;--------------------------------------------------------
                             39 	.area IABS    (ABS)
                             40 	.area IABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area XABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; initialized external ram data
                             47 ;--------------------------------------------------------
                             48 	.area XISEG
                             49 ;--------------------------------------------------------
                             50 ; extended address mode data
                             51 ;--------------------------------------------------------
                             52 	.area XSEG
   0000                      53 _powf_PARM_1:
   0000                      54 	.ds 4
   0004                      55 _powf_PARM_2:
   0004                      56 	.ds 4
                             57 ;--------------------------------------------------------
                             58 ; global & static initialisations
                             59 ;--------------------------------------------------------
                             60 	.area HOME    (CODE)
                             61 	.area GSINIT  (CODE)
                             62 	.area GSFINAL (CODE)
                             63 	.area GSINIT  (CODE)
                             64 ;--------------------------------------------------------
                             65 ; Home
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area HOME    (CODE)
                             69 ;--------------------------------------------------------
                             70 ; code
                             71 ;--------------------------------------------------------
                             72 	.area CSEG    (CODE)
                             73 ;------------------------------------------------------------
                             74 ;Allocation info for local variables in function 'powf'
                             75 ;------------------------------------------------------------
                             76 ;sloc0                     Allocated with name '_powf_sloc0_1_0'
                             77 ;x                         Allocated with name '_powf_PARM_1'
                             78 ;y                         Allocated with name '_powf_PARM_2'
                             79 ;------------------------------------------------------------
                             80 ;../powf.c:35: float powf(float x, float y)
                             81 ;	-----------------------------------------
                             82 ;	 function powf
                             83 ;	-----------------------------------------
                             84 ;	Register assignment is optimal.
                             85 ;	Stack space usage: 0 bytes.
   0000                      86 _powf:
                             87 ;../powf.c:37: if(y == 0.0) return 1.0;
   0000 C6r00r04      [ 4]   88 	lda	_powf_PARM_2
   0003 A4 7F         [ 2]   89 	and	#0x7F
   0005 CAr00r05      [ 4]   90 	ora	(_powf_PARM_2 + 1)
   0008 CAr00r06      [ 4]   91 	ora	(_powf_PARM_2 + 2)
   000B CAr00r07      [ 4]   92 	ora	(_powf_PARM_2 + 3)
   000E 26 09         [ 3]   93 	bne	00102$
   0010 4F            [ 1]   94 	clra
   0011 97            [ 1]   95 	tax
   0012 6E 80*00      [ 4]   96 	mov	#0x80,*___SDCC_hc08_ret2
   0015 6E 3F*00      [ 4]   97 	mov	#0x3f,*___SDCC_hc08_ret3
   0018 81            [ 4]   98 	rts
   0019                      99 00102$:
                            100 ;../powf.c:38: if(y == 1.0) return x;
   0019 45r00r00      [ 3]  101 	ldhx	#___fseq_PARM_1
   001C C6r00r04      [ 4]  102 	lda	_powf_PARM_2
   001F F7            [ 2]  103 	sta	,x
   0020 C6r00r05      [ 4]  104 	lda	(_powf_PARM_2 + 1)
   0023 E7 01         [ 3]  105 	sta	1,x
   0025 C6r00r06      [ 4]  106 	lda	(_powf_PARM_2 + 2)
   0028 E7 02         [ 3]  107 	sta	2,x
   002A C6r00r07      [ 4]  108 	lda	(_powf_PARM_2 + 3)
   002D E7 03         [ 3]  109 	sta	3,x
   002F 45r00r00      [ 3]  110 	ldhx	#___fseq_PARM_2
   0032 A6 3F         [ 2]  111 	lda	#0x3f
   0034 F7            [ 2]  112 	sta	,x
   0035 A6 80         [ 2]  113 	lda	#0x80
   0037 E7 01         [ 3]  114 	sta	1,x
   0039 4F            [ 1]  115 	clra
   003A E7 02         [ 3]  116 	sta	2,x
   003C E7 03         [ 3]  117 	sta	3,x
   003E CDr00r00      [ 5]  118 	jsr	___fseq
   0041 4D            [ 1]  119 	tsta
   0042 27 11         [ 3]  120 	beq	00104$
   0044 C6r00r00      [ 4]  121 	lda	_powf_PARM_1
   0047 B7*00         [ 3]  122 	sta	*___SDCC_hc08_ret3
   0049 C6r00r01      [ 4]  123 	lda	(_powf_PARM_1 + 1)
   004C B7*00         [ 3]  124 	sta	*___SDCC_hc08_ret2
   004E CEr00r02      [ 4]  125 	ldx	(_powf_PARM_1 + 2)
   0051 C6r00r03      [ 4]  126 	lda	(_powf_PARM_1 + 3)
   0054 81            [ 4]  127 	rts
   0055                     128 00104$:
                            129 ;../powf.c:39: if(x <= 0.0) return 0.0;
   0055 45r00r00      [ 3]  130 	ldhx	#___fslt_PARM_1
   0058 4F            [ 1]  131 	clra
   0059 F7            [ 2]  132 	sta	,x
   005A E7 01         [ 3]  133 	sta	1,x
   005C E7 02         [ 3]  134 	sta	2,x
   005E E7 03         [ 3]  135 	sta	3,x
   0060 45r00r00      [ 3]  136 	ldhx	#___fslt_PARM_2
   0063 C6r00r00      [ 4]  137 	lda	_powf_PARM_1
   0066 F7            [ 2]  138 	sta	,x
   0067 C6r00r01      [ 4]  139 	lda	(_powf_PARM_1 + 1)
   006A E7 01         [ 3]  140 	sta	1,x
   006C C6r00r02      [ 4]  141 	lda	(_powf_PARM_1 + 2)
   006F E7 02         [ 3]  142 	sta	2,x
   0071 C6r00r03      [ 4]  143 	lda	(_powf_PARM_1 + 3)
   0074 E7 03         [ 3]  144 	sta	3,x
   0076 CDr00r00      [ 5]  145 	jsr	___fslt
   0079 4D            [ 1]  146 	tsta
   007A 26 07         [ 3]  147 	bne	00106$
   007C 4F            [ 1]  148 	clra
   007D 97            [ 1]  149 	tax
   007E B7*00         [ 3]  150 	sta	*___SDCC_hc08_ret2
   0080 B7*00         [ 3]  151 	sta	*___SDCC_hc08_ret3
   0082 81            [ 4]  152 	rts
   0083                     153 00106$:
                            154 ;../powf.c:40: return expf(logf(x) * y);
   0083 C6r00r03      [ 4]  155 	lda	(_powf_PARM_1 + 3)
   0086 87            [ 2]  156 	psha
   0087 C6r00r02      [ 4]  157 	lda	(_powf_PARM_1 + 2)
   008A 87            [ 2]  158 	psha
   008B C6r00r01      [ 4]  159 	lda	(_powf_PARM_1 + 1)
   008E 87            [ 2]  160 	psha
   008F C6r00r00      [ 4]  161 	lda	_powf_PARM_1
   0092 87            [ 2]  162 	psha
   0093 CDr00r00      [ 5]  163 	jsr	_logf
   0096 C7r00r03      [ 4]  164 	sta	(___fsmul_PARM_1 + 3)
   0099 CFr00r02      [ 4]  165 	stx	(___fsmul_PARM_1 + 2)
   009C B6*00         [ 3]  166 	lda	*___SDCC_hc08_ret2
   009E C7r00r01      [ 4]  167 	sta	(___fsmul_PARM_1 + 1)
   00A1 B6*00         [ 3]  168 	lda	*___SDCC_hc08_ret3
   00A3 C7r00r00      [ 4]  169 	sta	___fsmul_PARM_1
   00A6 A7 04         [ 2]  170 	ais	#4
   00A8 45r00r00      [ 3]  171 	ldhx	#___fsmul_PARM_2
   00AB C6r00r04      [ 4]  172 	lda	_powf_PARM_2
   00AE F7            [ 2]  173 	sta	,x
   00AF C6r00r05      [ 4]  174 	lda	(_powf_PARM_2 + 1)
   00B2 E7 01         [ 3]  175 	sta	1,x
   00B4 C6r00r06      [ 4]  176 	lda	(_powf_PARM_2 + 2)
   00B7 E7 02         [ 3]  177 	sta	2,x
   00B9 C6r00r07      [ 4]  178 	lda	(_powf_PARM_2 + 3)
   00BC E7 03         [ 3]  179 	sta	3,x
   00BE CDr00r00      [ 5]  180 	jsr	___fsmul
   00C1 B7*03         [ 3]  181 	sta	*(_powf_sloc0_1_0 + 3)
   00C3 BF*02         [ 3]  182 	stx	*(_powf_sloc0_1_0 + 2)
   00C5 4E*00*01      [ 5]  183 	mov	*___SDCC_hc08_ret2,*(_powf_sloc0_1_0 + 1)
   00C8 4E*00*00      [ 5]  184 	mov	*___SDCC_hc08_ret3,*_powf_sloc0_1_0
   00CB B6*03         [ 3]  185 	lda	*(_powf_sloc0_1_0 + 3)
   00CD 87            [ 2]  186 	psha
   00CE B6*02         [ 3]  187 	lda	*(_powf_sloc0_1_0 + 2)
   00D0 87            [ 2]  188 	psha
   00D1 B6*01         [ 3]  189 	lda	*(_powf_sloc0_1_0 + 1)
   00D3 87            [ 2]  190 	psha
   00D4 B6*00         [ 3]  191 	lda	*_powf_sloc0_1_0
   00D6 87            [ 2]  192 	psha
   00D7 CDr00r00      [ 5]  193 	jsr	_expf
   00DA B7*03         [ 3]  194 	sta	*(_powf_sloc0_1_0 + 3)
   00DC BF*02         [ 3]  195 	stx	*(_powf_sloc0_1_0 + 2)
   00DE 4E*00*01      [ 5]  196 	mov	*___SDCC_hc08_ret2,*(_powf_sloc0_1_0 + 1)
   00E1 4E*00*00      [ 5]  197 	mov	*___SDCC_hc08_ret3,*_powf_sloc0_1_0
   00E4 A7 04         [ 2]  198 	ais	#4
   00E6 4E*00*00      [ 5]  199 	mov	*_powf_sloc0_1_0,*___SDCC_hc08_ret3
   00E9 4E*01*00      [ 5]  200 	mov	*(_powf_sloc0_1_0 + 1),*___SDCC_hc08_ret2
   00EC BE*02         [ 3]  201 	ldx	*(_powf_sloc0_1_0 + 2)
   00EE B6*03         [ 3]  202 	lda	*(_powf_sloc0_1_0 + 3)
                            203 ;../powf.c:41: }
   00F0 81            [ 4]  204 	rts
                            205 	.area CSEG    (CODE)
                            206 	.area CONST   (CODE)
                            207 	.area XINIT   (CODE)
                            208 	.area CABS    (ABS,CODE)
