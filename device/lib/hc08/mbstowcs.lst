                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbstowcs
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _mbtowc
                             23 	.globl _mbstowcs_PARM_3
                             24 	.globl _mbstowcs_PARM_2
                             25 	.globl _mbstowcs
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
   0000                      30 _mbstowcs_sloc0_1_0:
   0000                      31 	.ds 2
   0002                      32 _mbstowcs_sloc1_1_0:
   0002                      33 	.ds 2
   0004                      34 _mbstowcs_sloc2_1_0:
   0004                      35 	.ds 2
                             36 ;--------------------------------------------------------
                             37 ; overlayable items in ram
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; initialized external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 _mbstowcs_PARM_2:
   0000                      57 	.ds 2
   0002                      58 _mbstowcs_PARM_3:
   0002                      59 	.ds 2
   0004                      60 _mbstowcs_m_65536_37:
   0004                      61 	.ds 2
                             62 ;--------------------------------------------------------
                             63 ; global & static initialisations
                             64 ;--------------------------------------------------------
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT  (CODE)
                             67 	.area GSFINAL (CODE)
                             68 	.area GSINIT  (CODE)
                             69 ;--------------------------------------------------------
                             70 ; Home
                             71 ;--------------------------------------------------------
                             72 	.area HOME    (CODE)
                             73 	.area HOME    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; code
                             76 ;--------------------------------------------------------
                             77 	.area CSEG    (CODE)
                             78 ;------------------------------------------------------------
                             79 ;Allocation info for local variables in function 'mbstowcs'
                             80 ;------------------------------------------------------------
                             81 ;sloc0                     Allocated with name '_mbstowcs_sloc0_1_0'
                             82 ;sloc1                     Allocated with name '_mbstowcs_sloc1_1_0'
                             83 ;sloc2                     Allocated with name '_mbstowcs_sloc2_1_0'
                             84 ;s                         Allocated with name '_mbstowcs_PARM_2'
                             85 ;n                         Allocated with name '_mbstowcs_PARM_3'
                             86 ;pwcs                      Allocated to registers 
                             87 ;m                         Allocated with name '_mbstowcs_m_65536_37'
                             88 ;b                         Allocated to registers a x 
                             89 ;------------------------------------------------------------
                             90 ;../mbstowcs.c:33: size_t mbstowcs(wchar_t *restrict pwcs, const char *restrict s, size_t n)
                             91 ;	-----------------------------------------
                             92 ;	 function mbstowcs
                             93 ;	-----------------------------------------
                             94 ;	Register assignment is optimal.
                             95 ;	Stack space usage: 0 bytes.
   0000                      96 _mbstowcs:
   0000 B7*01         [ 3]   97 	sta	*(_mbstowcs_sloc0_1_0 + 1)
   0002 BF*00         [ 3]   98 	stx	*_mbstowcs_sloc0_1_0
                             99 ;../mbstowcs.c:35: size_t m = 0;
   0004 4F            [ 1]  100 	clra
   0005 C7r00r04      [ 4]  101 	sta	_mbstowcs_m_65536_37
   0008 C7r00r05      [ 4]  102 	sta	(_mbstowcs_m_65536_37 + 1)
                            103 ;../mbstowcs.c:36: while(n--)
   000B 8C            [ 1]  104 	clrh
   000C 97            [ 1]  105 	tax
   000D 35*02         [ 4]  106 	sthx	*_mbstowcs_sloc1_1_0
   000F C6r00r02      [ 4]  107 	lda	_mbstowcs_PARM_3
   0012 B7*04         [ 3]  108 	sta	*_mbstowcs_sloc2_1_0
   0014 C6r00r03      [ 4]  109 	lda	(_mbstowcs_PARM_3 + 1)
   0017 B7*05         [ 3]  110 	sta	*(_mbstowcs_sloc2_1_0 + 1)
   0019                     111 00105$:
   0019 55*04         [ 4]  112 	ldhx	*_mbstowcs_sloc2_1_0
   001B 89            [ 2]  113 	pshx
   001C 8B            [ 2]  114 	pshh
   001D 55*04         [ 4]  115 	ldhx	*_mbstowcs_sloc2_1_0
   001F AF FF         [ 2]  116 	aix	#-1
   0021 35*04         [ 4]  117 	sthx	*_mbstowcs_sloc2_1_0
   0023 8A            [ 2]  118 	pulh
   0024 88            [ 2]  119 	pulx
   0025 65 00 00      [ 3]  120 	cphx	#0x00
   0028 27 57         [ 3]  121 	beq	00107$
                            122 ;../mbstowcs.c:38: int b = mbtowc(pwcs++, s, MB_LEN_MAX);
   002A 55*00         [ 4]  123 	ldhx	*_mbstowcs_sloc0_1_0
   002C 89            [ 2]  124 	pshx
   002D 8B            [ 2]  125 	pshh
   002E 55*00         [ 4]  126 	ldhx	*_mbstowcs_sloc0_1_0
   0030 AF 04         [ 2]  127 	aix	#4
   0032 35*00         [ 4]  128 	sthx	*_mbstowcs_sloc0_1_0
   0034 8A            [ 2]  129 	pulh
   0035 88            [ 2]  130 	pulx
   0036 C6r00r00      [ 4]  131 	lda	_mbstowcs_PARM_2
   0039 C7r00r00      [ 4]  132 	sta	_mbtowc_PARM_2
   003C C6r00r01      [ 4]  133 	lda	(_mbstowcs_PARM_2 + 1)
   003F C7r00r01      [ 4]  134 	sta	(_mbtowc_PARM_2 + 1)
   0042 4F            [ 1]  135 	clra
   0043 C7r00r00      [ 4]  136 	sta	_mbtowc_PARM_3
   0046 A6 04         [ 2]  137 	lda	#0x04
   0048 C7r00r01      [ 4]  138 	sta	(_mbtowc_PARM_3 + 1)
   004B 9F            [ 1]  139 	txa
   004C 8B            [ 2]  140 	pshh
   004D 88            [ 2]  141 	pulx
   004E CDr00r00      [ 5]  142 	jsr	_mbtowc
                            143 ;../mbstowcs.c:39: if(!b)
   0051 4D            [ 1]  144 	tsta
   0052 26 01         [ 3]  145 	bne	00131$
   0054 5D            [ 1]  146 	tstx
   0055                     147 00131$:
   0055 27 2A         [ 3]  148 	beq	00107$
                            149 ;../mbstowcs.c:41: if(b < 0)
   0057 87            [ 2]  150 	psha
   0058 9F            [ 1]  151 	txa
   0059 A0 00         [ 2]  152 	sub	#0x00
   005B 86            [ 2]  153 	pula
   005C 90 04         [ 3]  154 	bge	00104$
                            155 ;../mbstowcs.c:42: return(-1);
   005E A6 FF         [ 2]  156 	lda	#0xff
   0060 97            [ 1]  157 	tax
   0061 81            [ 4]  158 	rts
   0062                     159 00104$:
                            160 ;../mbstowcs.c:43: s += b;
   0062 CBr00r01      [ 4]  161 	add	(_mbstowcs_PARM_2 + 1)
   0065 C7r00r01      [ 4]  162 	sta	(_mbstowcs_PARM_2 + 1)
   0068 9F            [ 1]  163 	txa
   0069 C9r00r00      [ 4]  164 	adc	_mbstowcs_PARM_2
   006C C7r00r00      [ 4]  165 	sta	_mbstowcs_PARM_2
                            166 ;../mbstowcs.c:44: m++;
   006F 55*02         [ 4]  167 	ldhx	*_mbstowcs_sloc1_1_0
   0071 AF 01         [ 2]  168 	aix	#1
   0073 35*02         [ 4]  169 	sthx	*_mbstowcs_sloc1_1_0
   0075 B6*02         [ 3]  170 	lda	*_mbstowcs_sloc1_1_0
   0077 C7r00r04      [ 4]  171 	sta	_mbstowcs_m_65536_37
   007A B6*03         [ 3]  172 	lda	*(_mbstowcs_sloc1_1_0 + 1)
   007C C7r00r05      [ 4]  173 	sta	(_mbstowcs_m_65536_37 + 1)
   007F 20 98         [ 3]  174 	bra	00105$
   0081                     175 00107$:
                            176 ;../mbstowcs.c:47: return(m);
   0081 CEr00r04      [ 4]  177 	ldx	_mbstowcs_m_65536_37
   0084 C6r00r05      [ 4]  178 	lda	(_mbstowcs_m_65536_37 + 1)
                            179 ;../mbstowcs.c:48: }
   0087 81            [ 4]  180 	rts
                            181 	.area CSEG    (CODE)
                            182 	.area CONST   (CODE)
                            183 	.area XINIT   (CODE)
                            184 	.area CABS    (ABS,CODE)
