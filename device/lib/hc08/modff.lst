                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module modff
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _modff_PARM_2
                             23 	.globl _modff_PARM_1
                             24 	.globl _modff
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
   0000                      29 _modff_sloc0_1_0:
   0000                      30 	.ds 4
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; absolute ram data
                             36 ;--------------------------------------------------------
                             37 	.area IABS    (ABS)
                             38 	.area IABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; initialized external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 _modff_PARM_1:
   0000                      52 	.ds 4
   0004                      53 _modff_PARM_2:
   0004                      54 	.ds 2
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area HOME    (CODE)
                             59 	.area GSINIT  (CODE)
                             60 	.area GSFINAL (CODE)
                             61 	.area GSINIT  (CODE)
                             62 ;--------------------------------------------------------
                             63 ; Home
                             64 ;--------------------------------------------------------
                             65 	.area HOME    (CODE)
                             66 	.area HOME    (CODE)
                             67 ;--------------------------------------------------------
                             68 ; code
                             69 ;--------------------------------------------------------
                             70 	.area CSEG    (CODE)
                             71 ;------------------------------------------------------------
                             72 ;Allocation info for local variables in function 'modff'
                             73 ;------------------------------------------------------------
                             74 ;sloc0                     Allocated with name '_modff_sloc0_1_0'
                             75 ;x                         Allocated with name '_modff_PARM_1'
                             76 ;y                         Allocated with name '_modff_PARM_2'
                             77 ;------------------------------------------------------------
                             78 ;../modff.c:33: float modff(float x, float * y)
                             79 ;	-----------------------------------------
                             80 ;	 function modff
                             81 ;	-----------------------------------------
                             82 ;	Register assignment is optimal.
                             83 ;	Stack space usage: 0 bytes.
   0000                      84 _modff:
                             85 ;../modff.c:35: *y=(long)x;
   0000 C6r00r04      [ 4]   86 	lda	_modff_PARM_2
   0003 87            [ 2]   87 	psha
   0004 8A            [ 2]   88 	pulh
   0005 CEr00r05      [ 4]   89 	ldx	(_modff_PARM_2 + 1)
   0008 C6r00r00      [ 4]   90 	lda	_modff_PARM_1
   000B C7r00r00      [ 4]   91 	sta	___fs2slong_PARM_1
   000E C6r00r01      [ 4]   92 	lda	(_modff_PARM_1 + 1)
   0011 C7r00r01      [ 4]   93 	sta	(___fs2slong_PARM_1 + 1)
   0014 C6r00r02      [ 4]   94 	lda	(_modff_PARM_1 + 2)
   0017 C7r00r02      [ 4]   95 	sta	(___fs2slong_PARM_1 + 2)
   001A C6r00r03      [ 4]   96 	lda	(_modff_PARM_1 + 3)
   001D C7r00r03      [ 4]   97 	sta	(___fs2slong_PARM_1 + 3)
   0020 89            [ 2]   98 	pshx
   0021 8B            [ 2]   99 	pshh
   0022 CDr00r00      [ 5]  100 	jsr	___fs2slong
   0025 C7r00r03      [ 4]  101 	sta	(___slong2fs_PARM_1 + 3)
   0028 CFr00r02      [ 4]  102 	stx	(___slong2fs_PARM_1 + 2)
   002B B6*00         [ 3]  103 	lda	*___SDCC_hc08_ret2
   002D C7r00r01      [ 4]  104 	sta	(___slong2fs_PARM_1 + 1)
   0030 B6*00         [ 3]  105 	lda	*___SDCC_hc08_ret3
   0032 C7r00r00      [ 4]  106 	sta	___slong2fs_PARM_1
   0035 8A            [ 2]  107 	pulh
   0036 88            [ 2]  108 	pulx
   0037 89            [ 2]  109 	pshx
   0038 8B            [ 2]  110 	pshh
   0039 CDr00r00      [ 5]  111 	jsr	___slong2fs
   003C B7*03         [ 3]  112 	sta	*(_modff_sloc0_1_0 + 3)
   003E BF*02         [ 3]  113 	stx	*(_modff_sloc0_1_0 + 2)
   0040 4E*00*01      [ 5]  114 	mov	*___SDCC_hc08_ret2,*(_modff_sloc0_1_0 + 1)
   0043 4E*00*00      [ 5]  115 	mov	*___SDCC_hc08_ret3,*_modff_sloc0_1_0
   0046 8A            [ 2]  116 	pulh
   0047 88            [ 2]  117 	pulx
   0048 B6*00         [ 3]  118 	lda	*_modff_sloc0_1_0
   004A F7            [ 2]  119 	sta	,x
   004B B6*01         [ 3]  120 	lda	*(_modff_sloc0_1_0 + 1)
   004D E7 01         [ 3]  121 	sta	1,x
   004F B6*02         [ 3]  122 	lda	*(_modff_sloc0_1_0 + 2)
   0051 E7 02         [ 3]  123 	sta	2,x
   0053 B6*03         [ 3]  124 	lda	*(_modff_sloc0_1_0 + 3)
   0055 E7 03         [ 3]  125 	sta	3,x
                            126 ;../modff.c:36: return (x-*y);
   0057 45r00r00      [ 3]  127 	ldhx	#___fssub_PARM_1
   005A C6r00r00      [ 4]  128 	lda	_modff_PARM_1
   005D F7            [ 2]  129 	sta	,x
   005E C6r00r01      [ 4]  130 	lda	(_modff_PARM_1 + 1)
   0061 E7 01         [ 3]  131 	sta	1,x
   0063 C6r00r02      [ 4]  132 	lda	(_modff_PARM_1 + 2)
   0066 E7 02         [ 3]  133 	sta	2,x
   0068 C6r00r03      [ 4]  134 	lda	(_modff_PARM_1 + 3)
   006B E7 03         [ 3]  135 	sta	3,x
   006D 45r00r00      [ 3]  136 	ldhx	#___fssub_PARM_2
   0070 5E*00         [ 4]  137 	mov	*_modff_sloc0_1_0,x+
   0072 5E*01         [ 4]  138 	mov	*(_modff_sloc0_1_0 + 1),x+
   0074 5E*02         [ 4]  139 	mov	*(_modff_sloc0_1_0 + 2),x+
   0076 5E*03         [ 4]  140 	mov	*(_modff_sloc0_1_0 + 3),x+
   0078 CDr00r00      [ 5]  141 	jsr	___fssub
   007B B7*03         [ 3]  142 	sta	*(_modff_sloc0_1_0 + 3)
   007D BF*02         [ 3]  143 	stx	*(_modff_sloc0_1_0 + 2)
   007F 4E*00*01      [ 5]  144 	mov	*___SDCC_hc08_ret2,*(_modff_sloc0_1_0 + 1)
   0082 4E*00*00      [ 5]  145 	mov	*___SDCC_hc08_ret3,*_modff_sloc0_1_0
   0085 4E*00*00      [ 5]  146 	mov	*_modff_sloc0_1_0,*___SDCC_hc08_ret3
   0088 4E*01*00      [ 5]  147 	mov	*(_modff_sloc0_1_0 + 1),*___SDCC_hc08_ret2
   008B BE*02         [ 3]  148 	ldx	*(_modff_sloc0_1_0 + 2)
   008D B6*03         [ 3]  149 	lda	*(_modff_sloc0_1_0 + 3)
                            150 ;../modff.c:37: }
   008F 81            [ 4]  151 	rts
                            152 	.area CSEG    (CODE)
                            153 	.area CONST   (CODE)
                            154 	.area XINIT   (CODE)
                            155 	.area CABS    (ABS,CODE)
