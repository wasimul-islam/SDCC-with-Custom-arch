                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _memmove
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _memmove_PARM_3
                             23 	.globl _memmove_PARM_2
                             24 	.globl _memmove
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _memmove_sloc0_1_0:
   0000                      34 	.ds 2
   0002                      35 _memmove_sloc1_1_0:
   0002                      36 	.ds 2
   0004                      37 _memmove_sloc2_1_0:
   0004                      38 	.ds 2
   0006                      39 _memmove_sloc3_1_0:
   0006                      40 	.ds 2
                             41 ;--------------------------------------------------------
                             42 ; absolute ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS)
                             45 	.area IABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; absolute external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; initialized external ram data
                             52 ;--------------------------------------------------------
                             53 	.area XISEG
                             54 ;--------------------------------------------------------
                             55 ; extended address mode data
                             56 ;--------------------------------------------------------
                             57 	.area XSEG
   0000                      58 _memmove_PARM_2:
   0000                      59 	.ds 2
   0002                      60 _memmove_PARM_3:
   0002                      61 	.ds 2
   0004                      62 _memmove_dst_65536_26:
   0004                      63 	.ds 2
   0006                      64 _memmove_c_65536_27:
   0006                      65 	.ds 2
                             66 ;--------------------------------------------------------
                             67 ; global & static initialisations
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area GSINIT  (CODE)
                             71 	.area GSFINAL (CODE)
                             72 	.area GSINIT  (CODE)
                             73 ;--------------------------------------------------------
                             74 ; Home
                             75 ;--------------------------------------------------------
                             76 	.area HOME    (CODE)
                             77 	.area HOME    (CODE)
                             78 ;--------------------------------------------------------
                             79 ; code
                             80 ;--------------------------------------------------------
                             81 	.area CSEG    (CODE)
                             82 ;------------------------------------------------------------
                             83 ;Allocation info for local variables in function 'memmove'
                             84 ;------------------------------------------------------------
                             85 ;src                       Allocated with name '_memmove_PARM_2'
                             86 ;size                      Allocated with name '_memmove_PARM_3'
                             87 ;dst                       Allocated with name '_memmove_dst_65536_26'
                             88 ;c                         Allocated with name '_memmove_c_65536_27'
                             89 ;d                         Allocated to registers 
                             90 ;s                         Allocated to registers 
                             91 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                             92 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                             93 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                             94 ;sloc3                     Allocated with name '_memmove_sloc3_1_0'
                             95 ;------------------------------------------------------------
                             96 ;../_memmove.c:35: void *memmove (void *dst, const void *src, size_t size)
                             97 ;	-----------------------------------------
                             98 ;	 function memmove
                             99 ;	-----------------------------------------
                            100 ;	Register assignment is optimal.
                            101 ;	Stack space usage: 0 bytes.
   0000                     102 _memmove:
   0000 C7r00r05      [ 4]  103 	sta	(_memmove_dst_65536_26 + 1)
   0003 CFr00r04      [ 4]  104 	stx	_memmove_dst_65536_26
                            105 ;../_memmove.c:37: size_t c = size;
   0006 C6r00r02      [ 4]  106 	lda	_memmove_PARM_3
   0009 C7r00r06      [ 4]  107 	sta	_memmove_c_65536_27
   000C C6r00r03      [ 4]  108 	lda	(_memmove_PARM_3 + 1)
   000F C7r00r07      [ 4]  109 	sta	(_memmove_c_65536_27 + 1)
                            110 ;../_memmove.c:38: if (c == 0 || dst == src)
   0012 C6r00r06      [ 4]  111 	lda	_memmove_c_65536_27
   0015 CAr00r07      [ 4]  112 	ora	(_memmove_c_65536_27 + 1)
   0018 27 12         [ 3]  113 	beq	00101$
   001A C6r00r05      [ 4]  114 	lda	(_memmove_dst_65536_26 + 1)
   001D C1r00r01      [ 4]  115 	cmp	(_memmove_PARM_2 + 1)
   0020 26 08         [ 3]  116 	bne	00143$
   0022 C6r00r04      [ 4]  117 	lda	_memmove_dst_65536_26
   0025 C1r00r00      [ 4]  118 	cmp	_memmove_PARM_2
   0028 27 02         [ 3]  119 	beq	00144$
   002A                     120 00143$:
   002A 20 07         [ 3]  121 	bra	00102$
   002C                     122 00144$:
   002C                     123 00101$:
                            124 ;../_memmove.c:39: return dst;
   002C CEr00r04      [ 4]  125 	ldx	_memmove_dst_65536_26
   002F C6r00r05      [ 4]  126 	lda	(_memmove_dst_65536_26 + 1)
   0032 81            [ 4]  127 	rts
   0033                     128 00102$:
                            129 ;../_memmove.c:41: char *d = dst;
   0033 C6r00r04      [ 4]  130 	lda	_memmove_dst_65536_26
   0036 87            [ 2]  131 	psha
   0037 8A            [ 2]  132 	pulh
   0038 CEr00r05      [ 4]  133 	ldx	(_memmove_dst_65536_26 + 1)
                            134 ;../_memmove.c:42: const char *s = src;
   003B C6r00r01      [ 4]  135 	lda	(_memmove_PARM_2 + 1)
   003E B7*01         [ 3]  136 	sta	*(_memmove_sloc0_1_0 + 1)
   0040 C6r00r00      [ 4]  137 	lda	_memmove_PARM_2
   0043 B7*00         [ 3]  138 	sta	*_memmove_sloc0_1_0
                            139 ;../_memmove.c:43: if (s < d) {
   0045 75*00         [ 4]  140 	cphx	*_memmove_sloc0_1_0
   0047 23 45         [ 3]  141 	bls	00119$
                            142 ;../_memmove.c:50: s += c;
   0049 B6*01         [ 3]  143 	lda	*(_memmove_sloc0_1_0 + 1)
   004B CBr00r07      [ 4]  144 	add	(_memmove_c_65536_27 + 1)
   004E B7*03         [ 3]  145 	sta	*(_memmove_sloc1_1_0 + 1)
   0050 B6*00         [ 3]  146 	lda	*_memmove_sloc0_1_0
   0052 C9r00r06      [ 4]  147 	adc	_memmove_c_65536_27
   0055 B7*02         [ 3]  148 	sta	*_memmove_sloc1_1_0
                            149 ;../_memmove.c:51: d += c;
   0057 9F            [ 1]  150 	txa
   0058 CBr00r07      [ 4]  151 	add	(_memmove_c_65536_27 + 1)
   005B B7*05         [ 3]  152 	sta	*(_memmove_sloc2_1_0 + 1)
   005D 8B            [ 2]  153 	pshh
   005E 86            [ 2]  154 	pula
   005F C9r00r06      [ 4]  155 	adc	_memmove_c_65536_27
   0062 B7*04         [ 3]  156 	sta	*_memmove_sloc2_1_0
                            157 ;../_memmove.c:52: do {
   0064 C6r00r06      [ 4]  158 	lda	_memmove_c_65536_27
   0067 B7*06         [ 3]  159 	sta	*_memmove_sloc3_1_0
   0069 C6r00r07      [ 4]  160 	lda	(_memmove_c_65536_27 + 1)
   006C B7*07         [ 3]  161 	sta	*(_memmove_sloc3_1_0 + 1)
   006E                     162 00104$:
                            163 ;../_memmove.c:53: *--d = *--s;
   006E 55*04         [ 4]  164 	ldhx	*_memmove_sloc2_1_0
   0070 AF FF         [ 2]  165 	aix	#-1
   0072 35*04         [ 4]  166 	sthx	*_memmove_sloc2_1_0
   0074 55*02         [ 4]  167 	ldhx	*_memmove_sloc1_1_0
   0076 AF FF         [ 2]  168 	aix	#-1
   0078 35*02         [ 4]  169 	sthx	*_memmove_sloc1_1_0
   007A 55*02         [ 4]  170 	ldhx	*_memmove_sloc1_1_0
   007C F6            [ 2]  171 	lda	,x
   007D 55*04         [ 4]  172 	ldhx	*_memmove_sloc2_1_0
   007F F7            [ 2]  173 	sta	,x
                            174 ;../_memmove.c:54: } while (--c);
   0080 55*06         [ 4]  175 	ldhx	*_memmove_sloc3_1_0
   0082 AF FF         [ 2]  176 	aix	#-1
   0084 35*06         [ 4]  177 	sthx	*_memmove_sloc3_1_0
   0086 B6*07         [ 3]  178 	lda	*(_memmove_sloc3_1_0 + 1)
   0088 BA*06         [ 3]  179 	ora	*_memmove_sloc3_1_0
   008A 26 E2         [ 3]  180 	bne	00104$
   008C 20 31         [ 3]  181 	bra	00112$
                            182 ;../_memmove.c:59: do {
   008E                     183 00119$:
   008E 4E*00*06      [ 5]  184 	mov	*_memmove_sloc0_1_0,*_memmove_sloc3_1_0
   0091 4E*01*07      [ 5]  185 	mov	*(_memmove_sloc0_1_0 + 1),*(_memmove_sloc3_1_0 + 1)
   0094 35*04         [ 4]  186 	sthx	*_memmove_sloc2_1_0
   0096 C6r00r06      [ 4]  187 	lda	_memmove_c_65536_27
   0099 87            [ 2]  188 	psha
   009A 8A            [ 2]  189 	pulh
   009B CEr00r07      [ 4]  190 	ldx	(_memmove_c_65536_27 + 1)
   009E                     191 00107$:
                            192 ;../_memmove.c:60: *d++ = *s++;
   009E 89            [ 2]  193 	pshx
   009F 8B            [ 2]  194 	pshh
   00A0 55*06         [ 4]  195 	ldhx	*_memmove_sloc3_1_0
   00A2 F6            [ 2]  196 	lda	,x
   00A3 B7*02         [ 3]  197 	sta	*_memmove_sloc1_1_0
   00A5 AF 01         [ 2]  198 	aix	#1
   00A7 35*06         [ 4]  199 	sthx	*_memmove_sloc3_1_0
   00A9 8A            [ 2]  200 	pulh
   00AA 88            [ 2]  201 	pulx
   00AB 89            [ 2]  202 	pshx
   00AC 8B            [ 2]  203 	pshh
   00AD 55*04         [ 4]  204 	ldhx	*_memmove_sloc2_1_0
   00AF B6*02         [ 3]  205 	lda	*_memmove_sloc1_1_0
   00B1 F7            [ 2]  206 	sta	,x
   00B2 AF 01         [ 2]  207 	aix	#1
   00B4 35*04         [ 4]  208 	sthx	*_memmove_sloc2_1_0
   00B6 8A            [ 2]  209 	pulh
   00B7 88            [ 2]  210 	pulx
                            211 ;../_memmove.c:61: } while (--c);
   00B8 AF FF         [ 2]  212 	aix	#-1
   00BA 65 00 00      [ 3]  213 	cphx	#0x00
   00BD 26 DF         [ 3]  214 	bne	00107$
   00BF                     215 00112$:
                            216 ;../_memmove.c:65: return dst;
   00BF CEr00r04      [ 4]  217 	ldx	_memmove_dst_65536_26
   00C2 C6r00r05      [ 4]  218 	lda	(_memmove_dst_65536_26 + 1)
                            219 ;../_memmove.c:66: }
   00C5 81            [ 4]  220 	rts
                            221 	.area CSEG    (CODE)
                            222 	.area CONST   (CODE)
                            223 	.area XINIT   (CODE)
                            224 	.area CABS    (ABS,CODE)
