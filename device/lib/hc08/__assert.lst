                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __assert
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl ___assert
                             23 	.globl _printf
                             24 	.globl ___assert_PARM_4
                             25 	.globl ___assert_PARM_3
                             26 	.globl ___assert_PARM_2
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; absolute ram data
                             36 ;--------------------------------------------------------
                             37 	.area IABS    (ABS)
                             38 	.area IABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; initialized external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 ___assert_PARM_2:
   0000                      52 	.ds 2
   0002                      53 ___assert_PARM_3:
   0002                      54 	.ds 2
   0004                      55 ___assert_PARM_4:
   0004                      56 	.ds 2
                             57 ;--------------------------------------------------------
                             58 ; global & static initialisations
                             59 ;--------------------------------------------------------
                             60 	.area HOME    (CODE)
                             61 	.area GSINIT  (CODE)
                             62 	.area GSFINAL (CODE)
                             63 	.area GSINIT  (CODE)
                             64 ;--------------------------------------------------------
                             65 ; Home
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area HOME    (CODE)
                             69 ;--------------------------------------------------------
                             70 ; code
                             71 ;--------------------------------------------------------
                             72 	.area CSEG    (CODE)
                             73 ;------------------------------------------------------------
                             74 ;Allocation info for local variables in function '__assert'
                             75 ;------------------------------------------------------------
                             76 ;functionname              Allocated with name '___assert_PARM_2'
                             77 ;filename                  Allocated with name '___assert_PARM_3'
                             78 ;linenumber                Allocated with name '___assert_PARM_4'
                             79 ;expression                Allocated to registers x h 
                             80 ;------------------------------------------------------------
                             81 ;../__assert.c:32: void __assert(const char *expression, const char *functionname, const char *filename, unsigned int linenumber)
                             82 ;	-----------------------------------------
                             83 ;	 function __assert
                             84 ;	-----------------------------------------
                             85 ;	Register assignment is optimal.
                             86 ;	Stack space usage: 0 bytes.
   0000                      87 ___assert:
   0000 89            [ 2]   88 	pshx
   0001 97            [ 1]   89 	tax
   0002 8A            [ 2]   90 	pulh
                             91 ;../__assert.c:34: printf("Assert(%s) failed in function %s at line %u in file %s.\n",
   0003 C6r00r03      [ 4]   92 	lda	(___assert_PARM_3 + 1)
   0006 87            [ 2]   93 	psha
   0007 C6r00r02      [ 4]   94 	lda	___assert_PARM_3
   000A 87            [ 2]   95 	psha
   000B C6r00r05      [ 4]   96 	lda	(___assert_PARM_4 + 1)
   000E 87            [ 2]   97 	psha
   000F C6r00r04      [ 4]   98 	lda	___assert_PARM_4
   0012 87            [ 2]   99 	psha
   0013 C6r00r01      [ 4]  100 	lda	(___assert_PARM_2 + 1)
   0016 87            [ 2]  101 	psha
   0017 C6r00r00      [ 4]  102 	lda	___assert_PARM_2
   001A 87            [ 2]  103 	psha
   001B 89            [ 2]  104 	pshx
   001C 8B            [ 2]  105 	pshh
   001D A6r00         [ 2]  106 	lda	#___str_0
   001F 87            [ 2]  107 	psha
   0020 A6s00         [ 2]  108 	lda	#>___str_0
   0022 87            [ 2]  109 	psha
   0023 CDr00r00      [ 5]  110 	jsr	_printf
   0026 A7 0A         [ 2]  111 	ais	#10
   0028                     112 00103$:
   0028 20 FE         [ 3]  113 	bra	00103$
                            114 ;../__assert.c:37: }
   002A 81            [ 4]  115 	rts
                            116 	.area CSEG    (CODE)
                            117 	.area CONST   (CODE)
                            118 	.area CONST   (CODE)
   0000                     119 ___str_0:
   0000 41 73 73 65 72 74   120 	.ascii "Assert(%s) failed in function %s at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        69 6E 20 66 75 6E
        63 74 69 6F 6E 20
        25 73 20 61 74 20
        6C 69 6E 65 20 25
        75 20 69 6E 20 66
        69 6C 65 20 25 73
        2E
   0037 0A                  121 	.db 0x0a
   0038 00                  122 	.db 0x00
                            123 	.area CSEG    (CODE)
                            124 	.area XINIT   (CODE)
                            125 	.area CABS    (ABS,CODE)
