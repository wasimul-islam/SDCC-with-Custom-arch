                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module atol
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _atol
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area DSEG    (PAG)
   0000                      27 _atol_sloc0_1_0:
   0000                      28 	.ds 1
   0001                      29 _atol_sloc1_1_0:
   0001                      30 	.ds 2
   0003                      31 _atol_sloc2_1_0:
   0003                      32 	.ds 4
   0007                      33 _atol_sloc3_1_0:
   0007                      34 	.ds 4
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in ram
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; initialized external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 _atol_ret_65536_57:
   0000                      56 	.ds 4
   0004                      57 _atol_neg_65536_57:
   0004                      58 	.ds 1
                             59 ;--------------------------------------------------------
                             60 ; global & static initialisations
                             61 ;--------------------------------------------------------
                             62 	.area HOME    (CODE)
                             63 	.area GSINIT  (CODE)
                             64 	.area GSFINAL (CODE)
                             65 	.area GSINIT  (CODE)
                             66 ;--------------------------------------------------------
                             67 ; Home
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area HOME    (CODE)
                             71 ;--------------------------------------------------------
                             72 ; code
                             73 ;--------------------------------------------------------
                             74 	.area CSEG    (CODE)
                             75 ;------------------------------------------------------------
                             76 ;Allocation info for local variables in function 'atol'
                             77 ;------------------------------------------------------------
                             78 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                             79 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                             80 ;sloc2                     Allocated with name '_atol_sloc2_1_0'
                             81 ;sloc3                     Allocated with name '_atol_sloc3_1_0'
                             82 ;nptr                      Allocated to registers x h 
                             83 ;__1310720007              Allocated to registers 
                             84 ;__1310720004              Allocated to registers 
                             85 ;ret                       Allocated with name '_atol_ret_65536_57'
                             86 ;neg                       Allocated with name '_atol_neg_65536_57'
                             87 ;__1310720005              Allocated to registers 
                             88 ;c                         Allocated to registers 
                             89 ;__1310720008              Allocated to registers 
                             90 ;c                         Allocated to registers 
                             91 ;------------------------------------------------------------
                             92 ;../atol.c:34: long int atol(const char *nptr)
                             93 ;	-----------------------------------------
                             94 ;	 function atol
                             95 ;	-----------------------------------------
                             96 ;	Register assignment is optimal.
                             97 ;	Stack space usage: 0 bytes.
   0000                      98 _atol:
   0000 89            [ 2]   99 	pshx
   0001 97            [ 1]  100 	tax
   0002 8A            [ 2]  101 	pulh
                            102 ;../atol.c:36: long int ret = 0;
   0003 4F            [ 1]  103 	clra
   0004 C7r00r00      [ 4]  104 	sta	_atol_ret_65536_57
   0007 C7r00r01      [ 4]  105 	sta	(_atol_ret_65536_57 + 1)
   000A C7r00r02      [ 4]  106 	sta	(_atol_ret_65536_57 + 2)
   000D C7r00r03      [ 4]  107 	sta	(_atol_ret_65536_57 + 3)
                            108 ;../atol.c:39: while (isblank (*nptr))
   0010                     109 00101$:
   0010 F6            [ 2]  110 	lda	,x
   0011 B7*00         [ 3]  111 	sta	*_atol_sloc0_1_0
   0013 B6*00         [ 3]  112 	lda	*_atol_sloc0_1_0
                            113 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   0015 41 20 04      [ 4]  114 	cbeqa	#0x20,00115$
   0018 A1 09         [ 2]  115 	cmp	#0x09
   001A 26 04         [ 3]  116 	bne	00131$
   001C                     117 00115$:
                            118 ;../atol.c:40: nptr++;
   001C AF 01         [ 2]  119 	aix	#1
   001E 20 F0         [ 3]  120 	bra	00101$
   0020                     121 00131$:
                            122 ;../atol.c:42: neg = (*nptr == '-');
   0020 B6*00         [ 3]  123 	lda	*_atol_sloc0_1_0
   0022 41 2D 03      [ 4]  124 	cbeqa	#0x2d,00164$
   0025 4F            [ 1]  125 	clra
   0026 20 02         [ 3]  126 	bra	00163$
   0028                     127 00164$:
   0028 A6 01         [ 2]  128 	lda	#0x01
   002A                     129 00163$:
   002A C7r00r04      [ 4]  130 	sta	_atol_neg_65536_57
                            131 ;../atol.c:44: if (*nptr == '-' || *nptr == '+')
   002D 4D            [ 1]  132 	tsta
   002E 26 06         [ 3]  133 	bne	00104$
   0030 B6*00         [ 3]  134 	lda	*_atol_sloc0_1_0
   0032 A1 2B         [ 2]  135 	cmp	#0x2b
   0034 26 02         [ 3]  136 	bne	00129$
   0036                     137 00104$:
                            138 ;../atol.c:45: nptr++;
   0036 AF 01         [ 2]  139 	aix	#1
                            140 ;../atol.c:47: while (isdigit (*nptr))
   0038                     141 00129$:
   0038 35*01         [ 4]  142 	sthx	*_atol_sloc1_1_0
   003A                     143 00107$:
   003A 55*01         [ 4]  144 	ldhx	*_atol_sloc1_1_0
   003C FE            [ 2]  145 	ldx	,x
   003D 9F            [ 1]  146 	txa
                            147 ;./../../include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   003E A1 30         [ 2]  148 	cmp	#0x30
   0040 25 6F         [ 3]  149 	bcs	00109$
   0042 A1 39         [ 2]  150 	cmp	#0x39
   0044 22 6B         [ 3]  151 	bhi	00109$
                            152 ;../atol.c:48: ret = ret * 10 + (*(nptr++) - '0');
   0046 4F            [ 1]  153 	clra
   0047 C7r00r00      [ 4]  154 	sta	__mullong_PARM_1
   004A C7r00r01      [ 4]  155 	sta	(__mullong_PARM_1 + 1)
   004D C7r00r02      [ 4]  156 	sta	(__mullong_PARM_1 + 2)
   0050 A6 0A         [ 2]  157 	lda	#0x0a
   0052 C7r00r03      [ 4]  158 	sta	(__mullong_PARM_1 + 3)
   0055 C6r00r00      [ 4]  159 	lda	_atol_ret_65536_57
   0058 C7r00r00      [ 4]  160 	sta	__mullong_PARM_2
   005B C6r00r01      [ 4]  161 	lda	(_atol_ret_65536_57 + 1)
   005E C7r00r01      [ 4]  162 	sta	(__mullong_PARM_2 + 1)
   0061 C6r00r02      [ 4]  163 	lda	(_atol_ret_65536_57 + 2)
   0064 C7r00r02      [ 4]  164 	sta	(__mullong_PARM_2 + 2)
   0067 C6r00r03      [ 4]  165 	lda	(_atol_ret_65536_57 + 3)
   006A C7r00r03      [ 4]  166 	sta	(__mullong_PARM_2 + 3)
   006D 89            [ 2]  167 	pshx
   006E CDr00r00      [ 5]  168 	jsr	__mullong
   0071 B7*06         [ 3]  169 	sta	*(_atol_sloc2_1_0 + 3)
   0073 BF*05         [ 3]  170 	stx	*(_atol_sloc2_1_0 + 2)
   0075 4E*00*04      [ 5]  171 	mov	*___SDCC_hc08_ret2,*(_atol_sloc2_1_0 + 1)
   0078 4E*00*03      [ 5]  172 	mov	*___SDCC_hc08_ret3,*_atol_sloc2_1_0
   007B 88            [ 2]  173 	pulx
   007C 89            [ 2]  174 	pshx
   007D 55*01         [ 4]  175 	ldhx	*_atol_sloc1_1_0
   007F AF 01         [ 2]  176 	aix	#1
   0081 35*01         [ 4]  177 	sthx	*_atol_sloc1_1_0
   0083 88            [ 2]  178 	pulx
   0084 8C            [ 1]  179 	clrh
   0085 AF D0         [ 2]  180 	aix	#-48
   0087 BF*0A         [ 3]  181 	stx	*(_atol_sloc3_1_0 + 3)
   0089 8B            [ 2]  182 	pshh
   008A 86            [ 2]  183 	pula
   008B B7*09         [ 3]  184 	sta	*(_atol_sloc3_1_0 + 2)
   008D 49            [ 1]  185 	rola	
   008E 4F            [ 1]  186 	clra	
   008F A2 00         [ 2]  187 	sbc	#0x00
   0091 B7*08         [ 3]  188 	sta	*(_atol_sloc3_1_0 + 1)
   0093 B7*07         [ 3]  189 	sta	*_atol_sloc3_1_0
   0095 45r00r00      [ 3]  190 	ldhx	#_atol_ret_65536_57
   0098 B6*06         [ 3]  191 	lda	*(_atol_sloc2_1_0 + 3)
   009A BB*0A         [ 3]  192 	add	*(_atol_sloc3_1_0 + 3)
   009C E7 03         [ 3]  193 	sta	3,x
   009E B6*05         [ 3]  194 	lda	*(_atol_sloc2_1_0 + 2)
   00A0 B9*09         [ 3]  195 	adc	*(_atol_sloc3_1_0 + 2)
   00A2 E7 02         [ 3]  196 	sta	2,x
   00A4 B6*04         [ 3]  197 	lda	*(_atol_sloc2_1_0 + 1)
   00A6 B9*08         [ 3]  198 	adc	*(_atol_sloc3_1_0 + 1)
   00A8 E7 01         [ 3]  199 	sta	1,x
   00AA B6*03         [ 3]  200 	lda	*_atol_sloc2_1_0
   00AC B9*07         [ 3]  201 	adc	*_atol_sloc3_1_0
   00AE F7            [ 2]  202 	sta	,x
   00AF 20 89         [ 3]  203 	bra	00107$
   00B1                     204 00109$:
                            205 ;../atol.c:50: return (neg ? -ret : ret); // Since -LONG_MIN is LONG_MIN in sdcc, the result value always turns out ok.
   00B1 C6r00r04      [ 4]  206 	lda	_atol_neg_65536_57
   00B4 27 1A         [ 3]  207 	beq	00120$
   00B6 4F            [ 1]  208 	clra
   00B7 C0r00r03      [ 4]  209 	sub	(_atol_ret_65536_57 + 3)
   00BA B7*0A         [ 3]  210 	sta	*(_atol_sloc3_1_0 + 3)
   00BC 4F            [ 1]  211 	clra
   00BD C2r00r02      [ 4]  212 	sbc	(_atol_ret_65536_57 + 2)
   00C0 B7*09         [ 3]  213 	sta	*(_atol_sloc3_1_0 + 2)
   00C2 4F            [ 1]  214 	clra
   00C3 C2r00r01      [ 4]  215 	sbc	(_atol_ret_65536_57 + 1)
   00C6 B7*08         [ 3]  216 	sta	*(_atol_sloc3_1_0 + 1)
   00C8 4F            [ 1]  217 	clra
   00C9 C2r00r00      [ 4]  218 	sbc	_atol_ret_65536_57
   00CC B7*07         [ 3]  219 	sta	*_atol_sloc3_1_0
   00CE 20 0B         [ 3]  220 	bra	00121$
   00D0                     221 00120$:
   00D0 45r00r00      [ 3]  222 	ldhx	#_atol_ret_65536_57
   00D3 7E*07         [ 4]  223 	mov	,x+,*_atol_sloc3_1_0
   00D5 7E*08         [ 4]  224 	mov	,x+,*(_atol_sloc3_1_0 + 1)
   00D7 7E*09         [ 4]  225 	mov	,x+,*(_atol_sloc3_1_0 + 2)
   00D9 7E*0A         [ 4]  226 	mov	,x+,*(_atol_sloc3_1_0 + 3)
   00DB                     227 00121$:
   00DB 4E*07*00      [ 5]  228 	mov	*_atol_sloc3_1_0,*___SDCC_hc08_ret3
   00DE 4E*08*00      [ 5]  229 	mov	*(_atol_sloc3_1_0 + 1),*___SDCC_hc08_ret2
   00E1 BE*09         [ 3]  230 	ldx	*(_atol_sloc3_1_0 + 2)
   00E3 B6*0A         [ 3]  231 	lda	*(_atol_sloc3_1_0 + 3)
                            232 ;../atol.c:51: }
   00E5 81            [ 4]  233 	rts
                            234 	.area CSEG    (CODE)
                            235 	.area CONST   (CODE)
                            236 	.area XINIT   (CODE)
                            237 	.area CABS    (ABS,CODE)
