                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module strndup
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _malloc
                             23 	.globl ___memcpy
                             24 	.globl _strlen
                             25 	.globl _strndup_PARM_2
                             26 	.globl _strndup
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; absolute ram data
                             36 ;--------------------------------------------------------
                             37 	.area IABS    (ABS)
                             38 	.area IABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; initialized external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 _strndup_PARM_2:
   0000                      52 	.ds 2
   0002                      53 _strndup_s_65536_61:
   0002                      54 	.ds 2
   0004                      55 _strndup_l_65536_62:
   0004                      56 	.ds 2
   0006                      57 _strndup_r_65537_63:
   0006                      58 	.ds 2
                             59 ;--------------------------------------------------------
                             60 ; global & static initialisations
                             61 ;--------------------------------------------------------
                             62 	.area HOME    (CODE)
                             63 	.area GSINIT  (CODE)
                             64 	.area GSFINAL (CODE)
                             65 	.area GSINIT  (CODE)
                             66 ;--------------------------------------------------------
                             67 ; Home
                             68 ;--------------------------------------------------------
                             69 	.area HOME    (CODE)
                             70 	.area HOME    (CODE)
                             71 ;--------------------------------------------------------
                             72 ; code
                             73 ;--------------------------------------------------------
                             74 	.area CSEG    (CODE)
                             75 ;------------------------------------------------------------
                             76 ;Allocation info for local variables in function 'strndup'
                             77 ;------------------------------------------------------------
                             78 ;n                         Allocated with name '_strndup_PARM_2'
                             79 ;s                         Allocated with name '_strndup_s_65536_61'
                             80 ;l                         Allocated with name '_strndup_l_65536_62'
                             81 ;r                         Allocated with name '_strndup_r_65537_63'
                             82 ;------------------------------------------------------------
                             83 ;../strndup.c:33: char *strndup (const char *s, size_t n)
                             84 ;	-----------------------------------------
                             85 ;	 function strndup
                             86 ;	-----------------------------------------
                             87 ;	Register assignment is optimal.
                             88 ;	Stack space usage: 0 bytes.
   0000                      89 _strndup:
   0000 C7r00r03      [ 4]   90 	sta	(_strndup_s_65536_61 + 1)
   0003 CFr00r02      [ 4]   91 	stx	_strndup_s_65536_61
                             92 ;../strndup.c:35: size_t l = strlen (s);
   0006 C6r00r03      [ 4]   93 	lda	(_strndup_s_65536_61 + 1)
   0009 CEr00r02      [ 4]   94 	ldx	_strndup_s_65536_61
   000C CDr00r00      [ 5]   95 	jsr	_strlen
   000F C7r00r05      [ 4]   96 	sta	(_strndup_l_65536_62 + 1)
   0012 CFr00r04      [ 4]   97 	stx	_strndup_l_65536_62
                             98 ;../strndup.c:36: if (l > n)
   0015 C6r00r01      [ 4]   99 	lda	(_strndup_PARM_2 + 1)
   0018 C0r00r05      [ 4]  100 	sub	(_strndup_l_65536_62 + 1)
   001B C6r00r00      [ 4]  101 	lda	_strndup_PARM_2
   001E C2r00r04      [ 4]  102 	sbc	_strndup_l_65536_62
   0021 24 0C         [ 3]  103 	bcc	00102$
                            104 ;../strndup.c:37: l = n;
   0023 C6r00r00      [ 4]  105 	lda	_strndup_PARM_2
   0026 C7r00r04      [ 4]  106 	sta	_strndup_l_65536_62
   0029 C6r00r01      [ 4]  107 	lda	(_strndup_PARM_2 + 1)
   002C C7r00r05      [ 4]  108 	sta	(_strndup_l_65536_62 + 1)
   002F                     109 00102$:
                            110 ;../strndup.c:38: char *r = malloc (l + 1);
   002F C6r00r04      [ 4]  111 	lda	_strndup_l_65536_62
   0032 87            [ 2]  112 	psha
   0033 8A            [ 2]  113 	pulh
   0034 CEr00r05      [ 4]  114 	ldx	(_strndup_l_65536_62 + 1)
   0037 AF 01         [ 2]  115 	aix	#1
   0039 9F            [ 1]  116 	txa
   003A 8B            [ 2]  117 	pshh
   003B 88            [ 2]  118 	pulx
   003C CDr00r00      [ 5]  119 	jsr	_malloc
   003F C7r00r07      [ 4]  120 	sta	(_strndup_r_65537_63 + 1)
   0042 CFr00r06      [ 4]  121 	stx	_strndup_r_65537_63
                            122 ;../strndup.c:39: if (r)
   0045 C6r00r06      [ 4]  123 	lda	_strndup_r_65537_63
   0048 CAr00r07      [ 4]  124 	ora	(_strndup_r_65537_63 + 1)
   004B 27 37         [ 3]  125 	beq	00104$
                            126 ;../strndup.c:41: memcpy (r, s, l);
   004D C6r00r06      [ 4]  127 	lda	_strndup_r_65537_63
   0050 87            [ 2]  128 	psha
   0051 8A            [ 2]  129 	pulh
   0052 CEr00r07      [ 4]  130 	ldx	(_strndup_r_65537_63 + 1)
   0055 C6r00r03      [ 4]  131 	lda	(_strndup_s_65536_61 + 1)
   0058 C7r00r01      [ 4]  132 	sta	(___memcpy_PARM_2 + 1)
   005B C6r00r02      [ 4]  133 	lda	_strndup_s_65536_61
   005E C7r00r00      [ 4]  134 	sta	___memcpy_PARM_2
   0061 C6r00r04      [ 4]  135 	lda	_strndup_l_65536_62
   0064 C7r00r00      [ 4]  136 	sta	___memcpy_PARM_3
   0067 C6r00r05      [ 4]  137 	lda	(_strndup_l_65536_62 + 1)
   006A C7r00r01      [ 4]  138 	sta	(___memcpy_PARM_3 + 1)
   006D 9F            [ 1]  139 	txa
   006E 8B            [ 2]  140 	pshh
   006F 88            [ 2]  141 	pulx
   0070 CDr00r00      [ 5]  142 	jsr	___memcpy
                            143 ;../strndup.c:42: r[l] = 0;
   0073 C6r00r05      [ 4]  144 	lda	(_strndup_l_65536_62 + 1)
   0076 CBr00r07      [ 4]  145 	add	(_strndup_r_65537_63 + 1)
   0079 97            [ 1]  146 	tax
   007A C6r00r04      [ 4]  147 	lda	_strndup_l_65536_62
   007D C9r00r06      [ 4]  148 	adc	_strndup_r_65537_63
   0080 87            [ 2]  149 	psha
   0081 8A            [ 2]  150 	pulh
   0082 4F            [ 1]  151 	clra
   0083 F7            [ 2]  152 	sta	,x
   0084                     153 00104$:
                            154 ;../strndup.c:44: return (r);
   0084 CEr00r06      [ 4]  155 	ldx	_strndup_r_65537_63
   0087 C6r00r07      [ 4]  156 	lda	(_strndup_r_65537_63 + 1)
                            157 ;../strndup.c:45: }
   008A 81            [ 4]  158 	rts
                            159 	.area CSEG    (CODE)
                            160 	.area CONST   (CODE)
                            161 	.area XINIT   (CODE)
                            162 	.area CABS    (ABS,CODE)
