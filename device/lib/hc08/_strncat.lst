                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strncat
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _strncat_PARM_3
                             23 	.globl _strncat_PARM_2
                             24 	.globl _strncat
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _strncat_sloc0_1_0:
   0000                      34 	.ds 2
   0002                      35 _strncat_sloc1_1_0:
   0002                      36 	.ds 2
   0004                      37 _strncat_sloc2_1_0:
   0004                      38 	.ds 2
   0006                      39 _strncat_sloc3_1_0:
   0006                      40 	.ds 2
                             41 ;--------------------------------------------------------
                             42 ; absolute ram data
                             43 ;--------------------------------------------------------
                             44 	.area IABS    (ABS)
                             45 	.area IABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; absolute external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; initialized external ram data
                             52 ;--------------------------------------------------------
                             53 	.area XISEG
                             54 ;--------------------------------------------------------
                             55 ; extended address mode data
                             56 ;--------------------------------------------------------
                             57 	.area XSEG
   0000                      58 _strncat_PARM_2:
   0000                      59 	.ds 2
   0002                      60 _strncat_PARM_3:
   0002                      61 	.ds 2
   0004                      62 _strncat_start_65536_27:
   0004                      63 	.ds 2
                             64 ;--------------------------------------------------------
                             65 ; global & static initialisations
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT  (CODE)
                             69 	.area GSFINAL (CODE)
                             70 	.area GSINIT  (CODE)
                             71 ;--------------------------------------------------------
                             72 ; Home
                             73 ;--------------------------------------------------------
                             74 	.area HOME    (CODE)
                             75 	.area HOME    (CODE)
                             76 ;--------------------------------------------------------
                             77 ; code
                             78 ;--------------------------------------------------------
                             79 	.area CSEG    (CODE)
                             80 ;------------------------------------------------------------
                             81 ;Allocation info for local variables in function 'strncat'
                             82 ;------------------------------------------------------------
                             83 ;back                      Allocated with name '_strncat_PARM_2'
                             84 ;count                     Allocated with name '_strncat_PARM_3'
                             85 ;front                     Allocated to registers x h 
                             86 ;start                     Allocated with name '_strncat_start_65536_27'
                             87 ;sloc0                     Allocated with name '_strncat_sloc0_1_0'
                             88 ;sloc1                     Allocated with name '_strncat_sloc1_1_0'
                             89 ;sloc2                     Allocated with name '_strncat_sloc2_1_0'
                             90 ;sloc3                     Allocated with name '_strncat_sloc3_1_0'
                             91 ;------------------------------------------------------------
                             92 ;../_strncat.c:31: char * strncat ( char * front, const char * back, size_t count )
                             93 ;	-----------------------------------------
                             94 ;	 function strncat
                             95 ;	-----------------------------------------
                             96 ;	Register assignment is optimal.
                             97 ;	Stack space usage: 0 bytes.
   0000                      98 _strncat:
   0000 89            [ 2]   99 	pshx
   0001 97            [ 1]  100 	tax
   0002 8A            [ 2]  101 	pulh
                            102 ;../_strncat.c:33: char *start = front;
   0003 8B            [ 2]  103 	pshh
   0004 86            [ 2]  104 	pula
   0005 C7r00r04      [ 4]  105 	sta	_strncat_start_65536_27
   0008 CFr00r05      [ 4]  106 	stx	(_strncat_start_65536_27 + 1)
                            107 ;../_strncat.c:35: while (*front++);
   000B                     108 00101$:
   000B F6            [ 2]  109 	lda	,x
   000C AF 01         [ 2]  110 	aix	#1
   000E 4D            [ 1]  111 	tsta
   000F 26 FA         [ 3]  112 	bne	00101$
                            113 ;../_strncat.c:37: front--;
   0011 AF FF         [ 2]  114 	aix	#-1
                            115 ;../_strncat.c:39: while (count--)
   0013 C6r00r00      [ 4]  116 	lda	_strncat_PARM_2
   0016 B7*00         [ 3]  117 	sta	*_strncat_sloc0_1_0
   0018 C6r00r01      [ 4]  118 	lda	(_strncat_PARM_2 + 1)
   001B B7*01         [ 3]  119 	sta	*(_strncat_sloc0_1_0 + 1)
   001D 35*02         [ 4]  120 	sthx	*_strncat_sloc1_1_0
   001F C6r00r02      [ 4]  121 	lda	_strncat_PARM_3
   0022 B7*04         [ 3]  122 	sta	*_strncat_sloc2_1_0
   0024 C6r00r03      [ 4]  123 	lda	(_strncat_PARM_3 + 1)
   0027 B7*05         [ 3]  124 	sta	*(_strncat_sloc2_1_0 + 1)
   0029                     125 00106$:
   0029 4E*04*06      [ 5]  126 	mov	*_strncat_sloc2_1_0,*_strncat_sloc3_1_0
   002C 4E*05*07      [ 5]  127 	mov	*(_strncat_sloc2_1_0 + 1),*(_strncat_sloc3_1_0 + 1)
   002F 89            [ 2]  128 	pshx
   0030 8B            [ 2]  129 	pshh
   0031 55*04         [ 4]  130 	ldhx	*_strncat_sloc2_1_0
   0033 AF FF         [ 2]  131 	aix	#-1
   0035 35*04         [ 4]  132 	sthx	*_strncat_sloc2_1_0
   0037 8A            [ 2]  133 	pulh
   0038 88            [ 2]  134 	pulx
   0039 B6*07         [ 3]  135 	lda	*(_strncat_sloc3_1_0 + 1)
   003B BA*06         [ 3]  136 	ora	*_strncat_sloc3_1_0
   003D 27 1A         [ 3]  137 	beq	00108$
                            138 ;../_strncat.c:40: if (!(*front++ = *back++))
   003F 55*00         [ 4]  139 	ldhx	*_strncat_sloc0_1_0
   0041 F6            [ 2]  140 	lda	,x
   0042 AF 01         [ 2]  141 	aix	#1
   0044 35*00         [ 4]  142 	sthx	*_strncat_sloc0_1_0
   0046 55*02         [ 4]  143 	ldhx	*_strncat_sloc1_1_0
   0048 F7            [ 2]  144 	sta	,x
   0049 AF 01         [ 2]  145 	aix	#1
   004B 35*02         [ 4]  146 	sthx	*_strncat_sloc1_1_0
   004D 55*02         [ 4]  147 	ldhx	*_strncat_sloc1_1_0
   004F 4D            [ 1]  148 	tsta
   0050 26 D7         [ 3]  149 	bne	00106$
                            150 ;../_strncat.c:41: return(start);
   0052 CEr00r04      [ 4]  151 	ldx	_strncat_start_65536_27
   0055 C6r00r05      [ 4]  152 	lda	(_strncat_start_65536_27 + 1)
   0058 81            [ 4]  153 	rts
   0059                     154 00108$:
                            155 ;../_strncat.c:43: *front = '\0';
   0059 4F            [ 1]  156 	clra
   005A F7            [ 2]  157 	sta	,x
                            158 ;../_strncat.c:44: return(start);
   005B CEr00r04      [ 4]  159 	ldx	_strncat_start_65536_27
   005E C6r00r05      [ 4]  160 	lda	(_strncat_start_65536_27 + 1)
                            161 ;../_strncat.c:45: }
   0061 81            [ 4]  162 	rts
                            163 	.area CSEG    (CODE)
                            164 	.area CONST   (CODE)
                            165 	.area XINIT   (CODE)
                            166 	.area CABS    (ABS,CODE)
