                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _memcmp
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _memcmp_PARM_3
                             23 	.globl _memcmp_PARM_2
                             24 	.globl _memcmp
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _memcmp_sloc0_1_0:
   0000                      34 	.ds 2
   0002                      35 _memcmp_sloc1_1_0:
   0002                      36 	.ds 2
   0004                      37 _memcmp_sloc2_1_0:
   0004                      38 	.ds 1
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; initialized external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 _memcmp_PARM_2:
   0000                      57 	.ds 2
   0002                      58 _memcmp_PARM_3:
   0002                      59 	.ds 2
   0004                      60 _memcmp_buf1_65536_26:
   0004                      61 	.ds 2
                             62 ;--------------------------------------------------------
                             63 ; global & static initialisations
                             64 ;--------------------------------------------------------
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT  (CODE)
                             67 	.area GSFINAL (CODE)
                             68 	.area GSINIT  (CODE)
                             69 ;--------------------------------------------------------
                             70 ; Home
                             71 ;--------------------------------------------------------
                             72 	.area HOME    (CODE)
                             73 	.area HOME    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; code
                             76 ;--------------------------------------------------------
                             77 	.area CSEG    (CODE)
                             78 ;------------------------------------------------------------
                             79 ;Allocation info for local variables in function 'memcmp'
                             80 ;------------------------------------------------------------
                             81 ;buf2                      Allocated with name '_memcmp_PARM_2'
                             82 ;count                     Allocated with name '_memcmp_PARM_3'
                             83 ;buf1                      Allocated with name '_memcmp_buf1_65536_26'
                             84 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                             85 ;sloc1                     Allocated with name '_memcmp_sloc1_1_0'
                             86 ;sloc2                     Allocated with name '_memcmp_sloc2_1_0'
                             87 ;------------------------------------------------------------
                             88 ;../_memcmp.c:31: int memcmp (const void * buf1, const void * buf2, size_t count)
                             89 ;	-----------------------------------------
                             90 ;	 function memcmp
                             91 ;	-----------------------------------------
                             92 ;	Register assignment is optimal.
                             93 ;	Stack space usage: 0 bytes.
   0000                      94 _memcmp:
   0000 C7r00r05      [ 4]   95 	sta	(_memcmp_buf1_65536_26 + 1)
   0003 CFr00r04      [ 4]   96 	stx	_memcmp_buf1_65536_26
                             97 ;../_memcmp.c:33: if (!count)
   0006 C6r00r02      [ 4]   98 	lda	_memcmp_PARM_3
   0009 CAr00r03      [ 4]   99 	ora	(_memcmp_PARM_3 + 1)
   000C 26 03         [ 3]  100 	bne	00112$
                            101 ;../_memcmp.c:34: return(0);
   000E 4F            [ 1]  102 	clra
   000F 97            [ 1]  103 	tax
   0010 81            [ 4]  104 	rts
                            105 ;../_memcmp.c:36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   0011                     106 00112$:
   0011 C6r00r02      [ 4]  107 	lda	_memcmp_PARM_3
   0014 B7*00         [ 3]  108 	sta	*_memcmp_sloc0_1_0
   0016 C6r00r03      [ 4]  109 	lda	(_memcmp_PARM_3 + 1)
   0019 B7*01         [ 3]  110 	sta	*(_memcmp_sloc0_1_0 + 1)
   001B                     111 00104$:
   001B 55*00         [ 4]  112 	ldhx	*_memcmp_sloc0_1_0
   001D AF FF         [ 2]  113 	aix	#-1
   001F 35*00         [ 4]  114 	sthx	*_memcmp_sloc0_1_0
   0021 C6r00r04      [ 4]  115 	lda	_memcmp_buf1_65536_26
   0024 87            [ 2]  116 	psha
   0025 8A            [ 2]  117 	pulh
   0026 CEr00r05      [ 4]  118 	ldx	(_memcmp_buf1_65536_26 + 1)
   0029 C6r00r01      [ 4]  119 	lda	(_memcmp_PARM_2 + 1)
   002C B7*03         [ 3]  120 	sta	*(_memcmp_sloc1_1_0 + 1)
   002E C6r00r00      [ 4]  121 	lda	_memcmp_PARM_2
   0031 B7*02         [ 3]  122 	sta	*_memcmp_sloc1_1_0
   0033 F6            [ 2]  123 	lda	,x
   0034 89            [ 2]  124 	pshx
   0035 8B            [ 2]  125 	pshh
   0036 55*02         [ 4]  126 	ldhx	*_memcmp_sloc1_1_0
   0038 87            [ 2]  127 	psha
   0039 F6            [ 2]  128 	lda	,x
   003A B7*04         [ 3]  129 	sta	*_memcmp_sloc2_1_0
   003C 86            [ 2]  130 	pula
   003D 8A            [ 2]  131 	pulh
   003E 88            [ 2]  132 	pulx
   003F 3D*01         [ 3]  133 	tst	*(_memcmp_sloc0_1_0 + 1)
   0041 26 02         [ 3]  134 	bne	00131$
   0043 3D*00         [ 3]  135 	tst	*_memcmp_sloc0_1_0
   0045                     136 00131$:
   0045 27 1C         [ 3]  137 	beq	00106$
   0047 B1*04         [ 3]  138 	cmp	*_memcmp_sloc2_1_0
   0049 26 18         [ 3]  139 	bne	00106$
                            140 ;../_memcmp.c:37: buf1 = (char *)buf1 + 1;
   004B AF 01         [ 2]  141 	aix	#1
   004D CFr00r05      [ 4]  142 	stx	(_memcmp_buf1_65536_26 + 1)
   0050 8B            [ 2]  143 	pshh
   0051 86            [ 2]  144 	pula
   0052 C7r00r04      [ 4]  145 	sta	_memcmp_buf1_65536_26
                            146 ;../_memcmp.c:38: buf2 = (char *)buf2 + 1;
   0055 55*02         [ 4]  147 	ldhx	*_memcmp_sloc1_1_0
   0057 AF 01         [ 2]  148 	aix	#1
   0059 CFr00r01      [ 4]  149 	stx	(_memcmp_PARM_2 + 1)
   005C 8B            [ 2]  150 	pshh
   005D 86            [ 2]  151 	pula
   005E C7r00r00      [ 4]  152 	sta	_memcmp_PARM_2
   0061 20 B8         [ 3]  153 	bra	00104$
   0063                     154 00106$:
                            155 ;../_memcmp.c:41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   0063 5F            [ 1]  156 	clrx
   0064 4E*04*03      [ 5]  157 	mov	*_memcmp_sloc2_1_0,*(_memcmp_sloc1_1_0 + 1)
   0067 BF*02         [ 3]  158 	stx	*_memcmp_sloc1_1_0
   0069 B0*03         [ 3]  159 	sub	*(_memcmp_sloc1_1_0 + 1)
   006B 87            [ 2]  160 	psha
   006C 9F            [ 1]  161 	txa
   006D B2*02         [ 3]  162 	sbc	*_memcmp_sloc1_1_0
   006F 97            [ 1]  163 	tax
   0070 86            [ 2]  164 	pula
                            165 ;../_memcmp.c:42: }
   0071 81            [ 4]  166 	rts
                            167 	.area CSEG    (CODE)
                            168 	.area CONST   (CODE)
                            169 	.area XINIT   (CODE)
                            170 	.area CABS    (ABS,CODE)
