                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strpbrk
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _strchr
                             23 	.globl _strpbrk_PARM_2
                             24 	.globl _strpbrk
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
   0000                      29 _strpbrk_sloc0_1_0:
   0000                      30 	.ds 2
                             31 ;--------------------------------------------------------
                             32 ; overlayable items in ram
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; absolute ram data
                             36 ;--------------------------------------------------------
                             37 	.area IABS    (ABS)
                             38 	.area IABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; absolute external ram data
                             41 ;--------------------------------------------------------
                             42 	.area XABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; initialized external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XISEG
                             47 ;--------------------------------------------------------
                             48 ; extended address mode data
                             49 ;--------------------------------------------------------
                             50 	.area XSEG
   0000                      51 _strpbrk_PARM_2:
   0000                      52 	.ds 2
   0002                      53 _strpbrk_string_65536_26:
   0002                      54 	.ds 2
   0004                      55 _strpbrk_ret_65536_27:
   0004                      56 	.ds 2
                             57 ;--------------------------------------------------------
                             58 ; global & static initialisations
                             59 ;--------------------------------------------------------
                             60 	.area HOME    (CODE)
                             61 	.area GSINIT  (CODE)
                             62 	.area GSFINAL (CODE)
                             63 	.area GSINIT  (CODE)
                             64 ;--------------------------------------------------------
                             65 ; Home
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area HOME    (CODE)
                             69 ;--------------------------------------------------------
                             70 ; code
                             71 ;--------------------------------------------------------
                             72 	.area CSEG    (CODE)
                             73 ;------------------------------------------------------------
                             74 ;Allocation info for local variables in function 'strpbrk'
                             75 ;------------------------------------------------------------
                             76 ;ch                        Allocated to registers x 
                             77 ;sloc0                     Allocated with name '_strpbrk_sloc0_1_0'
                             78 ;control                   Allocated with name '_strpbrk_PARM_2'
                             79 ;string                    Allocated with name '_strpbrk_string_65536_26'
                             80 ;ret                       Allocated with name '_strpbrk_ret_65536_27'
                             81 ;p                         Allocated to registers x h 
                             82 ;------------------------------------------------------------
                             83 ;../_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                             84 ;	-----------------------------------------
                             85 ;	 function strpbrk
                             86 ;	-----------------------------------------
                             87 ;	Register assignment is optimal.
                             88 ;	Stack space usage: 0 bytes.
   0000                      89 _strpbrk:
   0000 C7r00r03      [ 4]   90 	sta	(_strpbrk_string_65536_26 + 1)
   0003 CFr00r02      [ 4]   91 	stx	_strpbrk_string_65536_26
                             92 ;../_strpbrk.c:33: char *ret = NULL;
   0006 4F            [ 1]   93 	clra
   0007 C7r00r04      [ 4]   94 	sta	_strpbrk_ret_65536_27
   000A C7r00r05      [ 4]   95 	sta	(_strpbrk_ret_65536_27 + 1)
                             96 ;../_strpbrk.c:36: while (ch = *control) {
   000D C6r00r00      [ 4]   97 	lda	_strpbrk_PARM_2
   0010 B7*00         [ 3]   98 	sta	*_strpbrk_sloc0_1_0
   0012 C6r00r01      [ 4]   99 	lda	(_strpbrk_PARM_2 + 1)
   0015 B7*01         [ 3]  100 	sta	*(_strpbrk_sloc0_1_0 + 1)
   0017                     101 00105$:
   0017 55*00         [ 4]  102 	ldhx	*_strpbrk_sloc0_1_0
   0019 F6            [ 2]  103 	lda	,x
   001A 97            [ 1]  104 	tax
   001B 4D            [ 1]  105 	tsta
   001C 27 38         [ 3]  106 	beq	00107$
                            107 ;../_strpbrk.c:37: char * p = strchr(string, ch);
   001E CFr00r00      [ 4]  108 	stx	_strchr_PARM_2
   0021 C6r00r03      [ 4]  109 	lda	(_strpbrk_string_65536_26 + 1)
   0024 CEr00r02      [ 4]  110 	ldx	_strpbrk_string_65536_26
   0027 CDr00r00      [ 5]  111 	jsr	_strchr
   002A 87            [ 2]  112 	psha
   002B 89            [ 2]  113 	pshx
   002C 8A            [ 2]  114 	pulh
   002D 88            [ 2]  115 	pulx
                            116 ;../_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
   002E 65 00 00      [ 3]  117 	cphx	#0x00
   0031 27 1B         [ 3]  118 	beq	00102$
   0033 C6r00r04      [ 4]  119 	lda	_strpbrk_ret_65536_27
   0036 CAr00r05      [ 4]  120 	ora	(_strpbrk_ret_65536_27 + 1)
   0039 27 0B         [ 3]  121 	beq	00101$
   003B 9F            [ 1]  122 	txa
   003C C0r00r05      [ 4]  123 	sub	(_strpbrk_ret_65536_27 + 1)
   003F 8B            [ 2]  124 	pshh
   0040 86            [ 2]  125 	pula
   0041 C2r00r04      [ 4]  126 	sbc	_strpbrk_ret_65536_27
   0044 24 08         [ 3]  127 	bcc	00102$
   0046                     128 00101$:
                            129 ;../_strpbrk.c:39: ret = p;
   0046 8B            [ 2]  130 	pshh
   0047 86            [ 2]  131 	pula
   0048 C7r00r04      [ 4]  132 	sta	_strpbrk_ret_65536_27
   004B CFr00r05      [ 4]  133 	stx	(_strpbrk_ret_65536_27 + 1)
   004E                     134 00102$:
                            135 ;../_strpbrk.c:41: control++;
   004E 55*00         [ 4]  136 	ldhx	*_strpbrk_sloc0_1_0
   0050 AF 01         [ 2]  137 	aix	#1
   0052 35*00         [ 4]  138 	sthx	*_strpbrk_sloc0_1_0
   0054 20 C1         [ 3]  139 	bra	00105$
   0056                     140 00107$:
                            141 ;../_strpbrk.c:44: return (ret);
   0056 CEr00r04      [ 4]  142 	ldx	_strpbrk_ret_65536_27
   0059 C6r00r05      [ 4]  143 	lda	(_strpbrk_ret_65536_27 + 1)
                            144 ;../_strpbrk.c:45: }
   005C 81            [ 4]  145 	rts
                            146 	.area CSEG    (CODE)
                            147 	.area CONST   (CODE)
                            148 	.area XINIT   (CODE)
                            149 	.area CABS    (ABS,CODE)
