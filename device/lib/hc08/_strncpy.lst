                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strncpy
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _strncpy_PARM_3
                             23 	.globl _strncpy_PARM_2
                             24 	.globl _strncpy
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 _strncpy_sloc0_1_0:
   0000                      34 	.ds 2
   0002                      35 _strncpy_sloc1_1_0:
   0002                      36 	.ds 2
                             37 ;--------------------------------------------------------
                             38 ; absolute ram data
                             39 ;--------------------------------------------------------
                             40 	.area IABS    (ABS)
                             41 	.area IABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; initialized external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XISEG
                             50 ;--------------------------------------------------------
                             51 ; extended address mode data
                             52 ;--------------------------------------------------------
                             53 	.area XSEG
   0000                      54 _strncpy_PARM_2:
   0000                      55 	.ds 2
   0002                      56 _strncpy_PARM_3:
   0002                      57 	.ds 2
   0004                      58 _strncpy_d1_65536_27:
   0004                      59 	.ds 2
                             60 ;--------------------------------------------------------
                             61 ; global & static initialisations
                             62 ;--------------------------------------------------------
                             63 	.area HOME    (CODE)
                             64 	.area GSINIT  (CODE)
                             65 	.area GSFINAL (CODE)
                             66 	.area GSINIT  (CODE)
                             67 ;--------------------------------------------------------
                             68 ; Home
                             69 ;--------------------------------------------------------
                             70 	.area HOME    (CODE)
                             71 	.area HOME    (CODE)
                             72 ;--------------------------------------------------------
                             73 ; code
                             74 ;--------------------------------------------------------
                             75 	.area CSEG    (CODE)
                             76 ;------------------------------------------------------------
                             77 ;Allocation info for local variables in function 'strncpy'
                             78 ;------------------------------------------------------------
                             79 ;s                         Allocated with name '_strncpy_PARM_2'
                             80 ;n                         Allocated with name '_strncpy_PARM_3'
                             81 ;d                         Allocated to registers x h 
                             82 ;d1                        Allocated with name '_strncpy_d1_65536_27'
                             83 ;sloc0                     Allocated with name '_strncpy_sloc0_1_0'
                             84 ;sloc1                     Allocated with name '_strncpy_sloc1_1_0'
                             85 ;------------------------------------------------------------
                             86 ;../_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                             87 ;	-----------------------------------------
                             88 ;	 function strncpy
                             89 ;	-----------------------------------------
                             90 ;	Register assignment is optimal.
                             91 ;	Stack space usage: 0 bytes.
   0000                      92 _strncpy:
   0000 89            [ 2]   93 	pshx
   0001 97            [ 1]   94 	tax
   0002 8A            [ 2]   95 	pulh
                             96 ;../_strncpy.c:35: register char * d1 =  d;
   0003 8B            [ 2]   97 	pshh
   0004 86            [ 2]   98 	pula
   0005 C7r00r04      [ 4]   99 	sta	_strncpy_d1_65536_27
   0008 CFr00r05      [ 4]  100 	stx	(_strncpy_d1_65536_27 + 1)
                            101 ;../_strncpy.c:37: while ( n && *s )
   000B C6r00r02      [ 4]  102 	lda	_strncpy_PARM_3
   000E B7*00         [ 3]  103 	sta	*_strncpy_sloc0_1_0
   0010 C6r00r03      [ 4]  104 	lda	(_strncpy_PARM_3 + 1)
   0013 B7*01         [ 3]  105 	sta	*(_strncpy_sloc0_1_0 + 1)
   0015 C6r00r00      [ 4]  106 	lda	_strncpy_PARM_2
   0018 B7*02         [ 3]  107 	sta	*_strncpy_sloc1_1_0
   001A C6r00r01      [ 4]  108 	lda	(_strncpy_PARM_2 + 1)
   001D B7*03         [ 3]  109 	sta	*(_strncpy_sloc1_1_0 + 1)
   001F                     110 00102$:
   001F B6*01         [ 3]  111 	lda	*(_strncpy_sloc0_1_0 + 1)
   0021 BA*00         [ 3]  112 	ora	*_strncpy_sloc0_1_0
   0023 27 23         [ 3]  113 	beq	00114$
   0025 89            [ 2]  114 	pshx
   0026 8B            [ 2]  115 	pshh
   0027 55*02         [ 4]  116 	ldhx	*_strncpy_sloc1_1_0
   0029 F6            [ 2]  117 	lda	,x
   002A 8A            [ 2]  118 	pulh
   002B 88            [ 2]  119 	pulx
   002C 4D            [ 1]  120 	tsta
   002D 27 19         [ 3]  121 	beq	00114$
                            122 ;../_strncpy.c:39: n-- ;
   002F 89            [ 2]  123 	pshx
   0030 8B            [ 2]  124 	pshh
   0031 55*00         [ 4]  125 	ldhx	*_strncpy_sloc0_1_0
   0033 AF FF         [ 2]  126 	aix	#-1
   0035 35*00         [ 4]  127 	sthx	*_strncpy_sloc0_1_0
   0037 8A            [ 2]  128 	pulh
   0038 88            [ 2]  129 	pulx
                            130 ;../_strncpy.c:40: *d++ = *s++ ;
   0039 89            [ 2]  131 	pshx
   003A 8B            [ 2]  132 	pshh
   003B 55*02         [ 4]  133 	ldhx	*_strncpy_sloc1_1_0
   003D AF 01         [ 2]  134 	aix	#1
   003F 35*02         [ 4]  135 	sthx	*_strncpy_sloc1_1_0
   0041 8A            [ 2]  136 	pulh
   0042 88            [ 2]  137 	pulx
   0043 F7            [ 2]  138 	sta	,x
   0044 AF 01         [ 2]  139 	aix	#1
   0046 20 D7         [ 3]  140 	bra	00102$
                            141 ;../_strncpy.c:42: while ( n-- )
   0048                     142 00114$:
   0048 4E*00*02      [ 5]  143 	mov	*_strncpy_sloc0_1_0,*_strncpy_sloc1_1_0
   004B 4E*01*03      [ 5]  144 	mov	*(_strncpy_sloc0_1_0 + 1),*(_strncpy_sloc1_1_0 + 1)
   004E                     145 00105$:
   004E 4E*02*00      [ 5]  146 	mov	*_strncpy_sloc1_1_0,*_strncpy_sloc0_1_0
   0051 4E*03*01      [ 5]  147 	mov	*(_strncpy_sloc1_1_0 + 1),*(_strncpy_sloc0_1_0 + 1)
   0054 89            [ 2]  148 	pshx
   0055 8B            [ 2]  149 	pshh
   0056 55*02         [ 4]  150 	ldhx	*_strncpy_sloc1_1_0
   0058 AF FF         [ 2]  151 	aix	#-1
   005A 35*02         [ 4]  152 	sthx	*_strncpy_sloc1_1_0
   005C 8A            [ 2]  153 	pulh
   005D 88            [ 2]  154 	pulx
   005E B6*01         [ 3]  155 	lda	*(_strncpy_sloc0_1_0 + 1)
   0060 BA*00         [ 3]  156 	ora	*_strncpy_sloc0_1_0
   0062 27 06         [ 3]  157 	beq	00107$
                            158 ;../_strncpy.c:44: *d++ = '\0' ;
   0064 4F            [ 1]  159 	clra
   0065 F7            [ 2]  160 	sta	,x
   0066 AF 01         [ 2]  161 	aix	#1
   0068 20 E4         [ 3]  162 	bra	00105$
   006A                     163 00107$:
                            164 ;../_strncpy.c:46: return d1;
   006A CEr00r04      [ 4]  165 	ldx	_strncpy_d1_65536_27
   006D C6r00r05      [ 4]  166 	lda	(_strncpy_d1_65536_27 + 1)
                            167 ;../_strncpy.c:47: }
   0070 81            [ 4]  168 	rts
                            169 	.area CSEG    (CODE)
                            170 	.area CONST   (CODE)
                            171 	.area XINIT   (CODE)
                            172 	.area CABS    (ABS,CODE)
