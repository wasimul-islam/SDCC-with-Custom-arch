                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _rlulonglong
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl __rlulonglong_PARM_2
                             23 	.globl __rlulonglong_PARM_1
                             24 	.globl __rlulonglong
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 __rlulonglong_sloc0_1_0:
   0000                      34 	.ds 4
   0004                      35 __rlulonglong_sloc1_1_0:
   0004                      36 	.ds 1
   0005                      37 __rlulonglong_sloc2_1_0:
   0005                      38 	.ds 4
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; initialized external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 __rlulonglong_PARM_1:
   0000                      57 	.ds 8
   0008                      58 __rlulonglong_PARM_2:
   0008                      59 	.ds 1
                             60 ;--------------------------------------------------------
                             61 ; global & static initialisations
                             62 ;--------------------------------------------------------
                             63 	.area HOME    (CODE)
                             64 	.area GSINIT  (CODE)
                             65 	.area GSFINAL (CODE)
                             66 	.area GSINIT  (CODE)
                             67 ;--------------------------------------------------------
                             68 ; Home
                             69 ;--------------------------------------------------------
                             70 	.area HOME    (CODE)
                             71 	.area HOME    (CODE)
                             72 ;--------------------------------------------------------
                             73 ; code
                             74 ;--------------------------------------------------------
                             75 	.area CSEG    (CODE)
                             76 ;------------------------------------------------------------
                             77 ;Allocation info for local variables in function '_rlulonglong'
                             78 ;------------------------------------------------------------
                             79 ;l                         Allocated with name '__rlulonglong_PARM_1'
                             80 ;s                         Allocated with name '__rlulonglong_PARM_2'
                             81 ;top                       Allocated to registers 
                             82 ;middle                    Allocated to registers 
                             83 ;bottom                    Allocated to registers 
                             84 ;b                         Allocated to registers 
                             85 ;sloc0                     Allocated with name '__rlulonglong_sloc0_1_0'
                             86 ;sloc1                     Allocated with name '__rlulonglong_sloc1_1_0'
                             87 ;sloc2                     Allocated with name '__rlulonglong_sloc2_1_0'
                             88 ;------------------------------------------------------------
                             89 ;../_rlulonglong.c:43: unsigned long long _rlulonglong(unsigned long long l, char s) __SDCC_NONBANKED
                             90 ;	-----------------------------------------
                             91 ;	 function _rlulonglong
                             92 ;	-----------------------------------------
                             93 ;	Register assignment is optimal.
                             94 ;	Stack space usage: 0 bytes.
   0000                      95 __rlulonglong:
                             96 ;../_rlulonglong.c:45: uint32_t *const top = (uint32_t *)((char *)(&l) + 0);
                             97 ;../_rlulonglong.c:46: uint16_t *const middle = (uint16_t *)((char *)(&l) + 4);
                             98 ;../_rlulonglong.c:47: uint32_t *const bottom = (uint32_t *)((char *)(&l) + 4);
                             99 ;../_rlulonglong.c:48: uint16_t *const b = (uint16_t *)(&l);
                            100 ;../_rlulonglong.c:58: (*top) <<= s;
   0000                     101 00103$:
                            102 ;../_rlulonglong.c:50: for(;s >= 16; s-= 16)
   0000 C6r00r08      [ 4]  103 	lda	__rlulonglong_PARM_2
   0003 A1 10         [ 2]  104 	cmp	#0x10
   0005 25 35         [ 3]  105 	bcs	00101$
                            106 ;../_rlulonglong.c:52: b[0] = b[1];
   0007 CEr00r02      [ 4]  107 	ldx	(__rlulonglong_PARM_1 + 0x0002)
   000A C6r00r03      [ 4]  108 	lda	((__rlulonglong_PARM_1 + 0x0002) + 1)
   000D CFr00r00      [ 4]  109 	stx	__rlulonglong_PARM_1
   0010 C7r00r01      [ 4]  110 	sta	(__rlulonglong_PARM_1 + 1)
                            111 ;../_rlulonglong.c:53: b[1] = b[2];
   0013 CEr00r04      [ 4]  112 	ldx	(__rlulonglong_PARM_1 + 0x0004)
   0016 C6r00r05      [ 4]  113 	lda	((__rlulonglong_PARM_1 + 0x0004) + 1)
   0019 CFr00r02      [ 4]  114 	stx	(__rlulonglong_PARM_1 + 0x0002)
   001C C7r00r03      [ 4]  115 	sta	((__rlulonglong_PARM_1 + 0x0002) + 1)
                            116 ;../_rlulonglong.c:54: b[2] = b[3];
   001F CEr00r06      [ 4]  117 	ldx	(__rlulonglong_PARM_1 + 0x0006)
   0022 C6r00r07      [ 4]  118 	lda	((__rlulonglong_PARM_1 + 0x0006) + 1)
   0025 CFr00r04      [ 4]  119 	stx	(__rlulonglong_PARM_1 + 0x0004)
   0028 C7r00r05      [ 4]  120 	sta	((__rlulonglong_PARM_1 + 0x0004) + 1)
                            121 ;../_rlulonglong.c:55: b[3] = 0;
   002B 4F            [ 1]  122 	clra
   002C C7r00r06      [ 4]  123 	sta	(__rlulonglong_PARM_1 + 0x0006)
   002F C7r00r07      [ 4]  124 	sta	((__rlulonglong_PARM_1 + 0x0006) + 1)
                            125 ;../_rlulonglong.c:50: for(;s >= 16; s-= 16)
   0032 C6r00r08      [ 4]  126 	lda	__rlulonglong_PARM_2
   0035 A0 10         [ 2]  127 	sub	#0x10
   0037 C7r00r08      [ 4]  128 	sta	__rlulonglong_PARM_2
   003A 20 C4         [ 3]  129 	bra	00103$
   003C                     130 00101$:
                            131 ;../_rlulonglong.c:58: (*top) <<= s;
   003C C6r00r00      [ 4]  132 	lda	__rlulonglong_PARM_1
   003F B7*00         [ 3]  133 	sta	*__rlulonglong_sloc0_1_0
   0041 C6r00r01      [ 4]  134 	lda	(__rlulonglong_PARM_1 + 1)
   0044 B7*01         [ 3]  135 	sta	*(__rlulonglong_sloc0_1_0 + 1)
   0046 C6r00r02      [ 4]  136 	lda	(__rlulonglong_PARM_1 + 2)
   0049 B7*02         [ 3]  137 	sta	*(__rlulonglong_sloc0_1_0 + 2)
   004B C6r00r03      [ 4]  138 	lda	(__rlulonglong_PARM_1 + 3)
   004E B7*03         [ 3]  139 	sta	*(__rlulonglong_sloc0_1_0 + 3)
   0050 C6r00r08      [ 4]  140 	lda	__rlulonglong_PARM_2
   0053 B7*04         [ 3]  141 	sta	*__rlulonglong_sloc1_1_0
   0055 BE*04         [ 3]  142 	ldx	*__rlulonglong_sloc1_1_0
   0057 27 0A         [ 3]  143 	beq	00119$
   0059                     144 00118$:
   0059 38*03         [ 4]  145 	lsl	*(__rlulonglong_sloc0_1_0 + 3)
   005B 39*02         [ 4]  146 	rol	*(__rlulonglong_sloc0_1_0 + 2)
   005D 39*01         [ 4]  147 	rol	*(__rlulonglong_sloc0_1_0 + 1)
   005F 39*00         [ 4]  148 	rol	*__rlulonglong_sloc0_1_0
   0061 5B F6         [ 3]  149 	dbnzx	00118$
   0063                     150 00119$:
   0063 B6*00         [ 3]  151 	lda	*__rlulonglong_sloc0_1_0
   0065 C7r00r00      [ 4]  152 	sta	__rlulonglong_PARM_1
   0068 B6*01         [ 3]  153 	lda	*(__rlulonglong_sloc0_1_0 + 1)
   006A C7r00r01      [ 4]  154 	sta	(__rlulonglong_PARM_1 + 1)
   006D B6*02         [ 3]  155 	lda	*(__rlulonglong_sloc0_1_0 + 2)
   006F C7r00r02      [ 4]  156 	sta	(__rlulonglong_PARM_1 + 2)
   0072 B6*03         [ 3]  157 	lda	*(__rlulonglong_sloc0_1_0 + 3)
   0074 C7r00r03      [ 4]  158 	sta	(__rlulonglong_PARM_1 + 3)
                            159 ;../_rlulonglong.c:59: (*top) |= (((uint32_t)((*middle) & 0xffffu) << s) >> 16);
   0077 CEr00r04      [ 4]  160 	ldx	(__rlulonglong_PARM_1 + 0x0004)
   007A C6r00r05      [ 4]  161 	lda	((__rlulonglong_PARM_1 + 0x0004) + 1)
   007D B7*08         [ 3]  162 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   007F BF*07         [ 3]  163 	stx	*(__rlulonglong_sloc2_1_0 + 2)
   0081 6E 00*06      [ 4]  164 	mov	#0x00,*(__rlulonglong_sloc2_1_0 + 1)
   0084 6E 00*05      [ 4]  165 	mov	#0x00,*__rlulonglong_sloc2_1_0
   0087 BE*04         [ 3]  166 	ldx	*__rlulonglong_sloc1_1_0
   0089 27 0A         [ 3]  167 	beq	00121$
   008B                     168 00120$:
   008B 38*08         [ 4]  169 	lsl	*(__rlulonglong_sloc2_1_0 + 3)
   008D 39*07         [ 4]  170 	rol	*(__rlulonglong_sloc2_1_0 + 2)
   008F 39*06         [ 4]  171 	rol	*(__rlulonglong_sloc2_1_0 + 1)
   0091 39*05         [ 4]  172 	rol	*__rlulonglong_sloc2_1_0
   0093 5B F6         [ 3]  173 	dbnzx	00120$
   0095                     174 00121$:
   0095 B6*06         [ 3]  175 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   0097 BE*05         [ 3]  176 	ldx	*__rlulonglong_sloc2_1_0
   0099 B7*08         [ 3]  177 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   009B BF*07         [ 3]  178 	stx	*(__rlulonglong_sloc2_1_0 + 2)
   009D 6E 00*06      [ 4]  179 	mov	#0x00,*(__rlulonglong_sloc2_1_0 + 1)
   00A0 6E 00*05      [ 4]  180 	mov	#0x00,*__rlulonglong_sloc2_1_0
   00A3 B6*03         [ 3]  181 	lda	*(__rlulonglong_sloc0_1_0 + 3)
   00A5 BA*08         [ 3]  182 	ora	*(__rlulonglong_sloc2_1_0 + 3)
   00A7 B7*08         [ 3]  183 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   00A9 B6*02         [ 3]  184 	lda	*(__rlulonglong_sloc0_1_0 + 2)
   00AB BA*07         [ 3]  185 	ora	*(__rlulonglong_sloc2_1_0 + 2)
   00AD B7*07         [ 3]  186 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   00AF B6*01         [ 3]  187 	lda	*(__rlulonglong_sloc0_1_0 + 1)
   00B1 BA*06         [ 3]  188 	ora	*(__rlulonglong_sloc2_1_0 + 1)
   00B3 B7*06         [ 3]  189 	sta	*(__rlulonglong_sloc2_1_0 + 1)
   00B5 B6*00         [ 3]  190 	lda	*__rlulonglong_sloc0_1_0
   00B7 BA*05         [ 3]  191 	ora	*__rlulonglong_sloc2_1_0
   00B9 B7*05         [ 3]  192 	sta	*__rlulonglong_sloc2_1_0
   00BB B6*05         [ 3]  193 	lda	*__rlulonglong_sloc2_1_0
   00BD C7r00r00      [ 4]  194 	sta	__rlulonglong_PARM_1
   00C0 B6*06         [ 3]  195 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   00C2 C7r00r01      [ 4]  196 	sta	(__rlulonglong_PARM_1 + 1)
   00C5 B6*07         [ 3]  197 	lda	*(__rlulonglong_sloc2_1_0 + 2)
   00C7 C7r00r02      [ 4]  198 	sta	(__rlulonglong_PARM_1 + 2)
   00CA B6*08         [ 3]  199 	lda	*(__rlulonglong_sloc2_1_0 + 3)
   00CC C7r00r03      [ 4]  200 	sta	(__rlulonglong_PARM_1 + 3)
                            201 ;../_rlulonglong.c:60: (*bottom) <<= s;
   00CF C6r00r04      [ 4]  202 	lda	(__rlulonglong_PARM_1 + 0x0004)
   00D2 B7*05         [ 3]  203 	sta	*__rlulonglong_sloc2_1_0
   00D4 C6r00r05      [ 4]  204 	lda	((__rlulonglong_PARM_1 + 0x0004) + 1)
   00D7 B7*06         [ 3]  205 	sta	*(__rlulonglong_sloc2_1_0 + 1)
   00D9 C6r00r06      [ 4]  206 	lda	((__rlulonglong_PARM_1 + 0x0004) + 2)
   00DC B7*07         [ 3]  207 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   00DE C6r00r07      [ 4]  208 	lda	((__rlulonglong_PARM_1 + 0x0004) + 3)
   00E1 B7*08         [ 3]  209 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   00E3 BE*04         [ 3]  210 	ldx	*__rlulonglong_sloc1_1_0
   00E5 27 0A         [ 3]  211 	beq	00123$
   00E7                     212 00122$:
   00E7 38*08         [ 4]  213 	lsl	*(__rlulonglong_sloc2_1_0 + 3)
   00E9 39*07         [ 4]  214 	rol	*(__rlulonglong_sloc2_1_0 + 2)
   00EB 39*06         [ 4]  215 	rol	*(__rlulonglong_sloc2_1_0 + 1)
   00ED 39*05         [ 4]  216 	rol	*__rlulonglong_sloc2_1_0
   00EF 5B F6         [ 3]  217 	dbnzx	00122$
   00F1                     218 00123$:
   00F1 B6*05         [ 3]  219 	lda	*__rlulonglong_sloc2_1_0
   00F3 C7r00r04      [ 4]  220 	sta	(__rlulonglong_PARM_1 + 0x0004)
   00F6 B6*06         [ 3]  221 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   00F8 C7r00r05      [ 4]  222 	sta	((__rlulonglong_PARM_1 + 0x0004) + 1)
   00FB B6*07         [ 3]  223 	lda	*(__rlulonglong_sloc2_1_0 + 2)
   00FD C7r00r06      [ 4]  224 	sta	((__rlulonglong_PARM_1 + 0x0004) + 2)
   0100 B6*08         [ 3]  225 	lda	*(__rlulonglong_sloc2_1_0 + 3)
   0102 C7r00r07      [ 4]  226 	sta	((__rlulonglong_PARM_1 + 0x0004) + 3)
                            227 ;../_rlulonglong.c:62: return(l);
   0105 C6r00r00      [ 4]  228 	lda	__rlulonglong_PARM_1
   0108 B7*00         [ 3]  229 	sta	*___SDCC_hc08_ret7
   010A C6r00r01      [ 4]  230 	lda	(__rlulonglong_PARM_1 + 1)
   010D B7*00         [ 3]  231 	sta	*___SDCC_hc08_ret6
   010F C6r00r02      [ 4]  232 	lda	(__rlulonglong_PARM_1 + 2)
   0112 B7*00         [ 3]  233 	sta	*___SDCC_hc08_ret5
   0114 C6r00r03      [ 4]  234 	lda	(__rlulonglong_PARM_1 + 3)
   0117 B7*00         [ 3]  235 	sta	*___SDCC_hc08_ret4
   0119 C6r00r04      [ 4]  236 	lda	(__rlulonglong_PARM_1 + 4)
   011C B7*00         [ 3]  237 	sta	*___SDCC_hc08_ret3
   011E C6r00r05      [ 4]  238 	lda	(__rlulonglong_PARM_1 + 5)
   0121 B7*00         [ 3]  239 	sta	*___SDCC_hc08_ret2
   0123 CEr00r06      [ 4]  240 	ldx	(__rlulonglong_PARM_1 + 6)
   0126 C6r00r07      [ 4]  241 	lda	(__rlulonglong_PARM_1 + 7)
                            242 ;../_rlulonglong.c:63: }
   0129 81            [ 4]  243 	rts
                            244 	.area CSEG    (CODE)
                            245 	.area CONST   (CODE)
                            246 	.area XINIT   (CODE)
                            247 	.area CABS    (ABS,CODE)
