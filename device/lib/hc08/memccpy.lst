                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module memccpy
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _memccpy_PARM_4
                             23 	.globl _memccpy_PARM_3
                             24 	.globl _memccpy_PARM_2
                             25 	.globl _memccpy
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 	.area	OSEG    (PAG, OVR)
   0000                      34 _memccpy_sloc0_1_0:
   0000                      35 	.ds 2
   0002                      36 _memccpy_sloc1_1_0:
   0002                      37 	.ds 2
   0004                      38 _memccpy_sloc2_1_0:
   0004                      39 	.ds 2
   0006                      40 _memccpy_sloc3_1_0:
   0006                      41 	.ds 1
                             42 ;--------------------------------------------------------
                             43 ; absolute ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS)
                             46 	.area IABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; initialized external ram data
                             53 ;--------------------------------------------------------
                             54 	.area XISEG
                             55 ;--------------------------------------------------------
                             56 ; extended address mode data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG
   0000                      59 _memccpy_PARM_2:
   0000                      60 	.ds 2
   0002                      61 _memccpy_PARM_3:
   0002                      62 	.ds 2
   0004                      63 _memccpy_PARM_4:
   0004                      64 	.ds 2
                             65 ;--------------------------------------------------------
                             66 ; global & static initialisations
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area GSINIT  (CODE)
                             70 	.area GSFINAL (CODE)
                             71 	.area GSINIT  (CODE)
                             72 ;--------------------------------------------------------
                             73 ; Home
                             74 ;--------------------------------------------------------
                             75 	.area HOME    (CODE)
                             76 	.area HOME    (CODE)
                             77 ;--------------------------------------------------------
                             78 ; code
                             79 ;--------------------------------------------------------
                             80 	.area CSEG    (CODE)
                             81 ;------------------------------------------------------------
                             82 ;Allocation info for local variables in function 'memccpy'
                             83 ;------------------------------------------------------------
                             84 ;src                       Allocated with name '_memccpy_PARM_2'
                             85 ;c                         Allocated with name '_memccpy_PARM_3'
                             86 ;n                         Allocated with name '_memccpy_PARM_4'
                             87 ;dst                       Allocated to registers a x 
                             88 ;d                         Allocated to registers x h 
                             89 ;s                         Allocated to registers 
                             90 ;sloc0                     Allocated with name '_memccpy_sloc0_1_0'
                             91 ;sloc1                     Allocated with name '_memccpy_sloc1_1_0'
                             92 ;sloc2                     Allocated with name '_memccpy_sloc2_1_0'
                             93 ;sloc3                     Allocated with name '_memccpy_sloc3_1_0'
                             94 ;------------------------------------------------------------
                             95 ;../memccpy.c:31: void *memccpy (void *restrict dst, const void *restrict src, int c, size_t n)
                             96 ;	-----------------------------------------
                             97 ;	 function memccpy
                             98 ;	-----------------------------------------
                             99 ;	Register assignment is optimal.
                            100 ;	Stack space usage: 0 bytes.
   0000                     101 _memccpy:
                            102 ;../memccpy.c:33: char *d = dst;
   0000 B7*01         [ 3]  103 	sta	*(_memccpy_sloc0_1_0 + 1)
   0002 BF*00         [ 3]  104 	stx	*_memccpy_sloc0_1_0
                            105 ;../memccpy.c:34: const char *s = src;
   0004 C6r00r01      [ 4]  106 	lda	(_memccpy_PARM_2 + 1)
   0007 B7*03         [ 3]  107 	sta	*(_memccpy_sloc1_1_0 + 1)
   0009 C6r00r00      [ 4]  108 	lda	_memccpy_PARM_2
   000C B7*02         [ 3]  109 	sta	*_memccpy_sloc1_1_0
                            110 ;../memccpy.c:36: while (n--)
   000E C6r00r04      [ 4]  111 	lda	_memccpy_PARM_4
   0011 B7*04         [ 3]  112 	sta	*_memccpy_sloc2_1_0
   0013 C6r00r05      [ 4]  113 	lda	(_memccpy_PARM_4 + 1)
   0016 B7*05         [ 3]  114 	sta	*(_memccpy_sloc2_1_0 + 1)
   0018                     115 00103$:
   0018 55*04         [ 4]  116 	ldhx	*_memccpy_sloc2_1_0
   001A 89            [ 2]  117 	pshx
   001B 8B            [ 2]  118 	pshh
   001C 55*04         [ 4]  119 	ldhx	*_memccpy_sloc2_1_0
   001E AF FF         [ 2]  120 	aix	#-1
   0020 35*04         [ 4]  121 	sthx	*_memccpy_sloc2_1_0
   0022 8A            [ 2]  122 	pulh
   0023 88            [ 2]  123 	pulx
   0024 65 00 00      [ 3]  124 	cphx	#0x00
   0027 27 1F         [ 3]  125 	beq	00105$
                            126 ;../memccpy.c:37: if ((*d++ = *s++) == (unsigned char)c)
   0029 55*02         [ 4]  127 	ldhx	*_memccpy_sloc1_1_0
   002B F6            [ 2]  128 	lda	,x
   002C B7*06         [ 3]  129 	sta	*_memccpy_sloc3_1_0
   002E AF 01         [ 2]  130 	aix	#1
   0030 35*02         [ 4]  131 	sthx	*_memccpy_sloc1_1_0
   0032 55*00         [ 4]  132 	ldhx	*_memccpy_sloc0_1_0
   0034 B6*06         [ 3]  133 	lda	*_memccpy_sloc3_1_0
   0036 F7            [ 2]  134 	sta	,x
   0037 AF 01         [ 2]  135 	aix	#1
   0039 35*00         [ 4]  136 	sthx	*_memccpy_sloc0_1_0
   003B 55*00         [ 4]  137 	ldhx	*_memccpy_sloc0_1_0
   003D C6r00r03      [ 4]  138 	lda	(_memccpy_PARM_3 + 1)
   0040 B1*06         [ 3]  139 	cmp	*_memccpy_sloc3_1_0
   0042 26 D4         [ 3]  140 	bne	00103$
                            141 ;../memccpy.c:38: return (d);
   0044 9F            [ 1]  142 	txa
   0045 8B            [ 2]  143 	pshh
   0046 88            [ 2]  144 	pulx
   0047 81            [ 4]  145 	rts
   0048                     146 00105$:
                            147 ;../memccpy.c:40: return (0);
   0048 4F            [ 1]  148 	clra
   0049 97            [ 1]  149 	tax
                            150 ;../memccpy.c:41: }
   004A 81            [ 4]  151 	rts
                            152 	.area CSEG    (CODE)
                            153 	.area CONST   (CODE)
                            154 	.area XINIT   (CODE)
                            155 	.area CABS    (ABS,CODE)
