                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module qsort
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _qsort_PARM_4
                             23 	.globl _qsort_PARM_3
                             24 	.globl _qsort_PARM_2
                             25 	.globl _qsort
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
   0000                      30 _qsort_sloc0_1_0:
   0000                      31 	.ds 2
   0002                      32 _qsort_sloc1_1_0:
   0002                      33 	.ds 2
   0004                      34 _qsort_sloc2_1_0:
   0004                      35 	.ds 2
   0006                      36 _qsort_sloc3_1_0:
   0006                      37 	.ds 2
   0008                      38 _qsort_sloc4_1_0:
   0008                      39 	.ds 2
                             40 ;--------------------------------------------------------
                             41 ; overlayable items in ram
                             42 ;--------------------------------------------------------
                             43 	.area	OSEG    (PAG, OVR)
   0000                      44 _swap_sloc0_1_0:
   0000                      45 	.ds 2
   0002                      46 _swap_sloc1_1_0:
   0002                      47 	.ds 2
   0004                      48 _swap_sloc2_1_0:
   0004                      49 	.ds 2
                             50 ;--------------------------------------------------------
                             51 ; absolute ram data
                             52 ;--------------------------------------------------------
                             53 	.area IABS    (ABS)
                             54 	.area IABS    (ABS)
                             55 ;--------------------------------------------------------
                             56 ; absolute external ram data
                             57 ;--------------------------------------------------------
                             58 	.area XABS    (ABS)
                             59 ;--------------------------------------------------------
                             60 ; initialized external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XISEG
                             63 ;--------------------------------------------------------
                             64 ; extended address mode data
                             65 ;--------------------------------------------------------
                             66 	.area XSEG
   0000                      67 _swap_PARM_2:
   0000                      68 	.ds 2
   0002                      69 _swap_PARM_3:
   0002                      70 	.ds 2
   0004                      71 _qsort_PARM_2:
   0004                      72 	.ds 2
   0006                      73 _qsort_PARM_3:
   0006                      74 	.ds 2
   0008                      75 _qsort_PARM_4:
   0008                      76 	.ds 2
   000A                      77 _qsort_b_65536_41:
   000A                      78 	.ds 2
   000C                      79 _qsort_i_131072_42:
   000C                      80 	.ds 2
                             81 ;--------------------------------------------------------
                             82 ; global & static initialisations
                             83 ;--------------------------------------------------------
                             84 	.area HOME    (CODE)
                             85 	.area GSINIT  (CODE)
                             86 	.area GSFINAL (CODE)
                             87 	.area GSINIT  (CODE)
                             88 ;--------------------------------------------------------
                             89 ; Home
                             90 ;--------------------------------------------------------
                             91 	.area HOME    (CODE)
                             92 	.area HOME    (CODE)
                             93 ;--------------------------------------------------------
                             94 ; code
                             95 ;--------------------------------------------------------
                             96 	.area CSEG    (CODE)
                             97 ;------------------------------------------------------------
                             98 ;Allocation info for local variables in function 'swap'
                             99 ;------------------------------------------------------------
                            100 ;src                       Allocated with name '_swap_PARM_2'
                            101 ;n                         Allocated with name '_swap_PARM_3'
                            102 ;dst                       Allocated to registers a x 
                            103 ;d                         Allocated to registers 
                            104 ;s                         Allocated to registers 
                            105 ;tmp                       Allocated to registers a 
                            106 ;sloc0                     Allocated with name '_swap_sloc0_1_0'
                            107 ;sloc1                     Allocated with name '_swap_sloc1_1_0'
                            108 ;sloc2                     Allocated with name '_swap_sloc2_1_0'
                            109 ;------------------------------------------------------------
                            110 ;../qsort.c:33: static void swap(void *restrict dst, void *restrict src, size_t n)
                            111 ;	-----------------------------------------
                            112 ;	 function swap
                            113 ;	-----------------------------------------
                            114 ;	Register assignment is optimal.
                            115 ;	Stack space usage: 0 bytes.
   0000                     116 _swap:
                            117 ;../qsort.c:35: unsigned char *restrict d = dst;
   0000 B7*01         [ 3]  118 	sta	*(_swap_sloc0_1_0 + 1)
   0002 BF*00         [ 3]  119 	stx	*_swap_sloc0_1_0
                            120 ;../qsort.c:36: unsigned char *restrict s = src;
   0004 C6r00r01      [ 4]  121 	lda	(_swap_PARM_2 + 1)
   0007 B7*03         [ 3]  122 	sta	*(_swap_sloc1_1_0 + 1)
   0009 C6r00r00      [ 4]  123 	lda	_swap_PARM_2
   000C B7*02         [ 3]  124 	sta	*_swap_sloc1_1_0
                            125 ;../qsort.c:38: while(n--)
   000E C6r00r02      [ 4]  126 	lda	_swap_PARM_3
   0011 B7*04         [ 3]  127 	sta	*_swap_sloc2_1_0
   0013 C6r00r03      [ 4]  128 	lda	(_swap_PARM_3 + 1)
   0016 B7*05         [ 3]  129 	sta	*(_swap_sloc2_1_0 + 1)
   0018                     130 00101$:
   0018 55*04         [ 4]  131 	ldhx	*_swap_sloc2_1_0
   001A 89            [ 2]  132 	pshx
   001B 8B            [ 2]  133 	pshh
   001C 55*04         [ 4]  134 	ldhx	*_swap_sloc2_1_0
   001E AF FF         [ 2]  135 	aix	#-1
   0020 35*04         [ 4]  136 	sthx	*_swap_sloc2_1_0
   0022 8A            [ 2]  137 	pulh
   0023 88            [ 2]  138 	pulx
   0024 65 00 00      [ 3]  139 	cphx	#0x00
   0027 27 19         [ 3]  140 	beq	00104$
                            141 ;../qsort.c:40: unsigned char tmp = *d;
   0029 55*00         [ 4]  142 	ldhx	*_swap_sloc0_1_0
   002B F6            [ 2]  143 	lda	,x
                            144 ;../qsort.c:41: *d = *s;
   002C 55*02         [ 4]  145 	ldhx	*_swap_sloc1_1_0
   002E FE            [ 2]  146 	ldx	,x
   002F 87            [ 2]  147 	psha
   0030 9F            [ 1]  148 	txa
   0031 55*00         [ 4]  149 	ldhx	*_swap_sloc0_1_0
   0033 F7            [ 2]  150 	sta	,x
   0034 AF 01         [ 2]  151 	aix	#1
   0036 35*00         [ 4]  152 	sthx	*_swap_sloc0_1_0
   0038 86            [ 2]  153 	pula
                            154 ;../qsort.c:42: *s = tmp;
   0039 55*02         [ 4]  155 	ldhx	*_swap_sloc1_1_0
   003B F7            [ 2]  156 	sta	,x
   003C AF 01         [ 2]  157 	aix	#1
   003E 35*02         [ 4]  158 	sthx	*_swap_sloc1_1_0
                            159 ;../qsort.c:43: d++;
                            160 ;../qsort.c:44: s++;
   0040 20 D6         [ 3]  161 	bra	00101$
   0042                     162 00104$:
                            163 ;../qsort.c:46: }
   0042 81            [ 4]  164 	rts
                            165 ;------------------------------------------------------------
                            166 ;Allocation info for local variables in function 'qsort'
                            167 ;------------------------------------------------------------
                            168 ;sloc0                     Allocated with name '_qsort_sloc0_1_0'
                            169 ;sloc1                     Allocated with name '_qsort_sloc1_1_0'
                            170 ;sloc2                     Allocated with name '_qsort_sloc2_1_0'
                            171 ;sloc3                     Allocated with name '_qsort_sloc3_1_0'
                            172 ;sloc4                     Allocated with name '_qsort_sloc4_1_0'
                            173 ;nmemb                     Allocated with name '_qsort_PARM_2'
                            174 ;size                      Allocated with name '_qsort_PARM_3'
                            175 ;compar                    Allocated with name '_qsort_PARM_4'
                            176 ;base                      Allocated to registers x h 
                            177 ;b                         Allocated with name '_qsort_b_65536_41'
                            178 ;i                         Allocated with name '_qsort_i_131072_42'
                            179 ;j                         Allocated to registers x h 
                            180 ;------------------------------------------------------------
                            181 ;../qsort.c:48: void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *) __reentrant)
                            182 ;	-----------------------------------------
                            183 ;	 function qsort
                            184 ;	-----------------------------------------
                            185 ;	Register assignment is optimal.
                            186 ;	Stack space usage: 0 bytes.
   0043                     187 _qsort:
   0043 89            [ 2]  188 	pshx
   0044 97            [ 1]  189 	tax
   0045 8A            [ 2]  190 	pulh
                            191 ;../qsort.c:50: unsigned char *b = base;
   0046 8B            [ 2]  192 	pshh
   0047 86            [ 2]  193 	pula
   0048 C7r00r0A      [ 4]  194 	sta	_qsort_b_65536_41
   004B CFr00r0B      [ 4]  195 	stx	(_qsort_b_65536_41 + 1)
                            196 ;../qsort.c:52: if(nmemb <= 1)
   004E A6 01         [ 2]  197 	lda	#0x01
   0050 C0r00r05      [ 4]  198 	sub	(_qsort_PARM_2 + 1)
   0053 4F            [ 1]  199 	clra
   0054 C2r00r04      [ 4]  200 	sbc	_qsort_PARM_2
   0057 25 01         [ 3]  201 	bcs	00102$
                            202 ;../qsort.c:53: return;
   0059 81            [ 4]  203 	rts
   005A                     204 00102$:
                            205 ;../qsort.c:55: for(unsigned char *i = base; i < b + nmemb * size; i += size)
   005A 8B            [ 2]  206 	pshh
   005B 86            [ 2]  207 	pula
   005C C7r00r0C      [ 4]  208 	sta	_qsort_i_131072_42
   005F CFr00r0D      [ 4]  209 	stx	(_qsort_i_131072_42 + 1)
   0062 C6r00r06      [ 4]  210 	lda	_qsort_PARM_3
   0065 B7*00         [ 3]  211 	sta	*_qsort_sloc0_1_0
   0067 C6r00r07      [ 4]  212 	lda	(_qsort_PARM_3 + 1)
   006A B7*01         [ 3]  213 	sta	*(_qsort_sloc0_1_0 + 1)
   006C B6*00         [ 3]  214 	lda	*_qsort_sloc0_1_0
   006E C7r00r00      [ 4]  215 	sta	__mulint_PARM_2
   0071 B6*01         [ 3]  216 	lda	*(_qsort_sloc0_1_0 + 1)
   0073 C7r00r01      [ 4]  217 	sta	(__mulint_PARM_2 + 1)
   0076 C6r00r05      [ 4]  218 	lda	(_qsort_PARM_2 + 1)
   0079 CEr00r04      [ 4]  219 	ldx	_qsort_PARM_2
   007C CDr00r00      [ 5]  220 	jsr	__mulint
   007F CBr00r0B      [ 4]  221 	add	(_qsort_b_65536_41 + 1)
   0082 B7*03         [ 3]  222 	sta	*(_qsort_sloc1_1_0 + 1)
   0084 9F            [ 1]  223 	txa
   0085 C9r00r0A      [ 4]  224 	adc	_qsort_b_65536_41
   0088 B7*02         [ 3]  225 	sta	*_qsort_sloc1_1_0
   008A                     226 00110$:
   008A C6r00r0D      [ 4]  227 	lda	(_qsort_i_131072_42 + 1)
   008D B0*03         [ 3]  228 	sub	*(_qsort_sloc1_1_0 + 1)
   008F C6r00r0C      [ 4]  229 	lda	_qsort_i_131072_42
   0092 B2*02         [ 3]  230 	sbc	*_qsort_sloc1_1_0
   0094 25 01         [ 3]  231 	bcs	00145$
   0096 81            [ 4]  232 	rts
   0097                     233 00145$:
                            234 ;../qsort.c:57: for(unsigned char *j = i; (j > b) && (*compar)(j, j - size) < 0; j -= size)
   0097 C6r00r0C      [ 4]  235 	lda	_qsort_i_131072_42
   009A 87            [ 2]  236 	psha
   009B 8A            [ 2]  237 	pulh
   009C CEr00r0D      [ 4]  238 	ldx	(_qsort_i_131072_42 + 1)
   009F                     239 00107$:
   009F C6r00r0B      [ 4]  240 	lda	(_qsort_b_65536_41 + 1)
   00A2 89            [ 2]  241 	pshx
   00A3 9E E0 01      [ 4]  242 	sub	1,s
   00A6 A7 01         [ 2]  243 	ais	#1
   00A8 C6r00r0A      [ 4]  244 	lda	_qsort_b_65536_41
   00AB 8B            [ 2]  245 	pshh
   00AC 9E E2 01      [ 4]  246 	sbc	1,s
   00AF A7 01         [ 2]  247 	ais	#1
   00B1 24 54         [ 3]  248 	bcc	00111$
   00B3 9F            [ 1]  249 	txa
   00B4 B0*01         [ 3]  250 	sub	*(_qsort_sloc0_1_0 + 1)
   00B6 B7*05         [ 3]  251 	sta	*(_qsort_sloc2_1_0 + 1)
   00B8 8B            [ 2]  252 	pshh
   00B9 86            [ 2]  253 	pula
   00BA B2*00         [ 3]  254 	sbc	*_qsort_sloc0_1_0
   00BC B7*04         [ 3]  255 	sta	*_qsort_sloc2_1_0
   00BE 4E*05*07      [ 5]  256 	mov	*(_qsort_sloc2_1_0 + 1),*(_qsort_sloc3_1_0 + 1)
   00C1 4E*04*06      [ 5]  257 	mov	*_qsort_sloc2_1_0,*_qsort_sloc3_1_0
   00C4 BF*09         [ 3]  258 	stx	*(_qsort_sloc4_1_0 + 1)
   00C6 8B            [ 2]  259 	pshh
   00C7 86            [ 2]  260 	pula
   00C8 B7*08         [ 3]  261 	sta	*_qsort_sloc4_1_0
   00CA B6*07         [ 3]  262 	lda	*(_qsort_sloc3_1_0 + 1)
   00CC 87            [ 2]  263 	psha
   00CD B6*06         [ 3]  264 	lda	*_qsort_sloc3_1_0
   00CF 87            [ 2]  265 	psha
   00D0 AD 02         [ 4]  266 	bsr	00148$
   00D2 20 0D         [ 3]  267 	bra	00147$
   00D4                     268 00148$:
   00D4 C6r00r09      [ 4]  269 	lda	(_qsort_PARM_4 + 1)
   00D7 87            [ 2]  270 	psha
   00D8 C6r00r08      [ 4]  271 	lda	_qsort_PARM_4
   00DB 87            [ 2]  272 	psha
   00DC B6*09         [ 3]  273 	lda	*(_qsort_sloc4_1_0 + 1)
   00DE BE*08         [ 3]  274 	ldx	*_qsort_sloc4_1_0
   00E0 81            [ 4]  275 	rts
   00E1                     276 00147$:
   00E1 A7 02         [ 2]  277 	ais	#2
   00E3 9F            [ 1]  278 	txa
   00E4 A0 00         [ 2]  279 	sub	#0x00
   00E6 90 1F         [ 3]  280 	bge	00111$
                            281 ;../qsort.c:58: swap(j, j - size, size);
   00E8 BE*04         [ 3]  282 	ldx	*_qsort_sloc2_1_0
   00EA B6*05         [ 3]  283 	lda	*(_qsort_sloc2_1_0 + 1)
   00EC C7r00r01      [ 4]  284 	sta	(_swap_PARM_2 + 1)
   00EF CFr00r00      [ 4]  285 	stx	_swap_PARM_2
   00F2 B6*00         [ 3]  286 	lda	*_qsort_sloc0_1_0
   00F4 C7r00r02      [ 4]  287 	sta	_swap_PARM_3
   00F7 B6*01         [ 3]  288 	lda	*(_qsort_sloc0_1_0 + 1)
   00F9 C7r00r03      [ 4]  289 	sta	(_swap_PARM_3 + 1)
   00FC B6*09         [ 3]  290 	lda	*(_qsort_sloc4_1_0 + 1)
   00FE BE*08         [ 3]  291 	ldx	*_qsort_sloc4_1_0
   0100 CDr00r00      [ 5]  292 	jsr	_swap
                            293 ;../qsort.c:57: for(unsigned char *j = i; (j > b) && (*compar)(j, j - size) < 0; j -= size)
   0103 55*04         [ 4]  294 	ldhx	*_qsort_sloc2_1_0
   0105 20 98         [ 3]  295 	bra	00107$
   0107                     296 00111$:
                            297 ;../qsort.c:55: for(unsigned char *i = base; i < b + nmemb * size; i += size)
   0107 45r00r0C      [ 3]  298 	ldhx	#_qsort_i_131072_42
   010A B6*01         [ 3]  299 	lda	*(_qsort_sloc0_1_0 + 1)
   010C EB 01         [ 3]  300 	add	1,x
   010E E7 01         [ 3]  301 	sta	1,x
   0110 B6*00         [ 3]  302 	lda	*_qsort_sloc0_1_0
   0112 F9            [ 2]  303 	adc	,x
   0113 F7            [ 2]  304 	sta	,x
   0114 CCr00r8A      [ 3]  305 	jmp	00110$
                            306 ;../qsort.c:60: }
   0117 81            [ 4]  307 	rts
                            308 	.area CSEG    (CODE)
                            309 	.area CONST   (CODE)
                            310 	.area XINIT   (CODE)
                            311 	.area CABS    (ABS,CODE)
