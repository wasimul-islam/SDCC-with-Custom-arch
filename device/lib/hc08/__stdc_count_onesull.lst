                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __stdc_count_onesull
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl ___stdc_count_onesull_PARM_1
                             23 	.globl ___stdc_count_onesull
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area DSEG    (PAG)
   0000                      28 ___stdc_count_onesull_sloc0_1_0:
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; absolute ram data
                             35 ;--------------------------------------------------------
                             36 	.area IABS    (ABS)
                             37 	.area IABS    (ABS)
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area XABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; initialized external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XISEG
                             46 ;--------------------------------------------------------
                             47 ; extended address mode data
                             48 ;--------------------------------------------------------
                             49 	.area XSEG
   0000                      50 ___stdc_count_onesull_PARM_1:
   0000                      51 	.ds 8
                             52 ;--------------------------------------------------------
                             53 ; global & static initialisations
                             54 ;--------------------------------------------------------
                             55 	.area HOME    (CODE)
                             56 	.area GSINIT  (CODE)
                             57 	.area GSFINAL (CODE)
                             58 	.area GSINIT  (CODE)
                             59 ;--------------------------------------------------------
                             60 ; Home
                             61 ;--------------------------------------------------------
                             62 	.area HOME    (CODE)
                             63 	.area HOME    (CODE)
                             64 ;--------------------------------------------------------
                             65 ; code
                             66 ;--------------------------------------------------------
                             67 	.area CSEG    (CODE)
                             68 ;------------------------------------------------------------
                             69 ;Allocation info for local variables in function '__stdc_count_onesull'
                             70 ;------------------------------------------------------------
                             71 ;sloc0                     Allocated with name '___stdc_count_onesull_sloc0_1_0'
                             72 ;value                     Allocated with name '___stdc_count_onesull_PARM_1'
                             73 ;count                     Allocated to registers 
                             74 ;i                         Allocated to registers 
                             75 ;------------------------------------------------------------
                             76 ;../__stdc_count_onesull.c:37: int_fast8_t __stdc_count_onesull(unsigned long long value)
                             77 ;	-----------------------------------------
                             78 ;	 function __stdc_count_onesull
                             79 ;	-----------------------------------------
                             80 ;	Register assignment is optimal.
                             81 ;	Stack space usage: 0 bytes.
   0000                      82 ___stdc_count_onesull:
                             83 ;../__stdc_count_onesull.c:40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
   0000 4F            [ 1]   84 	clra
   0001 97            [ 1]   85 	tax
   0002                      86 00105$:
   0002 A3 40         [ 2]   87 	cpx	#0x40
   0004 25 01         [ 3]   88 	bcs	00125$
   0006 81            [ 4]   89 	rts
   0007                      90 00125$:
                             91 ;../__stdc_count_onesull.c:41: if(value & (1ull << i))
   0007 87            [ 2]   92 	psha
   0008 4F            [ 1]   93 	clra
   0009 C7r00r00      [ 4]   94 	sta	__rlulonglong_PARM_1
   000C C7r00r01      [ 4]   95 	sta	(__rlulonglong_PARM_1 + 1)
   000F C7r00r02      [ 4]   96 	sta	(__rlulonglong_PARM_1 + 2)
   0012 C7r00r03      [ 4]   97 	sta	(__rlulonglong_PARM_1 + 3)
   0015 C7r00r04      [ 4]   98 	sta	(__rlulonglong_PARM_1 + 4)
   0018 C7r00r05      [ 4]   99 	sta	(__rlulonglong_PARM_1 + 5)
   001B C7r00r06      [ 4]  100 	sta	(__rlulonglong_PARM_1 + 6)
   001E 4C            [ 1]  101 	inca
   001F C7r00r07      [ 4]  102 	sta	(__rlulonglong_PARM_1 + 7)
   0022 86            [ 2]  103 	pula
   0023 CFr00r00      [ 4]  104 	stx	__rlulonglong_PARM_2
   0026 87            [ 2]  105 	psha
   0027 89            [ 2]  106 	pshx
   0028 CDr00r00      [ 5]  107 	jsr	__rlulonglong
   002B B7*07         [ 3]  108 	sta	*(___stdc_count_onesull_sloc0_1_0 + 7)
   002D BF*06         [ 3]  109 	stx	*(___stdc_count_onesull_sloc0_1_0 + 6)
   002F 4E*00*05      [ 5]  110 	mov	*___SDCC_hc08_ret2,*(___stdc_count_onesull_sloc0_1_0 + 5)
   0032 4E*00*04      [ 5]  111 	mov	*___SDCC_hc08_ret3,*(___stdc_count_onesull_sloc0_1_0 + 4)
   0035 4E*00*03      [ 5]  112 	mov	*___SDCC_hc08_ret4,*(___stdc_count_onesull_sloc0_1_0 + 3)
   0038 4E*00*02      [ 5]  113 	mov	*___SDCC_hc08_ret5,*(___stdc_count_onesull_sloc0_1_0 + 2)
   003B 4E*00*01      [ 5]  114 	mov	*___SDCC_hc08_ret6,*(___stdc_count_onesull_sloc0_1_0 + 1)
   003E 4E*00*00      [ 5]  115 	mov	*___SDCC_hc08_ret7,*___stdc_count_onesull_sloc0_1_0
   0041 88            [ 2]  116 	pulx
   0042 C6r00r07      [ 4]  117 	lda	(___stdc_count_onesull_PARM_1 + 7)
   0045 B5*07         [ 3]  118 	bit	*(___stdc_count_onesull_sloc0_1_0 + 7)
   0047 26 2F         [ 3]  119 	bne	00126$
   0049 C6r00r06      [ 4]  120 	lda	(___stdc_count_onesull_PARM_1 + 6)
   004C B5*06         [ 3]  121 	bit	*(___stdc_count_onesull_sloc0_1_0 + 6)
   004E 26 28         [ 3]  122 	bne	00126$
   0050 C6r00r05      [ 4]  123 	lda	(___stdc_count_onesull_PARM_1 + 5)
   0053 B5*05         [ 3]  124 	bit	*(___stdc_count_onesull_sloc0_1_0 + 5)
   0055 26 21         [ 3]  125 	bne	00126$
   0057 C6r00r04      [ 4]  126 	lda	(___stdc_count_onesull_PARM_1 + 4)
   005A B5*04         [ 3]  127 	bit	*(___stdc_count_onesull_sloc0_1_0 + 4)
   005C 26 1A         [ 3]  128 	bne	00126$
   005E C6r00r03      [ 4]  129 	lda	(___stdc_count_onesull_PARM_1 + 3)
   0061 B5*03         [ 3]  130 	bit	*(___stdc_count_onesull_sloc0_1_0 + 3)
   0063 26 13         [ 3]  131 	bne	00126$
   0065 C6r00r02      [ 4]  132 	lda	(___stdc_count_onesull_PARM_1 + 2)
   0068 B5*02         [ 3]  133 	bit	*(___stdc_count_onesull_sloc0_1_0 + 2)
   006A 26 0C         [ 3]  134 	bne	00126$
   006C C6r00r01      [ 4]  135 	lda	(___stdc_count_onesull_PARM_1 + 1)
   006F B5*01         [ 3]  136 	bit	*(___stdc_count_onesull_sloc0_1_0 + 1)
   0071 26 05         [ 3]  137 	bne	00126$
   0073 C6r00r00      [ 4]  138 	lda	___stdc_count_onesull_PARM_1
   0076 B5*00         [ 3]  139 	bit	*___stdc_count_onesull_sloc0_1_0
   0078                     140 00126$:
   0078 86            [ 2]  141 	pula
   0079 27 01         [ 3]  142 	beq	00106$
                            143 ;../__stdc_count_onesull.c:42: count++;
   007B 4C            [ 1]  144 	inca
   007C                     145 00106$:
                            146 ;../__stdc_count_onesull.c:40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
   007C AF 01         [ 2]  147 	aix	#1
   007E 20 82         [ 3]  148 	bra	00105$
                            149 ;../__stdc_count_onesull.c:43: return count;
                            150 ;../__stdc_count_onesull.c:44: }
   0080 81            [ 4]  151 	rts
                            152 	.area CSEG    (CODE)
                            153 	.area CONST   (CODE)
                            154 	.area XINIT   (CODE)
                            155 	.area CABS    (ABS,CODE)
