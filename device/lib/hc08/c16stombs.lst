                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module c16stombs
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl ___memcpy
                             23 	.globl _wctomb
                             24 	.globl ___c16stombs_PARM_3
                             25 	.globl ___c16stombs_PARM_2
                             26 	.globl ___c16stombs
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 ___c16stombs_sloc0_1_0:
   0000                      32 	.ds 2
   0002                      33 ___c16stombs_sloc1_1_0:
   0002                      34 	.ds 2
   0004                      35 ___c16stombs_sloc2_1_0:
   0004                      36 	.ds 4
   0008                      37 ___c16stombs_sloc3_1_0:
   0008                      38 	.ds 4
                             39 ;--------------------------------------------------------
                             40 ; overlayable items in ram
                             41 ;--------------------------------------------------------
                             42 ;--------------------------------------------------------
                             43 ; absolute ram data
                             44 ;--------------------------------------------------------
                             45 	.area IABS    (ABS)
                             46 	.area IABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; initialized external ram data
                             53 ;--------------------------------------------------------
                             54 	.area XISEG
                             55 ;--------------------------------------------------------
                             56 ; extended address mode data
                             57 ;--------------------------------------------------------
                             58 	.area XSEG
   0000                      59 ___c16stombs_PARM_2:
   0000                      60 	.ds 2
   0002                      61 ___c16stombs_PARM_3:
   0002                      62 	.ds 2
   0004                      63 ___c16stombs_s_65536_75:
   0004                      64 	.ds 2
   0006                      65 ___c16stombs_m_65536_76:
   0006                      66 	.ds 2
   0008                      67 ___c16stombs_b_65536_76:
   0008                      68 	.ds 4
   000C                      69 ___c16stombs_l_196608_78:
   000C                      70 	.ds 2
   000E                      71 ___c16stombs_codepoint_196608_78:
   000E                      72 	.ds 4
                             73 ;--------------------------------------------------------
                             74 ; global & static initialisations
                             75 ;--------------------------------------------------------
                             76 	.area HOME    (CODE)
                             77 	.area GSINIT  (CODE)
                             78 	.area GSFINAL (CODE)
                             79 	.area GSINIT  (CODE)
                             80 ;--------------------------------------------------------
                             81 ; Home
                             82 ;--------------------------------------------------------
                             83 	.area HOME    (CODE)
                             84 	.area HOME    (CODE)
                             85 ;--------------------------------------------------------
                             86 ; code
                             87 ;--------------------------------------------------------
                             88 	.area CSEG    (CODE)
                             89 ;------------------------------------------------------------
                             90 ;Allocation info for local variables in function '__c16stombs'
                             91 ;------------------------------------------------------------
                             92 ;sloc0                     Allocated with name '___c16stombs_sloc0_1_0'
                             93 ;sloc1                     Allocated with name '___c16stombs_sloc1_1_0'
                             94 ;sloc2                     Allocated with name '___c16stombs_sloc2_1_0'
                             95 ;sloc3                     Allocated with name '___c16stombs_sloc3_1_0'
                             96 ;c16s                      Allocated with name '___c16stombs_PARM_2'
                             97 ;n                         Allocated with name '___c16stombs_PARM_3'
                             98 ;s                         Allocated with name '___c16stombs_s_65536_75'
                             99 ;m                         Allocated with name '___c16stombs_m_65536_76'
                            100 ;b                         Allocated with name '___c16stombs_b_65536_76'
                            101 ;l                         Allocated with name '___c16stombs_l_196608_78'
                            102 ;codepoint                 Allocated with name '___c16stombs_codepoint_196608_78'
                            103 ;------------------------------------------------------------
                            104 ;../c16stombs.c:44: size_t __c16stombs(char *restrict s, const char16_t *restrict c16s, size_t n)
                            105 ;	-----------------------------------------
                            106 ;	 function __c16stombs
                            107 ;	-----------------------------------------
                            108 ;	Register assignment might be sub-optimal.
                            109 ;	Stack space usage: 0 bytes.
   0000                     110 ___c16stombs:
   0000 C7r00r05      [ 4]  111 	sta	(___c16stombs_s_65536_75 + 1)
   0003 CFr00r04      [ 4]  112 	stx	___c16stombs_s_65536_75
                            113 ;../c16stombs.c:46: size_t m = 0;
   0006 4F            [ 1]  114 	clra
   0007 C7r00r06      [ 4]  115 	sta	___c16stombs_m_65536_76
   000A C7r00r07      [ 4]  116 	sta	(___c16stombs_m_65536_76 + 1)
                            117 ;../c16stombs.c:87: return(m);
   000D                     118 00119$:
                            119 ;../c16stombs.c:54: if(c16s[0] < 0xd800 || c16s[0] >= 0xe000) // Basic multilingual plane
   000D C6r00r00      [ 4]  120 	lda	___c16stombs_PARM_2
   0010 B7*00         [ 3]  121 	sta	*___c16stombs_sloc0_1_0
   0012 C6r00r01      [ 4]  122 	lda	(___c16stombs_PARM_2 + 1)
   0015 B7*01         [ 3]  123 	sta	*(___c16stombs_sloc0_1_0 + 1)
   0017 55*00         [ 4]  124 	ldhx	*___c16stombs_sloc0_1_0
   0019 F6            [ 2]  125 	lda	,x
   001A 87            [ 2]  126 	psha
   001B EE 01         [ 3]  127 	ldx	1,x
   001D 8A            [ 2]  128 	pulh
                            129 ;../c16stombs.c:57: c16s++;
   001E 89            [ 2]  130 	pshx
   001F 8B            [ 2]  131 	pshh
   0020 55*00         [ 4]  132 	ldhx	*___c16stombs_sloc0_1_0
   0022 AF 02         [ 2]  133 	aix	#2
   0024 35*02         [ 4]  134 	sthx	*___c16stombs_sloc1_1_0
   0026 8A            [ 2]  135 	pulh
   0027 88            [ 2]  136 	pulx
                            137 ;../c16stombs.c:56: codepoint = c16s[0];
   0028 BF*07         [ 3]  138 	stx	*(___c16stombs_sloc2_1_0 + 3)
   002A 8B            [ 2]  139 	pshh
   002B 86            [ 2]  140 	pula
   002C B7*06         [ 3]  141 	sta	*(___c16stombs_sloc2_1_0 + 2)
   002E 6E 00*05      [ 4]  142 	mov	#0x00,*(___c16stombs_sloc2_1_0 + 1)
   0031 6E 00*04      [ 4]  143 	mov	#0x00,*___c16stombs_sloc2_1_0
                            144 ;../c16stombs.c:54: if(c16s[0] < 0xd800 || c16s[0] >= 0xe000) // Basic multilingual plane
   0034 65 D8 00      [ 3]  145 	cphx	#0xd800
   0037 25 05         [ 3]  146 	bcs	00106$
   0039 65 E0 00      [ 3]  147 	cphx	#0xe000
   003C 25 18         [ 3]  148 	bcs	00107$
   003E                     149 00106$:
                            150 ;../c16stombs.c:56: codepoint = c16s[0];
   003E 45r00r0E      [ 3]  151 	ldhx	#___c16stombs_codepoint_196608_78
   0041 5E*04         [ 4]  152 	mov	*___c16stombs_sloc2_1_0,x+
   0043 5E*05         [ 4]  153 	mov	*(___c16stombs_sloc2_1_0 + 1),x+
   0045 5E*06         [ 4]  154 	mov	*(___c16stombs_sloc2_1_0 + 2),x+
   0047 5E*07         [ 4]  155 	mov	*(___c16stombs_sloc2_1_0 + 3),x+
                            156 ;../c16stombs.c:57: c16s++;
   0049 B6*02         [ 3]  157 	lda	*___c16stombs_sloc1_1_0
   004B C7r00r00      [ 4]  158 	sta	___c16stombs_PARM_2
   004E B6*03         [ 3]  159 	lda	*(___c16stombs_sloc1_1_0 + 1)
   0050 C7r00r01      [ 4]  160 	sta	(___c16stombs_PARM_2 + 1)
   0053 CCr00rDC      [ 3]  161 	jmp	00108$
   0056                     162 00107$:
                            163 ;../c16stombs.c:59: else if(c16s[0] > 0xdbff || c16s[1] < 0xdc00 || c16s[1] > 0xdfff) // Unpaired surrogate
   0056 65 DB FF      [ 3]  164 	cphx	#0xdbff
   0059 22 11         [ 3]  165 	bhi	00101$
   005B 55*02         [ 4]  166 	ldhx	*___c16stombs_sloc1_1_0
   005D F6            [ 2]  167 	lda	,x
   005E 87            [ 2]  168 	psha
   005F EE 01         [ 3]  169 	ldx	1,x
   0061 8A            [ 2]  170 	pulh
   0062 65 DC 00      [ 3]  171 	cphx	#0xdc00
   0065 25 05         [ 3]  172 	bcs	00101$
   0067 65 DF FF      [ 3]  173 	cphx	#0xdfff
   006A 23 04         [ 3]  174 	bls	00102$
   006C                     175 00101$:
                            176 ;../c16stombs.c:60: return(-1);
   006C A6 FF         [ 2]  177 	lda	#0xff
   006E 97            [ 1]  178 	tax
   006F 81            [ 4]  179 	rts
   0070                     180 00102$:
                            181 ;../c16stombs.c:63: codepoint = ((unsigned long)(c16s[0]) << 10) -(0xd800ul << 10) + (unsigned long)(c16s[1]) - 0xdc00ul + 0x10000ul;
   0070 89            [ 2]  182 	pshx
   0071 B6*06         [ 3]  183 	lda	*(___c16stombs_sloc2_1_0 + 2)
   0073 BE*05         [ 3]  184 	ldx	*(___c16stombs_sloc2_1_0 + 1)
   0075 48            [ 1]  185 	lsla
   0076 59            [ 1]  186 	rolx
   0077 48            [ 1]  187 	lsla
   0078 59            [ 1]  188 	rolx
   0079 B7*05         [ 3]  189 	sta	*(___c16stombs_sloc2_1_0 + 1)
   007B BF*04         [ 3]  190 	stx	*___c16stombs_sloc2_1_0
   007D 88            [ 2]  191 	pulx
   007E B6*07         [ 3]  192 	lda	*(___c16stombs_sloc2_1_0 + 3)
   0080 48            [ 1]  193 	lsla	
   0081 48            [ 1]  194 	lsla	
   0082 B7*06         [ 3]  195 	sta	*(___c16stombs_sloc2_1_0 + 2)
   0084 B6*07         [ 3]  196 	lda	*(___c16stombs_sloc2_1_0 + 3)
   0086 49            [ 1]  197 	rola	
   0087 49            [ 1]  198 	rola	
   0088 49            [ 1]  199 	rola	
   0089 A4 03         [ 2]  200 	and	#0x03
   008B BA*05         [ 3]  201 	ora	*(___c16stombs_sloc2_1_0 + 1)
   008D B7*05         [ 3]  202 	sta	*(___c16stombs_sloc2_1_0 + 1)
   008F 6E 00*07      [ 4]  203 	mov	#0x00,*(___c16stombs_sloc2_1_0 + 3)
   0092 BF*0B         [ 3]  204 	stx	*(___c16stombs_sloc3_1_0 + 3)
   0094 8B            [ 2]  205 	pshh
   0095 86            [ 2]  206 	pula
   0096 B7*0A         [ 3]  207 	sta	*(___c16stombs_sloc3_1_0 + 2)
   0098 6E 00*09      [ 4]  208 	mov	#0x00,*(___c16stombs_sloc3_1_0 + 1)
   009B 6E 00*08      [ 4]  209 	mov	#0x00,*___c16stombs_sloc3_1_0
   009E B6*07         [ 3]  210 	lda	*(___c16stombs_sloc2_1_0 + 3)
   00A0 BB*0B         [ 3]  211 	add	*(___c16stombs_sloc3_1_0 + 3)
   00A2 B7*0B         [ 3]  212 	sta	*(___c16stombs_sloc3_1_0 + 3)
   00A4 B6*06         [ 3]  213 	lda	*(___c16stombs_sloc2_1_0 + 2)
   00A6 B9*0A         [ 3]  214 	adc	*(___c16stombs_sloc3_1_0 + 2)
   00A8 B7*0A         [ 3]  215 	sta	*(___c16stombs_sloc3_1_0 + 2)
   00AA B6*05         [ 3]  216 	lda	*(___c16stombs_sloc2_1_0 + 1)
   00AC B9*09         [ 3]  217 	adc	*(___c16stombs_sloc3_1_0 + 1)
   00AE B7*09         [ 3]  218 	sta	*(___c16stombs_sloc3_1_0 + 1)
   00B0 B6*04         [ 3]  219 	lda	*___c16stombs_sloc2_1_0
   00B2 B9*08         [ 3]  220 	adc	*___c16stombs_sloc3_1_0
   00B4 B7*08         [ 3]  221 	sta	*___c16stombs_sloc3_1_0
   00B6 45r00r0E      [ 3]  222 	ldhx	#___c16stombs_codepoint_196608_78
   00B9 B6*0B         [ 3]  223 	lda	*(___c16stombs_sloc3_1_0 + 3)
   00BB E7 03         [ 3]  224 	sta	3,x
   00BD B6*0A         [ 3]  225 	lda	*(___c16stombs_sloc3_1_0 + 2)
   00BF AB 24         [ 2]  226 	add	#0x24
   00C1 E7 02         [ 3]  227 	sta	2,x
   00C3 B6*09         [ 3]  228 	lda	*(___c16stombs_sloc3_1_0 + 1)
   00C5 A9 A0         [ 2]  229 	adc	#0xa0
   00C7 E7 01         [ 3]  230 	sta	1,x
   00C9 B6*08         [ 3]  231 	lda	*___c16stombs_sloc3_1_0
   00CB A9 FC         [ 2]  232 	adc	#0xfc
   00CD F7            [ 2]  233 	sta	,x
                            234 ;../c16stombs.c:64: c16s += 2;
   00CE 45r00r00      [ 3]  235 	ldhx	#___c16stombs_PARM_2
   00D1 B6*01         [ 3]  236 	lda	*(___c16stombs_sloc0_1_0 + 1)
   00D3 AB 04         [ 2]  237 	add	#0x04
   00D5 E7 01         [ 3]  238 	sta	1,x
   00D7 B6*00         [ 3]  239 	lda	*___c16stombs_sloc0_1_0
   00D9 A9 00         [ 2]  240 	adc	#0
   00DB F7            [ 2]  241 	sta	,x
   00DC                     242 00108$:
                            243 ;../c16stombs.c:67: if(!codepoint)
   00DC C6r00r0E      [ 4]  244 	lda	___c16stombs_codepoint_196608_78
   00DF CAr00r0F      [ 4]  245 	ora	(___c16stombs_codepoint_196608_78 + 1)
   00E2 CAr00r10      [ 4]  246 	ora	(___c16stombs_codepoint_196608_78 + 2)
   00E5 CAr00r11      [ 4]  247 	ora	(___c16stombs_codepoint_196608_78 + 3)
   00E8 26 1E         [ 3]  248 	bne	00113$
                            249 ;../c16stombs.c:69: if(m < n)
   00EA C6r00r07      [ 4]  250 	lda	(___c16stombs_m_65536_76 + 1)
   00ED C0r00r03      [ 4]  251 	sub	(___c16stombs_PARM_3 + 1)
   00F0 C6r00r06      [ 4]  252 	lda	___c16stombs_m_65536_76
   00F3 C2r00r02      [ 4]  253 	sbc	___c16stombs_PARM_3
   00F6 25 03         [ 3]  254 	bcs	00169$
   00F8 CCr01r93      [ 3]  255 	jmp	00118$
   00FB                     256 00169$:
                            257 ;../c16stombs.c:70: *s = 0;
   00FB C6r00r04      [ 4]  258 	lda	___c16stombs_s_65536_75
   00FE 87            [ 2]  259 	psha
   00FF 8A            [ 2]  260 	pulh
   0100 CEr00r05      [ 4]  261 	ldx	(___c16stombs_s_65536_75 + 1)
   0103 4F            [ 1]  262 	clra
   0104 F7            [ 2]  263 	sta	,x
                            264 ;../c16stombs.c:71: break;
   0105 CCr01r93      [ 3]  265 	jmp	00118$
   0108                     266 00113$:
                            267 ;../c16stombs.c:74: l = wctomb(b, codepoint);
   0108 45r00r00      [ 3]  268 	ldhx	#_wctomb_PARM_2
   010B C6r00r0E      [ 4]  269 	lda	___c16stombs_codepoint_196608_78
   010E F7            [ 2]  270 	sta	,x
   010F C6r00r0F      [ 4]  271 	lda	(___c16stombs_codepoint_196608_78 + 1)
   0112 E7 01         [ 3]  272 	sta	1,x
   0114 C6r00r10      [ 4]  273 	lda	(___c16stombs_codepoint_196608_78 + 2)
   0117 E7 02         [ 3]  274 	sta	2,x
   0119 C6r00r11      [ 4]  275 	lda	(___c16stombs_codepoint_196608_78 + 3)
   011C E7 03         [ 3]  276 	sta	3,x
   011E A6r08         [ 2]  277 	lda	#___c16stombs_b_65536_76
   0120 AEs00         [ 2]  278 	ldx	#>___c16stombs_b_65536_76
   0122 CDr00r00      [ 5]  279 	jsr	_wctomb
   0125 C7r00r0D      [ 4]  280 	sta	(___c16stombs_l_196608_78 + 1)
   0128 CFr00r0C      [ 4]  281 	stx	___c16stombs_l_196608_78
                            282 ;../c16stombs.c:76: if(l < 0)
   012B C6r00r0C      [ 4]  283 	lda	___c16stombs_l_196608_78
   012E A0 00         [ 2]  284 	sub	#0x00
   0130 90 04         [ 3]  285 	bge	00115$
                            286 ;../c16stombs.c:77: return(-1);
   0132 A6 FF         [ 2]  287 	lda	#0xff
   0134 97            [ 1]  288 	tax
   0135 81            [ 4]  289 	rts
   0136                     290 00115$:
                            291 ;../c16stombs.c:79: if(m + l > n)
   0136 C6r00r0D      [ 4]  292 	lda	(___c16stombs_l_196608_78 + 1)
   0139 CEr00r0C      [ 4]  293 	ldx	___c16stombs_l_196608_78
   013C CBr00r07      [ 4]  294 	add	(___c16stombs_m_65536_76 + 1)
   013F B7*09         [ 3]  295 	sta	*(___c16stombs_sloc3_1_0 + 1)
   0141 9F            [ 1]  296 	txa
   0142 C9r00r06      [ 4]  297 	adc	___c16stombs_m_65536_76
   0145 B7*08         [ 3]  298 	sta	*___c16stombs_sloc3_1_0
   0147 C6r00r03      [ 4]  299 	lda	(___c16stombs_PARM_3 + 1)
   014A B0*09         [ 3]  300 	sub	*(___c16stombs_sloc3_1_0 + 1)
   014C C6r00r02      [ 4]  301 	lda	___c16stombs_PARM_3
   014F B2*08         [ 3]  302 	sbc	*___c16stombs_sloc3_1_0
   0151 25 40         [ 3]  303 	bcs	00118$
                            304 ;../c16stombs.c:82: memcpy(s, b, l);
   0153 C6r00r04      [ 4]  305 	lda	___c16stombs_s_65536_75
   0156 87            [ 2]  306 	psha
   0157 8A            [ 2]  307 	pulh
   0158 CEr00r05      [ 4]  308 	ldx	(___c16stombs_s_65536_75 + 1)
   015B A6r08         [ 2]  309 	lda	#___c16stombs_b_65536_76
   015D C7r00r01      [ 4]  310 	sta	(___memcpy_PARM_2 + 1)
   0160 A6s00         [ 2]  311 	lda	#>___c16stombs_b_65536_76
   0162 C7r00r00      [ 4]  312 	sta	___memcpy_PARM_2
   0165 C6r00r0C      [ 4]  313 	lda	___c16stombs_l_196608_78
   0168 C7r00r00      [ 4]  314 	sta	___memcpy_PARM_3
   016B C6r00r0D      [ 4]  315 	lda	(___c16stombs_l_196608_78 + 1)
   016E C7r00r01      [ 4]  316 	sta	(___memcpy_PARM_3 + 1)
   0171 9F            [ 1]  317 	txa
   0172 8B            [ 2]  318 	pshh
   0173 88            [ 2]  319 	pulx
   0174 CDr00r00      [ 5]  320 	jsr	___memcpy
                            321 ;../c16stombs.c:83: s += l;
   0177 45r00r04      [ 3]  322 	ldhx	#___c16stombs_s_65536_75
   017A C6r00r0D      [ 4]  323 	lda	(___c16stombs_l_196608_78 + 1)
   017D EB 01         [ 3]  324 	add	1,x
   017F E7 01         [ 3]  325 	sta	1,x
   0181 C6r00r0C      [ 4]  326 	lda	___c16stombs_l_196608_78
   0184 F9            [ 2]  327 	adc	,x
   0185 F7            [ 2]  328 	sta	,x
                            329 ;../c16stombs.c:84: m += l;
   0186 B6*08         [ 3]  330 	lda	*___c16stombs_sloc3_1_0
   0188 C7r00r06      [ 4]  331 	sta	___c16stombs_m_65536_76
   018B B6*09         [ 3]  332 	lda	*(___c16stombs_sloc3_1_0 + 1)
   018D C7r00r07      [ 4]  333 	sta	(___c16stombs_m_65536_76 + 1)
   0190 CCr00r0D      [ 3]  334 	jmp	00119$
   0193                     335 00118$:
                            336 ;../c16stombs.c:87: return(m);
   0193 CEr00r06      [ 4]  337 	ldx	___c16stombs_m_65536_76
   0196 C6r00r07      [ 4]  338 	lda	(___c16stombs_m_65536_76 + 1)
                            339 ;../c16stombs.c:88: }
   0199 81            [ 4]  340 	rts
                            341 	.area CSEG    (CODE)
                            342 	.area CONST   (CODE)
                            343 	.area XINIT   (CODE)
                            344 	.area CABS    (ABS,CODE)
