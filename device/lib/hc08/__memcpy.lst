                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __memcpy
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl ___memcpy_PARM_3
                             23 	.globl ___memcpy_PARM_2
                             24 	.globl ___memcpy
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 ___memcpy_sloc0_1_0:
   0000                      34 	.ds 2
   0002                      35 ___memcpy_sloc1_1_0:
   0002                      36 	.ds 2
   0004                      37 ___memcpy_sloc2_1_0:
   0004                      38 	.ds 2
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; initialized external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 ___memcpy_PARM_2:
   0000                      57 	.ds 2
   0002                      58 ___memcpy_PARM_3:
   0002                      59 	.ds 2
   0004                      60 ___memcpy_ret_65536_27:
   0004                      61 	.ds 2
                             62 ;--------------------------------------------------------
                             63 ; global & static initialisations
                             64 ;--------------------------------------------------------
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT  (CODE)
                             67 	.area GSFINAL (CODE)
                             68 	.area GSINIT  (CODE)
                             69 ;--------------------------------------------------------
                             70 ; Home
                             71 ;--------------------------------------------------------
                             72 	.area HOME    (CODE)
                             73 	.area HOME    (CODE)
                             74 ;--------------------------------------------------------
                             75 ; code
                             76 ;--------------------------------------------------------
                             77 	.area CSEG    (CODE)
                             78 ;------------------------------------------------------------
                             79 ;Allocation info for local variables in function '__memcpy'
                             80 ;------------------------------------------------------------
                             81 ;src                       Allocated with name '___memcpy_PARM_2'
                             82 ;n                         Allocated with name '___memcpy_PARM_3'
                             83 ;dst                       Allocated to registers x h 
                             84 ;ret                       Allocated with name '___memcpy_ret_65536_27'
                             85 ;d                         Allocated to registers 
                             86 ;s                         Allocated to registers 
                             87 ;sloc0                     Allocated with name '___memcpy_sloc0_1_0'
                             88 ;sloc1                     Allocated with name '___memcpy_sloc1_1_0'
                             89 ;sloc2                     Allocated with name '___memcpy_sloc2_1_0'
                             90 ;------------------------------------------------------------
                             91 ;../__memcpy.c:31: void *__memcpy (void *dst, const void *src, size_t n)
                             92 ;	-----------------------------------------
                             93 ;	 function __memcpy
                             94 ;	-----------------------------------------
                             95 ;	Register assignment is optimal.
                             96 ;	Stack space usage: 0 bytes.
   0000                      97 ___memcpy:
   0000 89            [ 2]   98 	pshx
   0001 97            [ 1]   99 	tax
   0002 8A            [ 2]  100 	pulh
                            101 ;../__memcpy.c:33: void *ret = dst;
   0003 8B            [ 2]  102 	pshh
   0004 86            [ 2]  103 	pula
   0005 C7r00r04      [ 4]  104 	sta	___memcpy_ret_65536_27
   0008 CFr00r05      [ 4]  105 	stx	(___memcpy_ret_65536_27 + 1)
                            106 ;../__memcpy.c:34: char *d = dst;
                            107 ;../__memcpy.c:35: const char *s = src;
   000B C6r00r01      [ 4]  108 	lda	(___memcpy_PARM_2 + 1)
   000E B7*01         [ 3]  109 	sta	*(___memcpy_sloc0_1_0 + 1)
   0010 C6r00r00      [ 4]  110 	lda	___memcpy_PARM_2
   0013 B7*00         [ 3]  111 	sta	*___memcpy_sloc0_1_0
                            112 ;../__memcpy.c:37: while (n--)
   0015 C6r00r02      [ 4]  113 	lda	___memcpy_PARM_3
   0018 B7*02         [ 3]  114 	sta	*___memcpy_sloc1_1_0
   001A C6r00r03      [ 4]  115 	lda	(___memcpy_PARM_3 + 1)
   001D B7*03         [ 3]  116 	sta	*(___memcpy_sloc1_1_0 + 1)
   001F                     117 00101$:
   001F 4E*02*04      [ 5]  118 	mov	*___memcpy_sloc1_1_0,*___memcpy_sloc2_1_0
   0022 4E*03*05      [ 5]  119 	mov	*(___memcpy_sloc1_1_0 + 1),*(___memcpy_sloc2_1_0 + 1)
   0025 89            [ 2]  120 	pshx
   0026 8B            [ 2]  121 	pshh
   0027 55*02         [ 4]  122 	ldhx	*___memcpy_sloc1_1_0
   0029 AF FF         [ 2]  123 	aix	#-1
   002B 35*02         [ 4]  124 	sthx	*___memcpy_sloc1_1_0
   002D 8A            [ 2]  125 	pulh
   002E 88            [ 2]  126 	pulx
   002F B6*05         [ 3]  127 	lda	*(___memcpy_sloc2_1_0 + 1)
   0031 BA*04         [ 3]  128 	ora	*___memcpy_sloc2_1_0
   0033 27 14         [ 3]  129 	beq	00103$
                            130 ;../__memcpy.c:38: *d++ = *s++;
   0035 89            [ 2]  131 	pshx
   0036 8B            [ 2]  132 	pshh
   0037 55*00         [ 4]  133 	ldhx	*___memcpy_sloc0_1_0
   0039 F6            [ 2]  134 	lda	,x
   003A B7*04         [ 3]  135 	sta	*___memcpy_sloc2_1_0
   003C AF 01         [ 2]  136 	aix	#1
   003E 35*00         [ 4]  137 	sthx	*___memcpy_sloc0_1_0
   0040 8A            [ 2]  138 	pulh
   0041 88            [ 2]  139 	pulx
   0042 B6*04         [ 3]  140 	lda	*___memcpy_sloc2_1_0
   0044 F7            [ 2]  141 	sta	,x
   0045 AF 01         [ 2]  142 	aix	#1
   0047 20 D6         [ 3]  143 	bra	00101$
   0049                     144 00103$:
                            145 ;../__memcpy.c:40: return(ret);
   0049 CEr00r04      [ 4]  146 	ldx	___memcpy_ret_65536_27
   004C C6r00r05      [ 4]  147 	lda	(___memcpy_ret_65536_27 + 1)
                            148 ;../__memcpy.c:41: }
   004F 81            [ 4]  149 	rts
                            150 	.area CSEG    (CODE)
                            151 	.area CONST   (CODE)
                            152 	.area XINIT   (CODE)
                            153 	.area CABS    (ABS,CODE)
