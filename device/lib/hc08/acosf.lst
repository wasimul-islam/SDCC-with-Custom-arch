                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module acosf
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _asincosf
                             23 	.globl _acosf
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area DSEG    (PAG)
                             28 ;--------------------------------------------------------
                             29 ; overlayable items in ram
                             30 ;--------------------------------------------------------
                             31 ;--------------------------------------------------------
                             32 ; absolute ram data
                             33 ;--------------------------------------------------------
                             34 	.area IABS    (ABS)
                             35 	.area IABS    (ABS)
                             36 ;--------------------------------------------------------
                             37 ; absolute external ram data
                             38 ;--------------------------------------------------------
                             39 	.area XABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; initialized external ram data
                             42 ;--------------------------------------------------------
                             43 	.area XISEG
                             44 ;--------------------------------------------------------
                             45 ; extended address mode data
                             46 ;--------------------------------------------------------
                             47 	.area XSEG
                             48 ;--------------------------------------------------------
                             49 ; global & static initialisations
                             50 ;--------------------------------------------------------
                             51 	.area HOME    (CODE)
                             52 	.area GSINIT  (CODE)
                             53 	.area GSFINAL (CODE)
                             54 	.area GSINIT  (CODE)
                             55 ;--------------------------------------------------------
                             56 ; Home
                             57 ;--------------------------------------------------------
                             58 	.area HOME    (CODE)
                             59 	.area HOME    (CODE)
                             60 ;--------------------------------------------------------
                             61 ; code
                             62 ;--------------------------------------------------------
                             63 	.area CSEG    (CODE)
                             64 ;------------------------------------------------------------
                             65 ;Allocation info for local variables in function 'acosf'
                             66 ;------------------------------------------------------------
                             67 ;x                         Allocated to stack - sp +7
                             68 ;sloc0                     Allocated to stack - sp +1
                             69 ;------------------------------------------------------------
                             70 ;../acosf.c:36: float acosf(float x) _FLOAT_FUNC_REENTRANT
                             71 ;	-----------------------------------------
                             72 ;	 function acosf
                             73 ;	-----------------------------------------
                             74 ;	Register assignment is optimal.
                             75 ;	Stack space usage: 4 bytes.
   0000                      76 _acosf:
   0000 A7 FC         [ 2]   77 	ais	#-4
                             78 ;../acosf.c:38: if (x == 1.0) return 0.0;
   0002 95            [ 2]   79 	tsx
   0003 45r00r00      [ 3]   80 	ldhx	#___fseq_PARM_1
   0006 9E E6 07      [ 4]   81 	lda	7,s
   0009 F7            [ 2]   82 	sta	,x
   000A 9E E6 08      [ 4]   83 	lda	8,s
   000D E7 01         [ 3]   84 	sta	1,x
   000F 9E E6 09      [ 4]   85 	lda	9,s
   0012 E7 02         [ 3]   86 	sta	2,x
   0014 9E E6 0A      [ 4]   87 	lda	10,s
   0017 E7 03         [ 3]   88 	sta	3,x
   0019 45r00r00      [ 3]   89 	ldhx	#___fseq_PARM_2
   001C A6 3F         [ 2]   90 	lda	#0x3f
   001E F7            [ 2]   91 	sta	,x
   001F A6 80         [ 2]   92 	lda	#0x80
   0021 E7 01         [ 3]   93 	sta	1,x
   0023 4F            [ 1]   94 	clra
   0024 E7 02         [ 3]   95 	sta	2,x
   0026 E7 03         [ 3]   96 	sta	3,x
   0028 CDr00r00      [ 5]   97 	jsr	___fseq
   002B 4D            [ 1]   98 	tsta
   002C 27 09         [ 3]   99 	beq	00108$
   002E 4F            [ 1]  100 	clra
   002F 97            [ 1]  101 	tax
   0030 B7*00         [ 3]  102 	sta	*___SDCC_hc08_ret2
   0032 B7*00         [ 3]  103 	sta	*___SDCC_hc08_ret3
   0034 CCr00rC4      [ 3]  104 	jmp	00110$
   0037                     105 00108$:
                            106 ;../acosf.c:39: else if (x ==-1.0) return PI;
   0037 95            [ 2]  107 	tsx
   0038 45r00r00      [ 3]  108 	ldhx	#___fseq_PARM_1
   003B 9E E6 07      [ 4]  109 	lda	7,s
   003E F7            [ 2]  110 	sta	,x
   003F 9E E6 08      [ 4]  111 	lda	8,s
   0042 E7 01         [ 3]  112 	sta	1,x
   0044 9E E6 09      [ 4]  113 	lda	9,s
   0047 E7 02         [ 3]  114 	sta	2,x
   0049 9E E6 0A      [ 4]  115 	lda	10,s
   004C E7 03         [ 3]  116 	sta	3,x
   004E 45r00r00      [ 3]  117 	ldhx	#___fseq_PARM_2
   0051 A6 BF         [ 2]  118 	lda	#0xbf
   0053 F7            [ 2]  119 	sta	,x
   0054 A6 80         [ 2]  120 	lda	#0x80
   0056 E7 01         [ 3]  121 	sta	1,x
   0058 4F            [ 1]  122 	clra
   0059 E7 02         [ 3]  123 	sta	2,x
   005B E7 03         [ 3]  124 	sta	3,x
   005D CDr00r00      [ 5]  125 	jsr	___fseq
   0060 4D            [ 1]  126 	tsta
   0061 27 0C         [ 3]  127 	beq	00105$
   0063 A6 DB         [ 2]  128 	lda	#0xdb
   0065 AE 0F         [ 2]  129 	ldx	#0x0f
   0067 6E 49*00      [ 4]  130 	mov	#0x49,*___SDCC_hc08_ret2
   006A 6E 40*00      [ 4]  131 	mov	#0x40,*___SDCC_hc08_ret3
   006D 20 55         [ 3]  132 	bra	00110$
   006F                     133 00105$:
                            134 ;../acosf.c:40: else if (x == 0.0) return HALF_PI;
   006F 95            [ 2]  135 	tsx
   0070 E6 06         [ 3]  136 	lda	6,x
   0072 A4 7F         [ 2]  137 	and	#0x7F
   0074 EA 07         [ 3]  138 	ora	7,x
   0076 EA 08         [ 3]  139 	ora	8,x
   0078 EA 09         [ 3]  140 	ora	9,x
   007A 26 0C         [ 3]  141 	bne	00102$
   007C A6 DB         [ 2]  142 	lda	#0xdb
   007E AE 0F         [ 2]  143 	ldx	#0x0f
   0080 6E C9*00      [ 4]  144 	mov	#0xc9,*___SDCC_hc08_ret2
   0083 6E 3F*00      [ 4]  145 	mov	#0x3f,*___SDCC_hc08_ret3
   0086 20 3C         [ 3]  146 	bra	00110$
   0088                     147 00102$:
                            148 ;../acosf.c:41: else               return asincosf(x, true);
   0088 95            [ 2]  149 	tsx
   0089 45r00r00      [ 3]  150 	ldhx	#_asincosf_PARM_1
   008C 9E E6 07      [ 4]  151 	lda	7,s
   008F F7            [ 2]  152 	sta	,x
   0090 9E E6 08      [ 4]  153 	lda	8,s
   0093 E7 01         [ 3]  154 	sta	1,x
   0095 9E E6 09      [ 4]  155 	lda	9,s
   0098 E7 02         [ 3]  156 	sta	2,x
   009A 9E E6 0A      [ 4]  157 	lda	10,s
   009D E7 03         [ 3]  158 	sta	3,x
   009F A6 01         [ 2]  159 	lda	#0x01
   00A1 C7r00r00      [ 4]  160 	sta	_asincosf_PARM_2
   00A4 CDr00r00      [ 5]  161 	jsr	_asincosf
   00A7 9E E7 04      [ 4]  162 	sta	4,s
   00AA 9E EF 03      [ 4]  163 	stx	3,s
   00AD B6*00         [ 3]  164 	lda	*___SDCC_hc08_ret2
   00AF 9E E7 02      [ 4]  165 	sta	2,s
   00B2 B6*00         [ 3]  166 	lda	*___SDCC_hc08_ret3
   00B4 9E E7 01      [ 4]  167 	sta	1,s
   00B7 95            [ 2]  168 	tsx
   00B8 F6            [ 2]  169 	lda	,x
   00B9 B7*00         [ 3]  170 	sta	*___SDCC_hc08_ret3
   00BB E6 01         [ 3]  171 	lda	1,x
   00BD B7*00         [ 3]  172 	sta	*___SDCC_hc08_ret2
   00BF EE 02         [ 3]  173 	ldx	2,x
   00C1 9E E6 04      [ 4]  174 	lda	4,s
   00C4                     175 00110$:
                            176 ;../acosf.c:42: }
   00C4 A7 04         [ 2]  177 	ais	#4
   00C6 81            [ 4]  178 	rts
                            179 	.area CSEG    (CODE)
                            180 	.area CONST   (CODE)
                            181 	.area XINIT   (CODE)
                            182 	.area CABS    (ABS,CODE)
