                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _mullonglong
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl __mullonglong_PARM_2
                             23 	.globl __mullonglong_PARM_1
                             24 	.globl __mullonglong
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
   0000                      29 __mullonglong_sloc0_1_0:
   0000                      30 	.ds 8
   0008                      31 __mullonglong_sloc1_1_0:
   0008                      32 	.ds 2
   000A                      33 __mullonglong_sloc2_1_0:
   000A                      34 	.ds 8
                             35 ;--------------------------------------------------------
                             36 ; overlayable items in ram
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; absolute ram data
                             40 ;--------------------------------------------------------
                             41 	.area IABS    (ABS)
                             42 	.area IABS    (ABS)
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area XABS    (ABS)
                             47 ;--------------------------------------------------------
                             48 ; initialized external ram data
                             49 ;--------------------------------------------------------
                             50 	.area XISEG
                             51 ;--------------------------------------------------------
                             52 ; extended address mode data
                             53 ;--------------------------------------------------------
                             54 	.area XSEG
   0000                      55 __mullonglong_PARM_1:
   0000                      56 	.ds 8
   0008                      57 __mullonglong_PARM_2:
   0008                      58 	.ds 8
   0010                      59 __mullonglong_ret_65536_2:
   0010                      60 	.ds 8
   0018                      61 __mullonglong_l_196608_4:
   0018                      62 	.ds 1
                             63 ;--------------------------------------------------------
                             64 ; global & static initialisations
                             65 ;--------------------------------------------------------
                             66 	.area HOME    (CODE)
                             67 	.area GSINIT  (CODE)
                             68 	.area GSFINAL (CODE)
                             69 	.area GSINIT  (CODE)
                             70 ;--------------------------------------------------------
                             71 ; Home
                             72 ;--------------------------------------------------------
                             73 	.area HOME    (CODE)
                             74 	.area HOME    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; code
                             77 ;--------------------------------------------------------
                             78 	.area CSEG    (CODE)
                             79 ;------------------------------------------------------------
                             80 ;Allocation info for local variables in function '_mullonglong'
                             81 ;------------------------------------------------------------
                             82 ;sloc0                     Allocated with name '__mullonglong_sloc0_1_0'
                             83 ;sloc1                     Allocated with name '__mullonglong_sloc1_1_0'
                             84 ;sloc2                     Allocated with name '__mullonglong_sloc2_1_0'
                             85 ;ll                        Allocated with name '__mullonglong_PARM_1'
                             86 ;lr                        Allocated with name '__mullonglong_PARM_2'
                             87 ;ret                       Allocated with name '__mullonglong_ret_65536_2'
                             88 ;i                         Allocated to registers 
                             89 ;j                         Allocated to registers 
                             90 ;l                         Allocated with name '__mullonglong_l_196608_4'
                             91 ;r                         Allocated to registers a 
                             92 ;------------------------------------------------------------
                             93 ;../_mullonglong.c:39: long long _mullonglong(long long ll, long long lr) __SDCC_NONBANKED
                             94 ;	-----------------------------------------
                             95 ;	 function _mullonglong
                             96 ;	-----------------------------------------
                             97 ;	Register assignment is optimal.
                             98 ;	Stack space usage: 0 bytes.
   0000                      99 __mullonglong:
                            100 ;../_mullonglong.c:41: unsigned long long ret = 0ull;
   0000 45r00r10      [ 3]  101 	ldhx	#__mullonglong_ret_65536_2
   0003 4F            [ 1]  102 	clra
   0004 F7            [ 2]  103 	sta	,x
   0005 E7 01         [ 3]  104 	sta	1,x
   0007 E7 02         [ 3]  105 	sta	2,x
   0009 E7 03         [ 3]  106 	sta	3,x
   000B E7 04         [ 3]  107 	sta	4,x
   000D E7 05         [ 3]  108 	sta	5,x
   000F E7 06         [ 3]  109 	sta	6,x
   0011 E7 07         [ 3]  110 	sta	7,x
                            111 ;../_mullonglong.c:44: for (i = 0; i < sizeof (long long); i++)
   0013 87            [ 2]  112 	psha
   0014 8A            [ 2]  113 	pulh
   0015                     114 00106$:
                            115 ;../_mullonglong.c:46: unsigned char l = ll >> (i * 8);
   0015 8B            [ 2]  116 	pshh
   0016 86            [ 2]  117 	pula
   0017 48            [ 1]  118 	lsla	
   0018 48            [ 1]  119 	lsla	
   0019 48            [ 1]  120 	lsla	
   001A C7r00r00      [ 4]  121 	sta	__rrslonglong_PARM_2
   001D C6r00r00      [ 4]  122 	lda	__mullonglong_PARM_1
   0020 C7r00r00      [ 4]  123 	sta	__rrslonglong_PARM_1
   0023 C6r00r01      [ 4]  124 	lda	(__mullonglong_PARM_1 + 1)
   0026 C7r00r01      [ 4]  125 	sta	(__rrslonglong_PARM_1 + 1)
   0029 C6r00r02      [ 4]  126 	lda	(__mullonglong_PARM_1 + 2)
   002C C7r00r02      [ 4]  127 	sta	(__rrslonglong_PARM_1 + 2)
   002F C6r00r03      [ 4]  128 	lda	(__mullonglong_PARM_1 + 3)
   0032 C7r00r03      [ 4]  129 	sta	(__rrslonglong_PARM_1 + 3)
   0035 C6r00r04      [ 4]  130 	lda	(__mullonglong_PARM_1 + 4)
   0038 C7r00r04      [ 4]  131 	sta	(__rrslonglong_PARM_1 + 4)
   003B C6r00r05      [ 4]  132 	lda	(__mullonglong_PARM_1 + 5)
   003E C7r00r05      [ 4]  133 	sta	(__rrslonglong_PARM_1 + 5)
   0041 C6r00r06      [ 4]  134 	lda	(__mullonglong_PARM_1 + 6)
   0044 C7r00r06      [ 4]  135 	sta	(__rrslonglong_PARM_1 + 6)
   0047 C6r00r07      [ 4]  136 	lda	(__mullonglong_PARM_1 + 7)
   004A C7r00r07      [ 4]  137 	sta	(__rrslonglong_PARM_1 + 7)
   004D 8B            [ 2]  138 	pshh
   004E CDr00r00      [ 5]  139 	jsr	__rrslonglong
   0051 B7*07         [ 3]  140 	sta	*(__mullonglong_sloc0_1_0 + 7)
   0053 BF*06         [ 3]  141 	stx	*(__mullonglong_sloc0_1_0 + 6)
   0055 4E*00*05      [ 5]  142 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc0_1_0 + 5)
   0058 4E*00*04      [ 5]  143 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc0_1_0 + 4)
   005B 4E*00*03      [ 5]  144 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc0_1_0 + 3)
   005E 4E*00*02      [ 5]  145 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc0_1_0 + 2)
   0061 4E*00*01      [ 5]  146 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc0_1_0 + 1)
   0064 4E*00*00      [ 5]  147 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc0_1_0
   0067 8A            [ 2]  148 	pulh
   0068 B6*07         [ 3]  149 	lda	*(__mullonglong_sloc0_1_0 + 7)
   006A C7r00r18      [ 4]  150 	sta	__mullonglong_l_196608_4
                            151 ;../_mullonglong.c:47: for(j = 0; (i + j) < sizeof (long long); j++)
   006D 6E 00*00      [ 4]  152 	mov	#0x00,*__mullonglong_sloc0_1_0
   0070                     153 00104$:
   0070 8B            [ 2]  154 	pshh
   0071 86            [ 2]  155 	pula
   0072 5F            [ 1]  156 	clrx
   0073 4E*00*09      [ 5]  157 	mov	*__mullonglong_sloc0_1_0,*(__mullonglong_sloc1_1_0 + 1)
   0076 BF*08         [ 3]  158 	stx	*__mullonglong_sloc1_1_0
   0078 BB*09         [ 3]  159 	add	*(__mullonglong_sloc1_1_0 + 1)
   007A 87            [ 2]  160 	psha
   007B 9F            [ 1]  161 	txa
   007C B9*08         [ 3]  162 	adc	*__mullonglong_sloc1_1_0
   007E 97            [ 1]  163 	tax
   007F 86            [ 2]  164 	pula
   0080 A0 08         [ 2]  165 	sub	#0x08
   0082 9F            [ 1]  166 	txa
   0083 A2 00         [ 2]  167 	sbc	#0x00
   0085 91 03         [ 3]  168 	blt	00132$
   0087 CCr01r6E      [ 3]  169 	jmp	00107$
   008A                     170 00132$:
                            171 ;../_mullonglong.c:49: unsigned char r = lr >> (j * 8);
   008A B6*00         [ 3]  172 	lda	*__mullonglong_sloc0_1_0
   008C 48            [ 1]  173 	lsla	
   008D 48            [ 1]  174 	lsla	
   008E 48            [ 1]  175 	lsla	
   008F C7r00r00      [ 4]  176 	sta	__rrslonglong_PARM_2
   0092 C6r00r08      [ 4]  177 	lda	__mullonglong_PARM_2
   0095 C7r00r00      [ 4]  178 	sta	__rrslonglong_PARM_1
   0098 C6r00r09      [ 4]  179 	lda	(__mullonglong_PARM_2 + 1)
   009B C7r00r01      [ 4]  180 	sta	(__rrslonglong_PARM_1 + 1)
   009E C6r00r0A      [ 4]  181 	lda	(__mullonglong_PARM_2 + 2)
   00A1 C7r00r02      [ 4]  182 	sta	(__rrslonglong_PARM_1 + 2)
   00A4 C6r00r0B      [ 4]  183 	lda	(__mullonglong_PARM_2 + 3)
   00A7 C7r00r03      [ 4]  184 	sta	(__rrslonglong_PARM_1 + 3)
   00AA C6r00r0C      [ 4]  185 	lda	(__mullonglong_PARM_2 + 4)
   00AD C7r00r04      [ 4]  186 	sta	(__rrslonglong_PARM_1 + 4)
   00B0 C6r00r0D      [ 4]  187 	lda	(__mullonglong_PARM_2 + 5)
   00B3 C7r00r05      [ 4]  188 	sta	(__rrslonglong_PARM_1 + 5)
   00B6 C6r00r0E      [ 4]  189 	lda	(__mullonglong_PARM_2 + 6)
   00B9 C7r00r06      [ 4]  190 	sta	(__rrslonglong_PARM_1 + 6)
   00BC C6r00r0F      [ 4]  191 	lda	(__mullonglong_PARM_2 + 7)
   00BF C7r00r07      [ 4]  192 	sta	(__rrslonglong_PARM_1 + 7)
   00C2 8B            [ 2]  193 	pshh
   00C3 CDr00r00      [ 5]  194 	jsr	__rrslonglong
   00C6 B7*11         [ 3]  195 	sta	*(__mullonglong_sloc2_1_0 + 7)
   00C8 BF*10         [ 3]  196 	stx	*(__mullonglong_sloc2_1_0 + 6)
   00CA 4E*00*0F      [ 5]  197 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc2_1_0 + 5)
   00CD 4E*00*0E      [ 5]  198 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc2_1_0 + 4)
   00D0 4E*00*0D      [ 5]  199 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc2_1_0 + 3)
   00D3 4E*00*0C      [ 5]  200 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc2_1_0 + 2)
   00D6 4E*00*0B      [ 5]  201 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc2_1_0 + 1)
   00D9 4E*00*0A      [ 5]  202 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc2_1_0
   00DC 8A            [ 2]  203 	pulh
   00DD B6*11         [ 3]  204 	lda	*(__mullonglong_sloc2_1_0 + 7)
                            205 ;../_mullonglong.c:50: ret += (unsigned long long)((unsigned short)(l * r)) << ((i + j) * 8);
   00DF CEr00r18      [ 4]  206 	ldx	__mullonglong_l_196608_4
   00E2 42            [ 5]  207 	mul
   00E3 B7*0B         [ 3]  208 	sta	*(__mullonglong_sloc2_1_0 + 1)
   00E5 BF*0A         [ 3]  209 	stx	*__mullonglong_sloc2_1_0
   00E7 B6*0B         [ 3]  210 	lda	*(__mullonglong_sloc2_1_0 + 1)
   00E9 C7r00r07      [ 4]  211 	sta	(__rlulonglong_PARM_1 + 7)
   00EC B6*0A         [ 3]  212 	lda	*__mullonglong_sloc2_1_0
   00EE C7r00r06      [ 4]  213 	sta	(__rlulonglong_PARM_1 + 6)
   00F1 4F            [ 1]  214 	clra
   00F2 C7r00r05      [ 4]  215 	sta	(__rlulonglong_PARM_1 + 5)
   00F5 C7r00r04      [ 4]  216 	sta	(__rlulonglong_PARM_1 + 4)
   00F8 C7r00r03      [ 4]  217 	sta	(__rlulonglong_PARM_1 + 3)
   00FB C7r00r02      [ 4]  218 	sta	(__rlulonglong_PARM_1 + 2)
   00FE C7r00r01      [ 4]  219 	sta	(__rlulonglong_PARM_1 + 1)
   0101 C7r00r00      [ 4]  220 	sta	__rlulonglong_PARM_1
   0104 8B            [ 2]  221 	pshh
   0105 86            [ 2]  222 	pula
   0106 BB*00         [ 3]  223 	add	*__mullonglong_sloc0_1_0
   0108 48            [ 1]  224 	lsla	
   0109 48            [ 1]  225 	lsla	
   010A 48            [ 1]  226 	lsla	
   010B C7r00r00      [ 4]  227 	sta	__rlulonglong_PARM_2
   010E 8B            [ 2]  228 	pshh
   010F CDr00r00      [ 5]  229 	jsr	__rlulonglong
   0112 B7*11         [ 3]  230 	sta	*(__mullonglong_sloc2_1_0 + 7)
   0114 BF*10         [ 3]  231 	stx	*(__mullonglong_sloc2_1_0 + 6)
   0116 4E*00*0F      [ 5]  232 	mov	*___SDCC_hc08_ret2,*(__mullonglong_sloc2_1_0 + 5)
   0119 4E*00*0E      [ 5]  233 	mov	*___SDCC_hc08_ret3,*(__mullonglong_sloc2_1_0 + 4)
   011C 4E*00*0D      [ 5]  234 	mov	*___SDCC_hc08_ret4,*(__mullonglong_sloc2_1_0 + 3)
   011F 4E*00*0C      [ 5]  235 	mov	*___SDCC_hc08_ret5,*(__mullonglong_sloc2_1_0 + 2)
   0122 4E*00*0B      [ 5]  236 	mov	*___SDCC_hc08_ret6,*(__mullonglong_sloc2_1_0 + 1)
   0125 4E*00*0A      [ 5]  237 	mov	*___SDCC_hc08_ret7,*__mullonglong_sloc2_1_0
   0128 8A            [ 2]  238 	pulh
   0129 C6r00r17      [ 4]  239 	lda	(__mullonglong_ret_65536_2 + 7)
   012C BB*11         [ 3]  240 	add	*(__mullonglong_sloc2_1_0 + 7)
   012E C7r00r17      [ 4]  241 	sta	(__mullonglong_ret_65536_2 + 7)
   0131 C6r00r16      [ 4]  242 	lda	(__mullonglong_ret_65536_2 + 6)
   0134 B9*10         [ 3]  243 	adc	*(__mullonglong_sloc2_1_0 + 6)
   0136 C7r00r16      [ 4]  244 	sta	(__mullonglong_ret_65536_2 + 6)
   0139 C6r00r15      [ 4]  245 	lda	(__mullonglong_ret_65536_2 + 5)
   013C B9*0F         [ 3]  246 	adc	*(__mullonglong_sloc2_1_0 + 5)
   013E C7r00r15      [ 4]  247 	sta	(__mullonglong_ret_65536_2 + 5)
   0141 C6r00r14      [ 4]  248 	lda	(__mullonglong_ret_65536_2 + 4)
   0144 B9*0E         [ 3]  249 	adc	*(__mullonglong_sloc2_1_0 + 4)
   0146 C7r00r14      [ 4]  250 	sta	(__mullonglong_ret_65536_2 + 4)
   0149 C6r00r13      [ 4]  251 	lda	(__mullonglong_ret_65536_2 + 3)
   014C B9*0D         [ 3]  252 	adc	*(__mullonglong_sloc2_1_0 + 3)
   014E C7r00r13      [ 4]  253 	sta	(__mullonglong_ret_65536_2 + 3)
   0151 C6r00r12      [ 4]  254 	lda	(__mullonglong_ret_65536_2 + 2)
   0154 B9*0C         [ 3]  255 	adc	*(__mullonglong_sloc2_1_0 + 2)
   0156 C7r00r12      [ 4]  256 	sta	(__mullonglong_ret_65536_2 + 2)
   0159 C6r00r11      [ 4]  257 	lda	(__mullonglong_ret_65536_2 + 1)
   015C B9*0B         [ 3]  258 	adc	*(__mullonglong_sloc2_1_0 + 1)
   015E C7r00r11      [ 4]  259 	sta	(__mullonglong_ret_65536_2 + 1)
   0161 C6r00r10      [ 4]  260 	lda	__mullonglong_ret_65536_2
   0164 B9*0A         [ 3]  261 	adc	*__mullonglong_sloc2_1_0
   0166 C7r00r10      [ 4]  262 	sta	__mullonglong_ret_65536_2
                            263 ;../_mullonglong.c:47: for(j = 0; (i + j) < sizeof (long long); j++)
   0169 3C*00         [ 4]  264 	inc	*__mullonglong_sloc0_1_0
   016B CCr00r70      [ 3]  265 	jmp	00104$
   016E                     266 00107$:
                            267 ;../_mullonglong.c:44: for (i = 0; i < sizeof (long long); i++)
   016E 8B            [ 2]  268 	pshh
   016F 9E 6C 01      [ 5]  269 	inc	1,s
   0172 8A            [ 2]  270 	pulh
   0173 8B            [ 2]  271 	pshh
   0174 86            [ 2]  272 	pula
   0175 A1 08         [ 2]  273 	cmp	#0x08
   0177 24 03         [ 3]  274 	bcc	00133$
   0179 CCr00r15      [ 3]  275 	jmp	00106$
   017C                     276 00133$:
                            277 ;../_mullonglong.c:54: return(ret);
   017C C6r00r10      [ 4]  278 	lda	__mullonglong_ret_65536_2
   017F B7*00         [ 3]  279 	sta	*___SDCC_hc08_ret7
   0181 C6r00r11      [ 4]  280 	lda	(__mullonglong_ret_65536_2 + 1)
   0184 B7*00         [ 3]  281 	sta	*___SDCC_hc08_ret6
   0186 C6r00r12      [ 4]  282 	lda	(__mullonglong_ret_65536_2 + 2)
   0189 B7*00         [ 3]  283 	sta	*___SDCC_hc08_ret5
   018B C6r00r13      [ 4]  284 	lda	(__mullonglong_ret_65536_2 + 3)
   018E B7*00         [ 3]  285 	sta	*___SDCC_hc08_ret4
   0190 C6r00r14      [ 4]  286 	lda	(__mullonglong_ret_65536_2 + 4)
   0193 B7*00         [ 3]  287 	sta	*___SDCC_hc08_ret3
   0195 C6r00r15      [ 4]  288 	lda	(__mullonglong_ret_65536_2 + 5)
   0198 B7*00         [ 3]  289 	sta	*___SDCC_hc08_ret2
   019A CEr00r16      [ 4]  290 	ldx	(__mullonglong_ret_65536_2 + 6)
   019D C6r00r17      [ 4]  291 	lda	(__mullonglong_ret_65536_2 + 7)
                            292 ;../_mullonglong.c:55: }
   01A0 81            [ 4]  293 	rts
                            294 	.area CSEG    (CODE)
                            295 	.area CONST   (CODE)
                            296 	.area XINIT   (CODE)
                            297 	.area CABS    (ABS,CODE)
