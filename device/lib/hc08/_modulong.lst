                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _modulong
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl __modulong_PARM_2
                             23 	.globl __modulong_PARM_1
                             24 	.globl __modulong
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 ;--------------------------------------------------------
                             33 ; absolute ram data
                             34 ;--------------------------------------------------------
                             35 	.area IABS    (ABS)
                             36 	.area IABS    (ABS)
                             37 ;--------------------------------------------------------
                             38 ; absolute external ram data
                             39 ;--------------------------------------------------------
                             40 	.area XABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; initialized external ram data
                             43 ;--------------------------------------------------------
                             44 	.area XISEG
                             45 ;--------------------------------------------------------
                             46 ; extended address mode data
                             47 ;--------------------------------------------------------
                             48 	.area XSEG
   0000                      49 __modulong_PARM_1:
   0000                      50 	.ds 4
   0004                      51 __modulong_PARM_2:
   0004                      52 	.ds 4
                             53 ;--------------------------------------------------------
                             54 ; global & static initialisations
                             55 ;--------------------------------------------------------
                             56 	.area HOME    (CODE)
                             57 	.area GSINIT  (CODE)
                             58 	.area GSFINAL (CODE)
                             59 	.area GSINIT  (CODE)
                             60 ;--------------------------------------------------------
                             61 ; Home
                             62 ;--------------------------------------------------------
                             63 	.area HOME    (CODE)
                             64 	.area HOME    (CODE)
                             65 ;--------------------------------------------------------
                             66 ; code
                             67 ;--------------------------------------------------------
                             68 	.area CSEG    (CODE)
                             69 ;------------------------------------------------------------
                             70 ;Allocation info for local variables in function '_modulong'
                             71 ;------------------------------------------------------------
                             72 ;a                         Allocated with name '__modulong_PARM_1'
                             73 ;b                         Allocated with name '__modulong_PARM_2'
                             74 ;count                     Allocated to registers h 
                             75 ;------------------------------------------------------------
                             76 ;../_modulong.c:346: _modulong (unsigned long a, unsigned long b) __SDCC_NONBANKED
                             77 ;	-----------------------------------------
                             78 ;	 function _modulong
                             79 ;	-----------------------------------------
                             80 ;	Register assignment is optimal.
                             81 ;	Stack space usage: 0 bytes.
   0000                      82 __modulong:
                             83 ;../_modulong.c:348: unsigned char count = 0;
   0000 8C            [ 1]   84 	clrh
                             85 ;../_modulong.c:350: while (!MSB_SET(b))
   0001 5F            [ 1]   86 	clrx
   0002                      87 00103$:
   0002 C6r00r04      [ 4]   88 	lda	__modulong_PARM_2
   0005 49            [ 1]   89 	rola
   0006 4F            [ 1]   90 	clra
   0007 49            [ 1]   91 	rola
   0008 4D            [ 1]   92 	tsta
   0009 26 5C         [ 3]   93 	bne	00117$
                             94 ;../_modulong.c:352: b <<= 1;
   000B 89            [ 2]   95 	pshx
   000C C6r00r07      [ 4]   96 	lda	(__modulong_PARM_2 + 3)
   000F CEr00r06      [ 4]   97 	ldx	(__modulong_PARM_2 + 2)
   0012 48            [ 1]   98 	lsla
   0013 59            [ 1]   99 	rolx
   0014 C7r00r07      [ 4]  100 	sta	(__modulong_PARM_2 + 3)
   0017 CFr00r06      [ 4]  101 	stx	(__modulong_PARM_2 + 2)
   001A C6r00r05      [ 4]  102 	lda	(__modulong_PARM_2 + 1)
   001D CEr00r04      [ 4]  103 	ldx	__modulong_PARM_2
   0020 49            [ 1]  104 	rola
   0021 59            [ 1]  105 	rolx
   0022 C7r00r05      [ 4]  106 	sta	(__modulong_PARM_2 + 1)
   0025 CFr00r04      [ 4]  107 	stx	__modulong_PARM_2
   0028 88            [ 2]  108 	pulx
                            109 ;../_modulong.c:353: if (b > a)
   0029 C6r00r03      [ 4]  110 	lda	(__modulong_PARM_1 + 3)
   002C C0r00r07      [ 4]  111 	sub	(__modulong_PARM_2 + 3)
   002F C6r00r02      [ 4]  112 	lda	(__modulong_PARM_1 + 2)
   0032 C2r00r06      [ 4]  113 	sbc	(__modulong_PARM_2 + 2)
   0035 C6r00r01      [ 4]  114 	lda	(__modulong_PARM_1 + 1)
   0038 C2r00r05      [ 4]  115 	sbc	(__modulong_PARM_2 + 1)
   003B C6r00r00      [ 4]  116 	lda	__modulong_PARM_1
   003E C2r00r04      [ 4]  117 	sbc	__modulong_PARM_2
   0041 24 1E         [ 3]  118 	bcc	00102$
                            119 ;../_modulong.c:355: b >>=1;
   0043 C6r00r05      [ 4]  120 	lda	(__modulong_PARM_2 + 1)
   0046 CEr00r04      [ 4]  121 	ldx	__modulong_PARM_2
   0049 54            [ 1]  122 	lsrx
   004A 46            [ 1]  123 	rora
   004B C7r00r05      [ 4]  124 	sta	(__modulong_PARM_2 + 1)
   004E CFr00r04      [ 4]  125 	stx	__modulong_PARM_2
   0051 C6r00r07      [ 4]  126 	lda	(__modulong_PARM_2 + 3)
   0054 CEr00r06      [ 4]  127 	ldx	(__modulong_PARM_2 + 2)
   0057 56            [ 1]  128 	rorx
   0058 46            [ 1]  129 	rora
   0059 C7r00r07      [ 4]  130 	sta	(__modulong_PARM_2 + 3)
   005C CFr00r06      [ 4]  131 	stx	(__modulong_PARM_2 + 2)
                            132 ;../_modulong.c:356: break;
   005F 20 06         [ 3]  133 	bra	00117$
   0061                     134 00102$:
                            135 ;../_modulong.c:358: count++;
   0061 AF 01         [ 2]  136 	aix	#1
   0063 89            [ 2]  137 	pshx
   0064 8A            [ 2]  138 	pulh
   0065 20 9B         [ 3]  139 	bra	00103$
                            140 ;../_modulong.c:360: do
   0067                     141 00117$:
   0067 8B            [ 2]  142 	pshh
   0068 88            [ 2]  143 	pulx
   0069                     144 00108$:
                            145 ;../_modulong.c:362: if (a >= b)
   0069 C6r00r03      [ 4]  146 	lda	(__modulong_PARM_1 + 3)
   006C C0r00r07      [ 4]  147 	sub	(__modulong_PARM_2 + 3)
   006F C6r00r02      [ 4]  148 	lda	(__modulong_PARM_1 + 2)
   0072 C2r00r06      [ 4]  149 	sbc	(__modulong_PARM_2 + 2)
   0075 C6r00r01      [ 4]  150 	lda	(__modulong_PARM_1 + 1)
   0078 C2r00r05      [ 4]  151 	sbc	(__modulong_PARM_2 + 1)
   007B C6r00r00      [ 4]  152 	lda	__modulong_PARM_1
   007E C2r00r04      [ 4]  153 	sbc	__modulong_PARM_2
   0081 25 24         [ 3]  154 	bcs	00107$
                            155 ;../_modulong.c:363: a -= b;
   0083 C6r00r03      [ 4]  156 	lda	(__modulong_PARM_1 + 3)
   0086 C0r00r07      [ 4]  157 	sub	(__modulong_PARM_2 + 3)
   0089 C7r00r03      [ 4]  158 	sta	(__modulong_PARM_1 + 3)
   008C C6r00r02      [ 4]  159 	lda	(__modulong_PARM_1 + 2)
   008F C2r00r06      [ 4]  160 	sbc	(__modulong_PARM_2 + 2)
   0092 C7r00r02      [ 4]  161 	sta	(__modulong_PARM_1 + 2)
   0095 C6r00r01      [ 4]  162 	lda	(__modulong_PARM_1 + 1)
   0098 C2r00r05      [ 4]  163 	sbc	(__modulong_PARM_2 + 1)
   009B C7r00r01      [ 4]  164 	sta	(__modulong_PARM_1 + 1)
   009E C6r00r00      [ 4]  165 	lda	__modulong_PARM_1
   00A1 C2r00r04      [ 4]  166 	sbc	__modulong_PARM_2
   00A4 C7r00r00      [ 4]  167 	sta	__modulong_PARM_1
   00A7                     168 00107$:
                            169 ;../_modulong.c:364: b >>= 1;
   00A7 89            [ 2]  170 	pshx
   00A8 C6r00r05      [ 4]  171 	lda	(__modulong_PARM_2 + 1)
   00AB CEr00r04      [ 4]  172 	ldx	__modulong_PARM_2
   00AE 54            [ 1]  173 	lsrx
   00AF 46            [ 1]  174 	rora
   00B0 C7r00r05      [ 4]  175 	sta	(__modulong_PARM_2 + 1)
   00B3 CFr00r04      [ 4]  176 	stx	__modulong_PARM_2
   00B6 C6r00r07      [ 4]  177 	lda	(__modulong_PARM_2 + 3)
   00B9 CEr00r06      [ 4]  178 	ldx	(__modulong_PARM_2 + 2)
   00BC 56            [ 1]  179 	rorx
   00BD 46            [ 1]  180 	rora
   00BE C7r00r07      [ 4]  181 	sta	(__modulong_PARM_2 + 3)
   00C1 CFr00r06      [ 4]  182 	stx	(__modulong_PARM_2 + 2)
   00C4 88            [ 2]  183 	pulx
                            184 ;../_modulong.c:366: while (count--);
   00C5 9F            [ 1]  185 	txa
   00C6 5A            [ 1]  186 	decx
   00C7 4D            [ 1]  187 	tsta
   00C8 26 9F         [ 3]  188 	bne	00108$
                            189 ;../_modulong.c:368: return a;
   00CA C6r00r00      [ 4]  190 	lda	__modulong_PARM_1
   00CD B7*00         [ 3]  191 	sta	*___SDCC_hc08_ret3
   00CF C6r00r01      [ 4]  192 	lda	(__modulong_PARM_1 + 1)
   00D2 B7*00         [ 3]  193 	sta	*___SDCC_hc08_ret2
   00D4 CEr00r02      [ 4]  194 	ldx	(__modulong_PARM_1 + 2)
   00D7 C6r00r03      [ 4]  195 	lda	(__modulong_PARM_1 + 3)
                            196 ;../_modulong.c:369: }
   00DA 81            [ 4]  197 	rts
                            198 	.area CSEG    (CODE)
                            199 	.area CONST   (CODE)
                            200 	.area XINIT   (CODE)
                            201 	.area CABS    (ABS,CODE)
