                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module wcstombs
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _wctomb
                             23 	.globl _wcstombs_PARM_3
                             24 	.globl _wcstombs_PARM_2
                             25 	.globl _wcstombs
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
   0000                      30 _wcstombs_sloc0_1_0:
   0000                      31 	.ds 2
   0002                      32 _wcstombs_sloc1_1_0:
   0002                      33 	.ds 2
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in ram
                             36 ;--------------------------------------------------------
                             37 ;--------------------------------------------------------
                             38 ; absolute ram data
                             39 ;--------------------------------------------------------
                             40 	.area IABS    (ABS)
                             41 	.area IABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; initialized external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XISEG
                             50 ;--------------------------------------------------------
                             51 ; extended address mode data
                             52 ;--------------------------------------------------------
                             53 	.area XSEG
   0000                      54 _wcstombs_PARM_2:
   0000                      55 	.ds 2
   0002                      56 _wcstombs_PARM_3:
   0002                      57 	.ds 2
   0004                      58 _wcstombs_s_65536_36:
   0004                      59 	.ds 2
   0006                      60 _wcstombs_m_65536_37:
   0006                      61 	.ds 2
   0008                      62 _wcstombs_buffer_65536_37:
   0008                      63 	.ds 4
                             64 ;--------------------------------------------------------
                             65 ; global & static initialisations
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area GSINIT  (CODE)
                             69 	.area GSFINAL (CODE)
                             70 	.area GSINIT  (CODE)
                             71 ;--------------------------------------------------------
                             72 ; Home
                             73 ;--------------------------------------------------------
                             74 	.area HOME    (CODE)
                             75 	.area HOME    (CODE)
                             76 ;--------------------------------------------------------
                             77 ; code
                             78 ;--------------------------------------------------------
                             79 	.area CSEG    (CODE)
                             80 ;------------------------------------------------------------
                             81 ;Allocation info for local variables in function 'wcstombs'
                             82 ;------------------------------------------------------------
                             83 ;sloc0                     Allocated with name '_wcstombs_sloc0_1_0'
                             84 ;sloc1                     Allocated with name '_wcstombs_sloc1_1_0'
                             85 ;pwcs                      Allocated with name '_wcstombs_PARM_2'
                             86 ;n                         Allocated with name '_wcstombs_PARM_3'
                             87 ;s                         Allocated with name '_wcstombs_s_65536_36'
                             88 ;m                         Allocated with name '_wcstombs_m_65536_37'
                             89 ;buffer                    Allocated with name '_wcstombs_buffer_65536_37'
                             90 ;b                         Allocated to registers a x 
                             91 ;------------------------------------------------------------
                             92 ;../wcstombs.c:33: size_t wcstombs(char *restrict s, const wchar_t *restrict pwcs, size_t n)
                             93 ;	-----------------------------------------
                             94 ;	 function wcstombs
                             95 ;	-----------------------------------------
                             96 ;	Register assignment is optimal.
                             97 ;	Stack space usage: 0 bytes.
   0000                      98 _wcstombs:
   0000 C7r00r05      [ 4]   99 	sta	(_wcstombs_s_65536_36 + 1)
   0003 CFr00r04      [ 4]  100 	stx	_wcstombs_s_65536_36
                            101 ;../wcstombs.c:35: size_t m = 0;
   0006 4F            [ 1]  102 	clra
   0007 C7r00r06      [ 4]  103 	sta	_wcstombs_m_65536_37
   000A C7r00r07      [ 4]  104 	sta	(_wcstombs_m_65536_37 + 1)
                            105 ;../wcstombs.c:38: while(n > MB_LEN_MAX || n >= wctomb(buffer, *pwcs))
   000D C6r00r00      [ 4]  106 	lda	_wcstombs_PARM_2
   0010 B7*00         [ 3]  107 	sta	*_wcstombs_sloc0_1_0
   0012 C6r00r01      [ 4]  108 	lda	(_wcstombs_PARM_2 + 1)
   0015 B7*01         [ 3]  109 	sta	*(_wcstombs_sloc0_1_0 + 1)
   0017                     110 00107$:
   0017 A6 04         [ 2]  111 	lda	#0x04
   0019 C0r00r03      [ 4]  112 	sub	(_wcstombs_PARM_3 + 1)
   001C 4F            [ 1]  113 	clra
   001D C2r00r02      [ 4]  114 	sbc	_wcstombs_PARM_3
   0020 25 2F         [ 3]  115 	bcs	00108$
   0022 55*00         [ 4]  116 	ldhx	*_wcstombs_sloc0_1_0
   0024 F6            [ 2]  117 	lda	,x
   0025 C7r00r00      [ 4]  118 	sta	_wctomb_PARM_2
   0028 E6 01         [ 3]  119 	lda	1,x
   002A C7r00r01      [ 4]  120 	sta	(_wctomb_PARM_2 + 1)
   002D E6 02         [ 3]  121 	lda	2,x
   002F C7r00r02      [ 4]  122 	sta	(_wctomb_PARM_2 + 2)
   0032 E6 03         [ 3]  123 	lda	3,x
   0034 C7r00r03      [ 4]  124 	sta	(_wctomb_PARM_2 + 3)
   0037 A6r08         [ 2]  125 	lda	#_wcstombs_buffer_65536_37
   0039 AEs00         [ 2]  126 	ldx	#>_wcstombs_buffer_65536_37
   003B CDr00r00      [ 5]  127 	jsr	_wctomb
   003E B7*03         [ 3]  128 	sta	*(_wcstombs_sloc1_1_0 + 1)
   0040 BF*02         [ 3]  129 	stx	*_wcstombs_sloc1_1_0
   0042 C6r00r03      [ 4]  130 	lda	(_wcstombs_PARM_3 + 1)
   0045 B0*03         [ 3]  131 	sub	*(_wcstombs_sloc1_1_0 + 1)
   0047 C6r00r02      [ 4]  132 	lda	_wcstombs_PARM_3
   004A B2*02         [ 3]  133 	sbc	*_wcstombs_sloc1_1_0
   004C 24 03         [ 3]  134 	bcc	00133$
   004E CCr00rCF      [ 3]  135 	jmp	00109$
   0051                     136 00133$:
   0051                     137 00108$:
                            138 ;../wcstombs.c:40: int b = wctomb(s, *pwcs);
   0051 55*00         [ 4]  139 	ldhx	*_wcstombs_sloc0_1_0
   0053 F6            [ 2]  140 	lda	,x
   0054 C7r00r00      [ 4]  141 	sta	_wctomb_PARM_2
   0057 E6 01         [ 3]  142 	lda	1,x
   0059 C7r00r01      [ 4]  143 	sta	(_wctomb_PARM_2 + 1)
   005C E6 02         [ 3]  144 	lda	2,x
   005E C7r00r02      [ 4]  145 	sta	(_wctomb_PARM_2 + 2)
   0061 E6 03         [ 3]  146 	lda	3,x
   0063 C7r00r03      [ 4]  147 	sta	(_wctomb_PARM_2 + 3)
   0066 C6r00r05      [ 4]  148 	lda	(_wcstombs_s_65536_36 + 1)
   0069 CEr00r04      [ 4]  149 	ldx	_wcstombs_s_65536_36
   006C CDr00r00      [ 5]  150 	jsr	_wctomb
                            151 ;../wcstombs.c:42: if(b == 1 && !*s)
   006F A1 01         [ 2]  152 	cmp	#0x01
   0071 26 04         [ 3]  153 	bne	00134$
   0073 A3 00         [ 2]  154 	cpx	#0x00
   0075 27 02         [ 3]  155 	beq	00135$
   0077                     156 00134$:
   0077 20 0F         [ 3]  157 	bra	00102$
   0079                     158 00135$:
   0079 89            [ 2]  159 	pshx
   007A CEr00r04      [ 4]  160 	ldx	_wcstombs_s_65536_36
   007D 89            [ 2]  161 	pshx
   007E 8A            [ 2]  162 	pulh
   007F CEr00r05      [ 4]  163 	ldx	(_wcstombs_s_65536_36 + 1)
   0082 87            [ 2]  164 	psha
   0083 F6            [ 2]  165 	lda	,x
   0084 86            [ 2]  166 	pula
   0085 88            [ 2]  167 	pulx
   0086 27 47         [ 3]  168 	beq	00109$
                            169 ;../wcstombs.c:43: break;
   0088                     170 00102$:
                            171 ;../wcstombs.c:44: if(b < 0)
   0088 87            [ 2]  172 	psha
   0089 9F            [ 1]  173 	txa
   008A A0 00         [ 2]  174 	sub	#0x00
   008C 86            [ 2]  175 	pula
   008D 90 04         [ 3]  176 	bge	00105$
                            177 ;../wcstombs.c:45: return(-1);
   008F A6 FF         [ 2]  178 	lda	#0xff
   0091 97            [ 1]  179 	tax
   0092 81            [ 4]  180 	rts
   0093                     181 00105$:
                            182 ;../wcstombs.c:47: n -= b;
   0093 B7*03         [ 3]  183 	sta	*(_wcstombs_sloc1_1_0 + 1)
   0095 BF*02         [ 3]  184 	stx	*_wcstombs_sloc1_1_0
   0097 87            [ 2]  185 	psha
   0098 C6r00r03      [ 4]  186 	lda	(_wcstombs_PARM_3 + 1)
   009B B0*03         [ 3]  187 	sub	*(_wcstombs_sloc1_1_0 + 1)
   009D C7r00r03      [ 4]  188 	sta	(_wcstombs_PARM_3 + 1)
   00A0 C6r00r02      [ 4]  189 	lda	_wcstombs_PARM_3
   00A3 B2*02         [ 3]  190 	sbc	*_wcstombs_sloc1_1_0
   00A5 C7r00r02      [ 4]  191 	sta	_wcstombs_PARM_3
                            192 ;../wcstombs.c:48: m += b;
   00A8 B6*03         [ 3]  193 	lda	*(_wcstombs_sloc1_1_0 + 1)
   00AA CBr00r07      [ 4]  194 	add	(_wcstombs_m_65536_37 + 1)
   00AD C7r00r07      [ 4]  195 	sta	(_wcstombs_m_65536_37 + 1)
   00B0 B6*02         [ 3]  196 	lda	*_wcstombs_sloc1_1_0
   00B2 C9r00r06      [ 4]  197 	adc	_wcstombs_m_65536_37
   00B5 C7r00r06      [ 4]  198 	sta	_wcstombs_m_65536_37
   00B8 86            [ 2]  199 	pula
                            200 ;../wcstombs.c:49: s += b;
   00B9 CBr00r05      [ 4]  201 	add	(_wcstombs_s_65536_36 + 1)
   00BC C7r00r05      [ 4]  202 	sta	(_wcstombs_s_65536_36 + 1)
   00BF 9F            [ 1]  203 	txa
   00C0 C9r00r04      [ 4]  204 	adc	_wcstombs_s_65536_36
   00C3 C7r00r04      [ 4]  205 	sta	_wcstombs_s_65536_36
                            206 ;../wcstombs.c:50: pwcs++;
   00C6 55*00         [ 4]  207 	ldhx	*_wcstombs_sloc0_1_0
   00C8 AF 04         [ 2]  208 	aix	#4
   00CA 35*00         [ 4]  209 	sthx	*_wcstombs_sloc0_1_0
   00CC CCr00r17      [ 3]  210 	jmp	00107$
   00CF                     211 00109$:
                            212 ;../wcstombs.c:53: return(m);
   00CF CEr00r06      [ 4]  213 	ldx	_wcstombs_m_65536_37
   00D2 C6r00r07      [ 4]  214 	lda	(_wcstombs_m_65536_37 + 1)
                            215 ;../wcstombs.c:54: }
   00D5 81            [ 4]  216 	rts
                            217 	.area CSEG    (CODE)
                            218 	.area CONST   (CODE)
                            219 	.area XINIT   (CODE)
                            220 	.area CABS    (ABS,CODE)
