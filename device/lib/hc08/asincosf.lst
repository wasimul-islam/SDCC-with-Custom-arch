                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module asincosf
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _asincosf
                             23 	.globl _ldexpf
                             24 	.globl _fabsf
                             25 	.globl _sqrtf
                             26 	.globl _asincosf_PARM_2
                             27 	.globl _asincosf_PARM_1
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (PAG)
   0000                      32 _asincosf_sloc0_1_0:
   0000                      33 	.ds 4
   0004                      34 _asincosf_sloc1_1_0:
   0004                      35 	.ds 4
                             36 ;--------------------------------------------------------
                             37 ; overlayable items in ram
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; absolute ram data
                             41 ;--------------------------------------------------------
                             42 	.area IABS    (ABS)
                             43 	.area IABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area XABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; initialized external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XISEG
                             52 ;--------------------------------------------------------
                             53 ; extended address mode data
                             54 ;--------------------------------------------------------
                             55 	.area XSEG
   0000                      56 _asincosf_PARM_1:
   0000                      57 	.ds 4
   0004                      58 _asincosf_PARM_2:
   0004                      59 	.ds 1
   0005                      60 _asincosf_y_65536_26:
   0005                      61 	.ds 4
   0009                      62 _asincosf_g_65536_26:
   0009                      63 	.ds 4
   000D                      64 _asincosf_r_65536_26:
   000D                      65 	.ds 4
   0011                      66 _asincosf_quartPI_65536_26:
   0011                      67 	.ds 1
                             68 ;--------------------------------------------------------
                             69 ; global & static initialisations
                             70 ;--------------------------------------------------------
                             71 	.area HOME    (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area GSINIT  (CODE)
                             75 ;--------------------------------------------------------
                             76 ; Home
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area HOME    (CODE)
                             80 ;--------------------------------------------------------
                             81 ; code
                             82 ;--------------------------------------------------------
                             83 	.area CSEG    (CODE)
                             84 ;------------------------------------------------------------
                             85 ;Allocation info for local variables in function 'asincosf'
                             86 ;------------------------------------------------------------
                             87 ;sloc0                     Allocated with name '_asincosf_sloc0_1_0'
                             88 ;sloc1                     Allocated with name '_asincosf_sloc1_1_0'
                             89 ;x                         Allocated with name '_asincosf_PARM_1'
                             90 ;isacos                    Allocated with name '_asincosf_PARM_2'
                             91 ;y                         Allocated with name '_asincosf_y_65536_26'
                             92 ;g                         Allocated with name '_asincosf_g_65536_26'
                             93 ;r                         Allocated with name '_asincosf_r_65536_26'
                             94 ;i                         Allocated to registers x 
                             95 ;quartPI                   Allocated with name '_asincosf_quartPI_65536_26'
                             96 ;------------------------------------------------------------
                             97 ;../asincosf.c:47: float asincosf(float x, bool isacos)
                             98 ;	-----------------------------------------
                             99 ;	 function asincosf
                            100 ;	-----------------------------------------
                            101 ;	Register assignment is optimal.
                            102 ;	Stack space usage: 0 bytes.
   0000                     103 _asincosf:
                            104 ;../asincosf.c:51: bool quartPI = isacos;
   0000 C6r00r04      [ 4]  105 	lda	_asincosf_PARM_2
   0003 C7r00r11      [ 4]  106 	sta	_asincosf_quartPI_65536_26
                            107 ;../asincosf.c:56: y = fabsf(x);
   0006 C6r00r03      [ 4]  108 	lda	(_asincosf_PARM_1 + 3)
   0009 87            [ 2]  109 	psha
   000A C6r00r02      [ 4]  110 	lda	(_asincosf_PARM_1 + 2)
   000D 87            [ 2]  111 	psha
   000E C6r00r01      [ 4]  112 	lda	(_asincosf_PARM_1 + 1)
   0011 87            [ 2]  113 	psha
   0012 C6r00r00      [ 4]  114 	lda	_asincosf_PARM_1
   0015 87            [ 2]  115 	psha
   0016 CDr00r00      [ 5]  116 	jsr	_fabsf
   0019 B7*03         [ 3]  117 	sta	*(_asincosf_sloc0_1_0 + 3)
   001B BF*02         [ 3]  118 	stx	*(_asincosf_sloc0_1_0 + 2)
   001D 4E*00*01      [ 5]  119 	mov	*___SDCC_hc08_ret2,*(_asincosf_sloc0_1_0 + 1)
   0020 4E*00*00      [ 5]  120 	mov	*___SDCC_hc08_ret3,*_asincosf_sloc0_1_0
   0023 A7 04         [ 2]  121 	ais	#4
   0025 45r00r05      [ 3]  122 	ldhx	#_asincosf_y_65536_26
   0028 5E*00         [ 4]  123 	mov	*_asincosf_sloc0_1_0,x+
   002A 5E*01         [ 4]  124 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   002C 5E*02         [ 4]  125 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   002E 5E*03         [ 4]  126 	mov	*(_asincosf_sloc0_1_0 + 3),x+
                            127 ;../asincosf.c:57: if (y < EPS)
   0030 45r00r00      [ 3]  128 	ldhx	#___fslt_PARM_1
   0033 5E*00         [ 4]  129 	mov	*_asincosf_sloc0_1_0,x+
   0035 5E*01         [ 4]  130 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0037 5E*02         [ 4]  131 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   0039 5E*03         [ 4]  132 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   003B 45r00r00      [ 3]  133 	ldhx	#___fslt_PARM_2
   003E A6 39         [ 2]  134 	lda	#0x39
   0040 F7            [ 2]  135 	sta	,x
   0041 A6 80         [ 2]  136 	lda	#0x80
   0043 E7 01         [ 3]  137 	sta	1,x
   0045 4F            [ 1]  138 	clra
   0046 E7 02         [ 3]  139 	sta	2,x
   0048 E7 03         [ 3]  140 	sta	3,x
   004A CDr00r00      [ 5]  141 	jsr	___fslt
   004D 4D            [ 1]  142 	tsta
   004E 27 0E         [ 3]  143 	beq	00107$
                            144 ;../asincosf.c:59: r = y;
   0050 45r00r0D      [ 3]  145 	ldhx	#_asincosf_r_65536_26
   0053 5E*00         [ 4]  146 	mov	*_asincosf_sloc0_1_0,x+
   0055 5E*01         [ 4]  147 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0057 5E*02         [ 4]  148 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   0059 5E*03         [ 4]  149 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   005B CCr02rF4      [ 3]  150 	jmp	00108$
   005E                     151 00107$:
                            152 ;../asincosf.c:63: if (y > 0.5)
   005E 45r00r00      [ 3]  153 	ldhx	#___fslt_PARM_1
   0061 4F            [ 1]  154 	clra
   0062 E7 01         [ 3]  155 	sta	1,x
   0064 E7 02         [ 3]  156 	sta	2,x
   0066 E7 03         [ 3]  157 	sta	3,x
   0068 A6 3F         [ 2]  158 	lda	#0x3f
   006A F7            [ 2]  159 	sta	,x
   006B 45r00r00      [ 3]  160 	ldhx	#___fslt_PARM_2
   006E 5E*00         [ 4]  161 	mov	*_asincosf_sloc0_1_0,x+
   0070 5E*01         [ 4]  162 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0072 5E*02         [ 4]  163 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   0074 5E*03         [ 4]  164 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   0076 CDr00r00      [ 5]  165 	jsr	___fslt
   0079 4D            [ 1]  166 	tsta
   007A 26 03         [ 3]  167 	bne	00150$
   007C CCr01r5A      [ 3]  168 	jmp	00104$
   007F                     169 00150$:
                            170 ;../asincosf.c:65: quartPI = !isacos;
   007F C6r00r11      [ 4]  171 	lda	_asincosf_quartPI_65536_26
   0082 A8 01         [ 2]  172 	eor	#0x01
   0084 C7r00r11      [ 4]  173 	sta	_asincosf_quartPI_65536_26
                            174 ;../asincosf.c:66: if (y > 1.0)
   0087 45r00r00      [ 3]  175 	ldhx	#___fslt_PARM_1
   008A A6 3F         [ 2]  176 	lda	#0x3f
   008C F7            [ 2]  177 	sta	,x
   008D A6 80         [ 2]  178 	lda	#0x80
   008F E7 01         [ 3]  179 	sta	1,x
   0091 4F            [ 1]  180 	clra
   0092 E7 02         [ 3]  181 	sta	2,x
   0094 E7 03         [ 3]  182 	sta	3,x
   0096 45r00r00      [ 3]  183 	ldhx	#___fslt_PARM_2
   0099 5E*00         [ 4]  184 	mov	*_asincosf_sloc0_1_0,x+
   009B 5E*01         [ 4]  185 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   009D 5E*02         [ 4]  186 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   009F 5E*03         [ 4]  187 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   00A1 CDr00r00      [ 5]  188 	jsr	___fslt
   00A4 4D            [ 1]  189 	tsta
   00A5 27 10         [ 3]  190 	beq	00102$
                            191 ;../asincosf.c:68: errno = EDOM;
   00A7 4F            [ 1]  192 	clra
   00A8 C7r00r00      [ 4]  193 	sta	_errno
   00AB A6 21         [ 2]  194 	lda	#0x21
   00AD C7r00r01      [ 4]  195 	sta	(_errno + 1)
                            196 ;../asincosf.c:69: return 0.0;
   00B0 4F            [ 1]  197 	clra
   00B1 97            [ 1]  198 	tax
   00B2 B7*00         [ 3]  199 	sta	*___SDCC_hc08_ret2
   00B4 B7*00         [ 3]  200 	sta	*___SDCC_hc08_ret3
   00B6 81            [ 4]  201 	rts
   00B7                     202 00102$:
                            203 ;../asincosf.c:71: g = (0.5 - y) + 0.5;
   00B7 45r00r00      [ 3]  204 	ldhx	#___fssub_PARM_1
   00BA A6 3F         [ 2]  205 	lda	#0x3f
   00BC F7            [ 2]  206 	sta	,x
   00BD A6 80         [ 2]  207 	lda	#0x80
   00BF E7 01         [ 3]  208 	sta	1,x
   00C1 4F            [ 1]  209 	clra
   00C2 E7 02         [ 3]  210 	sta	2,x
   00C4 E7 03         [ 3]  211 	sta	3,x
   00C6 45r00r00      [ 3]  212 	ldhx	#___fssub_PARM_2
   00C9 5E*00         [ 4]  213 	mov	*_asincosf_sloc0_1_0,x+
   00CB 5E*01         [ 4]  214 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   00CD 5E*02         [ 4]  215 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   00CF 5E*03         [ 4]  216 	mov	*(_asincosf_sloc0_1_0 + 3),x+
                            217 ;../asincosf.c:72: g = ldexpf(g, -1);
   00D1 CDr00r00      [ 5]  218 	jsr	___fssub
   00D4 C7r00r03      [ 4]  219 	sta	(_ldexpf_PARM_1 + 3)
   00D7 CFr00r02      [ 4]  220 	stx	(_ldexpf_PARM_1 + 2)
   00DA B6*00         [ 3]  221 	lda	*___SDCC_hc08_ret2
   00DC C7r00r01      [ 4]  222 	sta	(_ldexpf_PARM_1 + 1)
   00DF B6*00         [ 3]  223 	lda	*___SDCC_hc08_ret3
   00E1 C7r00r00      [ 4]  224 	sta	_ldexpf_PARM_1
   00E4 A6 FF         [ 2]  225 	lda	#0xff
   00E6 C7r00r00      [ 4]  226 	sta	_ldexpf_PARM_2
   00E9 C7r00r01      [ 4]  227 	sta	(_ldexpf_PARM_2 + 1)
   00EC CDr00r00      [ 5]  228 	jsr	_ldexpf
   00EF B7*07         [ 3]  229 	sta	*(_asincosf_sloc1_1_0 + 3)
   00F1 BF*06         [ 3]  230 	stx	*(_asincosf_sloc1_1_0 + 2)
   00F3 4E*00*05      [ 5]  231 	mov	*___SDCC_hc08_ret2,*(_asincosf_sloc1_1_0 + 1)
   00F6 4E*00*04      [ 5]  232 	mov	*___SDCC_hc08_ret3,*_asincosf_sloc1_1_0
   00F9 45r00r09      [ 3]  233 	ldhx	#_asincosf_g_65536_26
   00FC 5E*04         [ 4]  234 	mov	*_asincosf_sloc1_1_0,x+
   00FE 5E*05         [ 4]  235 	mov	*(_asincosf_sloc1_1_0 + 1),x+
   0100 5E*06         [ 4]  236 	mov	*(_asincosf_sloc1_1_0 + 2),x+
   0102 5E*07         [ 4]  237 	mov	*(_asincosf_sloc1_1_0 + 3),x+
                            238 ;../asincosf.c:73: y = sqrtf(g);
   0104 B6*07         [ 3]  239 	lda	*(_asincosf_sloc1_1_0 + 3)
   0106 87            [ 2]  240 	psha
   0107 B6*06         [ 3]  241 	lda	*(_asincosf_sloc1_1_0 + 2)
   0109 87            [ 2]  242 	psha
   010A B6*05         [ 3]  243 	lda	*(_asincosf_sloc1_1_0 + 1)
   010C 87            [ 2]  244 	psha
   010D B6*04         [ 3]  245 	lda	*_asincosf_sloc1_1_0
   010F 87            [ 2]  246 	psha
   0110 CDr00r00      [ 5]  247 	jsr	_sqrtf
   0113 B7*07         [ 3]  248 	sta	*(_asincosf_sloc1_1_0 + 3)
   0115 BF*06         [ 3]  249 	stx	*(_asincosf_sloc1_1_0 + 2)
   0117 4E*00*05      [ 5]  250 	mov	*___SDCC_hc08_ret2,*(_asincosf_sloc1_1_0 + 1)
   011A 4E*00*04      [ 5]  251 	mov	*___SDCC_hc08_ret3,*_asincosf_sloc1_1_0
   011D A7 04         [ 2]  252 	ais	#4
                            253 ;../asincosf.c:74: y = -(y + y);
   011F 45r00r00      [ 3]  254 	ldhx	#___fsadd_PARM_1
   0122 5E*04         [ 4]  255 	mov	*_asincosf_sloc1_1_0,x+
   0124 5E*05         [ 4]  256 	mov	*(_asincosf_sloc1_1_0 + 1),x+
   0126 5E*06         [ 4]  257 	mov	*(_asincosf_sloc1_1_0 + 2),x+
   0128 5E*07         [ 4]  258 	mov	*(_asincosf_sloc1_1_0 + 3),x+
   012A 45r00r00      [ 3]  259 	ldhx	#___fsadd_PARM_2
   012D 5E*04         [ 4]  260 	mov	*_asincosf_sloc1_1_0,x+
   012F 5E*05         [ 4]  261 	mov	*(_asincosf_sloc1_1_0 + 1),x+
   0131 5E*06         [ 4]  262 	mov	*(_asincosf_sloc1_1_0 + 2),x+
   0133 5E*07         [ 4]  263 	mov	*(_asincosf_sloc1_1_0 + 3),x+
   0135 CDr00r00      [ 5]  264 	jsr	___fsadd
   0138 B7*07         [ 3]  265 	sta	*(_asincosf_sloc1_1_0 + 3)
   013A BF*06         [ 3]  266 	stx	*(_asincosf_sloc1_1_0 + 2)
   013C 4E*00*05      [ 5]  267 	mov	*___SDCC_hc08_ret2,*(_asincosf_sloc1_1_0 + 1)
   013F 4E*00*04      [ 5]  268 	mov	*___SDCC_hc08_ret3,*_asincosf_sloc1_1_0
   0142 B6*07         [ 3]  269 	lda	*(_asincosf_sloc1_1_0 + 3)
   0144 C7r00r08      [ 4]  270 	sta	(_asincosf_y_65536_26 + 3)
   0147 B6*06         [ 3]  271 	lda	*(_asincosf_sloc1_1_0 + 2)
   0149 C7r00r07      [ 4]  272 	sta	(_asincosf_y_65536_26 + 2)
   014C B6*05         [ 3]  273 	lda	*(_asincosf_sloc1_1_0 + 1)
   014E C7r00r06      [ 4]  274 	sta	(_asincosf_y_65536_26 + 1)
   0151 B6*04         [ 3]  275 	lda	*_asincosf_sloc1_1_0
   0153 A8 80         [ 2]  276 	eor	#0x80
   0155 C7r00r05      [ 4]  277 	sta	_asincosf_y_65536_26
   0158 20 29         [ 3]  278 	bra	00105$
   015A                     279 00104$:
                            280 ;../asincosf.c:78: g = y * y;
   015A 45r00r00      [ 3]  281 	ldhx	#___fsmul_PARM_1
   015D 5E*00         [ 4]  282 	mov	*_asincosf_sloc0_1_0,x+
   015F 5E*01         [ 4]  283 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0161 5E*02         [ 4]  284 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   0163 5E*03         [ 4]  285 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   0165 45r00r00      [ 3]  286 	ldhx	#___fsmul_PARM_2
   0168 5E*00         [ 4]  287 	mov	*_asincosf_sloc0_1_0,x+
   016A 5E*01         [ 4]  288 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   016C 5E*02         [ 4]  289 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   016E 5E*03         [ 4]  290 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   0170 CDr00r00      [ 5]  291 	jsr	___fsmul
   0173 C7r00r0C      [ 4]  292 	sta	(_asincosf_g_65536_26 + 3)
   0176 CFr00r0B      [ 4]  293 	stx	(_asincosf_g_65536_26 + 2)
   0179 B6*00         [ 3]  294 	lda	*___SDCC_hc08_ret2
   017B C7r00r0A      [ 4]  295 	sta	(_asincosf_g_65536_26 + 1)
   017E B6*00         [ 3]  296 	lda	*___SDCC_hc08_ret3
   0180 C7r00r09      [ 4]  297 	sta	_asincosf_g_65536_26
   0183                     298 00105$:
                            299 ;../asincosf.c:80: r = y + y * ((P(g) * g) / Q(g));
   0183 45r00r00      [ 3]  300 	ldhx	#___fsmul_PARM_1
   0186 A6 BF         [ 2]  301 	lda	#0xbf
   0188 F7            [ 2]  302 	sta	,x
   0189 A6 01         [ 2]  303 	lda	#0x01
   018B E7 01         [ 3]  304 	sta	1,x
   018D A6 20         [ 2]  305 	lda	#0x20
   018F E7 02         [ 3]  306 	sta	2,x
   0191 A6 65         [ 2]  307 	lda	#0x65
   0193 E7 03         [ 3]  308 	sta	3,x
   0195 45r00r00      [ 3]  309 	ldhx	#___fsmul_PARM_2
   0198 C6r00r09      [ 4]  310 	lda	_asincosf_g_65536_26
   019B F7            [ 2]  311 	sta	,x
   019C C6r00r0A      [ 4]  312 	lda	(_asincosf_g_65536_26 + 1)
   019F E7 01         [ 3]  313 	sta	1,x
   01A1 C6r00r0B      [ 4]  314 	lda	(_asincosf_g_65536_26 + 2)
   01A4 E7 02         [ 3]  315 	sta	2,x
   01A6 C6r00r0C      [ 4]  316 	lda	(_asincosf_g_65536_26 + 3)
   01A9 E7 03         [ 3]  317 	sta	3,x
   01AB CDr00r00      [ 5]  318 	jsr	___fsmul
   01AE C7r00r03      [ 4]  319 	sta	(___fsadd_PARM_1 + 3)
   01B1 CFr00r02      [ 4]  320 	stx	(___fsadd_PARM_1 + 2)
   01B4 B6*00         [ 3]  321 	lda	*___SDCC_hc08_ret2
   01B6 C7r00r01      [ 4]  322 	sta	(___fsadd_PARM_1 + 1)
   01B9 B6*00         [ 3]  323 	lda	*___SDCC_hc08_ret3
   01BB C7r00r00      [ 4]  324 	sta	___fsadd_PARM_1
   01BE 45r00r00      [ 3]  325 	ldhx	#___fsadd_PARM_2
   01C1 A6 3F         [ 2]  326 	lda	#0x3f
   01C3 F7            [ 2]  327 	sta	,x
   01C4 A6 6F         [ 2]  328 	lda	#0x6f
   01C6 E7 01         [ 3]  329 	sta	1,x
   01C8 A6 16         [ 2]  330 	lda	#0x16
   01CA E7 02         [ 3]  331 	sta	2,x
   01CC A6 6B         [ 2]  332 	lda	#0x6b
   01CE E7 03         [ 3]  333 	sta	3,x
   01D0 CDr00r00      [ 5]  334 	jsr	___fsadd
   01D3 C7r00r03      [ 4]  335 	sta	(___fsmul_PARM_1 + 3)
   01D6 CFr00r02      [ 4]  336 	stx	(___fsmul_PARM_1 + 2)
   01D9 B6*00         [ 3]  337 	lda	*___SDCC_hc08_ret2
   01DB C7r00r01      [ 4]  338 	sta	(___fsmul_PARM_1 + 1)
   01DE B6*00         [ 3]  339 	lda	*___SDCC_hc08_ret3
   01E0 C7r00r00      [ 4]  340 	sta	___fsmul_PARM_1
   01E3 45r00r00      [ 3]  341 	ldhx	#___fsmul_PARM_2
   01E6 C6r00r09      [ 4]  342 	lda	_asincosf_g_65536_26
   01E9 F7            [ 2]  343 	sta	,x
   01EA C6r00r0A      [ 4]  344 	lda	(_asincosf_g_65536_26 + 1)
   01ED E7 01         [ 3]  345 	sta	1,x
   01EF C6r00r0B      [ 4]  346 	lda	(_asincosf_g_65536_26 + 2)
   01F2 E7 02         [ 3]  347 	sta	2,x
   01F4 C6r00r0C      [ 4]  348 	lda	(_asincosf_g_65536_26 + 3)
   01F7 E7 03         [ 3]  349 	sta	3,x
   01F9 CDr00r00      [ 5]  350 	jsr	___fsmul
   01FC B7*07         [ 3]  351 	sta	*(_asincosf_sloc1_1_0 + 3)
   01FE BF*06         [ 3]  352 	stx	*(_asincosf_sloc1_1_0 + 2)
   0200 4E*00*05      [ 5]  353 	mov	*___SDCC_hc08_ret2,*(_asincosf_sloc1_1_0 + 1)
   0203 4E*00*04      [ 5]  354 	mov	*___SDCC_hc08_ret3,*_asincosf_sloc1_1_0
   0206 45r00r09      [ 3]  355 	ldhx	#_asincosf_g_65536_26
   0209 7E*00         [ 4]  356 	mov	,x+,*_asincosf_sloc0_1_0
   020B 7E*01         [ 4]  357 	mov	,x+,*(_asincosf_sloc0_1_0 + 1)
   020D 7E*02         [ 4]  358 	mov	,x+,*(_asincosf_sloc0_1_0 + 2)
   020F 7E*03         [ 4]  359 	mov	,x+,*(_asincosf_sloc0_1_0 + 3)
   0211 45r00r00      [ 3]  360 	ldhx	#___fsadd_PARM_1
   0214 5E*00         [ 4]  361 	mov	*_asincosf_sloc0_1_0,x+
   0216 5E*01         [ 4]  362 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0218 5E*02         [ 4]  363 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   021A 5E*03         [ 4]  364 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   021C 45r00r00      [ 3]  365 	ldhx	#___fsadd_PARM_2
   021F A6 C0         [ 2]  366 	lda	#0xc0
   0221 F7            [ 2]  367 	sta	,x
   0222 A6 B1         [ 2]  368 	lda	#0xb1
   0224 E7 01         [ 3]  369 	sta	1,x
   0226 A6 8D         [ 2]  370 	lda	#0x8d
   0228 E7 02         [ 3]  371 	sta	2,x
   022A A6 0B         [ 2]  372 	lda	#0x0b
   022C E7 03         [ 3]  373 	sta	3,x
   022E CDr00r00      [ 5]  374 	jsr	___fsadd
   0231 C7r00r03      [ 4]  375 	sta	(___fsmul_PARM_1 + 3)
   0234 CFr00r02      [ 4]  376 	stx	(___fsmul_PARM_1 + 2)
   0237 B6*00         [ 3]  377 	lda	*___SDCC_hc08_ret2
   0239 C7r00r01      [ 4]  378 	sta	(___fsmul_PARM_1 + 1)
   023C B6*00         [ 3]  379 	lda	*___SDCC_hc08_ret3
   023E C7r00r00      [ 4]  380 	sta	___fsmul_PARM_1
   0241 45r00r00      [ 3]  381 	ldhx	#___fsmul_PARM_2
   0244 5E*00         [ 4]  382 	mov	*_asincosf_sloc0_1_0,x+
   0246 5E*01         [ 4]  383 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0248 5E*02         [ 4]  384 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   024A 5E*03         [ 4]  385 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   024C CDr00r00      [ 5]  386 	jsr	___fsmul
   024F C7r00r03      [ 4]  387 	sta	(___fsadd_PARM_1 + 3)
   0252 CFr00r02      [ 4]  388 	stx	(___fsadd_PARM_1 + 2)
   0255 B6*00         [ 3]  389 	lda	*___SDCC_hc08_ret2
   0257 C7r00r01      [ 4]  390 	sta	(___fsadd_PARM_1 + 1)
   025A B6*00         [ 3]  391 	lda	*___SDCC_hc08_ret3
   025C C7r00r00      [ 4]  392 	sta	___fsadd_PARM_1
   025F 45r00r00      [ 3]  393 	ldhx	#___fsadd_PARM_2
   0262 A6 40         [ 2]  394 	lda	#0x40
   0264 F7            [ 2]  395 	sta	,x
   0265 A6 B3         [ 2]  396 	lda	#0xb3
   0267 E7 01         [ 3]  397 	sta	1,x
   0269 A6 50         [ 2]  398 	lda	#0x50
   026B E7 02         [ 3]  399 	sta	2,x
   026D A6 F0         [ 2]  400 	lda	#0xf0
   026F E7 03         [ 3]  401 	sta	3,x
   0271 CDr00r00      [ 5]  402 	jsr	___fsadd
   0274 C7r00r03      [ 4]  403 	sta	(___fsdiv_PARM_2 + 3)
   0277 CFr00r02      [ 4]  404 	stx	(___fsdiv_PARM_2 + 2)
   027A B6*00         [ 3]  405 	lda	*___SDCC_hc08_ret2
   027C C7r00r01      [ 4]  406 	sta	(___fsdiv_PARM_2 + 1)
   027F B6*00         [ 3]  407 	lda	*___SDCC_hc08_ret3
   0281 C7r00r00      [ 4]  408 	sta	___fsdiv_PARM_2
   0284 45r00r00      [ 3]  409 	ldhx	#___fsdiv_PARM_1
   0287 5E*04         [ 4]  410 	mov	*_asincosf_sloc1_1_0,x+
   0289 5E*05         [ 4]  411 	mov	*(_asincosf_sloc1_1_0 + 1),x+
   028B 5E*06         [ 4]  412 	mov	*(_asincosf_sloc1_1_0 + 2),x+
   028D 5E*07         [ 4]  413 	mov	*(_asincosf_sloc1_1_0 + 3),x+
   028F CDr00r00      [ 5]  414 	jsr	___fsdiv
   0292 C7r00r03      [ 4]  415 	sta	(___fsmul_PARM_2 + 3)
   0295 CFr00r02      [ 4]  416 	stx	(___fsmul_PARM_2 + 2)
   0298 B6*00         [ 3]  417 	lda	*___SDCC_hc08_ret2
   029A C7r00r01      [ 4]  418 	sta	(___fsmul_PARM_2 + 1)
   029D B6*00         [ 3]  419 	lda	*___SDCC_hc08_ret3
   029F C7r00r00      [ 4]  420 	sta	___fsmul_PARM_2
   02A2 45r00r00      [ 3]  421 	ldhx	#___fsmul_PARM_1
   02A5 C6r00r05      [ 4]  422 	lda	_asincosf_y_65536_26
   02A8 F7            [ 2]  423 	sta	,x
   02A9 C6r00r06      [ 4]  424 	lda	(_asincosf_y_65536_26 + 1)
   02AC E7 01         [ 3]  425 	sta	1,x
   02AE C6r00r07      [ 4]  426 	lda	(_asincosf_y_65536_26 + 2)
   02B1 E7 02         [ 3]  427 	sta	2,x
   02B3 C6r00r08      [ 4]  428 	lda	(_asincosf_y_65536_26 + 3)
   02B6 E7 03         [ 3]  429 	sta	3,x
   02B8 CDr00r00      [ 5]  430 	jsr	___fsmul
   02BB C7r00r03      [ 4]  431 	sta	(___fsadd_PARM_2 + 3)
   02BE CFr00r02      [ 4]  432 	stx	(___fsadd_PARM_2 + 2)
   02C1 B6*00         [ 3]  433 	lda	*___SDCC_hc08_ret2
   02C3 C7r00r01      [ 4]  434 	sta	(___fsadd_PARM_2 + 1)
   02C6 B6*00         [ 3]  435 	lda	*___SDCC_hc08_ret3
   02C8 C7r00r00      [ 4]  436 	sta	___fsadd_PARM_2
   02CB 45r00r00      [ 3]  437 	ldhx	#___fsadd_PARM_1
   02CE C6r00r05      [ 4]  438 	lda	_asincosf_y_65536_26
   02D1 F7            [ 2]  439 	sta	,x
   02D2 C6r00r06      [ 4]  440 	lda	(_asincosf_y_65536_26 + 1)
   02D5 E7 01         [ 3]  441 	sta	1,x
   02D7 C6r00r07      [ 4]  442 	lda	(_asincosf_y_65536_26 + 2)
   02DA E7 02         [ 3]  443 	sta	2,x
   02DC C6r00r08      [ 4]  444 	lda	(_asincosf_y_65536_26 + 3)
   02DF E7 03         [ 3]  445 	sta	3,x
   02E1 CDr00r00      [ 5]  446 	jsr	___fsadd
   02E4 C7r00r10      [ 4]  447 	sta	(_asincosf_r_65536_26 + 3)
   02E7 CFr00r0F      [ 4]  448 	stx	(_asincosf_r_65536_26 + 2)
   02EA B6*00         [ 3]  449 	lda	*___SDCC_hc08_ret2
   02EC C7r00r0E      [ 4]  450 	sta	(_asincosf_r_65536_26 + 1)
   02EF B6*00         [ 3]  451 	lda	*___SDCC_hc08_ret3
   02F1 C7r00r0D      [ 4]  452 	sta	_asincosf_r_65536_26
   02F4                     453 00108$:
                            454 ;../asincosf.c:82: i = quartPI;
   02F4 CEr00r11      [ 4]  455 	ldx	_asincosf_quartPI_65536_26
                            456 ;../asincosf.c:85: if (x < 0.0)
   02F7 C6r00r00      [ 4]  457 	lda	_asincosf_PARM_1
   02FA C7r00r00      [ 4]  458 	sta	___fslt_PARM_1
   02FD C6r00r01      [ 4]  459 	lda	(_asincosf_PARM_1 + 1)
   0300 C7r00r01      [ 4]  460 	sta	(___fslt_PARM_1 + 1)
   0303 C6r00r02      [ 4]  461 	lda	(_asincosf_PARM_1 + 2)
   0306 C7r00r02      [ 4]  462 	sta	(___fslt_PARM_1 + 2)
   0309 C6r00r03      [ 4]  463 	lda	(_asincosf_PARM_1 + 3)
   030C C7r00r03      [ 4]  464 	sta	(___fslt_PARM_1 + 3)
   030F 4F            [ 1]  465 	clra
   0310 C7r00r00      [ 4]  466 	sta	___fslt_PARM_2
   0313 C7r00r01      [ 4]  467 	sta	(___fslt_PARM_2 + 1)
   0316 C7r00r02      [ 4]  468 	sta	(___fslt_PARM_2 + 2)
   0319 C7r00r03      [ 4]  469 	sta	(___fslt_PARM_2 + 3)
                            470 ;../asincosf.c:86: r = (b[i] + r) + b[i];
   031C 89            [ 2]  471 	pshx
   031D CDr00r00      [ 5]  472 	jsr	___fslt
   0320 B7*04         [ 3]  473 	sta	*_asincosf_sloc1_1_0
   0322 88            [ 2]  474 	pulx
   0323 9F            [ 1]  475 	txa
   0324 AE 04         [ 2]  476 	ldx	#0x04
   0326 42            [ 5]  477 	mul
   0327 89            [ 2]  478 	pshx
   0328 8A            [ 2]  479 	pulh
   0329 97            [ 1]  480 	tax
                            481 ;../asincosf.c:83: if (isacos)
   032A C6r00r04      [ 4]  482 	lda	_asincosf_PARM_2
   032D 26 03         [ 3]  483 	bne	00152$
   032F CCr04r07      [ 3]  484 	jmp	00115$
   0332                     485 00152$:
                            486 ;../asincosf.c:85: if (x < 0.0)
   0332 3D*04         [ 3]  487 	tst	*_asincosf_sloc1_1_0
   0334 27 69         [ 3]  488 	beq	00110$
                            489 ;../asincosf.c:86: r = (b[i] + r) + b[i];
   0336 D6r00r08      [ 4]  490 	lda	(_asincosf_b_65536_26),x
   0339 B7*00         [ 3]  491 	sta	*_asincosf_sloc0_1_0
   033B D6r00r09      [ 4]  492 	lda	(_asincosf_b_65536_26+1),x
   033E B7*01         [ 3]  493 	sta	*(_asincosf_sloc0_1_0 + 1)
   0340 D6r00r0A      [ 4]  494 	lda	(_asincosf_b_65536_26+2),x
   0343 B7*02         [ 3]  495 	sta	*(_asincosf_sloc0_1_0 + 2)
   0345 D6r00r0B      [ 4]  496 	lda	(_asincosf_b_65536_26+3),x
   0348 B7*03         [ 3]  497 	sta	*(_asincosf_sloc0_1_0 + 3)
   034A 45r00r00      [ 3]  498 	ldhx	#___fsadd_PARM_1
   034D 5E*00         [ 4]  499 	mov	*_asincosf_sloc0_1_0,x+
   034F 5E*01         [ 4]  500 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0351 5E*02         [ 4]  501 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   0353 5E*03         [ 4]  502 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   0355 45r00r00      [ 3]  503 	ldhx	#___fsadd_PARM_2
   0358 C6r00r0D      [ 4]  504 	lda	_asincosf_r_65536_26
   035B F7            [ 2]  505 	sta	,x
   035C C6r00r0E      [ 4]  506 	lda	(_asincosf_r_65536_26 + 1)
   035F E7 01         [ 3]  507 	sta	1,x
   0361 C6r00r0F      [ 4]  508 	lda	(_asincosf_r_65536_26 + 2)
   0364 E7 02         [ 3]  509 	sta	2,x
   0366 C6r00r10      [ 4]  510 	lda	(_asincosf_r_65536_26 + 3)
   0369 E7 03         [ 3]  511 	sta	3,x
   036B CDr00r00      [ 5]  512 	jsr	___fsadd
   036E C7r00r03      [ 4]  513 	sta	(___fsadd_PARM_1 + 3)
   0371 CFr00r02      [ 4]  514 	stx	(___fsadd_PARM_1 + 2)
   0374 B6*00         [ 3]  515 	lda	*___SDCC_hc08_ret2
   0376 C7r00r01      [ 4]  516 	sta	(___fsadd_PARM_1 + 1)
   0379 B6*00         [ 3]  517 	lda	*___SDCC_hc08_ret3
   037B C7r00r00      [ 4]  518 	sta	___fsadd_PARM_1
   037E 45r00r00      [ 3]  519 	ldhx	#___fsadd_PARM_2
   0381 5E*00         [ 4]  520 	mov	*_asincosf_sloc0_1_0,x+
   0383 5E*01         [ 4]  521 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0385 5E*02         [ 4]  522 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   0387 5E*03         [ 4]  523 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   0389 CDr00r00      [ 5]  524 	jsr	___fsadd
   038C C7r00r10      [ 4]  525 	sta	(_asincosf_r_65536_26 + 3)
   038F CFr00r0F      [ 4]  526 	stx	(_asincosf_r_65536_26 + 2)
   0392 B6*00         [ 3]  527 	lda	*___SDCC_hc08_ret2
   0394 C7r00r0E      [ 4]  528 	sta	(_asincosf_r_65536_26 + 1)
   0397 B6*00         [ 3]  529 	lda	*___SDCC_hc08_ret3
   0399 C7r00r0D      [ 4]  530 	sta	_asincosf_r_65536_26
   039C CCr04r79      [ 3]  531 	jmp	00116$
   039F                     532 00110$:
                            533 ;../asincosf.c:88: r = (a[i] - r) + a[i];
   039F D6r00r00      [ 4]  534 	lda	(_asincosf_a_65536_26),x
   03A2 B7*00         [ 3]  535 	sta	*_asincosf_sloc0_1_0
   03A4 D6r00r01      [ 4]  536 	lda	(_asincosf_a_65536_26+1),x
   03A7 B7*01         [ 3]  537 	sta	*(_asincosf_sloc0_1_0 + 1)
   03A9 D6r00r02      [ 4]  538 	lda	(_asincosf_a_65536_26+2),x
   03AC B7*02         [ 3]  539 	sta	*(_asincosf_sloc0_1_0 + 2)
   03AE D6r00r03      [ 4]  540 	lda	(_asincosf_a_65536_26+3),x
   03B1 B7*03         [ 3]  541 	sta	*(_asincosf_sloc0_1_0 + 3)
   03B3 45r00r00      [ 3]  542 	ldhx	#___fssub_PARM_1
   03B6 5E*00         [ 4]  543 	mov	*_asincosf_sloc0_1_0,x+
   03B8 5E*01         [ 4]  544 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   03BA 5E*02         [ 4]  545 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   03BC 5E*03         [ 4]  546 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   03BE 45r00r00      [ 3]  547 	ldhx	#___fssub_PARM_2
   03C1 C6r00r0D      [ 4]  548 	lda	_asincosf_r_65536_26
   03C4 F7            [ 2]  549 	sta	,x
   03C5 C6r00r0E      [ 4]  550 	lda	(_asincosf_r_65536_26 + 1)
   03C8 E7 01         [ 3]  551 	sta	1,x
   03CA C6r00r0F      [ 4]  552 	lda	(_asincosf_r_65536_26 + 2)
   03CD E7 02         [ 3]  553 	sta	2,x
   03CF C6r00r10      [ 4]  554 	lda	(_asincosf_r_65536_26 + 3)
   03D2 E7 03         [ 3]  555 	sta	3,x
   03D4 CDr00r00      [ 5]  556 	jsr	___fssub
   03D7 C7r00r03      [ 4]  557 	sta	(___fsadd_PARM_1 + 3)
   03DA CFr00r02      [ 4]  558 	stx	(___fsadd_PARM_1 + 2)
   03DD B6*00         [ 3]  559 	lda	*___SDCC_hc08_ret2
   03DF C7r00r01      [ 4]  560 	sta	(___fsadd_PARM_1 + 1)
   03E2 B6*00         [ 3]  561 	lda	*___SDCC_hc08_ret3
   03E4 C7r00r00      [ 4]  562 	sta	___fsadd_PARM_1
   03E7 45r00r00      [ 3]  563 	ldhx	#___fsadd_PARM_2
   03EA 5E*00         [ 4]  564 	mov	*_asincosf_sloc0_1_0,x+
   03EC 5E*01         [ 4]  565 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   03EE 5E*02         [ 4]  566 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   03F0 5E*03         [ 4]  567 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   03F2 CDr00r00      [ 5]  568 	jsr	___fsadd
   03F5 C7r00r10      [ 4]  569 	sta	(_asincosf_r_65536_26 + 3)
   03F8 CFr00r0F      [ 4]  570 	stx	(_asincosf_r_65536_26 + 2)
   03FB B6*00         [ 3]  571 	lda	*___SDCC_hc08_ret2
   03FD C7r00r0E      [ 4]  572 	sta	(_asincosf_r_65536_26 + 1)
   0400 B6*00         [ 3]  573 	lda	*___SDCC_hc08_ret3
   0402 C7r00r0D      [ 4]  574 	sta	_asincosf_r_65536_26
   0405 20 72         [ 3]  575 	bra	00116$
   0407                     576 00115$:
                            577 ;../asincosf.c:92: r = (a[i] + r) + a[i];
   0407 D6r00r00      [ 4]  578 	lda	(_asincosf_a_65536_26),x
   040A B7*00         [ 3]  579 	sta	*_asincosf_sloc0_1_0
   040C D6r00r01      [ 4]  580 	lda	(_asincosf_a_65536_26+1),x
   040F B7*01         [ 3]  581 	sta	*(_asincosf_sloc0_1_0 + 1)
   0411 D6r00r02      [ 4]  582 	lda	(_asincosf_a_65536_26+2),x
   0414 B7*02         [ 3]  583 	sta	*(_asincosf_sloc0_1_0 + 2)
   0416 D6r00r03      [ 4]  584 	lda	(_asincosf_a_65536_26+3),x
   0419 B7*03         [ 3]  585 	sta	*(_asincosf_sloc0_1_0 + 3)
   041B 45r00r00      [ 3]  586 	ldhx	#___fsadd_PARM_1
   041E 5E*00         [ 4]  587 	mov	*_asincosf_sloc0_1_0,x+
   0420 5E*01         [ 4]  588 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0422 5E*02         [ 4]  589 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   0424 5E*03         [ 4]  590 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   0426 45r00r00      [ 3]  591 	ldhx	#___fsadd_PARM_2
   0429 C6r00r0D      [ 4]  592 	lda	_asincosf_r_65536_26
   042C F7            [ 2]  593 	sta	,x
   042D C6r00r0E      [ 4]  594 	lda	(_asincosf_r_65536_26 + 1)
   0430 E7 01         [ 3]  595 	sta	1,x
   0432 C6r00r0F      [ 4]  596 	lda	(_asincosf_r_65536_26 + 2)
   0435 E7 02         [ 3]  597 	sta	2,x
   0437 C6r00r10      [ 4]  598 	lda	(_asincosf_r_65536_26 + 3)
   043A E7 03         [ 3]  599 	sta	3,x
   043C CDr00r00      [ 5]  600 	jsr	___fsadd
   043F C7r00r03      [ 4]  601 	sta	(___fsadd_PARM_1 + 3)
   0442 CFr00r02      [ 4]  602 	stx	(___fsadd_PARM_1 + 2)
   0445 B6*00         [ 3]  603 	lda	*___SDCC_hc08_ret2
   0447 C7r00r01      [ 4]  604 	sta	(___fsadd_PARM_1 + 1)
   044A B6*00         [ 3]  605 	lda	*___SDCC_hc08_ret3
   044C C7r00r00      [ 4]  606 	sta	___fsadd_PARM_1
   044F 45r00r00      [ 3]  607 	ldhx	#___fsadd_PARM_2
   0452 5E*00         [ 4]  608 	mov	*_asincosf_sloc0_1_0,x+
   0454 5E*01         [ 4]  609 	mov	*(_asincosf_sloc0_1_0 + 1),x+
   0456 5E*02         [ 4]  610 	mov	*(_asincosf_sloc0_1_0 + 2),x+
   0458 5E*03         [ 4]  611 	mov	*(_asincosf_sloc0_1_0 + 3),x+
   045A CDr00r00      [ 5]  612 	jsr	___fsadd
   045D C7r00r10      [ 4]  613 	sta	(_asincosf_r_65536_26 + 3)
   0460 CFr00r0F      [ 4]  614 	stx	(_asincosf_r_65536_26 + 2)
   0463 B6*00         [ 3]  615 	lda	*___SDCC_hc08_ret2
   0465 C7r00r0E      [ 4]  616 	sta	(_asincosf_r_65536_26 + 1)
   0468 B6*00         [ 3]  617 	lda	*___SDCC_hc08_ret3
   046A C7r00r0D      [ 4]  618 	sta	_asincosf_r_65536_26
                            619 ;../asincosf.c:93: if (x < 0.0)
   046D 3D*04         [ 3]  620 	tst	*_asincosf_sloc1_1_0
   046F 27 08         [ 3]  621 	beq	00116$
                            622 ;../asincosf.c:94: r = -r;
   0471 C6r00r0D      [ 4]  623 	lda	_asincosf_r_65536_26
   0474 A8 80         [ 2]  624 	eor	#0x80
   0476 C7r00r0D      [ 4]  625 	sta	_asincosf_r_65536_26
   0479                     626 00116$:
                            627 ;../asincosf.c:96: return r;
   0479 C6r00r0D      [ 4]  628 	lda	_asincosf_r_65536_26
   047C B7*00         [ 3]  629 	sta	*___SDCC_hc08_ret3
   047E C6r00r0E      [ 4]  630 	lda	(_asincosf_r_65536_26 + 1)
   0481 B7*00         [ 3]  631 	sta	*___SDCC_hc08_ret2
   0483 CEr00r0F      [ 4]  632 	ldx	(_asincosf_r_65536_26 + 2)
   0486 C6r00r10      [ 4]  633 	lda	(_asincosf_r_65536_26 + 3)
                            634 ;../asincosf.c:97: }
   0489 81            [ 4]  635 	rts
                            636 	.area CSEG    (CODE)
                            637 	.area CONST   (CODE)
   0000                     638 _asincosf_a_65536_26:
   0000 00 00 00 00         639 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
   0004 3F 49 0F DB         640 	.byte #0x3f, #0x49, #0x0f, #0xdb	;  7.853982e-01
   0008                     641 _asincosf_b_65536_26:
   0008 3F C9 0F DB         642 	.byte #0x3f, #0xc9, #0x0f, #0xdb	;  1.570796e+00
   000C 3F 49 0F DB         643 	.byte #0x3f, #0x49, #0x0f, #0xdb	;  7.853982e-01
                            644 	.area XINIT   (CODE)
                            645 	.area CABS    (ABS,CODE)
