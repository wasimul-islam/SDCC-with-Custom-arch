                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _rrslonglong
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl __rrslonglong_PARM_2
                             23 	.globl __rrslonglong_PARM_1
                             24 	.globl __rrslonglong
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (PAG)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in ram
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (PAG, OVR)
   0000                      33 __rrslonglong_sloc0_1_0:
   0000                      34 	.ds 4
   0004                      35 __rrslonglong_sloc1_1_0:
   0004                      36 	.ds 4
                             37 ;--------------------------------------------------------
                             38 ; absolute ram data
                             39 ;--------------------------------------------------------
                             40 	.area IABS    (ABS)
                             41 	.area IABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; initialized external ram data
                             48 ;--------------------------------------------------------
                             49 	.area XISEG
                             50 ;--------------------------------------------------------
                             51 ; extended address mode data
                             52 ;--------------------------------------------------------
                             53 	.area XSEG
   0000                      54 __rrslonglong_PARM_1:
   0000                      55 	.ds 8
   0008                      56 __rrslonglong_PARM_2:
   0008                      57 	.ds 1
                             58 ;--------------------------------------------------------
                             59 ; global & static initialisations
                             60 ;--------------------------------------------------------
                             61 	.area HOME    (CODE)
                             62 	.area GSINIT  (CODE)
                             63 	.area GSFINAL (CODE)
                             64 	.area GSINIT  (CODE)
                             65 ;--------------------------------------------------------
                             66 ; Home
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area HOME    (CODE)
                             70 ;--------------------------------------------------------
                             71 ; code
                             72 ;--------------------------------------------------------
                             73 	.area CSEG    (CODE)
                             74 ;------------------------------------------------------------
                             75 ;Allocation info for local variables in function '_rrslonglong'
                             76 ;------------------------------------------------------------
                             77 ;l                         Allocated with name '__rrslonglong_PARM_1'
                             78 ;s                         Allocated with name '__rrslonglong_PARM_2'
                             79 ;top                       Allocated to registers 
                             80 ;middle                    Allocated to registers 
                             81 ;bottom                    Allocated to registers 
                             82 ;b                         Allocated to registers 
                             83 ;sloc0                     Allocated with name '__rrslonglong_sloc0_1_0'
                             84 ;sloc1                     Allocated with name '__rrslonglong_sloc1_1_0'
                             85 ;------------------------------------------------------------
                             86 ;../_rrslonglong.c:41: long long _rrslonglong(long long l, char s) __SDCC_NONBANKED
                             87 ;	-----------------------------------------
                             88 ;	 function _rrslonglong
                             89 ;	-----------------------------------------
                             90 ;	Register assignment is optimal.
                             91 ;	Stack space usage: 0 bytes.
   0000                      92 __rrslonglong:
                             93 ;../_rrslonglong.c:43: int32_t *top = (uint32_t *)((char *)(&l) + 0);
                             94 ;../_rrslonglong.c:44: uint32_t *middle = (uint16_t *)((char *)(&l) + 2);
                             95 ;../_rrslonglong.c:45: uint32_t *bottom = (uint32_t *)((char *)(&l) + 4);
                             96 ;../_rrslonglong.c:46: uint16_t *b = (uint16_t *)(&l);
                             97 ;../_rrslonglong.c:56: (*bottom) >>= s;
   0000                      98 00103$:
                             99 ;../_rrslonglong.c:48: for(;s >= 16; s-= 16)
   0000 C6r00r08      [ 4]  100 	lda	__rrslonglong_PARM_2
   0003 A1 10         [ 2]  101 	cmp	#0x10
   0005 25 44         [ 3]  102 	bcs	00101$
                            103 ;../_rrslonglong.c:50: b[3] = b[2];
   0007 CEr00r04      [ 4]  104 	ldx	(__rrslonglong_PARM_1 + 0x0004)
   000A C6r00r05      [ 4]  105 	lda	((__rrslonglong_PARM_1 + 0x0004) + 1)
   000D CFr00r06      [ 4]  106 	stx	(__rrslonglong_PARM_1 + 0x0006)
   0010 C7r00r07      [ 4]  107 	sta	((__rrslonglong_PARM_1 + 0x0006) + 1)
                            108 ;../_rrslonglong.c:51: b[2] = b[1];
   0013 CEr00r02      [ 4]  109 	ldx	(__rrslonglong_PARM_1 + 0x0002)
   0016 C6r00r03      [ 4]  110 	lda	((__rrslonglong_PARM_1 + 0x0002) + 1)
   0019 CFr00r04      [ 4]  111 	stx	(__rrslonglong_PARM_1 + 0x0004)
   001C C7r00r05      [ 4]  112 	sta	((__rrslonglong_PARM_1 + 0x0004) + 1)
                            113 ;../_rrslonglong.c:52: b[1] = b[0];
   001F CEr00r00      [ 4]  114 	ldx	__rrslonglong_PARM_1
   0022 C6r00r01      [ 4]  115 	lda	(__rrslonglong_PARM_1 + 1)
   0025 CFr00r02      [ 4]  116 	stx	(__rrslonglong_PARM_1 + 0x0002)
   0028 C7r00r03      [ 4]  117 	sta	((__rrslonglong_PARM_1 + 0x0002) + 1)
                            118 ;../_rrslonglong.c:53: b[0] = (b[0] & 0x8000) ? 0xffff : 0x000000;
   002B CEr00r00      [ 4]  119 	ldx	__rrslonglong_PARM_1
   002E C6r00r01      [ 4]  120 	lda	(__rrslonglong_PARM_1 + 1)
   0031 5D            [ 1]  121 	tstx
   0032 2A 05         [ 3]  122 	bpl     00107$
   0034 AE FF         [ 2]  123 	ldx	#0xff
   0036 9F            [ 1]  124 	txa
   0037 20 02         [ 3]  125 	bra	00108$
   0039                     126 00107$:
   0039 5F            [ 1]  127 	clrx
   003A 9F            [ 1]  128 	txa
   003B                     129 00108$:
   003B CFr00r00      [ 4]  130 	stx	__rrslonglong_PARM_1
   003E C7r00r01      [ 4]  131 	sta	(__rrslonglong_PARM_1 + 1)
                            132 ;../_rrslonglong.c:48: for(;s >= 16; s-= 16)
   0041 C6r00r08      [ 4]  133 	lda	__rrslonglong_PARM_2
   0044 A0 10         [ 2]  134 	sub	#0x10
   0046 C7r00r08      [ 4]  135 	sta	__rrslonglong_PARM_2
   0049 20 B5         [ 3]  136 	bra	00103$
   004B                     137 00101$:
                            138 ;../_rrslonglong.c:56: (*bottom) >>= s;
   004B C6r00r04      [ 4]  139 	lda	(__rrslonglong_PARM_1 + 0x0004)
   004E B7*00         [ 3]  140 	sta	*__rrslonglong_sloc0_1_0
   0050 C6r00r05      [ 4]  141 	lda	((__rrslonglong_PARM_1 + 0x0004) + 1)
   0053 B7*01         [ 3]  142 	sta	*(__rrslonglong_sloc0_1_0 + 1)
   0055 C6r00r06      [ 4]  143 	lda	((__rrslonglong_PARM_1 + 0x0004) + 2)
   0058 B7*02         [ 3]  144 	sta	*(__rrslonglong_sloc0_1_0 + 2)
   005A C6r00r07      [ 4]  145 	lda	((__rrslonglong_PARM_1 + 0x0004) + 3)
   005D B7*03         [ 3]  146 	sta	*(__rrslonglong_sloc0_1_0 + 3)
   005F CEr00r08      [ 4]  147 	ldx	__rrslonglong_PARM_2
   0062 27 0A         [ 3]  148 	beq	00127$
   0064                     149 00126$:
   0064 34*00         [ 4]  150 	lsr	*__rrslonglong_sloc0_1_0
   0066 36*01         [ 4]  151 	ror	*(__rrslonglong_sloc0_1_0 + 1)
   0068 36*02         [ 4]  152 	ror	*(__rrslonglong_sloc0_1_0 + 2)
   006A 36*03         [ 4]  153 	ror	*(__rrslonglong_sloc0_1_0 + 3)
   006C 5B F6         [ 3]  154 	dbnzx	00126$
   006E                     155 00127$:
   006E B6*00         [ 3]  156 	lda	*__rrslonglong_sloc0_1_0
   0070 C7r00r04      [ 4]  157 	sta	(__rrslonglong_PARM_1 + 0x0004)
   0073 B6*01         [ 3]  158 	lda	*(__rrslonglong_sloc0_1_0 + 1)
   0075 C7r00r05      [ 4]  159 	sta	((__rrslonglong_PARM_1 + 0x0004) + 1)
   0078 B6*02         [ 3]  160 	lda	*(__rrslonglong_sloc0_1_0 + 2)
   007A C7r00r06      [ 4]  161 	sta	((__rrslonglong_PARM_1 + 0x0004) + 2)
   007D B6*03         [ 3]  162 	lda	*(__rrslonglong_sloc0_1_0 + 3)
   007F C7r00r07      [ 4]  163 	sta	((__rrslonglong_PARM_1 + 0x0004) + 3)
                            164 ;../_rrslonglong.c:57: (*middle) |= (((*middle & 0xffff0000ul) >> s) & 0x0000fffful);
   0082 C6r00r02      [ 4]  165 	lda	(__rrslonglong_PARM_1 + 0x0002)
   0085 B7*00         [ 3]  166 	sta	*__rrslonglong_sloc0_1_0
   0087 C6r00r03      [ 4]  167 	lda	((__rrslonglong_PARM_1 + 0x0002) + 1)
   008A B7*01         [ 3]  168 	sta	*(__rrslonglong_sloc0_1_0 + 1)
   008C C6r00r04      [ 4]  169 	lda	((__rrslonglong_PARM_1 + 0x0002) + 2)
   008F B7*02         [ 3]  170 	sta	*(__rrslonglong_sloc0_1_0 + 2)
   0091 C6r00r05      [ 4]  171 	lda	((__rrslonglong_PARM_1 + 0x0002) + 3)
   0094 B7*03         [ 3]  172 	sta	*(__rrslonglong_sloc0_1_0 + 3)
   0096 6E 00*07      [ 4]  173 	mov	#0x00,*(__rrslonglong_sloc1_1_0 + 3)
   0099 6E 00*06      [ 4]  174 	mov	#0x00,*(__rrslonglong_sloc1_1_0 + 2)
   009C 4E*01*05      [ 5]  175 	mov	*(__rrslonglong_sloc0_1_0 + 1),*(__rrslonglong_sloc1_1_0 + 1)
   009F 4E*00*04      [ 5]  176 	mov	*__rrslonglong_sloc0_1_0,*__rrslonglong_sloc1_1_0
   00A2 CEr00r08      [ 4]  177 	ldx	__rrslonglong_PARM_2
   00A5 27 0A         [ 3]  178 	beq	00129$
   00A7                     179 00128$:
   00A7 34*04         [ 4]  180 	lsr	*__rrslonglong_sloc1_1_0
   00A9 36*05         [ 4]  181 	ror	*(__rrslonglong_sloc1_1_0 + 1)
   00AB 36*06         [ 4]  182 	ror	*(__rrslonglong_sloc1_1_0 + 2)
   00AD 36*07         [ 4]  183 	ror	*(__rrslonglong_sloc1_1_0 + 3)
   00AF 5B F6         [ 3]  184 	dbnzx	00128$
   00B1                     185 00129$:
   00B1 6E 00*05      [ 4]  186 	mov	#0x00,*(__rrslonglong_sloc1_1_0 + 1)
   00B4 6E 00*04      [ 4]  187 	mov	#0x00,*__rrslonglong_sloc1_1_0
   00B7 B6*03         [ 3]  188 	lda	*(__rrslonglong_sloc0_1_0 + 3)
   00B9 BA*07         [ 3]  189 	ora	*(__rrslonglong_sloc1_1_0 + 3)
   00BB B7*07         [ 3]  190 	sta	*(__rrslonglong_sloc1_1_0 + 3)
   00BD B6*02         [ 3]  191 	lda	*(__rrslonglong_sloc0_1_0 + 2)
   00BF BA*06         [ 3]  192 	ora	*(__rrslonglong_sloc1_1_0 + 2)
   00C1 B7*06         [ 3]  193 	sta	*(__rrslonglong_sloc1_1_0 + 2)
   00C3 B6*01         [ 3]  194 	lda	*(__rrslonglong_sloc0_1_0 + 1)
   00C5 BA*05         [ 3]  195 	ora	*(__rrslonglong_sloc1_1_0 + 1)
   00C7 B7*05         [ 3]  196 	sta	*(__rrslonglong_sloc1_1_0 + 1)
   00C9 B6*00         [ 3]  197 	lda	*__rrslonglong_sloc0_1_0
   00CB BA*04         [ 3]  198 	ora	*__rrslonglong_sloc1_1_0
   00CD B7*04         [ 3]  199 	sta	*__rrslonglong_sloc1_1_0
   00CF B6*04         [ 3]  200 	lda	*__rrslonglong_sloc1_1_0
   00D1 C7r00r02      [ 4]  201 	sta	(__rrslonglong_PARM_1 + 0x0002)
   00D4 B6*05         [ 3]  202 	lda	*(__rrslonglong_sloc1_1_0 + 1)
   00D6 C7r00r03      [ 4]  203 	sta	((__rrslonglong_PARM_1 + 0x0002) + 1)
   00D9 B6*06         [ 3]  204 	lda	*(__rrslonglong_sloc1_1_0 + 2)
   00DB C7r00r04      [ 4]  205 	sta	((__rrslonglong_PARM_1 + 0x0002) + 2)
   00DE B6*07         [ 3]  206 	lda	*(__rrslonglong_sloc1_1_0 + 3)
   00E0 C7r00r05      [ 4]  207 	sta	((__rrslonglong_PARM_1 + 0x0002) + 3)
                            208 ;../_rrslonglong.c:58: (*top) >>= s;
   00E3 C6r00r00      [ 4]  209 	lda	__rrslonglong_PARM_1
   00E6 B7*04         [ 3]  210 	sta	*__rrslonglong_sloc1_1_0
   00E8 C6r00r01      [ 4]  211 	lda	(__rrslonglong_PARM_1 + 1)
   00EB B7*05         [ 3]  212 	sta	*(__rrslonglong_sloc1_1_0 + 1)
   00ED C6r00r02      [ 4]  213 	lda	(__rrslonglong_PARM_1 + 2)
   00F0 B7*06         [ 3]  214 	sta	*(__rrslonglong_sloc1_1_0 + 2)
   00F2 C6r00r03      [ 4]  215 	lda	(__rrslonglong_PARM_1 + 3)
   00F5 B7*07         [ 3]  216 	sta	*(__rrslonglong_sloc1_1_0 + 3)
   00F7 CEr00r08      [ 4]  217 	ldx	__rrslonglong_PARM_2
   00FA 27 0A         [ 3]  218 	beq	00131$
   00FC                     219 00130$:
   00FC 37*04         [ 4]  220 	asr	*__rrslonglong_sloc1_1_0
   00FE 36*05         [ 4]  221 	ror	*(__rrslonglong_sloc1_1_0 + 1)
   0100 36*06         [ 4]  222 	ror	*(__rrslonglong_sloc1_1_0 + 2)
   0102 36*07         [ 4]  223 	ror	*(__rrslonglong_sloc1_1_0 + 3)
   0104 5B F6         [ 3]  224 	dbnzx	00130$
   0106                     225 00131$:
   0106 B6*04         [ 3]  226 	lda	*__rrslonglong_sloc1_1_0
   0108 C7r00r00      [ 4]  227 	sta	__rrslonglong_PARM_1
   010B B6*05         [ 3]  228 	lda	*(__rrslonglong_sloc1_1_0 + 1)
   010D C7r00r01      [ 4]  229 	sta	(__rrslonglong_PARM_1 + 1)
   0110 B6*06         [ 3]  230 	lda	*(__rrslonglong_sloc1_1_0 + 2)
   0112 C7r00r02      [ 4]  231 	sta	(__rrslonglong_PARM_1 + 2)
   0115 B6*07         [ 3]  232 	lda	*(__rrslonglong_sloc1_1_0 + 3)
   0117 C7r00r03      [ 4]  233 	sta	(__rrslonglong_PARM_1 + 3)
                            234 ;../_rrslonglong.c:60: return(l);
   011A C6r00r00      [ 4]  235 	lda	__rrslonglong_PARM_1
   011D B7*00         [ 3]  236 	sta	*___SDCC_hc08_ret7
   011F C6r00r01      [ 4]  237 	lda	(__rrslonglong_PARM_1 + 1)
   0122 B7*00         [ 3]  238 	sta	*___SDCC_hc08_ret6
   0124 C6r00r02      [ 4]  239 	lda	(__rrslonglong_PARM_1 + 2)
   0127 B7*00         [ 3]  240 	sta	*___SDCC_hc08_ret5
   0129 C6r00r03      [ 4]  241 	lda	(__rrslonglong_PARM_1 + 3)
   012C B7*00         [ 3]  242 	sta	*___SDCC_hc08_ret4
   012E C6r00r04      [ 4]  243 	lda	(__rrslonglong_PARM_1 + 4)
   0131 B7*00         [ 3]  244 	sta	*___SDCC_hc08_ret3
   0133 C6r00r05      [ 4]  245 	lda	(__rrslonglong_PARM_1 + 5)
   0136 B7*00         [ 3]  246 	sta	*___SDCC_hc08_ret2
   0138 CEr00r06      [ 4]  247 	ldx	(__rrslonglong_PARM_1 + 6)
   013B C6r00r07      [ 4]  248 	lda	(__rrslonglong_PARM_1 + 7)
                            249 ;../_rrslonglong.c:61: }
   013E 81            [ 4]  250 	rts
                            251 	.area CSEG    (CODE)
                            252 	.area CONST   (CODE)
                            253 	.area XINIT   (CODE)
                            254 	.area CABS    (ABS,CODE)
