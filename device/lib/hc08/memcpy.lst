                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module memcpy
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl ___memcpy
                             23 	.globl _memcpy_PARM_3
                             24 	.globl _memcpy_PARM_2
                             25 	.globl _memcpy
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area DSEG    (PAG)
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; absolute ram data
                             35 ;--------------------------------------------------------
                             36 	.area IABS    (ABS)
                             37 	.area IABS    (ABS)
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area XABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; initialized external ram data
                             44 ;--------------------------------------------------------
                             45 	.area XISEG
                             46 ;--------------------------------------------------------
                             47 ; extended address mode data
                             48 ;--------------------------------------------------------
                             49 	.area XSEG
   0000                      50 _memcpy_PARM_2:
   0000                      51 	.ds 2
   0002                      52 _memcpy_PARM_3:
   0002                      53 	.ds 2
                             54 ;--------------------------------------------------------
                             55 ; global & static initialisations
                             56 ;--------------------------------------------------------
                             57 	.area HOME    (CODE)
                             58 	.area GSINIT  (CODE)
                             59 	.area GSFINAL (CODE)
                             60 	.area GSINIT  (CODE)
                             61 ;--------------------------------------------------------
                             62 ; Home
                             63 ;--------------------------------------------------------
                             64 	.area HOME    (CODE)
                             65 	.area HOME    (CODE)
                             66 ;--------------------------------------------------------
                             67 ; code
                             68 ;--------------------------------------------------------
                             69 	.area CSEG    (CODE)
                             70 ;------------------------------------------------------------
                             71 ;Allocation info for local variables in function 'memcpy'
                             72 ;------------------------------------------------------------
                             73 ;src                       Allocated with name '_memcpy_PARM_2'
                             74 ;n                         Allocated with name '_memcpy_PARM_3'
                             75 ;dst                       Allocated to registers x h 
                             76 ;------------------------------------------------------------
                             77 ;../memcpy.c:35: void *memcpy (void *dst, const void *src, size_t n)
                             78 ;	-----------------------------------------
                             79 ;	 function memcpy
                             80 ;	-----------------------------------------
                             81 ;	Register assignment is optimal.
                             82 ;	Stack space usage: 0 bytes.
   0000                      83 _memcpy:
   0000 89            [ 2]   84 	pshx
   0001 97            [ 1]   85 	tax
   0002 8A            [ 2]   86 	pulh
                             87 ;../memcpy.c:37: return __memcpy (dst, src, n);
   0003 C6r00r00      [ 4]   88 	lda	_memcpy_PARM_2
   0006 C7r00r00      [ 4]   89 	sta	___memcpy_PARM_2
   0009 C6r00r01      [ 4]   90 	lda	(_memcpy_PARM_2 + 1)
   000C C7r00r01      [ 4]   91 	sta	(___memcpy_PARM_2 + 1)
   000F C6r00r02      [ 4]   92 	lda	_memcpy_PARM_3
   0012 C7r00r00      [ 4]   93 	sta	___memcpy_PARM_3
   0015 C6r00r03      [ 4]   94 	lda	(_memcpy_PARM_3 + 1)
   0018 C7r00r01      [ 4]   95 	sta	(___memcpy_PARM_3 + 1)
   001B 9F            [ 1]   96 	txa
   001C 8B            [ 2]   97 	pshh
   001D 88            [ 2]   98 	pulx
                             99 ;../memcpy.c:38: }
   001E CCr00r00      [ 3]  100 	jmp	___memcpy
                            101 	.area CSEG    (CODE)
                            102 	.area CONST   (CODE)
                            103 	.area XINIT   (CODE)
                            104 	.area CABS    (ABS,CODE)
