                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbrtoc16
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _mbrtowc
                             23 	.globl _mbrtoc16_PARM_4
                             24 	.globl _mbrtoc16_PARM_3
                             25 	.globl _mbrtoc16_PARM_2
                             26 	.globl _mbrtoc16
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area DSEG    (PAG)
   0000                      31 _mbrtoc16_sloc0_1_0:
   0000                      32 	.ds 2
   0002                      33 _mbrtoc16_sloc1_1_0:
   0002                      34 	.ds 2
   0004                      35 _mbrtoc16_sloc2_1_0:
   0004                      36 	.ds 2
   0006                      37 _mbrtoc16_sloc3_1_0:
   0006                      38 	.ds 1
   0007                      39 _mbrtoc16_sloc4_1_0:
   0007                      40 	.ds 2
   0009                      41 _mbrtoc16_sloc5_1_0:
   0009                      42 	.ds 2
   000B                      43 _mbrtoc16_sloc6_1_0:
   000B                      44 	.ds 2
   000D                      45 _mbrtoc16_sloc7_1_0:
   000D                      46 	.ds 4
                             47 ;--------------------------------------------------------
                             48 ; overlayable items in ram
                             49 ;--------------------------------------------------------
                             50 ;--------------------------------------------------------
                             51 ; absolute ram data
                             52 ;--------------------------------------------------------
                             53 	.area IABS    (ABS)
                             54 	.area IABS    (ABS)
                             55 ;--------------------------------------------------------
                             56 ; absolute external ram data
                             57 ;--------------------------------------------------------
                             58 	.area XABS    (ABS)
                             59 ;--------------------------------------------------------
                             60 ; initialized external ram data
                             61 ;--------------------------------------------------------
                             62 	.area XISEG
                             63 ;--------------------------------------------------------
                             64 ; extended address mode data
                             65 ;--------------------------------------------------------
                             66 	.area XSEG
   0000                      67 _mbrtoc16_PARM_2:
   0000                      68 	.ds 2
   0002                      69 _mbrtoc16_PARM_3:
   0002                      70 	.ds 2
   0004                      71 _mbrtoc16_PARM_4:
   0004                      72 	.ds 2
   0006                      73 _mbrtoc16_pc16_65536_15:
   0006                      74 	.ds 2
   0008                      75 _mbrtoc16_codepoint_65536_16:
   0008                      76 	.ds 4
   000C                      77 _mbrtoc16_ret_65536_16:
   000C                      78 	.ds 2
   000E                      79 _mbrtoc16_sps_65536_16:
   000E                      80 	.ds 3
   0011                      81 _mbrtoc16_low_surrogate_65536_16:
   0011                      82 	.ds 2
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area GSINIT  (CODE)
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area HOME    (CODE)
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area CSEG    (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function 'mbrtoc16'
                            101 ;------------------------------------------------------------
                            102 ;sloc0                     Allocated with name '_mbrtoc16_sloc0_1_0'
                            103 ;sloc1                     Allocated with name '_mbrtoc16_sloc1_1_0'
                            104 ;sloc2                     Allocated with name '_mbrtoc16_sloc2_1_0'
                            105 ;sloc3                     Allocated with name '_mbrtoc16_sloc3_1_0'
                            106 ;sloc4                     Allocated with name '_mbrtoc16_sloc4_1_0'
                            107 ;sloc5                     Allocated with name '_mbrtoc16_sloc5_1_0'
                            108 ;sloc6                     Allocated with name '_mbrtoc16_sloc6_1_0'
                            109 ;sloc7                     Allocated with name '_mbrtoc16_sloc7_1_0'
                            110 ;s                         Allocated with name '_mbrtoc16_PARM_2'
                            111 ;n                         Allocated with name '_mbrtoc16_PARM_3'
                            112 ;ps                        Allocated with name '_mbrtoc16_PARM_4'
                            113 ;pc16                      Allocated with name '_mbrtoc16_pc16_65536_15'
                            114 ;codepoint                 Allocated with name '_mbrtoc16_codepoint_65536_16'
                            115 ;ret                       Allocated with name '_mbrtoc16_ret_65536_16'
                            116 ;sps                       Allocated with name '_mbrtoc16_sps_65536_16'
                            117 ;low_surrogate             Allocated with name '_mbrtoc16_low_surrogate_65536_16'
                            118 ;------------------------------------------------------------
                            119 ;../mbrtoc16.c:34: size_t mbrtoc16(char16_t *restrict pc16, const char *restrict s, size_t n, mbstate_t *restrict ps)
                            120 ;	-----------------------------------------
                            121 ;	 function mbrtoc16
                            122 ;	-----------------------------------------
                            123 ;	Register assignment is optimal.
                            124 ;	Stack space usage: 0 bytes.
   0000                     125 _mbrtoc16:
   0000 C7r00r07      [ 4]  126 	sta	(_mbrtoc16_pc16_65536_15 + 1)
   0003 CFr00r06      [ 4]  127 	stx	_mbrtoc16_pc16_65536_15
                            128 ;../mbrtoc16.c:41: if(!s)
   0006 C6r00r00      [ 4]  129 	lda	_mbrtoc16_PARM_2
   0009 CAr00r01      [ 4]  130 	ora	(_mbrtoc16_PARM_2 + 1)
   000C 26 16         [ 3]  131 	bne	00102$
                            132 ;../mbrtoc16.c:42: return(mbrtoc16(0, "", 1, ps));
   000E A6r00         [ 2]  133 	lda	#___str_0
   0010 C7r00r01      [ 4]  134 	sta	(_mbrtoc16_PARM_2 + 1)
   0013 A6s00         [ 2]  135 	lda	#>___str_0
   0015 C7r00r00      [ 4]  136 	sta	_mbrtoc16_PARM_2
   0018 4F            [ 1]  137 	clra
   0019 C7r00r02      [ 4]  138 	sta	_mbrtoc16_PARM_3
   001C 4C            [ 1]  139 	inca
   001D C7r00r03      [ 4]  140 	sta	(_mbrtoc16_PARM_3 + 1)
   0020 4A            [ 1]  141 	deca
   0021 97            [ 1]  142 	tax
   0022 20 DC         [ 3]  143 	bra	_mbrtoc16
   0024                     144 00102$:
                            145 ;../mbrtoc16.c:44: if(!ps)
   0024 C6r00r04      [ 4]  146 	lda	_mbrtoc16_PARM_4
   0027 CAr00r05      [ 4]  147 	ora	(_mbrtoc16_PARM_4 + 1)
   002A 26 0A         [ 3]  148 	bne	00104$
                            149 ;../mbrtoc16.c:45: ps = &sps;
   002C A6r0E         [ 2]  150 	lda	#_mbrtoc16_sps_65536_16
   002E C7r00r05      [ 4]  151 	sta	(_mbrtoc16_PARM_4 + 1)
   0031 A6s00         [ 2]  152 	lda	#>_mbrtoc16_sps_65536_16
   0033 C7r00r04      [ 4]  153 	sta	_mbrtoc16_PARM_4
   0036                     154 00104$:
                            155 ;../mbrtoc16.c:47: if(!ps->c[0] && (ps->c[1] || ps->c[2]))
   0036 C6r00r04      [ 4]  156 	lda	_mbrtoc16_PARM_4
   0039 B7*00         [ 3]  157 	sta	*_mbrtoc16_sloc0_1_0
   003B C6r00r05      [ 4]  158 	lda	(_mbrtoc16_PARM_4 + 1)
   003E B7*01         [ 3]  159 	sta	*(_mbrtoc16_sloc0_1_0 + 1)
   0040 55*00         [ 4]  160 	ldhx	*_mbrtoc16_sloc0_1_0
   0042 F6            [ 2]  161 	lda	,x
   0043 4E*00*02      [ 5]  162 	mov	*_mbrtoc16_sloc0_1_0,*_mbrtoc16_sloc1_1_0
   0046 4E*01*03      [ 5]  163 	mov	*(_mbrtoc16_sloc0_1_0 + 1),*(_mbrtoc16_sloc1_1_0 + 1)
   0049 4E*00*04      [ 5]  164 	mov	*_mbrtoc16_sloc0_1_0,*_mbrtoc16_sloc2_1_0
   004C 4E*01*05      [ 5]  165 	mov	*(_mbrtoc16_sloc0_1_0 + 1),*(_mbrtoc16_sloc2_1_0 + 1)
   004F 4D            [ 1]  166 	tsta
   0050 26 53         [ 3]  167 	bne	00108$
   0052 55*02         [ 4]  168 	ldhx	*_mbrtoc16_sloc1_1_0
   0054 E6 01         [ 3]  169 	lda	1,x
   0056 26 06         [ 3]  170 	bne	00107$
   0058 55*04         [ 4]  171 	ldhx	*_mbrtoc16_sloc2_1_0
   005A E6 02         [ 3]  172 	lda	2,x
   005C 27 47         [ 3]  173 	beq	00108$
   005E                     174 00107$:
                            175 ;../mbrtoc16.c:50: *pc16 = ps->c[1] + (ps->c[2] << 8);
   005E C6r00r04      [ 4]  176 	lda	_mbrtoc16_PARM_4
   0061 87            [ 2]  177 	psha
   0062 8A            [ 2]  178 	pulh
   0063 CEr00r05      [ 4]  179 	ldx	(_mbrtoc16_PARM_4 + 1)
   0066 35*07         [ 4]  180 	sthx	*_mbrtoc16_sloc4_1_0
   0068 35*09         [ 4]  181 	sthx	*_mbrtoc16_sloc5_1_0
                            182 ;../mbrtoc16.c:49: if(pc16)
   006A C6r00r06      [ 4]  183 	lda	_mbrtoc16_pc16_65536_15
   006D CAr00r07      [ 4]  184 	ora	(_mbrtoc16_pc16_65536_15 + 1)
   0070 27 25         [ 3]  185 	beq	00106$
                            186 ;../mbrtoc16.c:50: *pc16 = ps->c[1] + (ps->c[2] << 8);
   0072 55*07         [ 4]  187 	ldhx	*_mbrtoc16_sloc4_1_0
   0074 E6 01         [ 3]  188 	lda	1,x
   0076 B7*0C         [ 3]  189 	sta	*(_mbrtoc16_sloc6_1_0 + 1)
   0078 6E 00*0B      [ 4]  190 	mov	#0x00,*_mbrtoc16_sloc6_1_0
   007B 55*09         [ 4]  191 	ldhx	*_mbrtoc16_sloc5_1_0
   007D E6 02         [ 3]  192 	lda	2,x
   007F 5F            [ 1]  193 	clrx
   0080 97            [ 1]  194 	tax
   0081 4F            [ 1]  195 	clra
   0082 BB*0C         [ 3]  196 	add	*(_mbrtoc16_sloc6_1_0 + 1)
   0084 87            [ 2]  197 	psha
   0085 9F            [ 1]  198 	txa
   0086 B9*0B         [ 3]  199 	adc	*_mbrtoc16_sloc6_1_0
   0088 97            [ 1]  200 	tax
   0089 86            [ 2]  201 	pula
   008A 89            [ 2]  202 	pshx
   008B CEr00r06      [ 4]  203 	ldx	_mbrtoc16_pc16_65536_15
   008E 89            [ 2]  204 	pshx
   008F 8A            [ 2]  205 	pulh
   0090 CEr00r07      [ 4]  206 	ldx	(_mbrtoc16_pc16_65536_15 + 1)
   0093 E7 01         [ 3]  207 	sta	1,x
   0095 86            [ 2]  208 	pula
   0096 F7            [ 2]  209 	sta	,x
   0097                     210 00106$:
                            211 ;../mbrtoc16.c:51: ps->c[1] = ps->c[2] = 0;
   0097 55*09         [ 4]  212 	ldhx	*_mbrtoc16_sloc5_1_0
   0099 4F            [ 1]  213 	clra
   009A E7 02         [ 3]  214 	sta	2,x
   009C 55*07         [ 4]  215 	ldhx	*_mbrtoc16_sloc4_1_0
   009E E7 01         [ 3]  216 	sta	1,x
                            217 ;../mbrtoc16.c:52: return(-3);
   00A0 A6 FD         [ 2]  218 	lda	#0xfd
   00A2 AE FF         [ 2]  219 	ldx	#0xff
   00A4 81            [ 4]  220 	rts
   00A5                     221 00108$:
                            222 ;../mbrtoc16.c:55: ret = mbrtowc(&codepoint, s, n, ps);
   00A5 C6r00r00      [ 4]  223 	lda	_mbrtoc16_PARM_2
   00A8 C7r00r00      [ 4]  224 	sta	_mbrtowc_PARM_2
   00AB C6r00r01      [ 4]  225 	lda	(_mbrtoc16_PARM_2 + 1)
   00AE C7r00r01      [ 4]  226 	sta	(_mbrtowc_PARM_2 + 1)
   00B1 C6r00r02      [ 4]  227 	lda	_mbrtoc16_PARM_3
   00B4 C7r00r00      [ 4]  228 	sta	_mbrtowc_PARM_3
   00B7 C6r00r03      [ 4]  229 	lda	(_mbrtoc16_PARM_3 + 1)
   00BA C7r00r01      [ 4]  230 	sta	(_mbrtowc_PARM_3 + 1)
   00BD B6*00         [ 3]  231 	lda	*_mbrtoc16_sloc0_1_0
   00BF C7r00r00      [ 4]  232 	sta	_mbrtowc_PARM_4
   00C2 B6*01         [ 3]  233 	lda	*(_mbrtoc16_sloc0_1_0 + 1)
   00C4 C7r00r01      [ 4]  234 	sta	(_mbrtowc_PARM_4 + 1)
   00C7 A6r08         [ 2]  235 	lda	#_mbrtoc16_codepoint_65536_16
   00C9 AEs00         [ 2]  236 	ldx	#>_mbrtoc16_codepoint_65536_16
   00CB CDr00r00      [ 5]  237 	jsr	_mbrtowc
   00CE C7r00r0D      [ 4]  238 	sta	(_mbrtoc16_ret_65536_16 + 1)
   00D1 CFr00r0C      [ 4]  239 	stx	_mbrtoc16_ret_65536_16
                            240 ;../mbrtoc16.c:57: if(ret > MB_LEN_MAX)
   00D4 A6 04         [ 2]  241 	lda	#0x04
   00D6 C0r00r0D      [ 4]  242 	sub	(_mbrtoc16_ret_65536_16 + 1)
   00D9 4F            [ 1]  243 	clra
   00DA C2r00r0C      [ 4]  244 	sbc	_mbrtoc16_ret_65536_16
   00DD 24 07         [ 3]  245 	bcc	00112$
                            246 ;../mbrtoc16.c:58: return(ret);
   00DF CEr00r0C      [ 4]  247 	ldx	_mbrtoc16_ret_65536_16
   00E2 C6r00r0D      [ 4]  248 	lda	(_mbrtoc16_ret_65536_16 + 1)
   00E5 81            [ 4]  249 	rts
   00E6                     250 00112$:
                            251 ;../mbrtoc16.c:60: if (codepoint <= 0xffff) // Basic multilingual plane
   00E6 A6 FF         [ 2]  252 	lda	#0xff
   00E8 C0r00r0B      [ 4]  253 	sub	(_mbrtoc16_codepoint_65536_16 + 3)
   00EB A6 FF         [ 2]  254 	lda	#0xff
   00ED C2r00r0A      [ 4]  255 	sbc	(_mbrtoc16_codepoint_65536_16 + 2)
   00F0 4F            [ 1]  256 	clra
   00F1 C2r00r09      [ 4]  257 	sbc	(_mbrtoc16_codepoint_65536_16 + 1)
   00F4 4F            [ 1]  258 	clra
   00F5 C2r00r08      [ 4]  259 	sbc	_mbrtoc16_codepoint_65536_16
   00F8 25 22         [ 3]  260 	bcs	00116$
                            261 ;../mbrtoc16.c:62: if(pc16)
   00FA C6r00r06      [ 4]  262 	lda	_mbrtoc16_pc16_65536_15
   00FD CAr00r07      [ 4]  263 	ora	(_mbrtoc16_pc16_65536_15 + 1)
   0100 27 13         [ 3]  264 	beq	00114$
                            265 ;../mbrtoc16.c:63: *pc16 = codepoint;
   0102 C6r00r0B      [ 4]  266 	lda	(_mbrtoc16_codepoint_65536_16 + 3)
   0105 CEr00r0A      [ 4]  267 	ldx	(_mbrtoc16_codepoint_65536_16 + 2)
   0108 89            [ 2]  268 	pshx
   0109 CEr00r06      [ 4]  269 	ldx	_mbrtoc16_pc16_65536_15
   010C 89            [ 2]  270 	pshx
   010D 8A            [ 2]  271 	pulh
   010E CEr00r07      [ 4]  272 	ldx	(_mbrtoc16_pc16_65536_15 + 1)
   0111 E7 01         [ 3]  273 	sta	1,x
   0113 86            [ 2]  274 	pula
   0114 F7            [ 2]  275 	sta	,x
   0115                     276 00114$:
                            277 ;../mbrtoc16.c:64: return(ret);
   0115 CEr00r0C      [ 4]  278 	ldx	_mbrtoc16_ret_65536_16
   0118 C6r00r0D      [ 4]  279 	lda	(_mbrtoc16_ret_65536_16 + 1)
   011B 81            [ 4]  280 	rts
   011C                     281 00116$:
                            282 ;../mbrtoc16.c:67: codepoint -= 0x100000;
   011C 45r00r08      [ 3]  283 	ldhx	#_mbrtoc16_codepoint_65536_16
   011F E6 03         [ 3]  284 	lda	3,x
   0121 A0 00         [ 2]  285 	sub	#0x00
   0123 E7 03         [ 3]  286 	sta	3,x
   0125 E6 02         [ 3]  287 	lda	2,x
   0127 A2 00         [ 2]  288 	sbc	#0x00
   0129 E7 02         [ 3]  289 	sta	2,x
   012B E6 01         [ 3]  290 	lda	1,x
   012D A2 10         [ 2]  291 	sbc	#0x10
   012F E7 01         [ 3]  292 	sta	1,x
   0131 F6            [ 2]  293 	lda	,x
   0132 A2 00         [ 2]  294 	sbc	#0x00
   0134 F7            [ 2]  295 	sta	,x
                            296 ;../mbrtoc16.c:68: if(pc16)
   0135 C6r00r06      [ 4]  297 	lda	_mbrtoc16_pc16_65536_15
   0138 CAr00r07      [ 4]  298 	ora	(_mbrtoc16_pc16_65536_15 + 1)
   013B 27 3C         [ 3]  299 	beq	00118$
                            300 ;../mbrtoc16.c:69: *pc16 = ((codepoint >> 10) & 0x3ff) + 0xd800;
   013D C6r00r0A      [ 4]  301 	lda	(_mbrtoc16_codepoint_65536_16 + 2)
   0140 CEr00r09      [ 4]  302 	ldx	(_mbrtoc16_codepoint_65536_16 + 1)
   0143 54            [ 1]  303 	lsrx
   0144 46            [ 1]  304 	rora
   0145 54            [ 1]  305 	lsrx
   0146 46            [ 1]  306 	rora
   0147 B7*10         [ 3]  307 	sta	*(_mbrtoc16_sloc7_1_0 + 3)
   0149 BF*0F         [ 3]  308 	stx	*(_mbrtoc16_sloc7_1_0 + 2)
   014B CEr00r08      [ 4]  309 	ldx	_mbrtoc16_codepoint_65536_16
   014E 4F            [ 1]  310 	clra
   014F 54            [ 1]  311 	lsrx
   0150 46            [ 1]  312 	rora
   0151 54            [ 1]  313 	lsrx
   0152 46            [ 1]  314 	rora
   0153 BA*0F         [ 3]  315 	ora	*(_mbrtoc16_sloc7_1_0 + 2)
   0155 B7*0F         [ 3]  316 	sta	*(_mbrtoc16_sloc7_1_0 + 2)
   0157 BF*0E         [ 3]  317 	stx	*(_mbrtoc16_sloc7_1_0 + 1)
   0159 6E 00*0D      [ 4]  318 	mov	#0x00,*_mbrtoc16_sloc7_1_0
   015C B6*10         [ 3]  319 	lda	*(_mbrtoc16_sloc7_1_0 + 3)
   015E BE*0F         [ 3]  320 	ldx	*(_mbrtoc16_sloc7_1_0 + 2)
   0160 87            [ 2]  321 	psha
   0161 9F            [ 1]  322 	txa
   0162 A4 03         [ 2]  323 	and	#0x03
   0164 97            [ 1]  324 	tax
   0165 86            [ 2]  325 	pula
   0166 87            [ 2]  326 	psha
   0167 9F            [ 1]  327 	txa
   0168 AB D8         [ 2]  328 	add	#0xd8
   016A 97            [ 1]  329 	tax
   016B 86            [ 2]  330 	pula
   016C 89            [ 2]  331 	pshx
   016D CEr00r06      [ 4]  332 	ldx	_mbrtoc16_pc16_65536_15
   0170 89            [ 2]  333 	pshx
   0171 8A            [ 2]  334 	pulh
   0172 CEr00r07      [ 4]  335 	ldx	(_mbrtoc16_pc16_65536_15 + 1)
   0175 E7 01         [ 3]  336 	sta	1,x
   0177 86            [ 2]  337 	pula
   0178 F7            [ 2]  338 	sta	,x
   0179                     339 00118$:
                            340 ;../mbrtoc16.c:70: low_surrogate = (codepoint & 0x3ff) + 0xdc00;
   0179 C6r00r0B      [ 4]  341 	lda	(_mbrtoc16_codepoint_65536_16 + 3)
   017C CEr00r0A      [ 4]  342 	ldx	(_mbrtoc16_codepoint_65536_16 + 2)
   017F 87            [ 2]  343 	psha
   0180 9F            [ 1]  344 	txa
   0181 A4 03         [ 2]  345 	and	#0x03
   0183 97            [ 1]  346 	tax
   0184 86            [ 2]  347 	pula
   0185 C7r00r12      [ 4]  348 	sta	(_mbrtoc16_low_surrogate_65536_16 + 1)
   0188 9F            [ 1]  349 	txa
   0189 AB DC         [ 2]  350 	add	#0xdc
   018B C7r00r11      [ 4]  351 	sta	_mbrtoc16_low_surrogate_65536_16
                            352 ;../mbrtoc16.c:71: ps->c[0] = 0;
   018E 55*00         [ 4]  353 	ldhx	*_mbrtoc16_sloc0_1_0
   0190 4F            [ 1]  354 	clra
   0191 F7            [ 2]  355 	sta	,x
                            356 ;../mbrtoc16.c:72: ps->c[1] = low_surrogate & 0xff;
   0192 C6r00r12      [ 4]  357 	lda	(_mbrtoc16_low_surrogate_65536_16 + 1)
   0195 55*02         [ 4]  358 	ldhx	*_mbrtoc16_sloc1_1_0
   0197 E7 01         [ 3]  359 	sta	1,x
                            360 ;../mbrtoc16.c:73: ps->c[2] = low_surrogate >> 8;
   0199 C6r00r11      [ 4]  361 	lda	_mbrtoc16_low_surrogate_65536_16
   019C 55*04         [ 4]  362 	ldhx	*_mbrtoc16_sloc2_1_0
   019E E7 02         [ 3]  363 	sta	2,x
                            364 ;../mbrtoc16.c:75: return(ret);
   01A0 CEr00r0C      [ 4]  365 	ldx	_mbrtoc16_ret_65536_16
   01A3 C6r00r0D      [ 4]  366 	lda	(_mbrtoc16_ret_65536_16 + 1)
                            367 ;../mbrtoc16.c:76: }
   01A6 81            [ 4]  368 	rts
                            369 	.area CSEG    (CODE)
                            370 	.area CONST   (CODE)
                            371 	.area CONST   (CODE)
   0000                     372 ___str_0:
   0000 00                  373 	.db 0x00
                            374 	.area CSEG    (CODE)
                            375 	.area XINIT   (CODE)
                            376 	.area CABS    (ABS,CODE)
