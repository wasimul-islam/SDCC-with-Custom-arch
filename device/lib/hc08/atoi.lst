                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module atoi
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _atoi
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area DSEG    (PAG)
   0000                      27 _atoi_sloc0_1_0:
   0000                      28 	.ds 1
   0001                      29 _atoi_sloc1_1_0:
   0001                      30 	.ds 2
   0003                      31 _atoi_sloc2_1_0:
   0003                      32 	.ds 2
                             33 ;--------------------------------------------------------
                             34 ; overlayable items in ram
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; absolute ram data
                             38 ;--------------------------------------------------------
                             39 	.area IABS    (ABS)
                             40 	.area IABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area XABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; initialized external ram data
                             47 ;--------------------------------------------------------
                             48 	.area XISEG
                             49 ;--------------------------------------------------------
                             50 ; extended address mode data
                             51 ;--------------------------------------------------------
                             52 	.area XSEG
   0000                      53 _atoi_ret_65536_57:
   0000                      54 	.ds 2
   0002                      55 _atoi_neg_65536_57:
   0002                      56 	.ds 1
                             57 ;--------------------------------------------------------
                             58 ; global & static initialisations
                             59 ;--------------------------------------------------------
                             60 	.area HOME    (CODE)
                             61 	.area GSINIT  (CODE)
                             62 	.area GSFINAL (CODE)
                             63 	.area GSINIT  (CODE)
                             64 ;--------------------------------------------------------
                             65 ; Home
                             66 ;--------------------------------------------------------
                             67 	.area HOME    (CODE)
                             68 	.area HOME    (CODE)
                             69 ;--------------------------------------------------------
                             70 ; code
                             71 ;--------------------------------------------------------
                             72 	.area CSEG    (CODE)
                             73 ;------------------------------------------------------------
                             74 ;Allocation info for local variables in function 'atoi'
                             75 ;------------------------------------------------------------
                             76 ;sloc0                     Allocated with name '_atoi_sloc0_1_0'
                             77 ;sloc1                     Allocated with name '_atoi_sloc1_1_0'
                             78 ;sloc2                     Allocated with name '_atoi_sloc2_1_0'
                             79 ;nptr                      Allocated to registers x h 
                             80 ;__1310720007              Allocated to registers 
                             81 ;__1310720004              Allocated to registers 
                             82 ;ret                       Allocated with name '_atoi_ret_65536_57'
                             83 ;neg                       Allocated with name '_atoi_neg_65536_57'
                             84 ;__1310720005              Allocated to registers 
                             85 ;c                         Allocated to registers 
                             86 ;__1310720008              Allocated to registers 
                             87 ;c                         Allocated to registers 
                             88 ;------------------------------------------------------------
                             89 ;../atoi.c:34: int atoi(const char *nptr)
                             90 ;	-----------------------------------------
                             91 ;	 function atoi
                             92 ;	-----------------------------------------
                             93 ;	Register assignment is optimal.
                             94 ;	Stack space usage: 0 bytes.
   0000                      95 _atoi:
   0000 89            [ 2]   96 	pshx
   0001 97            [ 1]   97 	tax
   0002 8A            [ 2]   98 	pulh
                             99 ;../atoi.c:36: int ret = 0;
   0003 4F            [ 1]  100 	clra
   0004 C7r00r00      [ 4]  101 	sta	_atoi_ret_65536_57
   0007 C7r00r01      [ 4]  102 	sta	(_atoi_ret_65536_57 + 1)
                            103 ;../atoi.c:39: while (isblank (*nptr))
   000A                     104 00101$:
   000A F6            [ 2]  105 	lda	,x
   000B B7*00         [ 3]  106 	sta	*_atoi_sloc0_1_0
   000D B6*00         [ 3]  107 	lda	*_atoi_sloc0_1_0
                            108 ;./../../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   000F 41 20 04      [ 4]  109 	cbeqa	#0x20,00115$
   0012 A1 09         [ 2]  110 	cmp	#0x09
   0014 26 04         [ 3]  111 	bne	00131$
   0016                     112 00115$:
                            113 ;../atoi.c:40: nptr++;
   0016 AF 01         [ 2]  114 	aix	#1
   0018 20 F0         [ 3]  115 	bra	00101$
   001A                     116 00131$:
                            117 ;../atoi.c:42: neg = (*nptr == '-');
   001A B6*00         [ 3]  118 	lda	*_atoi_sloc0_1_0
   001C 41 2D 03      [ 4]  119 	cbeqa	#0x2d,00164$
   001F 4F            [ 1]  120 	clra
   0020 20 02         [ 3]  121 	bra	00163$
   0022                     122 00164$:
   0022 A6 01         [ 2]  123 	lda	#0x01
   0024                     124 00163$:
   0024 C7r00r02      [ 4]  125 	sta	_atoi_neg_65536_57
                            126 ;../atoi.c:44: if (*nptr == '-' || *nptr == '+')
   0027 4D            [ 1]  127 	tsta
   0028 26 06         [ 3]  128 	bne	00104$
   002A B6*00         [ 3]  129 	lda	*_atoi_sloc0_1_0
   002C A1 2B         [ 2]  130 	cmp	#0x2b
   002E 26 02         [ 3]  131 	bne	00129$
   0030                     132 00104$:
                            133 ;../atoi.c:45: nptr++;
   0030 AF 01         [ 2]  134 	aix	#1
                            135 ;../atoi.c:47: while (isdigit (*nptr))
   0032                     136 00129$:
   0032 35*01         [ 4]  137 	sthx	*_atoi_sloc1_1_0
   0034                     138 00107$:
   0034 55*01         [ 4]  139 	ldhx	*_atoi_sloc1_1_0
   0036 FE            [ 2]  140 	ldx	,x
   0037 9F            [ 1]  141 	txa
                            142 ;./../../include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   0038 A1 30         [ 2]  143 	cmp	#0x30
   003A 25 36         [ 3]  144 	bcs	00109$
   003C A1 39         [ 2]  145 	cmp	#0x39
   003E 22 32         [ 3]  146 	bhi	00109$
                            147 ;../atoi.c:48: ret = ret * 10 + (*(nptr++) - '0');
   0040 C6r00r00      [ 4]  148 	lda	_atoi_ret_65536_57
   0043 C7r00r00      [ 4]  149 	sta	__mulint_PARM_2
   0046 C6r00r01      [ 4]  150 	lda	(_atoi_ret_65536_57 + 1)
   0049 C7r00r01      [ 4]  151 	sta	(__mulint_PARM_2 + 1)
   004C 89            [ 2]  152 	pshx
   004D A6 0A         [ 2]  153 	lda	#0x0a
   004F 5F            [ 1]  154 	clrx
   0050 CDr00r00      [ 5]  155 	jsr	__mulint
   0053 B7*04         [ 3]  156 	sta	*(_atoi_sloc2_1_0 + 1)
   0055 BF*03         [ 3]  157 	stx	*_atoi_sloc2_1_0
   0057 88            [ 2]  158 	pulx
   0058 89            [ 2]  159 	pshx
   0059 55*01         [ 4]  160 	ldhx	*_atoi_sloc1_1_0
   005B AF 01         [ 2]  161 	aix	#1
   005D 35*01         [ 4]  162 	sthx	*_atoi_sloc1_1_0
   005F 88            [ 2]  163 	pulx
   0060 8C            [ 1]  164 	clrh
   0061 AF D0         [ 2]  165 	aix	#-48
   0063 9F            [ 1]  166 	txa
   0064 BB*04         [ 3]  167 	add	*(_atoi_sloc2_1_0 + 1)
   0066 C7r00r01      [ 4]  168 	sta	(_atoi_ret_65536_57 + 1)
   0069 8B            [ 2]  169 	pshh
   006A 86            [ 2]  170 	pula
   006B B9*03         [ 3]  171 	adc	*_atoi_sloc2_1_0
   006D C7r00r00      [ 4]  172 	sta	_atoi_ret_65536_57
   0070 20 C2         [ 3]  173 	bra	00107$
   0072                     174 00109$:
                            175 ;../atoi.c:50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
   0072 C6r00r02      [ 4]  176 	lda	_atoi_neg_65536_57
   0075 27 0C         [ 3]  177 	beq	00120$
   0077 4F            [ 1]  178 	clra
   0078 C0r00r01      [ 4]  179 	sub	(_atoi_ret_65536_57 + 1)
   007B 87            [ 2]  180 	psha
   007C 4F            [ 1]  181 	clra
   007D C2r00r00      [ 4]  182 	sbc	_atoi_ret_65536_57
   0080 97            [ 1]  183 	tax
   0081 86            [ 2]  184 	pula
   0082 81            [ 4]  185 	rts
   0083                     186 00120$:
   0083 CEr00r00      [ 4]  187 	ldx	_atoi_ret_65536_57
   0086 C6r00r01      [ 4]  188 	lda	(_atoi_ret_65536_57 + 1)
                            189 ;../atoi.c:51: }
   0089 81            [ 4]  190 	rts
                            191 	.area CSEG    (CODE)
                            192 	.area CONST   (CODE)
                            193 	.area XINIT   (CODE)
                            194 	.area CABS    (ABS,CODE)
