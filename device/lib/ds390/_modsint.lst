                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _modsint
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __modsint_PARM_2
                                     35 	.globl __modsint
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; uninitialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
      000000                         75 __modsint_PARM_2:
      000000                         76 	.ds 2
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XABS    (ABS,XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; initialized external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XISEG   (XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function '_modsint'
                                    103 ;------------------------------------------------------------
                                    104 ;r                         Allocated to registers r2 r3 
                                    105 ;b                         Allocated with name '__modsint_PARM_2'
                                    106 ;a                         Allocated to registers r2 r3 
                                    107 ;------------------------------------------------------------
                                    108 ;	_modsint.c:209: int _modsint (int a, int b) __SDCC_NONBANKED
                                    109 ;	-----------------------------------------
                                    110 ;	 function _modsint
                                    111 ;	-----------------------------------------
      000000                        112 __modsint:
                           000002   113 	ar2 = 0x02
                           000003   114 	ar3 = 0x03
                           000004   115 	ar4 = 0x04
                           000005   116 	ar5 = 0x05
                           000006   117 	ar6 = 0x06
                           000007   118 	ar7 = 0x07
                           000000   119 	ar0 = 0x00
                           000001   120 	ar1 = 0x01
                                    121 ;	_modsint.c:213: r = (unsigned)(a < 0 ? -a : a) % (unsigned)(b < 0 ? -b : b);
      000000 E5 83            [ 8]  122 	mov	a,dph
      000002 33               [ 4]  123 	rlc	a
      000003 E4               [ 4]  124 	clr	a
      000004 33               [ 4]  125 	rlc	a
      000005 FC               [ 4]  126 	mov  r4,a
      000006 60 0B            [12]  127 	jz  00106$
      000008                        128 00122$:
      000008 C3               [ 4]  129 	clr	c
      000009 E4               [ 4]  130 	clr	a
      00000A 95 82            [ 8]  131 	subb	a,dpl
      00000C FD               [ 4]  132 	mov	r5,a
      00000D E4               [ 4]  133 	clr	a
      00000E 95 83            [ 8]  134 	subb	a,dph
      000010 FE               [ 4]  135 	mov	r6,a
      000011 80 04            [12]  136 	sjmp 00107$
      000013                        137 00106$:
                                    138 ;	genAssign: resultIsFar = FALSE
      000013 AD 82            [ 8]  139 	mov	r5,dpl
      000015 AE 83            [ 8]  140 	mov	r6,dph
      000017                        141 00107$:
      000017 8D 02            [ 8]  142 	mov	ar2,r5
      000019 8E 03            [ 8]  143 	mov	ar3,r6
      00001B 90s00r00r00      [12]  144 	mov	dptr,#__modsint_PARM_2
      00001F A3               [12]  145 	inc	dptr
      000020 E0               [ 8]  146 	movx	a,@dptr
      000021 30 E7 12         [12]  147 	jnb  acc[7],00108$
      000024                        148 00123$:
      000024 90s00r00r00      [12]  149 	mov	dptr,#__modsint_PARM_2
      000028 E0               [ 8]  150 	movx	a,@dptr
      000029 D3               [ 4]  151 	setb	c
      00002A F4               [ 4]  152 	cpl	a
      00002B 34 00            [ 8]  153 	addc	a,#0x00
      00002D FD               [ 4]  154 	mov	r5,a
      00002E A3               [12]  155 	inc	dptr
      00002F E0               [ 8]  156 	movx	a,@dptr
      000030 F4               [ 4]  157 	cpl	a
      000031 34 00            [ 8]  158 	addc	a,#0x00
      000033 FE               [ 4]  159 	mov	r6,a
      000034 80 09            [12]  160 	sjmp 00109$
      000036                        161 00108$:
      000036 90s00r00r00      [12]  162 	mov	dptr,#__modsint_PARM_2
                                    163 ;	genAssign: resultIsFar = FALSE
      00003A E0               [ 8]  164 	movx	a,@dptr
      00003B FD               [ 4]  165 	mov	r5,a
      00003C A3               [12]  166 	inc	dptr
      00003D E0               [ 8]  167 	movx	a,@dptr
      00003E FE               [ 4]  168 	mov	r6,a
      00003F                        169 00109$:
      00003F 90s00r00r00      [12]  170 	mov	dptr,#__moduint_PARM_2
      000043 ED               [ 4]  171 	mov	a,r5
      000044 F0               [ 8]  172 	movx	@dptr,a
      000045 A3               [12]  173 	inc	dptr
      000046 EE               [ 4]  174 	mov	a,r6
      000047 F0               [ 8]  175 	movx	@dptr,a
      000048 C0 04            [ 8]  176 	push	ar4
      00004A 8A 82            [ 8]  177 	mov	dpl,r2
      00004C 8B 83            [ 8]  178 	mov	dph,r3
      00004E 12s00r00r00      [16]  179 	lcall	__moduint
      000052 AA 82            [ 8]  180 	mov	r2,dpl
      000054 AB 83            [ 8]  181 	mov	r3,dph
      000056 D0 04            [ 8]  182 	pop	ar4
                                    183 ;	genAssign: resultIsFar = FALSE
      000058 8A 82            [ 8]  184 	mov	dpl,r2
      00005A 8B 83            [ 8]  185 	mov	dph,r3
                                    186 ;	_modsint.c:215: if (a < 0)
      00005C EC               [ 4]  187 	mov	a,r4
      00005D 60 11            [12]  188 	jz  00102$
      00005F                        189 00124$:
                                    190 ;	_modsint.c:216: return -r;
      00005F C3               [ 4]  191 	clr	c
      000060 E4               [ 4]  192 	clr	a
      000061 95 82            [ 8]  193 	subb	a,dpl
      000063 F5 84            [ 8]  194 	mov	dpl1,a
      000065 E4               [ 4]  195 	clr	a
      000066 95 83            [ 8]  196 	subb	a,dph
      000068 F5 85            [ 8]  197 	mov	dph1,a
      00006A 85 84 82         [12]  198 	mov	dpl,dpl1
      00006D 85 85 83         [12]  199 	mov	dph,dph1
                                    200 ;	_modsint.c:218: return r;
      000070                        201 00102$:
      000070                        202 00104$:
                                    203 ;	_modsint.c:219: }
      000070 22               [16]  204 	ret
                                    205 	.area CSEG    (CODE)
                                    206 	.area CONST   (CODE)
                                    207 	.area XINIT   (CODE)
                                    208 	.area CABS    (ABS,CODE)
