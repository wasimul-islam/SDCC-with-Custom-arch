                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strcpy
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strcpy_PARM_2
                                     35 	.globl _strcpy
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; uninitialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
      000000                         75 _strcpy_PARM_2:
      000000                         76 	.ds 4
      000004                         77 _strcpy_d_65536_27:
      000004                         78 	.ds 4
      000008                         79 _strcpy_sloc0_1_0:
      000008                         80 	.ds 4
                                     81 ;--------------------------------------------------------
                                     82 ; absolute external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XABS    (ABS,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; initialized external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XISEG   (XDATA)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'strcpy'
                                    107 ;------------------------------------------------------------
                                    108 ;s                         Allocated with name '_strcpy_PARM_2'
                                    109 ;d                         Allocated with name '_strcpy_d_65536_27'
                                    110 ;d1                        Allocated to registers 
                                    111 ;sloc0                     Allocated with name '_strcpy_sloc0_1_0'
                                    112 ;------------------------------------------------------------
                                    113 ;	_strcpy.c:36: char * strcpy ( char * d, const char * s )
                                    114 ;	-----------------------------------------
                                    115 ;	 function strcpy
                                    116 ;	-----------------------------------------
      000000                        117 _strcpy:
                           000002   118 	ar2 = 0x02
                           000003   119 	ar3 = 0x03
                           000004   120 	ar4 = 0x04
                           000005   121 	ar5 = 0x05
                           000006   122 	ar6 = 0x06
                           000007   123 	ar7 = 0x07
                           000000   124 	ar0 = 0x00
                           000001   125 	ar1 = 0x01
      000000 75 86 01         [12]  126 	mov     dps, #1
      000003 90s00r00r04      [12]  127 	mov     dptr, #_strcpy_d_65536_27
      000007 E5 82            [ 8]  128 	mov	a,dpl
      000009 F0               [ 8]  129 	movx	@dptr,a
      00000A A3               [12]  130 	inc	dptr
      00000B E5 83            [ 8]  131 	mov	a,dph
      00000D F0               [ 8]  132 	movx	@dptr,a
      00000E A3               [12]  133 	inc	dptr
      00000F E5 93            [ 8]  134 	mov	a,dpx
      000011 F0               [ 8]  135 	movx	@dptr,a
      000012 A3               [12]  136 	inc	dptr
      000013 E5 F0            [ 8]  137 	mov	a,b
      000015 F0               [ 8]  138 	movx	@dptr,a
      000016 75 86 00         [12]  139 	mov	dps,#0
                                    140 ;	_strcpy.c:48: while (*d1++ = *s++) ;
      000019 90s00r00r00      [12]  141 	mov	dptr,#_strcpy_PARM_2
                                    142 ;	genAssign: resultIsFar = FALSE
      00001D E0               [ 8]  143 	movx	a,@dptr
      00001E FE               [ 4]  144 	mov	r6,a
      00001F A3               [12]  145 	inc	dptr
      000020 E0               [ 8]  146 	movx	a,@dptr
      000021 FF               [ 4]  147 	mov	r7,a
      000022 A3               [12]  148 	inc	dptr
      000023 E0               [ 8]  149 	movx	a,@dptr
      000024 F8               [ 4]  150 	mov	r0,a
      000025 A3               [12]  151 	inc	dptr
      000026 E0               [ 8]  152 	movx	a,@dptr
      000027 F9               [ 4]  153 	mov	r1,a
      000028 90s00r00r04      [12]  154 	mov	dptr,#_strcpy_d_65536_27
                                    155 ;	genAssign: resultIsFar = TRUE
      00002C 75 86 21         [12]  156 	mov	dps,#0x21
      00002F 90s00r00r08      [12]  157 	mov	dptr,#_strcpy_sloc0_1_0
      000033 E0               [ 8]  158 	movx	a,@dptr
      000034 F0               [ 8]  159 	movx	@dptr,a
      000035 A3               [12]  160 	inc	dptr
      000036 A3               [12]  161 	inc	dptr
      000037 E0               [ 8]  162 	movx	a,@dptr
      000038 F0               [ 8]  163 	movx	@dptr,a
      000039 A3               [12]  164 	inc	dptr
      00003A A3               [12]  165 	inc	dptr
      00003B E0               [ 8]  166 	movx	a,@dptr
      00003C F0               [ 8]  167 	movx	@dptr,a
      00003D A3               [12]  168 	inc	dptr
      00003E A3               [12]  169 	inc	dptr
      00003F E0               [ 8]  170 	movx	a,@dptr
      000040 F0               [ 8]  171 	movx	@dptr,a
      000041 75 86 00         [12]  172 	mov	dps,#0
      000044                        173 00101$:
      000044 8E 82            [ 8]  174 	mov	dpl,r6
      000046 8F 83            [ 8]  175 	mov	dph,r7
      000048 88 93            [ 8]  176 	mov	dpx,r0
      00004A 89 F0            [ 8]  177 	mov	b,r1
      00004C 12s00r00r00      [16]  178 	lcall	__gptrget
      000050 FA               [ 4]  179 	mov	r2,a
      000051 A3               [12]  180 	inc	dptr
      000052 AE 82            [ 8]  181 	mov	r6,dpl
      000054 AF 83            [ 8]  182 	mov	r7,dph
      000056 A8 93            [ 8]  183 	mov	r0,dpx
      000058 A9 F0            [ 8]  184 	mov	r1,b
      00005A 90s00r00r08      [12]  185 	mov	dptr,#_strcpy_sloc0_1_0
      00005E E0               [ 8]  186 	movx	a,@dptr
      00005F C0 E0            [ 8]  187 	push	acc
      000061 A3               [12]  188 	inc	dptr
      000062 E0               [ 8]  189 	movx	a,@dptr
      000063 C0 E0            [ 8]  190 	push	acc
      000065 A3               [12]  191 	inc	dptr
      000066 E0               [ 8]  192 	movx	a,@dptr
      000067 C0 E0            [ 8]  193 	push	acc
      000069 A3               [12]  194 	inc	dptr
      00006A E0               [ 8]  195 	movx	a,@dptr
      00006B F5 F0            [ 8]  196 	mov	b,a
      00006D D0 93            [ 8]  197 	pop	dpx
      00006F D0 83            [ 8]  198 	pop	dph
      000071 D0 82            [ 8]  199 	pop	dpl
      000073 EA               [ 4]  200 	mov	a,r2
      000074 12s00r00r00      [16]  201 	lcall	__gptrput
      000078 90s00r00r08      [12]  202 	mov	dptr,#_strcpy_sloc0_1_0
      00007C E0               [ 8]  203 	movx	a,@dptr
      00007D 24 01            [ 8]  204 	add	a,#0x01
      00007F F0               [ 8]  205 	movx	@dptr,a
      000080 A3               [12]  206 	inc	dptr
      000081 E0               [ 8]  207 	movx	a,@dptr
      000082 34 00            [ 8]  208 	addc	a,#0x00
      000084 F0               [ 8]  209 	movx	@dptr,a
      000085 A3               [12]  210 	inc	dptr
      000086 E0               [ 8]  211 	movx	a,@dptr
      000087 34 00            [ 8]  212 	addc	a,#0x00
      000089 F0               [ 8]  213 	movx	@dptr,a
      00008A A3               [12]  214 	inc	dptr
      00008B E0               [ 8]  215 	movx	a,@dptr
      00008C F0               [ 8]  216 	movx	@dptr,a
      00008D EA               [ 4]  217 	mov	a,r2
      00008E 70 B4            [12]  218 	jnz  00101$
      000090                        219 00115$:
                                    220 ;	_strcpy.c:50: return d;
      000090 75 86 01         [12]  221 	mov     dps, #1
      000093 90s00r00r04      [12]  222 	mov     dptr, #_strcpy_d_65536_27
      000097 E0               [ 8]  223 	movx	a,@dptr
      000098 F5 82            [ 8]  224 	mov	dpl,a
      00009A A3               [12]  225 	inc	dptr
      00009B E0               [ 8]  226 	movx	a,@dptr
      00009C F5 83            [ 8]  227 	mov	dph,a
      00009E A3               [12]  228 	inc	dptr
      00009F E0               [ 8]  229 	movx	a,@dptr
      0000A0 F5 93            [ 8]  230 	mov	dpx,a
      0000A2 A3               [12]  231 	inc	dptr
      0000A3 E0               [ 8]  232 	movx	a,@dptr
      0000A4 F5 F0            [ 8]  233 	mov	b,a
      0000A6 75 86 00         [12]  234 	mov	dps,#0
      0000A9                        235 00104$:
                                    236 ;	_strcpy.c:52: }
      0000A9 22               [16]  237 	ret
                                    238 	.area CSEG    (CODE)
                                    239 	.area CONST   (CODE)
                                    240 	.area XINIT   (CODE)
                                    241 	.area CABS    (ABS,CODE)
