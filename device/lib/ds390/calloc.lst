                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module calloc
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _memset
                                     35 	.globl _malloc
                                     36 	.globl _calloc_PARM_2
                                     37 	.globl _calloc
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; uninitialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 _calloc_PARM_2:
      000000                         78 	.ds 2
                                     79 ;--------------------------------------------------------
                                     80 ; absolute external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XABS    (ABS,XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; initialized external ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area XISEG   (XDATA)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'calloc'
                                    105 ;------------------------------------------------------------
                                    106 ;size                      Allocated with name '_calloc_PARM_2'
                                    107 ;nmemb                     Allocated to registers r2 r3 
                                    108 ;ptr                       Allocated to registers r7 r0 r1 
                                    109 ;msize                     Allocated to registers r2 r3 r4 r5 
                                    110 ;------------------------------------------------------------
                                    111 ;	calloc.c:42: void HEAPSPACE *calloc (size_t nmemb, size_t size)
                                    112 ;	-----------------------------------------
                                    113 ;	 function calloc
                                    114 ;	-----------------------------------------
      000000                        115 _calloc:
                           000002   116 	ar2 = 0x02
                           000003   117 	ar3 = 0x03
                           000004   118 	ar4 = 0x04
                           000005   119 	ar5 = 0x05
                           000006   120 	ar6 = 0x06
                           000007   121 	ar7 = 0x07
                           000000   122 	ar0 = 0x00
                           000001   123 	ar1 = 0x01
      000000 85 82 84         [12]  124 	mov	dpl1,dpl
      000003 85 83 85         [12]  125 	mov	dph1,dph
                                    126 ;	calloc.c:49: unsigned long msize = (unsigned long)nmemb * (unsigned long)size;
      000006 AA 84            [ 8]  127 	mov	r2,dpl1
      000008 AB 85            [ 8]  128 	mov	r3,dph1
      00000A 7C 00            [ 8]  129 	mov	r4,#0x00
      00000C 7D 00            [ 8]  130 	mov	r5,#0x00
      00000E 90s00r00r00      [12]  131 	mov	dptr,#_calloc_PARM_2
      000012 E0               [ 8]  132 	movx	a,@dptr
      000013 FE               [ 4]  133 	mov	r6,a
      000014 A3               [12]  134 	inc	dptr
      000015 E0               [ 8]  135 	movx	a,@dptr
      000016 FF               [ 4]  136 	mov	r7,a
      000017 78 00            [ 8]  137 	mov	r0,#0x00
      000019 79 00            [ 8]  138 	mov	r1,#0x00
                                    139 ;	genAssign: resultIsFar = TRUE
      00001B 90s00r00r00      [12]  140 	mov	dptr,#__mullong_PARM_2
      00001F EE               [ 4]  141 	mov	a,r6
      000020 F0               [ 8]  142 	movx	@dptr,a
      000021 A3               [12]  143 	inc	dptr
      000022 EF               [ 4]  144 	mov	a,r7
      000023 F0               [ 8]  145 	movx	@dptr,a
      000024 A3               [12]  146 	inc	dptr
      000025 E8               [ 4]  147 	mov	a,r0
      000026 F0               [ 8]  148 	movx	@dptr,a
      000027 A3               [12]  149 	inc	dptr
      000028 E9               [ 4]  150 	mov	a,r1
      000029 F0               [ 8]  151 	movx	@dptr,a
      00002A 8A 82            [ 8]  152 	mov	dpl,r2
      00002C 8B 83            [ 8]  153 	mov	dph,r3
      00002E 8C 93            [ 8]  154 	mov	dpx,r4
      000030 8D F0            [ 8]  155 	mov	b,r5
      000032 12s00r00r00      [16]  156 	lcall	__mullong
      000036 AA 82            [ 8]  157 	mov	r2,dpl
      000038 AB 83            [ 8]  158 	mov	r3,dph
      00003A AC 93            [ 8]  159 	mov	r4,dpx
      00003C AD F0            [ 8]  160 	mov	r5,b
                                    161 ;	genAssign: resultIsFar = TRUE
                                    162 ;	calloc.c:54: if (msize > SIZE_MAX)
      00003E C3               [ 4]  163 	clr	c
      00003F 74 FF            [ 8]  164 	mov	a,#0xff
      000041 9A               [ 4]  165 	subb	a,r2
      000042 74 FF            [ 8]  166 	mov	a,#0xff
      000044 9B               [ 4]  167 	subb	a,r3
      000045 E4               [ 4]  168 	clr	a
      000046 9C               [ 4]  169 	subb	a,r4
      000047 E4               [ 4]  170 	clr	a
      000048 9D               [ 4]  171 	subb	a,r5
      000049 50 06            [12]  172 	jnc  00102$
      00004B                        173 00115$:
                                    174 ;	calloc.c:55: return(0);
      00004B 90 00 00 00      [12]  175 	mov  dptr,#0x0000
      00004F 80 62            [12]  176 	sjmp 00105$
      000051                        177 00102$:
                                    178 ;	calloc.c:57: if (ptr = malloc(msize))
      000051 C0 02            [ 8]  179 	push	ar2
      000053 C0 03            [ 8]  180 	push	ar3
      000055 8A 82            [ 8]  181 	mov	dpl,r2
      000057 8B 83            [ 8]  182 	mov	dph,r3
      000059 12s00r00r00      [16]  183 	lcall	_malloc
      00005D AC 82            [ 8]  184 	mov	r4,dpl
      00005F AD 83            [ 8]  185 	mov	r5,dph
      000061 AE 93            [ 8]  186 	mov	r6,dpx
      000063 D0 03            [ 8]  187 	pop	ar3
      000065 D0 02            [ 8]  188 	pop	ar2
                                    189 ;	genAssign: resultIsFar = TRUE
      000067 8C 07            [ 8]  190 	mov	ar7,r4
      000069 8D 00            [ 8]  191 	mov	ar0,r5
      00006B 8E 01            [ 8]  192 	mov	ar1,r6
      00006D EC               [ 4]  193 	mov	a,r4
      00006E 4D               [ 4]  194 	orl	a,r5
      00006F 4E               [ 4]  195 	orl	a,r6
      000070 60 3B            [12]  196 	jz  00104$
      000072                        197 00116$:
                                    198 ;	calloc.c:58: memset(ptr, 0, msize);
                                    199 ;	genAssign: resultIsFar = FALSE
      000072 8F 04            [ 8]  200 	mov	ar4,r7
      000074 88 05            [ 8]  201 	mov	ar5,r0
      000076 89 06            [ 8]  202 	mov	ar6,r1
      000078 C0 07            [ 8]  203 	push	ar7
      00007A C0 00            [ 8]  204 	push	ar0
      00007C C0 01            [ 8]  205 	push	ar1
      00007E 7F 00            [ 8]  206 	mov	r7,#0x00
                                    207 ;	genAssign: resultIsFar = TRUE
      000080 90s00r00r00      [12]  208 	mov	dptr,#_memset_PARM_2
      000084 E4               [ 4]  209 	clr	a
      000085 F0               [ 8]  210 	movx	@dptr,a
                                    211 ;	genAssign: resultIsFar = TRUE
      000086 90s00r00r00      [12]  212 	mov	dptr,#_memset_PARM_3
      00008A EA               [ 4]  213 	mov	a,r2
      00008B F0               [ 8]  214 	movx	@dptr,a
      00008C A3               [12]  215 	inc	dptr
      00008D EB               [ 4]  216 	mov	a,r3
      00008E F0               [ 8]  217 	movx	@dptr,a
      00008F C0 07            [ 8]  218 	push	ar7
      000091 C0 00            [ 8]  219 	push	ar0
      000093 C0 01            [ 8]  220 	push	ar1
      000095 8C 82            [ 8]  221 	mov	dpl,r4
      000097 8D 83            [ 8]  222 	mov	dph,r5
      000099 8E 93            [ 8]  223 	mov	dpx,r6
      00009B 8F F0            [ 8]  224 	mov	b,r7
      00009D 12s00r00r00      [16]  225 	lcall	_memset
      0000A1 D0 01            [ 8]  226 	pop	ar1
      0000A3 D0 00            [ 8]  227 	pop	ar0
      0000A5 D0 07            [ 8]  228 	pop	ar7
                                    229 ;	calloc.c:60: return(ptr);
      0000A7 D0 01            [ 8]  230 	pop	ar1
      0000A9 D0 00            [ 8]  231 	pop	ar0
      0000AB D0 07            [ 8]  232 	pop	ar7
                                    233 ;	calloc.c:58: memset(ptr, 0, msize);
      0000AD                        234 00104$:
                                    235 ;	calloc.c:60: return(ptr);
      0000AD 8F 82            [ 8]  236 	mov	dpl,r7
      0000AF 88 83            [ 8]  237 	mov	dph,r0
      0000B1 89 93            [ 8]  238 	mov	dpx,r1
      0000B3                        239 00105$:
                                    240 ;	calloc.c:61: }
      0000B3 22               [16]  241 	ret
                                    242 	.area CSEG    (CODE)
                                    243 	.area CONST   (CODE)
                                    244 	.area XINIT   (CODE)
                                    245 	.area CABS    (ABS,CODE)
