                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module modff
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _modff_PARM_2
                                     35 	.globl _modff
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; uninitialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
      000000                         75 _modff_PARM_2:
      000000                         76 	.ds 4
      000004                         77 _modff_x_65536_25:
      000004                         78 	.ds 4
                                     79 ;--------------------------------------------------------
                                     80 ; absolute external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XABS    (ABS,XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; initialized external ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area XISEG   (XDATA)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 	.area GSFINAL (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; Home
                                     96 ;--------------------------------------------------------
                                     97 	.area HOME    (CODE)
                                     98 	.area HOME    (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; code
                                    101 ;--------------------------------------------------------
                                    102 	.area CSEG    (CODE)
                                    103 ;------------------------------------------------------------
                                    104 ;Allocation info for local variables in function 'modff'
                                    105 ;------------------------------------------------------------
                                    106 ;y                         Allocated with name '_modff_PARM_2'
                                    107 ;x                         Allocated with name '_modff_x_65536_25'
                                    108 ;------------------------------------------------------------
                                    109 ;	modff.c:33: float modff(float x, float * y)
                                    110 ;	-----------------------------------------
                                    111 ;	 function modff
                                    112 ;	-----------------------------------------
      000000                        113 _modff:
                           000002   114 	ar2 = 0x02
                           000003   115 	ar3 = 0x03
                           000004   116 	ar4 = 0x04
                           000005   117 	ar5 = 0x05
                           000006   118 	ar6 = 0x06
                           000007   119 	ar7 = 0x07
                           000000   120 	ar0 = 0x00
                           000001   121 	ar1 = 0x01
      000000 75 86 01         [12]  122 	mov     dps, #1
      000003 90s00r00r04      [12]  123 	mov     dptr, #_modff_x_65536_25
      000007 E5 82            [ 8]  124 	mov	a,dpl
      000009 F0               [ 8]  125 	movx	@dptr,a
      00000A A3               [12]  126 	inc	dptr
      00000B E5 83            [ 8]  127 	mov	a,dph
      00000D F0               [ 8]  128 	movx	@dptr,a
      00000E A3               [12]  129 	inc	dptr
      00000F E5 93            [ 8]  130 	mov	a,dpx
      000011 F0               [ 8]  131 	movx	@dptr,a
      000012 A3               [12]  132 	inc	dptr
      000013 E5 F0            [ 8]  133 	mov	a,b
      000015 F0               [ 8]  134 	movx	@dptr,a
      000016 75 86 00         [12]  135 	mov	dps,#0
                                    136 ;	modff.c:35: *y=(long)x;
      000019 90s00r00r00      [12]  137 	mov	dptr,#_modff_PARM_2
                                    138 ;	genAssign: resultIsFar = FALSE
      00001D E0               [ 8]  139 	movx	a,@dptr
      00001E FE               [ 4]  140 	mov	r6,a
      00001F A3               [12]  141 	inc	dptr
      000020 E0               [ 8]  142 	movx	a,@dptr
      000021 FF               [ 4]  143 	mov	r7,a
      000022 A3               [12]  144 	inc	dptr
      000023 E0               [ 8]  145 	movx	a,@dptr
      000024 F8               [ 4]  146 	mov	r0,a
      000025 A3               [12]  147 	inc	dptr
      000026 E0               [ 8]  148 	movx	a,@dptr
      000027 F9               [ 4]  149 	mov	r1,a
      000028 C0 06            [ 8]  150 	push	ar6
      00002A C0 07            [ 8]  151 	push	ar7
      00002C C0 00            [ 8]  152 	push	ar0
      00002E C0 01            [ 8]  153 	push	ar1
      000030 05 86            [ 8]  154 	inc	dps
      000032 90s00r00r04      [12]  155 	mov	dptr,#_modff_x_65536_25
      000036 E0               [ 8]  156 	movx	a,@dptr
      000037 F5 82            [ 8]  157 	mov	dpl,a
      000039 A3               [12]  158 	inc	dptr
      00003A E0               [ 8]  159 	movx	a,@dptr
      00003B F5 83            [ 8]  160 	mov	dph,a
      00003D A3               [12]  161 	inc	dptr
      00003E E0               [ 8]  162 	movx	a,@dptr
      00003F F5 93            [ 8]  163 	mov	dpx,a
      000041 A3               [12]  164 	inc	dptr
      000042 E0               [ 8]  165 	movx	a,@dptr
      000043 F5 F0            [ 8]  166 	mov	b,a
      000045 75 86 00         [12]  167 	mov	dps,#0
      000048 12s00r00r00      [16]  168 	lcall	___fs2slong
      00004C D0 01            [ 8]  169 	pop	ar1
      00004E D0 00            [ 8]  170 	pop	ar0
      000050 D0 07            [ 8]  171 	pop	ar7
      000052 D0 06            [ 8]  172 	pop	ar6
      000054 C0 06            [ 8]  173 	push	ar6
      000056 C0 07            [ 8]  174 	push	ar7
      000058 C0 00            [ 8]  175 	push	ar0
      00005A C0 01            [ 8]  176 	push	ar1
      00005C 12s00r00r00      [16]  177 	lcall	___slong2fs
      000060 AA 82            [ 8]  178 	mov	r2,dpl
      000062 AB 83            [ 8]  179 	mov	r3,dph
      000064 AC 93            [ 8]  180 	mov	r4,dpx
      000066 AD F0            [ 8]  181 	mov	r5,b
      000068 D0 01            [ 8]  182 	pop	ar1
      00006A D0 00            [ 8]  183 	pop	ar0
      00006C D0 07            [ 8]  184 	pop	ar7
      00006E D0 06            [ 8]  185 	pop	ar6
      000070 8E 82            [ 8]  186 	mov	dpl,r6
      000072 8F 83            [ 8]  187 	mov	dph,r7
      000074 88 93            [ 8]  188 	mov	dpx,r0
      000076 89 F0            [ 8]  189 	mov	b,r1
      000078 8A 9C            [ 8]  190 	mov	acc1, r2
      00007A EB               [ 4]  191 	mov	a,r3
      00007B 12s00r00r00      [16]  192 	lcall	__gptrputWord
      00007F A3               [12]  193 	inc	dptr
      000080 8C 9C            [ 8]  194 	mov	acc1, r4
      000082 ED               [ 4]  195 	mov	a,r5
      000083 12s00r00r00      [16]  196 	lcall	__gptrputWord
                                    197 ;	modff.c:36: return (x-*y);
                                    198 ;	genAssign: resultIsFar = TRUE
      000087 90s00r00r00      [12]  199 	mov	dptr,#___fssub_PARM_2
      00008B EA               [ 4]  200 	mov	a,r2
      00008C F0               [ 8]  201 	movx	@dptr,a
      00008D A3               [12]  202 	inc	dptr
      00008E EB               [ 4]  203 	mov	a,r3
      00008F F0               [ 8]  204 	movx	@dptr,a
      000090 A3               [12]  205 	inc	dptr
      000091 EC               [ 4]  206 	mov	a,r4
      000092 F0               [ 8]  207 	movx	@dptr,a
      000093 A3               [12]  208 	inc	dptr
      000094 ED               [ 4]  209 	mov	a,r5
      000095 F0               [ 8]  210 	movx	@dptr,a
      000096 05 86            [ 8]  211 	inc	dps
      000098 90s00r00r04      [12]  212 	mov	dptr,#_modff_x_65536_25
      00009C E0               [ 8]  213 	movx	a,@dptr
      00009D F5 82            [ 8]  214 	mov	dpl,a
      00009F A3               [12]  215 	inc	dptr
      0000A0 E0               [ 8]  216 	movx	a,@dptr
      0000A1 F5 83            [ 8]  217 	mov	dph,a
      0000A3 A3               [12]  218 	inc	dptr
      0000A4 E0               [ 8]  219 	movx	a,@dptr
      0000A5 F5 93            [ 8]  220 	mov	dpx,a
      0000A7 A3               [12]  221 	inc	dptr
      0000A8 E0               [ 8]  222 	movx	a,@dptr
      0000A9 F5 F0            [ 8]  223 	mov	b,a
      0000AB 75 86 00         [12]  224 	mov	dps,#0
      0000AE 12s00r00r00      [16]  225 	lcall	___fssub
      0000B2                        226 00101$:
                                    227 ;	modff.c:37: }
      0000B2 22               [16]  228 	ret
                                    229 	.area CSEG    (CODE)
                                    230 	.area CONST   (CODE)
                                    231 	.area XINIT   (CODE)
                                    232 	.area CABS    (ABS,CODE)
