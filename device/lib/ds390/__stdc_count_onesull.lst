                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __stdc_count_onesull
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl ___stdc_count_onesull
                                     35 ;--------------------------------------------------------
                                     36 ; special function registers
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; special function bits
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable register banks
                                     43 ;--------------------------------------------------------
                                     44 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         45 	.ds 8
                                     46 ;--------------------------------------------------------
                                     47 ; internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DSEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; overlayable items in internal ram
                                     52 ;--------------------------------------------------------
                                     53 ;--------------------------------------------------------
                                     54 ; indirectly addressable internal ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area ISEG    (DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area IABS    (ABS,DATA)
                                     61 	.area IABS    (ABS,DATA)
                                     62 ;--------------------------------------------------------
                                     63 ; bit data
                                     64 ;--------------------------------------------------------
                                     65 	.area BSEG    (BIT)
                                     66 ;--------------------------------------------------------
                                     67 ; paged external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area PSEG    (PAG,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; uninitialized external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XSEG    (XDATA)
      000000                         74 ___stdc_count_onesull_value_65536_9:
      000000                         75 	.ds 8
      000008                         76 ___stdc_count_onesull_sloc0_1_0:
      000008                         77 	.ds 1
                                     78 ;--------------------------------------------------------
                                     79 ; absolute external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XABS    (ABS,XDATA)
                                     82 ;--------------------------------------------------------
                                     83 ; initialized external ram data
                                     84 ;--------------------------------------------------------
                                     85 	.area XISEG   (XDATA)
                                     86 ;--------------------------------------------------------
                                     87 ; global & static initialisations
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; Home
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area HOME    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; code
                                    100 ;--------------------------------------------------------
                                    101 	.area CSEG    (CODE)
                                    102 ;------------------------------------------------------------
                                    103 ;Allocation info for local variables in function '__stdc_count_onesull'
                                    104 ;------------------------------------------------------------
                                    105 ;value                     Allocated with name '___stdc_count_onesull_value_65536_9'
                                    106 ;count                     Allocated to registers 
                                    107 ;i                         Allocated to registers 
                                    108 ;sloc0                     Allocated with name '___stdc_count_onesull_sloc0_1_0'
                                    109 ;------------------------------------------------------------
                                    110 ;	__stdc_count_onesull.c:37: int_fast8_t __stdc_count_onesull(unsigned long long value)
                                    111 ;	-----------------------------------------
                                    112 ;	 function __stdc_count_onesull
                                    113 ;	-----------------------------------------
      000000                        114 ___stdc_count_onesull:
                           000002   115 	ar2 = 0x02
                           000003   116 	ar3 = 0x03
                           000004   117 	ar4 = 0x04
                           000005   118 	ar5 = 0x05
                           000006   119 	ar6 = 0x06
                           000007   120 	ar7 = 0x07
                           000000   121 	ar0 = 0x00
                           000001   122 	ar1 = 0x01
      000000 75 86 01         [12]  123 	mov	dps, #1
      000003 90s00r00r00      [12]  124 	mov	dptr, #___stdc_count_onesull_value_65536_9
      000007 15 86            [ 8]  125 	dec	dps
                                    126 ;	assignResultValue special case for ACC.
      000009 C0 E0            [ 8]  127 	push	acc
      00000B 05 86            [ 8]  128 	inc	dps
      00000D E5 82            [ 8]  129 	mov	a,dpl
      00000F F0               [ 8]  130 	movx	@dptr,a
      000010 A3               [12]  131 	inc	dptr
      000011 E5 83            [ 8]  132 	mov	a,dph
      000013 F0               [ 8]  133 	movx	@dptr,a
      000014 A3               [12]  134 	inc	dptr
      000015 E5 93            [ 8]  135 	mov	a,dpx
      000017 F0               [ 8]  136 	movx	@dptr,a
      000018 A3               [12]  137 	inc	dptr
      000019 E5 F0            [ 8]  138 	mov	a,b
      00001B F0               [ 8]  139 	movx	@dptr,a
      00001C D0 E0            [ 8]  140 	pop	acc
      00001E A3               [12]  141 	inc	dptr
      00001F F0               [ 8]  142 	movx	@dptr,a
      000020 A3               [12]  143 	inc	dptr
      000021 EC               [ 4]  144 	mov	a,r4
      000022 F0               [ 8]  145 	movx	@dptr,a
      000023 A3               [12]  146 	inc	dptr
      000024 ED               [ 4]  147 	mov	a,r5
      000025 F0               [ 8]  148 	movx	@dptr,a
      000026 A3               [12]  149 	inc	dptr
      000027 EE               [ 4]  150 	mov	a,r6
      000028 F0               [ 8]  151 	movx	@dptr,a
      000029 75 86 00         [12]  152 	mov	dps,#0
                                    153 ;	__stdc_count_onesull.c:40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
                                    154 ;	genAssign: resultIsFar = FALSE
      00002C 7A 00            [ 8]  155 	mov	r2,#0x00
                                    156 ;	genAssign: resultIsFar = TRUE
      00002E 90s00r00r08      [12]  157 	mov	dptr,#___stdc_count_onesull_sloc0_1_0
      000032 E4               [ 4]  158 	clr	a
      000033 F0               [ 8]  159 	movx	@dptr,a
      000034                        160 00105$:
      000034 90s00r00r08      [12]  161 	mov	dptr,#___stdc_count_onesull_sloc0_1_0
      000038 E0               [ 8]  162 	movx	a,@dptr
      000039 B4 40 00         [16]  163 	cjne	a,#0x40,00122$
      00003C                        164 00122$:
      00003C 50 77            [12]  165 	jnc  00103$
      00003E                        166 00123$:
                                    167 ;	__stdc_count_onesull.c:41: if(value & (1ull << i))
      00003E C0 02            [ 8]  168 	push	ar2
      000040 90s00r00r08      [12]  169 	mov	dptr,#___stdc_count_onesull_sloc0_1_0
      000044 C5 F0            [ 8]  170 	xch	a, b
      000046 E0               [ 8]  171 	movx	a,@dptr
      000047 C5 F0            [ 8]  172 	xch	a, b
      000049 05 F0            [ 8]  173 	inc	b
      00004B 7C 01            [ 8]  174 	mov	r4,#0x01
      00004D 7D 00            [ 8]  175 	mov	r5,#0x00
      00004F 7E 00            [ 8]  176 	mov	r6,#0x00
      000051 7F 00            [ 8]  177 	mov	r7,#0x00
      000053 78 00            [ 8]  178 	mov	r0,#0x00
      000055 79 00            [ 8]  179 	mov	r1,#0x00
      000057 7A 00            [ 8]  180 	mov	r2,#0x00
      000059 7B 00            [ 8]  181 	mov	r3,#0x00
      00005B 80 19            [12]  182 	sjmp	00125$
      00005D                        183 00124$:
      00005D EC               [ 4]  184 	mov	a,r4
      00005E 25 E0            [ 8]  185 	add	a,acc
      000060 FC               [ 4]  186 	mov	r4,a
      000061 ED               [ 4]  187 	mov	a,r5
      000062 33               [ 4]  188 	rlc	a
      000063 FD               [ 4]  189 	mov	r5,a
      000064 EE               [ 4]  190 	mov	a,r6
      000065 33               [ 4]  191 	rlc	a
      000066 FE               [ 4]  192 	mov	r6,a
      000067 EF               [ 4]  193 	mov	a,r7
      000068 33               [ 4]  194 	rlc	a
      000069 FF               [ 4]  195 	mov	r7,a
      00006A E8               [ 4]  196 	mov	a,r0
      00006B 33               [ 4]  197 	rlc	a
      00006C F8               [ 4]  198 	mov	r0,a
      00006D E9               [ 4]  199 	mov	a,r1
      00006E 33               [ 4]  200 	rlc	a
      00006F F9               [ 4]  201 	mov	r1,a
      000070 EA               [ 4]  202 	mov	a,r2
      000071 33               [ 4]  203 	rlc	a
      000072 FA               [ 4]  204 	mov	r2,a
      000073 EB               [ 4]  205 	mov	a,r3
      000074 33               [ 4]  206 	rlc	a
      000075 FB               [ 4]  207 	mov	r3,a
      000076                        208 00125$:
      000076 D5 F0 E4         [16]  209 	djnz	b,00124$
      000079 90s00r00r00      [12]  210 	mov	dptr,#___stdc_count_onesull_value_65536_9
      00007D E0               [ 8]  211 	movx	a,@dptr
      00007E 52 04            [ 8]  212 	anl	ar4,a
      000080 A3               [12]  213 	inc	dptr
      000081 E0               [ 8]  214 	movx	a,@dptr
      000082 52 05            [ 8]  215 	anl	ar5,a
      000084 A3               [12]  216 	inc	dptr
      000085 E0               [ 8]  217 	movx	a,@dptr
      000086 52 06            [ 8]  218 	anl	ar6,a
      000088 A3               [12]  219 	inc	dptr
      000089 E0               [ 8]  220 	movx	a,@dptr
      00008A 52 07            [ 8]  221 	anl	ar7,a
      00008C A3               [12]  222 	inc	dptr
      00008D E0               [ 8]  223 	movx	a,@dptr
      00008E 52 00            [ 8]  224 	anl	ar0,a
      000090 A3               [12]  225 	inc	dptr
      000091 E0               [ 8]  226 	movx	a,@dptr
      000092 52 01            [ 8]  227 	anl	ar1,a
      000094 A3               [12]  228 	inc	dptr
      000095 E0               [ 8]  229 	movx	a,@dptr
      000096 52 02            [ 8]  230 	anl	ar2,a
      000098 A3               [12]  231 	inc	dptr
      000099 E0               [ 8]  232 	movx	a,@dptr
      00009A 52 03            [ 8]  233 	anl	ar3,a
      00009C EC               [ 4]  234 	mov	a,r4
      00009D 4D               [ 4]  235 	orl	a,r5
      00009E 4E               [ 4]  236 	orl	a,r6
      00009F 4F               [ 4]  237 	orl	a,r7
      0000A0 48               [ 4]  238 	orl	a,r0
      0000A1 49               [ 4]  239 	orl	a,r1
      0000A2 4A               [ 4]  240 	orl	a,r2
      0000A3 4B               [ 4]  241 	orl	a,r3
      0000A4 D0 02            [ 8]  242 	pop	ar2
      0000A6 60 01            [12]  243 	jz  00106$
      0000A8                        244 00126$:
                                    245 ;	__stdc_count_onesull.c:42: count++;
      0000A8 0A               [ 4]  246 	inc	r2
      0000A9                        247 00106$:
                                    248 ;	__stdc_count_onesull.c:40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
      0000A9 90s00r00r08      [12]  249 	mov	dptr,#___stdc_count_onesull_sloc0_1_0
      0000AD E0               [ 8]  250 	movx	a,@dptr
      0000AE 24 01            [ 8]  251 	add	a,#0x01
      0000B0 F0               [ 8]  252 	movx	@dptr,a
      0000B1 02s00r00r34      [16]  253 	ljmp	00105$
      0000B5                        254 00103$:
                                    255 ;	__stdc_count_onesull.c:43: return count;
      0000B5 8A 82            [ 8]  256 	mov	dpl,r2
      0000B7                        257 00107$:
                                    258 ;	__stdc_count_onesull.c:44: }
      0000B7 22               [16]  259 	ret
                                    260 	.area CSEG    (CODE)
                                    261 	.area CONST   (CODE)
                                    262 	.area XINIT   (CODE)
                                    263 	.area CABS    (ABS,CODE)
