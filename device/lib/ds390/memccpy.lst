                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module memccpy
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _memccpy_PARM_4
                                     35 	.globl _memccpy_PARM_3
                                     36 	.globl _memccpy_PARM_2
                                     37 	.globl _memccpy
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; uninitialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 _memccpy_PARM_2:
      000000                         78 	.ds 4
      000004                         79 _memccpy_PARM_3:
      000004                         80 	.ds 2
      000006                         81 _memccpy_PARM_4:
      000006                         82 	.ds 2
      000008                         83 _memccpy_sloc1_1_0:
      000008                         84 	.ds 4
                                     85 ;--------------------------------------------------------
                                     86 ; absolute external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XABS    (ABS,XDATA)
                                     89 ;--------------------------------------------------------
                                     90 ; initialized external ram data
                                     91 ;--------------------------------------------------------
                                     92 	.area XISEG   (XDATA)
                                     93 ;--------------------------------------------------------
                                     94 ; global & static initialisations
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 	.area GSFINAL (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME    (CODE)
                                    104 	.area HOME    (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CSEG    (CODE)
                                    109 ;------------------------------------------------------------
                                    110 ;Allocation info for local variables in function 'memccpy'
                                    111 ;------------------------------------------------------------
                                    112 ;src                       Allocated with name '_memccpy_PARM_2'
                                    113 ;c                         Allocated with name '_memccpy_PARM_3'
                                    114 ;n                         Allocated with name '_memccpy_PARM_4'
                                    115 ;dst                       Allocated to registers 
                                    116 ;d                         Allocated to registers 
                                    117 ;s                         Allocated to registers 
                                    118 ;sloc0                     Allocated with name '_memccpy_sloc0_1_0'
                                    119 ;sloc1                     Allocated with name '_memccpy_sloc1_1_0'
                                    120 ;------------------------------------------------------------
                                    121 ;	memccpy.c:31: void *memccpy (void *restrict dst, const void *restrict src, int c, size_t n)
                                    122 ;	-----------------------------------------
                                    123 ;	 function memccpy
                                    124 ;	-----------------------------------------
      000000                        125 _memccpy:
                           000002   126 	ar2 = 0x02
                           000003   127 	ar3 = 0x03
                           000004   128 	ar4 = 0x04
                           000005   129 	ar5 = 0x05
                           000006   130 	ar6 = 0x06
                           000007   131 	ar7 = 0x07
                           000000   132 	ar0 = 0x00
                           000001   133 	ar1 = 0x01
      000000 AA 82            [ 8]  134 	mov	r2,dpl
      000002 AB 83            [ 8]  135 	mov	r3,dph
      000004 AC 93            [ 8]  136 	mov	r4,dpx
      000006 AD F0            [ 8]  137 	mov	r5,b
                                    138 ;	memccpy.c:33: char *d = dst;
                                    139 ;	memccpy.c:34: const char *s = src;
      000008 90s00r00r00      [12]  140 	mov	dptr,#_memccpy_PARM_2
                                    141 ;	genAssign: resultIsFar = FALSE
      00000C E0               [ 8]  142 	movx	a,@dptr
      00000D FE               [ 4]  143 	mov	r6,a
      00000E A3               [12]  144 	inc	dptr
      00000F E0               [ 8]  145 	movx	a,@dptr
      000010 FF               [ 4]  146 	mov	r7,a
      000011 A3               [12]  147 	inc	dptr
      000012 E0               [ 8]  148 	movx	a,@dptr
      000013 F8               [ 4]  149 	mov	r0,a
      000014 A3               [12]  150 	inc	dptr
      000015 E0               [ 8]  151 	movx	a,@dptr
      000016 F9               [ 4]  152 	mov	r1,a
      000017 90s00r00r08      [12]  153 	mov	dptr,#_memccpy_sloc1_1_0
      00001B EE               [ 4]  154 	mov	a,r6
      00001C F0               [ 8]  155 	movx	@dptr,a
      00001D A3               [12]  156 	inc	dptr
      00001E EF               [ 4]  157 	mov	a,r7
      00001F F0               [ 8]  158 	movx	@dptr,a
      000020 A3               [12]  159 	inc	dptr
      000021 E8               [ 4]  160 	mov	a,r0
      000022 F0               [ 8]  161 	movx	@dptr,a
      000023 A3               [12]  162 	inc	dptr
      000024 E9               [ 4]  163 	mov	a,r1
      000025 F0               [ 8]  164 	movx	@dptr,a
                                    165 ;	memccpy.c:36: while (n--)
      000026 90s00r00r06      [12]  166 	mov	dptr,#_memccpy_PARM_4
                                    167 ;	genAssign: resultIsFar = FALSE
      00002A E0               [ 8]  168 	movx	a,@dptr
      00002B F8               [ 4]  169 	mov	r0,a
      00002C A3               [12]  170 	inc	dptr
      00002D E0               [ 8]  171 	movx	a,@dptr
      00002E F9               [ 4]  172 	mov	r1,a
      00002F                        173 00103$:
                                    174 ;	genAssign: resultIsFar = FALSE
      00002F 88 06            [ 8]  175 	mov	ar6,r0
      000031 89 07            [ 8]  176 	mov	ar7,r1
      000033 18               [ 4]  177 	dec	r0
      000034 B8 FF 01         [16]  178 	cjne	r0,#0xff,00120$
      000037 19               [ 4]  179 	dec	r1
      000038                        180 00120$:
      000038 EE               [ 4]  181 	mov	a,r6
      000039 4F               [ 4]  182 	orl	a,r7
      00003A 60 5D            [12]  183 	jz  00105$
      00003C                        184 00121$:
                                    185 ;	memccpy.c:37: if ((*d++ = *s++) == (unsigned char)c)
      00003C 90s00r00r08      [12]  186 	mov	dptr,#_memccpy_sloc1_1_0
      000040 E0               [ 8]  187 	movx	a,@dptr
      000041 C0 E0            [ 8]  188 	push	acc
      000043 A3               [12]  189 	inc	dptr
      000044 E0               [ 8]  190 	movx	a,@dptr
      000045 C0 E0            [ 8]  191 	push	acc
      000047 A3               [12]  192 	inc	dptr
      000048 E0               [ 8]  193 	movx	a,@dptr
      000049 C0 E0            [ 8]  194 	push	acc
      00004B A3               [12]  195 	inc	dptr
      00004C E0               [ 8]  196 	movx	a,@dptr
      00004D F5 F0            [ 8]  197 	mov	b,a
      00004F D0 93            [ 8]  198 	pop	dpx
      000051 D0 83            [ 8]  199 	pop	dph
      000053 D0 82            [ 8]  200 	pop	dpl
      000055 12s00r00r00      [16]  201 	lcall	__gptrget
      000059 FE               [ 4]  202 	mov	r6,a
      00005A 90s00r00r08      [12]  203 	mov	dptr,#_memccpy_sloc1_1_0
      00005E E0               [ 8]  204 	movx	a,@dptr
      00005F 24 01            [ 8]  205 	add	a,#0x01
      000061 F0               [ 8]  206 	movx	@dptr,a
      000062 A3               [12]  207 	inc	dptr
      000063 E0               [ 8]  208 	movx	a,@dptr
      000064 34 00            [ 8]  209 	addc	a,#0x00
      000066 F0               [ 8]  210 	movx	@dptr,a
      000067 A3               [12]  211 	inc	dptr
      000068 E0               [ 8]  212 	movx	a,@dptr
      000069 34 00            [ 8]  213 	addc	a,#0x00
      00006B F0               [ 8]  214 	movx	@dptr,a
      00006C A3               [12]  215 	inc	dptr
      00006D E0               [ 8]  216 	movx	a,@dptr
      00006E F0               [ 8]  217 	movx	@dptr,a
      00006F 8A 82            [ 8]  218 	mov	dpl,r2
      000071 8B 83            [ 8]  219 	mov	dph,r3
      000073 8C 93            [ 8]  220 	mov	dpx,r4
      000075 8D F0            [ 8]  221 	mov	b,r5
      000077 EE               [ 4]  222 	mov	a,r6
      000078 12s00r00r00      [16]  223 	lcall	__gptrput
      00007C A3               [12]  224 	inc	dptr
      00007D AA 82            [ 8]  225 	mov	r2,dpl
      00007F AB 83            [ 8]  226 	mov	r3,dph
      000081 AC 93            [ 8]  227 	mov	r4,dpx
      000083 AD F0            [ 8]  228 	mov	r5,b
      000085 90s00r00r04      [12]  229 	mov	dptr,#_memccpy_PARM_3
      000089 E0               [ 8]  230 	movx	a,@dptr
      00008A FF               [ 4]  231 	mov	r7,a
      00008B EE               [ 4]  232 	mov	a,r6
      00008C B5 07 A0         [16]  233 	cjne a,ar7,00103$
      00008F                        234 00123$:
                                    235 ;	memccpy.c:38: return (d);
                                    236 ;	genAssign: resultIsFar = FALSE
      00008F 8A 82            [ 8]  237 	mov	dpl,r2
      000091 8B 83            [ 8]  238 	mov	dph,r3
      000093 8C 93            [ 8]  239 	mov	dpx,r4
      000095 8D F0            [ 8]  240 	mov	b,r5
      000097 80 07            [12]  241 	sjmp 00106$
      000099                        242 00105$:
                                    243 ;	memccpy.c:40: return (0);
      000099 90 00 00 00      [12]  244 	mov  dptr,#0x0000
      00009D 75 F0 00         [12]  245 	mov	b,#0x00
      0000A0                        246 00106$:
                                    247 ;	memccpy.c:41: }
      0000A0 22               [16]  248 	ret
                                    249 	.area CSEG    (CODE)
                                    250 	.area CONST   (CODE)
                                    251 	.area XINIT   (CODE)
                                    252 	.area CABS    (ABS,CODE)
