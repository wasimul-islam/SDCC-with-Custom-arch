                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strlen
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strlen
                                     35 ;--------------------------------------------------------
                                     36 ; special function registers
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; special function bits
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable register banks
                                     43 ;--------------------------------------------------------
                                     44 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         45 	.ds 8
                                     46 ;--------------------------------------------------------
                                     47 ; internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DSEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; overlayable items in internal ram
                                     52 ;--------------------------------------------------------
                                     53 	.area	OSEG    (OVR,DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; uninitialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; absolute external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XABS    (ABS,XDATA)
                                     79 ;--------------------------------------------------------
                                     80 ; initialized external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XISEG   (XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'strlen'
                                    101 ;------------------------------------------------------------
                                    102 ;str                       Allocated to registers 
                                    103 ;i                         Allocated to registers r6 r7 
                                    104 ;------------------------------------------------------------
                                    105 ;	_strlen.c:35: size_t strlen ( const char * str )
                                    106 ;	-----------------------------------------
                                    107 ;	 function strlen
                                    108 ;	-----------------------------------------
      000000                        109 _strlen:
                           000002   110 	ar2 = 0x02
                           000003   111 	ar3 = 0x03
                           000004   112 	ar4 = 0x04
                           000005   113 	ar5 = 0x05
                           000006   114 	ar6 = 0x06
                           000007   115 	ar7 = 0x07
                           000000   116 	ar0 = 0x00
                           000001   117 	ar1 = 0x01
      000000 AA 82            [ 8]  118 	mov	r2,dpl
      000002 AB 83            [ 8]  119 	mov	r3,dph
      000004 AC 93            [ 8]  120 	mov	r4,dpx
      000006 AD F0            [ 8]  121 	mov	r5,b
                                    122 ;	_strlen.c:39: while (*str++)
                                    123 ;	genAssign: resultIsFar = FALSE
      000008 E4               [ 4]  124 	clr	a
      000009 F5 84            [ 8]  125 	mov	dpl1,a
      00000B F5 85            [ 8]  126 	mov	dph1,a
      00000D                        127 00101$:
      00000D 8A 82            [ 8]  128 	mov	dpl,r2
      00000F 8B 83            [ 8]  129 	mov	dph,r3
      000011 8C 93            [ 8]  130 	mov	dpx,r4
      000013 8D F0            [ 8]  131 	mov	b,r5
      000015 12s00r00r00      [16]  132 	lcall	__gptrget
      000019 F8               [ 4]  133 	mov	r0,a
      00001A A3               [12]  134 	inc	dptr
      00001B AA 82            [ 8]  135 	mov	r2,dpl
      00001D AB 83            [ 8]  136 	mov	r3,dph
      00001F AC 93            [ 8]  137 	mov	r4,dpx
      000021 AD F0            [ 8]  138 	mov	r5,b
      000023 E8               [ 4]  139 	mov	a,r0
      000024 60 09            [12]  140 	jz  00103$
      000026                        141 00115$:
                                    142 ;	_strlen.c:40: i++ ;
      000026 75 86 01         [12]  143 	mov	dps,#0x01
      000029 A3               [12]  144 	inc	dptr
      00002A 75 86 00         [12]  145 	mov	dps,#0
      00002D 80 DE            [12]  146 	sjmp 00101$
      00002F                        147 00103$:
                                    148 ;	_strlen.c:42: return i;
      00002F 85 84 82         [12]  149 	mov	dpl,dpl1
      000032 85 85 83         [12]  150 	mov	dph,dph1
      000035                        151 00104$:
                                    152 ;	_strlen.c:43: }
      000035 22               [16]  153 	ret
                                    154 	.area CSEG    (CODE)
                                    155 	.area CONST   (CODE)
                                    156 	.area XINIT   (CODE)
                                    157 	.area CABS    (ABS,CODE)
