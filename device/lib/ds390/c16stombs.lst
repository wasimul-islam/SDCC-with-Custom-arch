                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module c16stombs
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl ___memcpy
                                     35 	.globl _wctomb
                                     36 	.globl ___c16stombs_PARM_3
                                     37 	.globl ___c16stombs_PARM_2
                                     38 	.globl ___c16stombs
                                     39 ;--------------------------------------------------------
                                     40 ; special function registers
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; special function bits
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; overlayable register banks
                                     47 ;--------------------------------------------------------
                                     48 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         49 	.ds 8
                                     50 ;--------------------------------------------------------
                                     51 ; internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area DSEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; overlayable items in internal ram
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; indirectly addressable internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area ISEG    (DATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute internal ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area IABS    (ABS,DATA)
                                     65 	.area IABS    (ABS,DATA)
                                     66 ;--------------------------------------------------------
                                     67 ; bit data
                                     68 ;--------------------------------------------------------
                                     69 	.area BSEG    (BIT)
                                     70 ;--------------------------------------------------------
                                     71 ; paged external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area PSEG    (PAG,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; uninitialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XSEG    (XDATA)
      000000                         78 ___c16stombs_PARM_2:
      000000                         79 	.ds 4
      000004                         80 ___c16stombs_PARM_3:
      000004                         81 	.ds 2
      000006                         82 ___c16stombs_s_65536_76:
      000006                         83 	.ds 4
      00000A                         84 ___c16stombs_b_65536_77:
      00000A                         85 	.ds 4
      00000E                         86 ___c16stombs_l_196608_79:
      00000E                         87 	.ds 2
      000010                         88 ___c16stombs_codepoint_196608_79:
      000010                         89 	.ds 4
      000014                         90 ___c16stombs_sloc0_1_0:
      000014                         91 	.ds 4
                                     92 ;--------------------------------------------------------
                                     93 ; absolute external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area XABS    (ABS,XDATA)
                                     96 ;--------------------------------------------------------
                                     97 ; initialized external ram data
                                     98 ;--------------------------------------------------------
                                     99 	.area XISEG   (XDATA)
                                    100 ;--------------------------------------------------------
                                    101 ; global & static initialisations
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME    (CODE)
                                    104 	.area GSINIT  (CODE)
                                    105 	.area GSFINAL (CODE)
                                    106 	.area GSINIT  (CODE)
                                    107 ;--------------------------------------------------------
                                    108 ; Home
                                    109 ;--------------------------------------------------------
                                    110 	.area HOME    (CODE)
                                    111 	.area HOME    (CODE)
                                    112 ;--------------------------------------------------------
                                    113 ; code
                                    114 ;--------------------------------------------------------
                                    115 	.area CSEG    (CODE)
                                    116 ;------------------------------------------------------------
                                    117 ;Allocation info for local variables in function '__c16stombs'
                                    118 ;------------------------------------------------------------
                                    119 ;c16s                      Allocated with name '___c16stombs_PARM_2'
                                    120 ;n                         Allocated with name '___c16stombs_PARM_3'
                                    121 ;s                         Allocated with name '___c16stombs_s_65536_76'
                                    122 ;m                         Allocated to registers r6 r7 
                                    123 ;b                         Allocated with name '___c16stombs_b_65536_77'
                                    124 ;l                         Allocated with name '___c16stombs_l_196608_79'
                                    125 ;codepoint                 Allocated with name '___c16stombs_codepoint_196608_79'
                                    126 ;sloc0                     Allocated with name '___c16stombs_sloc0_1_0'
                                    127 ;sloc1                     Allocated with name '___c16stombs_sloc1_1_0'
                                    128 ;------------------------------------------------------------
                                    129 ;	c16stombs.c:44: size_t __c16stombs(char *restrict s, const char16_t *restrict c16s, size_t n)
                                    130 ;	-----------------------------------------
                                    131 ;	 function __c16stombs
                                    132 ;	-----------------------------------------
      000000                        133 ___c16stombs:
                           000002   134 	ar2 = 0x02
                           000003   135 	ar3 = 0x03
                           000004   136 	ar4 = 0x04
                           000005   137 	ar5 = 0x05
                           000006   138 	ar6 = 0x06
                           000007   139 	ar7 = 0x07
                           000000   140 	ar0 = 0x00
                           000001   141 	ar1 = 0x01
      000000 75 86 01         [12]  142 	mov     dps, #1
      000003 90s00r00r06      [12]  143 	mov     dptr, #___c16stombs_s_65536_76
      000007 E5 82            [ 8]  144 	mov	a,dpl
      000009 F0               [ 8]  145 	movx	@dptr,a
      00000A A3               [12]  146 	inc	dptr
      00000B E5 83            [ 8]  147 	mov	a,dph
      00000D F0               [ 8]  148 	movx	@dptr,a
      00000E A3               [12]  149 	inc	dptr
      00000F E5 93            [ 8]  150 	mov	a,dpx
      000011 F0               [ 8]  151 	movx	@dptr,a
      000012 A3               [12]  152 	inc	dptr
      000013 E5 F0            [ 8]  153 	mov	a,b
      000015 F0               [ 8]  154 	movx	@dptr,a
      000016 75 86 00         [12]  155 	mov	dps,#0
                                    156 ;	c16stombs.c:46: size_t m = 0;
                                    157 ;	genAssign: resultIsFar = TRUE
      000019 7E 00            [ 8]  158 	mov	r6,#0x00
      00001B 7F 00            [ 8]  159 	mov	r7,#0x00
                                    160 ;	c16stombs.c:87: return(m);
      00001D                        161 00119$:
                                    162 ;	c16stombs.c:54: if(c16s[0] < 0xd800 || c16s[0] >= 0xe000) // Basic multilingual plane
      00001D 90s00r00r00      [12]  163 	mov	dptr,#___c16stombs_PARM_2
                                    164 ;	genAssign: resultIsFar = TRUE
      000021 75 86 21         [12]  165 	mov	dps,#0x21
      000024 90s00r00r14      [12]  166 	mov	dptr,#___c16stombs_sloc0_1_0
      000028 E0               [ 8]  167 	movx	a,@dptr
      000029 F0               [ 8]  168 	movx	@dptr,a
      00002A A3               [12]  169 	inc	dptr
      00002B A3               [12]  170 	inc	dptr
      00002C E0               [ 8]  171 	movx	a,@dptr
      00002D F0               [ 8]  172 	movx	@dptr,a
      00002E A3               [12]  173 	inc	dptr
      00002F A3               [12]  174 	inc	dptr
      000030 E0               [ 8]  175 	movx	a,@dptr
      000031 F0               [ 8]  176 	movx	@dptr,a
      000032 A3               [12]  177 	inc	dptr
      000033 A3               [12]  178 	inc	dptr
      000034 E0               [ 8]  179 	movx	a,@dptr
      000035 F0               [ 8]  180 	movx	@dptr,a
      000036 75 86 00         [12]  181 	mov	dps,#0
      000039 90s00r00r14      [12]  182 	mov	dptr,#___c16stombs_sloc0_1_0
      00003D E0               [ 8]  183 	movx	a,@dptr
      00003E C0 E0            [ 8]  184 	push	acc
      000040 A3               [12]  185 	inc	dptr
      000041 E0               [ 8]  186 	movx	a,@dptr
      000042 C0 E0            [ 8]  187 	push	acc
      000044 A3               [12]  188 	inc	dptr
      000045 E0               [ 8]  189 	movx	a,@dptr
      000046 C0 E0            [ 8]  190 	push	acc
      000048 A3               [12]  191 	inc	dptr
      000049 E0               [ 8]  192 	movx	a,@dptr
      00004A F5 F0            [ 8]  193 	mov	b,a
      00004C D0 93            [ 8]  194 	pop	dpx
      00004E D0 83            [ 8]  195 	pop	dph
      000050 D0 82            [ 8]  196 	pop	dpl
      000052 12s00r00r00      [16]  197 	lcall	__gptrgetWord
      000056 FC               [ 4]  198 	mov	r4,a
      000057 AD 9C            [ 8]  199 	mov	r5,acc1
      000059 C3               [ 4]  200 	clr	c
      00005A EC               [ 4]  201 	mov	a,r4
      00005B 94 00            [ 8]  202 	subb	a,#0x00
      00005D ED               [ 4]  203 	mov	a,r5
      00005E 94 D8            [ 8]  204 	subb	a,#0xd8
      000060 40 09            [12]  205 	jc   00106$
      000062                        206 00155$:
      000062 C3               [ 4]  207 	clr	c
      000063 EC               [ 4]  208 	mov	a,r4
      000064 94 00            [ 8]  209 	subb	a,#0x00
      000066 ED               [ 4]  210 	mov	a,r5
      000067 94 E0            [ 8]  211 	subb	a,#0xe0
      000069 40 4C            [12]  212 	jc   00107$
      00006B                        213 00156$:
      00006B                        214 00106$:
                                    215 ;	c16stombs.c:56: codepoint = c16s[0];
      00006B C0 06            [ 8]  216 	push	ar6
      00006D C0 07            [ 8]  217 	push	ar7
      00006F 90s00r00r00      [12]  218 	mov	dptr,#___c16stombs_PARM_2
                                    219 ;	genAssign: resultIsFar = FALSE
      000073 E0               [ 8]  220 	movx	a,@dptr
      000074 FA               [ 4]  221 	mov	r2,a
      000075 A3               [12]  222 	inc	dptr
      000076 E0               [ 8]  223 	movx	a,@dptr
      000077 FB               [ 4]  224 	mov	r3,a
      000078 A3               [12]  225 	inc	dptr
      000079 E0               [ 8]  226 	movx	a,@dptr
      00007A FC               [ 4]  227 	mov	r4,a
      00007B A3               [12]  228 	inc	dptr
      00007C E0               [ 8]  229 	movx	a,@dptr
      00007D FD               [ 4]  230 	mov	r5,a
      00007E 8A 82            [ 8]  231 	mov	dpl,r2
      000080 8B 83            [ 8]  232 	mov	dph,r3
      000082 8C 93            [ 8]  233 	mov	dpx,r4
      000084 8D F0            [ 8]  234 	mov	b,r5
      000086 12s00r00r00      [16]  235 	lcall	__gptrgetWord
      00008A FE               [ 4]  236 	mov	r6,a
      00008B AF 9C            [ 8]  237 	mov	r7,acc1
      00008D 90s00r00r10      [12]  238 	mov	dptr,#___c16stombs_codepoint_196608_79
      000091 EE               [ 4]  239 	mov	a,r6
      000092 F0               [ 8]  240 	movx	@dptr,a
      000093 A3               [12]  241 	inc	dptr
      000094 EF               [ 4]  242 	mov	a,r7
      000095 F0               [ 8]  243 	movx	@dptr,a
      000096 A3               [12]  244 	inc	dptr
      000097 E4               [ 4]  245 	clr	a
      000098 F0               [ 8]  246 	movx	@dptr,a
      000099 A3               [12]  247 	inc	dptr
      00009A E4               [ 4]  248 	clr	a
      00009B F0               [ 8]  249 	movx	@dptr,a
                                    250 ;	c16stombs.c:57: c16s++;
      00009C 90s00r00r00      [12]  251 	mov	dptr,#___c16stombs_PARM_2
      0000A0 74 02            [ 8]  252 	mov	a,#0x02
      0000A2 2A               [ 4]  253 	add	a,r2
      0000A3 F0               [ 8]  254 	movx	@dptr,a
      0000A4 E4               [ 4]  255 	clr	a
      0000A5 3B               [ 4]  256 	addc	a,r3
      0000A6 A3               [12]  257 	inc	dptr
      0000A7 F0               [ 8]  258 	movx	@dptr,a
      0000A8 E4               [ 4]  259 	clr	a
      0000A9 3C               [ 4]  260 	addc	a,r4
      0000AA A3               [12]  261 	inc	dptr
      0000AB F0               [ 8]  262 	movx	@dptr,a
      0000AC A3               [12]  263 	inc	dptr
      0000AD ED               [ 4]  264 	mov	a,r5
      0000AE F0               [ 8]  265 	movx	@dptr,a
      0000AF D0 07            [ 8]  266 	pop	ar7
      0000B1 D0 06            [ 8]  267 	pop	ar6
      0000B3 02s00r01r83      [16]  268 	ljmp	00108$
      0000B7                        269 00107$:
                                    270 ;	c16stombs.c:59: else if(c16s[0] > 0xdbff || c16s[1] < 0xdc00 || c16s[1] > 0xdfff) // Unpaired surrogate
      0000B7 C3               [ 4]  271 	clr	c
      0000B8 74 FF            [ 8]  272 	mov	a,#0xff
      0000BA 9C               [ 4]  273 	subb	a,r4
      0000BB 74 DB            [ 8]  274 	mov	a,#0xdb
      0000BD 9D               [ 4]  275 	subb	a,r5
      0000BE 40 3E            [12]  276 	jc   00101$
      0000C0                        277 00157$:
      0000C0 C0 06            [ 8]  278 	push	ar6
      0000C2 C0 07            [ 8]  279 	push	ar7
      0000C4 90s00r00r14      [12]  280 	mov	dptr,#___c16stombs_sloc0_1_0
      0000C8 E0               [ 8]  281 	movx	a,@dptr
      0000C9 24 02            [ 8]  282 	add	a,#0x02
      0000CB FE               [ 4]  283 	mov	r6,a
      0000CC A3               [12]  284 	inc	dptr
      0000CD E0               [ 8]  285 	movx	a,@dptr
      0000CE 34 00            [ 8]  286 	addc	a,#0x00
      0000D0 FF               [ 4]  287 	mov	r7,a
      0000D1 A3               [12]  288 	inc	dptr
      0000D2 E0               [ 8]  289 	movx	a,@dptr
      0000D3 34 00            [ 8]  290 	addc	a,#0x00
      0000D5 FA               [ 4]  291 	mov	r2,a
      0000D6 A3               [12]  292 	inc	dptr
      0000D7 E0               [ 8]  293 	movx	a,@dptr
      0000D8 FB               [ 4]  294 	mov	r3,a
      0000D9 8E 82            [ 8]  295 	mov	dpl,r6
      0000DB 8F 83            [ 8]  296 	mov	dph,r7
      0000DD 8A 93            [ 8]  297 	mov	dpx,r2
      0000DF 8B F0            [ 8]  298 	mov	b,r3
      0000E1 12s00r00r00      [16]  299 	lcall	__gptrgetWord
      0000E5 F8               [ 4]  300 	mov	r0,a
      0000E6 A9 9C            [ 8]  301 	mov	r1,acc1
      0000E8 C3               [ 4]  302 	clr	c
      0000E9 E8               [ 4]  303 	mov	a,r0
      0000EA 94 00            [ 8]  304 	subb	a,#0x00
      0000EC E9               [ 4]  305 	mov	a,r1
      0000ED 94 DC            [ 8]  306 	subb	a,#0xdc
      0000EF D0 07            [ 8]  307 	pop	ar7
      0000F1 D0 06            [ 8]  308 	pop	ar6
      0000F3 40 09            [12]  309 	jc   00101$
      0000F5                        310 00158$:
      0000F5 C3               [ 4]  311 	clr	c
      0000F6 74 FF            [ 8]  312 	mov	a,#0xff
      0000F8 98               [ 4]  313 	subb	a,r0
      0000F9 74 DF            [ 8]  314 	mov	a,#0xdf
      0000FB 99               [ 4]  315 	subb	a,r1
      0000FC 50 08            [12]  316 	jnc  00102$
      0000FE                        317 00159$:
      0000FE                        318 00101$:
                                    319 ;	c16stombs.c:60: return(-1);
      0000FE 90 00 FF FF      [12]  320 	mov  dptr,#0xffff
      000102 02s00r02rC2      [16]  321 	ljmp	00121$
      000106                        322 00102$:
                                    323 ;	c16stombs.c:63: codepoint = ((unsigned long)(c16s[0]) << 10) -(0xd800ul << 10) + (unsigned long)(c16s[1]) - 0xdc00ul + 0x10000ul;
      000106 C0 06            [ 8]  324 	push	ar6
      000108 C0 07            [ 8]  325 	push	ar7
      00010A E4               [ 4]  326 	clr  a
      00010B FA               [ 4]  327 	mov  r2,a
      00010C FB               [ 4]  328 	mov  r3,a
      00010D ED               [ 4]  329 	mov  a,r5
      00010E 25 E0            [ 8]  330 	add	a,acc
      000110 CA               [ 4]  331 	xch	a,r2
      000111 33               [ 4]  332 	rlc	a
      000112 CA               [ 4]  333 	xch	a,r2
      000113 25 E0            [ 8]  334 	add	a,acc
      000115 CA               [ 4]  335 	xch	a,r2
      000116 33               [ 4]  336 	rlc	a
      000117 FB               [ 4]  337 	mov	r3,a
      000118 EC               [ 4]  338 	mov	a,r4
      000119 23               [ 4]  339 	rl	a
      00011A 23               [ 4]  340 	rl	a
      00011B 54 03            [ 8]  341 	anl	a,#0x03
      00011D 4A               [ 4]  342 	orl	a,r2
      00011E FA               [ 4]  343 	mov	r2,a
      00011F EC               [ 4]  344 	mov	a,r4
      000120 25 E0            [ 8]  345 	add	a,acc
      000122 25 E0            [ 8]  346 	add	a,acc
      000124 FD               [ 4]  347 	mov	r5,a
      000125 E4               [ 4]  348 	clr  a
      000126 FC               [ 4]  349 	mov  r4,a
      000127 FE               [ 4]  350 	mov  r6,a
      000128 FF               [ 4]  351 	mov  r7,a
      000129 E8               [ 4]  352 	mov  a,r0
      00012A 2C               [ 4]  353 	add	a,r4
      00012B FC               [ 4]  354 	mov	r4,a
      00012C E9               [ 4]  355 	mov	a,r1
      00012D 3D               [ 4]  356 	addc	a,r5
      00012E FD               [ 4]  357 	mov	r5,a
      00012F EE               [ 4]  358 	mov	a,r6
      000130 3A               [ 4]  359 	addc	a,r2
      000131 FA               [ 4]  360 	mov	r2,a
      000132 EF               [ 4]  361 	mov	a,r7
      000133 3B               [ 4]  362 	addc	a,r3
      000134 FB               [ 4]  363 	mov	r3,a
      000135 90s00r00r10      [12]  364 	mov	dptr,#___c16stombs_codepoint_196608_79
      000139 E4               [ 4]  365 	clr	a
      00013A 2C               [ 4]  366 	add	a,r4
      00013B F0               [ 8]  367 	movx	@dptr,a
      00013C 74 24            [ 8]  368 	mov	a,#0x24
      00013E 3D               [ 4]  369 	addc	a,r5
      00013F A3               [12]  370 	inc	dptr
      000140 F0               [ 8]  371 	movx	@dptr,a
      000141 74 A0            [ 8]  372 	mov	a,#0xa0
      000143 3A               [ 4]  373 	addc	a,r2
      000144 A3               [12]  374 	inc	dptr
      000145 F0               [ 8]  375 	movx	@dptr,a
      000146 74 FC            [ 8]  376 	mov	a,#0xfc
      000148 3B               [ 4]  377 	addc	a,r3
      000149 A3               [12]  378 	inc	dptr
      00014A F0               [ 8]  379 	movx	@dptr,a
                                    380 ;	c16stombs.c:64: c16s += 2;
      00014B 90s00r00r14      [12]  381 	mov	dptr,#___c16stombs_sloc0_1_0
      00014F 75 86 01         [12]  382 	mov	dps, #1
      000152 90s00r00r00      [12]  383 	mov	dptr, #___c16stombs_PARM_2
      000156 15 86            [ 8]  384 	dec	dps
      000158 E0               [ 8]  385 	movx	a,@dptr
      000159 24 04            [ 8]  386 	add	a,#0x04
      00015B 05 86            [ 8]  387 	inc	dps
      00015D F0               [ 8]  388 	movx	@dptr,a
      00015E 15 86            [ 8]  389 	dec	dps
      000160 A3               [12]  390 	inc	dptr
      000161 E0               [ 8]  391 	movx	a,@dptr
      000162 34 00            [ 8]  392 	addc	a,#0x00
      000164 05 86            [ 8]  393 	inc	dps
      000166 A3               [12]  394 	inc	dptr
      000167 F0               [ 8]  395 	movx	@dptr,a
      000168 15 86            [ 8]  396 	dec	dps
      00016A A3               [12]  397 	inc	dptr
      00016B E0               [ 8]  398 	movx	a,@dptr
      00016C 34 00            [ 8]  399 	addc	a,#0x00
      00016E 05 86            [ 8]  400 	inc	dps
      000170 A3               [12]  401 	inc	dptr
      000171 F0               [ 8]  402 	movx	@dptr,a
      000172 75 86 00         [12]  403 	mov	dps,#0
      000175 A3               [12]  404 	inc	dptr
      000176 E0               [ 8]  405 	movx	a,@dptr
      000177 75 86 01         [12]  406 	mov	dps,#1
      00017A A3               [12]  407 	inc	dptr
      00017B F0               [ 8]  408 	movx	@dptr,a
      00017C 75 86 00         [12]  409 	mov	dps,#0
                                    410 ;	c16stombs.c:87: return(m);
      00017F D0 07            [ 8]  411 	pop	ar7
      000181 D0 06            [ 8]  412 	pop	ar6
                                    413 ;	c16stombs.c:64: c16s += 2;
      000183                        414 00108$:
                                    415 ;	c16stombs.c:67: if(!codepoint)
      000183 90s00r00r10      [12]  416 	mov	dptr,#___c16stombs_codepoint_196608_79
      000187 E0               [ 8]  417 	movx	a,@dptr
      000188 F5 F0            [ 8]  418 	mov	b,a
      00018A A3               [12]  419 	inc	dptr
      00018B E0               [ 8]  420 	movx	a,@dptr
      00018C 42 F0            [ 8]  421 	orl	b,a
      00018E A3               [12]  422 	inc	dptr
      00018F E0               [ 8]  423 	movx	a,@dptr
      000190 42 F0            [ 8]  424 	orl	b,a
      000192 A3               [12]  425 	inc	dptr
      000193 E0               [ 8]  426 	movx	a,@dptr
      000194 45 F0            [ 8]  427 	orl	a,b
      000196 70 3E            [12]  428 	jnz  00113$
      000198                        429 00160$:
                                    430 ;	c16stombs.c:69: if(m < n)
      000198 90s00r00r04      [12]  431 	mov	dptr,#___c16stombs_PARM_3
      00019C C3               [ 4]  432 	clr	c
      00019D EE               [ 4]  433 	mov	a,r6
      00019E C5 F0            [ 8]  434 	xch	a, b
      0001A0 E0               [ 8]  435 	movx	a,@dptr
      0001A1 C5 F0            [ 8]  436 	xch	a, b
      0001A3 95 F0            [ 8]  437 	subb	a,b
      0001A5 EF               [ 4]  438 	mov	a,r7
      0001A6 C5 F0            [ 8]  439 	xch	a, b
      0001A8 A3               [12]  440 	inc	dptr
      0001A9 E0               [ 8]  441 	movx	a,@dptr
      0001AA C5 F0            [ 8]  442 	xch	a, b
      0001AC 95 F0            [ 8]  443 	subb	a,b
      0001AE 40 04            [12]  444 	jc	00161$
      0001B0 02s00r02rBE      [16]  445 	ljmp	00118$
      0001B4                        446 00161$:
                                    447 ;	c16stombs.c:70: *s = 0;
      0001B4 90s00r00r06      [12]  448 	mov	dptr,#___c16stombs_s_65536_76
      0001B8 E0               [ 8]  449 	movx	a,@dptr
      0001B9 C0 E0            [ 8]  450 	push	acc
      0001BB A3               [12]  451 	inc	dptr
      0001BC E0               [ 8]  452 	movx	a,@dptr
      0001BD C0 E0            [ 8]  453 	push	acc
      0001BF A3               [12]  454 	inc	dptr
      0001C0 E0               [ 8]  455 	movx	a,@dptr
      0001C1 C0 E0            [ 8]  456 	push	acc
      0001C3 A3               [12]  457 	inc	dptr
      0001C4 E0               [ 8]  458 	movx	a,@dptr
      0001C5 F5 F0            [ 8]  459 	mov	b,a
      0001C7 D0 93            [ 8]  460 	pop	dpx
      0001C9 D0 83            [ 8]  461 	pop	dph
      0001CB D0 82            [ 8]  462 	pop	dpl
      0001CD E4               [ 4]  463 	clr	a
      0001CE 12s00r00r00      [16]  464 	lcall	__gptrput
                                    465 ;	c16stombs.c:71: break;
      0001D2 02s00r02rBE      [16]  466 	ljmp	00118$
      0001D6                        467 00113$:
                                    468 ;	c16stombs.c:74: l = wctomb(b, codepoint);
      0001D6 90s00r00r10      [12]  469 	mov	dptr,#___c16stombs_codepoint_196608_79
                                    470 ;	genAssign: resultIsFar = TRUE
      0001DA 75 86 21         [12]  471 	mov	dps,#0x21
      0001DD 90s00r00r00      [12]  472 	mov	dptr,#_wctomb_PARM_2
      0001E1 E0               [ 8]  473 	movx	a,@dptr
      0001E2 F0               [ 8]  474 	movx	@dptr,a
      0001E3 A3               [12]  475 	inc	dptr
      0001E4 A3               [12]  476 	inc	dptr
      0001E5 E0               [ 8]  477 	movx	a,@dptr
      0001E6 F0               [ 8]  478 	movx	@dptr,a
      0001E7 A3               [12]  479 	inc	dptr
      0001E8 A3               [12]  480 	inc	dptr
      0001E9 E0               [ 8]  481 	movx	a,@dptr
      0001EA F0               [ 8]  482 	movx	@dptr,a
      0001EB A3               [12]  483 	inc	dptr
      0001EC A3               [12]  484 	inc	dptr
      0001ED E0               [ 8]  485 	movx	a,@dptr
      0001EE F0               [ 8]  486 	movx	@dptr,a
      0001EF 75 86 00         [12]  487 	mov	dps,#0
      0001F2 C0 06            [ 8]  488 	push	ar6
      0001F4 C0 07            [ 8]  489 	push	ar7
      0001F6 90s00r00r0A      [12]  490 	mov dptr,#___c16stombs_b_65536_77
      0001FA 75 F0 00         [12]  491 	mov	b,#0x00
      0001FD 12s00r00r00      [16]  492 	lcall	_wctomb
      000201 AA 82            [ 8]  493 	mov	r2,dpl
      000203 AB 83            [ 8]  494 	mov	r3,dph
      000205 D0 07            [ 8]  495 	pop	ar7
      000207 D0 06            [ 8]  496 	pop	ar6
                                    497 ;	genAssign: resultIsFar = TRUE
      000209 90s00r00r0E      [12]  498 	mov	dptr,#___c16stombs_l_196608_79
      00020D EA               [ 4]  499 	mov	a,r2
      00020E F0               [ 8]  500 	movx	@dptr,a
      00020F A3               [12]  501 	inc	dptr
      000210 EB               [ 4]  502 	mov	a,r3
      000211 F0               [ 8]  503 	movx	@dptr,a
                                    504 ;	c16stombs.c:76: if(l < 0)
      000212 90s00r00r0E      [12]  505 	mov	dptr,#___c16stombs_l_196608_79
      000216 A3               [12]  506 	inc	dptr
      000217 E0               [ 8]  507 	movx	a,@dptr
      000218 30 E7 08         [12]  508 	jnb  acc[7],00115$
      00021B                        509 00162$:
                                    510 ;	c16stombs.c:77: return(-1);
      00021B 90 00 FF FF      [12]  511 	mov  dptr,#0xffff
      00021F 02s00r02rC2      [16]  512 	ljmp	00121$
      000223                        513 00115$:
                                    514 ;	c16stombs.c:79: if(m + l > n)
      000223 90s00r00r0E      [12]  515 	mov	dptr,#___c16stombs_l_196608_79
      000227 E0               [ 8]  516 	movx	a,@dptr
      000228 FC               [ 4]  517 	mov	r4,a
      000229 A3               [12]  518 	inc	dptr
      00022A E0               [ 8]  519 	movx	a,@dptr
      00022B FD               [ 4]  520 	mov	r5,a
      00022C EC               [ 4]  521 	mov	a,r4
      00022D 2E               [ 4]  522 	add	a,r6
      00022E F8               [ 4]  523 	mov	r0,a
      00022F ED               [ 4]  524 	mov	a,r5
      000230 3F               [ 4]  525 	addc	a,r7
      000231 F9               [ 4]  526 	mov	r1,a
      000232 90s00r00r04      [12]  527 	mov	dptr,#___c16stombs_PARM_3
      000236 C3               [ 4]  528 	clr	c
      000237 E0               [ 8]  529 	movx	a,@dptr
      000238 98               [ 4]  530 	subb	a,r0
      000239 A3               [12]  531 	inc	dptr
      00023A E0               [ 8]  532 	movx	a,@dptr
      00023B 99               [ 4]  533 	subb	a,r1
      00023C 50 04            [12]  534 	jnc	00163$
      00023E 02s00r02rBE      [16]  535 	ljmp	00118$
      000242                        536 00163$:
                                    537 ;	c16stombs.c:82: memcpy(s, b, l);
      000242 90s00r00r06      [12]  538 	mov	dptr,#___c16stombs_s_65536_76
                                    539 ;	genAssign: resultIsFar = FALSE
      000246 E0               [ 8]  540 	movx	a,@dptr
      000247 F8               [ 4]  541 	mov	r0,a
      000248 A3               [12]  542 	inc	dptr
      000249 E0               [ 8]  543 	movx	a,@dptr
      00024A F9               [ 4]  544 	mov	r1,a
      00024B A3               [12]  545 	inc	dptr
      00024C E0               [ 8]  546 	movx	a,@dptr
      00024D FA               [ 4]  547 	mov	r2,a
      00024E A3               [12]  548 	inc	dptr
      00024F E0               [ 8]  549 	movx	a,@dptr
      000250 FB               [ 4]  550 	mov	r3,a
      000251 90s00r00r00      [12]  551 	mov	dptr,#___memcpy_PARM_2
      000255 74r0A            [ 8]  552 	mov	a,#___c16stombs_b_65536_77
      000257 F0               [ 8]  553 	movx	@dptr,a
      000258 A3               [12]  554 	inc	dptr
      000259 74s00            [ 8]  555 	mov	a,#(___c16stombs_b_65536_77 >> 8)
      00025B F0               [ 8]  556 	movx	@dptr,a
      00025C A3               [12]  557 	inc	dptr
      00025D 74s00            [ 8]  558 	mov	a,#(___c16stombs_b_65536_77 >> 16)
      00025F F0               [ 8]  559 	movx	@dptr,a
      000260 A3               [12]  560 	inc	dptr
      000261 E4               [ 4]  561 	clr	a
      000262 F0               [ 8]  562 	movx	@dptr,a
      000263 90s00r00r0E      [12]  563 	mov	dptr,#___c16stombs_l_196608_79
                                    564 ;	genAssign: resultIsFar = TRUE
      000267 75 86 21         [12]  565 	mov	dps,#0x21
      00026A 90s00r00r00      [12]  566 	mov	dptr,#___memcpy_PARM_3
      00026E E0               [ 8]  567 	movx	a,@dptr
      00026F F0               [ 8]  568 	movx	@dptr,a
      000270 A3               [12]  569 	inc	dptr
      000271 A3               [12]  570 	inc	dptr
      000272 E0               [ 8]  571 	movx	a,@dptr
      000273 F0               [ 8]  572 	movx	@dptr,a
      000274 75 86 00         [12]  573 	mov	dps,#0
      000277 C0 04            [ 8]  574 	push	ar4
      000279 C0 05            [ 8]  575 	push	ar5
      00027B C0 06            [ 8]  576 	push	ar6
      00027D C0 07            [ 8]  577 	push	ar7
      00027F 88 82            [ 8]  578 	mov	dpl,r0
      000281 89 83            [ 8]  579 	mov	dph,r1
      000283 8A 93            [ 8]  580 	mov	dpx,r2
      000285 8B F0            [ 8]  581 	mov	b,r3
      000287 12s00r00r00      [16]  582 	lcall	___memcpy
      00028B D0 07            [ 8]  583 	pop	ar7
      00028D D0 06            [ 8]  584 	pop	ar6
      00028F D0 05            [ 8]  585 	pop	ar5
      000291 D0 04            [ 8]  586 	pop	ar4
                                    587 ;	c16stombs.c:83: s += l;
      000293 90s00r00r0E      [12]  588 	mov	dptr,#___c16stombs_l_196608_79
      000297 E0               [ 8]  589 	movx	a,@dptr
      000298 FA               [ 4]  590 	mov	r2,a
      000299 A3               [12]  591 	inc	dptr
      00029A E0               [ 8]  592 	movx	a,@dptr
      00029B FB               [ 4]  593 	mov	r3,a
      00029C E0               [ 8]  594 	movx	a,@dptr
      00029D 33               [ 4]  595 	rlc	a
      00029E 95 E0            [ 8]  596 	subb	a,acc
      0002A0 F8               [ 4]  597 	mov	r0,a
      0002A1 F9               [ 4]  598 	mov	r1,a
      0002A2 90s00r00r06      [12]  599 	mov	dptr,#___c16stombs_s_65536_76
      0002A6 E0               [ 8]  600 	movx	a,@dptr
      0002A7 2A               [ 4]  601 	add	a,r2
      0002A8 F0               [ 8]  602 	movx	@dptr,a
      0002A9 A3               [12]  603 	inc	dptr
      0002AA E0               [ 8]  604 	movx	a,@dptr
      0002AB 3B               [ 4]  605 	addc	a,r3
      0002AC F0               [ 8]  606 	movx	@dptr,a
      0002AD A3               [12]  607 	inc	dptr
      0002AE E0               [ 8]  608 	movx	a,@dptr
      0002AF 38               [ 4]  609 	addc	a,r0
      0002B0 F0               [ 8]  610 	movx	@dptr,a
      0002B1 A3               [12]  611 	inc	dptr
      0002B2 E0               [ 8]  612 	movx	a,@dptr
      0002B3 F0               [ 8]  613 	movx	@dptr,a
                                    614 ;	c16stombs.c:84: m += l;
      0002B4 EC               [ 4]  615 	mov	a,r4
      0002B5 2E               [ 4]  616 	add	a,r6
      0002B6 FE               [ 4]  617 	mov	r6,a
      0002B7 ED               [ 4]  618 	mov	a,r5
      0002B8 3F               [ 4]  619 	addc	a,r7
      0002B9 FF               [ 4]  620 	mov	r7,a
      0002BA 02s00r00r1D      [16]  621 	ljmp	00119$
      0002BE                        622 00118$:
                                    623 ;	c16stombs.c:87: return(m);
      0002BE 8E 82            [ 8]  624 	mov	dpl,r6
      0002C0 8F 83            [ 8]  625 	mov	dph,r7
      0002C2                        626 00121$:
                                    627 ;	c16stombs.c:88: }
      0002C2 22               [16]  628 	ret
                                    629 	.area CSEG    (CODE)
                                    630 	.area CONST   (CODE)
                                    631 	.area XINIT   (CODE)
                                    632 	.area CABS    (ABS,CODE)
