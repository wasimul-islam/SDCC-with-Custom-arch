                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module abs
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _abs
                                     35 ;--------------------------------------------------------
                                     36 ; special function registers
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; special function bits
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; overlayable register banks
                                     43 ;--------------------------------------------------------
                                     44 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         45 	.ds 8
                                     46 ;--------------------------------------------------------
                                     47 ; internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DSEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; overlayable items in internal ram
                                     52 ;--------------------------------------------------------
                                     53 ;--------------------------------------------------------
                                     54 ; indirectly addressable internal ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area ISEG    (DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute internal ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area IABS    (ABS,DATA)
                                     61 	.area IABS    (ABS,DATA)
                                     62 ;--------------------------------------------------------
                                     63 ; bit data
                                     64 ;--------------------------------------------------------
                                     65 	.area BSEG    (BIT)
                                     66 ;--------------------------------------------------------
                                     67 ; paged external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area PSEG    (PAG,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; uninitialized external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XSEG    (XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; absolute external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XABS    (ABS,XDATA)
                                     78 ;--------------------------------------------------------
                                     79 ; initialized external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XISEG   (XDATA)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'abs'
                                    100 ;------------------------------------------------------------
                                    101 ;j                         Allocated to registers r2 r3 
                                    102 ;------------------------------------------------------------
                                    103 ;	abs.c:54: int abs(int j)
                                    104 ;	-----------------------------------------
                                    105 ;	 function abs
                                    106 ;	-----------------------------------------
      000000                        107 _abs:
                           000002   108 	ar2 = 0x02
                           000003   109 	ar3 = 0x03
                           000004   110 	ar4 = 0x04
                           000005   111 	ar5 = 0x05
                           000006   112 	ar6 = 0x06
                           000007   113 	ar7 = 0x07
                           000000   114 	ar0 = 0x00
                           000001   115 	ar1 = 0x01
      000000 85 82 84         [12]  116 	mov	dpl1,dpl
      000003 85 83 85         [12]  117 	mov	dph1,dph
                                    118 ;	abs.c:56: return (j < 0) ? -j : j;
      000006 E5 85            [ 8]  119 	mov	a,dph1
      000008 30 E7 0D         [12]  120 	jnb  acc[7],00103$
      00000B                        121 00109$:
      00000B C3               [ 4]  122 	clr	c
      00000C E4               [ 4]  123 	clr	a
      00000D 95 84            [ 8]  124 	subb	a,dpl1
      00000F F5 82            [ 8]  125 	mov	dpl,a
      000011 E4               [ 4]  126 	clr	a
      000012 95 85            [ 8]  127 	subb	a,dph1
      000014 F5 83            [ 8]  128 	mov	dph,a
      000016 80 06            [12]  129 	sjmp 00104$
      000018                        130 00103$:
                                    131 ;	genAssign: resultIsFar = FALSE
      000018 85 84 82         [12]  132 	mov	dpl,dpl1
      00001B 85 85 83         [12]  133 	mov	dph,dph1
      00001E                        134 00104$:
      00001E                        135 00101$:
                                    136 ;	abs.c:57: }
      00001E 22               [16]  137 	ret
                                    138 	.area CSEG    (CODE)
                                    139 	.area CONST   (CODE)
                                    140 	.area XINIT   (CODE)
                                    141 	.area CABS    (ABS,CODE)
