                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strcspn
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _strchr
                                     35 	.globl _strcspn_PARM_2
                                     36 	.globl _strcspn
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; special function bits
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; overlayable register banks
                                     45 ;--------------------------------------------------------
                                     46 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         47 	.ds 8
                                     48 ;--------------------------------------------------------
                                     49 ; internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area DSEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; overlayable items in internal ram
                                     54 ;--------------------------------------------------------
                                     55 ;--------------------------------------------------------
                                     56 ; indirectly addressable internal ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area ISEG    (DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; absolute internal ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area IABS    (ABS,DATA)
                                     63 	.area IABS    (ABS,DATA)
                                     64 ;--------------------------------------------------------
                                     65 ; bit data
                                     66 ;--------------------------------------------------------
                                     67 	.area BSEG    (BIT)
                                     68 ;--------------------------------------------------------
                                     69 ; paged external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area PSEG    (PAG,XDATA)
                                     72 ;--------------------------------------------------------
                                     73 ; uninitialized external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XSEG    (XDATA)
      000000                         76 _strcspn_PARM_2:
      000000                         77 	.ds 4
                                     78 ;--------------------------------------------------------
                                     79 ; absolute external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XABS    (ABS,XDATA)
                                     82 ;--------------------------------------------------------
                                     83 ; initialized external ram data
                                     84 ;--------------------------------------------------------
                                     85 	.area XISEG   (XDATA)
                                     86 ;--------------------------------------------------------
                                     87 ; global & static initialisations
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; Home
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area HOME    (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; code
                                    100 ;--------------------------------------------------------
                                    101 	.area CSEG    (CODE)
                                    102 ;------------------------------------------------------------
                                    103 ;Allocation info for local variables in function 'strcspn'
                                    104 ;------------------------------------------------------------
                                    105 ;count                     Allocated to registers r6 r7 
                                    106 ;ch                        Allocated to registers r1 
                                    107 ;control                   Allocated with name '_strcspn_PARM_2'
                                    108 ;string                    Allocated to registers 
                                    109 ;------------------------------------------------------------
                                    110 ;	_strcspn.c:31: size_t strcspn ( const char * string, const char * control )
                                    111 ;	-----------------------------------------
                                    112 ;	 function strcspn
                                    113 ;	-----------------------------------------
      000000                        114 _strcspn:
                           000002   115 	ar2 = 0x02
                           000003   116 	ar3 = 0x03
                           000004   117 	ar4 = 0x04
                           000005   118 	ar5 = 0x05
                           000006   119 	ar6 = 0x06
                           000007   120 	ar7 = 0x07
                           000000   121 	ar0 = 0x00
                           000001   122 	ar1 = 0x01
      000000 AA 82            [ 8]  123 	mov	r2,dpl
      000002 AB 83            [ 8]  124 	mov	r3,dph
      000004 AC 93            [ 8]  125 	mov	r4,dpx
      000006 AD F0            [ 8]  126 	mov	r5,b
                                    127 ;	_strcspn.c:36: while (ch = *string) {
                                    128 ;	genAssign: resultIsFar = FALSE
      000008 7E 00            [ 8]  129 	mov	r6,#0x00
      00000A 7F 00            [ 8]  130 	mov	r7,#0x00
      00000C                        131 00104$:
      00000C 8A 82            [ 8]  132 	mov	dpl,r2
      00000E 8B 83            [ 8]  133 	mov	dph,r3
      000010 8C 93            [ 8]  134 	mov	dpx,r4
      000012 8D F0            [ 8]  135 	mov	b,r5
      000014 12s00r00r00      [16]  136 	lcall	__gptrget
                                    137 ;	genAssign: resultIsFar = FALSE
      000018 F8               [ 4]  138 	mov  r0,a
      000019 88 01            [ 8]  139 	mov  ar1,r0 
      00001B 60 52            [12]  140 	jz  00106$
      00001D                        141 00122$:
                                    142 ;	_strcspn.c:37: if (strchr(control,ch))
                                    143 ;	genAssign: resultIsFar = TRUE
      00001D 90s00r00r00      [12]  144 	mov	dptr,#_strchr_PARM_2
      000021 E9               [ 4]  145 	mov	a,r1
      000022 F0               [ 8]  146 	movx	@dptr,a
      000023 C0 02            [ 8]  147 	push	ar2
      000025 C0 03            [ 8]  148 	push	ar3
      000027 C0 04            [ 8]  149 	push	ar4
      000029 C0 05            [ 8]  150 	push	ar5
      00002B C0 06            [ 8]  151 	push	ar6
      00002D C0 07            [ 8]  152 	push	ar7
      00002F 05 86            [ 8]  153 	inc	dps
      000031 90s00r00r00      [12]  154 	mov	dptr,#_strcspn_PARM_2
      000035 E0               [ 8]  155 	movx	a,@dptr
      000036 F5 82            [ 8]  156 	mov	dpl,a
      000038 A3               [12]  157 	inc	dptr
      000039 E0               [ 8]  158 	movx	a,@dptr
      00003A F5 83            [ 8]  159 	mov	dph,a
      00003C A3               [12]  160 	inc	dptr
      00003D E0               [ 8]  161 	movx	a,@dptr
      00003E F5 93            [ 8]  162 	mov	dpx,a
      000040 A3               [12]  163 	inc	dptr
      000041 E0               [ 8]  164 	movx	a,@dptr
      000042 F5 F0            [ 8]  165 	mov	b,a
      000044 75 86 00         [12]  166 	mov	dps,#0
      000047 12s00r00r00      [16]  167 	lcall	_strchr
      00004B D0 07            [ 8]  168 	pop	ar7
      00004D D0 06            [ 8]  169 	pop	ar6
      00004F D0 05            [ 8]  170 	pop	ar5
      000051 D0 04            [ 8]  171 	pop	ar4
      000053 D0 03            [ 8]  172 	pop	ar3
      000055 D0 02            [ 8]  173 	pop	ar2
      000057 E5 82            [ 8]  174 	mov	a,dpl
      000059 45 83            [ 8]  175 	orl	a,dph
      00005B 45 93            [ 8]  176 	orl	a,dpx
      00005D 70 10            [12]  177 	jnz  00106$
      00005F                        178 00123$:
                                    179 ;	_strcspn.c:40: count++;
      00005F 0E               [ 4]  180 	inc	r6
      000060 BE 00 01         [16]  181 	cjne	r6,#0x00,00124$
      000063 0F               [ 4]  182 	inc	r7
      000064                        183 00124$:
                                    184 ;	_strcspn.c:41: string++;
      000064 0A               [ 4]  185 	inc	r2
      000065 BA 00 05         [16]  186 	cjne	r2,#0x00,00125$
      000068 0B               [ 4]  187 	inc	r3
      000069 BB 00 01         [16]  188 	cjne	r3,#0x00,00125$
      00006C 0C               [ 4]  189 	inc	r4
      00006D                        190 00125$:
      00006D 80 9D            [12]  191 	sjmp 00104$
      00006F                        192 00106$:
                                    193 ;	_strcspn.c:44: return count;
      00006F 8E 82            [ 8]  194 	mov	dpl,r6
      000071 8F 83            [ 8]  195 	mov	dph,r7
      000073                        196 00107$:
                                    197 ;	_strcspn.c:45: }  
      000073 22               [16]  198 	ret
                                    199 	.area CSEG    (CODE)
                                    200 	.area CONST   (CODE)
                                    201 	.area XINIT   (CODE)
                                    202 	.area CABS    (ABS,CODE)
