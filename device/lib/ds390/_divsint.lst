                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divsint
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __divsint_PARM_2
                                     35 	.globl __divsint
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; uninitialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
      000000                         75 __divsint_PARM_2:
      000000                         76 	.ds 2
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XABS    (ABS,XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; initialized external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XISEG   (XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function '_divsint'
                                    103 ;------------------------------------------------------------
                                    104 ;r                         Allocated to registers r2 r3 
                                    105 ;y                         Allocated with name '__divsint_PARM_2'
                                    106 ;x                         Allocated to registers r2 r3 
                                    107 ;------------------------------------------------------------
                                    108 ;	_divsint.c:213: _divsint (int x, int y) __SDCC_NONBANKED
                                    109 ;	-----------------------------------------
                                    110 ;	 function _divsint
                                    111 ;	-----------------------------------------
      000000                        112 __divsint:
                           000002   113 	ar2 = 0x02
                           000003   114 	ar3 = 0x03
                           000004   115 	ar4 = 0x04
                           000005   116 	ar5 = 0x05
                           000006   117 	ar6 = 0x06
                           000007   118 	ar7 = 0x07
                           000000   119 	ar0 = 0x00
                           000001   120 	ar1 = 0x01
                                    121 ;	_divsint.c:217: r = (unsigned int)(x < 0 ? -x : x) / (unsigned int)(y < 0 ? -y : y);
      000000 E5 83            [ 8]  122 	mov	a,dph
      000002 33               [ 4]  123 	rlc	a
      000003 E4               [ 4]  124 	clr	a
      000004 33               [ 4]  125 	rlc	a
      000005 FC               [ 4]  126 	mov  r4,a
      000006 60 0B            [12]  127 	jz  00106$
      000008                        128 00122$:
      000008 C3               [ 4]  129 	clr	c
      000009 E4               [ 4]  130 	clr	a
      00000A 95 82            [ 8]  131 	subb	a,dpl
      00000C FD               [ 4]  132 	mov	r5,a
      00000D E4               [ 4]  133 	clr	a
      00000E 95 83            [ 8]  134 	subb	a,dph
      000010 FE               [ 4]  135 	mov	r6,a
      000011 80 04            [12]  136 	sjmp 00107$
      000013                        137 00106$:
                                    138 ;	genAssign: resultIsFar = FALSE
      000013 AD 82            [ 8]  139 	mov	r5,dpl
      000015 AE 83            [ 8]  140 	mov	r6,dph
      000017                        141 00107$:
      000017 8D 02            [ 8]  142 	mov	ar2,r5
      000019 8E 03            [ 8]  143 	mov	ar3,r6
      00001B 90s00r00r00      [12]  144 	mov	dptr,#__divsint_PARM_2
      00001F A3               [12]  145 	inc	dptr
      000020 E0               [ 8]  146 	movx	a,@dptr
      000021 33               [ 4]  147 	rlc	a
      000022 E4               [ 4]  148 	clr	a
      000023 33               [ 4]  149 	rlc	a
      000024 FD               [ 4]  150 	mov  r5,a
      000025 60 12            [12]  151 	jz  00108$
      000027                        152 00123$:
      000027 90s00r00r00      [12]  153 	mov	dptr,#__divsint_PARM_2
      00002B E0               [ 8]  154 	movx	a,@dptr
      00002C D3               [ 4]  155 	setb	c
      00002D F4               [ 4]  156 	cpl	a
      00002E 34 00            [ 8]  157 	addc	a,#0x00
      000030 FE               [ 4]  158 	mov	r6,a
      000031 A3               [12]  159 	inc	dptr
      000032 E0               [ 8]  160 	movx	a,@dptr
      000033 F4               [ 4]  161 	cpl	a
      000034 34 00            [ 8]  162 	addc	a,#0x00
      000036 FF               [ 4]  163 	mov	r7,a
      000037 80 09            [12]  164 	sjmp 00109$
      000039                        165 00108$:
      000039 90s00r00r00      [12]  166 	mov	dptr,#__divsint_PARM_2
                                    167 ;	genAssign: resultIsFar = FALSE
      00003D E0               [ 8]  168 	movx	a,@dptr
      00003E FE               [ 4]  169 	mov	r6,a
      00003F A3               [12]  170 	inc	dptr
      000040 E0               [ 8]  171 	movx	a,@dptr
      000041 FF               [ 4]  172 	mov	r7,a
      000042                        173 00109$:
      000042 90s00r00r00      [12]  174 	mov	dptr,#__divuint_PARM_2
      000046 EE               [ 4]  175 	mov	a,r6
      000047 F0               [ 8]  176 	movx	@dptr,a
      000048 A3               [12]  177 	inc	dptr
      000049 EF               [ 4]  178 	mov	a,r7
      00004A F0               [ 8]  179 	movx	@dptr,a
      00004B C0 04            [ 8]  180 	push	ar4
      00004D C0 05            [ 8]  181 	push	ar5
      00004F 8A 82            [ 8]  182 	mov	dpl,r2
      000051 8B 83            [ 8]  183 	mov	dph,r3
      000053 12s00r00r00      [16]  184 	lcall	__divuint
      000057 AA 82            [ 8]  185 	mov	r2,dpl
      000059 AB 83            [ 8]  186 	mov	r3,dph
      00005B D0 05            [ 8]  187 	pop	ar5
      00005D D0 04            [ 8]  188 	pop	ar4
                                    189 ;	genAssign: resultIsFar = FALSE
      00005F 8A 82            [ 8]  190 	mov	dpl,r2
      000061 8B 83            [ 8]  191 	mov	dph,r3
                                    192 ;	_divsint.c:218: if ((x < 0) ^ (y < 0))
      000063 EC               [ 4]  193 	mov	a,r4
      000064 6D               [ 4]  194 	xrl	a,r5
      000065 60 11            [12]  195 	jz  00102$
      000067                        196 00124$:
                                    197 ;	_divsint.c:219: return -r;
      000067 C3               [ 4]  198 	clr	c
      000068 E4               [ 4]  199 	clr	a
      000069 95 82            [ 8]  200 	subb	a,dpl
      00006B F5 84            [ 8]  201 	mov	dpl1,a
      00006D E4               [ 4]  202 	clr	a
      00006E 95 83            [ 8]  203 	subb	a,dph
      000070 F5 85            [ 8]  204 	mov	dph1,a
      000072 85 84 82         [12]  205 	mov	dpl,dpl1
      000075 85 85 83         [12]  206 	mov	dph,dph1
                                    207 ;	_divsint.c:221: return r;
      000078                        208 00102$:
      000078                        209 00104$:
                                    210 ;	_divsint.c:222: }
      000078 22               [16]  211 	ret
                                    212 	.area CSEG    (CODE)
                                    213 	.area CONST   (CODE)
                                    214 	.area XINIT   (CODE)
                                    215 	.area CABS    (ABS,CODE)
