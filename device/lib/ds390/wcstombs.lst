                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module wcstombs
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _wctomb
                                     35 	.globl _wcstombs_PARM_3
                                     36 	.globl _wcstombs_PARM_2
                                     37 	.globl _wcstombs
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; uninitialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 _wcstombs_PARM_2:
      000000                         78 	.ds 4
      000004                         79 _wcstombs_PARM_3:
      000004                         80 	.ds 2
      000006                         81 _wcstombs_s_65536_36:
      000006                         82 	.ds 4
      00000A                         83 _wcstombs_m_65536_37:
      00000A                         84 	.ds 2
      00000C                         85 _wcstombs_buffer_65536_37:
      00000C                         86 	.ds 4
                                     87 ;--------------------------------------------------------
                                     88 ; absolute external ram data
                                     89 ;--------------------------------------------------------
                                     90 	.area XABS    (ABS,XDATA)
                                     91 ;--------------------------------------------------------
                                     92 ; initialized external ram data
                                     93 ;--------------------------------------------------------
                                     94 	.area XISEG   (XDATA)
                                     95 ;--------------------------------------------------------
                                     96 ; global & static initialisations
                                     97 ;--------------------------------------------------------
                                     98 	.area HOME    (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 	.area GSFINAL (CODE)
                                    101 	.area GSINIT  (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; Home
                                    104 ;--------------------------------------------------------
                                    105 	.area HOME    (CODE)
                                    106 	.area HOME    (CODE)
                                    107 ;--------------------------------------------------------
                                    108 ; code
                                    109 ;--------------------------------------------------------
                                    110 	.area CSEG    (CODE)
                                    111 ;------------------------------------------------------------
                                    112 ;Allocation info for local variables in function 'wcstombs'
                                    113 ;------------------------------------------------------------
                                    114 ;pwcs                      Allocated with name '_wcstombs_PARM_2'
                                    115 ;n                         Allocated with name '_wcstombs_PARM_3'
                                    116 ;s                         Allocated with name '_wcstombs_s_65536_36'
                                    117 ;m                         Allocated with name '_wcstombs_m_65536_37'
                                    118 ;buffer                    Allocated with name '_wcstombs_buffer_65536_37'
                                    119 ;b                         Allocated to registers r2 r3 
                                    120 ;------------------------------------------------------------
                                    121 ;	wcstombs.c:33: size_t wcstombs(char *restrict s, const wchar_t *restrict pwcs, size_t n)
                                    122 ;	-----------------------------------------
                                    123 ;	 function wcstombs
                                    124 ;	-----------------------------------------
      000000                        125 _wcstombs:
                           000002   126 	ar2 = 0x02
                           000003   127 	ar3 = 0x03
                           000004   128 	ar4 = 0x04
                           000005   129 	ar5 = 0x05
                           000006   130 	ar6 = 0x06
                           000007   131 	ar7 = 0x07
                           000000   132 	ar0 = 0x00
                           000001   133 	ar1 = 0x01
      000000 75 86 01         [12]  134 	mov     dps, #1
      000003 90s00r00r06      [12]  135 	mov     dptr, #_wcstombs_s_65536_36
      000007 E5 82            [ 8]  136 	mov	a,dpl
      000009 F0               [ 8]  137 	movx	@dptr,a
      00000A A3               [12]  138 	inc	dptr
      00000B E5 83            [ 8]  139 	mov	a,dph
      00000D F0               [ 8]  140 	movx	@dptr,a
      00000E A3               [12]  141 	inc	dptr
      00000F E5 93            [ 8]  142 	mov	a,dpx
      000011 F0               [ 8]  143 	movx	@dptr,a
      000012 A3               [12]  144 	inc	dptr
      000013 E5 F0            [ 8]  145 	mov	a,b
      000015 F0               [ 8]  146 	movx	@dptr,a
      000016 75 86 00         [12]  147 	mov	dps,#0
                                    148 ;	wcstombs.c:35: size_t m = 0;
                                    149 ;	genAssign: resultIsFar = TRUE
      000019 90s00r00r0A      [12]  150 	mov	dptr,#_wcstombs_m_65536_37
      00001D E4               [ 4]  151 	clr	a
      00001E F0               [ 8]  152 	movx	@dptr,a
      00001F A3               [12]  153 	inc	dptr
      000020 F0               [ 8]  154 	movx	@dptr,a
                                    155 ;	wcstombs.c:38: while(n > MB_LEN_MAX || n >= wctomb(buffer, *pwcs))
      000021 90s00r00r00      [12]  156 	mov	dptr,#_wcstombs_PARM_2
                                    157 ;	genAssign: resultIsFar = FALSE
      000025 E0               [ 8]  158 	movx	a,@dptr
      000026 F8               [ 4]  159 	mov	r0,a
      000027 A3               [12]  160 	inc	dptr
      000028 E0               [ 8]  161 	movx	a,@dptr
      000029 F9               [ 4]  162 	mov	r1,a
      00002A A3               [12]  163 	inc	dptr
      00002B E0               [ 8]  164 	movx	a,@dptr
      00002C FE               [ 4]  165 	mov	r6,a
      00002D A3               [12]  166 	inc	dptr
      00002E E0               [ 8]  167 	movx	a,@dptr
      00002F FF               [ 4]  168 	mov	r7,a
      000030                        169 00107$:
      000030 90s00r00r04      [12]  170 	mov	dptr,#_wcstombs_PARM_3
      000034 C3               [ 4]  171 	clr	c
      000035 74 04            [ 8]  172 	mov	a,#0x04
      000037 C5 F0            [ 8]  173 	xch	a, b
      000039 E0               [ 8]  174 	movx	a,@dptr
      00003A C5 F0            [ 8]  175 	xch	a, b
      00003C 95 F0            [ 8]  176 	subb	a,b
      00003E E4               [ 4]  177 	clr	a
      00003F C5 F0            [ 8]  178 	xch	a, b
      000041 A3               [12]  179 	inc	dptr
      000042 E0               [ 8]  180 	movx	a,@dptr
      000043 C5 F0            [ 8]  181 	xch	a, b
      000045 95 F0            [ 8]  182 	subb	a,b
      000047 40 55            [12]  183 	jc   00108$
      000049                        184 00128$:
      000049 88 82            [ 8]  185 	mov	dpl,r0
      00004B 89 83            [ 8]  186 	mov	dph,r1
      00004D 8E 93            [ 8]  187 	mov	dpx,r6
      00004F 8F F0            [ 8]  188 	mov	b,r7
      000051 12s00r00r00      [16]  189 	lcall	__gptrgetWord
      000055 FA               [ 4]  190 	mov	r2,a
      000056 AB 9C            [ 8]  191 	mov	r3,acc1
      000058 A3               [12]  192 	inc	dptr
      000059 12s00r00r00      [16]  193 	lcall	__gptrgetWord
      00005D FC               [ 4]  194 	mov	r4,a
      00005E AD 9C            [ 8]  195 	mov	r5,acc1
                                    196 ;	genAssign: resultIsFar = TRUE
      000060 90s00r00r00      [12]  197 	mov	dptr,#_wctomb_PARM_2
      000064 EA               [ 4]  198 	mov	a,r2
      000065 F0               [ 8]  199 	movx	@dptr,a
      000066 A3               [12]  200 	inc	dptr
      000067 EB               [ 4]  201 	mov	a,r3
      000068 F0               [ 8]  202 	movx	@dptr,a
      000069 A3               [12]  203 	inc	dptr
      00006A EC               [ 4]  204 	mov	a,r4
      00006B F0               [ 8]  205 	movx	@dptr,a
      00006C A3               [12]  206 	inc	dptr
      00006D ED               [ 4]  207 	mov	a,r5
      00006E F0               [ 8]  208 	movx	@dptr,a
      00006F C0 06            [ 8]  209 	push	ar6
      000071 C0 07            [ 8]  210 	push	ar7
      000073 C0 00            [ 8]  211 	push	ar0
      000075 C0 01            [ 8]  212 	push	ar1
      000077 90s00r00r0C      [12]  213 	mov dptr,#_wcstombs_buffer_65536_37
      00007B 75 F0 00         [12]  214 	mov	b,#0x00
      00007E 12s00r00r00      [16]  215 	lcall	_wctomb
      000082 AA 82            [ 8]  216 	mov	r2,dpl
      000084 AB 83            [ 8]  217 	mov	r3,dph
      000086 D0 01            [ 8]  218 	pop	ar1
      000088 D0 00            [ 8]  219 	pop	ar0
      00008A D0 07            [ 8]  220 	pop	ar7
      00008C D0 06            [ 8]  221 	pop	ar6
      00008E 90s00r00r04      [12]  222 	mov	dptr,#_wcstombs_PARM_3
      000092 C3               [ 4]  223 	clr	c
      000093 E0               [ 8]  224 	movx	a,@dptr
      000094 9A               [ 4]  225 	subb	a,r2
      000095 A3               [12]  226 	inc	dptr
      000096 E0               [ 8]  227 	movx	a,@dptr
      000097 9B               [ 4]  228 	subb	a,r3
      000098 50 04            [12]  229 	jnc	00129$
      00009A 02s00r01r65      [16]  230 	ljmp	00109$
      00009E                        231 00129$:
      00009E                        232 00108$:
                                    233 ;	wcstombs.c:40: int b = wctomb(s, *pwcs);
      00009E 88 82            [ 8]  234 	mov	dpl,r0
      0000A0 89 83            [ 8]  235 	mov	dph,r1
      0000A2 8E 93            [ 8]  236 	mov	dpx,r6
      0000A4 8F F0            [ 8]  237 	mov	b,r7
      0000A6 12s00r00r00      [16]  238 	lcall	__gptrgetWord
      0000AA FA               [ 4]  239 	mov	r2,a
      0000AB AB 9C            [ 8]  240 	mov	r3,acc1
      0000AD A3               [12]  241 	inc	dptr
      0000AE 12s00r00r00      [16]  242 	lcall	__gptrgetWord
      0000B2 FC               [ 4]  243 	mov	r4,a
      0000B3 AD 9C            [ 8]  244 	mov	r5,acc1
                                    245 ;	genAssign: resultIsFar = TRUE
      0000B5 90s00r00r00      [12]  246 	mov	dptr,#_wctomb_PARM_2
      0000B9 EA               [ 4]  247 	mov	a,r2
      0000BA F0               [ 8]  248 	movx	@dptr,a
      0000BB A3               [12]  249 	inc	dptr
      0000BC EB               [ 4]  250 	mov	a,r3
      0000BD F0               [ 8]  251 	movx	@dptr,a
      0000BE A3               [12]  252 	inc	dptr
      0000BF EC               [ 4]  253 	mov	a,r4
      0000C0 F0               [ 8]  254 	movx	@dptr,a
      0000C1 A3               [12]  255 	inc	dptr
      0000C2 ED               [ 4]  256 	mov	a,r5
      0000C3 F0               [ 8]  257 	movx	@dptr,a
      0000C4 C0 06            [ 8]  258 	push	ar6
      0000C6 C0 07            [ 8]  259 	push	ar7
      0000C8 C0 00            [ 8]  260 	push	ar0
      0000CA C0 01            [ 8]  261 	push	ar1
      0000CC 05 86            [ 8]  262 	inc	dps
      0000CE 90s00r00r06      [12]  263 	mov	dptr,#_wcstombs_s_65536_36
      0000D2 E0               [ 8]  264 	movx	a,@dptr
      0000D3 F5 82            [ 8]  265 	mov	dpl,a
      0000D5 A3               [12]  266 	inc	dptr
      0000D6 E0               [ 8]  267 	movx	a,@dptr
      0000D7 F5 83            [ 8]  268 	mov	dph,a
      0000D9 A3               [12]  269 	inc	dptr
      0000DA E0               [ 8]  270 	movx	a,@dptr
      0000DB F5 93            [ 8]  271 	mov	dpx,a
      0000DD A3               [12]  272 	inc	dptr
      0000DE E0               [ 8]  273 	movx	a,@dptr
      0000DF F5 F0            [ 8]  274 	mov	b,a
      0000E1 75 86 00         [12]  275 	mov	dps,#0
      0000E4 12s00r00r00      [16]  276 	lcall	_wctomb
      0000E8 AA 82            [ 8]  277 	mov	r2,dpl
      0000EA AB 83            [ 8]  278 	mov	r3,dph
      0000EC D0 01            [ 8]  279 	pop	ar1
      0000EE D0 00            [ 8]  280 	pop	ar0
      0000F0 D0 07            [ 8]  281 	pop	ar7
      0000F2 D0 06            [ 8]  282 	pop	ar6
                                    283 ;	genAssign: resultIsFar = TRUE
                                    284 ;	wcstombs.c:42: if(b == 1 && !*s)
      0000F4 BA 01 23         [16]  285 	cjne r2,#0x01,00102$
      0000F7 BB 00 20         [16]  286 	cjne r3,#0x00,00102$
      0000FA                        287 00131$:
      0000FA 90s00r00r06      [12]  288 	mov	dptr,#_wcstombs_s_65536_36
      0000FE E0               [ 8]  289 	movx	a,@dptr
      0000FF C0 E0            [ 8]  290 	push	acc
      000101 A3               [12]  291 	inc	dptr
      000102 E0               [ 8]  292 	movx	a,@dptr
      000103 C0 E0            [ 8]  293 	push	acc
      000105 A3               [12]  294 	inc	dptr
      000106 E0               [ 8]  295 	movx	a,@dptr
      000107 C0 E0            [ 8]  296 	push	acc
      000109 A3               [12]  297 	inc	dptr
      00010A E0               [ 8]  298 	movx	a,@dptr
      00010B F5 F0            [ 8]  299 	mov	b,a
      00010D D0 93            [ 8]  300 	pop	dpx
      00010F D0 83            [ 8]  301 	pop	dph
      000111 D0 82            [ 8]  302 	pop	dpl
      000113 12s00r00r00      [16]  303 	lcall	__gptrget
      000117 FC               [ 4]  304 	mov  r4,a
      000118 60 4B            [12]  305 	jz  00109$
      00011A                        306 00132$:
                                    307 ;	wcstombs.c:43: break;
      00011A                        308 00102$:
                                    309 ;	wcstombs.c:44: if(b < 0)
      00011A EB               [ 4]  310 	mov	a,r3
      00011B 30 E7 06         [12]  311 	jnb  acc[7],00105$
      00011E                        312 00133$:
                                    313 ;	wcstombs.c:45: return(-1);
      00011E 90 00 FF FF      [12]  314 	mov  dptr,#0xffff
      000122 80 52            [12]  315 	sjmp 00110$
      000124                        316 00105$:
                                    317 ;	wcstombs.c:47: n -= b;
      000124 8A 04            [ 8]  318 	mov	ar4,r2
      000126 8B 05            [ 8]  319 	mov	ar5,r3
      000128 90s00r00r04      [12]  320 	mov	dptr,#_wcstombs_PARM_3
      00012C C3               [ 4]  321 	clr	c
      00012D E0               [ 8]  322 	movx	a,@dptr
      00012E 9C               [ 4]  323 	subb	a,r4
      00012F F0               [ 8]  324 	movx	@dptr,a
      000130 A3               [12]  325 	inc	dptr
      000131 E0               [ 8]  326 	movx	a,@dptr
      000132 9D               [ 4]  327 	subb	a,r5
      000133 F0               [ 8]  328 	movx	@dptr,a
                                    329 ;	wcstombs.c:48: m += b;
      000134 90s00r00r0A      [12]  330 	mov	dptr,#_wcstombs_m_65536_37
      000138 E0               [ 8]  331 	movx	a,@dptr
      000139 2C               [ 4]  332 	add	a,r4
      00013A F0               [ 8]  333 	movx	@dptr,a
      00013B A3               [12]  334 	inc	dptr
      00013C E0               [ 8]  335 	movx	a,@dptr
      00013D 3D               [ 4]  336 	addc	a,r5
      00013E F0               [ 8]  337 	movx	@dptr,a
                                    338 ;	wcstombs.c:49: s += b;
      00013F EB               [ 4]  339 	mov	a,r3
      000140 33               [ 4]  340 	rlc	a
      000141 95 E0            [ 8]  341 	subb	a,acc
      000143 FC               [ 4]  342 	mov	r4,a
      000144 FD               [ 4]  343 	mov	r5,a
      000145 90s00r00r06      [12]  344 	mov	dptr,#_wcstombs_s_65536_36
      000149 E0               [ 8]  345 	movx	a,@dptr
      00014A 2A               [ 4]  346 	add	a,r2
      00014B F0               [ 8]  347 	movx	@dptr,a
      00014C A3               [12]  348 	inc	dptr
      00014D E0               [ 8]  349 	movx	a,@dptr
      00014E 3B               [ 4]  350 	addc	a,r3
      00014F F0               [ 8]  351 	movx	@dptr,a
      000150 A3               [12]  352 	inc	dptr
      000151 E0               [ 8]  353 	movx	a,@dptr
      000152 3C               [ 4]  354 	addc	a,r4
      000153 F0               [ 8]  355 	movx	@dptr,a
      000154 A3               [12]  356 	inc	dptr
      000155 E0               [ 8]  357 	movx	a,@dptr
      000156 F0               [ 8]  358 	movx	@dptr,a
                                    359 ;	wcstombs.c:50: pwcs++;
      000157 74 04            [ 8]  360 	mov	a,#0x04
      000159 28               [ 4]  361 	add	a,r0
      00015A F8               [ 4]  362 	mov	r0,a
      00015B E4               [ 4]  363 	clr	a
      00015C 39               [ 4]  364 	addc	a,r1
      00015D F9               [ 4]  365 	mov	r1,a
      00015E E4               [ 4]  366 	clr	a
      00015F 3E               [ 4]  367 	addc	a,r6
      000160 FE               [ 4]  368 	mov	r6,a
      000161 02s00r00r30      [16]  369 	ljmp	00107$
      000165                        370 00109$:
                                    371 ;	wcstombs.c:53: return(m);
      000165 75 86 01         [12]  372 	mov     dps, #1
      000168 90s00r00r0A      [12]  373 	mov     dptr, #_wcstombs_m_65536_37
      00016C E0               [ 8]  374 	movx	a,@dptr
      00016D F5 82            [ 8]  375 	mov	dpl,a
      00016F A3               [12]  376 	inc	dptr
      000170 E0               [ 8]  377 	movx	a,@dptr
      000171 F5 83            [ 8]  378 	mov	dph,a
      000173 75 86 00         [12]  379 	mov	dps,#0
      000176                        380 00110$:
                                    381 ;	wcstombs.c:54: }
      000176 22               [16]  382 	ret
                                    383 	.area CSEG    (CODE)
                                    384 	.area CONST   (CODE)
                                    385 	.area XINIT   (CODE)
                                    386 	.area CABS    (ABS,CODE)
