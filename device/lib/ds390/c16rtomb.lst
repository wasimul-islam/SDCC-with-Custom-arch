                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module c16rtomb
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _wctomb
                                     35 	.globl _c16rtomb_PARM_3
                                     36 	.globl _c16rtomb_PARM_2
                                     37 	.globl _c16rtomb
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; special function bits
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable register banks
                                     46 ;--------------------------------------------------------
                                     47 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         48 	.ds 8
                                     49 ;--------------------------------------------------------
                                     50 ; internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DSEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; overlayable items in internal ram
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; indirectly addressable internal ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area ISEG    (DATA)
                                     60 ;--------------------------------------------------------
                                     61 ; absolute internal ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area IABS    (ABS,DATA)
                                     64 	.area IABS    (ABS,DATA)
                                     65 ;--------------------------------------------------------
                                     66 ; bit data
                                     67 ;--------------------------------------------------------
                                     68 	.area BSEG    (BIT)
                                     69 ;--------------------------------------------------------
                                     70 ; paged external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area PSEG    (PAG,XDATA)
                                     73 ;--------------------------------------------------------
                                     74 ; uninitialized external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XSEG    (XDATA)
      000000                         77 _c16rtomb_PARM_2:
      000000                         78 	.ds 2
      000002                         79 _c16rtomb_PARM_3:
      000002                         80 	.ds 4
      000006                         81 _c16rtomb_s_65536_42:
      000006                         82 	.ds 4
      00000A                         83 _c16rtomb_buf_65536_43:
      00000A                         84 	.ds 4
      00000E                         85 _c16rtomb_sps_65536_43:
      00000E                         86 	.ds 3
      000011                         87 _c16rtomb_sloc0_1_0:
      000011                         88 	.ds 4
      000015                         89 _c16rtomb_sloc2_1_0:
      000015                         90 	.ds 4
                                     91 ;--------------------------------------------------------
                                     92 ; absolute external ram data
                                     93 ;--------------------------------------------------------
                                     94 	.area XABS    (ABS,XDATA)
                                     95 ;--------------------------------------------------------
                                     96 ; initialized external ram data
                                     97 ;--------------------------------------------------------
                                     98 	.area XISEG   (XDATA)
                                     99 ;--------------------------------------------------------
                                    100 ; global & static initialisations
                                    101 ;--------------------------------------------------------
                                    102 	.area HOME    (CODE)
                                    103 	.area GSINIT  (CODE)
                                    104 	.area GSFINAL (CODE)
                                    105 	.area GSINIT  (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; Home
                                    108 ;--------------------------------------------------------
                                    109 	.area HOME    (CODE)
                                    110 	.area HOME    (CODE)
                                    111 ;--------------------------------------------------------
                                    112 ; code
                                    113 ;--------------------------------------------------------
                                    114 	.area CSEG    (CODE)
                                    115 ;------------------------------------------------------------
                                    116 ;Allocation info for local variables in function 'c16rtomb'
                                    117 ;------------------------------------------------------------
                                    118 ;c16                       Allocated with name '_c16rtomb_PARM_2'
                                    119 ;ps                        Allocated with name '_c16rtomb_PARM_3'
                                    120 ;s                         Allocated with name '_c16rtomb_s_65536_42'
                                    121 ;codepoint                 Allocated to registers r2 r3 r4 r5 
                                    122 ;buf                       Allocated with name '_c16rtomb_buf_65536_43'
                                    123 ;sps                       Allocated with name '_c16rtomb_sps_65536_43'
                                    124 ;high_surrogate            Allocated to registers r6 r7 
                                    125 ;sloc0                     Allocated with name '_c16rtomb_sloc0_1_0'
                                    126 ;sloc1                     Allocated with name '_c16rtomb_sloc1_1_0'
                                    127 ;sloc2                     Allocated with name '_c16rtomb_sloc2_1_0'
                                    128 ;sloc3                     Allocated with name '_c16rtomb_sloc3_1_0'
                                    129 ;------------------------------------------------------------
                                    130 ;	c16rtomb.c:35: size_t c16rtomb(char *restrict s, char16_t c16, mbstate_t *restrict ps)
                                    131 ;	-----------------------------------------
                                    132 ;	 function c16rtomb
                                    133 ;	-----------------------------------------
      000000                        134 _c16rtomb:
                           000002   135 	ar2 = 0x02
                           000003   136 	ar3 = 0x03
                           000004   137 	ar4 = 0x04
                           000005   138 	ar5 = 0x05
                           000006   139 	ar6 = 0x06
                           000007   140 	ar7 = 0x07
                           000000   141 	ar0 = 0x00
                           000001   142 	ar1 = 0x01
      000000 75 86 01         [12]  143 	mov     dps, #1
      000003 90s00r00r06      [12]  144 	mov     dptr, #_c16rtomb_s_65536_42
      000007 E5 82            [ 8]  145 	mov	a,dpl
      000009 F0               [ 8]  146 	movx	@dptr,a
      00000A A3               [12]  147 	inc	dptr
      00000B E5 83            [ 8]  148 	mov	a,dph
      00000D F0               [ 8]  149 	movx	@dptr,a
      00000E A3               [12]  150 	inc	dptr
      00000F E5 93            [ 8]  151 	mov	a,dpx
      000011 F0               [ 8]  152 	movx	@dptr,a
      000012 A3               [12]  153 	inc	dptr
      000013 E5 F0            [ 8]  154 	mov	a,b
      000015 F0               [ 8]  155 	movx	@dptr,a
      000016 75 86 00         [12]  156 	mov	dps,#0
                                    157 ;	c16rtomb.c:41: if(!s)
      000019 90s00r00r06      [12]  158 	mov	dptr,#_c16rtomb_s_65536_42
      00001D E0               [ 8]  159 	movx	a,@dptr
      00001E F5 F0            [ 8]  160 	mov	b,a
      000020 A3               [12]  161 	inc	dptr
      000021 E0               [ 8]  162 	movx	a,@dptr
      000022 42 F0            [ 8]  163 	orl	b,a
      000024 A3               [12]  164 	inc	dptr
      000025 E0               [ 8]  165 	movx	a,@dptr
      000026 45 F0            [ 8]  166 	orl	a,b
      000028 70 12            [12]  167 	jnz  00102$
      00002A                        168 00156$:
                                    169 ;	c16rtomb.c:42: s = buf;
      00002A 90s00r00r06      [12]  170 	mov	dptr,#_c16rtomb_s_65536_42
      00002E 74r0A            [ 8]  171 	mov	a,#_c16rtomb_buf_65536_43
      000030 F0               [ 8]  172 	movx	@dptr,a
      000031 A3               [12]  173 	inc	dptr
      000032 74s00            [ 8]  174 	mov	a,#(_c16rtomb_buf_65536_43 >> 8)
      000034 F0               [ 8]  175 	movx	@dptr,a
      000035 A3               [12]  176 	inc	dptr
      000036 74s00            [ 8]  177 	mov	a,#(_c16rtomb_buf_65536_43 >> 16)
      000038 F0               [ 8]  178 	movx	@dptr,a
      000039 A3               [12]  179 	inc	dptr
      00003A E4               [ 4]  180 	clr	a
      00003B F0               [ 8]  181 	movx	@dptr,a
      00003C                        182 00102$:
                                    183 ;	c16rtomb.c:44: if(!ps)
      00003C 90s00r00r02      [12]  184 	mov	dptr,#_c16rtomb_PARM_3
      000040 E0               [ 8]  185 	movx	a,@dptr
      000041 F5 F0            [ 8]  186 	mov	b,a
      000043 A3               [12]  187 	inc	dptr
      000044 E0               [ 8]  188 	movx	a,@dptr
      000045 42 F0            [ 8]  189 	orl	b,a
      000047 A3               [12]  190 	inc	dptr
      000048 E0               [ 8]  191 	movx	a,@dptr
      000049 45 F0            [ 8]  192 	orl	a,b
      00004B 70 12            [12]  193 	jnz  00104$
      00004D                        194 00157$:
                                    195 ;	c16rtomb.c:45: ps = &sps;
      00004D 90s00r00r02      [12]  196 	mov	dptr,#_c16rtomb_PARM_3
      000051 74r0E            [ 8]  197 	mov	a,#_c16rtomb_sps_65536_43
      000053 F0               [ 8]  198 	movx	@dptr,a
      000054 A3               [12]  199 	inc	dptr
      000055 74s00            [ 8]  200 	mov	a,#(_c16rtomb_sps_65536_43 >> 8)
      000057 F0               [ 8]  201 	movx	@dptr,a
      000058 A3               [12]  202 	inc	dptr
      000059 74s00            [ 8]  203 	mov	a,#(_c16rtomb_sps_65536_43 >> 16)
      00005B F0               [ 8]  204 	movx	@dptr,a
      00005C A3               [12]  205 	inc	dptr
      00005D E4               [ 4]  206 	clr	a
      00005E F0               [ 8]  207 	movx	@dptr,a
      00005F                        208 00104$:
                                    209 ;	c16rtomb.c:47: if (!c16) // 0 always resets conversion state.
      00005F 90s00r00r00      [12]  210 	mov	dptr,#_c16rtomb_PARM_2
      000063 E0               [ 8]  211 	movx	a,@dptr
      000064 F5 F0            [ 8]  212 	mov	b,a
      000066 A3               [12]  213 	inc	dptr
      000067 E0               [ 8]  214 	movx	a,@dptr
      000068 45 F0            [ 8]  215 	orl	a,b
      00006A 70 4B            [12]  216 	jnz  00119$
      00006C                        217 00158$:
                                    218 ;	c16rtomb.c:49: ps->c[1] = ps->c[2] = 0;
      00006C 90s00r00r02      [12]  219 	mov	dptr,#_c16rtomb_PARM_3
                                    220 ;	genAssign: resultIsFar = FALSE
      000070 E0               [ 8]  221 	movx	a,@dptr
      000071 FE               [ 4]  222 	mov	r6,a
      000072 A3               [12]  223 	inc	dptr
      000073 E0               [ 8]  224 	movx	a,@dptr
      000074 FF               [ 4]  225 	mov	r7,a
      000075 A3               [12]  226 	inc	dptr
      000076 E0               [ 8]  227 	movx	a,@dptr
      000077 F8               [ 4]  228 	mov	r0,a
      000078 A3               [12]  229 	inc	dptr
      000079 E0               [ 8]  230 	movx	a,@dptr
      00007A F9               [ 4]  231 	mov	r1,a
      00007B 74 01            [ 8]  232 	mov	a,#0x01
      00007D 2E               [ 4]  233 	add	a,r6
      00007E FA               [ 4]  234 	mov	r2,a
      00007F E4               [ 4]  235 	clr	a
      000080 3F               [ 4]  236 	addc	a,r7
      000081 FB               [ 4]  237 	mov	r3,a
      000082 E4               [ 4]  238 	clr	a
      000083 38               [ 4]  239 	addc	a,r0
      000084 FC               [ 4]  240 	mov	r4,a
      000085 89 05            [ 8]  241 	mov	ar5,r1
      000087 74 02            [ 8]  242 	mov	a,#0x02
      000089 2E               [ 4]  243 	add	a,r6
      00008A FE               [ 4]  244 	mov	r6,a
      00008B E4               [ 4]  245 	clr	a
      00008C 3F               [ 4]  246 	addc	a,r7
      00008D FF               [ 4]  247 	mov	r7,a
      00008E E4               [ 4]  248 	clr	a
      00008F 38               [ 4]  249 	addc	a,r0
      000090 F8               [ 4]  250 	mov	r0,a
      000091 8E 82            [ 8]  251 	mov	dpl,r6
      000093 8F 83            [ 8]  252 	mov	dph,r7
      000095 88 93            [ 8]  253 	mov	dpx,r0
      000097 89 F0            [ 8]  254 	mov	b,r1
      000099 E4               [ 4]  255 	clr	a
      00009A 12s00r00r00      [16]  256 	lcall	__gptrput
      00009E 8A 82            [ 8]  257 	mov	dpl,r2
      0000A0 8B 83            [ 8]  258 	mov	dph,r3
      0000A2 8C 93            [ 8]  259 	mov	dpx,r4
      0000A4 8D F0            [ 8]  260 	mov	b,r5
      0000A6 E4               [ 4]  261 	clr	a
      0000A7 12s00r00r00      [16]  262 	lcall	__gptrput
                                    263 ;	c16rtomb.c:50: codepoint = 0;
                                    264 ;	genAssign: resultIsFar = FALSE
      0000AB 7A 00            [ 8]  265 	mov	r2,#0x00
      0000AD 7B 00            [ 8]  266 	mov	r3,#0x00
      0000AF 7C 00            [ 8]  267 	mov	r4,#0x00
      0000B1 7D 00            [ 8]  268 	mov	r5,#0x00
      0000B3 02s00r02r8B      [16]  269 	ljmp	00120$
      0000B7                        270 00119$:
                                    271 ;	c16rtomb.c:52: else if(ps->c[1] || ps->c[2]) // We already have the high surrogate. Now get the low surrogate
      0000B7 90s00r00r02      [12]  272 	mov	dptr,#_c16rtomb_PARM_3
                                    273 ;	genAssign: resultIsFar = FALSE
      0000BB E0               [ 8]  274 	movx	a,@dptr
      0000BC FE               [ 4]  275 	mov	r6,a
      0000BD A3               [12]  276 	inc	dptr
      0000BE E0               [ 8]  277 	movx	a,@dptr
      0000BF FF               [ 4]  278 	mov	r7,a
      0000C0 A3               [12]  279 	inc	dptr
      0000C1 E0               [ 8]  280 	movx	a,@dptr
      0000C2 F8               [ 4]  281 	mov	r0,a
      0000C3 A3               [12]  282 	inc	dptr
      0000C4 E0               [ 8]  283 	movx	a,@dptr
      0000C5 F9               [ 4]  284 	mov	r1,a
      0000C6 90s00r00r11      [12]  285 	mov	dptr,#_c16rtomb_sloc0_1_0
      0000CA 74 01            [ 8]  286 	mov	a,#0x01
      0000CC 2E               [ 4]  287 	add	a,r6
      0000CD F0               [ 8]  288 	movx	@dptr,a
      0000CE E4               [ 4]  289 	clr	a
      0000CF 3F               [ 4]  290 	addc	a,r7
      0000D0 A3               [12]  291 	inc	dptr
      0000D1 F0               [ 8]  292 	movx	@dptr,a
      0000D2 E4               [ 4]  293 	clr	a
      0000D3 38               [ 4]  294 	addc	a,r0
      0000D4 A3               [12]  295 	inc	dptr
      0000D5 F0               [ 8]  296 	movx	@dptr,a
      0000D6 A3               [12]  297 	inc	dptr
      0000D7 E9               [ 4]  298 	mov	a,r1
      0000D8 F0               [ 8]  299 	movx	@dptr,a
      0000D9 90s00r00r11      [12]  300 	mov	dptr,#_c16rtomb_sloc0_1_0
      0000DD E0               [ 8]  301 	movx	a,@dptr
      0000DE C0 E0            [ 8]  302 	push	acc
      0000E0 A3               [12]  303 	inc	dptr
      0000E1 E0               [ 8]  304 	movx	a,@dptr
      0000E2 C0 E0            [ 8]  305 	push	acc
      0000E4 A3               [12]  306 	inc	dptr
      0000E5 E0               [ 8]  307 	movx	a,@dptr
      0000E6 C0 E0            [ 8]  308 	push	acc
      0000E8 A3               [12]  309 	inc	dptr
      0000E9 E0               [ 8]  310 	movx	a,@dptr
      0000EA F5 F0            [ 8]  311 	mov	b,a
      0000EC D0 93            [ 8]  312 	pop	dpx
      0000EE D0 83            [ 8]  313 	pop	dph
      0000F0 D0 82            [ 8]  314 	pop	dpl
      0000F2 12s00r00r00      [16]  315 	lcall	__gptrget
      0000F6 FA               [ 4]  316 	mov  r2,a
      0000F7 70 1F            [12]  317 	jnz  00114$
      0000F9                        318 00159$:
      0000F9 74 02            [ 8]  319 	mov	a,#0x02
      0000FB 2E               [ 4]  320 	add	a,r6
      0000FC FA               [ 4]  321 	mov	r2,a
      0000FD E4               [ 4]  322 	clr	a
      0000FE 3F               [ 4]  323 	addc	a,r7
      0000FF FB               [ 4]  324 	mov	r3,a
      000100 E4               [ 4]  325 	clr	a
      000101 38               [ 4]  326 	addc	a,r0
      000102 FC               [ 4]  327 	mov	r4,a
      000103 89 05            [ 8]  328 	mov	ar5,r1
      000105 8A 82            [ 8]  329 	mov	dpl,r2
      000107 8B 83            [ 8]  330 	mov	dph,r3
      000109 8C 93            [ 8]  331 	mov	dpx,r4
      00010B 8D F0            [ 8]  332 	mov	b,r5
      00010D 12s00r00r00      [16]  333 	lcall	__gptrget
      000111 FE               [ 4]  334 	mov  r6,a
      000112 70 04            [12]  335 	jnz	00160$
      000114 02s00r01rFE      [16]  336 	ljmp	00115$
      000118                        337 00160$:
      000118                        338 00114$:
                                    339 ;	c16rtomb.c:56: if(c16 < 0xdc00 || c16 > 0xdfff)
      000118 90s00r00r00      [12]  340 	mov	dptr,#_c16rtomb_PARM_2
      00011C C3               [ 4]  341 	clr	c
      00011D E0               [ 8]  342 	movx	a,@dptr
      00011E 94 00            [ 8]  343 	subb	a,#0x00
      000120 A3               [12]  344 	inc	dptr
      000121 E0               [ 8]  345 	movx	a,@dptr
      000122 94 DC            [ 8]  346 	subb	a,#0xdc
      000124 50 04            [12]  347 	jnc	00161$
      000126 02s00r02rB8      [16]  348 	ljmp	00121$
      00012A                        349 00161$:
      00012A 90s00r00r00      [12]  350 	mov	dptr,#_c16rtomb_PARM_2
      00012E C3               [ 4]  351 	clr	c
      00012F 74 FF            [ 8]  352 	mov	a,#0xff
      000131 C5 F0            [ 8]  353 	xch	a, b
      000133 E0               [ 8]  354 	movx	a,@dptr
      000134 C5 F0            [ 8]  355 	xch	a, b
      000136 95 F0            [ 8]  356 	subb	a,b
      000138 74 DF            [ 8]  357 	mov	a,#0xdf
      00013A C5 F0            [ 8]  358 	xch	a, b
      00013C A3               [12]  359 	inc	dptr
      00013D E0               [ 8]  360 	movx	a,@dptr
      00013E C5 F0            [ 8]  361 	xch	a, b
      000140 95 F0            [ 8]  362 	subb	a,b
      000142 50 04            [12]  363 	jnc	00162$
      000144 02s00r02rB8      [16]  364 	ljmp	00121$
      000148                        365 00162$:
                                    366 ;	c16rtomb.c:59: high_surrogate = ps->c[1] + (ps->c[2] << 8);
      000148 90s00r00r02      [12]  367 	mov	dptr,#_c16rtomb_PARM_3
                                    368 ;	genAssign: resultIsFar = FALSE
      00014C E0               [ 8]  369 	movx	a,@dptr
      00014D FA               [ 4]  370 	mov	r2,a
      00014E A3               [12]  371 	inc	dptr
      00014F E0               [ 8]  372 	movx	a,@dptr
      000150 FB               [ 4]  373 	mov	r3,a
      000151 A3               [12]  374 	inc	dptr
      000152 E0               [ 8]  375 	movx	a,@dptr
      000153 FC               [ 4]  376 	mov	r4,a
      000154 A3               [12]  377 	inc	dptr
      000155 E0               [ 8]  378 	movx	a,@dptr
      000156 FD               [ 4]  379 	mov	r5,a
      000157 90s00r00r15      [12]  380 	mov	dptr,#_c16rtomb_sloc2_1_0
      00015B 74 01            [ 8]  381 	mov	a,#0x01
      00015D 2A               [ 4]  382 	add	a,r2
      00015E F0               [ 8]  383 	movx	@dptr,a
      00015F E4               [ 4]  384 	clr	a
      000160 3B               [ 4]  385 	addc	a,r3
      000161 A3               [12]  386 	inc	dptr
      000162 F0               [ 8]  387 	movx	@dptr,a
      000163 E4               [ 4]  388 	clr	a
      000164 3C               [ 4]  389 	addc	a,r4
      000165 A3               [12]  390 	inc	dptr
      000166 F0               [ 8]  391 	movx	@dptr,a
      000167 A3               [12]  392 	inc	dptr
      000168 ED               [ 4]  393 	mov	a,r5
      000169 F0               [ 8]  394 	movx	@dptr,a
      00016A 90s00r00r15      [12]  395 	mov	dptr,#_c16rtomb_sloc2_1_0
      00016E E0               [ 8]  396 	movx	a,@dptr
      00016F C0 E0            [ 8]  397 	push	acc
      000171 A3               [12]  398 	inc	dptr
      000172 E0               [ 8]  399 	movx	a,@dptr
      000173 C0 E0            [ 8]  400 	push	acc
      000175 A3               [12]  401 	inc	dptr
      000176 E0               [ 8]  402 	movx	a,@dptr
      000177 C0 E0            [ 8]  403 	push	acc
      000179 A3               [12]  404 	inc	dptr
      00017A E0               [ 8]  405 	movx	a,@dptr
      00017B F5 F0            [ 8]  406 	mov	b,a
      00017D D0 93            [ 8]  407 	pop	dpx
      00017F D0 83            [ 8]  408 	pop	dph
      000181 D0 82            [ 8]  409 	pop	dpl
      000183 12s00r00r00      [16]  410 	lcall	__gptrget
      000187 FE               [ 4]  411 	mov	r6,a
      000188 8E 00            [ 8]  412 	mov	ar0,r6
      00018A 79 00            [ 8]  413 	mov	r1,#0x00
      00018C 74 02            [ 8]  414 	mov	a,#0x02
      00018E 2A               [ 4]  415 	add	a,r2
      00018F FA               [ 4]  416 	mov	r2,a
      000190 E4               [ 4]  417 	clr	a
      000191 3B               [ 4]  418 	addc	a,r3
      000192 FB               [ 4]  419 	mov	r3,a
      000193 E4               [ 4]  420 	clr	a
      000194 3C               [ 4]  421 	addc	a,r4
      000195 FC               [ 4]  422 	mov	r4,a
      000196 8A 82            [ 8]  423 	mov	dpl,r2
      000198 8B 83            [ 8]  424 	mov	dph,r3
      00019A 8C 93            [ 8]  425 	mov	dpx,r4
      00019C 8D F0            [ 8]  426 	mov	b,r5
      00019E 12s00r00r00      [16]  427 	lcall	__gptrget
      0001A2 FE               [ 4]  428 	mov	r6,a
      0001A3 8E 07            [ 8]  429 	mov	ar7,r6
      0001A5 7E 00            [ 8]  430 	mov	r6,#0x00
      0001A7 EE               [ 4]  431 	mov	a,r6
      0001A8 28               [ 4]  432 	add	a,r0
      0001A9 FE               [ 4]  433 	mov	r6,a
      0001AA EF               [ 4]  434 	mov	a,r7
      0001AB 39               [ 4]  435 	addc	a,r1
      0001AC FF               [ 4]  436 	mov	r7,a
                                    437 ;	c16rtomb.c:60: ps->c[1] = ps->c[2] = 0;
      0001AD 8A 82            [ 8]  438 	mov	dpl,r2
      0001AF 8B 83            [ 8]  439 	mov	dph,r3
      0001B1 8C 93            [ 8]  440 	mov	dpx,r4
      0001B3 8D F0            [ 8]  441 	mov	b,r5
      0001B5 E4               [ 4]  442 	clr	a
      0001B6 12s00r00r00      [16]  443 	lcall	__gptrput
      0001BA 90s00r00r15      [12]  444 	mov	dptr,#_c16rtomb_sloc2_1_0
      0001BE E0               [ 8]  445 	movx	a,@dptr
      0001BF C0 E0            [ 8]  446 	push	acc
      0001C1 A3               [12]  447 	inc	dptr
      0001C2 E0               [ 8]  448 	movx	a,@dptr
      0001C3 C0 E0            [ 8]  449 	push	acc
      0001C5 A3               [12]  450 	inc	dptr
      0001C6 E0               [ 8]  451 	movx	a,@dptr
      0001C7 C0 E0            [ 8]  452 	push	acc
      0001C9 A3               [12]  453 	inc	dptr
      0001CA E0               [ 8]  454 	movx	a,@dptr
      0001CB F5 F0            [ 8]  455 	mov	b,a
      0001CD D0 93            [ 8]  456 	pop	dpx
      0001CF D0 83            [ 8]  457 	pop	dph
      0001D1 D0 82            [ 8]  458 	pop	dpl
      0001D3 E4               [ 4]  459 	clr	a
      0001D4 12s00r00r00      [16]  460 	lcall	__gptrput
                                    461 ;	c16rtomb.c:61: codepoint = (high_surrogate << 10) - (0xd800 << 10) + c16 - 0xdc00 + 0x10000;
      0001D8 EE               [ 4]  462 	mov	a,r6
      0001D9 25 E0            [ 8]  463 	add	a,acc
      0001DB 25 E0            [ 8]  464 	add	a,acc
      0001DD FF               [ 4]  465 	mov	r7,a
      0001DE 7E 00            [ 8]  466 	mov	r6,#0x00
      0001E0 90s00r00r00      [12]  467 	mov	dptr,#_c16rtomb_PARM_2
      0001E4 E0               [ 8]  468 	movx	a,@dptr
      0001E5 2E               [ 4]  469 	add	a,r6
      0001E6 FE               [ 4]  470 	mov	r6,a
      0001E7 A3               [12]  471 	inc	dptr
      0001E8 E0               [ 8]  472 	movx	a,@dptr
      0001E9 3F               [ 4]  473 	addc	a,r7
      0001EA FF               [ 4]  474 	mov	r7,a
      0001EB E4               [ 4]  475 	clr  a
      0001EC F8               [ 4]  476 	mov  r0,a
      0001ED F9               [ 4]  477 	mov  r1,a
      0001EE 2E               [ 4]  478 	add	a,r6
      0001EF FA               [ 4]  479 	mov	r2,a
      0001F0 74 24            [ 8]  480 	mov	a,#0x24
      0001F2 3F               [ 4]  481 	addc	a,r7
      0001F3 FB               [ 4]  482 	mov	r3,a
      0001F4 E4               [ 4]  483 	clr	a
      0001F5 38               [ 4]  484 	addc	a,r0
      0001F6 FC               [ 4]  485 	mov	r4,a
      0001F7 E4               [ 4]  486 	clr	a
      0001F8 39               [ 4]  487 	addc	a,r1
      0001F9 FD               [ 4]  488 	mov	r5,a
      0001FA 02s00r02r8B      [16]  489 	ljmp	00120$
      0001FE                        490 00115$:
                                    491 ;	c16rtomb.c:63: else if(c16 < 0xd7ff || c16 >= 0xe000) // Basic multilingual plane.
      0001FE 90s00r00r00      [12]  492 	mov	dptr,#_c16rtomb_PARM_2
      000202 C3               [ 4]  493 	clr	c
      000203 E0               [ 8]  494 	movx	a,@dptr
      000204 94 FF            [ 8]  495 	subb	a,#0xff
      000206 A3               [12]  496 	inc	dptr
      000207 E0               [ 8]  497 	movx	a,@dptr
      000208 94 D7            [ 8]  498 	subb	a,#0xd7
      00020A 40 0E            [12]  499 	jc   00110$
      00020C                        500 00163$:
      00020C 90s00r00r00      [12]  501 	mov	dptr,#_c16rtomb_PARM_2
      000210 C3               [ 4]  502 	clr	c
      000211 E0               [ 8]  503 	movx	a,@dptr
      000212 94 00            [ 8]  504 	subb	a,#0x00
      000214 A3               [12]  505 	inc	dptr
      000215 E0               [ 8]  506 	movx	a,@dptr
      000216 94 E0            [ 8]  507 	subb	a,#0xe0
      000218 40 17            [12]  508 	jc   00111$
      00021A                        509 00164$:
      00021A                        510 00110$:
                                    511 ;	c16rtomb.c:64: codepoint = c16;
      00021A 90s00r00r00      [12]  512 	mov	dptr,#_c16rtomb_PARM_2
      00021E E0               [ 8]  513 	movx	a,@dptr
      00021F FE               [ 4]  514 	mov	r6,a
      000220 A3               [12]  515 	inc	dptr
      000221 E0               [ 8]  516 	movx	a,@dptr
      000222 FF               [ 4]  517 	mov	r7,a
      000223 78 00            [ 8]  518 	mov	r0,#0x00
      000225 79 00            [ 8]  519 	mov	r1,#0x00
                                    520 ;	genAssign: resultIsFar = FALSE
      000227 8E 02            [ 8]  521 	mov	ar2,r6
      000229 8F 03            [ 8]  522 	mov	ar3,r7
      00022B 88 04            [ 8]  523 	mov	ar4,r0
      00022D 89 05            [ 8]  524 	mov	ar5,r1
      00022F 80 5A            [12]  525 	sjmp 00120$
      000231                        526 00111$:
                                    527 ;	c16rtomb.c:67: if(c16 > 0xdbff)
      000231 90s00r00r00      [12]  528 	mov	dptr,#_c16rtomb_PARM_2
      000235 C3               [ 4]  529 	clr	c
      000236 74 FF            [ 8]  530 	mov	a,#0xff
      000238 C5 F0            [ 8]  531 	xch	a, b
      00023A E0               [ 8]  532 	movx	a,@dptr
      00023B C5 F0            [ 8]  533 	xch	a, b
      00023D 95 F0            [ 8]  534 	subb	a,b
      00023F 74 DB            [ 8]  535 	mov	a,#0xdb
      000241 C5 F0            [ 8]  536 	xch	a, b
      000243 A3               [12]  537 	inc	dptr
      000244 E0               [ 8]  538 	movx	a,@dptr
      000245 C5 F0            [ 8]  539 	xch	a, b
      000247 95 F0            [ 8]  540 	subb	a,b
      000249 40 6D            [12]  541 	jc   00121$
      00024B                        542 00165$:
                                    543 ;	c16rtomb.c:70: ps->c[1] = c16 & 0xff;
      00024B 90s00r00r00      [12]  544 	mov	dptr,#_c16rtomb_PARM_2
      00024F E0               [ 8]  545 	movx	a,@dptr
      000250 FE               [ 4]  546 	mov	r6,a
      000251 90s00r00r11      [12]  547 	mov	dptr,#_c16rtomb_sloc0_1_0
      000255 E0               [ 8]  548 	movx	a,@dptr
      000256 C0 E0            [ 8]  549 	push	acc
      000258 A3               [12]  550 	inc	dptr
      000259 E0               [ 8]  551 	movx	a,@dptr
      00025A C0 E0            [ 8]  552 	push	acc
      00025C A3               [12]  553 	inc	dptr
      00025D E0               [ 8]  554 	movx	a,@dptr
      00025E C0 E0            [ 8]  555 	push	acc
      000260 A3               [12]  556 	inc	dptr
      000261 E0               [ 8]  557 	movx	a,@dptr
      000262 F5 F0            [ 8]  558 	mov	b,a
      000264 D0 93            [ 8]  559 	pop	dpx
      000266 D0 83            [ 8]  560 	pop	dph
      000268 D0 82            [ 8]  561 	pop	dpl
      00026A EE               [ 4]  562 	mov	a,r6
      00026B 12s00r00r00      [16]  563 	lcall	__gptrput
                                    564 ;	c16rtomb.c:71: ps->c[2] = c16 >> 8;
      00026F 90s00r00r00      [12]  565 	mov	dptr,#_c16rtomb_PARM_2
      000273 A3               [12]  566 	inc	dptr
      000274 E0               [ 8]  567 	movx	a,@dptr
      000275 FE               [ 4]  568 	mov	r6,a
      000276 7F 00            [ 8]  569 	mov	r7,#0x00
      000278 8A 82            [ 8]  570 	mov	dpl,r2
      00027A 8B 83            [ 8]  571 	mov	dph,r3
      00027C 8C 93            [ 8]  572 	mov	dpx,r4
      00027E 8D F0            [ 8]  573 	mov	b,r5
      000280 EE               [ 4]  574 	mov	a,r6
      000281 12s00r00r00      [16]  575 	lcall	__gptrput
                                    576 ;	c16rtomb.c:72: return(0);
      000285 90 00 00 00      [12]  577 	mov  dptr,#0x0000
      000289 80 3B            [12]  578 	sjmp 00122$
      00028B                        579 00120$:
                                    580 ;	c16rtomb.c:75: return(wctomb(s, codepoint));
                                    581 ;	genAssign: resultIsFar = TRUE
      00028B 90s00r00r00      [12]  582 	mov	dptr,#_wctomb_PARM_2
      00028F EA               [ 4]  583 	mov	a,r2
      000290 F0               [ 8]  584 	movx	@dptr,a
      000291 A3               [12]  585 	inc	dptr
      000292 EB               [ 4]  586 	mov	a,r3
      000293 F0               [ 8]  587 	movx	@dptr,a
      000294 A3               [12]  588 	inc	dptr
      000295 EC               [ 4]  589 	mov	a,r4
      000296 F0               [ 8]  590 	movx	@dptr,a
      000297 A3               [12]  591 	inc	dptr
      000298 ED               [ 4]  592 	mov	a,r5
      000299 F0               [ 8]  593 	movx	@dptr,a
      00029A 05 86            [ 8]  594 	inc	dps
      00029C 90s00r00r06      [12]  595 	mov	dptr,#_c16rtomb_s_65536_42
      0002A0 E0               [ 8]  596 	movx	a,@dptr
      0002A1 F5 82            [ 8]  597 	mov	dpl,a
      0002A3 A3               [12]  598 	inc	dptr
      0002A4 E0               [ 8]  599 	movx	a,@dptr
      0002A5 F5 83            [ 8]  600 	mov	dph,a
      0002A7 A3               [12]  601 	inc	dptr
      0002A8 E0               [ 8]  602 	movx	a,@dptr
      0002A9 F5 93            [ 8]  603 	mov	dpx,a
      0002AB A3               [12]  604 	inc	dptr
      0002AC E0               [ 8]  605 	movx	a,@dptr
      0002AD F5 F0            [ 8]  606 	mov	b,a
      0002AF 75 86 00         [12]  607 	mov	dps,#0
      0002B2 12s00r00r00      [16]  608 	lcall	_wctomb
                                    609 ;	c16rtomb.c:77: eilseq:
      0002B6 80 0E            [12]  610 	sjmp 00122$
      0002B8                        611 00121$:
                                    612 ;	c16rtomb.c:78: errno = EILSEQ;
                                    613 ;	genAssign: resultIsFar = TRUE
      0002B8 90s00r00r00      [12]  614 	mov	dptr,#_errno
      0002BC 74 54            [ 8]  615 	mov	a,#0x54
      0002BE F0               [ 8]  616 	movx	@dptr,a
      0002BF E4               [ 4]  617 	clr	a
      0002C0 A3               [12]  618 	inc	dptr
      0002C1 F0               [ 8]  619 	movx	@dptr,a
                                    620 ;	c16rtomb.c:79: return(-1);
      0002C2 90 00 FF FF      [12]  621 	mov  dptr,#0xffff
      0002C6                        622 00122$:
                                    623 ;	c16rtomb.c:80: }
      0002C6 22               [16]  624 	ret
                                    625 	.area CSEG    (CODE)
                                    626 	.area CONST   (CODE)
                                    627 	.area XINIT   (CODE)
                                    628 	.area CABS    (ABS,CODE)
