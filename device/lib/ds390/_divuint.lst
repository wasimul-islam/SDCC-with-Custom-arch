                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divuint
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl __divuint_PARM_2
                                     35 	.globl __divuint
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; uninitialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
      000000                         75 __divuint_PARM_2:
      000000                         76 	.ds 2
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XABS    (ABS,XDATA)
                                     81 ;--------------------------------------------------------
                                     82 ; initialized external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area XISEG   (XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function '_divuint'
                                    103 ;------------------------------------------------------------
                                    104 ;y                         Allocated with name '__divuint_PARM_2'
                                    105 ;x                         Allocated to registers r2 r3 
                                    106 ;reste                     Allocated to registers r4 r5 
                                    107 ;count                     Allocated to registers 
                                    108 ;c                         Allocated to registers r7 
                                    109 ;------------------------------------------------------------
                                    110 ;	_divuint.c:161: _divuint (unsigned int x, unsigned int y) __SDCC_NONBANKED
                                    111 ;	-----------------------------------------
                                    112 ;	 function _divuint
                                    113 ;	-----------------------------------------
      000000                        114 __divuint:
                           000002   115 	ar2 = 0x02
                           000003   116 	ar3 = 0x03
                           000004   117 	ar4 = 0x04
                           000005   118 	ar5 = 0x05
                           000006   119 	ar6 = 0x06
                           000007   120 	ar7 = 0x07
                           000000   121 	ar0 = 0x00
                           000001   122 	ar1 = 0x01
      000000 AA 82            [ 8]  123 	mov	r2,dpl
      000002 AB 83            [ 8]  124 	mov	r3,dph
                                    125 ;	_divuint.c:163: unsigned int reste = 0;
                                    126 ;	genAssign: resultIsFar = TRUE
      000004 7C 00            [ 8]  127 	mov	r4,#0x00
      000006 7D 00            [ 8]  128 	mov	r5,#0x00
                                    129 ;	_divuint.c:167: do
                                    130 ;	genAssign: resultIsFar = FALSE
      000008 7E 10            [ 8]  131 	mov	r6,#0x10
      00000A                        132 00105$:
                                    133 ;	_divuint.c:170: c = MSB_SET(x);
      00000A EB               [ 4]  134 	mov	a,r3
      00000B 23               [ 4]  135 	rl	a
      00000C 54 01            [ 8]  136 	anl	a,#0x01
      00000E FF               [ 4]  137 	mov	r7,a
                                    138 ;	_divuint.c:171: x <<= 1;
      00000F 8A 00            [ 8]  139 	mov	ar0,r2
      000011 EB               [ 4]  140 	mov	a,r3
      000012 C8               [ 4]  141 	xch	a,r0
      000013 25 E0            [ 8]  142 	add	a,acc
      000015 C8               [ 4]  143 	xch	a,r0
      000016 33               [ 4]  144 	rlc	a
      000017 F9               [ 4]  145 	mov	r1,a
                                    146 ;	genAssign: resultIsFar = TRUE
      000018 88 02            [ 8]  147 	mov	ar2,r0
      00001A 89 03            [ 8]  148 	mov	ar3,r1
                                    149 ;	_divuint.c:172: reste <<= 1;
      00001C 8C 00            [ 8]  150 	mov	ar0,r4
      00001E ED               [ 4]  151 	mov	a,r5
      00001F C8               [ 4]  152 	xch	a,r0
      000020 25 E0            [ 8]  153 	add	a,acc
      000022 C8               [ 4]  154 	xch	a,r0
      000023 33               [ 4]  155 	rlc	a
      000024 F9               [ 4]  156 	mov	r1,a
                                    157 ;	genAssign: resultIsFar = TRUE
      000025 88 04            [ 8]  158 	mov	ar4,r0
      000027 89 05            [ 8]  159 	mov	ar5,r1
                                    160 ;	_divuint.c:173: if (c)
      000029 EF               [ 4]  161 	mov	a,r7
      00002A 60 03            [12]  162 	jz  00102$
      00002C                        163 00127$:
                                    164 ;	_divuint.c:174: reste |= 1;
      00002C 43 04 01         [12]  165 	orl	ar4,#0x01
      00002F                        166 00102$:
                                    167 ;	_divuint.c:176: if (reste >= y)
      00002F 90s00r00r00      [12]  168 	mov	dptr,#__divuint_PARM_2
      000033 C3               [ 4]  169 	clr	c
      000034 EC               [ 4]  170 	mov	a,r4
      000035 C5 F0            [ 8]  171 	xch	a, b
      000037 E0               [ 8]  172 	movx	a,@dptr
      000038 C5 F0            [ 8]  173 	xch	a, b
      00003A 95 F0            [ 8]  174 	subb	a,b
      00003C ED               [ 4]  175 	mov	a,r5
      00003D C5 F0            [ 8]  176 	xch	a, b
      00003F A3               [12]  177 	inc	dptr
      000040 E0               [ 8]  178 	movx	a,@dptr
      000041 C5 F0            [ 8]  179 	xch	a, b
      000043 95 F0            [ 8]  180 	subb	a,b
      000045 40 1B            [12]  181 	jc   00106$
      000047                        182 00128$:
                                    183 ;	_divuint.c:178: reste -= y;
      000047 90s00r00r00      [12]  184 	mov	dptr,#__divuint_PARM_2
      00004B C3               [ 4]  185 	clr	c
      00004C E0               [ 8]  186 	movx	a,@dptr
      00004D F5 F0            [ 8]  187 	mov	b,a
      00004F EC               [ 4]  188 	mov	a,r4
      000050 95 F0            [ 8]  189 	subb	a,b
      000052 FF               [ 4]  190 	mov	r7,a
      000053 A3               [12]  191 	inc	dptr
      000054 E0               [ 8]  192 	movx	a,@dptr
      000055 F5 F0            [ 8]  193 	mov	b,a
      000057 ED               [ 4]  194 	mov	a,r5
      000058 95 F0            [ 8]  195 	subb	a,b
      00005A F8               [ 4]  196 	mov	r0,a
                                    197 ;	genAssign: resultIsFar = TRUE
      00005B 8F 04            [ 8]  198 	mov	ar4,r7
      00005D 88 05            [ 8]  199 	mov	ar5,r0
                                    200 ;	_divuint.c:180: x |= 1;
      00005F 43 02 01         [12]  201 	orl	ar2,#0x01
      000062                        202 00106$:
                                    203 ;	_divuint.c:183: while (--count);
      000062 1E               [ 4]  204 	dec	r6
      000063 EE               [ 4]  205 	mov	a,r6
      000064 70 A4            [12]  206 	jnz  00105$
      000066                        207 00129$:
                                    208 ;	_divuint.c:184: return x;
      000066 8A 82            [ 8]  209 	mov	dpl,r2
      000068 8B 83            [ 8]  210 	mov	dph,r3
      00006A                        211 00108$:
                                    212 ;	_divuint.c:185: }
      00006A 22               [16]  213 	ret
                                    214 	.area CSEG    (CODE)
                                    215 	.area CONST   (CODE)
                                    216 	.area XINIT   (CODE)
                                    217 	.area CABS    (ABS,CODE)
