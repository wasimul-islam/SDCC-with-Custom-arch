                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module logf
                                      6 	.optsdcc -mds390 --model-flat24
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; CPU specific extensions
                                     10 ;--------------------------------------------------------
                                     11 	.DS80C390
                                     12 	.amode	2	; 24 bit flat addressing
                           000082    13 dpl	=	0x82
                           000083    14 dph	=	0x83
                           000084    15 dpl1	=	0x84
                           000085    16 dph1	=	0x85
                           000086    17 dps	=	0x86
                           000093    18 dpx	=	0x93
                           000095    19 dpx1	=	0x95
                           00009B    20 esp	=	0x9B
                           00009C    21 ap	=	0x9C
                           00009C    22 acc1	=	0x9C
                           0000D1    23 mcnt0	=	0xD1
                           0000D2    24 mcnt1	=	0xD2
                           0000D3    25 ma	=	0xD3
                           0000D4    26 mb	=	0xD4
                           0000D5    27 mc	=	0xD5
                           00009D    28 acon	=	0x9D
                           0000C6    29 mcon	=	0xC6
                           0000D1    30 F1	=	0xD1	; user flag
                                     31 ;--------------------------------------------------------
                                     32 ; Public variables in this module
                                     33 ;--------------------------------------------------------
                                     34 	.globl _frexpf
                                     35 	.globl _logf
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; special function bits
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable register banks
                                     44 ;--------------------------------------------------------
                                     45 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         46 	.ds 8
                                     47 ;--------------------------------------------------------
                                     48 ; internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area DSEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; overlayable items in internal ram
                                     53 ;--------------------------------------------------------
                                     54 ;--------------------------------------------------------
                                     55 ; indirectly addressable internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area ISEG    (DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute internal ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area IABS    (ABS,DATA)
                                     62 	.area IABS    (ABS,DATA)
                                     63 ;--------------------------------------------------------
                                     64 ; bit data
                                     65 ;--------------------------------------------------------
                                     66 	.area BSEG    (BIT)
                                     67 ;--------------------------------------------------------
                                     68 ; paged external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area PSEG    (PAG,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; uninitialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XSEG    (XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; absolute external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XABS    (ABS,XDATA)
                                     79 ;--------------------------------------------------------
                                     80 ; initialized external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XISEG   (XDATA)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'logf'
                                    101 ;------------------------------------------------------------
                                    102 ;x                         Allocated to registers r2 r3 r4 r5 
                                    103 ;Rz                        Allocated to stack - _bp +1
                                    104 ;f                         Allocated to stack - _bp +5
                                    105 ;z                         Allocated to stack - _bp +9
                                    106 ;w                         Allocated to registers r2 r3 r4 r5 
                                    107 ;znum                      Allocated to stack - _bp +13
                                    108 ;zden                      Allocated to registers r2 r3 r4 r5 
                                    109 ;xn                        Allocated to registers r6 r7 r0 r1 
                                    110 ;n                         Allocated to stack - _bp +17
                                    111 ;------------------------------------------------------------
                                    112 ;	logf.c:216: float logf(float x) _FLOAT_FUNC_REENTRANT
                                    113 ;	-----------------------------------------
                                    114 ;	 function logf
                                    115 ;	-----------------------------------------
      000000                        116 _logf:
                           000002   117 	ar2 = 0x02
                           000003   118 	ar3 = 0x03
                           000004   119 	ar4 = 0x04
                           000005   120 	ar5 = 0x05
                           000006   121 	ar6 = 0x06
                           000007   122 	ar7 = 0x07
                           000000   123 	ar0 = 0x00
                           000001   124 	ar1 = 0x01
      000000 C0*00            [ 8]  125 	push	_bpx
      000002 C0*01            [ 8]  126 	push	_bpx+1
      000004 85 81*00         [12]  127 	mov	_bpx,sp
      000007 85 9B*01         [12]  128 	mov	_bpx+1,esp
      00000A 53*01 03         [12]  129 	anl	_bpx+1,#3
      00000D E5 81            [ 8]  130 	mov	a,sp
      00000F 24 12            [ 8]  131 	add	a,#0x12
      000011 F5 81            [ 8]  132 	mov	sp,a
      000013 E5 9B            [ 8]  133 	mov	a,esp
      000015 54 03            [ 8]  134 	anl	a,#3
      000017 34 00            [ 8]  135 	addc	a,#0x00
      000019 F5 9B            [ 8]  136 	mov	esp,a
      00001B AA 82            [ 8]  137 	mov	r2,dpl
      00001D AB 83            [ 8]  138 	mov	r3,dph
      00001F AC 93            [ 8]  139 	mov	r4,dpx
      000021 AD F0            [ 8]  140 	mov	r5,b
                                    141 ;	logf.c:226: if (x<=0.0)
                                    142 ;	genAssign: resultIsFar = TRUE
      000023 90s00r00r00      [12]  143 	mov	dptr,#___fslt_PARM_2
      000027 EA               [ 4]  144 	mov	a,r2
      000028 F0               [ 8]  145 	movx	@dptr,a
      000029 A3               [12]  146 	inc	dptr
      00002A EB               [ 4]  147 	mov	a,r3
      00002B F0               [ 8]  148 	movx	@dptr,a
      00002C A3               [12]  149 	inc	dptr
      00002D EC               [ 4]  150 	mov	a,r4
      00002E F0               [ 8]  151 	movx	@dptr,a
      00002F A3               [12]  152 	inc	dptr
      000030 ED               [ 4]  153 	mov	a,r5
      000031 F0               [ 8]  154 	movx	@dptr,a
      000032 C0 02            [ 8]  155 	push	ar2
      000034 C0 03            [ 8]  156 	push	ar3
      000036 C0 04            [ 8]  157 	push	ar4
      000038 C0 05            [ 8]  158 	push	ar5
      00003A 90 00 00 00      [12]  159 	mov  dptr,#0x0000
      00003E 75 F0 00         [12]  160 	mov	b,#0x00
      000041 12s00r00r00      [16]  161 	lcall	___fslt
      000045 D0 05            [ 8]  162 	pop	ar5
      000047 D0 04            [ 8]  163 	pop	ar4
      000049 D0 03            [ 8]  164 	pop	ar3
      00004B D0 02            [ 8]  165 	pop	ar2
      00004D E5 82            [ 8]  166 	mov	a,dpl
      00004F 70 15            [12]  167 	jnz  00102$
      000051                        168 00116$:
                                    169 ;	logf.c:228: errno=EDOM;
                                    170 ;	genAssign: resultIsFar = TRUE
      000051 90s00r00r00      [12]  171 	mov	dptr,#_errno
      000055 74 21            [ 8]  172 	mov	a,#0x21
      000057 F0               [ 8]  173 	movx	@dptr,a
      000058 E4               [ 4]  174 	clr	a
      000059 A3               [12]  175 	inc	dptr
      00005A F0               [ 8]  176 	movx	@dptr,a
                                    177 ;	logf.c:229: return 0.0;
      00005B 90 00 00 00      [12]  178 	mov  dptr,#0x0000
      00005F 75 F0 00         [12]  179 	mov	b,#0x00
      000062 02s00r05r61      [16]  180 	ljmp	00106$
      000066                        181 00102$:
                                    182 ;	logf.c:231: f=frexpf(x, &n);
      000066 E5*00            [ 8]  183 	mov	a,_bpx
      000068 24 11            [ 8]  184 	add	a,#0x11
      00006A F5 F0            [ 8]  185 	mov	b,a
      00006C E4               [ 4]  186 	clr	a
      00006D 35*01            [ 8]  187 	addc	a,_bpx+1
      00006F AE F0            [ 8]  188 	mov	r6,b
      000071 FF               [ 4]  189 	mov	r7,a
      000072 78 40            [ 8]  190 	mov	r0,#0x40
      000074 90s00r00r00      [12]  191 	mov	dptr,#_frexpf_PARM_2
      000078 EE               [ 4]  192 	mov	a,r6
      000079 F0               [ 8]  193 	movx	@dptr,a
      00007A A3               [12]  194 	inc	dptr
      00007B EF               [ 4]  195 	mov	a,r7
      00007C F0               [ 8]  196 	movx	@dptr,a
      00007D A3               [12]  197 	inc	dptr
      00007E E8               [ 4]  198 	mov	a,r0
      00007F F0               [ 8]  199 	movx	@dptr,a
      000080 A3               [12]  200 	inc	dptr
      000081 E4               [ 4]  201 	clr	a
      000082 F0               [ 8]  202 	movx	@dptr,a
      000083 8A 82            [ 8]  203 	mov	dpl,r2
      000085 8B 83            [ 8]  204 	mov	dph,r3
      000087 8C 93            [ 8]  205 	mov	dpx,r4
      000089 8D F0            [ 8]  206 	mov	b,r5
      00008B 12s00r00r00      [16]  207 	lcall	_frexpf
      00008F AA 82            [ 8]  208 	mov	r2,dpl
      000091 AB 83            [ 8]  209 	mov	r3,dph
      000093 AC 93            [ 8]  210 	mov	r4,dpx
      000095 AD F0            [ 8]  211 	mov	r5,b
                                    212 ;	genAssign: resultIsFar = TRUE
      000097 E5*00            [ 8]  213 	mov	a,_bpx
      000099 C3               [ 4]  214 	clr	c
      00009A 94 FB            [ 8]  215 	subb	a,#0xfb
      00009C F5 82            [ 8]  216 	mov	dpl,a
      00009E E5*01            [ 8]  217 	mov	a,_bpx+1
      0000A0 94 FF            [ 8]  218 	subb	a,#0xff
      0000A2 F5 83            [ 8]  219 	mov	dph,a
      0000A4 75 93 40         [12]  220 	mov	dpx,#0x40
      0000A7 EA               [ 4]  221 	mov	a,r2
      0000A8 F0               [ 8]  222 	movx	@dptr,a
      0000A9 A3               [12]  223 	inc	dptr
      0000AA EB               [ 4]  224 	mov	a,r3
      0000AB F0               [ 8]  225 	movx	@dptr,a
      0000AC A3               [12]  226 	inc	dptr
      0000AD EC               [ 4]  227 	mov	a,r4
      0000AE F0               [ 8]  228 	movx	@dptr,a
      0000AF A3               [12]  229 	inc	dptr
      0000B0 ED               [ 4]  230 	mov	a,r5
      0000B1 F0               [ 8]  231 	movx	@dptr,a
                                    232 ;	logf.c:232: znum=f-0.5;
                                    233 ;	genAssign: resultIsFar = TRUE
      0000B2 90s00r00r00      [12]  234 	mov	dptr,#___fssub_PARM_2
      0000B6 E4               [ 4]  235 	clr	a
      0000B7 F0               [ 8]  236 	movx	@dptr,a
      0000B8 A3               [12]  237 	inc	dptr
      0000B9 E4               [ 4]  238 	clr	a
      0000BA F0               [ 8]  239 	movx	@dptr,a
      0000BB A3               [12]  240 	inc	dptr
      0000BC E4               [ 4]  241 	clr	a
      0000BD F0               [ 8]  242 	movx	@dptr,a
      0000BE A3               [12]  243 	inc	dptr
      0000BF 74 3F            [ 8]  244 	mov	a,#0x3f
      0000C1 F0               [ 8]  245 	movx	@dptr,a
      0000C2 E5*00            [ 8]  246 	mov	a,_bpx
      0000C4 C3               [ 4]  247 	clr	c
      0000C5 94 FB            [ 8]  248 	subb	a,#0xfb
      0000C7 F5 84            [ 8]  249 	mov	dpl1,a
      0000C9 E5*01            [ 8]  250 	mov	a,_bpx+1
      0000CB 94 FF            [ 8]  251 	subb	a,#0xff
      0000CD F5 85            [ 8]  252 	mov	dph1,a
      0000CF 75 95 40         [12]  253 	mov	dpx1,#0x40
      0000D2 05 86            [ 8]  254 	inc	dps
      0000D4 E0               [ 8]  255 	movx	a,@dptr
      0000D5 F5 82            [ 8]  256 	mov	dpl,a
      0000D7 A3               [12]  257 	inc	dptr
      0000D8 E0               [ 8]  258 	movx	a,@dptr
      0000D9 F5 83            [ 8]  259 	mov	dph,a
      0000DB A3               [12]  260 	inc	dptr
      0000DC E0               [ 8]  261 	movx	a,@dptr
      0000DD F5 93            [ 8]  262 	mov	dpx,a
      0000DF A3               [12]  263 	inc	dptr
      0000E0 E0               [ 8]  264 	movx	a,@dptr
      0000E1 F5 F0            [ 8]  265 	mov	b,a
      0000E3 75 86 00         [12]  266 	mov	dps,#0
      0000E6 12s00r00r00      [16]  267 	lcall	___fssub
      0000EA AE 82            [ 8]  268 	mov	r6,dpl
      0000EC AF 83            [ 8]  269 	mov	r7,dph
      0000EE A8 93            [ 8]  270 	mov	r0,dpx
      0000F0 A9 F0            [ 8]  271 	mov	r1,b
                                    272 ;	genAssign: resultIsFar = TRUE
      0000F2 E5*00            [ 8]  273 	mov	a,_bpx
      0000F4 C3               [ 4]  274 	clr	c
      0000F5 94 F3            [ 8]  275 	subb	a,#0xf3
      0000F7 F5 82            [ 8]  276 	mov	dpl,a
      0000F9 E5*01            [ 8]  277 	mov	a,_bpx+1
      0000FB 94 FF            [ 8]  278 	subb	a,#0xff
      0000FD F5 83            [ 8]  279 	mov	dph,a
      0000FF 75 93 40         [12]  280 	mov	dpx,#0x40
      000102 EE               [ 4]  281 	mov	a,r6
      000103 F0               [ 8]  282 	movx	@dptr,a
      000104 A3               [12]  283 	inc	dptr
      000105 EF               [ 4]  284 	mov	a,r7
      000106 F0               [ 8]  285 	movx	@dptr,a
      000107 A3               [12]  286 	inc	dptr
      000108 E8               [ 4]  287 	mov	a,r0
      000109 F0               [ 8]  288 	movx	@dptr,a
      00010A A3               [12]  289 	inc	dptr
      00010B E9               [ 4]  290 	mov	a,r1
      00010C F0               [ 8]  291 	movx	@dptr,a
                                    292 ;	logf.c:233: if (f>C0)
      00010D E5*00            [ 8]  293 	mov	a,_bpx
      00010F C3               [ 4]  294 	clr	c
      000110 94 FB            [ 8]  295 	subb	a,#0xfb
      000112 F5 82            [ 8]  296 	mov	dpl,a
      000114 E5*01            [ 8]  297 	mov	a,_bpx+1
      000116 94 FF            [ 8]  298 	subb	a,#0xff
      000118 F5 83            [ 8]  299 	mov	dph,a
      00011A 75 93 40         [12]  300 	mov	dpx,#0x40
                                    301 ;	genAssign: resultIsFar = TRUE
      00011D 75 86 21         [12]  302 	mov	dps,#0x21
      000120 90s00r00r00      [12]  303 	mov	dptr,#___fslt_PARM_2
      000124 E0               [ 8]  304 	movx	a,@dptr
      000125 F0               [ 8]  305 	movx	@dptr,a
      000126 A3               [12]  306 	inc	dptr
      000127 A3               [12]  307 	inc	dptr
      000128 E0               [ 8]  308 	movx	a,@dptr
      000129 F0               [ 8]  309 	movx	@dptr,a
      00012A A3               [12]  310 	inc	dptr
      00012B A3               [12]  311 	inc	dptr
      00012C E0               [ 8]  312 	movx	a,@dptr
      00012D F0               [ 8]  313 	movx	@dptr,a
      00012E A3               [12]  314 	inc	dptr
      00012F A3               [12]  315 	inc	dptr
      000130 E0               [ 8]  316 	movx	a,@dptr
      000131 F0               [ 8]  317 	movx	@dptr,a
      000132 75 86 00         [12]  318 	mov	dps,#0
      000135 90 35 04 F3      [12]  319 	mov	dptr,#0x3504f3
      000139 75 F0 3F         [12]  320 	mov	b,#0x3f
      00013C 12s00r00r00      [16]  321 	lcall	___fslt
      000140 E5 82            [ 8]  322 	mov	a,dpl
      000142 70 04            [12]  323 	jnz	00117$
      000144 02s00r02r06      [16]  324 	ljmp	00104$
      000148                        325 00117$:
                                    326 ;	logf.c:235: znum-=0.5;
                                    327 ;	genAssign: resultIsFar = TRUE
      000148 90s00r00r00      [12]  328 	mov	dptr,#___fssub_PARM_2
      00014C E4               [ 4]  329 	clr	a
      00014D F0               [ 8]  330 	movx	@dptr,a
      00014E A3               [12]  331 	inc	dptr
      00014F E4               [ 4]  332 	clr	a
      000150 F0               [ 8]  333 	movx	@dptr,a
      000151 A3               [12]  334 	inc	dptr
      000152 E4               [ 4]  335 	clr	a
      000153 F0               [ 8]  336 	movx	@dptr,a
      000154 A3               [12]  337 	inc	dptr
      000155 74 3F            [ 8]  338 	mov	a,#0x3f
      000157 F0               [ 8]  339 	movx	@dptr,a
      000158 E5*00            [ 8]  340 	mov	a,_bpx
      00015A C3               [ 4]  341 	clr	c
      00015B 94 F3            [ 8]  342 	subb	a,#0xf3
      00015D F5 84            [ 8]  343 	mov	dpl1,a
      00015F E5*01            [ 8]  344 	mov	a,_bpx+1
      000161 94 FF            [ 8]  345 	subb	a,#0xff
      000163 F5 85            [ 8]  346 	mov	dph1,a
      000165 75 95 40         [12]  347 	mov	dpx1,#0x40
      000168 05 86            [ 8]  348 	inc	dps
      00016A E0               [ 8]  349 	movx	a,@dptr
      00016B F5 82            [ 8]  350 	mov	dpl,a
      00016D A3               [12]  351 	inc	dptr
      00016E E0               [ 8]  352 	movx	a,@dptr
      00016F F5 83            [ 8]  353 	mov	dph,a
      000171 A3               [12]  354 	inc	dptr
      000172 E0               [ 8]  355 	movx	a,@dptr
      000173 F5 93            [ 8]  356 	mov	dpx,a
      000175 A3               [12]  357 	inc	dptr
      000176 E0               [ 8]  358 	movx	a,@dptr
      000177 F5 F0            [ 8]  359 	mov	b,a
      000179 75 86 00         [12]  360 	mov	dps,#0
      00017C 12s00r00r00      [16]  361 	lcall	___fssub
      000180 AA 82            [ 8]  362 	mov	r2,dpl
      000182 AB 83            [ 8]  363 	mov	r3,dph
      000184 AC 93            [ 8]  364 	mov	r4,dpx
      000186 AD F0            [ 8]  365 	mov	r5,b
                                    366 ;	genAssign: resultIsFar = TRUE
      000188 E5*00            [ 8]  367 	mov	a,_bpx
      00018A C3               [ 4]  368 	clr	c
      00018B 94 F3            [ 8]  369 	subb	a,#0xf3
      00018D F5 82            [ 8]  370 	mov	dpl,a
      00018F E5*01            [ 8]  371 	mov	a,_bpx+1
      000191 94 FF            [ 8]  372 	subb	a,#0xff
      000193 F5 83            [ 8]  373 	mov	dph,a
      000195 75 93 40         [12]  374 	mov	dpx,#0x40
      000198 EA               [ 4]  375 	mov	a,r2
      000199 F0               [ 8]  376 	movx	@dptr,a
      00019A A3               [12]  377 	inc	dptr
      00019B EB               [ 4]  378 	mov	a,r3
      00019C F0               [ 8]  379 	movx	@dptr,a
      00019D A3               [12]  380 	inc	dptr
      00019E EC               [ 4]  381 	mov	a,r4
      00019F F0               [ 8]  382 	movx	@dptr,a
      0001A0 A3               [12]  383 	inc	dptr
      0001A1 ED               [ 4]  384 	mov	a,r5
      0001A2 F0               [ 8]  385 	movx	@dptr,a
                                    386 ;	logf.c:236: zden=(f*0.5)+0.5;
      0001A3 E5*00            [ 8]  387 	mov	a,_bpx
      0001A5 C3               [ 4]  388 	clr	c
      0001A6 94 FB            [ 8]  389 	subb	a,#0xfb
      0001A8 F5 82            [ 8]  390 	mov	dpl,a
      0001AA E5*01            [ 8]  391 	mov	a,_bpx+1
      0001AC 94 FF            [ 8]  392 	subb	a,#0xff
      0001AE F5 83            [ 8]  393 	mov	dph,a
      0001B0 75 93 40         [12]  394 	mov	dpx,#0x40
                                    395 ;	genAssign: resultIsFar = TRUE
      0001B3 75 86 21         [12]  396 	mov	dps,#0x21
      0001B6 90s00r00r00      [12]  397 	mov	dptr,#___fsmul_PARM_2
      0001BA E0               [ 8]  398 	movx	a,@dptr
      0001BB F0               [ 8]  399 	movx	@dptr,a
      0001BC A3               [12]  400 	inc	dptr
      0001BD A3               [12]  401 	inc	dptr
      0001BE E0               [ 8]  402 	movx	a,@dptr
      0001BF F0               [ 8]  403 	movx	@dptr,a
      0001C0 A3               [12]  404 	inc	dptr
      0001C1 A3               [12]  405 	inc	dptr
      0001C2 E0               [ 8]  406 	movx	a,@dptr
      0001C3 F0               [ 8]  407 	movx	@dptr,a
      0001C4 A3               [12]  408 	inc	dptr
      0001C5 A3               [12]  409 	inc	dptr
      0001C6 E0               [ 8]  410 	movx	a,@dptr
      0001C7 F0               [ 8]  411 	movx	@dptr,a
      0001C8 75 86 00         [12]  412 	mov	dps,#0
      0001CB 90 00 00 00      [12]  413 	mov  dptr,#0x0000
      0001CF 75 F0 3F         [12]  414 	mov	b,#0x3f
      0001D2 12s00r00r00      [16]  415 	lcall	___fsmul
      0001D6 AA 82            [ 8]  416 	mov	r2,dpl
      0001D8 AB 83            [ 8]  417 	mov	r3,dph
      0001DA AC 93            [ 8]  418 	mov	r4,dpx
      0001DC AD F0            [ 8]  419 	mov	r5,b
                                    420 ;	genAssign: resultIsFar = TRUE
      0001DE 90s00r00r00      [12]  421 	mov	dptr,#___fsadd_PARM_2
      0001E2 E4               [ 4]  422 	clr	a
      0001E3 F0               [ 8]  423 	movx	@dptr,a
      0001E4 A3               [12]  424 	inc	dptr
      0001E5 E4               [ 4]  425 	clr	a
      0001E6 F0               [ 8]  426 	movx	@dptr,a
      0001E7 A3               [12]  427 	inc	dptr
      0001E8 E4               [ 4]  428 	clr	a
      0001E9 F0               [ 8]  429 	movx	@dptr,a
      0001EA A3               [12]  430 	inc	dptr
      0001EB 74 3F            [ 8]  431 	mov	a,#0x3f
      0001ED F0               [ 8]  432 	movx	@dptr,a
      0001EE 8A 82            [ 8]  433 	mov	dpl,r2
      0001F0 8B 83            [ 8]  434 	mov	dph,r3
      0001F2 8C 93            [ 8]  435 	mov	dpx,r4
      0001F4 8D F0            [ 8]  436 	mov	b,r5
      0001F6 12s00r00r00      [16]  437 	lcall	___fsadd
      0001FA AA 82            [ 8]  438 	mov	r2,dpl
      0001FC AB 83            [ 8]  439 	mov	r3,dph
      0001FE AC 93            [ 8]  440 	mov	r4,dpx
      000200 AD F0            [ 8]  441 	mov	r5,b
                                    442 ;	genAssign: resultIsFar = TRUE
      000202 02s00r02r9B      [16]  443 	ljmp	00105$
      000206                        444 00104$:
                                    445 ;	logf.c:240: n--;
      000206 E5*00            [ 8]  446 	mov	a,_bpx
      000208 C3               [ 4]  447 	clr	c
      000209 94 EF            [ 8]  448 	subb	a,#0xef
      00020B F5 82            [ 8]  449 	mov	dpl,a
      00020D E5*01            [ 8]  450 	mov	a,_bpx+1
      00020F 94 FF            [ 8]  451 	subb	a,#0xff
      000211 F5 83            [ 8]  452 	mov	dph,a
      000213 75 93 40         [12]  453 	mov	dpx,#0x40
      000216 E0               [ 8]  454 	movx	a,@dptr
      000217 24 FF            [ 8]  455 	add	a,#0xff
      000219 FE               [ 4]  456 	mov	r6,a
      00021A A3               [12]  457 	inc	dptr
      00021B E0               [ 8]  458 	movx	a,@dptr
      00021C 34 FF            [ 8]  459 	addc	a,#0xff
      00021E FF               [ 4]  460 	mov	r7,a
                                    461 ;	genAssign: resultIsFar = TRUE
      00021F E5*00            [ 8]  462 	mov	a,_bpx
      000221 C3               [ 4]  463 	clr	c
      000222 94 EF            [ 8]  464 	subb	a,#0xef
      000224 F5 82            [ 8]  465 	mov	dpl,a
      000226 E5*01            [ 8]  466 	mov	a,_bpx+1
      000228 94 FF            [ 8]  467 	subb	a,#0xff
      00022A F5 83            [ 8]  468 	mov	dph,a
      00022C 75 93 40         [12]  469 	mov	dpx,#0x40
      00022F EE               [ 4]  470 	mov	a,r6
      000230 F0               [ 8]  471 	movx	@dptr,a
      000231 A3               [12]  472 	inc	dptr
      000232 EF               [ 4]  473 	mov	a,r7
      000233 F0               [ 8]  474 	movx	@dptr,a
                                    475 ;	logf.c:241: zden=znum*0.5+0.5;
      000234 E5*00            [ 8]  476 	mov	a,_bpx
      000236 C3               [ 4]  477 	clr	c
      000237 94 F3            [ 8]  478 	subb	a,#0xf3
      000239 F5 82            [ 8]  479 	mov	dpl,a
      00023B E5*01            [ 8]  480 	mov	a,_bpx+1
      00023D 94 FF            [ 8]  481 	subb	a,#0xff
      00023F F5 83            [ 8]  482 	mov	dph,a
      000241 75 93 40         [12]  483 	mov	dpx,#0x40
                                    484 ;	genAssign: resultIsFar = TRUE
      000244 75 86 21         [12]  485 	mov	dps,#0x21
      000247 90s00r00r00      [12]  486 	mov	dptr,#___fsmul_PARM_2
      00024B E0               [ 8]  487 	movx	a,@dptr
      00024C F0               [ 8]  488 	movx	@dptr,a
      00024D A3               [12]  489 	inc	dptr
      00024E A3               [12]  490 	inc	dptr
      00024F E0               [ 8]  491 	movx	a,@dptr
      000250 F0               [ 8]  492 	movx	@dptr,a
      000251 A3               [12]  493 	inc	dptr
      000252 A3               [12]  494 	inc	dptr
      000253 E0               [ 8]  495 	movx	a,@dptr
      000254 F0               [ 8]  496 	movx	@dptr,a
      000255 A3               [12]  497 	inc	dptr
      000256 A3               [12]  498 	inc	dptr
      000257 E0               [ 8]  499 	movx	a,@dptr
      000258 F0               [ 8]  500 	movx	@dptr,a
      000259 75 86 00         [12]  501 	mov	dps,#0
      00025C 90 00 00 00      [12]  502 	mov  dptr,#0x0000
      000260 75 F0 3F         [12]  503 	mov	b,#0x3f
      000263 12s00r00r00      [16]  504 	lcall	___fsmul
      000267 AE 82            [ 8]  505 	mov	r6,dpl
      000269 AF 83            [ 8]  506 	mov	r7,dph
      00026B A8 93            [ 8]  507 	mov	r0,dpx
      00026D A9 F0            [ 8]  508 	mov	r1,b
                                    509 ;	genAssign: resultIsFar = TRUE
      00026F 90s00r00r00      [12]  510 	mov	dptr,#___fsadd_PARM_2
      000273 E4               [ 4]  511 	clr	a
      000274 F0               [ 8]  512 	movx	@dptr,a
      000275 A3               [12]  513 	inc	dptr
      000276 E4               [ 4]  514 	clr	a
      000277 F0               [ 8]  515 	movx	@dptr,a
      000278 A3               [12]  516 	inc	dptr
      000279 E4               [ 4]  517 	clr	a
      00027A F0               [ 8]  518 	movx	@dptr,a
      00027B A3               [12]  519 	inc	dptr
      00027C 74 3F            [ 8]  520 	mov	a,#0x3f
      00027E F0               [ 8]  521 	movx	@dptr,a
      00027F 8E 82            [ 8]  522 	mov	dpl,r6
      000281 8F 83            [ 8]  523 	mov	dph,r7
      000283 88 93            [ 8]  524 	mov	dpx,r0
      000285 89 F0            [ 8]  525 	mov	b,r1
      000287 12s00r00r00      [16]  526 	lcall	___fsadd
      00028B AE 82            [ 8]  527 	mov	r6,dpl
      00028D AF 83            [ 8]  528 	mov	r7,dph
      00028F A8 93            [ 8]  529 	mov	r0,dpx
      000291 A9 F0            [ 8]  530 	mov	r1,b
                                    531 ;	genAssign: resultIsFar = TRUE
      000293 8E 02            [ 8]  532 	mov	ar2,r6
      000295 8F 03            [ 8]  533 	mov	ar3,r7
      000297 88 04            [ 8]  534 	mov	ar4,r0
      000299 89 05            [ 8]  535 	mov	ar5,r1
      00029B                        536 00105$:
                                    537 ;	logf.c:243: z=znum/zden;
                                    538 ;	genAssign: resultIsFar = TRUE
      00029B 90s00r00r00      [12]  539 	mov	dptr,#___fsdiv_PARM_2
      00029F EA               [ 4]  540 	mov	a,r2
      0002A0 F0               [ 8]  541 	movx	@dptr,a
      0002A1 A3               [12]  542 	inc	dptr
      0002A2 EB               [ 4]  543 	mov	a,r3
      0002A3 F0               [ 8]  544 	movx	@dptr,a
      0002A4 A3               [12]  545 	inc	dptr
      0002A5 EC               [ 4]  546 	mov	a,r4
      0002A6 F0               [ 8]  547 	movx	@dptr,a
      0002A7 A3               [12]  548 	inc	dptr
      0002A8 ED               [ 4]  549 	mov	a,r5
      0002A9 F0               [ 8]  550 	movx	@dptr,a
      0002AA E5*00            [ 8]  551 	mov	a,_bpx
      0002AC C3               [ 4]  552 	clr	c
      0002AD 94 F3            [ 8]  553 	subb	a,#0xf3
      0002AF F5 84            [ 8]  554 	mov	dpl1,a
      0002B1 E5*01            [ 8]  555 	mov	a,_bpx+1
      0002B3 94 FF            [ 8]  556 	subb	a,#0xff
      0002B5 F5 85            [ 8]  557 	mov	dph1,a
      0002B7 75 95 40         [12]  558 	mov	dpx1,#0x40
      0002BA 05 86            [ 8]  559 	inc	dps
      0002BC E0               [ 8]  560 	movx	a,@dptr
      0002BD F5 82            [ 8]  561 	mov	dpl,a
      0002BF A3               [12]  562 	inc	dptr
      0002C0 E0               [ 8]  563 	movx	a,@dptr
      0002C1 F5 83            [ 8]  564 	mov	dph,a
      0002C3 A3               [12]  565 	inc	dptr
      0002C4 E0               [ 8]  566 	movx	a,@dptr
      0002C5 F5 93            [ 8]  567 	mov	dpx,a
      0002C7 A3               [12]  568 	inc	dptr
      0002C8 E0               [ 8]  569 	movx	a,@dptr
      0002C9 F5 F0            [ 8]  570 	mov	b,a
      0002CB 75 86 00         [12]  571 	mov	dps,#0
      0002CE 12s00r00r00      [16]  572 	lcall	___fsdiv
      0002D2 AA 82            [ 8]  573 	mov	r2,dpl
      0002D4 AB 83            [ 8]  574 	mov	r3,dph
      0002D6 AC 93            [ 8]  575 	mov	r4,dpx
      0002D8 AD F0            [ 8]  576 	mov	r5,b
                                    577 ;	genAssign: resultIsFar = TRUE
      0002DA E5*00            [ 8]  578 	mov	a,_bpx
      0002DC C3               [ 4]  579 	clr	c
      0002DD 94 F7            [ 8]  580 	subb	a,#0xf7
      0002DF F5 82            [ 8]  581 	mov	dpl,a
      0002E1 E5*01            [ 8]  582 	mov	a,_bpx+1
      0002E3 94 FF            [ 8]  583 	subb	a,#0xff
      0002E5 F5 83            [ 8]  584 	mov	dph,a
      0002E7 75 93 40         [12]  585 	mov	dpx,#0x40
      0002EA EA               [ 4]  586 	mov	a,r2
      0002EB F0               [ 8]  587 	movx	@dptr,a
      0002EC A3               [12]  588 	inc	dptr
      0002ED EB               [ 4]  589 	mov	a,r3
      0002EE F0               [ 8]  590 	movx	@dptr,a
      0002EF A3               [12]  591 	inc	dptr
      0002F0 EC               [ 4]  592 	mov	a,r4
      0002F1 F0               [ 8]  593 	movx	@dptr,a
      0002F2 A3               [12]  594 	inc	dptr
      0002F3 ED               [ 4]  595 	mov	a,r5
      0002F4 F0               [ 8]  596 	movx	@dptr,a
                                    597 ;	logf.c:244: w=z*z;
      0002F5 E5*00            [ 8]  598 	mov	a,_bpx
      0002F7 C3               [ 4]  599 	clr	c
      0002F8 94 F7            [ 8]  600 	subb	a,#0xf7
      0002FA F5 82            [ 8]  601 	mov	dpl,a
      0002FC E5*01            [ 8]  602 	mov	a,_bpx+1
      0002FE 94 FF            [ 8]  603 	subb	a,#0xff
      000300 F5 83            [ 8]  604 	mov	dph,a
      000302 75 93 40         [12]  605 	mov	dpx,#0x40
                                    606 ;	genAssign: resultIsFar = TRUE
      000305 75 86 21         [12]  607 	mov	dps,#0x21
      000308 90s00r00r00      [12]  608 	mov	dptr,#___fsmul_PARM_2
      00030C E0               [ 8]  609 	movx	a,@dptr
      00030D F0               [ 8]  610 	movx	@dptr,a
      00030E A3               [12]  611 	inc	dptr
      00030F A3               [12]  612 	inc	dptr
      000310 E0               [ 8]  613 	movx	a,@dptr
      000311 F0               [ 8]  614 	movx	@dptr,a
      000312 A3               [12]  615 	inc	dptr
      000313 A3               [12]  616 	inc	dptr
      000314 E0               [ 8]  617 	movx	a,@dptr
      000315 F0               [ 8]  618 	movx	@dptr,a
      000316 A3               [12]  619 	inc	dptr
      000317 A3               [12]  620 	inc	dptr
      000318 E0               [ 8]  621 	movx	a,@dptr
      000319 F0               [ 8]  622 	movx	@dptr,a
      00031A 75 86 00         [12]  623 	mov	dps,#0
      00031D E5*00            [ 8]  624 	mov	a,_bpx
      00031F C3               [ 4]  625 	clr	c
      000320 94 F7            [ 8]  626 	subb	a,#0xf7
      000322 F5 84            [ 8]  627 	mov	dpl1,a
      000324 E5*01            [ 8]  628 	mov	a,_bpx+1
      000326 94 FF            [ 8]  629 	subb	a,#0xff
      000328 F5 85            [ 8]  630 	mov	dph1,a
      00032A 75 95 40         [12]  631 	mov	dpx1,#0x40
      00032D 05 86            [ 8]  632 	inc	dps
      00032F E0               [ 8]  633 	movx	a,@dptr
      000330 F5 82            [ 8]  634 	mov	dpl,a
      000332 A3               [12]  635 	inc	dptr
      000333 E0               [ 8]  636 	movx	a,@dptr
      000334 F5 83            [ 8]  637 	mov	dph,a
      000336 A3               [12]  638 	inc	dptr
      000337 E0               [ 8]  639 	movx	a,@dptr
      000338 F5 93            [ 8]  640 	mov	dpx,a
      00033A A3               [12]  641 	inc	dptr
      00033B E0               [ 8]  642 	movx	a,@dptr
      00033C F5 F0            [ 8]  643 	mov	b,a
      00033E 75 86 00         [12]  644 	mov	dps,#0
      000341 12s00r00r00      [16]  645 	lcall	___fsmul
      000345 AE 82            [ 8]  646 	mov	r6,dpl
      000347 AF 83            [ 8]  647 	mov	r7,dph
      000349 A8 93            [ 8]  648 	mov	r0,dpx
      00034B A9 F0            [ 8]  649 	mov	r1,b
                                    650 ;	genAssign: resultIsFar = FALSE
      00034D 8E 02            [ 8]  651 	mov	ar2,r6
      00034F 8F 03            [ 8]  652 	mov	ar3,r7
      000351 88 04            [ 8]  653 	mov	ar4,r0
      000353 89 05            [ 8]  654 	mov	ar5,r1
                                    655 ;	logf.c:246: Rz=z+z*(w*A(w)/B(w));
                                    656 ;	genAssign: resultIsFar = TRUE
      000355 90s00r00r00      [12]  657 	mov	dptr,#___fsmul_PARM_2
      000359 EA               [ 4]  658 	mov	a,r2
      00035A F0               [ 8]  659 	movx	@dptr,a
      00035B A3               [12]  660 	inc	dptr
      00035C EB               [ 4]  661 	mov	a,r3
      00035D F0               [ 8]  662 	movx	@dptr,a
      00035E A3               [12]  663 	inc	dptr
      00035F EC               [ 4]  664 	mov	a,r4
      000360 F0               [ 8]  665 	movx	@dptr,a
      000361 A3               [12]  666 	inc	dptr
      000362 ED               [ 4]  667 	mov	a,r5
      000363 F0               [ 8]  668 	movx	@dptr,a
      000364 C0 02            [ 8]  669 	push	ar2
      000366 C0 03            [ 8]  670 	push	ar3
      000368 C0 04            [ 8]  671 	push	ar4
      00036A C0 05            [ 8]  672 	push	ar5
      00036C 90 0D 7E 3D      [12]  673 	mov	dptr,#0x0d7e3d
      000370 75 F0 BF         [12]  674 	mov	b,#0xbf
      000373 12s00r00r00      [16]  675 	lcall	___fsmul
      000377 AE 82            [ 8]  676 	mov	r6,dpl
      000379 AF 83            [ 8]  677 	mov	r7,dph
      00037B A8 93            [ 8]  678 	mov	r0,dpx
      00037D A9 F0            [ 8]  679 	mov	r1,b
      00037F D0 05            [ 8]  680 	pop	ar5
      000381 D0 04            [ 8]  681 	pop	ar4
      000383 D0 03            [ 8]  682 	pop	ar3
      000385 D0 02            [ 8]  683 	pop	ar2
                                    684 ;	genAssign: resultIsFar = TRUE
      000387 90s00r00r00      [12]  685 	mov	dptr,#___fsadd_PARM_2
      00038B 74 3A            [ 8]  686 	mov	a,#0x3a
      00038D F0               [ 8]  687 	movx	@dptr,a
      00038E A3               [12]  688 	inc	dptr
      00038F 74 3F            [ 8]  689 	mov	a,#0x3f
      000391 F0               [ 8]  690 	movx	@dptr,a
      000392 A3               [12]  691 	inc	dptr
      000393 74 D4            [ 8]  692 	mov	a,#0xd4
      000395 F0               [ 8]  693 	movx	@dptr,a
      000396 A3               [12]  694 	inc	dptr
      000397 74 C0            [ 8]  695 	mov	a,#0xc0
      000399 F0               [ 8]  696 	movx	@dptr,a
      00039A C0 06            [ 8]  697 	push	ar6
      00039C C0 07            [ 8]  698 	push	ar7
      00039E C0 00            [ 8]  699 	push	ar0
      0003A0 C0 01            [ 8]  700 	push	ar1
      0003A2 8A 82            [ 8]  701 	mov	dpl,r2
      0003A4 8B 83            [ 8]  702 	mov	dph,r3
      0003A6 8C 93            [ 8]  703 	mov	dpx,r4
      0003A8 8D F0            [ 8]  704 	mov	b,r5
      0003AA 12s00r00r00      [16]  705 	lcall	___fsadd
      0003AE AA 82            [ 8]  706 	mov	r2,dpl
      0003B0 AB 83            [ 8]  707 	mov	r3,dph
      0003B2 AC 93            [ 8]  708 	mov	r4,dpx
      0003B4 AD F0            [ 8]  709 	mov	r5,b
      0003B6 D0 01            [ 8]  710 	pop	ar1
      0003B8 D0 00            [ 8]  711 	pop	ar0
      0003BA D0 07            [ 8]  712 	pop	ar7
      0003BC D0 06            [ 8]  713 	pop	ar6
                                    714 ;	genAssign: resultIsFar = TRUE
      0003BE 90s00r00r00      [12]  715 	mov	dptr,#___fsdiv_PARM_2
      0003C2 EA               [ 4]  716 	mov	a,r2
      0003C3 F0               [ 8]  717 	movx	@dptr,a
      0003C4 A3               [12]  718 	inc	dptr
      0003C5 EB               [ 4]  719 	mov	a,r3
      0003C6 F0               [ 8]  720 	movx	@dptr,a
      0003C7 A3               [12]  721 	inc	dptr
      0003C8 EC               [ 4]  722 	mov	a,r4
      0003C9 F0               [ 8]  723 	movx	@dptr,a
      0003CA A3               [12]  724 	inc	dptr
      0003CB ED               [ 4]  725 	mov	a,r5
      0003CC F0               [ 8]  726 	movx	@dptr,a
      0003CD 8E 82            [ 8]  727 	mov	dpl,r6
      0003CF 8F 83            [ 8]  728 	mov	dph,r7
      0003D1 88 93            [ 8]  729 	mov	dpx,r0
      0003D3 89 F0            [ 8]  730 	mov	b,r1
      0003D5 12s00r00r00      [16]  731 	lcall	___fsdiv
      0003D9 AA 82            [ 8]  732 	mov	r2,dpl
      0003DB AB 83            [ 8]  733 	mov	r3,dph
      0003DD AC 93            [ 8]  734 	mov	r4,dpx
      0003DF AD F0            [ 8]  735 	mov	r5,b
                                    736 ;	genAssign: resultIsFar = TRUE
      0003E1 90s00r00r00      [12]  737 	mov	dptr,#___fsmul_PARM_2
      0003E5 EA               [ 4]  738 	mov	a,r2
      0003E6 F0               [ 8]  739 	movx	@dptr,a
      0003E7 A3               [12]  740 	inc	dptr
      0003E8 EB               [ 4]  741 	mov	a,r3
      0003E9 F0               [ 8]  742 	movx	@dptr,a
      0003EA A3               [12]  743 	inc	dptr
      0003EB EC               [ 4]  744 	mov	a,r4
      0003EC F0               [ 8]  745 	movx	@dptr,a
      0003ED A3               [12]  746 	inc	dptr
      0003EE ED               [ 4]  747 	mov	a,r5
      0003EF F0               [ 8]  748 	movx	@dptr,a
      0003F0 E5*00            [ 8]  749 	mov	a,_bpx
      0003F2 C3               [ 4]  750 	clr	c
      0003F3 94 F7            [ 8]  751 	subb	a,#0xf7
      0003F5 F5 84            [ 8]  752 	mov	dpl1,a
      0003F7 E5*01            [ 8]  753 	mov	a,_bpx+1
      0003F9 94 FF            [ 8]  754 	subb	a,#0xff
      0003FB F5 85            [ 8]  755 	mov	dph1,a
      0003FD 75 95 40         [12]  756 	mov	dpx1,#0x40
      000400 05 86            [ 8]  757 	inc	dps
      000402 E0               [ 8]  758 	movx	a,@dptr
      000403 F5 82            [ 8]  759 	mov	dpl,a
      000405 A3               [12]  760 	inc	dptr
      000406 E0               [ 8]  761 	movx	a,@dptr
      000407 F5 83            [ 8]  762 	mov	dph,a
      000409 A3               [12]  763 	inc	dptr
      00040A E0               [ 8]  764 	movx	a,@dptr
      00040B F5 93            [ 8]  765 	mov	dpx,a
      00040D A3               [12]  766 	inc	dptr
      00040E E0               [ 8]  767 	movx	a,@dptr
      00040F F5 F0            [ 8]  768 	mov	b,a
      000411 75 86 00         [12]  769 	mov	dps,#0
      000414 12s00r00r00      [16]  770 	lcall	___fsmul
      000418 AA 82            [ 8]  771 	mov	r2,dpl
      00041A AB 83            [ 8]  772 	mov	r3,dph
      00041C AC 93            [ 8]  773 	mov	r4,dpx
      00041E AD F0            [ 8]  774 	mov	r5,b
                                    775 ;	genAssign: resultIsFar = TRUE
      000420 90s00r00r00      [12]  776 	mov	dptr,#___fsadd_PARM_2
      000424 EA               [ 4]  777 	mov	a,r2
      000425 F0               [ 8]  778 	movx	@dptr,a
      000426 A3               [12]  779 	inc	dptr
      000427 EB               [ 4]  780 	mov	a,r3
      000428 F0               [ 8]  781 	movx	@dptr,a
      000429 A3               [12]  782 	inc	dptr
      00042A EC               [ 4]  783 	mov	a,r4
      00042B F0               [ 8]  784 	movx	@dptr,a
      00042C A3               [12]  785 	inc	dptr
      00042D ED               [ 4]  786 	mov	a,r5
      00042E F0               [ 8]  787 	movx	@dptr,a
      00042F E5*00            [ 8]  788 	mov	a,_bpx
      000431 C3               [ 4]  789 	clr	c
      000432 94 F7            [ 8]  790 	subb	a,#0xf7
      000434 F5 84            [ 8]  791 	mov	dpl1,a
      000436 E5*01            [ 8]  792 	mov	a,_bpx+1
      000438 94 FF            [ 8]  793 	subb	a,#0xff
      00043A F5 85            [ 8]  794 	mov	dph1,a
      00043C 75 95 40         [12]  795 	mov	dpx1,#0x40
      00043F 05 86            [ 8]  796 	inc	dps
      000441 E0               [ 8]  797 	movx	a,@dptr
      000442 F5 82            [ 8]  798 	mov	dpl,a
      000444 A3               [12]  799 	inc	dptr
      000445 E0               [ 8]  800 	movx	a,@dptr
      000446 F5 83            [ 8]  801 	mov	dph,a
      000448 A3               [12]  802 	inc	dptr
      000449 E0               [ 8]  803 	movx	a,@dptr
      00044A F5 93            [ 8]  804 	mov	dpx,a
      00044C A3               [12]  805 	inc	dptr
      00044D E0               [ 8]  806 	movx	a,@dptr
      00044E F5 F0            [ 8]  807 	mov	b,a
      000450 75 86 00         [12]  808 	mov	dps,#0
      000453 12s00r00r00      [16]  809 	lcall	___fsadd
      000457 AA 82            [ 8]  810 	mov	r2,dpl
      000459 AB 83            [ 8]  811 	mov	r3,dph
      00045B AC 93            [ 8]  812 	mov	r4,dpx
      00045D AD F0            [ 8]  813 	mov	r5,b
                                    814 ;	genAssign: resultIsFar = TRUE
      00045F 75 93 40         [12]  815 	mov	dpx,#0x40
      000462 85*01 83         [12]  816 	mov	dph,_bpx+1
      000465 85*00 82         [12]  817 	mov	dpl,_bpx
      000468 A3               [12]  818 	inc	dptr
      000469 EA               [ 4]  819 	mov	a,r2
      00046A F0               [ 8]  820 	movx	@dptr,a
      00046B A3               [12]  821 	inc	dptr
      00046C EB               [ 4]  822 	mov	a,r3
      00046D F0               [ 8]  823 	movx	@dptr,a
      00046E A3               [12]  824 	inc	dptr
      00046F EC               [ 4]  825 	mov	a,r4
      000470 F0               [ 8]  826 	movx	@dptr,a
      000471 A3               [12]  827 	inc	dptr
      000472 ED               [ 4]  828 	mov	a,r5
      000473 F0               [ 8]  829 	movx	@dptr,a
                                    830 ;	logf.c:247: xn=n;
      000474 E5*00            [ 8]  831 	mov	a,_bpx
      000476 C3               [ 4]  832 	clr	c
      000477 94 EF            [ 8]  833 	subb	a,#0xef
      000479 F5 84            [ 8]  834 	mov	dpl1,a
      00047B E5*01            [ 8]  835 	mov	a,_bpx+1
      00047D 94 FF            [ 8]  836 	subb	a,#0xff
      00047F F5 85            [ 8]  837 	mov	dph1,a
      000481 75 95 40         [12]  838 	mov	dpx1,#0x40
      000484 05 86            [ 8]  839 	inc	dps
      000486 E0               [ 8]  840 	movx	a,@dptr
      000487 F5 82            [ 8]  841 	mov	dpl,a
      000489 A3               [12]  842 	inc	dptr
      00048A E0               [ 8]  843 	movx	a,@dptr
      00048B F5 83            [ 8]  844 	mov	dph,a
      00048D 75 86 00         [12]  845 	mov	dps,#0
      000490 12s00r00r00      [16]  846 	lcall	___sint2fs
      000494 AE 82            [ 8]  847 	mov	r6,dpl
      000496 AF 83            [ 8]  848 	mov	r7,dph
      000498 A8 93            [ 8]  849 	mov	r0,dpx
      00049A A9 F0            [ 8]  850 	mov	r1,b
                                    851 ;	genAssign: resultIsFar = TRUE
                                    852 ;	logf.c:248: return ((xn*C2+Rz)+xn*C1);
                                    853 ;	genAssign: resultIsFar = TRUE
      00049C 90s00r00r00      [12]  854 	mov	dptr,#___fsmul_PARM_2
      0004A0 EE               [ 4]  855 	mov	a,r6
      0004A1 F0               [ 8]  856 	movx	@dptr,a
      0004A2 A3               [12]  857 	inc	dptr
      0004A3 EF               [ 4]  858 	mov	a,r7
      0004A4 F0               [ 8]  859 	movx	@dptr,a
      0004A5 A3               [12]  860 	inc	dptr
      0004A6 E8               [ 4]  861 	mov	a,r0
      0004A7 F0               [ 8]  862 	movx	@dptr,a
      0004A8 A3               [12]  863 	inc	dptr
      0004A9 E9               [ 4]  864 	mov	a,r1
      0004AA F0               [ 8]  865 	movx	@dptr,a
      0004AB C0 06            [ 8]  866 	push	ar6
      0004AD C0 07            [ 8]  867 	push	ar7
      0004AF C0 00            [ 8]  868 	push	ar0
      0004B1 C0 01            [ 8]  869 	push	ar1
      0004B3 90 5E 80 83      [12]  870 	mov	dptr,#0x5e8083
      0004B7 75 F0 B9         [12]  871 	mov	b,#0xb9
      0004BA 12s00r00r00      [16]  872 	lcall	___fsmul
      0004BE AA 82            [ 8]  873 	mov	r2,dpl
      0004C0 AB 83            [ 8]  874 	mov	r3,dph
      0004C2 AC 93            [ 8]  875 	mov	r4,dpx
      0004C4 AD F0            [ 8]  876 	mov	r5,b
      0004C6 D0 01            [ 8]  877 	pop	ar1
      0004C8 D0 00            [ 8]  878 	pop	ar0
      0004CA D0 07            [ 8]  879 	pop	ar7
      0004CC D0 06            [ 8]  880 	pop	ar6
      0004CE 75 93 40         [12]  881 	mov	dpx,#0x40
      0004D1 85*01 83         [12]  882 	mov	dph,_bpx+1
      0004D4 85*00 82         [12]  883 	mov	dpl,_bpx
      0004D7 A3               [12]  884 	inc	dptr
                                    885 ;	genAssign: resultIsFar = TRUE
      0004D8 75 86 21         [12]  886 	mov	dps,#0x21
      0004DB 90s00r00r00      [12]  887 	mov	dptr,#___fsadd_PARM_2
      0004DF E0               [ 8]  888 	movx	a,@dptr
      0004E0 F0               [ 8]  889 	movx	@dptr,a
      0004E1 A3               [12]  890 	inc	dptr
      0004E2 A3               [12]  891 	inc	dptr
      0004E3 E0               [ 8]  892 	movx	a,@dptr
      0004E4 F0               [ 8]  893 	movx	@dptr,a
      0004E5 A3               [12]  894 	inc	dptr
      0004E6 A3               [12]  895 	inc	dptr
      0004E7 E0               [ 8]  896 	movx	a,@dptr
      0004E8 F0               [ 8]  897 	movx	@dptr,a
      0004E9 A3               [12]  898 	inc	dptr
      0004EA A3               [12]  899 	inc	dptr
      0004EB E0               [ 8]  900 	movx	a,@dptr
      0004EC F0               [ 8]  901 	movx	@dptr,a
      0004ED 75 86 00         [12]  902 	mov	dps,#0
      0004F0 C0 06            [ 8]  903 	push	ar6
      0004F2 C0 07            [ 8]  904 	push	ar7
      0004F4 C0 00            [ 8]  905 	push	ar0
      0004F6 C0 01            [ 8]  906 	push	ar1
      0004F8 8A 82            [ 8]  907 	mov	dpl,r2
      0004FA 8B 83            [ 8]  908 	mov	dph,r3
      0004FC 8C 93            [ 8]  909 	mov	dpx,r4
      0004FE 8D F0            [ 8]  910 	mov	b,r5
      000500 12s00r00r00      [16]  911 	lcall	___fsadd
      000504 AA 82            [ 8]  912 	mov	r2,dpl
      000506 AB 83            [ 8]  913 	mov	r3,dph
      000508 AC 93            [ 8]  914 	mov	r4,dpx
      00050A AD F0            [ 8]  915 	mov	r5,b
      00050C D0 01            [ 8]  916 	pop	ar1
      00050E D0 00            [ 8]  917 	pop	ar0
      000510 D0 07            [ 8]  918 	pop	ar7
      000512 D0 06            [ 8]  919 	pop	ar6
                                    920 ;	genAssign: resultIsFar = TRUE
      000514 90s00r00r00      [12]  921 	mov	dptr,#___fsmul_PARM_2
      000518 EE               [ 4]  922 	mov	a,r6
      000519 F0               [ 8]  923 	movx	@dptr,a
      00051A A3               [12]  924 	inc	dptr
      00051B EF               [ 4]  925 	mov	a,r7
      00051C F0               [ 8]  926 	movx	@dptr,a
      00051D A3               [12]  927 	inc	dptr
      00051E E8               [ 4]  928 	mov	a,r0
      00051F F0               [ 8]  929 	movx	@dptr,a
      000520 A3               [12]  930 	inc	dptr
      000521 E9               [ 4]  931 	mov	a,r1
      000522 F0               [ 8]  932 	movx	@dptr,a
      000523 C0 02            [ 8]  933 	push	ar2
      000525 C0 03            [ 8]  934 	push	ar3
      000527 C0 04            [ 8]  935 	push	ar4
      000529 C0 05            [ 8]  936 	push	ar5
      00052B 90 31 80 00      [12]  937 	mov	dptr,#0x318000
      00052F 75 F0 3F         [12]  938 	mov	b,#0x3f
      000532 12s00r00r00      [16]  939 	lcall	___fsmul
      000536 AE 82            [ 8]  940 	mov	r6,dpl
      000538 AF 83            [ 8]  941 	mov	r7,dph
      00053A A8 93            [ 8]  942 	mov	r0,dpx
      00053C A9 F0            [ 8]  943 	mov	r1,b
      00053E D0 05            [ 8]  944 	pop	ar5
      000540 D0 04            [ 8]  945 	pop	ar4
      000542 D0 03            [ 8]  946 	pop	ar3
      000544 D0 02            [ 8]  947 	pop	ar2
                                    948 ;	genAssign: resultIsFar = TRUE
      000546 90s00r00r00      [12]  949 	mov	dptr,#___fsadd_PARM_2
      00054A EE               [ 4]  950 	mov	a,r6
      00054B F0               [ 8]  951 	movx	@dptr,a
      00054C A3               [12]  952 	inc	dptr
      00054D EF               [ 4]  953 	mov	a,r7
      00054E F0               [ 8]  954 	movx	@dptr,a
      00054F A3               [12]  955 	inc	dptr
      000550 E8               [ 4]  956 	mov	a,r0
      000551 F0               [ 8]  957 	movx	@dptr,a
      000552 A3               [12]  958 	inc	dptr
      000553 E9               [ 4]  959 	mov	a,r1
      000554 F0               [ 8]  960 	movx	@dptr,a
      000555 8A 82            [ 8]  961 	mov	dpl,r2
      000557 8B 83            [ 8]  962 	mov	dph,r3
      000559 8C 93            [ 8]  963 	mov	dpx,r4
      00055B 8D F0            [ 8]  964 	mov	b,r5
      00055D 12s00r00r00      [16]  965 	lcall	___fsadd
      000561                        966 00106$:
                                    967 ;	logf.c:249: }
      000561 85*00 81         [12]  968 	mov	sp,_bpx
      000564 85*01 9B         [12]  969 	mov	esp,_bpx+1
      000567 D0*01            [ 8]  970 	pop	_bpx+1
      000569 D0*00            [ 8]  971 	pop	_bpx
      00056B 22               [16]  972 	ret
                                    973 	.area CSEG    (CODE)
                                    974 	.area CONST   (CODE)
                                    975 	.area XINIT   (CODE)
                                    976 	.area CABS    (ABS,CODE)
