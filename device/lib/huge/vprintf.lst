                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module vprintf
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _putchar
                                     12 	.globl __print_format
                                     13 	.globl _vprintf_PARM_2
                                     14 	.globl _vprintf
                                     15 	.globl _printf
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; uninitialized external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
      000000                         59 _vprintf_PARM_2:
      000000                         60 	.ds 1
      000001                         61 _vprintf_format_65536_16:
      000001                         62 	.ds 3
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; initialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function 'put_char_to_stdout'
                                     99 ;------------------------------------------------------------
                                    100 ;p                         Allocated to stack - _bp -6
                                    101 ;c                         Allocated to registers r7 
                                    102 ;------------------------------------------------------------
                                    103 ;	vprintf.c:34: put_char_to_stdout (char c, void* p) _REENTRANT
                                    104 ;	-----------------------------------------
                                    105 ;	 function put_char_to_stdout
                                    106 ;	-----------------------------------------
      000000                        107 _put_char_to_stdout:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
      000000 C0*00            [24]  116 	push	_bp
      000002 85 81*00         [24]  117 	mov	_bp,sp
                                    118 ;	vprintf.c:37: putchar (c);
      000005 7E 00            [12]  119 	mov	r6,#0x00
      000007 8E 83            [24]  120 	mov	dph,r6
      000009 78r00            [12]  121 	mov	r0,#_putchar
      00000B 79s00            [12]  122 	mov	r1,#(_putchar >> 8)
      00000D 7As00            [12]  123 	mov	r2,#(_putchar >> 16)
      00000F 12r00r00         [24]  124 	lcall	__sdcc_banked_call
                                    125 ;	vprintf.c:38: }
      000012 D0*00            [24]  126 	pop	_bp
      000014 02r00r00         [24]  127 	ljmp	__sdcc_banked_ret
                                    128 ;------------------------------------------------------------
                                    129 ;Allocation info for local variables in function 'vprintf'
                                    130 ;------------------------------------------------------------
                                    131 ;ap                        Allocated with name '_vprintf_PARM_2'
                                    132 ;format                    Allocated with name '_vprintf_format_65536_16'
                                    133 ;------------------------------------------------------------
                                    134 ;	vprintf.c:41: vprintf (const char *format, va_list ap)
                                    135 ;	-----------------------------------------
                                    136 ;	 function vprintf
                                    137 ;	-----------------------------------------
      000017                        138 _vprintf:
      000017 AF F0            [24]  139 	mov	r7,b
      000019 AE 83            [24]  140 	mov	r6,dph
      00001B E5 82            [12]  141 	mov	a,dpl
      00001D 90r00r01         [24]  142 	mov	dptr,#_vprintf_format_65536_16
      000020 F0               [24]  143 	movx	@dptr,a
      000021 EE               [12]  144 	mov	a,r6
      000022 A3               [24]  145 	inc	dptr
      000023 F0               [24]  146 	movx	@dptr,a
      000024 EF               [12]  147 	mov	a,r7
      000025 A3               [24]  148 	inc	dptr
      000026 F0               [24]  149 	movx	@dptr,a
                                    150 ;	vprintf.c:43: return _print_format (put_char_to_stdout, NULL, format, ap);
      000027 90r00r01         [24]  151 	mov	dptr,#_vprintf_format_65536_16
      00002A E0               [24]  152 	movx	a,@dptr
      00002B FD               [12]  153 	mov	r5,a
      00002C A3               [24]  154 	inc	dptr
      00002D E0               [24]  155 	movx	a,@dptr
      00002E FE               [12]  156 	mov	r6,a
      00002F A3               [24]  157 	inc	dptr
      000030 E0               [24]  158 	movx	a,@dptr
      000031 FF               [12]  159 	mov	r7,a
      000032 90r00r00         [24]  160 	mov	dptr,#_vprintf_PARM_2
      000035 E0               [24]  161 	movx	a,@dptr
      000036 FC               [12]  162 	mov	r4,a
      000037 90r00r00         [24]  163 	mov	dptr,#__print_format_PARM_2
      00003A E4               [12]  164 	clr	a
      00003B F0               [24]  165 	movx	@dptr,a
      00003C A3               [24]  166 	inc	dptr
      00003D F0               [24]  167 	movx	@dptr,a
      00003E A3               [24]  168 	inc	dptr
      00003F F0               [24]  169 	movx	@dptr,a
      000040 90r00r00         [24]  170 	mov	dptr,#__print_format_PARM_3
      000043 ED               [12]  171 	mov	a,r5
      000044 F0               [24]  172 	movx	@dptr,a
      000045 EE               [12]  173 	mov	a,r6
      000046 A3               [24]  174 	inc	dptr
      000047 F0               [24]  175 	movx	@dptr,a
      000048 EF               [12]  176 	mov	a,r7
      000049 A3               [24]  177 	inc	dptr
      00004A F0               [24]  178 	movx	@dptr,a
      00004B 90r00r00         [24]  179 	mov	dptr,#__print_format_PARM_4
      00004E EC               [12]  180 	mov	a,r4
      00004F F0               [24]  181 	movx	@dptr,a
      000050 90r00r00         [24]  182 	mov	dptr,#_put_char_to_stdout
      000053 75 F0s00         [24]  183 	mov	b,#(_put_char_to_stdout >> 16)
      000056 78r00            [12]  184 	mov	r0,#__print_format
      000058 79s00            [12]  185 	mov	r1,#(__print_format >> 8)
      00005A 7As00            [12]  186 	mov	r2,#(__print_format >> 16)
      00005C 12r00r00         [24]  187 	lcall	__sdcc_banked_call
      00005F AE 82            [24]  188 	mov	r6,dpl
      000061 AF 83            [24]  189 	mov  r7,dph
                                    190 ;	vprintf.c:44: }
      000063 02r00r00         [24]  191 	ljmp	__sdcc_banked_ret
                                    192 ;------------------------------------------------------------
                                    193 ;Allocation info for local variables in function 'printf'
                                    194 ;------------------------------------------------------------
                                    195 ;format                    Allocated to stack - _bp -6
                                    196 ;arg                       Allocated to registers r7 
                                    197 ;i                         Allocated to registers r6 r7 
                                    198 ;------------------------------------------------------------
                                    199 ;	vprintf.c:47: printf (const char *format, ...)
                                    200 ;	-----------------------------------------
                                    201 ;	 function printf
                                    202 ;	-----------------------------------------
      000066                        203 _printf:
      000066 C0*00            [24]  204 	push	_bp
                                    205 ;	vprintf.c:52: va_start (arg, format);
      000068 E5 81            [12]  206 	mov	a,sp
      00006A F5*00            [12]  207 	mov	_bp,a
      00006C 24 FA            [12]  208 	add	a,#0xfa
      00006E FF               [12]  209 	mov	r7,a
                                    210 ;	vprintf.c:53: i = _print_format (put_char_to_stdout, NULL, format, arg);
      00006F 90r00r00         [24]  211 	mov	dptr,#__print_format_PARM_2
      000072 E4               [12]  212 	clr	a
      000073 F0               [24]  213 	movx	@dptr,a
      000074 A3               [24]  214 	inc	dptr
      000075 F0               [24]  215 	movx	@dptr,a
      000076 A3               [24]  216 	inc	dptr
      000077 F0               [24]  217 	movx	@dptr,a
      000078 E5*00            [12]  218 	mov	a,_bp
      00007A 24 FA            [12]  219 	add	a,#0xfa
      00007C F8               [12]  220 	mov	r0,a
      00007D 90r00r00         [24]  221 	mov	dptr,#__print_format_PARM_3
      000080 E6               [12]  222 	mov	a,@r0
      000081 F0               [24]  223 	movx	@dptr,a
      000082 08               [12]  224 	inc	r0
      000083 E6               [12]  225 	mov	a,@r0
      000084 A3               [24]  226 	inc	dptr
      000085 F0               [24]  227 	movx	@dptr,a
      000086 08               [12]  228 	inc	r0
      000087 E6               [12]  229 	mov	a,@r0
      000088 A3               [24]  230 	inc	dptr
      000089 F0               [24]  231 	movx	@dptr,a
      00008A 90r00r00         [24]  232 	mov	dptr,#__print_format_PARM_4
      00008D EF               [12]  233 	mov	a,r7
      00008E F0               [24]  234 	movx	@dptr,a
      00008F 90r00r00         [24]  235 	mov	dptr,#_put_char_to_stdout
      000092 75 F0s00         [24]  236 	mov	b,#(_put_char_to_stdout >> 16)
      000095 78r00            [12]  237 	mov	r0,#__print_format
      000097 79s00            [12]  238 	mov	r1,#(__print_format >> 8)
      000099 7As00            [12]  239 	mov	r2,#(__print_format >> 16)
      00009B 12r00r00         [24]  240 	lcall	__sdcc_banked_call
                                    241 ;	vprintf.c:56: return i;
      00009E AE 82            [24]  242 	mov	r6,dpl
      0000A0 AF 83            [24]  243 	mov  r7,dph
                                    244 ;	vprintf.c:57: }
      0000A2 D0*00            [24]  245 	pop	_bp
      0000A4 02r00r00         [24]  246 	ljmp	__sdcc_banked_ret
                                    247 	.area CSEG    (CODE)
                                    248 	.area CONST   (CODE)
                                    249 	.area XINIT   (CODE)
                                    250 	.area CABS    (ABS,CODE)
