                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strrchr
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strrchr_PARM_2
                                     12 	.globl _strrchr
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
      000000                         56 _strrchr_PARM_2:
      000000                         57 	.ds 1
      000001                         58 _strrchr_string_65536_26:
      000001                         59 	.ds 3
      000004                         60 _strrchr_start_65536_27:
      000004                         61 	.ds 3
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; initialized external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function 'strrchr'
                                     98 ;------------------------------------------------------------
                                     99 ;ch                        Allocated with name '_strrchr_PARM_2'
                                    100 ;string                    Allocated with name '_strrchr_string_65536_26'
                                    101 ;start                     Allocated with name '_strrchr_start_65536_27'
                                    102 ;------------------------------------------------------------
                                    103 ;	_strrchr.c:32: char * strrchr ( const char * string, char ch )
                                    104 ;	-----------------------------------------
                                    105 ;	 function strrchr
                                    106 ;	-----------------------------------------
      000000                        107 _strrchr:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
      000000 AF F0            [24]  116 	mov	r7,b
      000002 AE 83            [24]  117 	mov	r6,dph
      000004 E5 82            [12]  118 	mov	a,dpl
      000006 90r00r01         [24]  119 	mov	dptr,#_strrchr_string_65536_26
      000009 F0               [24]  120 	movx	@dptr,a
      00000A EE               [12]  121 	mov	a,r6
      00000B A3               [24]  122 	inc	dptr
      00000C F0               [24]  123 	movx	@dptr,a
      00000D EF               [12]  124 	mov	a,r7
      00000E A3               [24]  125 	inc	dptr
      00000F F0               [24]  126 	movx	@dptr,a
                                    127 ;	_strrchr.c:37: const char * start = string;
      000010 90r00r01         [24]  128 	mov	dptr,#_strrchr_string_65536_26
      000013 E0               [24]  129 	movx	a,@dptr
      000014 FD               [12]  130 	mov	r5,a
      000015 A3               [24]  131 	inc	dptr
      000016 E0               [24]  132 	movx	a,@dptr
      000017 FE               [12]  133 	mov	r6,a
      000018 A3               [24]  134 	inc	dptr
      000019 E0               [24]  135 	movx	a,@dptr
      00001A FF               [12]  136 	mov	r7,a
      00001B 90r00r04         [24]  137 	mov	dptr,#_strrchr_start_65536_27
      00001E ED               [12]  138 	mov	a,r5
      00001F F0               [24]  139 	movx	@dptr,a
      000020 EE               [12]  140 	mov	a,r6
      000021 A3               [24]  141 	inc	dptr
      000022 F0               [24]  142 	movx	@dptr,a
      000023 EF               [12]  143 	mov	a,r7
      000024 A3               [24]  144 	inc	dptr
      000025 F0               [24]  145 	movx	@dptr,a
                                    146 ;	_strrchr.c:39: while (*string++)                       /* find end of string */
      000026                        147 00101$:
      000026 8D 82            [24]  148 	mov	dpl,r5
      000028 8E 83            [24]  149 	mov	dph,r6
      00002A 8F F0            [24]  150 	mov	b,r7
      00002C 12r00r00         [24]  151 	lcall	__gptrget
      00002F FC               [12]  152 	mov	r4,a
      000030 A3               [24]  153 	inc	dptr
      000031 AD 82            [24]  154 	mov	r5,dpl
      000033 AE 83            [24]  155 	mov	r6,dph
      000035 90r00r01         [24]  156 	mov	dptr,#_strrchr_string_65536_26
      000038 ED               [12]  157 	mov	a,r5
      000039 F0               [24]  158 	movx	@dptr,a
      00003A EE               [12]  159 	mov	a,r6
      00003B A3               [24]  160 	inc	dptr
      00003C F0               [24]  161 	movx	@dptr,a
      00003D EF               [12]  162 	mov	a,r7
      00003E A3               [24]  163 	inc	dptr
      00003F F0               [24]  164 	movx	@dptr,a
      000040 EC               [12]  165 	mov	a,r4
      000041 70 E3            [24]  166 	jnz	00101$
                                    167 ;	_strrchr.c:42: while (--string != start && *string != ch)
      000043 90r00r01         [24]  168 	mov	dptr,#_strrchr_string_65536_26
      000046 ED               [12]  169 	mov	a,r5
      000047 F0               [24]  170 	movx	@dptr,a
      000048 EE               [12]  171 	mov	a,r6
      000049 A3               [24]  172 	inc	dptr
      00004A F0               [24]  173 	movx	@dptr,a
      00004B EF               [12]  174 	mov	a,r7
      00004C A3               [24]  175 	inc	dptr
      00004D F0               [24]  176 	movx	@dptr,a
      00004E 90r00r00         [24]  177 	mov	dptr,#_strrchr_PARM_2
      000051 E0               [24]  178 	movx	a,@dptr
      000052 FC               [12]  179 	mov	r4,a
      000053 90r00r04         [24]  180 	mov	dptr,#_strrchr_start_65536_27
      000056 E0               [24]  181 	movx	a,@dptr
      000057 F9               [12]  182 	mov	r1,a
      000058 A3               [24]  183 	inc	dptr
      000059 E0               [24]  184 	movx	a,@dptr
      00005A FA               [12]  185 	mov	r2,a
      00005B A3               [24]  186 	inc	dptr
      00005C E0               [24]  187 	movx	a,@dptr
      00005D FB               [12]  188 	mov	r3,a
      00005E                        189 00105$:
      00005E 1D               [12]  190 	dec	r5
      00005F BD FF 01         [24]  191 	cjne	r5,#0xff,00134$
      000062 1E               [12]  192 	dec	r6
      000063                        193 00134$:
      000063 90r00r01         [24]  194 	mov	dptr,#_strrchr_string_65536_26
      000066 ED               [12]  195 	mov	a,r5
      000067 F0               [24]  196 	movx	@dptr,a
      000068 EE               [12]  197 	mov	a,r6
      000069 A3               [24]  198 	inc	dptr
      00006A F0               [24]  199 	movx	@dptr,a
      00006B EF               [12]  200 	mov	a,r7
      00006C A3               [24]  201 	inc	dptr
      00006D F0               [24]  202 	movx	@dptr,a
      00006E C0 01            [24]  203 	push	ar1
      000070 C0 02            [24]  204 	push	ar2
      000072 C0 03            [24]  205 	push	ar3
      000074 8D 82            [24]  206 	mov	dpl,r5
      000076 8E 83            [24]  207 	mov	dph,r6
      000078 8F F0            [24]  208 	mov	b,r7
      00007A 12r00r00         [24]  209 	lcall	___gptr_cmp
      00007D 15 81            [12]  210 	dec	sp
      00007F 15 81            [12]  211 	dec	sp
      000081 15 81            [12]  212 	dec	sp
      000083 60 0D            [24]  213 	jz	00117$
      000085 8D 82            [24]  214 	mov	dpl,r5
      000087 8E 83            [24]  215 	mov	dph,r6
      000089 8F F0            [24]  216 	mov	b,r7
      00008B 12r00r00         [24]  217 	lcall	__gptrget
      00008E F8               [12]  218 	mov	r0,a
      00008F B5 04 CC         [24]  219 	cjne	a,ar4,00105$
      000092                        220 00117$:
      000092 90r00r01         [24]  221 	mov	dptr,#_strrchr_string_65536_26
      000095 ED               [12]  222 	mov	a,r5
      000096 F0               [24]  223 	movx	@dptr,a
      000097 EE               [12]  224 	mov	a,r6
      000098 A3               [24]  225 	inc	dptr
      000099 F0               [24]  226 	movx	@dptr,a
      00009A EF               [12]  227 	mov	a,r7
      00009B A3               [24]  228 	inc	dptr
      00009C F0               [24]  229 	movx	@dptr,a
                                    230 ;	_strrchr.c:45: if (*string == ch)                      /* char found ? */
      00009D 8D 82            [24]  231 	mov	dpl,r5
      00009F 8E 83            [24]  232 	mov	dph,r6
      0000A1 8F F0            [24]  233 	mov	b,r7
      0000A3 12r00r00         [24]  234 	lcall	__gptrget
      0000A6 FB               [12]  235 	mov	r3,a
      0000A7 B5 04 08         [24]  236 	cjne	a,ar4,00109$
                                    237 ;	_strrchr.c:46: return( (char *)string );
      0000AA 8D 82            [24]  238 	mov	dpl,r5
      0000AC 8E 83            [24]  239 	mov	dph,r6
      0000AE 8F F0            [24]  240 	mov	b,r7
      0000B0 80 06            [24]  241 	sjmp	00110$
      0000B2                        242 00109$:
                                    243 ;	_strrchr.c:48: return (NULL) ;
      0000B2 90 00 00         [24]  244 	mov	dptr,#0x0000
      0000B5 75 F0 00         [24]  245 	mov	b,#0x00
      0000B8                        246 00110$:
                                    247 ;	_strrchr.c:49: }
      0000B8 02r00r00         [24]  248 	ljmp	__sdcc_banked_ret
                                    249 	.area CSEG    (CODE)
                                    250 	.area CONST   (CODE)
                                    251 	.area XINIT   (CODE)
                                    252 	.area CABS    (ABS,CODE)
