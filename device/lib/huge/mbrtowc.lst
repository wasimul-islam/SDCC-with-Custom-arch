                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtowc
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbrtowc_PARM_4
                                     12 	.globl _mbrtowc_PARM_3
                                     13 	.globl _mbrtowc_PARM_2
                                     14 	.globl _mbrtowc
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 _mbrtowc_sloc0_1_0:
      000000                         35 	.ds 1
      000001                         36 _mbrtowc_sloc1_1_0:
      000001                         37 	.ds 3
      000004                         38 _mbrtowc_sloc2_1_0:
      000004                         39 	.ds 1
      000005                         40 _mbrtowc_sloc3_1_0:
      000005                         41 	.ds 3
      000008                         42 _mbrtowc_sloc4_1_0:
      000008                         43 	.ds 4
                                     44 ;--------------------------------------------------------
                                     45 ; overlayable items in internal ram
                                     46 ;--------------------------------------------------------
                                     47 ;--------------------------------------------------------
                                     48 ; indirectly addressable internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area ISEG    (DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; absolute internal ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area IABS    (ABS,DATA)
                                     55 	.area IABS    (ABS,DATA)
                                     56 ;--------------------------------------------------------
                                     57 ; bit data
                                     58 ;--------------------------------------------------------
                                     59 	.area BSEG    (BIT)
                                     60 ;--------------------------------------------------------
                                     61 ; paged external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area PSEG    (PAG,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; uninitialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XSEG    (XDATA)
      000000                         68 _mbrtowc_PARM_2:
      000000                         69 	.ds 3
      000003                         70 _mbrtowc_PARM_3:
      000003                         71 	.ds 2
      000005                         72 _mbrtowc_PARM_4:
      000005                         73 	.ds 3
      000008                         74 _mbrtowc_pwc_65536_9:
      000008                         75 	.ds 3
      00000B                         76 _mbrtowc_first_byte_65536_10:
      00000B                         77 	.ds 1
      00000C                         78 _mbrtowc_seqlen_65536_10:
      00000C                         79 	.ds 1
      00000D                         80 _mbrtowc_mbseq_65536_10:
      00000D                         81 	.ds 4
      000011                         82 _mbrtowc_codepoint_65536_10:
      000011                         83 	.ds 4
      000015                         84 _mbrtowc_i_65536_10:
      000015                         85 	.ds 1
      000016                         86 _mbrtowc_sps_65536_10:
      000016                         87 	.ds 3
                                     88 ;--------------------------------------------------------
                                     89 ; absolute external ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area XABS    (ABS,XDATA)
                                     92 ;--------------------------------------------------------
                                     93 ; initialized external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area XISEG   (XDATA)
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT0 (CODE)
                                     98 	.area GSINIT1 (CODE)
                                     99 	.area GSINIT2 (CODE)
                                    100 	.area GSINIT3 (CODE)
                                    101 	.area GSINIT4 (CODE)
                                    102 	.area GSINIT5 (CODE)
                                    103 	.area GSINIT  (CODE)
                                    104 	.area GSFINAL (CODE)
                                    105 	.area CSEG    (CODE)
                                    106 ;--------------------------------------------------------
                                    107 ; global & static initialisations
                                    108 ;--------------------------------------------------------
                                    109 	.area HOME    (CODE)
                                    110 	.area GSINIT  (CODE)
                                    111 	.area GSFINAL (CODE)
                                    112 	.area GSINIT  (CODE)
                                    113 ;--------------------------------------------------------
                                    114 ; Home
                                    115 ;--------------------------------------------------------
                                    116 	.area HOME    (CODE)
                                    117 	.area HOME    (CODE)
                                    118 ;--------------------------------------------------------
                                    119 ; code
                                    120 ;--------------------------------------------------------
                                    121 	.area CSEG    (CODE)
                                    122 ;------------------------------------------------------------
                                    123 ;Allocation info for local variables in function 'mbrtowc'
                                    124 ;------------------------------------------------------------
                                    125 ;sloc0                     Allocated with name '_mbrtowc_sloc0_1_0'
                                    126 ;sloc1                     Allocated with name '_mbrtowc_sloc1_1_0'
                                    127 ;sloc2                     Allocated with name '_mbrtowc_sloc2_1_0'
                                    128 ;sloc3                     Allocated with name '_mbrtowc_sloc3_1_0'
                                    129 ;sloc4                     Allocated with name '_mbrtowc_sloc4_1_0'
                                    130 ;s                         Allocated with name '_mbrtowc_PARM_2'
                                    131 ;n                         Allocated with name '_mbrtowc_PARM_3'
                                    132 ;ps                        Allocated with name '_mbrtowc_PARM_4'
                                    133 ;pwc                       Allocated with name '_mbrtowc_pwc_65536_9'
                                    134 ;first_byte                Allocated with name '_mbrtowc_first_byte_65536_10'
                                    135 ;seqlen                    Allocated with name '_mbrtowc_seqlen_65536_10'
                                    136 ;mbseq                     Allocated with name '_mbrtowc_mbseq_65536_10'
                                    137 ;codepoint                 Allocated with name '_mbrtowc_codepoint_65536_10'
                                    138 ;i                         Allocated with name '_mbrtowc_i_65536_10'
                                    139 ;j                         Allocated with name '_mbrtowc_j_65536_10'
                                    140 ;sps                       Allocated with name '_mbrtowc_sps_65536_10'
                                    141 ;------------------------------------------------------------
                                    142 ;	mbrtowc.c:32: size_t mbrtowc(wchar_t *restrict pwc, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    143 ;	-----------------------------------------
                                    144 ;	 function mbrtowc
                                    145 ;	-----------------------------------------
      000000                        146 _mbrtowc:
                           000007   147 	ar7 = 0x07
                           000006   148 	ar6 = 0x06
                           000005   149 	ar5 = 0x05
                           000004   150 	ar4 = 0x04
                           000003   151 	ar3 = 0x03
                           000002   152 	ar2 = 0x02
                           000001   153 	ar1 = 0x01
                           000000   154 	ar0 = 0x00
      000000 AF F0            [24]  155 	mov	r7,b
      000002 AE 83            [24]  156 	mov	r6,dph
      000004 E5 82            [12]  157 	mov	a,dpl
      000006 90r00r08         [24]  158 	mov	dptr,#_mbrtowc_pwc_65536_9
      000009 F0               [24]  159 	movx	@dptr,a
      00000A EE               [12]  160 	mov	a,r6
      00000B A3               [24]  161 	inc	dptr
      00000C F0               [24]  162 	movx	@dptr,a
      00000D EF               [12]  163 	mov	a,r7
      00000E A3               [24]  164 	inc	dptr
      00000F F0               [24]  165 	movx	@dptr,a
                                    166 ;	mbrtowc.c:41: if(!s)
      000010 90r00r00         [24]  167 	mov	dptr,#_mbrtowc_PARM_2
      000013 E0               [24]  168 	movx	a,@dptr
      000014 FD               [12]  169 	mov	r5,a
      000015 A3               [24]  170 	inc	dptr
      000016 E0               [24]  171 	movx	a,@dptr
      000017 FE               [12]  172 	mov	r6,a
      000018 A3               [24]  173 	inc	dptr
      000019 E0               [24]  174 	movx	a,@dptr
      00001A FF               [12]  175 	mov	r7,a
      00001B 90r00r00         [24]  176 	mov	dptr,#_mbrtowc_PARM_2
      00001E E0               [24]  177 	movx	a,@dptr
      00001F F5 F0            [12]  178 	mov	b,a
      000021 A3               [24]  179 	inc	dptr
      000022 E0               [24]  180 	movx	a,@dptr
      000023 45 F0            [12]  181 	orl	a,b
      000025 70 42            [24]  182 	jnz	00102$
                                    183 ;	mbrtowc.c:42: return(mbrtowc(0, "", 1, ps));
      000027 90r00r05         [24]  184 	mov	dptr,#_mbrtowc_PARM_4
      00002A E0               [24]  185 	movx	a,@dptr
      00002B FA               [12]  186 	mov	r2,a
      00002C A3               [24]  187 	inc	dptr
      00002D E0               [24]  188 	movx	a,@dptr
      00002E FB               [12]  189 	mov	r3,a
      00002F A3               [24]  190 	inc	dptr
      000030 E0               [24]  191 	movx	a,@dptr
      000031 FC               [12]  192 	mov	r4,a
      000032 90r00r00         [24]  193 	mov	dptr,#_mbrtowc_PARM_2
      000035 74r00            [12]  194 	mov	a,#___str_0
      000037 F0               [24]  195 	movx	@dptr,a
      000038 74s00            [12]  196 	mov	a,#(___str_0 >> 8)
      00003A A3               [24]  197 	inc	dptr
      00003B F0               [24]  198 	movx	@dptr,a
      00003C 74 80            [12]  199 	mov	a,#0x80
      00003E A3               [24]  200 	inc	dptr
      00003F F0               [24]  201 	movx	@dptr,a
      000040 90r00r03         [24]  202 	mov	dptr,#_mbrtowc_PARM_3
      000043 23               [12]  203 	rl	a
      000044 F0               [24]  204 	movx	@dptr,a
      000045 E4               [12]  205 	clr	a
      000046 A3               [24]  206 	inc	dptr
      000047 F0               [24]  207 	movx	@dptr,a
      000048 90r00r05         [24]  208 	mov	dptr,#_mbrtowc_PARM_4
      00004B EA               [12]  209 	mov	a,r2
      00004C F0               [24]  210 	movx	@dptr,a
      00004D EB               [12]  211 	mov	a,r3
      00004E A3               [24]  212 	inc	dptr
      00004F F0               [24]  213 	movx	@dptr,a
      000050 EC               [12]  214 	mov	a,r4
      000051 A3               [24]  215 	inc	dptr
      000052 F0               [24]  216 	movx	@dptr,a
      000053 90 00 00         [24]  217 	mov	dptr,#0x0000
      000056 75 F0 00         [24]  218 	mov	b,#0x00
      000059 78r00            [12]  219 	mov	r0,#_mbrtowc
      00005B 79s00            [12]  220 	mov	r1,#(_mbrtowc >> 8)
      00005D 7As00            [12]  221 	mov	r2,#(_mbrtowc >> 16)
      00005F 12r00r00         [24]  222 	lcall	__sdcc_banked_call
      000062 AB 82            [24]  223 	mov	r3,dpl
      000064 AC 83            [24]  224 	mov  r4,dph
      000066 02r00r00         [24]  225 	ljmp	__sdcc_banked_ret
      000069                        226 00102$:
                                    227 ;	mbrtowc.c:43: if(!n)
      000069 90r00r03         [24]  228 	mov	dptr,#_mbrtowc_PARM_3
      00006C E0               [24]  229 	movx	a,@dptr
      00006D FB               [12]  230 	mov	r3,a
      00006E A3               [24]  231 	inc	dptr
      00006F E0               [24]  232 	movx	a,@dptr
      000070 FC               [12]  233 	mov	r4,a
      000071 90r00r03         [24]  234 	mov	dptr,#_mbrtowc_PARM_3
      000074 E0               [24]  235 	movx	a,@dptr
      000075 F5 F0            [12]  236 	mov	b,a
      000077 A3               [24]  237 	inc	dptr
      000078 E0               [24]  238 	movx	a,@dptr
      000079 45 F0            [12]  239 	orl	a,b
      00007B 70 03            [24]  240 	jnz	00255$
      00007D 02r03rC7         [24]  241 	ljmp	00128$
      000080                        242 00255$:
                                    243 ;	mbrtowc.c:45: if(!ps)
      000080 90r00r05         [24]  244 	mov	dptr,#_mbrtowc_PARM_4
      000083 E0               [24]  245 	movx	a,@dptr
      000084 F5 F0            [12]  246 	mov	b,a
      000086 A3               [24]  247 	inc	dptr
      000087 E0               [24]  248 	movx	a,@dptr
      000088 45 F0            [12]  249 	orl	a,b
      00008A 70 0D            [24]  250 	jnz	00106$
                                    251 ;	mbrtowc.c:47: ps = &sps;
      00008C 90r00r05         [24]  252 	mov	dptr,#_mbrtowc_PARM_4
      00008F 74r16            [12]  253 	mov	a,#_mbrtowc_sps_65536_10
      000091 F0               [24]  254 	movx	@dptr,a
      000092 74s00            [12]  255 	mov	a,#(_mbrtowc_sps_65536_10 >> 8)
      000094 A3               [24]  256 	inc	dptr
      000095 F0               [24]  257 	movx	@dptr,a
      000096 E4               [12]  258 	clr	a
      000097 A3               [24]  259 	inc	dptr
      000098 F0               [24]  260 	movx	@dptr,a
      000099                        261 00106$:
                                    262 ;	mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
      000099 90r00r05         [24]  263 	mov	dptr,#_mbrtowc_PARM_4
      00009C E0               [24]  264 	movx	a,@dptr
      00009D F5*01            [12]  265 	mov	_mbrtowc_sloc1_1_0,a
      00009F A3               [24]  266 	inc	dptr
      0000A0 E0               [24]  267 	movx	a,@dptr
      0000A1 F5*02            [12]  268 	mov	(_mbrtowc_sloc1_1_0 + 1),a
      0000A3 A3               [24]  269 	inc	dptr
      0000A4 E0               [24]  270 	movx	a,@dptr
      0000A5 F5*03            [12]  271 	mov	(_mbrtowc_sloc1_1_0 + 2),a
      0000A7 75*00 00         [24]  272 	mov	_mbrtowc_sloc0_1_0,#0x00
      0000AA                        273 00131$:
      0000AA C0 03            [24]  274 	push	ar3
      0000AC C0 04            [24]  275 	push	ar4
      0000AE E5*00            [12]  276 	mov	a,_mbrtowc_sloc0_1_0
      0000B0 25*01            [12]  277 	add	a,_mbrtowc_sloc1_1_0
      0000B2 FA               [12]  278 	mov	r2,a
      0000B3 E4               [12]  279 	clr	a
      0000B4 35*02            [12]  280 	addc	a,(_mbrtowc_sloc1_1_0 + 1)
      0000B6 FB               [12]  281 	mov	r3,a
      0000B7 AC*03            [24]  282 	mov	r4,(_mbrtowc_sloc1_1_0 + 2)
      0000B9 8A 82            [24]  283 	mov	dpl,r2
      0000BB 8B 83            [24]  284 	mov	dph,r3
      0000BD 8C F0            [24]  285 	mov	b,r4
      0000BF 12r00r00         [24]  286 	lcall	__gptrget
      0000C2 F5*04            [12]  287 	mov	_mbrtowc_sloc2_1_0,a
      0000C4 D0 04            [24]  288 	pop	ar4
      0000C6 D0 03            [24]  289 	pop	ar3
      0000C8 E5*04            [12]  290 	mov	a,_mbrtowc_sloc2_1_0
      0000CA 60 18            [24]  291 	jz	00174$
      0000CC 74 FD            [12]  292 	mov	a,#0x100 - 0x03
      0000CE 25*00            [12]  293 	add	a,_mbrtowc_sloc0_1_0
      0000D0 40 12            [24]  294 	jc	00174$
                                    295 ;	mbrtowc.c:51: mbseq[i] = ps->c[i];
      0000D2 E5*00            [12]  296 	mov	a,_mbrtowc_sloc0_1_0
      0000D4 24r0D            [12]  297 	add	a,#_mbrtowc_mbseq_65536_10
      0000D6 F5 82            [12]  298 	mov	dpl,a
      0000D8 E4               [12]  299 	clr	a
      0000D9 34s00            [12]  300 	addc	a,#(_mbrtowc_mbseq_65536_10 >> 8)
      0000DB F5 83            [12]  301 	mov	dph,a
      0000DD E5*04            [12]  302 	mov	a,_mbrtowc_sloc2_1_0
      0000DF F0               [24]  303 	movx	@dptr,a
                                    304 ;	mbrtowc.c:50: for(i = 0; ps->c[i] && i < 3; i++)
      0000E0 05*00            [12]  305 	inc	_mbrtowc_sloc0_1_0
      0000E2 80 C6            [24]  306 	sjmp	00131$
      0000E4                        307 00174$:
      0000E4 90r00r15         [24]  308 	mov	dptr,#_mbrtowc_i_65536_10
      0000E7 E5*00            [12]  309 	mov	a,_mbrtowc_sloc0_1_0
      0000E9 F0               [24]  310 	movx	@dptr,a
                                    311 ;	mbrtowc.c:53: seqlen = 1;
      0000EA 90r00r0C         [24]  312 	mov	dptr,#_mbrtowc_seqlen_65536_10
      0000ED 74 01            [12]  313 	mov	a,#0x01
      0000EF F0               [24]  314 	movx	@dptr,a
                                    315 ;	mbrtowc.c:54: first_byte = ps->c[0] ? ps->c[0] : *s;
      0000F0 90r00r05         [24]  316 	mov	dptr,#_mbrtowc_PARM_4
      0000F3 E0               [24]  317 	movx	a,@dptr
      0000F4 F8               [12]  318 	mov	r0,a
      0000F5 A3               [24]  319 	inc	dptr
      0000F6 E0               [24]  320 	movx	a,@dptr
      0000F7 F9               [12]  321 	mov	r1,a
      0000F8 A3               [24]  322 	inc	dptr
      0000F9 E0               [24]  323 	movx	a,@dptr
      0000FA FA               [12]  324 	mov	r2,a
      0000FB 88 82            [24]  325 	mov	dpl,r0
      0000FD 89 83            [24]  326 	mov	dph,r1
      0000FF 8A F0            [24]  327 	mov	b,r2
      000101 12r00r00         [24]  328 	lcall	__gptrget
      000104 FA               [12]  329 	mov	r2,a
      000105 70 0A            [24]  330 	jnz	00148$
      000107 8D 82            [24]  331 	mov	dpl,r5
      000109 8E 83            [24]  332 	mov	dph,r6
      00010B 8F F0            [24]  333 	mov	b,r7
      00010D 12r00r00         [24]  334 	lcall	__gptrget
      000110 FA               [12]  335 	mov	r2,a
      000111                        336 00148$:
      000111 90r00r0B         [24]  337 	mov	dptr,#_mbrtowc_first_byte_65536_10
      000114 EA               [12]  338 	mov	a,r2
      000115 F0               [24]  339 	movx	@dptr,a
                                    340 ;	mbrtowc.c:56: if(first_byte & 0x80)
      000116 EA               [12]  341 	mov	a,r2
      000117 30 E7 5F         [24]  342 	jnb	acc.7,00112$
                                    343 ;	mbrtowc.c:58: while (first_byte & (0x80 >> seqlen))
      00011A 79 01            [12]  344 	mov	r1,#0x01
      00011C                        345 00108$:
      00011C C0 03            [24]  346 	push	ar3
      00011E C0 04            [24]  347 	push	ar4
      000120 89 F0            [24]  348 	mov	b,r1
      000122 05 F0            [12]  349 	inc	b
      000124 75*01 80         [24]  350 	mov	_mbrtowc_sloc1_1_0,#0x80
      000127 E4               [12]  351 	clr	a
      000128 F5*02            [12]  352 	mov	(_mbrtowc_sloc1_1_0 + 1),a
      00012A 33               [12]  353 	rlc	a
      00012B 92 D2            [24]  354 	mov	ov,c
      00012D 80 0C            [24]  355 	sjmp	00262$
      00012F                        356 00261$:
      00012F A2 D2            [12]  357 	mov	c,ov
      000131 E5*02            [12]  358 	mov	a,(_mbrtowc_sloc1_1_0 + 1)
      000133 13               [12]  359 	rrc	a
      000134 F5*02            [12]  360 	mov	(_mbrtowc_sloc1_1_0 + 1),a
      000136 E5*01            [12]  361 	mov	a,_mbrtowc_sloc1_1_0
      000138 13               [12]  362 	rrc	a
      000139 F5*01            [12]  363 	mov	_mbrtowc_sloc1_1_0,a
      00013B                        364 00262$:
      00013B D5 F0 F1         [24]  365 	djnz	b,00261$
      00013E 8A 03            [24]  366 	mov	ar3,r2
      000140 7C 00            [12]  367 	mov	r4,#0x00
      000142 E5*01            [12]  368 	mov	a,_mbrtowc_sloc1_1_0
      000144 52 03            [12]  369 	anl	ar3,a
      000146 E5*02            [12]  370 	mov	a,(_mbrtowc_sloc1_1_0 + 1)
      000148 52 04            [12]  371 	anl	ar4,a
      00014A EB               [12]  372 	mov	a,r3
      00014B 4C               [12]  373 	orl	a,r4
      00014C D0 04            [24]  374 	pop	ar4
      00014E D0 03            [24]  375 	pop	ar3
      000150 60 03            [24]  376 	jz	00175$
                                    377 ;	mbrtowc.c:59: seqlen++;
      000152 09               [12]  378 	inc	r1
      000153 80 C7            [24]  379 	sjmp	00108$
      000155                        380 00175$:
      000155 90r00r0C         [24]  381 	mov	dptr,#_mbrtowc_seqlen_65536_10
      000158 E9               [12]  382 	mov	a,r1
      000159 F0               [24]  383 	movx	@dptr,a
                                    384 ;	mbrtowc.c:60: first_byte &= (0xff >> (seqlen + 1));
      00015A 09               [12]  385 	inc	r1
      00015B 89 F0            [24]  386 	mov	b,r1
      00015D 05 F0            [12]  387 	inc	b
      00015F 78 FF            [12]  388 	mov	r0,#0xff
      000161 E4               [12]  389 	clr	a
      000162 F9               [12]  390 	mov	r1,a
      000163 33               [12]  391 	rlc	a
      000164 92 D2            [24]  392 	mov	ov,c
      000166 80 08            [24]  393 	sjmp	00265$
      000168                        394 00264$:
      000168 A2 D2            [12]  395 	mov	c,ov
      00016A E9               [12]  396 	mov	a,r1
      00016B 13               [12]  397 	rrc	a
      00016C F9               [12]  398 	mov	r1,a
      00016D E8               [12]  399 	mov	a,r0
      00016E 13               [12]  400 	rrc	a
      00016F F8               [12]  401 	mov	r0,a
      000170                        402 00265$:
      000170 D5 F0 F5         [24]  403 	djnz	b,00264$
      000173 90r00r0B         [24]  404 	mov	dptr,#_mbrtowc_first_byte_65536_10
      000176 E8               [12]  405 	mov	a,r0
      000177 5A               [12]  406 	anl	a,r2
      000178 F0               [24]  407 	movx	@dptr,a
      000179                        408 00112$:
                                    409 ;	mbrtowc.c:63: if(seqlen > 4)
      000179 90r00r0C         [24]  410 	mov	dptr,#_mbrtowc_seqlen_65536_10
      00017C E0               [24]  411 	movx	a,@dptr
      00017D FA               [12]  412 	mov  r2,a
      00017E 24 FB            [12]  413 	add	a,#0xff - 0x04
      000180 50 03            [24]  414 	jnc	00266$
      000182 02r03rC7         [24]  415 	ljmp	00128$
      000185                        416 00266$:
                                    417 ;	mbrtowc.c:66: if(i + n < seqlen) // Incomplete multibyte character
      000185 C0 05            [24]  418 	push	ar5
      000187 C0 06            [24]  419 	push	ar6
      000189 C0 07            [24]  420 	push	ar7
      00018B 90r00r15         [24]  421 	mov	dptr,#_mbrtowc_i_65536_10
      00018E E0               [24]  422 	movx	a,@dptr
      00018F F9               [12]  423 	mov	r1,a
      000190 F8               [12]  424 	mov	r0,a
      000191 7F 00            [12]  425 	mov	r7,#0x00
      000193 EB               [12]  426 	mov	a,r3
      000194 28               [12]  427 	add	a,r0
      000195 F8               [12]  428 	mov	r0,a
      000196 EC               [12]  429 	mov	a,r4
      000197 3F               [12]  430 	addc	a,r7
      000198 FF               [12]  431 	mov	r7,a
      000199 7E 00            [12]  432 	mov	r6,#0x00
      00019B C3               [12]  433 	clr	c
      00019C E8               [12]  434 	mov	a,r0
      00019D 9A               [12]  435 	subb	a,r2
      00019E EF               [12]  436 	mov	a,r7
      00019F 9E               [12]  437 	subb	a,r6
      0001A0 D0 07            [24]  438 	pop	ar7
      0001A2 D0 06            [24]  439 	pop	ar6
      0001A4 D0 05            [24]  440 	pop	ar5
      0001A6 50 5E            [24]  441 	jnc	00164$
                                    442 ;	mbrtowc.c:70: return(-2);
      0001A8 90r00r05         [24]  443 	mov	dptr,#_mbrtowc_PARM_4
      0001AB E0               [24]  444 	movx	a,@dptr
      0001AC F5*01            [12]  445 	mov	_mbrtowc_sloc1_1_0,a
      0001AE A3               [24]  446 	inc	dptr
      0001AF E0               [24]  447 	movx	a,@dptr
      0001B0 F5*02            [12]  448 	mov	(_mbrtowc_sloc1_1_0 + 1),a
      0001B2 A3               [24]  449 	inc	dptr
      0001B3 E0               [24]  450 	movx	a,@dptr
      0001B4 F5*03            [12]  451 	mov	(_mbrtowc_sloc1_1_0 + 2),a
      0001B6 8D*05            [24]  452 	mov	_mbrtowc_sloc3_1_0,r5
      0001B8 8E*06            [24]  453 	mov	(_mbrtowc_sloc3_1_0 + 1),r6
      0001BA 8F*07            [24]  454 	mov	(_mbrtowc_sloc3_1_0 + 2),r7
      0001BC 89*04            [24]  455 	mov	_mbrtowc_sloc2_1_0,r1
      0001BE                        456 00134$:
                                    457 ;	mbrtowc.c:68: for(;n-- ; i++)
      0001BE 8B 00            [24]  458 	mov	ar0,r3
      0001C0 8C 02            [24]  459 	mov	ar2,r4
      0001C2 1B               [12]  460 	dec	r3
      0001C3 BB FF 01         [24]  461 	cjne	r3,#0xff,00268$
      0001C6 1C               [12]  462 	dec	r4
      0001C7                        463 00268$:
      0001C7 E8               [12]  464 	mov	a,r0
      0001C8 4A               [12]  465 	orl	a,r2
      0001C9 60 35            [24]  466 	jz	00115$
                                    467 ;	mbrtowc.c:69: ps->c[i] = *s++;
      0001CB C0 03            [24]  468 	push	ar3
      0001CD C0 04            [24]  469 	push	ar4
      0001CF E5*04            [12]  470 	mov	a,_mbrtowc_sloc2_1_0
      0001D1 25*01            [12]  471 	add	a,_mbrtowc_sloc1_1_0
      0001D3 F8               [12]  472 	mov	r0,a
      0001D4 E4               [12]  473 	clr	a
      0001D5 35*02            [12]  474 	addc	a,(_mbrtowc_sloc1_1_0 + 1)
      0001D7 FA               [12]  475 	mov	r2,a
      0001D8 AC*03            [24]  476 	mov	r4,(_mbrtowc_sloc1_1_0 + 2)
      0001DA 85*05 82         [24]  477 	mov	dpl,_mbrtowc_sloc3_1_0
      0001DD 85*06 83         [24]  478 	mov	dph,(_mbrtowc_sloc3_1_0 + 1)
      0001E0 85*07 F0         [24]  479 	mov	b,(_mbrtowc_sloc3_1_0 + 2)
      0001E3 12r00r00         [24]  480 	lcall	__gptrget
      0001E6 FB               [12]  481 	mov	r3,a
      0001E7 A3               [24]  482 	inc	dptr
      0001E8 85 82*05         [24]  483 	mov	_mbrtowc_sloc3_1_0,dpl
      0001EB 85 83*06         [24]  484 	mov	(_mbrtowc_sloc3_1_0 + 1),dph
      0001EE 88 82            [24]  485 	mov	dpl,r0
      0001F0 8A 83            [24]  486 	mov	dph,r2
      0001F2 8C F0            [24]  487 	mov	b,r4
      0001F4 EB               [12]  488 	mov	a,r3
      0001F5 12r00r00         [24]  489 	lcall	__gptrput
                                    490 ;	mbrtowc.c:68: for(;n-- ; i++)
      0001F8 05*04            [12]  491 	inc	_mbrtowc_sloc2_1_0
      0001FA D0 04            [24]  492 	pop	ar4
      0001FC D0 03            [24]  493 	pop	ar3
      0001FE 80 BE            [24]  494 	sjmp	00134$
      000200                        495 00115$:
                                    496 ;	mbrtowc.c:70: return(-2);
      000200 90 FF FE         [24]  497 	mov	dptr,#0xfffe
      000203 02r00r00         [24]  498 	ljmp	__sdcc_banked_ret
                                    499 ;	mbrtowc.c:73: for(j = 0; j < i; j++)
      000206                        500 00164$:
      000206 90r00r05         [24]  501 	mov	dptr,#_mbrtowc_PARM_4
      000209 E0               [24]  502 	movx	a,@dptr
      00020A FA               [12]  503 	mov	r2,a
      00020B A3               [24]  504 	inc	dptr
      00020C E0               [24]  505 	movx	a,@dptr
      00020D FB               [12]  506 	mov	r3,a
      00020E A3               [24]  507 	inc	dptr
      00020F E0               [24]  508 	movx	a,@dptr
      000210 FC               [12]  509 	mov	r4,a
      000211 78 00            [12]  510 	mov	r0,#0x00
      000213                        511 00137$:
      000213 C3               [12]  512 	clr	c
      000214 E8               [12]  513 	mov	a,r0
      000215 99               [12]  514 	subb	a,r1
      000216 50 21            [24]  515 	jnc	00118$
                                    516 ;	mbrtowc.c:74: ps->c[j] = 0;
      000218 C0 05            [24]  517 	push	ar5
      00021A C0 06            [24]  518 	push	ar6
      00021C C0 07            [24]  519 	push	ar7
      00021E E8               [12]  520 	mov	a,r0
      00021F 2A               [12]  521 	add	a,r2
      000220 FD               [12]  522 	mov	r5,a
      000221 E4               [12]  523 	clr	a
      000222 3B               [12]  524 	addc	a,r3
      000223 FE               [12]  525 	mov	r6,a
      000224 8C 07            [24]  526 	mov	ar7,r4
      000226 8D 82            [24]  527 	mov	dpl,r5
      000228 8E 83            [24]  528 	mov	dph,r6
      00022A 8F F0            [24]  529 	mov	b,r7
      00022C E4               [12]  530 	clr	a
      00022D 12r00r00         [24]  531 	lcall	__gptrput
                                    532 ;	mbrtowc.c:73: for(j = 0; j < i; j++)
      000230 08               [12]  533 	inc	r0
      000231 D0 07            [24]  534 	pop	ar7
      000233 D0 06            [24]  535 	pop	ar6
      000235 D0 05            [24]  536 	pop	ar5
      000237 80 DA            [24]  537 	sjmp	00137$
      000239                        538 00118$:
                                    539 ;	mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
      000239 90r00r03         [24]  540 	mov	dptr,#_mbrtowc_PARM_3
      00023C 74 01            [12]  541 	mov	a,#0x01
      00023E F0               [24]  542 	movx	@dptr,a
      00023F E4               [12]  543 	clr	a
      000240 A3               [24]  544 	inc	dptr
      000241 F0               [24]  545 	movx	@dptr,a
      000242 E9               [12]  546 	mov	a,r1
      000243 60 04            [24]  547 	jz	00149$
      000245 7C 00            [12]  548 	mov	r4,#0x00
      000247 80 04            [24]  549 	sjmp	00150$
      000249                        550 00149$:
      000249 79 01            [12]  551 	mov	r1,#0x01
      00024B 7C 00            [12]  552 	mov	r4,#0x00
      00024D                        553 00150$:
      00024D 90r00r0C         [24]  554 	mov	dptr,#_mbrtowc_seqlen_65536_10
      000250 E0               [24]  555 	movx	a,@dptr
      000251 FC               [12]  556 	mov	r4,a
      000252 7A 01            [12]  557 	mov	r2,#0x01
      000254 7B 00            [12]  558 	mov	r3,#0x00
      000256                        559 00140$:
      000256 C3               [12]  560 	clr	c
      000257 E9               [12]  561 	mov	a,r1
      000258 9C               [12]  562 	subb	a,r4
      000259 50 49            [24]  563 	jnc	00121$
                                    564 ;	mbrtowc.c:78: mbseq[i] = *s++;
      00025B C0 04            [24]  565 	push	ar4
      00025D E9               [12]  566 	mov	a,r1
      00025E 24r0D            [12]  567 	add	a,#_mbrtowc_mbseq_65536_10
      000260 F5*05            [12]  568 	mov	_mbrtowc_sloc3_1_0,a
      000262 E4               [12]  569 	clr	a
      000263 34s00            [12]  570 	addc	a,#(_mbrtowc_mbseq_65536_10 >> 8)
      000265 F5*06            [12]  571 	mov	(_mbrtowc_sloc3_1_0 + 1),a
      000267 8D 82            [24]  572 	mov	dpl,r5
      000269 8E 83            [24]  573 	mov	dph,r6
      00026B 8F F0            [24]  574 	mov	b,r7
      00026D 12r00r00         [24]  575 	lcall	__gptrget
      000270 FC               [12]  576 	mov	r4,a
      000271 A3               [24]  577 	inc	dptr
      000272 AD 82            [24]  578 	mov	r5,dpl
      000274 AE 83            [24]  579 	mov	r6,dph
      000276 85*05 82         [24]  580 	mov	dpl,_mbrtowc_sloc3_1_0
      000279 85*06 83         [24]  581 	mov	dph,(_mbrtowc_sloc3_1_0 + 1)
      00027C EC               [12]  582 	mov	a,r4
      00027D F0               [24]  583 	movx	@dptr,a
                                    584 ;	mbrtowc.c:79: if((mbseq[i] & 0xc0) != 0x80)
      00027E 8C 00            [24]  585 	mov	ar0,r4
      000280 53 00 C0         [24]  586 	anl	ar0,#0xc0
      000283 7C 00            [12]  587 	mov	r4,#0x00
      000285 B8 80 05         [24]  588 	cjne	r0,#0x80,00273$
      000288 BC 00 02         [24]  589 	cjne	r4,#0x00,00273$
      00028B 80 05            [24]  590 	sjmp	00274$
      00028D                        591 00273$:
      00028D D0 04            [24]  592 	pop	ar4
      00028F 02r03rC7         [24]  593 	ljmp	00128$
      000292                        594 00274$:
      000292 D0 04            [24]  595 	pop	ar4
                                    596 ;	mbrtowc.c:76: for(n = 1, i = i ? i : 1; i < seqlen; i++, n++)
      000294 09               [12]  597 	inc	r1
      000295 0A               [12]  598 	inc	r2
      000296 BA 00 01         [24]  599 	cjne	r2,#0x00,00275$
      000299 0B               [12]  600 	inc	r3
      00029A                        601 00275$:
      00029A 90r00r03         [24]  602 	mov	dptr,#_mbrtowc_PARM_3
      00029D EA               [12]  603 	mov	a,r2
      00029E F0               [24]  604 	movx	@dptr,a
      00029F EB               [12]  605 	mov	a,r3
      0002A0 A3               [24]  606 	inc	dptr
      0002A1 F0               [24]  607 	movx	@dptr,a
      0002A2 80 B2            [24]  608 	sjmp	00140$
      0002A4                        609 00121$:
                                    610 ;	mbrtowc.c:83: codepoint = first_byte;
      0002A4 90r00r0B         [24]  611 	mov	dptr,#_mbrtowc_first_byte_65536_10
      0002A7 E0               [24]  612 	movx	a,@dptr
      0002A8 90r00r11         [24]  613 	mov	dptr,#_mbrtowc_codepoint_65536_10
      0002AB F0               [24]  614 	movx	@dptr,a
      0002AC E4               [12]  615 	clr	a
      0002AD A3               [24]  616 	inc	dptr
      0002AE F0               [24]  617 	movx	@dptr,a
      0002AF A3               [24]  618 	inc	dptr
      0002B0 F0               [24]  619 	movx	@dptr,a
      0002B1 A3               [24]  620 	inc	dptr
      0002B2 F0               [24]  621 	movx	@dptr,a
                                    622 ;	mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
      0002B3 7Dr0E            [12]  623 	mov	r5,#(_mbrtowc_mbseq_65536_10 + 0x0001)
      0002B5 7Es00            [12]  624 	mov	r6,#((_mbrtowc_mbseq_65536_10 + 0x0001) >> 8)
      0002B7 FF               [12]  625 	mov	r7,a
      0002B8 1C               [12]  626 	dec	r4
      0002B9                        627 00143$:
      0002B9 EC               [12]  628 	mov	a,r4
      0002BA 70 03            [24]  629 	jnz	00276$
      0002BC 02r03r50         [24]  630 	ljmp	00122$
      0002BF                        631 00276$:
                                    632 ;	mbrtowc.c:87: codepoint <<= 6;
      0002BF 90r00r11         [24]  633 	mov	dptr,#_mbrtowc_codepoint_65536_10
      0002C2 E0               [24]  634 	movx	a,@dptr
      0002C3 F8               [12]  635 	mov	r0,a
      0002C4 A3               [24]  636 	inc	dptr
      0002C5 E0               [24]  637 	movx	a,@dptr
      0002C6 F9               [12]  638 	mov	r1,a
      0002C7 A3               [24]  639 	inc	dptr
      0002C8 E0               [24]  640 	movx	a,@dptr
      0002C9 FA               [12]  641 	mov	r2,a
      0002CA A3               [24]  642 	inc	dptr
      0002CB E0               [24]  643 	movx	a,@dptr
      0002CC 54 03            [12]  644 	anl	a,#0x03
      0002CE A2 E0            [12]  645 	mov	c,acc.0
      0002D0 CA               [12]  646 	xch	a,r2
      0002D1 13               [12]  647 	rrc	a
      0002D2 CA               [12]  648 	xch	a,r2
      0002D3 13               [12]  649 	rrc	a
      0002D4 A2 E0            [12]  650 	mov	c,acc.0
      0002D6 CA               [12]  651 	xch	a,r2
      0002D7 13               [12]  652 	rrc	a
      0002D8 CA               [12]  653 	xch	a,r2
      0002D9 13               [12]  654 	rrc	a
      0002DA CA               [12]  655 	xch	a,r2
      0002DB FB               [12]  656 	mov	r3,a
      0002DC E9               [12]  657 	mov	a,r1
      0002DD 03               [12]  658 	rr	a
      0002DE 03               [12]  659 	rr	a
      0002DF 54 3F            [12]  660 	anl	a,#0x3f
      0002E1 4A               [12]  661 	orl	a,r2
      0002E2 FA               [12]  662 	mov	r2,a
      0002E3 E9               [12]  663 	mov	a,r1
      0002E4 54 03            [12]  664 	anl	a,#0x03
      0002E6 A2 E0            [12]  665 	mov	c,acc.0
      0002E8 C8               [12]  666 	xch	a,r0
      0002E9 13               [12]  667 	rrc	a
      0002EA C8               [12]  668 	xch	a,r0
      0002EB 13               [12]  669 	rrc	a
      0002EC A2 E0            [12]  670 	mov	c,acc.0
      0002EE C8               [12]  671 	xch	a,r0
      0002EF 13               [12]  672 	rrc	a
      0002F0 C8               [12]  673 	xch	a,r0
      0002F1 13               [12]  674 	rrc	a
      0002F2 C8               [12]  675 	xch	a,r0
      0002F3 F9               [12]  676 	mov	r1,a
      0002F4 90r00r11         [24]  677 	mov	dptr,#_mbrtowc_codepoint_65536_10
      0002F7 E8               [12]  678 	mov	a,r0
      0002F8 F0               [24]  679 	movx	@dptr,a
      0002F9 E9               [12]  680 	mov	a,r1
      0002FA A3               [24]  681 	inc	dptr
      0002FB F0               [24]  682 	movx	@dptr,a
      0002FC EA               [12]  683 	mov	a,r2
      0002FD A3               [24]  684 	inc	dptr
      0002FE F0               [24]  685 	movx	@dptr,a
      0002FF EB               [12]  686 	mov	a,r3
      000300 A3               [24]  687 	inc	dptr
      000301 F0               [24]  688 	movx	@dptr,a
                                    689 ;	mbrtowc.c:88: codepoint |= (*s & 0x3f);
      000302 8D 82            [24]  690 	mov	dpl,r5
      000304 8E 83            [24]  691 	mov	dph,r6
      000306 8F F0            [24]  692 	mov	b,r7
      000308 12r00r00         [24]  693 	lcall	__gptrget
      00030B FB               [12]  694 	mov	r3,a
      00030C A3               [24]  695 	inc	dptr
      00030D AD 82            [24]  696 	mov	r5,dpl
      00030F AE 83            [24]  697 	mov	r6,dph
      000311 7A 00            [12]  698 	mov	r2,#0x00
      000313 74 3F            [12]  699 	mov	a,#0x3f
      000315 5B               [12]  700 	anl	a,r3
      000316 F5*05            [12]  701 	mov	_mbrtowc_sloc3_1_0,a
      000318 8A*06            [24]  702 	mov	(_mbrtowc_sloc3_1_0 + 1),r2
      00031A 90r00r11         [24]  703 	mov	dptr,#_mbrtowc_codepoint_65536_10
      00031D E0               [24]  704 	movx	a,@dptr
      00031E F5*08            [12]  705 	mov	_mbrtowc_sloc4_1_0,a
      000320 A3               [24]  706 	inc	dptr
      000321 E0               [24]  707 	movx	a,@dptr
      000322 F5*09            [12]  708 	mov	(_mbrtowc_sloc4_1_0 + 1),a
      000324 A3               [24]  709 	inc	dptr
      000325 E0               [24]  710 	movx	a,@dptr
      000326 F5*0A            [12]  711 	mov	(_mbrtowc_sloc4_1_0 + 2),a
      000328 A3               [24]  712 	inc	dptr
      000329 E0               [24]  713 	movx	a,@dptr
      00032A F5*0B            [12]  714 	mov	(_mbrtowc_sloc4_1_0 + 3),a
      00032C A8*05            [24]  715 	mov	r0,_mbrtowc_sloc3_1_0
      00032E E5*06            [12]  716 	mov	a,(_mbrtowc_sloc3_1_0 + 1)
      000330 F9               [12]  717 	mov	r1,a
      000331 33               [12]  718 	rlc	a
      000332 95 E0            [12]  719 	subb	a,acc
      000334 FA               [12]  720 	mov	r2,a
      000335 FB               [12]  721 	mov	r3,a
      000336 90r00r11         [24]  722 	mov	dptr,#_mbrtowc_codepoint_65536_10
      000339 E8               [12]  723 	mov	a,r0
      00033A 45*08            [12]  724 	orl	a,_mbrtowc_sloc4_1_0
      00033C F0               [24]  725 	movx	@dptr,a
      00033D E9               [12]  726 	mov	a,r1
      00033E 45*09            [12]  727 	orl	a,(_mbrtowc_sloc4_1_0 + 1)
      000340 A3               [24]  728 	inc	dptr
      000341 F0               [24]  729 	movx	@dptr,a
      000342 EA               [12]  730 	mov	a,r2
      000343 45*0A            [12]  731 	orl	a,(_mbrtowc_sloc4_1_0 + 2)
      000345 A3               [24]  732 	inc	dptr
      000346 F0               [24]  733 	movx	@dptr,a
      000347 EB               [12]  734 	mov	a,r3
      000348 45*0B            [12]  735 	orl	a,(_mbrtowc_sloc4_1_0 + 3)
      00034A A3               [24]  736 	inc	dptr
      00034B F0               [24]  737 	movx	@dptr,a
                                    738 ;	mbrtowc.c:89: s++;
                                    739 ;	mbrtowc.c:85: for(s = mbseq + 1, seqlen--; seqlen; seqlen--)
      00034C 1C               [12]  740 	dec	r4
      00034D 02r02rB9         [24]  741 	ljmp	00143$
      000350                        742 00122$:
                                    743 ;	mbrtowc.c:92: if(codepoint >= 0xd800 && codepoint <= 0xdfff) // UTF-16 surrogate.
      000350 90r00r11         [24]  744 	mov	dptr,#_mbrtowc_codepoint_65536_10
      000353 E0               [24]  745 	movx	a,@dptr
      000354 FC               [12]  746 	mov	r4,a
      000355 A3               [24]  747 	inc	dptr
      000356 E0               [24]  748 	movx	a,@dptr
      000357 FD               [12]  749 	mov	r5,a
      000358 A3               [24]  750 	inc	dptr
      000359 E0               [24]  751 	movx	a,@dptr
      00035A FE               [12]  752 	mov	r6,a
      00035B A3               [24]  753 	inc	dptr
      00035C E0               [24]  754 	movx	a,@dptr
      00035D FF               [12]  755 	mov	r7,a
      00035E C3               [12]  756 	clr	c
      00035F ED               [12]  757 	mov	a,r5
      000360 94 D8            [12]  758 	subb	a,#0xd8
      000362 EE               [12]  759 	mov	a,r6
      000363 94 00            [12]  760 	subb	a,#0x00
      000365 EF               [12]  761 	mov	a,r7
      000366 94 00            [12]  762 	subb	a,#0x00
      000368 40 11            [24]  763 	jc	00124$
      00036A 74 FF            [12]  764 	mov	a,#0xff
      00036C 9C               [12]  765 	subb	a,r4
      00036D 74 DF            [12]  766 	mov	a,#0xdf
      00036F 9D               [12]  767 	subb	a,r5
      000370 E4               [12]  768 	clr	a
      000371 9E               [12]  769 	subb	a,r6
      000372 E4               [12]  770 	clr	a
      000373 9F               [12]  771 	subb	a,r7
      000374 40 05            [24]  772 	jc	00124$
                                    773 ;	mbrtowc.c:93: return(-1);
      000376 90 FF FF         [24]  774 	mov	dptr,#0xffff
      000379 80 58            [24]  775 	sjmp	00145$
      00037B                        776 00124$:
                                    777 ;	mbrtowc.c:95: if(pwc)
      00037B 90r00r08         [24]  778 	mov	dptr,#_mbrtowc_pwc_65536_9
      00037E E0               [24]  779 	movx	a,@dptr
      00037F FD               [12]  780 	mov	r5,a
      000380 A3               [24]  781 	inc	dptr
      000381 E0               [24]  782 	movx	a,@dptr
      000382 FE               [12]  783 	mov	r6,a
      000383 A3               [24]  784 	inc	dptr
      000384 E0               [24]  785 	movx	a,@dptr
      000385 FF               [12]  786 	mov	r7,a
      000386 90r00r08         [24]  787 	mov	dptr,#_mbrtowc_pwc_65536_9
      000389 E0               [24]  788 	movx	a,@dptr
      00038A F5 F0            [12]  789 	mov	b,a
      00038C A3               [24]  790 	inc	dptr
      00038D E0               [24]  791 	movx	a,@dptr
      00038E 45 F0            [12]  792 	orl	a,b
      000390 60 27            [24]  793 	jz	00127$
                                    794 ;	mbrtowc.c:96: *pwc = codepoint;
      000392 90r00r11         [24]  795 	mov	dptr,#_mbrtowc_codepoint_65536_10
      000395 E0               [24]  796 	movx	a,@dptr
      000396 F9               [12]  797 	mov	r1,a
      000397 A3               [24]  798 	inc	dptr
      000398 E0               [24]  799 	movx	a,@dptr
      000399 FA               [12]  800 	mov	r2,a
      00039A A3               [24]  801 	inc	dptr
      00039B E0               [24]  802 	movx	a,@dptr
      00039C FB               [12]  803 	mov	r3,a
      00039D A3               [24]  804 	inc	dptr
      00039E E0               [24]  805 	movx	a,@dptr
      00039F FC               [12]  806 	mov	r4,a
      0003A0 8D 82            [24]  807 	mov	dpl,r5
      0003A2 8E 83            [24]  808 	mov	dph,r6
      0003A4 8F F0            [24]  809 	mov	b,r7
      0003A6 E9               [12]  810 	mov	a,r1
      0003A7 12r00r00         [24]  811 	lcall	__gptrput
      0003AA A3               [24]  812 	inc	dptr
      0003AB EA               [12]  813 	mov	a,r2
      0003AC 12r00r00         [24]  814 	lcall	__gptrput
      0003AF A3               [24]  815 	inc	dptr
      0003B0 EB               [12]  816 	mov	a,r3
      0003B1 12r00r00         [24]  817 	lcall	__gptrput
      0003B4 A3               [24]  818 	inc	dptr
      0003B5 EC               [12]  819 	mov	a,r4
      0003B6 12r00r00         [24]  820 	lcall	__gptrput
      0003B9                        821 00127$:
                                    822 ;	mbrtowc.c:97: return(n);
      0003B9 90r00r03         [24]  823 	mov	dptr,#_mbrtowc_PARM_3
      0003BC E0               [24]  824 	movx	a,@dptr
      0003BD FE               [12]  825 	mov	r6,a
      0003BE A3               [24]  826 	inc	dptr
      0003BF E0               [24]  827 	movx	a,@dptr
      0003C0 FF               [12]  828 	mov	r7,a
      0003C1 8E 82            [24]  829 	mov	dpl,r6
      0003C3 8F 83            [24]  830 	mov	dph,r7
                                    831 ;	mbrtowc.c:99: eilseq:
      0003C5 80 0C            [24]  832 	sjmp	00145$
      0003C7                        833 00128$:
                                    834 ;	mbrtowc.c:100: errno = EILSEQ;
      0003C7 90r00r00         [24]  835 	mov	dptr,#_errno
      0003CA 74 54            [12]  836 	mov	a,#0x54
      0003CC F0               [24]  837 	movx	@dptr,a
      0003CD E4               [12]  838 	clr	a
      0003CE A3               [24]  839 	inc	dptr
      0003CF F0               [24]  840 	movx	@dptr,a
                                    841 ;	mbrtowc.c:101: return(-1);
      0003D0 90 FF FF         [24]  842 	mov	dptr,#0xffff
      0003D3                        843 00145$:
                                    844 ;	mbrtowc.c:102: }
      0003D3 02r00r00         [24]  845 	ljmp	__sdcc_banked_ret
                                    846 	.area CSEG    (CODE)
                                    847 	.area CONST   (CODE)
                                    848 	.area CONST   (CODE)
      000000                        849 ___str_0:
      000000 00                     850 	.db 0x00
                                    851 	.area CSEG    (CODE)
                                    852 	.area XINIT   (CODE)
                                    853 	.area CABS    (ABS,CODE)
