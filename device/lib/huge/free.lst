                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module free
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _free
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
      000000                         55 _free_ptr_65536_40:
      000000                         56 	.ds 3
      000003                         57 _free_h_65536_41:
      000003                         58 	.ds 2
      000005                         59 _free_prev_free_65536_41:
      000005                         60 	.ds 2
      000007                         61 _free_f_65536_41:
      000007                         62 	.ds 2
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; initialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function 'free'
                                     99 ;------------------------------------------------------------
                                    100 ;ptr                       Allocated with name '_free_ptr_65536_40'
                                    101 ;h                         Allocated with name '_free_h_65536_41'
                                    102 ;next_free                 Allocated with name '_free_next_free_65536_41'
                                    103 ;prev_free                 Allocated with name '_free_prev_free_65536_41'
                                    104 ;f                         Allocated with name '_free_f_65536_41'
                                    105 ;------------------------------------------------------------
                                    106 ;	free.c:50: void free(void *ptr)
                                    107 ;	-----------------------------------------
                                    108 ;	 function free
                                    109 ;	-----------------------------------------
      000000                        110 _free:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 AF F0            [24]  119 	mov	r7,b
      000002 AE 83            [24]  120 	mov	r6,dph
      000004 E5 82            [12]  121 	mov	a,dpl
      000006 90r00r00         [24]  122 	mov	dptr,#_free_ptr_65536_40
      000009 F0               [24]  123 	movx	@dptr,a
      00000A EE               [12]  124 	mov	a,r6
      00000B A3               [24]  125 	inc	dptr
      00000C F0               [24]  126 	movx	@dptr,a
      00000D EF               [12]  127 	mov	a,r7
      00000E A3               [24]  128 	inc	dptr
      00000F F0               [24]  129 	movx	@dptr,a
                                    130 ;	free.c:55: if(!ptr)
      000010 90r00r00         [24]  131 	mov	dptr,#_free_ptr_65536_40
      000013 E0               [24]  132 	movx	a,@dptr
      000014 FD               [12]  133 	mov	r5,a
      000015 A3               [24]  134 	inc	dptr
      000016 E0               [24]  135 	movx	a,@dptr
      000017 FE               [12]  136 	mov	r6,a
      000018 A3               [24]  137 	inc	dptr
      000019 E0               [24]  138 	movx	a,@dptr
      00001A FF               [12]  139 	mov	r7,a
      00001B 90r00r00         [24]  140 	mov	dptr,#_free_ptr_65536_40
      00001E E0               [24]  141 	movx	a,@dptr
      00001F F5 F0            [12]  142 	mov	b,a
      000021 A3               [24]  143 	inc	dptr
      000022 E0               [24]  144 	movx	a,@dptr
      000023 45 F0            [12]  145 	orl	a,b
      000025 70 03            [24]  146 	jnz	00102$
                                    147 ;	free.c:56: return;
      000027 02r00r00         [24]  148 	ljmp	__sdcc_banked_ret
      00002A                        149 00102$:
                                    150 ;	free.c:58: prev_free = 0;
      00002A 90r00r05         [24]  151 	mov	dptr,#_free_prev_free_65536_41
      00002D E4               [12]  152 	clr	a
      00002E F0               [24]  153 	movx	@dptr,a
      00002F A3               [24]  154 	inc	dptr
      000030 F0               [24]  155 	movx	@dptr,a
                                    156 ;	free.c:59: for(h = __sdcc_heap_free, f = &__sdcc_heap_free; h && h < ptr; prev_free = h, f = &(h->next_free), h = h->next_free); // Find adjacent blocks in free list
      000031 90r00r00         [24]  157 	mov	dptr,#___sdcc_heap_free
      000034 E0               [24]  158 	movx	a,@dptr
      000035 FB               [12]  159 	mov	r3,a
      000036 A3               [24]  160 	inc	dptr
      000037 E0               [24]  161 	movx	a,@dptr
      000038 FC               [12]  162 	mov	r4,a
      000039 90r00r03         [24]  163 	mov	dptr,#_free_h_65536_41
      00003C EB               [12]  164 	mov	a,r3
      00003D F0               [24]  165 	movx	@dptr,a
      00003E EC               [12]  166 	mov	a,r4
      00003F A3               [24]  167 	inc	dptr
      000040 F0               [24]  168 	movx	@dptr,a
      000041 90r00r07         [24]  169 	mov	dptr,#_free_f_65536_41
      000044 74r00            [12]  170 	mov	a,#___sdcc_heap_free
      000046 F0               [24]  171 	movx	@dptr,a
      000047 74s00            [12]  172 	mov	a,#(___sdcc_heap_free >> 8)
      000049 A3               [24]  173 	inc	dptr
      00004A F0               [24]  174 	movx	@dptr,a
      00004B                        175 00111$:
      00004B 90r00r03         [24]  176 	mov	dptr,#_free_h_65536_41
      00004E E0               [24]  177 	movx	a,@dptr
      00004F FB               [12]  178 	mov	r3,a
      000050 A3               [24]  179 	inc	dptr
      000051 E0               [24]  180 	movx	a,@dptr
      000052 FC               [12]  181 	mov	r4,a
      000053 4B               [12]  182 	orl	a,r3
      000054 60 41            [24]  183 	jz	00103$
      000056 8B 01            [24]  184 	mov	ar1,r3
      000058 8C 02            [24]  185 	mov	ar2,r4
      00005A C0 03            [24]  186 	push	ar3
      00005C C0 04            [24]  187 	push	ar4
      00005E 8D 00            [24]  188 	mov	ar0,r5
      000060 8E 04            [24]  189 	mov	ar4,r6
      000062 C3               [12]  190 	clr	c
      000063 E9               [12]  191 	mov	a,r1
      000064 98               [12]  192 	subb	a,r0
      000065 EA               [12]  193 	mov	a,r2
      000066 9C               [12]  194 	subb	a,r4
      000067 D0 04            [24]  195 	pop	ar4
      000069 D0 03            [24]  196 	pop	ar3
      00006B 50 2A            [24]  197 	jnc	00103$
      00006D 90r00r05         [24]  198 	mov	dptr,#_free_prev_free_65536_41
      000070 EB               [12]  199 	mov	a,r3
      000071 F0               [24]  200 	movx	@dptr,a
      000072 EC               [12]  201 	mov	a,r4
      000073 A3               [24]  202 	inc	dptr
      000074 F0               [24]  203 	movx	@dptr,a
      000075 74 02            [12]  204 	mov	a,#0x02
      000077 2B               [12]  205 	add	a,r3
      000078 FB               [12]  206 	mov	r3,a
      000079 E4               [12]  207 	clr	a
      00007A 3C               [12]  208 	addc	a,r4
      00007B FC               [12]  209 	mov	r4,a
      00007C 90r00r07         [24]  210 	mov	dptr,#_free_f_65536_41
      00007F EB               [12]  211 	mov	a,r3
      000080 F0               [24]  212 	movx	@dptr,a
      000081 EC               [12]  213 	mov	a,r4
      000082 A3               [24]  214 	inc	dptr
      000083 F0               [24]  215 	movx	@dptr,a
      000084 8B 82            [24]  216 	mov	dpl,r3
      000086 8C 83            [24]  217 	mov	dph,r4
      000088 E0               [24]  218 	movx	a,@dptr
      000089 FB               [12]  219 	mov	r3,a
      00008A A3               [24]  220 	inc	dptr
      00008B E0               [24]  221 	movx	a,@dptr
      00008C FC               [12]  222 	mov	r4,a
      00008D 90r00r03         [24]  223 	mov	dptr,#_free_h_65536_41
      000090 EB               [12]  224 	mov	a,r3
      000091 F0               [24]  225 	movx	@dptr,a
      000092 EC               [12]  226 	mov	a,r4
      000093 A3               [24]  227 	inc	dptr
      000094 F0               [24]  228 	movx	@dptr,a
      000095 80 B4            [24]  229 	sjmp	00111$
      000097                        230 00103$:
                                    231 ;	free.c:60: next_free = h;
      000097 90r00r03         [24]  232 	mov	dptr,#_free_h_65536_41
      00009A E0               [24]  233 	movx	a,@dptr
      00009B FE               [12]  234 	mov	r6,a
      00009C A3               [24]  235 	inc	dptr
      00009D E0               [24]  236 	movx	a,@dptr
      00009E FF               [12]  237 	mov	r7,a
                                    238 ;	free.c:62: h = (void HEAPSPACE *)((char HEAPSPACE *)(ptr) - offsetof(struct header, next_free));
      00009F 90r00r00         [24]  239 	mov	dptr,#_free_ptr_65536_40
      0000A2 E0               [24]  240 	movx	a,@dptr
      0000A3 FB               [12]  241 	mov	r3,a
      0000A4 A3               [24]  242 	inc	dptr
      0000A5 E0               [24]  243 	movx	a,@dptr
      0000A6 FC               [12]  244 	mov	r4,a
      0000A7 A3               [24]  245 	inc	dptr
      0000A8 E0               [24]  246 	movx	a,@dptr
      0000A9 EB               [12]  247 	mov	a,r3
      0000AA 24 FE            [12]  248 	add	a,#0xfe
      0000AC FB               [12]  249 	mov	r3,a
      0000AD EC               [12]  250 	mov	a,r4
      0000AE 34 FF            [12]  251 	addc	a,#0xff
      0000B0 FC               [12]  252 	mov	r4,a
                                    253 ;	free.c:65: h->next_free = next_free;
      0000B1 74 02            [12]  254 	mov	a,#0x02
      0000B3 2B               [12]  255 	add	a,r3
      0000B4 FA               [12]  256 	mov	r2,a
      0000B5 E4               [12]  257 	clr	a
      0000B6 3C               [12]  258 	addc	a,r4
      0000B7 FD               [12]  259 	mov	r5,a
      0000B8 8A 82            [24]  260 	mov	dpl,r2
      0000BA 8D 83            [24]  261 	mov	dph,r5
      0000BC EE               [12]  262 	mov	a,r6
      0000BD F0               [24]  263 	movx	@dptr,a
      0000BE EF               [12]  264 	mov	a,r7
      0000BF A3               [24]  265 	inc	dptr
      0000C0 F0               [24]  266 	movx	@dptr,a
                                    267 ;	free.c:66: *f = h;
      0000C1 90r00r07         [24]  268 	mov	dptr,#_free_f_65536_41
      0000C4 E0               [24]  269 	movx	a,@dptr
      0000C5 F8               [12]  270 	mov	r0,a
      0000C6 A3               [24]  271 	inc	dptr
      0000C7 E0               [24]  272 	movx	a,@dptr
      0000C8 F9               [12]  273 	mov	r1,a
      0000C9 88 82            [24]  274 	mov	dpl,r0
      0000CB 89 83            [24]  275 	mov	dph,r1
      0000CD EB               [12]  276 	mov	a,r3
      0000CE F0               [24]  277 	movx	@dptr,a
      0000CF EC               [12]  278 	mov	a,r4
      0000D0 A3               [24]  279 	inc	dptr
      0000D1 F0               [24]  280 	movx	@dptr,a
                                    281 ;	free.c:68: if(next_free == h->next) // Merge with next block
      0000D2 8B 82            [24]  282 	mov	dpl,r3
      0000D4 8C 83            [24]  283 	mov	dph,r4
      0000D6 E0               [24]  284 	movx	a,@dptr
      0000D7 F8               [12]  285 	mov	r0,a
      0000D8 A3               [24]  286 	inc	dptr
      0000D9 E0               [24]  287 	movx	a,@dptr
      0000DA F9               [12]  288 	mov	r1,a
      0000DB EE               [12]  289 	mov	a,r6
      0000DC B5 00 33         [24]  290 	cjne	a,ar0,00105$
      0000DF EF               [12]  291 	mov	a,r7
      0000E0 B5 01 2F         [24]  292 	cjne	a,ar1,00105$
                                    293 ;	free.c:70: h->next_free = h->next->next_free;
      0000E3 88 82            [24]  294 	mov	dpl,r0
      0000E5 89 83            [24]  295 	mov	dph,r1
      0000E7 A3               [24]  296 	inc	dptr
      0000E8 A3               [24]  297 	inc	dptr
      0000E9 E0               [24]  298 	movx	a,@dptr
      0000EA FE               [12]  299 	mov	r6,a
      0000EB A3               [24]  300 	inc	dptr
      0000EC E0               [24]  301 	movx	a,@dptr
      0000ED FF               [12]  302 	mov	r7,a
      0000EE 8A 82            [24]  303 	mov	dpl,r2
      0000F0 8D 83            [24]  304 	mov	dph,r5
      0000F2 EE               [12]  305 	mov	a,r6
      0000F3 F0               [24]  306 	movx	@dptr,a
      0000F4 EF               [12]  307 	mov	a,r7
      0000F5 A3               [24]  308 	inc	dptr
      0000F6 F0               [24]  309 	movx	@dptr,a
                                    310 ;	free.c:71: h->next = h->next->next;
      0000F7 8B 82            [24]  311 	mov	dpl,r3
      0000F9 8C 83            [24]  312 	mov	dph,r4
      0000FB E0               [24]  313 	movx	a,@dptr
      0000FC FE               [12]  314 	mov	r6,a
      0000FD A3               [24]  315 	inc	dptr
      0000FE E0               [24]  316 	movx	a,@dptr
      0000FF FF               [12]  317 	mov	r7,a
      000100 8E 82            [24]  318 	mov	dpl,r6
      000102 8F 83            [24]  319 	mov	dph,r7
      000104 E0               [24]  320 	movx	a,@dptr
      000105 FE               [12]  321 	mov	r6,a
      000106 A3               [24]  322 	inc	dptr
      000107 E0               [24]  323 	movx	a,@dptr
      000108 FF               [12]  324 	mov	r7,a
      000109 8B 82            [24]  325 	mov	dpl,r3
      00010B 8C 83            [24]  326 	mov	dph,r4
      00010D EE               [12]  327 	mov	a,r6
      00010E F0               [24]  328 	movx	@dptr,a
      00010F EF               [12]  329 	mov	a,r7
      000110 A3               [24]  330 	inc	dptr
      000111 F0               [24]  331 	movx	@dptr,a
      000112                        332 00105$:
                                    333 ;	free.c:74: if (prev_free && prev_free->next == h) // Merge with previous block
      000112 90r00r05         [24]  334 	mov	dptr,#_free_prev_free_65536_41
      000115 E0               [24]  335 	movx	a,@dptr
      000116 FE               [12]  336 	mov	r6,a
      000117 A3               [24]  337 	inc	dptr
      000118 E0               [24]  338 	movx	a,@dptr
      000119 FF               [12]  339 	mov	r7,a
      00011A 4E               [12]  340 	orl	a,r6
      00011B 60 3C            [24]  341 	jz	00113$
      00011D 8E 82            [24]  342 	mov	dpl,r6
      00011F 8F 83            [24]  343 	mov	dph,r7
      000121 E0               [24]  344 	movx	a,@dptr
      000122 F8               [12]  345 	mov	r0,a
      000123 A3               [24]  346 	inc	dptr
      000124 E0               [24]  347 	movx	a,@dptr
      000125 F9               [12]  348 	mov	r1,a
      000126 E8               [12]  349 	mov	a,r0
      000127 B5 03 2F         [24]  350 	cjne	a,ar3,00113$
      00012A E9               [12]  351 	mov	a,r1
      00012B B5 04 2B         [24]  352 	cjne	a,ar4,00113$
                                    353 ;	free.c:76: prev_free->next = h->next;
      00012E 8B 82            [24]  354 	mov	dpl,r3
      000130 8C 83            [24]  355 	mov	dph,r4
      000132 E0               [24]  356 	movx	a,@dptr
      000133 FB               [12]  357 	mov	r3,a
      000134 A3               [24]  358 	inc	dptr
      000135 E0               [24]  359 	movx	a,@dptr
      000136 FC               [12]  360 	mov	r4,a
      000137 8E 82            [24]  361 	mov	dpl,r6
      000139 8F 83            [24]  362 	mov	dph,r7
      00013B EB               [12]  363 	mov	a,r3
      00013C F0               [24]  364 	movx	@dptr,a
      00013D EC               [12]  365 	mov	a,r4
      00013E A3               [24]  366 	inc	dptr
      00013F F0               [24]  367 	movx	@dptr,a
                                    368 ;	free.c:77: prev_free->next_free = h->next_free;
      000140 74 02            [12]  369 	mov	a,#0x02
      000142 2E               [12]  370 	add	a,r6
      000143 FE               [12]  371 	mov	r6,a
      000144 E4               [12]  372 	clr	a
      000145 3F               [12]  373 	addc	a,r7
      000146 FF               [12]  374 	mov	r7,a
      000147 8A 82            [24]  375 	mov	dpl,r2
      000149 8D 83            [24]  376 	mov	dph,r5
      00014B E0               [24]  377 	movx	a,@dptr
      00014C FA               [12]  378 	mov	r2,a
      00014D A3               [24]  379 	inc	dptr
      00014E E0               [24]  380 	movx	a,@dptr
      00014F FD               [12]  381 	mov	r5,a
      000150 8E 82            [24]  382 	mov	dpl,r6
      000152 8F 83            [24]  383 	mov	dph,r7
      000154 EA               [12]  384 	mov	a,r2
      000155 F0               [24]  385 	movx	@dptr,a
      000156 ED               [12]  386 	mov	a,r5
      000157 A3               [24]  387 	inc	dptr
      000158 F0               [24]  388 	movx	@dptr,a
      000159                        389 00113$:
                                    390 ;	free.c:79: }
      000159 02r00r00         [24]  391 	ljmp	__sdcc_banked_ret
                                    392 	.area CSEG    (CODE)
                                    393 	.area CONST   (CODE)
                                    394 	.area XINIT   (CODE)
                                    395 	.area CABS    (ABS,CODE)
