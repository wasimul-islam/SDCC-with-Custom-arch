                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module c16stombs
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___memcpy
                                     12 	.globl _wctomb
                                     13 	.globl ___c16stombs_PARM_3
                                     14 	.globl ___c16stombs_PARM_2
                                     15 	.globl ___c16stombs
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 ___c16stombs_sloc0_1_0:
      000000                         36 	.ds 3
      000003                         37 ___c16stombs_sloc1_1_0:
      000003                         38 	.ds 4
                                     39 ;--------------------------------------------------------
                                     40 ; overlayable items in internal ram
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
                                     55 ;--------------------------------------------------------
                                     56 ; paged external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area PSEG    (PAG,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; uninitialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XSEG    (XDATA)
      000000                         63 ___c16stombs_PARM_2:
      000000                         64 	.ds 3
      000003                         65 ___c16stombs_PARM_3:
      000003                         66 	.ds 2
      000005                         67 ___c16stombs_s_65536_78:
      000005                         68 	.ds 3
      000008                         69 ___c16stombs_m_65536_79:
      000008                         70 	.ds 2
      00000A                         71 ___c16stombs_b_65536_79:
      00000A                         72 	.ds 4
      00000E                         73 ___c16stombs_codepoint_196608_81:
      00000E                         74 	.ds 4
                                     75 ;--------------------------------------------------------
                                     76 ; absolute external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XABS    (ABS,XDATA)
                                     79 ;--------------------------------------------------------
                                     80 ; initialized external ram data
                                     81 ;--------------------------------------------------------
                                     82 	.area XISEG   (XDATA)
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT0 (CODE)
                                     85 	.area GSINIT1 (CODE)
                                     86 	.area GSINIT2 (CODE)
                                     87 	.area GSINIT3 (CODE)
                                     88 	.area GSINIT4 (CODE)
                                     89 	.area GSINIT5 (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 	.area GSFINAL (CODE)
                                     92 	.area CSEG    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; global & static initialisations
                                     95 ;--------------------------------------------------------
                                     96 	.area HOME    (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 	.area GSFINAL (CODE)
                                     99 	.area GSINIT  (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME    (CODE)
                                    104 	.area HOME    (CODE)
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CSEG    (CODE)
                                    109 ;------------------------------------------------------------
                                    110 ;Allocation info for local variables in function '__c16stombs'
                                    111 ;------------------------------------------------------------
                                    112 ;sloc0                     Allocated with name '___c16stombs_sloc0_1_0'
                                    113 ;sloc1                     Allocated with name '___c16stombs_sloc1_1_0'
                                    114 ;c16s                      Allocated with name '___c16stombs_PARM_2'
                                    115 ;n                         Allocated with name '___c16stombs_PARM_3'
                                    116 ;s                         Allocated with name '___c16stombs_s_65536_78'
                                    117 ;m                         Allocated with name '___c16stombs_m_65536_79'
                                    118 ;b                         Allocated with name '___c16stombs_b_65536_79'
                                    119 ;l                         Allocated with name '___c16stombs_l_196608_81'
                                    120 ;codepoint                 Allocated with name '___c16stombs_codepoint_196608_81'
                                    121 ;------------------------------------------------------------
                                    122 ;	c16stombs.c:44: size_t __c16stombs(char *restrict s, const char16_t *restrict c16s, size_t n)
                                    123 ;	-----------------------------------------
                                    124 ;	 function __c16stombs
                                    125 ;	-----------------------------------------
      000000                        126 ___c16stombs:
                           000007   127 	ar7 = 0x07
                           000006   128 	ar6 = 0x06
                           000005   129 	ar5 = 0x05
                           000004   130 	ar4 = 0x04
                           000003   131 	ar3 = 0x03
                           000002   132 	ar2 = 0x02
                           000001   133 	ar1 = 0x01
                           000000   134 	ar0 = 0x00
      000000 AF F0            [24]  135 	mov	r7,b
      000002 AE 83            [24]  136 	mov	r6,dph
      000004 E5 82            [12]  137 	mov	a,dpl
      000006 90r00r05         [24]  138 	mov	dptr,#___c16stombs_s_65536_78
      000009 F0               [24]  139 	movx	@dptr,a
      00000A EE               [12]  140 	mov	a,r6
      00000B A3               [24]  141 	inc	dptr
      00000C F0               [24]  142 	movx	@dptr,a
      00000D EF               [12]  143 	mov	a,r7
      00000E A3               [24]  144 	inc	dptr
      00000F F0               [24]  145 	movx	@dptr,a
                                    146 ;	c16stombs.c:46: size_t m = 0;
      000010 90r00r08         [24]  147 	mov	dptr,#___c16stombs_m_65536_79
      000013 E4               [12]  148 	clr	a
      000014 F0               [24]  149 	movx	@dptr,a
      000015 A3               [24]  150 	inc	dptr
      000016 F0               [24]  151 	movx	@dptr,a
                                    152 ;	c16stombs.c:87: return(m);
      000017 90r00r03         [24]  153 	mov	dptr,#___c16stombs_PARM_3
      00001A E0               [24]  154 	movx	a,@dptr
      00001B FE               [12]  155 	mov	r6,a
      00001C A3               [24]  156 	inc	dptr
      00001D E0               [24]  157 	movx	a,@dptr
      00001E FF               [12]  158 	mov	r7,a
      00001F                        159 00119$:
                                    160 ;	c16stombs.c:54: if(c16s[0] < 0xd800 || c16s[0] >= 0xe000) // Basic multilingual plane
      00001F 90r00r00         [24]  161 	mov	dptr,#___c16stombs_PARM_2
      000022 E0               [24]  162 	movx	a,@dptr
      000023 FB               [12]  163 	mov	r3,a
      000024 A3               [24]  164 	inc	dptr
      000025 E0               [24]  165 	movx	a,@dptr
      000026 FC               [12]  166 	mov	r4,a
      000027 A3               [24]  167 	inc	dptr
      000028 E0               [24]  168 	movx	a,@dptr
      000029 FD               [12]  169 	mov	r5,a
      00002A 8B 82            [24]  170 	mov	dpl,r3
      00002C 8C 83            [24]  171 	mov	dph,r4
      00002E 8D F0            [24]  172 	mov	b,r5
      000030 12r00r00         [24]  173 	lcall	__gptrget
      000033 F9               [12]  174 	mov	r1,a
      000034 A3               [24]  175 	inc	dptr
      000035 12r00r00         [24]  176 	lcall	__gptrget
      000038 FA               [12]  177 	mov	r2,a
      000039 C3               [12]  178 	clr	c
      00003A 94 D8            [12]  179 	subb	a,#0xd8
      00003C 40 05            [24]  180 	jc	00106$
      00003E 74 20            [12]  181 	mov	a,#0x100 - 0xe0
      000040 2A               [12]  182 	add	a,r2
      000041 50 49            [24]  183 	jnc	00107$
      000043                        184 00106$:
                                    185 ;	c16stombs.c:56: codepoint = c16s[0];
      000043 C0 06            [24]  186 	push	ar6
      000045 C0 07            [24]  187 	push	ar7
      000047 90r00r00         [24]  188 	mov	dptr,#___c16stombs_PARM_2
      00004A E0               [24]  189 	movx	a,@dptr
      00004B F5*00            [12]  190 	mov	___c16stombs_sloc0_1_0,a
      00004D A3               [24]  191 	inc	dptr
      00004E E0               [24]  192 	movx	a,@dptr
      00004F F5*01            [12]  193 	mov	(___c16stombs_sloc0_1_0 + 1),a
      000051 A3               [24]  194 	inc	dptr
      000052 E0               [24]  195 	movx	a,@dptr
      000053 F5*02            [12]  196 	mov	(___c16stombs_sloc0_1_0 + 2),a
      000055 85*00 82         [24]  197 	mov	dpl,___c16stombs_sloc0_1_0
      000058 85*01 83         [24]  198 	mov	dph,(___c16stombs_sloc0_1_0 + 1)
      00005B 85*02 F0         [24]  199 	mov	b,(___c16stombs_sloc0_1_0 + 2)
      00005E 12r00r00         [24]  200 	lcall	__gptrget
      000061 FE               [12]  201 	mov	r6,a
      000062 A3               [24]  202 	inc	dptr
      000063 12r00r00         [24]  203 	lcall	__gptrget
      000066 FF               [12]  204 	mov	r7,a
      000067 90r00r0E         [24]  205 	mov	dptr,#___c16stombs_codepoint_196608_81
      00006A EE               [12]  206 	mov	a,r6
      00006B F0               [24]  207 	movx	@dptr,a
      00006C EF               [12]  208 	mov	a,r7
      00006D A3               [24]  209 	inc	dptr
      00006E F0               [24]  210 	movx	@dptr,a
      00006F E4               [12]  211 	clr	a
      000070 A3               [24]  212 	inc	dptr
      000071 F0               [24]  213 	movx	@dptr,a
      000072 A3               [24]  214 	inc	dptr
      000073 F0               [24]  215 	movx	@dptr,a
                                    216 ;	c16stombs.c:57: c16s++;
      000074 90r00r00         [24]  217 	mov	dptr,#___c16stombs_PARM_2
      000077 74 02            [12]  218 	mov	a,#0x02
      000079 25*00            [12]  219 	add	a,___c16stombs_sloc0_1_0
      00007B F0               [24]  220 	movx	@dptr,a
      00007C E4               [12]  221 	clr	a
      00007D 35*01            [12]  222 	addc	a,(___c16stombs_sloc0_1_0 + 1)
      00007F A3               [24]  223 	inc	dptr
      000080 F0               [24]  224 	movx	@dptr,a
      000081 E5*02            [12]  225 	mov	a,(___c16stombs_sloc0_1_0 + 2)
      000083 A3               [24]  226 	inc	dptr
      000084 F0               [24]  227 	movx	@dptr,a
      000085 D0 07            [24]  228 	pop	ar7
      000087 D0 06            [24]  229 	pop	ar6
      000089 02r01r36         [24]  230 	ljmp	00108$
      00008C                        231 00107$:
                                    232 ;	c16stombs.c:59: else if(c16s[0] > 0xdbff || c16s[1] < 0xdc00 || c16s[1] > 0xdfff) // Unpaired surrogate
      00008C C3               [12]  233 	clr	c
      00008D 74 FF            [12]  234 	mov	a,#0xff
      00008F 99               [12]  235 	subb	a,r1
      000090 74 DB            [12]  236 	mov	a,#0xdb
      000092 9A               [12]  237 	subb	a,r2
      000093 40 31            [24]  238 	jc	00101$
      000095 C0 06            [24]  239 	push	ar6
      000097 C0 07            [24]  240 	push	ar7
      000099 74 02            [12]  241 	mov	a,#0x02
      00009B 2B               [12]  242 	add	a,r3
      00009C F8               [12]  243 	mov	r0,a
      00009D E4               [12]  244 	clr	a
      00009E 3C               [12]  245 	addc	a,r4
      00009F FE               [12]  246 	mov	r6,a
      0000A0 8D 07            [24]  247 	mov	ar7,r5
      0000A2 88 82            [24]  248 	mov	dpl,r0
      0000A4 8E 83            [24]  249 	mov	dph,r6
      0000A6 8F F0            [24]  250 	mov	b,r7
      0000A8 12r00r00         [24]  251 	lcall	__gptrget
      0000AB F5*00            [12]  252 	mov	___c16stombs_sloc0_1_0,a
      0000AD A3               [24]  253 	inc	dptr
      0000AE 12r00r00         [24]  254 	lcall	__gptrget
      0000B1 F5*01            [12]  255 	mov	(___c16stombs_sloc0_1_0 + 1),a
      0000B3 C3               [12]  256 	clr	c
      0000B4 94 DC            [12]  257 	subb	a,#0xdc
      0000B6 D0 07            [24]  258 	pop	ar7
      0000B8 D0 06            [24]  259 	pop	ar6
      0000BA 40 0A            [24]  260 	jc	00101$
      0000BC 74 FF            [12]  261 	mov	a,#0xff
      0000BE 95*00            [12]  262 	subb	a,___c16stombs_sloc0_1_0
      0000C0 74 DF            [12]  263 	mov	a,#0xdf
      0000C2 95*01            [12]  264 	subb	a,(___c16stombs_sloc0_1_0 + 1)
      0000C4 50 06            [24]  265 	jnc	00102$
      0000C6                        266 00101$:
                                    267 ;	c16stombs.c:60: return(-1);
      0000C6 90 FF FF         [24]  268 	mov	dptr,#0xffff
      0000C9 02r00r00         [24]  269 	ljmp	__sdcc_banked_ret
      0000CC                        270 00102$:
                                    271 ;	c16stombs.c:63: codepoint = ((unsigned long)(c16s[0]) << 10) -(0xd800ul << 10) + (unsigned long)(c16s[1]) - 0xdc00ul + 0x10000ul;
      0000CC C0 06            [24]  272 	push	ar6
      0000CE C0 07            [24]  273 	push	ar7
      0000D0 8A 00            [24]  274 	mov	ar0,r2
      0000D2 7A 00            [12]  275 	mov	r2,#0x00
      0000D4 88*05            [24]  276 	mov	(___c16stombs_sloc1_1_0 + 2),r0
      0000D6 EA               [12]  277 	mov	a,r2
      0000D7 C5*05            [12]  278 	xch	a,(___c16stombs_sloc1_1_0 + 2)
      0000D9 25 E0            [12]  279 	add	a,acc
      0000DB C5*05            [12]  280 	xch	a,(___c16stombs_sloc1_1_0 + 2)
      0000DD 33               [12]  281 	rlc	a
      0000DE C5*05            [12]  282 	xch	a,(___c16stombs_sloc1_1_0 + 2)
      0000E0 25 E0            [12]  283 	add	a,acc
      0000E2 C5*05            [12]  284 	xch	a,(___c16stombs_sloc1_1_0 + 2)
      0000E4 33               [12]  285 	rlc	a
      0000E5 F5*06            [12]  286 	mov	(___c16stombs_sloc1_1_0 + 3),a
      0000E7 E9               [12]  287 	mov	a,r1
      0000E8 23               [12]  288 	rl	a
      0000E9 23               [12]  289 	rl	a
      0000EA 54 03            [12]  290 	anl	a,#0x03
      0000EC 45*05            [12]  291 	orl	a,(___c16stombs_sloc1_1_0 + 2)
      0000EE F5*05            [12]  292 	mov	(___c16stombs_sloc1_1_0 + 2),a
      0000F0 E9               [12]  293 	mov	a,r1
      0000F1 29               [12]  294 	add	a,r1
      0000F2 25 E0            [12]  295 	add	a,acc
      0000F4 F5*04            [12]  296 	mov	(___c16stombs_sloc1_1_0 + 1),a
      0000F6 75*03 00         [24]  297 	mov	___c16stombs_sloc1_1_0,#0x00
      0000F9 A9*00            [24]  298 	mov	r1,___c16stombs_sloc0_1_0
      0000FB AA*01            [24]  299 	mov	r2,(___c16stombs_sloc0_1_0 + 1)
      0000FD E4               [12]  300 	clr	a
      0000FE FE               [12]  301 	mov	r6,a
      0000FF FF               [12]  302 	mov	r7,a
      000100 E9               [12]  303 	mov	a,r1
      000101 25*03            [12]  304 	add	a,___c16stombs_sloc1_1_0
      000103 F9               [12]  305 	mov	r1,a
      000104 EA               [12]  306 	mov	a,r2
      000105 35*04            [12]  307 	addc	a,(___c16stombs_sloc1_1_0 + 1)
      000107 FA               [12]  308 	mov	r2,a
      000108 EE               [12]  309 	mov	a,r6
      000109 35*05            [12]  310 	addc	a,(___c16stombs_sloc1_1_0 + 2)
      00010B FE               [12]  311 	mov	r6,a
      00010C EF               [12]  312 	mov	a,r7
      00010D 35*06            [12]  313 	addc	a,(___c16stombs_sloc1_1_0 + 3)
      00010F FF               [12]  314 	mov	r7,a
      000110 90r00r0E         [24]  315 	mov	dptr,#___c16stombs_codepoint_196608_81
      000113 E9               [12]  316 	mov	a,r1
      000114 F0               [24]  317 	movx	@dptr,a
      000115 74 24            [12]  318 	mov	a,#0x24
      000117 2A               [12]  319 	add	a,r2
      000118 A3               [24]  320 	inc	dptr
      000119 F0               [24]  321 	movx	@dptr,a
      00011A 74 A0            [12]  322 	mov	a,#0xa0
      00011C 3E               [12]  323 	addc	a,r6
      00011D A3               [24]  324 	inc	dptr
      00011E F0               [24]  325 	movx	@dptr,a
      00011F 74 FC            [12]  326 	mov	a,#0xfc
      000121 3F               [12]  327 	addc	a,r7
      000122 A3               [24]  328 	inc	dptr
      000123 F0               [24]  329 	movx	@dptr,a
                                    330 ;	c16stombs.c:64: c16s += 2;
      000124 90r00r00         [24]  331 	mov	dptr,#___c16stombs_PARM_2
      000127 74 04            [12]  332 	mov	a,#0x04
      000129 2B               [12]  333 	add	a,r3
      00012A F0               [24]  334 	movx	@dptr,a
      00012B E4               [12]  335 	clr	a
      00012C 3C               [12]  336 	addc	a,r4
      00012D A3               [24]  337 	inc	dptr
      00012E F0               [24]  338 	movx	@dptr,a
      00012F ED               [12]  339 	mov	a,r5
      000130 A3               [24]  340 	inc	dptr
      000131 F0               [24]  341 	movx	@dptr,a
                                    342 ;	c16stombs.c:87: return(m);
      000132 D0 07            [24]  343 	pop	ar7
      000134 D0 06            [24]  344 	pop	ar6
                                    345 ;	c16stombs.c:64: c16s += 2;
      000136                        346 00108$:
                                    347 ;	c16stombs.c:67: if(!codepoint)
      000136 90r00r0E         [24]  348 	mov	dptr,#___c16stombs_codepoint_196608_81
      000139 E0               [24]  349 	movx	a,@dptr
      00013A FA               [12]  350 	mov	r2,a
      00013B A3               [24]  351 	inc	dptr
      00013C E0               [24]  352 	movx	a,@dptr
      00013D FB               [12]  353 	mov	r3,a
      00013E A3               [24]  354 	inc	dptr
      00013F E0               [24]  355 	movx	a,@dptr
      000140 FC               [12]  356 	mov	r4,a
      000141 A3               [24]  357 	inc	dptr
      000142 E0               [24]  358 	movx	a,@dptr
      000143 FD               [12]  359 	mov	r5,a
      000144 90r00r0E         [24]  360 	mov	dptr,#___c16stombs_codepoint_196608_81
      000147 E0               [24]  361 	movx	a,@dptr
      000148 F5 F0            [12]  362 	mov	b,a
      00014A A3               [24]  363 	inc	dptr
      00014B E0               [24]  364 	movx	a,@dptr
      00014C 42 F0            [12]  365 	orl	b,a
      00014E A3               [24]  366 	inc	dptr
      00014F E0               [24]  367 	movx	a,@dptr
      000150 42 F0            [12]  368 	orl	b,a
      000152 A3               [24]  369 	inc	dptr
      000153 E0               [24]  370 	movx	a,@dptr
      000154 45 F0            [12]  371 	orl	a,b
      000156 70 30            [24]  372 	jnz	00113$
                                    373 ;	c16stombs.c:69: if(m < n)
      000158 90r00r08         [24]  374 	mov	dptr,#___c16stombs_m_65536_79
      00015B E0               [24]  375 	movx	a,@dptr
      00015C F8               [12]  376 	mov	r0,a
      00015D A3               [24]  377 	inc	dptr
      00015E E0               [24]  378 	movx	a,@dptr
      00015F F9               [12]  379 	mov	r1,a
      000160 C3               [12]  380 	clr	c
      000161 E8               [12]  381 	mov	a,r0
      000162 9E               [12]  382 	subb	a,r6
      000163 E9               [12]  383 	mov	a,r1
      000164 9F               [12]  384 	subb	a,r7
      000165 40 03            [24]  385 	jc	00161$
      000167 02r02r51         [24]  386 	ljmp	00118$
      00016A                        387 00161$:
                                    388 ;	c16stombs.c:70: *s = 0;
      00016A 90r00r05         [24]  389 	mov	dptr,#___c16stombs_s_65536_78
      00016D E0               [24]  390 	movx	a,@dptr
      00016E F5*03            [12]  391 	mov	___c16stombs_sloc1_1_0,a
      000170 A3               [24]  392 	inc	dptr
      000171 E0               [24]  393 	movx	a,@dptr
      000172 F5*04            [12]  394 	mov	(___c16stombs_sloc1_1_0 + 1),a
      000174 A3               [24]  395 	inc	dptr
      000175 E0               [24]  396 	movx	a,@dptr
      000176 F5*05            [12]  397 	mov	(___c16stombs_sloc1_1_0 + 2),a
      000178 85*03 82         [24]  398 	mov	dpl,___c16stombs_sloc1_1_0
      00017B 85*04 83         [24]  399 	mov	dph,(___c16stombs_sloc1_1_0 + 1)
      00017E 85*05 F0         [24]  400 	mov	b,(___c16stombs_sloc1_1_0 + 2)
      000181 E4               [12]  401 	clr	a
      000182 12r00r00         [24]  402 	lcall	__gptrput
                                    403 ;	c16stombs.c:71: break;
      000185 02r02r51         [24]  404 	ljmp	00118$
      000188                        405 00113$:
                                    406 ;	c16stombs.c:74: l = wctomb(b, codepoint);
      000188 90r00r00         [24]  407 	mov	dptr,#_wctomb_PARM_2
      00018B EA               [12]  408 	mov	a,r2
      00018C F0               [24]  409 	movx	@dptr,a
      00018D EB               [12]  410 	mov	a,r3
      00018E A3               [24]  411 	inc	dptr
      00018F F0               [24]  412 	movx	@dptr,a
      000190 EC               [12]  413 	mov	a,r4
      000191 A3               [24]  414 	inc	dptr
      000192 F0               [24]  415 	movx	@dptr,a
      000193 ED               [12]  416 	mov	a,r5
      000194 A3               [24]  417 	inc	dptr
      000195 F0               [24]  418 	movx	@dptr,a
      000196 90r00r0A         [24]  419 	mov	dptr,#___c16stombs_b_65536_79
      000199 75 F0 00         [24]  420 	mov	b,#0x00
      00019C C0 07            [24]  421 	push	ar7
      00019E C0 06            [24]  422 	push	ar6
      0001A0 78r00            [12]  423 	mov	r0,#_wctomb
      0001A2 79s00            [12]  424 	mov	r1,#(_wctomb >> 8)
      0001A4 7As00            [12]  425 	mov	r2,#(_wctomb >> 16)
      0001A6 12r00r00         [24]  426 	lcall	__sdcc_banked_call
      0001A9 AC 82            [24]  427 	mov	r4,dpl
      0001AB AD 83            [24]  428 	mov	r5,dph
      0001AD D0 06            [24]  429 	pop	ar6
      0001AF D0 07            [24]  430 	pop	ar7
                                    431 ;	c16stombs.c:76: if(l < 0)
      0001B1 ED               [12]  432 	mov	a,r5
      0001B2 30 E7 06         [24]  433 	jnb	acc.7,00115$
                                    434 ;	c16stombs.c:77: return(-1);
      0001B5 90 FF FF         [24]  435 	mov	dptr,#0xffff
      0001B8 02r00r00         [24]  436 	ljmp	__sdcc_banked_ret
      0001BB                        437 00115$:
                                    438 ;	c16stombs.c:79: if(m + l > n)
      0001BB 90r00r08         [24]  439 	mov	dptr,#___c16stombs_m_65536_79
      0001BE E0               [24]  440 	movx	a,@dptr
      0001BF F5*00            [12]  441 	mov	___c16stombs_sloc0_1_0,a
      0001C1 A3               [24]  442 	inc	dptr
      0001C2 E0               [24]  443 	movx	a,@dptr
      0001C3 F5*01            [12]  444 	mov	(___c16stombs_sloc0_1_0 + 1),a
      0001C5 8C*03            [24]  445 	mov	___c16stombs_sloc1_1_0,r4
      0001C7 8D*04            [24]  446 	mov	(___c16stombs_sloc1_1_0 + 1),r5
      0001C9 C0 04            [24]  447 	push	ar4
      0001CB C0 05            [24]  448 	push	ar5
      0001CD E5*03            [12]  449 	mov	a,___c16stombs_sloc1_1_0
      0001CF 25*00            [12]  450 	add	a,___c16stombs_sloc0_1_0
      0001D1 FC               [12]  451 	mov	r4,a
      0001D2 E5*04            [12]  452 	mov	a,(___c16stombs_sloc1_1_0 + 1)
      0001D4 35*01            [12]  453 	addc	a,(___c16stombs_sloc0_1_0 + 1)
      0001D6 FD               [12]  454 	mov	r5,a
      0001D7 C3               [12]  455 	clr	c
      0001D8 EE               [12]  456 	mov	a,r6
      0001D9 9C               [12]  457 	subb	a,r4
      0001DA EF               [12]  458 	mov	a,r7
      0001DB 9D               [12]  459 	subb	a,r5
      0001DC D0 05            [24]  460 	pop	ar5
      0001DE D0 04            [24]  461 	pop	ar4
      0001E0 40 6F            [24]  462 	jc	00118$
                                    463 ;	c16stombs.c:82: memcpy(s, b, l);
      0001E2 C0 06            [24]  464 	push	ar6
      0001E4 C0 07            [24]  465 	push	ar7
      0001E6 90r00r05         [24]  466 	mov	dptr,#___c16stombs_s_65536_78
      0001E9 E0               [24]  467 	movx	a,@dptr
      0001EA F9               [12]  468 	mov	r1,a
      0001EB A3               [24]  469 	inc	dptr
      0001EC E0               [24]  470 	movx	a,@dptr
      0001ED FE               [12]  471 	mov	r6,a
      0001EE A3               [24]  472 	inc	dptr
      0001EF E0               [24]  473 	movx	a,@dptr
      0001F0 FF               [12]  474 	mov	r7,a
      0001F1 89 00            [24]  475 	mov	ar0,r1
      0001F3 8E 02            [24]  476 	mov	ar2,r6
      0001F5 8F 03            [24]  477 	mov	ar3,r7
      0001F7 90r00r00         [24]  478 	mov	dptr,#___memcpy_PARM_2
      0001FA 74r0A            [12]  479 	mov	a,#___c16stombs_b_65536_79
      0001FC F0               [24]  480 	movx	@dptr,a
      0001FD 74s00            [12]  481 	mov	a,#(___c16stombs_b_65536_79 >> 8)
      0001FF A3               [24]  482 	inc	dptr
      000200 F0               [24]  483 	movx	@dptr,a
      000201 E4               [12]  484 	clr	a
      000202 A3               [24]  485 	inc	dptr
      000203 F0               [24]  486 	movx	@dptr,a
      000204 90r00r00         [24]  487 	mov	dptr,#___memcpy_PARM_3
      000207 EC               [12]  488 	mov	a,r4
      000208 F0               [24]  489 	movx	@dptr,a
      000209 ED               [12]  490 	mov	a,r5
      00020A A3               [24]  491 	inc	dptr
      00020B F0               [24]  492 	movx	@dptr,a
      00020C 88 82            [24]  493 	mov	dpl,r0
      00020E 8A 83            [24]  494 	mov	dph,r2
      000210 8B F0            [24]  495 	mov	b,r3
      000212 C0 07            [24]  496 	push	ar7
      000214 C0 06            [24]  497 	push	ar6
      000216 C0 05            [24]  498 	push	ar5
      000218 C0 04            [24]  499 	push	ar4
      00021A C0 01            [24]  500 	push	ar1
      00021C 78r00            [12]  501 	mov	r0,#___memcpy
      00021E 79s00            [12]  502 	mov	r1,#(___memcpy >> 8)
      000220 7As00            [12]  503 	mov	r2,#(___memcpy >> 16)
      000222 12r00r00         [24]  504 	lcall	__sdcc_banked_call
      000225 D0 01            [24]  505 	pop	ar1
      000227 D0 04            [24]  506 	pop	ar4
      000229 D0 05            [24]  507 	pop	ar5
      00022B D0 06            [24]  508 	pop	ar6
      00022D D0 07            [24]  509 	pop	ar7
                                    510 ;	c16stombs.c:83: s += l;
      00022F 90r00r05         [24]  511 	mov	dptr,#___c16stombs_s_65536_78
      000232 EC               [12]  512 	mov	a,r4
      000233 29               [12]  513 	add	a,r1
      000234 F0               [24]  514 	movx	@dptr,a
      000235 ED               [12]  515 	mov	a,r5
      000236 3E               [12]  516 	addc	a,r6
      000237 A3               [24]  517 	inc	dptr
      000238 F0               [24]  518 	movx	@dptr,a
      000239 EF               [12]  519 	mov	a,r7
      00023A A3               [24]  520 	inc	dptr
      00023B F0               [24]  521 	movx	@dptr,a
                                    522 ;	c16stombs.c:84: m += l;
      00023C 90r00r08         [24]  523 	mov	dptr,#___c16stombs_m_65536_79
      00023F E5*03            [12]  524 	mov	a,___c16stombs_sloc1_1_0
      000241 25*00            [12]  525 	add	a,___c16stombs_sloc0_1_0
      000243 F0               [24]  526 	movx	@dptr,a
      000244 E5*04            [12]  527 	mov	a,(___c16stombs_sloc1_1_0 + 1)
      000246 35*01            [12]  528 	addc	a,(___c16stombs_sloc0_1_0 + 1)
      000248 A3               [24]  529 	inc	dptr
      000249 F0               [24]  530 	movx	@dptr,a
      00024A D0 07            [24]  531 	pop	ar7
      00024C D0 06            [24]  532 	pop	ar6
      00024E 02r00r1F         [24]  533 	ljmp	00119$
      000251                        534 00118$:
                                    535 ;	c16stombs.c:87: return(m);
      000251 90r00r08         [24]  536 	mov	dptr,#___c16stombs_m_65536_79
      000254 E0               [24]  537 	movx	a,@dptr
      000255 FE               [12]  538 	mov	r6,a
      000256 A3               [24]  539 	inc	dptr
      000257 E0               [24]  540 	movx	a,@dptr
      000258 FF               [12]  541 	mov	r7,a
      000259 8E 82            [24]  542 	mov	dpl,r6
      00025B 8F 83            [24]  543 	mov	dph,r7
                                    544 ;	c16stombs.c:88: }
      00025D 02r00r00         [24]  545 	ljmp	__sdcc_banked_ret
                                    546 	.area CSEG    (CODE)
                                    547 	.area CONST   (CODE)
                                    548 	.area XINIT   (CODE)
                                    549 	.area CABS    (ABS,CODE)
