                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module sprintf
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __print_format
                                     12 	.globl _vsprintf_PARM_3
                                     13 	.globl _vsprintf_PARM_2
                                     14 	.globl _vsprintf
                                     15 	.globl _sprintf
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; uninitialized external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
      000000                         59 _vsprintf_PARM_2:
      000000                         60 	.ds 3
      000003                         61 _vsprintf_PARM_3:
      000003                         62 	.ds 1
      000004                         63 _vsprintf_buf_65536_16:
      000004                         64 	.ds 3
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XABS    (ABS,XDATA)
                                     69 ;--------------------------------------------------------
                                     70 ; initialized external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area XISEG   (XDATA)
                                     73 	.area HOME    (CODE)
                                     74 	.area GSINIT0 (CODE)
                                     75 	.area GSINIT1 (CODE)
                                     76 	.area GSINIT2 (CODE)
                                     77 	.area GSINIT3 (CODE)
                                     78 	.area GSINIT4 (CODE)
                                     79 	.area GSINIT5 (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area CSEG    (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; Home
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area HOME    (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; code
                                     97 ;--------------------------------------------------------
                                     98 	.area CSEG    (CODE)
                                     99 ;------------------------------------------------------------
                                    100 ;Allocation info for local variables in function 'put_char_to_string'
                                    101 ;------------------------------------------------------------
                                    102 ;p                         Allocated to stack - _bp -6
                                    103 ;c                         Allocated to stack - _bp +1
                                    104 ;buf                       Allocated to stack - _bp +2
                                    105 ;------------------------------------------------------------
                                    106 ;	sprintf.c:34: put_char_to_string (char c, void* p) _REENTRANT
                                    107 ;	-----------------------------------------
                                    108 ;	 function put_char_to_string
                                    109 ;	-----------------------------------------
      000000                        110 _put_char_to_string:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 C0*00            [24]  119 	push	_bp
      000002 85 81*00         [24]  120 	mov	_bp,sp
      000005 C0 82            [24]  121 	push	dpl
      000007 05 81            [12]  122 	inc	sp
      000009 05 81            [12]  123 	inc	sp
      00000B 05 81            [12]  124 	inc	sp
                                    125 ;	sprintf.c:36: char **buf = (char **)p;
      00000D E5*00            [12]  126 	mov	a,_bp
      00000F 24 FA            [12]  127 	add	a,#0xfa
      000011 F8               [12]  128 	mov	r0,a
      000012 A9*00            [24]  129 	mov	r1,_bp
      000014 09               [12]  130 	inc	r1
      000015 09               [12]  131 	inc	r1
      000016 E6               [12]  132 	mov	a,@r0
      000017 F7               [12]  133 	mov	@r1,a
      000018 08               [12]  134 	inc	r0
      000019 E6               [12]  135 	mov	a,@r0
      00001A 09               [12]  136 	inc	r1
      00001B F7               [12]  137 	mov	@r1,a
      00001C 08               [12]  138 	inc	r0
      00001D E6               [12]  139 	mov	a,@r0
      00001E 09               [12]  140 	inc	r1
      00001F F7               [12]  141 	mov	@r1,a
                                    142 ;	sprintf.c:37: *(*buf)++ = c;
      000020 A8*00            [24]  143 	mov	r0,_bp
      000022 08               [12]  144 	inc	r0
      000023 08               [12]  145 	inc	r0
      000024 86 82            [24]  146 	mov	dpl,@r0
      000026 08               [12]  147 	inc	r0
      000027 86 83            [24]  148 	mov	dph,@r0
      000029 08               [12]  149 	inc	r0
      00002A 86 F0            [24]  150 	mov	b,@r0
      00002C 12r00r00         [24]  151 	lcall	__gptrget
      00002F FA               [12]  152 	mov	r2,a
      000030 A3               [24]  153 	inc	dptr
      000031 12r00r00         [24]  154 	lcall	__gptrget
      000034 FB               [12]  155 	mov	r3,a
      000035 A3               [24]  156 	inc	dptr
      000036 12r00r00         [24]  157 	lcall	__gptrget
      000039 FF               [12]  158 	mov	r7,a
      00003A 74 01            [12]  159 	mov	a,#0x01
      00003C 2A               [12]  160 	add	a,r2
      00003D FC               [12]  161 	mov	r4,a
      00003E E4               [12]  162 	clr	a
      00003F 3B               [12]  163 	addc	a,r3
      000040 FD               [12]  164 	mov	r5,a
      000041 8F 06            [24]  165 	mov	ar6,r7
      000043 A8*00            [24]  166 	mov	r0,_bp
      000045 08               [12]  167 	inc	r0
      000046 08               [12]  168 	inc	r0
      000047 86 82            [24]  169 	mov	dpl,@r0
      000049 08               [12]  170 	inc	r0
      00004A 86 83            [24]  171 	mov	dph,@r0
      00004C 08               [12]  172 	inc	r0
      00004D 86 F0            [24]  173 	mov	b,@r0
      00004F EC               [12]  174 	mov	a,r4
      000050 12r00r00         [24]  175 	lcall	__gptrput
      000053 A3               [24]  176 	inc	dptr
      000054 ED               [12]  177 	mov	a,r5
      000055 12r00r00         [24]  178 	lcall	__gptrput
      000058 A3               [24]  179 	inc	dptr
      000059 EE               [12]  180 	mov	a,r6
      00005A 12r00r00         [24]  181 	lcall	__gptrput
      00005D 8A 82            [24]  182 	mov	dpl,r2
      00005F 8B 83            [24]  183 	mov	dph,r3
      000061 8F F0            [24]  184 	mov	b,r7
      000063 A8*00            [24]  185 	mov	r0,_bp
      000065 08               [12]  186 	inc	r0
      000066 E6               [12]  187 	mov	a,@r0
      000067 12r00r00         [24]  188 	lcall	__gptrput
                                    189 ;	sprintf.c:38: }
      00006A 85*00 81         [24]  190 	mov	sp,_bp
      00006D D0*00            [24]  191 	pop	_bp
      00006F 02r00r00         [24]  192 	ljmp	__sdcc_banked_ret
                                    193 ;------------------------------------------------------------
                                    194 ;Allocation info for local variables in function 'vsprintf'
                                    195 ;------------------------------------------------------------
                                    196 ;format                    Allocated with name '_vsprintf_PARM_2'
                                    197 ;ap                        Allocated with name '_vsprintf_PARM_3'
                                    198 ;buf                       Allocated with name '_vsprintf_buf_65536_16'
                                    199 ;i                         Allocated with name '_vsprintf_i_65536_17'
                                    200 ;------------------------------------------------------------
                                    201 ;	sprintf.c:41: vsprintf (char *buf, const char *format, va_list ap)
                                    202 ;	-----------------------------------------
                                    203 ;	 function vsprintf
                                    204 ;	-----------------------------------------
      000072                        205 _vsprintf:
      000072 AF F0            [24]  206 	mov	r7,b
      000074 AE 83            [24]  207 	mov	r6,dph
      000076 E5 82            [12]  208 	mov	a,dpl
      000078 90r00r04         [24]  209 	mov	dptr,#_vsprintf_buf_65536_16
      00007B F0               [24]  210 	movx	@dptr,a
      00007C EE               [12]  211 	mov	a,r6
      00007D A3               [24]  212 	inc	dptr
      00007E F0               [24]  213 	movx	@dptr,a
      00007F EF               [12]  214 	mov	a,r7
      000080 A3               [24]  215 	inc	dptr
      000081 F0               [24]  216 	movx	@dptr,a
                                    217 ;	sprintf.c:44: i = _print_format (put_char_to_string, &buf, format, ap);
      000082 90r00r00         [24]  218 	mov	dptr,#_vsprintf_PARM_2
      000085 E0               [24]  219 	movx	a,@dptr
      000086 FD               [12]  220 	mov	r5,a
      000087 A3               [24]  221 	inc	dptr
      000088 E0               [24]  222 	movx	a,@dptr
      000089 FE               [12]  223 	mov	r6,a
      00008A A3               [24]  224 	inc	dptr
      00008B E0               [24]  225 	movx	a,@dptr
      00008C FF               [12]  226 	mov	r7,a
      00008D 90r00r03         [24]  227 	mov	dptr,#_vsprintf_PARM_3
      000090 E0               [24]  228 	movx	a,@dptr
      000091 FC               [12]  229 	mov	r4,a
      000092 90r00r00         [24]  230 	mov	dptr,#__print_format_PARM_2
      000095 74r04            [12]  231 	mov	a,#_vsprintf_buf_65536_16
      000097 F0               [24]  232 	movx	@dptr,a
      000098 74s00            [12]  233 	mov	a,#(_vsprintf_buf_65536_16 >> 8)
      00009A A3               [24]  234 	inc	dptr
      00009B F0               [24]  235 	movx	@dptr,a
      00009C E4               [12]  236 	clr	a
      00009D A3               [24]  237 	inc	dptr
      00009E F0               [24]  238 	movx	@dptr,a
      00009F 90r00r00         [24]  239 	mov	dptr,#__print_format_PARM_3
      0000A2 ED               [12]  240 	mov	a,r5
      0000A3 F0               [24]  241 	movx	@dptr,a
      0000A4 EE               [12]  242 	mov	a,r6
      0000A5 A3               [24]  243 	inc	dptr
      0000A6 F0               [24]  244 	movx	@dptr,a
      0000A7 EF               [12]  245 	mov	a,r7
      0000A8 A3               [24]  246 	inc	dptr
      0000A9 F0               [24]  247 	movx	@dptr,a
      0000AA 90r00r00         [24]  248 	mov	dptr,#__print_format_PARM_4
      0000AD EC               [12]  249 	mov	a,r4
      0000AE F0               [24]  250 	movx	@dptr,a
      0000AF 90r00r00         [24]  251 	mov	dptr,#_put_char_to_string
      0000B2 75 F0s00         [24]  252 	mov	b,#(_put_char_to_string >> 16)
      0000B5 78r00            [12]  253 	mov	r0,#__print_format
      0000B7 79s00            [12]  254 	mov	r1,#(__print_format >> 8)
      0000B9 7As00            [12]  255 	mov	r2,#(__print_format >> 16)
      0000BB 12r00r00         [24]  256 	lcall	__sdcc_banked_call
      0000BE AE 82            [24]  257 	mov	r6,dpl
      0000C0 AF 83            [24]  258 	mov	r7,dph
                                    259 ;	sprintf.c:45: *buf = 0;
      0000C2 90r00r04         [24]  260 	mov	dptr,#_vsprintf_buf_65536_16
      0000C5 E0               [24]  261 	movx	a,@dptr
      0000C6 FB               [12]  262 	mov	r3,a
      0000C7 A3               [24]  263 	inc	dptr
      0000C8 E0               [24]  264 	movx	a,@dptr
      0000C9 FC               [12]  265 	mov	r4,a
      0000CA A3               [24]  266 	inc	dptr
      0000CB E0               [24]  267 	movx	a,@dptr
      0000CC FD               [12]  268 	mov	r5,a
      0000CD 8B 82            [24]  269 	mov	dpl,r3
      0000CF 8C 83            [24]  270 	mov	dph,r4
      0000D1 8D F0            [24]  271 	mov	b,r5
      0000D3 E4               [12]  272 	clr	a
      0000D4 12r00r00         [24]  273 	lcall	__gptrput
                                    274 ;	sprintf.c:46: return i;
      0000D7 8E 82            [24]  275 	mov	dpl,r6
      0000D9 8F 83            [24]  276 	mov	dph,r7
                                    277 ;	sprintf.c:47: }
      0000DB 02r00r00         [24]  278 	ljmp	__sdcc_banked_ret
                                    279 ;------------------------------------------------------------
                                    280 ;Allocation info for local variables in function 'sprintf'
                                    281 ;------------------------------------------------------------
                                    282 ;buf                       Allocated to stack - _bp -6
                                    283 ;format                    Allocated to stack - _bp -9
                                    284 ;arg                       Allocated to registers r7 
                                    285 ;i                         Allocated to registers r6 r7 
                                    286 ;------------------------------------------------------------
                                    287 ;	sprintf.c:50: sprintf (char *buf, const char *format, ...)
                                    288 ;	-----------------------------------------
                                    289 ;	 function sprintf
                                    290 ;	-----------------------------------------
      0000DE                        291 _sprintf:
      0000DE C0*00            [24]  292 	push	_bp
                                    293 ;	sprintf.c:55: va_start (arg, format);
      0000E0 E5 81            [12]  294 	mov	a,sp
      0000E2 F5*00            [12]  295 	mov	_bp,a
      0000E4 24 F7            [12]  296 	add	a,#0xf7
      0000E6 FF               [12]  297 	mov	r7,a
                                    298 ;	sprintf.c:56: i = _print_format (put_char_to_string, &buf, format, arg);
      0000E7 E5*00            [12]  299 	mov	a,_bp
      0000E9 24 FA            [12]  300 	add	a,#0xfa
      0000EB FE               [12]  301 	mov	r6,a
      0000EC 7D 00            [12]  302 	mov	r5,#0x00
      0000EE 7C 40            [12]  303 	mov	r4,#0x40
      0000F0 90r00r00         [24]  304 	mov	dptr,#__print_format_PARM_2
      0000F3 EE               [12]  305 	mov	a,r6
      0000F4 F0               [24]  306 	movx	@dptr,a
      0000F5 ED               [12]  307 	mov	a,r5
      0000F6 A3               [24]  308 	inc	dptr
      0000F7 F0               [24]  309 	movx	@dptr,a
      0000F8 EC               [12]  310 	mov	a,r4
      0000F9 A3               [24]  311 	inc	dptr
      0000FA F0               [24]  312 	movx	@dptr,a
      0000FB E5*00            [12]  313 	mov	a,_bp
      0000FD 24 F7            [12]  314 	add	a,#0xf7
      0000FF F8               [12]  315 	mov	r0,a
      000100 90r00r00         [24]  316 	mov	dptr,#__print_format_PARM_3
      000103 E6               [12]  317 	mov	a,@r0
      000104 F0               [24]  318 	movx	@dptr,a
      000105 08               [12]  319 	inc	r0
      000106 E6               [12]  320 	mov	a,@r0
      000107 A3               [24]  321 	inc	dptr
      000108 F0               [24]  322 	movx	@dptr,a
      000109 08               [12]  323 	inc	r0
      00010A E6               [12]  324 	mov	a,@r0
      00010B A3               [24]  325 	inc	dptr
      00010C F0               [24]  326 	movx	@dptr,a
      00010D 90r00r00         [24]  327 	mov	dptr,#__print_format_PARM_4
      000110 EF               [12]  328 	mov	a,r7
      000111 F0               [24]  329 	movx	@dptr,a
      000112 90r00r00         [24]  330 	mov	dptr,#_put_char_to_string
      000115 75 F0s00         [24]  331 	mov	b,#(_put_char_to_string >> 16)
      000118 78r00            [12]  332 	mov	r0,#__print_format
      00011A 79s00            [12]  333 	mov	r1,#(__print_format >> 8)
      00011C 7As00            [12]  334 	mov	r2,#(__print_format >> 16)
      00011E 12r00r00         [24]  335 	lcall	__sdcc_banked_call
      000121 AE 82            [24]  336 	mov	r6,dpl
      000123 AF 83            [24]  337 	mov	r7,dph
                                    338 ;	sprintf.c:57: *buf = 0;
      000125 E5*00            [12]  339 	mov	a,_bp
      000127 24 FA            [12]  340 	add	a,#0xfa
      000129 F8               [12]  341 	mov	r0,a
      00012A 86 03            [24]  342 	mov	ar3,@r0
      00012C 08               [12]  343 	inc	r0
      00012D 86 04            [24]  344 	mov	ar4,@r0
      00012F 08               [12]  345 	inc	r0
      000130 86 05            [24]  346 	mov	ar5,@r0
      000132 8B 82            [24]  347 	mov	dpl,r3
      000134 8C 83            [24]  348 	mov	dph,r4
      000136 8D F0            [24]  349 	mov	b,r5
      000138 E4               [12]  350 	clr	a
      000139 12r00r00         [24]  351 	lcall	__gptrput
                                    352 ;	sprintf.c:60: return i;
      00013C 8E 82            [24]  353 	mov	dpl,r6
      00013E 8F 83            [24]  354 	mov	dph,r7
                                    355 ;	sprintf.c:61: }
      000140 D0*00            [24]  356 	pop	_bp
      000142 02r00r00         [24]  357 	ljmp	__sdcc_banked_ret
                                    358 	.area CSEG    (CODE)
                                    359 	.area CONST   (CODE)
                                    360 	.area XINIT   (CODE)
                                    361 	.area CABS    (ABS,CODE)
