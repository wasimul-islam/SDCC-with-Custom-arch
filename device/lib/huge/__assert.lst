                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module __assert
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___assert
                                     12 	.globl _printf
                                     13 	.globl ___assert_PARM_4
                                     14 	.globl ___assert_PARM_3
                                     15 	.globl ___assert_PARM_2
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; uninitialized external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
      000000                         59 ___assert_PARM_2:
      000000                         60 	.ds 3
      000003                         61 ___assert_PARM_3:
      000003                         62 	.ds 3
      000006                         63 ___assert_PARM_4:
      000006                         64 	.ds 2
      000008                         65 ___assert_expression_65536_52:
      000008                         66 	.ds 3
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; initialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function '__assert'
                                    103 ;------------------------------------------------------------
                                    104 ;functionname              Allocated with name '___assert_PARM_2'
                                    105 ;filename                  Allocated with name '___assert_PARM_3'
                                    106 ;linenumber                Allocated with name '___assert_PARM_4'
                                    107 ;expression                Allocated with name '___assert_expression_65536_52'
                                    108 ;------------------------------------------------------------
                                    109 ;	__assert.c:32: void __assert(const char *expression, const char *functionname, const char *filename, unsigned int linenumber)
                                    110 ;	-----------------------------------------
                                    111 ;	 function __assert
                                    112 ;	-----------------------------------------
      000000                        113 ___assert:
                           000007   114 	ar7 = 0x07
                           000006   115 	ar6 = 0x06
                           000005   116 	ar5 = 0x05
                           000004   117 	ar4 = 0x04
                           000003   118 	ar3 = 0x03
                           000002   119 	ar2 = 0x02
                           000001   120 	ar1 = 0x01
                           000000   121 	ar0 = 0x00
      000000 AF F0            [24]  122 	mov	r7,b
      000002 AE 83            [24]  123 	mov	r6,dph
      000004 E5 82            [12]  124 	mov	a,dpl
      000006 90r00r08         [24]  125 	mov	dptr,#___assert_expression_65536_52
      000009 F0               [24]  126 	movx	@dptr,a
      00000A EE               [12]  127 	mov	a,r6
      00000B A3               [24]  128 	inc	dptr
      00000C F0               [24]  129 	movx	@dptr,a
      00000D EF               [12]  130 	mov	a,r7
      00000E A3               [24]  131 	inc	dptr
      00000F F0               [24]  132 	movx	@dptr,a
                                    133 ;	__assert.c:34: printf("Assert(%s) failed in function %s at line %u in file %s.\n",
      000010 90r00r03         [24]  134 	mov	dptr,#___assert_PARM_3
      000013 E0               [24]  135 	movx	a,@dptr
      000014 C0 E0            [24]  136 	push	acc
      000016 A3               [24]  137 	inc	dptr
      000017 E0               [24]  138 	movx	a,@dptr
      000018 C0 E0            [24]  139 	push	acc
      00001A A3               [24]  140 	inc	dptr
      00001B E0               [24]  141 	movx	a,@dptr
      00001C C0 E0            [24]  142 	push	acc
      00001E 90r00r06         [24]  143 	mov	dptr,#___assert_PARM_4
      000021 E0               [24]  144 	movx	a,@dptr
      000022 C0 E0            [24]  145 	push	acc
      000024 A3               [24]  146 	inc	dptr
      000025 E0               [24]  147 	movx	a,@dptr
      000026 C0 E0            [24]  148 	push	acc
      000028 90r00r00         [24]  149 	mov	dptr,#___assert_PARM_2
      00002B E0               [24]  150 	movx	a,@dptr
      00002C C0 E0            [24]  151 	push	acc
      00002E A3               [24]  152 	inc	dptr
      00002F E0               [24]  153 	movx	a,@dptr
      000030 C0 E0            [24]  154 	push	acc
      000032 A3               [24]  155 	inc	dptr
      000033 E0               [24]  156 	movx	a,@dptr
      000034 C0 E0            [24]  157 	push	acc
      000036 90r00r08         [24]  158 	mov	dptr,#___assert_expression_65536_52
      000039 E0               [24]  159 	movx	a,@dptr
      00003A C0 E0            [24]  160 	push	acc
      00003C A3               [24]  161 	inc	dptr
      00003D E0               [24]  162 	movx	a,@dptr
      00003E C0 E0            [24]  163 	push	acc
      000040 A3               [24]  164 	inc	dptr
      000041 E0               [24]  165 	movx	a,@dptr
      000042 C0 E0            [24]  166 	push	acc
      000044 74r00            [12]  167 	mov	a,#___str_0
      000046 C0 E0            [24]  168 	push	acc
      000048 74s00            [12]  169 	mov	a,#(___str_0 >> 8)
      00004A C0 E0            [24]  170 	push	acc
      00004C 74 80            [12]  171 	mov	a,#0x80
      00004E C0 E0            [24]  172 	push	acc
      000050 78r00            [12]  173 	mov	r0,#_printf
      000052 79s00            [12]  174 	mov	r1,#(_printf >> 8)
      000054 7As00            [12]  175 	mov	r2,#(_printf >> 16)
      000056 12r00r00         [24]  176 	lcall	__sdcc_banked_call
      000059 E5 81            [12]  177 	mov	a,sp
      00005B 24 F2            [12]  178 	add	a,#0xf2
      00005D F5 81            [12]  179 	mov	sp,a
      00005F                        180 00103$:
                                    181 ;	__assert.c:37: }
      00005F 80 FE            [24]  182 	sjmp	00103$
                                    183 	.area CSEG    (CODE)
                                    184 	.area CONST   (CODE)
                                    185 	.area CONST   (CODE)
      000000                        186 ___str_0:
      000000 41 73 73 65 72 74 28   187 	.ascii "Assert(%s) failed in function %s at line %u in file %s."
             25 73 29 20 66 61 69
             6C 65 64 20 69 6E 20
             66 75 6E 63 74 69 6F
             6E 20 25 73 20 61 74
             20 6C 69 6E 65 20 25
             75 20 69 6E 20 66 69
             6C 65 20 25 73 2E
      000037 0A                     188 	.db 0x0a
      000038 00                     189 	.db 0x00
                                    190 	.area CSEG    (CODE)
                                    191 	.area XINIT   (CODE)
                                    192 	.area CABS    (ABS,CODE)
