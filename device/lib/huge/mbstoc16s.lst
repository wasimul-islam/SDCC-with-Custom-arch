                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbstoc16s
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbtowc
                                     12 	.globl ___mbstoc16s_PARM_3
                                     13 	.globl ___mbstoc16s_PARM_2
                                     14 	.globl ___mbstoc16s
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
      000000                         34 ___mbstoc16s_sloc0_1_0:
      000000                         35 	.ds 3
      000003                         36 ___mbstoc16s_sloc1_1_0:
      000003                         37 	.ds 4
      000007                         38 ___mbstoc16s_sloc2_1_0:
      000007                         39 	.ds 2
                                     40 ;--------------------------------------------------------
                                     41 ; overlayable items in internal ram
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; indirectly addressable internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area ISEG    (DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; absolute internal ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area IABS    (ABS,DATA)
                                     51 	.area IABS    (ABS,DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; bit data
                                     54 ;--------------------------------------------------------
                                     55 	.area BSEG    (BIT)
                                     56 ;--------------------------------------------------------
                                     57 ; paged external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area PSEG    (PAG,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; uninitialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XSEG    (XDATA)
      000000                         64 ___mbstoc16s_PARM_2:
      000000                         65 	.ds 3
      000003                         66 ___mbstoc16s_PARM_3:
      000003                         67 	.ds 2
      000005                         68 ___mbstoc16s_c16s_65536_53:
      000005                         69 	.ds 3
      000008                         70 ___mbstoc16s_m_65536_54:
      000008                         71 	.ds 2
      00000A                         72 ___mbstoc16s_codepoint_196608_56:
      00000A                         73 	.ds 4
                                     74 ;--------------------------------------------------------
                                     75 ; absolute external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XABS    (ABS,XDATA)
                                     78 ;--------------------------------------------------------
                                     79 ; initialized external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area XISEG   (XDATA)
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT0 (CODE)
                                     84 	.area GSINIT1 (CODE)
                                     85 	.area GSINIT2 (CODE)
                                     86 	.area GSINIT3 (CODE)
                                     87 	.area GSINIT4 (CODE)
                                     88 	.area GSINIT5 (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area CSEG    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; global & static initialisations
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 	.area GSFINAL (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 ;--------------------------------------------------------
                                    100 ; Home
                                    101 ;--------------------------------------------------------
                                    102 	.area HOME    (CODE)
                                    103 	.area HOME    (CODE)
                                    104 ;--------------------------------------------------------
                                    105 ; code
                                    106 ;--------------------------------------------------------
                                    107 	.area CSEG    (CODE)
                                    108 ;------------------------------------------------------------
                                    109 ;Allocation info for local variables in function '__mbstoc16s'
                                    110 ;------------------------------------------------------------
                                    111 ;sloc0                     Allocated with name '___mbstoc16s_sloc0_1_0'
                                    112 ;sloc1                     Allocated with name '___mbstoc16s_sloc1_1_0'
                                    113 ;sloc2                     Allocated with name '___mbstoc16s_sloc2_1_0'
                                    114 ;s                         Allocated with name '___mbstoc16s_PARM_2'
                                    115 ;n                         Allocated with name '___mbstoc16s_PARM_3'
                                    116 ;c16s                      Allocated with name '___mbstoc16s_c16s_65536_53'
                                    117 ;m                         Allocated with name '___mbstoc16s_m_65536_54'
                                    118 ;l                         Allocated with name '___mbstoc16s_l_196608_56'
                                    119 ;codepoint                 Allocated with name '___mbstoc16s_codepoint_196608_56'
                                    120 ;------------------------------------------------------------
                                    121 ;	mbstoc16s.c:44: size_t __mbstoc16s(char16_t *restrict c16s, const char *restrict s, size_t n)
                                    122 ;	-----------------------------------------
                                    123 ;	 function __mbstoc16s
                                    124 ;	-----------------------------------------
      000000                        125 ___mbstoc16s:
                           000007   126 	ar7 = 0x07
                           000006   127 	ar6 = 0x06
                           000005   128 	ar5 = 0x05
                           000004   129 	ar4 = 0x04
                           000003   130 	ar3 = 0x03
                           000002   131 	ar2 = 0x02
                           000001   132 	ar1 = 0x01
                           000000   133 	ar0 = 0x00
      000000 AF F0            [24]  134 	mov	r7,b
      000002 AE 83            [24]  135 	mov	r6,dph
      000004 E5 82            [12]  136 	mov	a,dpl
      000006 90r00r05         [24]  137 	mov	dptr,#___mbstoc16s_c16s_65536_53
      000009 F0               [24]  138 	movx	@dptr,a
      00000A EE               [12]  139 	mov	a,r6
      00000B A3               [24]  140 	inc	dptr
      00000C F0               [24]  141 	movx	@dptr,a
      00000D EF               [12]  142 	mov	a,r7
      00000E A3               [24]  143 	inc	dptr
      00000F F0               [24]  144 	movx	@dptr,a
                                    145 ;	mbstoc16s.c:46: size_t m = 0;
      000010 90r00r08         [24]  146 	mov	dptr,#___mbstoc16s_m_65536_54
      000013 E4               [12]  147 	clr	a
      000014 F0               [24]  148 	movx	@dptr,a
      000015 A3               [24]  149 	inc	dptr
      000016 F0               [24]  150 	movx	@dptr,a
                                    151 ;	mbstoc16s.c:85: return(m);
      000017 90r00r03         [24]  152 	mov	dptr,#___mbstoc16s_PARM_3
      00001A E0               [24]  153 	movx	a,@dptr
      00001B F5*00            [12]  154 	mov	___mbstoc16s_sloc0_1_0,a
      00001D A3               [24]  155 	inc	dptr
      00001E E0               [24]  156 	movx	a,@dptr
      00001F F5*01            [12]  157 	mov	(___mbstoc16s_sloc0_1_0 + 1),a
      000021 AC*00            [24]  158 	mov	r4,___mbstoc16s_sloc0_1_0
      000023 AD*01            [24]  159 	mov	r5,(___mbstoc16s_sloc0_1_0 + 1)
      000025                        160 00116$:
                                    161 ;	mbstoc16s.c:53: l = mbtowc(&codepoint, s, MB_LEN_MAX);
      000025 90r00r00         [24]  162 	mov	dptr,#___mbstoc16s_PARM_2
      000028 E0               [24]  163 	movx	a,@dptr
      000029 F9               [12]  164 	mov	r1,a
      00002A A3               [24]  165 	inc	dptr
      00002B E0               [24]  166 	movx	a,@dptr
      00002C FA               [12]  167 	mov	r2,a
      00002D A3               [24]  168 	inc	dptr
      00002E E0               [24]  169 	movx	a,@dptr
      00002F FB               [12]  170 	mov	r3,a
      000030 90r00r00         [24]  171 	mov	dptr,#_mbtowc_PARM_2
      000033 E9               [12]  172 	mov	a,r1
      000034 F0               [24]  173 	movx	@dptr,a
      000035 EA               [12]  174 	mov	a,r2
      000036 A3               [24]  175 	inc	dptr
      000037 F0               [24]  176 	movx	@dptr,a
      000038 EB               [12]  177 	mov	a,r3
      000039 A3               [24]  178 	inc	dptr
      00003A F0               [24]  179 	movx	@dptr,a
      00003B 90r00r00         [24]  180 	mov	dptr,#_mbtowc_PARM_3
      00003E 74 04            [12]  181 	mov	a,#0x04
      000040 F0               [24]  182 	movx	@dptr,a
      000041 E4               [12]  183 	clr	a
      000042 A3               [24]  184 	inc	dptr
      000043 F0               [24]  185 	movx	@dptr,a
      000044 90r00r0A         [24]  186 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      000047 F5 F0            [12]  187 	mov	b,a
      000049 C0 05            [24]  188 	push	ar5
      00004B C0 04            [24]  189 	push	ar4
      00004D 78r00            [12]  190 	mov	r0,#_mbtowc
      00004F 79s00            [12]  191 	mov	r1,#(_mbtowc >> 8)
      000051 7As00            [12]  192 	mov	r2,#(_mbtowc >> 16)
      000053 12r00r00         [24]  193 	lcall	__sdcc_banked_call
      000056 AA 82            [24]  194 	mov	r2,dpl
      000058 AB 83            [24]  195 	mov	r3,dph
      00005A D0 04            [24]  196 	pop	ar4
      00005C D0 05            [24]  197 	pop	ar5
                                    198 ;	mbstoc16s.c:55: if(l < 0)
      00005E EB               [12]  199 	mov	a,r3
      00005F 30 E7 06         [24]  200 	jnb	acc.7,00106$
                                    201 ;	mbstoc16s.c:56: return(-1);
      000062 90 FF FF         [24]  202 	mov	dptr,#0xffff
      000065 02r00r00         [24]  203 	ljmp	__sdcc_banked_ret
      000068                        204 00106$:
                                    205 ;	mbstoc16s.c:57: else if(!l)
      000068 EA               [12]  206 	mov	a,r2
      000069 4B               [12]  207 	orl	a,r3
      00006A 70 36            [24]  208 	jnz	00107$
                                    209 ;	mbstoc16s.c:59: if(m < n)
      00006C 90r00r08         [24]  210 	mov	dptr,#___mbstoc16s_m_65536_54
      00006F E0               [24]  211 	movx	a,@dptr
      000070 F8               [12]  212 	mov	r0,a
      000071 A3               [24]  213 	inc	dptr
      000072 E0               [24]  214 	movx	a,@dptr
      000073 F9               [12]  215 	mov	r1,a
      000074 C3               [12]  216 	clr	c
      000075 E8               [12]  217 	mov	a,r0
      000076 95*00            [12]  218 	subb	a,___mbstoc16s_sloc0_1_0
      000078 E9               [12]  219 	mov	a,r1
      000079 95*01            [12]  220 	subb	a,(___mbstoc16s_sloc0_1_0 + 1)
      00007B 40 03            [24]  221 	jc	00150$
      00007D 02r02r2F         [24]  222 	ljmp	00115$
      000080                        223 00150$:
                                    224 ;	mbstoc16s.c:60: *c16s = 0;
      000080 90r00r05         [24]  225 	mov	dptr,#___mbstoc16s_c16s_65536_53
      000083 E0               [24]  226 	movx	a,@dptr
      000084 F5*00            [12]  227 	mov	___mbstoc16s_sloc0_1_0,a
      000086 A3               [24]  228 	inc	dptr
      000087 E0               [24]  229 	movx	a,@dptr
      000088 F5*01            [12]  230 	mov	(___mbstoc16s_sloc0_1_0 + 1),a
      00008A A3               [24]  231 	inc	dptr
      00008B E0               [24]  232 	movx	a,@dptr
      00008C F5*02            [12]  233 	mov	(___mbstoc16s_sloc0_1_0 + 2),a
      00008E 85*00 82         [24]  234 	mov	dpl,___mbstoc16s_sloc0_1_0
      000091 85*01 83         [24]  235 	mov	dph,(___mbstoc16s_sloc0_1_0 + 1)
      000094 85*02 F0         [24]  236 	mov	b,(___mbstoc16s_sloc0_1_0 + 2)
      000097 E4               [12]  237 	clr	a
      000098 12r00r00         [24]  238 	lcall	__gptrput
      00009B A3               [24]  239 	inc	dptr
      00009C 12r00r00         [24]  240 	lcall	__gptrput
                                    241 ;	mbstoc16s.c:61: break;
      00009F 02r02r2F         [24]  242 	ljmp	00115$
      0000A2                        243 00107$:
                                    244 ;	mbstoc16s.c:64: if (codepoint <= 0xffff) // Basic multilingual plane
      0000A2 90r00r0A         [24]  245 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      0000A5 E0               [24]  246 	movx	a,@dptr
      0000A6 F5*03            [12]  247 	mov	___mbstoc16s_sloc1_1_0,a
      0000A8 A3               [24]  248 	inc	dptr
      0000A9 E0               [24]  249 	movx	a,@dptr
      0000AA F5*04            [12]  250 	mov	(___mbstoc16s_sloc1_1_0 + 1),a
      0000AC A3               [24]  251 	inc	dptr
      0000AD E0               [24]  252 	movx	a,@dptr
      0000AE F5*05            [12]  253 	mov	(___mbstoc16s_sloc1_1_0 + 2),a
      0000B0 A3               [24]  254 	inc	dptr
      0000B1 E0               [24]  255 	movx	a,@dptr
      0000B2 F5*06            [12]  256 	mov	(___mbstoc16s_sloc1_1_0 + 3),a
      0000B4 C3               [12]  257 	clr	c
      0000B5 74 FF            [12]  258 	mov	a,#0xff
      0000B7 95*03            [12]  259 	subb	a,___mbstoc16s_sloc1_1_0
      0000B9 74 FF            [12]  260 	mov	a,#0xff
      0000BB 95*04            [12]  261 	subb	a,(___mbstoc16s_sloc1_1_0 + 1)
      0000BD E4               [12]  262 	clr	a
      0000BE 95*05            [12]  263 	subb	a,(___mbstoc16s_sloc1_1_0 + 2)
      0000C0 E4               [12]  264 	clr	a
      0000C1 95*06            [12]  265 	subb	a,(___mbstoc16s_sloc1_1_0 + 3)
      0000C3 40 5C            [24]  266 	jc	00113$
                                    267 ;	mbstoc16s.c:66: if (m >= n)
      0000C5 90r00r08         [24]  268 	mov	dptr,#___mbstoc16s_m_65536_54
      0000C8 E0               [24]  269 	movx	a,@dptr
      0000C9 F5*07            [12]  270 	mov	___mbstoc16s_sloc2_1_0,a
      0000CB A3               [24]  271 	inc	dptr
      0000CC E0               [24]  272 	movx	a,@dptr
      0000CD F5*08            [12]  273 	mov	(___mbstoc16s_sloc2_1_0 + 1),a
      0000CF C3               [12]  274 	clr	c
      0000D0 E5*07            [12]  275 	mov	a,___mbstoc16s_sloc2_1_0
      0000D2 95*00            [12]  276 	subb	a,___mbstoc16s_sloc0_1_0
      0000D4 E5*08            [12]  277 	mov	a,(___mbstoc16s_sloc2_1_0 + 1)
      0000D6 95*01            [12]  278 	subb	a,(___mbstoc16s_sloc0_1_0 + 1)
      0000D8 40 03            [24]  279 	jc	00152$
      0000DA 02r02r2F         [24]  280 	ljmp	00115$
      0000DD                        281 00152$:
                                    282 ;	mbstoc16s.c:69: *c16s++ = codepoint;
      0000DD C0 04            [24]  283 	push	ar4
      0000DF C0 05            [24]  284 	push	ar5
      0000E1 90r00r05         [24]  285 	mov	dptr,#___mbstoc16s_c16s_65536_53
      0000E4 E0               [24]  286 	movx	a,@dptr
      0000E5 FC               [12]  287 	mov	r4,a
      0000E6 A3               [24]  288 	inc	dptr
      0000E7 E0               [24]  289 	movx	a,@dptr
      0000E8 FD               [12]  290 	mov	r5,a
      0000E9 A3               [24]  291 	inc	dptr
      0000EA E0               [24]  292 	movx	a,@dptr
      0000EB FF               [12]  293 	mov	r7,a
      0000EC A9*03            [24]  294 	mov	r1,___mbstoc16s_sloc1_1_0
      0000EE AE*04            [24]  295 	mov	r6,(___mbstoc16s_sloc1_1_0 + 1)
      0000F0 8C 82            [24]  296 	mov	dpl,r4
      0000F2 8D 83            [24]  297 	mov	dph,r5
      0000F4 8F F0            [24]  298 	mov	b,r7
      0000F6 E9               [12]  299 	mov	a,r1
      0000F7 12r00r00         [24]  300 	lcall	__gptrput
      0000FA A3               [24]  301 	inc	dptr
      0000FB EE               [12]  302 	mov	a,r6
      0000FC 12r00r00         [24]  303 	lcall	__gptrput
      0000FF 90r00r05         [24]  304 	mov	dptr,#___mbstoc16s_c16s_65536_53
      000102 74 02            [12]  305 	mov	a,#0x02
      000104 2C               [12]  306 	add	a,r4
      000105 F0               [24]  307 	movx	@dptr,a
      000106 E4               [12]  308 	clr	a
      000107 3D               [12]  309 	addc	a,r5
      000108 A3               [24]  310 	inc	dptr
      000109 F0               [24]  311 	movx	@dptr,a
      00010A EF               [12]  312 	mov	a,r7
      00010B A3               [24]  313 	inc	dptr
      00010C F0               [24]  314 	movx	@dptr,a
                                    315 ;	mbstoc16s.c:70: m++;
      00010D 90r00r08         [24]  316 	mov	dptr,#___mbstoc16s_m_65536_54
      000110 74 01            [12]  317 	mov	a,#0x01
      000112 25*07            [12]  318 	add	a,___mbstoc16s_sloc2_1_0
      000114 F0               [24]  319 	movx	@dptr,a
      000115 E4               [12]  320 	clr	a
      000116 35*08            [12]  321 	addc	a,(___mbstoc16s_sloc2_1_0 + 1)
      000118 A3               [24]  322 	inc	dptr
      000119 F0               [24]  323 	movx	@dptr,a
      00011A D0 05            [24]  324 	pop	ar5
      00011C D0 04            [24]  325 	pop	ar4
      00011E 02r02r14         [24]  326 	ljmp	00114$
      000121                        327 00113$:
                                    328 ;	mbstoc16s.c:74: if (m + 1 >= n)
      000121 90r00r08         [24]  329 	mov	dptr,#___mbstoc16s_m_65536_54
      000124 E0               [24]  330 	movx	a,@dptr
      000125 F5*07            [12]  331 	mov	___mbstoc16s_sloc2_1_0,a
      000127 A3               [24]  332 	inc	dptr
      000128 E0               [24]  333 	movx	a,@dptr
      000129 F5*08            [12]  334 	mov	(___mbstoc16s_sloc2_1_0 + 1),a
      00012B 74 01            [12]  335 	mov	a,#0x01
      00012D 25*07            [12]  336 	add	a,___mbstoc16s_sloc2_1_0
      00012F F8               [12]  337 	mov	r0,a
      000130 E4               [12]  338 	clr	a
      000131 35*08            [12]  339 	addc	a,(___mbstoc16s_sloc2_1_0 + 1)
      000133 F9               [12]  340 	mov	r1,a
      000134 C3               [12]  341 	clr	c
      000135 E8               [12]  342 	mov	a,r0
      000136 9C               [12]  343 	subb	a,r4
      000137 E9               [12]  344 	mov	a,r1
      000138 9D               [12]  345 	subb	a,r5
      000139 40 03            [24]  346 	jc	00153$
      00013B 02r02r2F         [24]  347 	ljmp	00115$
      00013E                        348 00153$:
                                    349 ;	mbstoc16s.c:77: codepoint -= 0x100000;
      00013E C0 04            [24]  350 	push	ar4
      000140 C0 05            [24]  351 	push	ar5
      000142 A8*03            [24]  352 	mov	r0,___mbstoc16s_sloc1_1_0
      000144 A9*04            [24]  353 	mov	r1,(___mbstoc16s_sloc1_1_0 + 1)
      000146 E5*05            [12]  354 	mov	a,(___mbstoc16s_sloc1_1_0 + 2)
      000148 24 F0            [12]  355 	add	a,#0xf0
      00014A FC               [12]  356 	mov	r4,a
      00014B E5*06            [12]  357 	mov	a,(___mbstoc16s_sloc1_1_0 + 3)
      00014D 34 FF            [12]  358 	addc	a,#0xff
      00014F FD               [12]  359 	mov	r5,a
      000150 90r00r0A         [24]  360 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      000153 E8               [12]  361 	mov	a,r0
      000154 F0               [24]  362 	movx	@dptr,a
      000155 E9               [12]  363 	mov	a,r1
      000156 A3               [24]  364 	inc	dptr
      000157 F0               [24]  365 	movx	@dptr,a
      000158 EC               [12]  366 	mov	a,r4
      000159 A3               [24]  367 	inc	dptr
      00015A F0               [24]  368 	movx	@dptr,a
      00015B ED               [12]  369 	mov	a,r5
      00015C A3               [24]  370 	inc	dptr
      00015D F0               [24]  371 	movx	@dptr,a
                                    372 ;	mbstoc16s.c:78: *c16s++ = ((codepoint >> 10) & 0x3ff) + 0xd800;
      00015E 90r00r05         [24]  373 	mov	dptr,#___mbstoc16s_c16s_65536_53
      000161 E0               [24]  374 	movx	a,@dptr
      000162 F5*03            [12]  375 	mov	___mbstoc16s_sloc1_1_0,a
      000164 A3               [24]  376 	inc	dptr
      000165 E0               [24]  377 	movx	a,@dptr
      000166 F5*04            [12]  378 	mov	(___mbstoc16s_sloc1_1_0 + 1),a
      000168 A3               [24]  379 	inc	dptr
      000169 E0               [24]  380 	movx	a,@dptr
      00016A F5*05            [12]  381 	mov	(___mbstoc16s_sloc1_1_0 + 2),a
      00016C 90r00r0A         [24]  382 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      00016F E0               [24]  383 	movx	a,@dptr
      000170 A3               [24]  384 	inc	dptr
      000171 E0               [24]  385 	movx	a,@dptr
      000172 FD               [12]  386 	mov	r5,a
      000173 A3               [24]  387 	inc	dptr
      000174 E0               [24]  388 	movx	a,@dptr
      000175 FE               [12]  389 	mov	r6,a
      000176 A3               [24]  390 	inc	dptr
      000177 E0               [24]  391 	movx	a,@dptr
      000178 FF               [12]  392 	mov	r7,a
      000179 8D 00            [24]  393 	mov	ar0,r5
      00017B EE               [12]  394 	mov	a,r6
      00017C C3               [12]  395 	clr	c
      00017D 13               [12]  396 	rrc	a
      00017E C8               [12]  397 	xch	a,r0
      00017F 13               [12]  398 	rrc	a
      000180 C8               [12]  399 	xch	a,r0
      000181 C3               [12]  400 	clr	c
      000182 13               [12]  401 	rrc	a
      000183 C8               [12]  402 	xch	a,r0
      000184 13               [12]  403 	rrc	a
      000185 C8               [12]  404 	xch	a,r0
      000186 FD               [12]  405 	mov	r5,a
      000187 EF               [12]  406 	mov	a,r7
      000188 03               [12]  407 	rr	a
      000189 03               [12]  408 	rr	a
      00018A 54 C0            [12]  409 	anl	a,#0xc0
      00018C 4D               [12]  410 	orl	a,r5
      00018D FD               [12]  411 	mov	r5,a
      00018E EF               [12]  412 	mov	a,r7
      00018F 03               [12]  413 	rr	a
      000190 03               [12]  414 	rr	a
      000191 54 3F            [12]  415 	anl	a,#0x3f
      000193 FE               [12]  416 	mov	r6,a
      000194 53 05 03         [24]  417 	anl	ar5,#0x03
      000197 74 D8            [12]  418 	mov	a,#0xd8
      000199 2D               [12]  419 	add	a,r5
      00019A FD               [12]  420 	mov	r5,a
      00019B 85*03 82         [24]  421 	mov	dpl,___mbstoc16s_sloc1_1_0
      00019E 85*04 83         [24]  422 	mov	dph,(___mbstoc16s_sloc1_1_0 + 1)
      0001A1 85*05 F0         [24]  423 	mov	b,(___mbstoc16s_sloc1_1_0 + 2)
      0001A4 E8               [12]  424 	mov	a,r0
      0001A5 12r00r00         [24]  425 	lcall	__gptrput
      0001A8 A3               [24]  426 	inc	dptr
      0001A9 ED               [12]  427 	mov	a,r5
      0001AA 12r00r00         [24]  428 	lcall	__gptrput
      0001AD 90r00r05         [24]  429 	mov	dptr,#___mbstoc16s_c16s_65536_53
      0001B0 74 02            [12]  430 	mov	a,#0x02
      0001B2 25*03            [12]  431 	add	a,___mbstoc16s_sloc1_1_0
      0001B4 F0               [24]  432 	movx	@dptr,a
      0001B5 E4               [12]  433 	clr	a
      0001B6 35*04            [12]  434 	addc	a,(___mbstoc16s_sloc1_1_0 + 1)
      0001B8 A3               [24]  435 	inc	dptr
      0001B9 F0               [24]  436 	movx	@dptr,a
      0001BA E5*05            [12]  437 	mov	a,(___mbstoc16s_sloc1_1_0 + 2)
      0001BC A3               [24]  438 	inc	dptr
      0001BD F0               [24]  439 	movx	@dptr,a
                                    440 ;	mbstoc16s.c:79: *c16s++ = (codepoint & 0x3ff) + 0xdc00;
      0001BE 90r00r05         [24]  441 	mov	dptr,#___mbstoc16s_c16s_65536_53
      0001C1 E0               [24]  442 	movx	a,@dptr
      0001C2 F5*03            [12]  443 	mov	___mbstoc16s_sloc1_1_0,a
      0001C4 A3               [24]  444 	inc	dptr
      0001C5 E0               [24]  445 	movx	a,@dptr
      0001C6 F5*04            [12]  446 	mov	(___mbstoc16s_sloc1_1_0 + 1),a
      0001C8 A3               [24]  447 	inc	dptr
      0001C9 E0               [24]  448 	movx	a,@dptr
      0001CA F5*05            [12]  449 	mov	(___mbstoc16s_sloc1_1_0 + 2),a
      0001CC 90r00r0A         [24]  450 	mov	dptr,#___mbstoc16s_codepoint_196608_56
      0001CF E0               [24]  451 	movx	a,@dptr
      0001D0 F8               [12]  452 	mov	r0,a
      0001D1 A3               [24]  453 	inc	dptr
      0001D2 E0               [24]  454 	movx	a,@dptr
      0001D3 F9               [12]  455 	mov	r1,a
      0001D4 A3               [24]  456 	inc	dptr
      0001D5 E0               [24]  457 	movx	a,@dptr
      0001D6 A3               [24]  458 	inc	dptr
      0001D7 E0               [24]  459 	movx	a,@dptr
      0001D8 FF               [12]  460 	mov	r7,a
      0001D9 53 01 03         [24]  461 	anl	ar1,#0x03
      0001DC 74 DC            [12]  462 	mov	a,#0xdc
      0001DE 29               [12]  463 	add	a,r1
      0001DF F9               [12]  464 	mov	r1,a
      0001E0 85*03 82         [24]  465 	mov	dpl,___mbstoc16s_sloc1_1_0
      0001E3 85*04 83         [24]  466 	mov	dph,(___mbstoc16s_sloc1_1_0 + 1)
      0001E6 85*05 F0         [24]  467 	mov	b,(___mbstoc16s_sloc1_1_0 + 2)
      0001E9 E8               [12]  468 	mov	a,r0
      0001EA 12r00r00         [24]  469 	lcall	__gptrput
      0001ED A3               [24]  470 	inc	dptr
      0001EE E9               [12]  471 	mov	a,r1
      0001EF 12r00r00         [24]  472 	lcall	__gptrput
      0001F2 90r00r05         [24]  473 	mov	dptr,#___mbstoc16s_c16s_65536_53
      0001F5 74 02            [12]  474 	mov	a,#0x02
      0001F7 25*03            [12]  475 	add	a,___mbstoc16s_sloc1_1_0
      0001F9 F0               [24]  476 	movx	@dptr,a
      0001FA E4               [12]  477 	clr	a
      0001FB 35*04            [12]  478 	addc	a,(___mbstoc16s_sloc1_1_0 + 1)
      0001FD A3               [24]  479 	inc	dptr
      0001FE F0               [24]  480 	movx	@dptr,a
      0001FF E5*05            [12]  481 	mov	a,(___mbstoc16s_sloc1_1_0 + 2)
      000201 A3               [24]  482 	inc	dptr
      000202 F0               [24]  483 	movx	@dptr,a
                                    484 ;	mbstoc16s.c:80: m += 2;
      000203 90r00r08         [24]  485 	mov	dptr,#___mbstoc16s_m_65536_54
      000206 74 02            [12]  486 	mov	a,#0x02
      000208 25*07            [12]  487 	add	a,___mbstoc16s_sloc2_1_0
      00020A F0               [24]  488 	movx	@dptr,a
      00020B E4               [12]  489 	clr	a
      00020C 35*08            [12]  490 	addc	a,(___mbstoc16s_sloc2_1_0 + 1)
      00020E A3               [24]  491 	inc	dptr
      00020F F0               [24]  492 	movx	@dptr,a
                                    493 ;	mbstoc16s.c:85: return(m);
      000210 D0 05            [24]  494 	pop	ar5
      000212 D0 04            [24]  495 	pop	ar4
                                    496 ;	mbstoc16s.c:80: m += 2;
      000214                        497 00114$:
                                    498 ;	mbstoc16s.c:82: s += l;
      000214 90r00r00         [24]  499 	mov	dptr,#___mbstoc16s_PARM_2
      000217 E0               [24]  500 	movx	a,@dptr
      000218 F9               [12]  501 	mov	r1,a
      000219 A3               [24]  502 	inc	dptr
      00021A E0               [24]  503 	movx	a,@dptr
      00021B FE               [12]  504 	mov	r6,a
      00021C A3               [24]  505 	inc	dptr
      00021D E0               [24]  506 	movx	a,@dptr
      00021E FF               [12]  507 	mov	r7,a
      00021F 90r00r00         [24]  508 	mov	dptr,#___mbstoc16s_PARM_2
      000222 EA               [12]  509 	mov	a,r2
      000223 29               [12]  510 	add	a,r1
      000224 F0               [24]  511 	movx	@dptr,a
      000225 EB               [12]  512 	mov	a,r3
      000226 3E               [12]  513 	addc	a,r6
      000227 A3               [24]  514 	inc	dptr
      000228 F0               [24]  515 	movx	@dptr,a
      000229 EF               [12]  516 	mov	a,r7
      00022A A3               [24]  517 	inc	dptr
      00022B F0               [24]  518 	movx	@dptr,a
      00022C 02r00r25         [24]  519 	ljmp	00116$
      00022F                        520 00115$:
                                    521 ;	mbstoc16s.c:85: return(m);
      00022F 90r00r08         [24]  522 	mov	dptr,#___mbstoc16s_m_65536_54
      000232 E0               [24]  523 	movx	a,@dptr
      000233 FE               [12]  524 	mov	r6,a
      000234 A3               [24]  525 	inc	dptr
      000235 E0               [24]  526 	movx	a,@dptr
      000236 FF               [12]  527 	mov	r7,a
      000237 8E 82            [24]  528 	mov	dpl,r6
      000239 8F 83            [24]  529 	mov	dph,r7
                                    530 ;	mbstoc16s.c:86: }
      00023B 02r00r00         [24]  531 	ljmp	__sdcc_banked_ret
                                    532 	.area CSEG    (CODE)
                                    533 	.area CONST   (CODE)
                                    534 	.area XINIT   (CODE)
                                    535 	.area CABS    (ABS,CODE)
