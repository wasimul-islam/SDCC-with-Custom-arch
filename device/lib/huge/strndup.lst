                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strndup
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl ___memcpy
                                     13 	.globl _strlen
                                     14 	.globl _strndup_PARM_2
                                     15 	.globl _strndup
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _strndup_sloc0_1_0:
      000000                         36 	.ds 3
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
      000000                         61 _strndup_PARM_2:
      000000                         62 	.ds 2
      000002                         63 _strndup_s_65536_64:
      000002                         64 	.ds 3
      000005                         65 _strndup_l_65536_65:
      000005                         66 	.ds 2
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; initialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'strndup'
                                    103 ;------------------------------------------------------------
                                    104 ;sloc0                     Allocated with name '_strndup_sloc0_1_0'
                                    105 ;n                         Allocated with name '_strndup_PARM_2'
                                    106 ;s                         Allocated with name '_strndup_s_65536_64'
                                    107 ;l                         Allocated with name '_strndup_l_65536_65'
                                    108 ;r                         Allocated with name '_strndup_r_65537_66'
                                    109 ;------------------------------------------------------------
                                    110 ;	strndup.c:33: char *strndup (const char *s, size_t n)
                                    111 ;	-----------------------------------------
                                    112 ;	 function strndup
                                    113 ;	-----------------------------------------
      000000                        114 _strndup:
                           000007   115 	ar7 = 0x07
                           000006   116 	ar6 = 0x06
                           000005   117 	ar5 = 0x05
                           000004   118 	ar4 = 0x04
                           000003   119 	ar3 = 0x03
                           000002   120 	ar2 = 0x02
                           000001   121 	ar1 = 0x01
                           000000   122 	ar0 = 0x00
      000000 AF F0            [24]  123 	mov	r7,b
      000002 AE 83            [24]  124 	mov	r6,dph
      000004 E5 82            [12]  125 	mov	a,dpl
      000006 90r00r02         [24]  126 	mov	dptr,#_strndup_s_65536_64
      000009 F0               [24]  127 	movx	@dptr,a
      00000A EE               [12]  128 	mov	a,r6
      00000B A3               [24]  129 	inc	dptr
      00000C F0               [24]  130 	movx	@dptr,a
      00000D EF               [12]  131 	mov	a,r7
      00000E A3               [24]  132 	inc	dptr
      00000F F0               [24]  133 	movx	@dptr,a
                                    134 ;	strndup.c:35: size_t l = strlen (s);
      000010 90r00r02         [24]  135 	mov	dptr,#_strndup_s_65536_64
      000013 E0               [24]  136 	movx	a,@dptr
      000014 FD               [12]  137 	mov	r5,a
      000015 A3               [24]  138 	inc	dptr
      000016 E0               [24]  139 	movx	a,@dptr
      000017 FE               [12]  140 	mov	r6,a
      000018 A3               [24]  141 	inc	dptr
      000019 E0               [24]  142 	movx	a,@dptr
      00001A FF               [12]  143 	mov	r7,a
      00001B 8D 82            [24]  144 	mov	dpl,r5
      00001D 8E 83            [24]  145 	mov	dph,r6
      00001F 8F F0            [24]  146 	mov	b,r7
      000021 78r00            [12]  147 	mov	r0,#_strlen
      000023 79s00            [12]  148 	mov	r1,#(_strlen >> 8)
      000025 7As00            [12]  149 	mov	r2,#(_strlen >> 16)
      000027 12r00r00         [24]  150 	lcall	__sdcc_banked_call
      00002A AE 82            [24]  151 	mov	r6,dpl
      00002C AF 83            [24]  152 	mov	r7,dph
      00002E 90r00r05         [24]  153 	mov	dptr,#_strndup_l_65536_65
      000031 EE               [12]  154 	mov	a,r6
      000032 F0               [24]  155 	movx	@dptr,a
      000033 EF               [12]  156 	mov	a,r7
      000034 A3               [24]  157 	inc	dptr
      000035 F0               [24]  158 	movx	@dptr,a
                                    159 ;	strndup.c:36: if (l > n)
      000036 90r00r00         [24]  160 	mov	dptr,#_strndup_PARM_2
      000039 E0               [24]  161 	movx	a,@dptr
      00003A FC               [12]  162 	mov	r4,a
      00003B A3               [24]  163 	inc	dptr
      00003C E0               [24]  164 	movx	a,@dptr
      00003D FD               [12]  165 	mov	r5,a
      00003E C3               [12]  166 	clr	c
      00003F EC               [12]  167 	mov	a,r4
      000040 9E               [12]  168 	subb	a,r6
      000041 ED               [12]  169 	mov	a,r5
      000042 9F               [12]  170 	subb	a,r7
      000043 50 08            [24]  171 	jnc	00102$
                                    172 ;	strndup.c:37: l = n;
      000045 90r00r05         [24]  173 	mov	dptr,#_strndup_l_65536_65
      000048 EC               [12]  174 	mov	a,r4
      000049 F0               [24]  175 	movx	@dptr,a
      00004A ED               [12]  176 	mov	a,r5
      00004B A3               [24]  177 	inc	dptr
      00004C F0               [24]  178 	movx	@dptr,a
      00004D                        179 00102$:
                                    180 ;	strndup.c:38: char *r = malloc (l + 1);
      00004D 90r00r05         [24]  181 	mov	dptr,#_strndup_l_65536_65
      000050 E0               [24]  182 	movx	a,@dptr
      000051 FE               [12]  183 	mov	r6,a
      000052 A3               [24]  184 	inc	dptr
      000053 E0               [24]  185 	movx	a,@dptr
      000054 FF               [12]  186 	mov	r7,a
      000055 74 01            [12]  187 	mov	a,#0x01
      000057 2E               [12]  188 	add	a,r6
      000058 FC               [12]  189 	mov	r4,a
      000059 E4               [12]  190 	clr	a
      00005A 3F               [12]  191 	addc	a,r7
      00005B FD               [12]  192 	mov	r5,a
      00005C 8C 82            [24]  193 	mov	dpl,r4
      00005E 8D 83            [24]  194 	mov	dph,r5
      000060 C0 07            [24]  195 	push	ar7
      000062 C0 06            [24]  196 	push	ar6
      000064 78r00            [12]  197 	mov	r0,#_malloc
      000066 79s00            [12]  198 	mov	r1,#(_malloc >> 8)
      000068 7As00            [12]  199 	mov	r2,#(_malloc >> 16)
      00006A 12r00r00         [24]  200 	lcall	__sdcc_banked_call
      00006D AC 82            [24]  201 	mov	r4,dpl
      00006F AD 83            [24]  202 	mov	r5,dph
      000071 D0 06            [24]  203 	pop	ar6
      000073 D0 07            [24]  204 	pop	ar7
      000075 8D 03            [24]  205 	mov	ar3,r5
      000077 7D 00            [12]  206 	mov	r5,#0x00
                                    207 ;	strndup.c:39: if (r)
      000079 EC               [12]  208 	mov	a,r4
      00007A 4B               [12]  209 	orl	a,r3
      00007B 60 62            [24]  210 	jz	00104$
                                    211 ;	strndup.c:41: memcpy (r, s, l);
      00007D 8C 00            [24]  212 	mov	ar0,r4
      00007F 8B 01            [24]  213 	mov	ar1,r3
      000081 8D 02            [24]  214 	mov	ar2,r5
      000083 88*00            [24]  215 	mov	_strndup_sloc0_1_0,r0
      000085 89*01            [24]  216 	mov	(_strndup_sloc0_1_0 + 1),r1
      000087 8A*02            [24]  217 	mov	(_strndup_sloc0_1_0 + 2),r2
      000089 90r00r02         [24]  218 	mov	dptr,#_strndup_s_65536_64
      00008C E0               [24]  219 	movx	a,@dptr
      00008D F8               [12]  220 	mov	r0,a
      00008E A3               [24]  221 	inc	dptr
      00008F E0               [24]  222 	movx	a,@dptr
      000090 F9               [12]  223 	mov	r1,a
      000091 A3               [24]  224 	inc	dptr
      000092 E0               [24]  225 	movx	a,@dptr
      000093 FA               [12]  226 	mov	r2,a
      000094 90r00r00         [24]  227 	mov	dptr,#___memcpy_PARM_2
      000097 E8               [12]  228 	mov	a,r0
      000098 F0               [24]  229 	movx	@dptr,a
      000099 E9               [12]  230 	mov	a,r1
      00009A A3               [24]  231 	inc	dptr
      00009B F0               [24]  232 	movx	@dptr,a
      00009C EA               [12]  233 	mov	a,r2
      00009D A3               [24]  234 	inc	dptr
      00009E F0               [24]  235 	movx	@dptr,a
      00009F 90r00r00         [24]  236 	mov	dptr,#___memcpy_PARM_3
      0000A2 EE               [12]  237 	mov	a,r6
      0000A3 F0               [24]  238 	movx	@dptr,a
      0000A4 EF               [12]  239 	mov	a,r7
      0000A5 A3               [24]  240 	inc	dptr
      0000A6 F0               [24]  241 	movx	@dptr,a
      0000A7 85*00 82         [24]  242 	mov	dpl,_strndup_sloc0_1_0
      0000AA 85*01 83         [24]  243 	mov	dph,(_strndup_sloc0_1_0 + 1)
      0000AD 85*02 F0         [24]  244 	mov	b,(_strndup_sloc0_1_0 + 2)
      0000B0 C0 07            [24]  245 	push	ar7
      0000B2 C0 06            [24]  246 	push	ar6
      0000B4 C0 05            [24]  247 	push	ar5
      0000B6 C0 04            [24]  248 	push	ar4
      0000B8 C0 03            [24]  249 	push	ar3
      0000BA 78r00            [12]  250 	mov	r0,#___memcpy
      0000BC 79s00            [12]  251 	mov	r1,#(___memcpy >> 8)
      0000BE 7As00            [12]  252 	mov	r2,#(___memcpy >> 16)
      0000C0 12r00r00         [24]  253 	lcall	__sdcc_banked_call
      0000C3 D0 03            [24]  254 	pop	ar3
      0000C5 D0 04            [24]  255 	pop	ar4
      0000C7 D0 05            [24]  256 	pop	ar5
      0000C9 D0 06            [24]  257 	pop	ar6
      0000CB D0 07            [24]  258 	pop	ar7
                                    259 ;	strndup.c:42: r[l] = 0;
      0000CD EE               [12]  260 	mov	a,r6
      0000CE 2C               [12]  261 	add	a,r4
      0000CF FE               [12]  262 	mov	r6,a
      0000D0 EF               [12]  263 	mov	a,r7
      0000D1 3B               [12]  264 	addc	a,r3
      0000D2 FF               [12]  265 	mov	r7,a
      0000D3 8D 02            [24]  266 	mov	ar2,r5
      0000D5 8E 82            [24]  267 	mov	dpl,r6
      0000D7 8F 83            [24]  268 	mov	dph,r7
      0000D9 8A F0            [24]  269 	mov	b,r2
      0000DB E4               [12]  270 	clr	a
      0000DC 12r00r00         [24]  271 	lcall	__gptrput
      0000DF                        272 00104$:
                                    273 ;	strndup.c:44: return (r);
      0000DF 8C 82            [24]  274 	mov	dpl,r4
      0000E1 8B 83            [24]  275 	mov	dph,r3
      0000E3 8D F0            [24]  276 	mov	b,r5
                                    277 ;	strndup.c:45: }
      0000E5 02r00r00         [24]  278 	ljmp	__sdcc_banked_ret
                                    279 	.area CSEG    (CODE)
                                    280 	.area CONST   (CODE)
                                    281 	.area XINIT   (CODE)
                                    282 	.area CABS    (ABS,CODE)
