                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strpbrk
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strpbrk_PARM_2
                                     13 	.globl _strpbrk
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
      000000                         33 _strpbrk_sloc0_1_0:
      000000                         34 	.ds 3
      000003                         35 _strpbrk_sloc1_1_0:
      000003                         36 	.ds 3
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; uninitialized external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
      000000                         61 _strpbrk_PARM_2:
      000000                         62 	.ds 3
      000003                         63 _strpbrk_string_65536_26:
      000003                         64 	.ds 3
      000006                         65 _strpbrk_ret_65536_27:
      000006                         66 	.ds 3
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; initialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function 'strpbrk'
                                    103 ;------------------------------------------------------------
                                    104 ;ch                        Allocated to registers r3 
                                    105 ;sloc0                     Allocated with name '_strpbrk_sloc0_1_0'
                                    106 ;sloc1                     Allocated with name '_strpbrk_sloc1_1_0'
                                    107 ;control                   Allocated with name '_strpbrk_PARM_2'
                                    108 ;string                    Allocated with name '_strpbrk_string_65536_26'
                                    109 ;ret                       Allocated with name '_strpbrk_ret_65536_27'
                                    110 ;p                         Allocated with name '_strpbrk_p_131072_28'
                                    111 ;------------------------------------------------------------
                                    112 ;	_strpbrk.c:31: char * strpbrk ( const char * string, const char * control )
                                    113 ;	-----------------------------------------
                                    114 ;	 function strpbrk
                                    115 ;	-----------------------------------------
      000000                        116 _strpbrk:
                           000007   117 	ar7 = 0x07
                           000006   118 	ar6 = 0x06
                           000005   119 	ar5 = 0x05
                           000004   120 	ar4 = 0x04
                           000003   121 	ar3 = 0x03
                           000002   122 	ar2 = 0x02
                           000001   123 	ar1 = 0x01
                           000000   124 	ar0 = 0x00
      000000 AF F0            [24]  125 	mov	r7,b
      000002 AE 83            [24]  126 	mov	r6,dph
      000004 E5 82            [12]  127 	mov	a,dpl
      000006 90r00r03         [24]  128 	mov	dptr,#_strpbrk_string_65536_26
      000009 F0               [24]  129 	movx	@dptr,a
      00000A EE               [12]  130 	mov	a,r6
      00000B A3               [24]  131 	inc	dptr
      00000C F0               [24]  132 	movx	@dptr,a
      00000D EF               [12]  133 	mov	a,r7
      00000E A3               [24]  134 	inc	dptr
      00000F F0               [24]  135 	movx	@dptr,a
                                    136 ;	_strpbrk.c:33: char *ret = NULL;
      000010 90r00r06         [24]  137 	mov	dptr,#_strpbrk_ret_65536_27
      000013 E4               [12]  138 	clr	a
      000014 F0               [24]  139 	movx	@dptr,a
      000015 A3               [24]  140 	inc	dptr
      000016 F0               [24]  141 	movx	@dptr,a
      000017 A3               [24]  142 	inc	dptr
      000018 F0               [24]  143 	movx	@dptr,a
                                    144 ;	_strpbrk.c:36: while (ch = *control) {
      000019 90r00r00         [24]  145 	mov	dptr,#_strpbrk_PARM_2
      00001C E0               [24]  146 	movx	a,@dptr
      00001D FD               [12]  147 	mov	r5,a
      00001E A3               [24]  148 	inc	dptr
      00001F E0               [24]  149 	movx	a,@dptr
      000020 FE               [12]  150 	mov	r6,a
      000021 A3               [24]  151 	inc	dptr
      000022 E0               [24]  152 	movx	a,@dptr
      000023 FF               [12]  153 	mov	r7,a
      000024                        154 00105$:
      000024 8D 82            [24]  155 	mov	dpl,r5
      000026 8E 83            [24]  156 	mov	dph,r6
      000028 8F F0            [24]  157 	mov	b,r7
      00002A 12r00r00         [24]  158 	lcall	__gptrget
      00002D FC               [12]  159 	mov	r4,a
      00002E FB               [12]  160 	mov	r3,a
      00002F 70 03            [24]  161 	jnz	00127$
      000031 02r00rC8         [24]  162 	ljmp	00107$
      000034                        163 00127$:
                                    164 ;	_strpbrk.c:37: char * p = strchr(string, ch);
      000034 90r00r03         [24]  165 	mov	dptr,#_strpbrk_string_65536_26
      000037 E0               [24]  166 	movx	a,@dptr
      000038 F9               [12]  167 	mov	r1,a
      000039 A3               [24]  168 	inc	dptr
      00003A E0               [24]  169 	movx	a,@dptr
      00003B FA               [12]  170 	mov	r2,a
      00003C A3               [24]  171 	inc	dptr
      00003D E0               [24]  172 	movx	a,@dptr
      00003E FC               [12]  173 	mov	r4,a
      00003F 90r00r00         [24]  174 	mov	dptr,#_strchr_PARM_2
      000042 EB               [12]  175 	mov	a,r3
      000043 F0               [24]  176 	movx	@dptr,a
      000044 89 82            [24]  177 	mov	dpl,r1
      000046 8A 83            [24]  178 	mov	dph,r2
      000048 8C F0            [24]  179 	mov	b,r4
      00004A C0 07            [24]  180 	push	ar7
      00004C C0 06            [24]  181 	push	ar6
      00004E C0 05            [24]  182 	push	ar5
      000050 78r00            [12]  183 	mov	r0,#_strchr
      000052 79s00            [12]  184 	mov	r1,#(_strchr >> 8)
      000054 7As00            [12]  185 	mov	r2,#(_strchr >> 16)
      000056 12r00r00         [24]  186 	lcall	__sdcc_banked_call
      000059 AA 82            [24]  187 	mov	r2,dpl
      00005B AB 83            [24]  188 	mov	r3,dph
      00005D AC F0            [24]  189 	mov	r4,b
      00005F D0 05            [24]  190 	pop	ar5
      000061 D0 06            [24]  191 	pop	ar6
      000063 D0 07            [24]  192 	pop	ar7
                                    193 ;	_strpbrk.c:38: if (p != NULL && (ret == NULL || p < ret)) {
      000065 EA               [12]  194 	mov	a,r2
      000066 4B               [12]  195 	orl	a,r3
      000067 60 57            [24]  196 	jz	00102$
      000069 90r00r06         [24]  197 	mov	dptr,#_strpbrk_ret_65536_27
      00006C E0               [24]  198 	movx	a,@dptr
      00006D F5*00            [12]  199 	mov	_strpbrk_sloc0_1_0,a
      00006F A3               [24]  200 	inc	dptr
      000070 E0               [24]  201 	movx	a,@dptr
      000071 F5*01            [12]  202 	mov	(_strpbrk_sloc0_1_0 + 1),a
      000073 A3               [24]  203 	inc	dptr
      000074 E0               [24]  204 	movx	a,@dptr
      000075 F5*02            [12]  205 	mov	(_strpbrk_sloc0_1_0 + 2),a
      000077 90r00r06         [24]  206 	mov	dptr,#_strpbrk_ret_65536_27
      00007A E0               [24]  207 	movx	a,@dptr
      00007B F5 F0            [12]  208 	mov	b,a
      00007D A3               [24]  209 	inc	dptr
      00007E E0               [24]  210 	movx	a,@dptr
      00007F 45 F0            [12]  211 	orl	a,b
      000081 60 32            [24]  212 	jz	00101$
      000083 C0 05            [24]  213 	push	ar5
      000085 C0 06            [24]  214 	push	ar6
      000087 C0 07            [24]  215 	push	ar7
      000089 8A*03            [24]  216 	mov	_strpbrk_sloc1_1_0,r2
      00008B 8B*04            [24]  217 	mov	(_strpbrk_sloc1_1_0 + 1),r3
      00008D 8C*05            [24]  218 	mov	(_strpbrk_sloc1_1_0 + 2),r4
      00008F AD*00            [24]  219 	mov	r5,_strpbrk_sloc0_1_0
      000091 AE*01            [24]  220 	mov	r6,(_strpbrk_sloc0_1_0 + 1)
      000093 AF*02            [24]  221 	mov	r7,(_strpbrk_sloc0_1_0 + 2)
      000095 C0 05            [24]  222 	push	ar5
      000097 C0 06            [24]  223 	push	ar6
      000099 C0 07            [24]  224 	push	ar7
      00009B 85*03 82         [24]  225 	mov	dpl,_strpbrk_sloc1_1_0
      00009E 85*04 83         [24]  226 	mov	dph,(_strpbrk_sloc1_1_0 + 1)
      0000A1 85*05 F0         [24]  227 	mov	b,(_strpbrk_sloc1_1_0 + 2)
      0000A4 12r00r00         [24]  228 	lcall	___gptr_cmp
      0000A7 15 81            [12]  229 	dec	sp
      0000A9 15 81            [12]  230 	dec	sp
      0000AB 15 81            [12]  231 	dec	sp
      0000AD D0 07            [24]  232 	pop	ar7
      0000AF D0 06            [24]  233 	pop	ar6
      0000B1 D0 05            [24]  234 	pop	ar5
      0000B3 50 0B            [24]  235 	jnc	00102$
      0000B5                        236 00101$:
                                    237 ;	_strpbrk.c:39: ret = p;
      0000B5 90r00r06         [24]  238 	mov	dptr,#_strpbrk_ret_65536_27
      0000B8 EA               [12]  239 	mov	a,r2
      0000B9 F0               [24]  240 	movx	@dptr,a
      0000BA EB               [12]  241 	mov	a,r3
      0000BB A3               [24]  242 	inc	dptr
      0000BC F0               [24]  243 	movx	@dptr,a
      0000BD EC               [12]  244 	mov	a,r4
      0000BE A3               [24]  245 	inc	dptr
      0000BF F0               [24]  246 	movx	@dptr,a
      0000C0                        247 00102$:
                                    248 ;	_strpbrk.c:41: control++;
      0000C0 0D               [12]  249 	inc	r5
      0000C1 BD 00 01         [24]  250 	cjne	r5,#0x00,00131$
      0000C4 0E               [12]  251 	inc	r6
      0000C5                        252 00131$:
      0000C5 02r00r24         [24]  253 	ljmp	00105$
      0000C8                        254 00107$:
                                    255 ;	_strpbrk.c:44: return (ret);
      0000C8 90r00r06         [24]  256 	mov	dptr,#_strpbrk_ret_65536_27
      0000CB E0               [24]  257 	movx	a,@dptr
      0000CC FD               [12]  258 	mov	r5,a
      0000CD A3               [24]  259 	inc	dptr
      0000CE E0               [24]  260 	movx	a,@dptr
      0000CF FE               [12]  261 	mov	r6,a
      0000D0 A3               [24]  262 	inc	dptr
      0000D1 E0               [24]  263 	movx	a,@dptr
      0000D2 FF               [12]  264 	mov	r7,a
      0000D3 8D 82            [24]  265 	mov	dpl,r5
      0000D5 8E 83            [24]  266 	mov	dph,r6
      0000D7 8F F0            [24]  267 	mov	b,r7
                                    268 ;	_strpbrk.c:45: }
      0000D9 02r00r00         [24]  269 	ljmp	__sdcc_banked_ret
                                    270 	.area CSEG    (CODE)
                                    271 	.area CONST   (CODE)
                                    272 	.area XINIT   (CODE)
                                    273 	.area CABS    (ABS,CODE)
