                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tanhf
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _expf
                                     13 	.globl _tanhf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; uninitialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; initialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'tanhf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;f                         Allocated to stack - _bp +9
                                     96 ;g                         Allocated to stack - _bp +13
                                     97 ;r                         Allocated to registers r7 r6 r5 r4 
                                     98 ;sloc0                     Allocated to stack - _bp +17
                                     99 ;sloc1                     Allocated to stack - _bp +5
                                    100 ;------------------------------------------------------------
                                    101 ;	tanhf.c:50: float tanhf(float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function tanhf
                                    104 ;	-----------------------------------------
      000000                        105 _tanhf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C0 82            [24]  116 	push	dpl
      000007 C0 83            [24]  117 	push	dph
      000009 C0 F0            [24]  118 	push	b
      00000B C0 E0            [24]  119 	push	acc
      00000D E5 81            [12]  120 	mov	a,sp
      00000F 24 0C            [12]  121 	add	a,#0x0c
      000011 F5 81            [12]  122 	mov	sp,a
                                    123 ;	tanhf.c:54: f=fabsf(x);
      000013 A8*00            [24]  124 	mov	r0,_bp
      000015 08               [12]  125 	inc	r0
      000016 86 82            [24]  126 	mov	dpl,@r0
      000018 08               [12]  127 	inc	r0
      000019 86 83            [24]  128 	mov	dph,@r0
      00001B 08               [12]  129 	inc	r0
      00001C 86 F0            [24]  130 	mov	b,@r0
      00001E 08               [12]  131 	inc	r0
      00001F E6               [12]  132 	mov	a,@r0
      000020 78r00            [12]  133 	mov	r0,#_fabsf
      000022 79s00            [12]  134 	mov	r1,#(_fabsf >> 8)
      000024 7As00            [12]  135 	mov	r2,#(_fabsf >> 16)
      000026 12r00r00         [24]  136 	lcall	__sdcc_banked_call
      000029 AC 82            [24]  137 	mov	r4,dpl
      00002B AD 83            [24]  138 	mov	r5,dph
      00002D AE F0            [24]  139 	mov	r6,b
      00002F FF               [12]  140 	mov	r7,a
      000030 E5*00            [12]  141 	mov	a,_bp
      000032 24 09            [12]  142 	add	a,#0x09
      000034 F8               [12]  143 	mov	r0,a
      000035 A6 04            [24]  144 	mov	@r0,ar4
      000037 08               [12]  145 	inc	r0
      000038 A6 05            [24]  146 	mov	@r0,ar5
      00003A 08               [12]  147 	inc	r0
      00003B A6 06            [24]  148 	mov	@r0,ar6
      00003D 08               [12]  149 	inc	r0
      00003E A6 07            [24]  150 	mov	@r0,ar7
                                    151 ;	tanhf.c:55: if(f>SBIG) r=1.0;
      000040 E5*00            [12]  152 	mov	a,_bp
      000042 24 09            [12]  153 	add	a,#0x09
      000044 F8               [12]  154 	mov	r0,a
      000045 E6               [12]  155 	mov	a,@r0
      000046 C0 E0            [24]  156 	push	acc
      000048 08               [12]  157 	inc	r0
      000049 E6               [12]  158 	mov	a,@r0
      00004A C0 E0            [24]  159 	push	acc
      00004C 08               [12]  160 	inc	r0
      00004D E6               [12]  161 	mov	a,@r0
      00004E C0 E0            [24]  162 	push	acc
      000050 08               [12]  163 	inc	r0
      000051 E6               [12]  164 	mov	a,@r0
      000052 C0 E0            [24]  165 	push	acc
      000054 90 2C B0         [24]  166 	mov	dptr,#0x2cb0
      000057 75 F0 10         [24]  167 	mov	b,#0x10
      00005A 74 41            [12]  168 	mov	a,#0x41
      00005C 12r00r00         [24]  169 	lcall	___fslt
      00005F AD 82            [24]  170 	mov	r5,dpl
      000061 E5 81            [12]  171 	mov	a,sp
      000063 24 FC            [12]  172 	add	a,#0xfc
      000065 F5 81            [12]  173 	mov	sp,a
      000067 ED               [12]  174 	mov	a,r5
      000068 60 0B            [24]  175 	jz	00108$
      00006A 7E 00            [12]  176 	mov	r6,#0x00
      00006C 7D 00            [12]  177 	mov	r5,#0x00
      00006E 7C 80            [12]  178 	mov	r4,#0x80
      000070 7B 3F            [12]  179 	mov	r3,#0x3f
      000072 02r03r1D         [24]  180 	ljmp	00109$
      000075                        181 00108$:
                                    182 ;	tanhf.c:56: else if(f>K1)
      000075 E5*00            [12]  183 	mov	a,_bp
      000077 24 09            [12]  184 	add	a,#0x09
      000079 F8               [12]  185 	mov	r0,a
      00007A E6               [12]  186 	mov	a,@r0
      00007B C0 E0            [24]  187 	push	acc
      00007D 08               [12]  188 	inc	r0
      00007E E6               [12]  189 	mov	a,@r0
      00007F C0 E0            [24]  190 	push	acc
      000081 08               [12]  191 	inc	r0
      000082 E6               [12]  192 	mov	a,@r0
      000083 C0 E0            [24]  193 	push	acc
      000085 08               [12]  194 	inc	r0
      000086 E6               [12]  195 	mov	a,@r0
      000087 C0 E0            [24]  196 	push	acc
      000089 90 9F 54         [24]  197 	mov	dptr,#0x9f54
      00008C 75 F0 0C         [24]  198 	mov	b,#0x0c
      00008F 74 3F            [12]  199 	mov	a,#0x3f
      000091 12r00r00         [24]  200 	lcall	___fslt
      000094 AD 82            [24]  201 	mov	r5,dpl
      000096 E5 81            [12]  202 	mov	a,sp
      000098 24 FC            [12]  203 	add	a,#0xfc
      00009A F5 81            [12]  204 	mov	sp,a
      00009C ED               [12]  205 	mov	a,r5
      00009D 70 03            [24]  206 	jnz	00135$
      00009F 02r01r72         [24]  207 	ljmp	00105$
      0000A2                        208 00135$:
                                    209 ;	tanhf.c:58: r=0.5-1.0/(expf(f+f)+1.0);
      0000A2 E5*00            [12]  210 	mov	a,_bp
      0000A4 24 09            [12]  211 	add	a,#0x09
      0000A6 F8               [12]  212 	mov	r0,a
      0000A7 E6               [12]  213 	mov	a,@r0
      0000A8 C0 E0            [24]  214 	push	acc
      0000AA 08               [12]  215 	inc	r0
      0000AB E6               [12]  216 	mov	a,@r0
      0000AC C0 E0            [24]  217 	push	acc
      0000AE 08               [12]  218 	inc	r0
      0000AF E6               [12]  219 	mov	a,@r0
      0000B0 C0 E0            [24]  220 	push	acc
      0000B2 08               [12]  221 	inc	r0
      0000B3 E6               [12]  222 	mov	a,@r0
      0000B4 C0 E0            [24]  223 	push	acc
      0000B6 E5*00            [12]  224 	mov	a,_bp
      0000B8 24 09            [12]  225 	add	a,#0x09
      0000BA F8               [12]  226 	mov	r0,a
      0000BB 86 82            [24]  227 	mov	dpl,@r0
      0000BD 08               [12]  228 	inc	r0
      0000BE 86 83            [24]  229 	mov	dph,@r0
      0000C0 08               [12]  230 	inc	r0
      0000C1 86 F0            [24]  231 	mov	b,@r0
      0000C3 08               [12]  232 	inc	r0
      0000C4 E6               [12]  233 	mov	a,@r0
      0000C5 12r00r00         [24]  234 	lcall	___fsadd
      0000C8 AF 82            [24]  235 	mov	r7,dpl
      0000CA AE 83            [24]  236 	mov	r6,dph
      0000CC AD F0            [24]  237 	mov	r5,b
      0000CE FC               [12]  238 	mov	r4,a
      0000CF E5 81            [12]  239 	mov	a,sp
      0000D1 24 FC            [12]  240 	add	a,#0xfc
      0000D3 F5 81            [12]  241 	mov	sp,a
      0000D5 8F 82            [24]  242 	mov	dpl,r7
      0000D7 8E 83            [24]  243 	mov	dph,r6
      0000D9 8D F0            [24]  244 	mov	b,r5
      0000DB EC               [12]  245 	mov	a,r4
      0000DC 78r00            [12]  246 	mov	r0,#_expf
      0000DE 79s00            [12]  247 	mov	r1,#(_expf >> 8)
      0000E0 7As00            [12]  248 	mov	r2,#(_expf >> 16)
      0000E2 12r00r00         [24]  249 	lcall	__sdcc_banked_call
      0000E5 AF 82            [24]  250 	mov	r7,dpl
      0000E7 AE 83            [24]  251 	mov	r6,dph
      0000E9 AD F0            [24]  252 	mov	r5,b
      0000EB FC               [12]  253 	mov	r4,a
      0000EC E4               [12]  254 	clr	a
      0000ED C0 E0            [24]  255 	push	acc
      0000EF C0 E0            [24]  256 	push	acc
      0000F1 74 80            [12]  257 	mov	a,#0x80
      0000F3 C0 E0            [24]  258 	push	acc
      0000F5 74 3F            [12]  259 	mov	a,#0x3f
      0000F7 C0 E0            [24]  260 	push	acc
      0000F9 8F 82            [24]  261 	mov	dpl,r7
      0000FB 8E 83            [24]  262 	mov	dph,r6
      0000FD 8D F0            [24]  263 	mov	b,r5
      0000FF EC               [12]  264 	mov	a,r4
      000100 12r00r00         [24]  265 	lcall	___fsadd
      000103 AF 82            [24]  266 	mov	r7,dpl
      000105 AE 83            [24]  267 	mov	r6,dph
      000107 AD F0            [24]  268 	mov	r5,b
      000109 FC               [12]  269 	mov	r4,a
      00010A E5 81            [12]  270 	mov	a,sp
      00010C 24 FC            [12]  271 	add	a,#0xfc
      00010E F5 81            [12]  272 	mov	sp,a
      000110 C0 07            [24]  273 	push	ar7
      000112 C0 06            [24]  274 	push	ar6
      000114 C0 05            [24]  275 	push	ar5
      000116 C0 04            [24]  276 	push	ar4
      000118 90 00 00         [24]  277 	mov	dptr,#0x0000
      00011B 75 F0 80         [24]  278 	mov	b,#0x80
      00011E 74 3F            [12]  279 	mov	a,#0x3f
      000120 12r00r00         [24]  280 	lcall	___fsdiv
      000123 AF 82            [24]  281 	mov	r7,dpl
      000125 AE 83            [24]  282 	mov	r6,dph
      000127 AD F0            [24]  283 	mov	r5,b
      000129 FC               [12]  284 	mov	r4,a
      00012A E5 81            [12]  285 	mov	a,sp
      00012C 24 FC            [12]  286 	add	a,#0xfc
      00012E F5 81            [12]  287 	mov	sp,a
      000130 C0 07            [24]  288 	push	ar7
      000132 C0 06            [24]  289 	push	ar6
      000134 C0 05            [24]  290 	push	ar5
      000136 C0 04            [24]  291 	push	ar4
      000138 90 00 00         [24]  292 	mov	dptr,#(0x00&0x00ff)
      00013B E4               [12]  293 	clr	a
      00013C F5 F0            [12]  294 	mov	b,a
      00013E 74 3F            [12]  295 	mov	a,#0x3f
      000140 12r00r00         [24]  296 	lcall	___fssub
      000143 AF 82            [24]  297 	mov	r7,dpl
      000145 AE 83            [24]  298 	mov	r6,dph
      000147 AD F0            [24]  299 	mov	r5,b
      000149 FC               [12]  300 	mov	r4,a
      00014A E5 81            [12]  301 	mov	a,sp
      00014C 24 FC            [12]  302 	add	a,#0xfc
      00014E F5 81            [12]  303 	mov	sp,a
                                    304 ;	tanhf.c:59: r+=r;
      000150 C0 07            [24]  305 	push	ar7
      000152 C0 06            [24]  306 	push	ar6
      000154 C0 05            [24]  307 	push	ar5
      000156 C0 04            [24]  308 	push	ar4
      000158 8F 82            [24]  309 	mov	dpl,r7
      00015A 8E 83            [24]  310 	mov	dph,r6
      00015C 8D F0            [24]  311 	mov	b,r5
      00015E EC               [12]  312 	mov	a,r4
      00015F 12r00r00         [24]  313 	lcall	___fsadd
      000162 AE 82            [24]  314 	mov	r6,dpl
      000164 AD 83            [24]  315 	mov	r5,dph
      000166 AC F0            [24]  316 	mov	r4,b
      000168 FB               [12]  317 	mov	r3,a
      000169 E5 81            [12]  318 	mov	a,sp
      00016B 24 FC            [12]  319 	add	a,#0xfc
      00016D F5 81            [12]  320 	mov	sp,a
      00016F 02r03r1D         [24]  321 	ljmp	00109$
      000172                        322 00105$:
                                    323 ;	tanhf.c:61: else if(f<EPS) r=f;
      000172 E4               [12]  324 	clr	a
      000173 C0 E0            [24]  325 	push	acc
      000175 C0 E0            [24]  326 	push	acc
      000177 74 80            [12]  327 	mov	a,#0x80
      000179 C0 E0            [24]  328 	push	acc
      00017B 74 39            [12]  329 	mov	a,#0x39
      00017D C0 E0            [24]  330 	push	acc
      00017F E5*00            [12]  331 	mov	a,_bp
      000181 24 09            [12]  332 	add	a,#0x09
      000183 F8               [12]  333 	mov	r0,a
      000184 86 82            [24]  334 	mov	dpl,@r0
      000186 08               [12]  335 	inc	r0
      000187 86 83            [24]  336 	mov	dph,@r0
      000189 08               [12]  337 	inc	r0
      00018A 86 F0            [24]  338 	mov	b,@r0
      00018C 08               [12]  339 	inc	r0
      00018D E6               [12]  340 	mov	a,@r0
      00018E 12r00r00         [24]  341 	lcall	___fslt
      000191 AD 82            [24]  342 	mov	r5,dpl
      000193 E5 81            [12]  343 	mov	a,sp
      000195 24 FC            [12]  344 	add	a,#0xfc
      000197 F5 81            [12]  345 	mov	sp,a
      000199 ED               [12]  346 	mov	a,r5
      00019A 60 13            [24]  347 	jz	00102$
      00019C E5*00            [12]  348 	mov	a,_bp
      00019E 24 09            [12]  349 	add	a,#0x09
      0001A0 F8               [12]  350 	mov	r0,a
      0001A1 86 06            [24]  351 	mov	ar6,@r0
      0001A3 08               [12]  352 	inc	r0
      0001A4 86 05            [24]  353 	mov	ar5,@r0
      0001A6 08               [12]  354 	inc	r0
      0001A7 86 04            [24]  355 	mov	ar4,@r0
      0001A9 08               [12]  356 	inc	r0
      0001AA 86 03            [24]  357 	mov	ar3,@r0
      0001AC 02r03r1D         [24]  358 	ljmp	00109$
      0001AF                        359 00102$:
                                    360 ;	tanhf.c:64: g=f*f;
      0001AF E5*00            [12]  361 	mov	a,_bp
      0001B1 24 09            [12]  362 	add	a,#0x09
      0001B3 F8               [12]  363 	mov	r0,a
      0001B4 E6               [12]  364 	mov	a,@r0
      0001B5 C0 E0            [24]  365 	push	acc
      0001B7 08               [12]  366 	inc	r0
      0001B8 E6               [12]  367 	mov	a,@r0
      0001B9 C0 E0            [24]  368 	push	acc
      0001BB 08               [12]  369 	inc	r0
      0001BC E6               [12]  370 	mov	a,@r0
      0001BD C0 E0            [24]  371 	push	acc
      0001BF 08               [12]  372 	inc	r0
      0001C0 E6               [12]  373 	mov	a,@r0
      0001C1 C0 E0            [24]  374 	push	acc
      0001C3 E5*00            [12]  375 	mov	a,_bp
      0001C5 24 09            [12]  376 	add	a,#0x09
      0001C7 F8               [12]  377 	mov	r0,a
      0001C8 86 82            [24]  378 	mov	dpl,@r0
      0001CA 08               [12]  379 	inc	r0
      0001CB 86 83            [24]  380 	mov	dph,@r0
      0001CD 08               [12]  381 	inc	r0
      0001CE 86 F0            [24]  382 	mov	b,@r0
      0001D0 08               [12]  383 	inc	r0
      0001D1 E6               [12]  384 	mov	a,@r0
      0001D2 12r00r00         [24]  385 	lcall	___fsmul
      0001D5 AF 82            [24]  386 	mov	r7,dpl
      0001D7 AE 83            [24]  387 	mov	r6,dph
      0001D9 AD F0            [24]  388 	mov	r5,b
      0001DB FC               [12]  389 	mov	r4,a
      0001DC E5 81            [12]  390 	mov	a,sp
      0001DE 24 FC            [12]  391 	add	a,#0xfc
      0001E0 F5 81            [12]  392 	mov	sp,a
      0001E2 E5*00            [12]  393 	mov	a,_bp
      0001E4 24 0D            [12]  394 	add	a,#0x0d
      0001E6 F8               [12]  395 	mov	r0,a
      0001E7 A6 07            [24]  396 	mov	@r0,ar7
      0001E9 08               [12]  397 	inc	r0
      0001EA A6 06            [24]  398 	mov	@r0,ar6
      0001EC 08               [12]  399 	inc	r0
      0001ED A6 05            [24]  400 	mov	@r0,ar5
      0001EF 08               [12]  401 	inc	r0
      0001F0 A6 04            [24]  402 	mov	@r0,ar4
                                    403 ;	tanhf.c:65: r=f+f*(P(g)/Q(g));
      0001F2 E5*00            [12]  404 	mov	a,_bp
      0001F4 24 0D            [12]  405 	add	a,#0x0d
      0001F6 F8               [12]  406 	mov	r0,a
      0001F7 E6               [12]  407 	mov	a,@r0
      0001F8 C0 E0            [24]  408 	push	acc
      0001FA 08               [12]  409 	inc	r0
      0001FB E6               [12]  410 	mov	a,@r0
      0001FC C0 E0            [24]  411 	push	acc
      0001FE 08               [12]  412 	inc	r0
      0001FF E6               [12]  413 	mov	a,@r0
      000200 C0 E0            [24]  414 	push	acc
      000202 08               [12]  415 	inc	r0
      000203 E6               [12]  416 	mov	a,@r0
      000204 C0 E0            [24]  417 	push	acc
      000206 90 11 B2         [24]  418 	mov	dptr,#0x11b2
      000209 75 F0 7B         [24]  419 	mov	b,#0x7b
      00020C 74 BB            [12]  420 	mov	a,#0xbb
      00020E 12r00r00         [24]  421 	lcall	___fsmul
      000211 AC 82            [24]  422 	mov	r4,dpl
      000213 AD 83            [24]  423 	mov	r5,dph
      000215 AE F0            [24]  424 	mov	r6,b
      000217 FF               [12]  425 	mov	r7,a
      000218 E5 81            [12]  426 	mov	a,sp
      00021A 24 FC            [12]  427 	add	a,#0xfc
      00021C F5 81            [12]  428 	mov	sp,a
      00021E 74 C6            [12]  429 	mov	a,#0xc6
      000220 C0 E0            [24]  430 	push	acc
      000222 74 E2            [12]  431 	mov	a,#0xe2
      000224 C0 E0            [24]  432 	push	acc
      000226 74 52            [12]  433 	mov	a,#0x52
      000228 C0 E0            [24]  434 	push	acc
      00022A 74 BF            [12]  435 	mov	a,#0xbf
      00022C C0 E0            [24]  436 	push	acc
      00022E 8C 82            [24]  437 	mov	dpl,r4
      000230 8D 83            [24]  438 	mov	dph,r5
      000232 8E F0            [24]  439 	mov	b,r6
      000234 EF               [12]  440 	mov	a,r7
      000235 12r00r00         [24]  441 	lcall	___fsadd
      000238 AC 82            [24]  442 	mov	r4,dpl
      00023A AD 83            [24]  443 	mov	r5,dph
      00023C AE F0            [24]  444 	mov	r6,b
      00023E FF               [12]  445 	mov	r7,a
      00023F E5 81            [12]  446 	mov	a,sp
      000241 24 FC            [12]  447 	add	a,#0xfc
      000243 F5 81            [12]  448 	mov	sp,a
      000245 E5*00            [12]  449 	mov	a,_bp
      000247 24 0D            [12]  450 	add	a,#0x0d
      000249 F8               [12]  451 	mov	r0,a
      00024A E6               [12]  452 	mov	a,@r0
      00024B C0 E0            [24]  453 	push	acc
      00024D 08               [12]  454 	inc	r0
      00024E E6               [12]  455 	mov	a,@r0
      00024F C0 E0            [24]  456 	push	acc
      000251 08               [12]  457 	inc	r0
      000252 E6               [12]  458 	mov	a,@r0
      000253 C0 E0            [24]  459 	push	acc
      000255 08               [12]  460 	inc	r0
      000256 E6               [12]  461 	mov	a,@r0
      000257 C0 E0            [24]  462 	push	acc
      000259 8C 82            [24]  463 	mov	dpl,r4
      00025B 8D 83            [24]  464 	mov	dph,r5
      00025D 8E F0            [24]  465 	mov	b,r6
      00025F EF               [12]  466 	mov	a,r7
      000260 12r00r00         [24]  467 	lcall	___fsmul
      000263 C8               [12]  468 	xch	a,r0
      000264 E5*00            [12]  469 	mov	a,_bp
      000266 24 05            [12]  470 	add	a,#0x05
      000268 C8               [12]  471 	xch	a,r0
      000269 A6 82            [24]  472 	mov	@r0,dpl
      00026B 08               [12]  473 	inc	r0
      00026C A6 83            [24]  474 	mov	@r0,dph
      00026E 08               [12]  475 	inc	r0
      00026F A6 F0            [24]  476 	mov	@r0,b
      000271 08               [12]  477 	inc	r0
      000272 F6               [12]  478 	mov	@r0,a
      000273 E5 81            [12]  479 	mov	a,sp
      000275 24 FC            [12]  480 	add	a,#0xfc
      000277 F5 81            [12]  481 	mov	sp,a
      000279 74 1A            [12]  482 	mov	a,#0x1a
      00027B C0 E0            [24]  483 	push	acc
      00027D 74 2A            [12]  484 	mov	a,#0x2a
      00027F C0 E0            [24]  485 	push	acc
      000281 74 1E            [12]  486 	mov	a,#0x1e
      000283 C0 E0            [24]  487 	push	acc
      000285 74 40            [12]  488 	mov	a,#0x40
      000287 C0 E0            [24]  489 	push	acc
      000289 E5*00            [12]  490 	mov	a,_bp
      00028B 24 0D            [12]  491 	add	a,#0x0d
      00028D F8               [12]  492 	mov	r0,a
      00028E 86 82            [24]  493 	mov	dpl,@r0
      000290 08               [12]  494 	inc	r0
      000291 86 83            [24]  495 	mov	dph,@r0
      000293 08               [12]  496 	inc	r0
      000294 86 F0            [24]  497 	mov	b,@r0
      000296 08               [12]  498 	inc	r0
      000297 E6               [12]  499 	mov	a,@r0
      000298 12r00r00         [24]  500 	lcall	___fsadd
      00029B AA 82            [24]  501 	mov	r2,dpl
      00029D AB 83            [24]  502 	mov	r3,dph
      00029F AE F0            [24]  503 	mov	r6,b
      0002A1 FF               [12]  504 	mov	r7,a
      0002A2 E5 81            [12]  505 	mov	a,sp
      0002A4 24 FC            [12]  506 	add	a,#0xfc
      0002A6 F5 81            [12]  507 	mov	sp,a
      0002A8 C0 02            [24]  508 	push	ar2
      0002AA C0 03            [24]  509 	push	ar3
      0002AC C0 06            [24]  510 	push	ar6
      0002AE C0 07            [24]  511 	push	ar7
      0002B0 E5*00            [12]  512 	mov	a,_bp
      0002B2 24 05            [12]  513 	add	a,#0x05
      0002B4 F8               [12]  514 	mov	r0,a
      0002B5 86 82            [24]  515 	mov	dpl,@r0
      0002B7 08               [12]  516 	inc	r0
      0002B8 86 83            [24]  517 	mov	dph,@r0
      0002BA 08               [12]  518 	inc	r0
      0002BB 86 F0            [24]  519 	mov	b,@r0
      0002BD 08               [12]  520 	inc	r0
      0002BE E6               [12]  521 	mov	a,@r0
      0002BF 12r00r00         [24]  522 	lcall	___fsdiv
      0002C2 AC 82            [24]  523 	mov	r4,dpl
      0002C4 AD 83            [24]  524 	mov	r5,dph
      0002C6 AE F0            [24]  525 	mov	r6,b
      0002C8 FF               [12]  526 	mov	r7,a
      0002C9 E5 81            [12]  527 	mov	a,sp
      0002CB 24 FC            [12]  528 	add	a,#0xfc
      0002CD F5 81            [12]  529 	mov	sp,a
      0002CF C0 04            [24]  530 	push	ar4
      0002D1 C0 05            [24]  531 	push	ar5
      0002D3 C0 06            [24]  532 	push	ar6
      0002D5 C0 07            [24]  533 	push	ar7
      0002D7 E5*00            [12]  534 	mov	a,_bp
      0002D9 24 09            [12]  535 	add	a,#0x09
      0002DB F8               [12]  536 	mov	r0,a
      0002DC 86 82            [24]  537 	mov	dpl,@r0
      0002DE 08               [12]  538 	inc	r0
      0002DF 86 83            [24]  539 	mov	dph,@r0
      0002E1 08               [12]  540 	inc	r0
      0002E2 86 F0            [24]  541 	mov	b,@r0
      0002E4 08               [12]  542 	inc	r0
      0002E5 E6               [12]  543 	mov	a,@r0
      0002E6 12r00r00         [24]  544 	lcall	___fsmul
      0002E9 AC 82            [24]  545 	mov	r4,dpl
      0002EB AD 83            [24]  546 	mov	r5,dph
      0002ED AE F0            [24]  547 	mov	r6,b
      0002EF FF               [12]  548 	mov	r7,a
      0002F0 E5 81            [12]  549 	mov	a,sp
      0002F2 24 FC            [12]  550 	add	a,#0xfc
      0002F4 F5 81            [12]  551 	mov	sp,a
      0002F6 C0 04            [24]  552 	push	ar4
      0002F8 C0 05            [24]  553 	push	ar5
      0002FA C0 06            [24]  554 	push	ar6
      0002FC C0 07            [24]  555 	push	ar7
      0002FE E5*00            [12]  556 	mov	a,_bp
      000300 24 09            [12]  557 	add	a,#0x09
      000302 F8               [12]  558 	mov	r0,a
      000303 86 82            [24]  559 	mov	dpl,@r0
      000305 08               [12]  560 	inc	r0
      000306 86 83            [24]  561 	mov	dph,@r0
      000308 08               [12]  562 	inc	r0
      000309 86 F0            [24]  563 	mov	b,@r0
      00030B 08               [12]  564 	inc	r0
      00030C E6               [12]  565 	mov	a,@r0
      00030D 12r00r00         [24]  566 	lcall	___fsadd
      000310 AE 82            [24]  567 	mov	r6,dpl
      000312 AD 83            [24]  568 	mov	r5,dph
      000314 AC F0            [24]  569 	mov	r4,b
      000316 FB               [12]  570 	mov	r3,a
      000317 E5 81            [12]  571 	mov	a,sp
      000319 24 FC            [12]  572 	add	a,#0xfc
      00031B F5 81            [12]  573 	mov	sp,a
      00031D                        574 00109$:
                                    575 ;	tanhf.c:67: if(x<0.0) r=-r;
      00031D C0 06            [24]  576 	push	ar6
      00031F C0 05            [24]  577 	push	ar5
      000321 C0 04            [24]  578 	push	ar4
      000323 C0 03            [24]  579 	push	ar3
      000325 E4               [12]  580 	clr	a
      000326 C0 E0            [24]  581 	push	acc
      000328 C0 E0            [24]  582 	push	acc
      00032A C0 E0            [24]  583 	push	acc
      00032C C0 E0            [24]  584 	push	acc
      00032E A8*00            [24]  585 	mov	r0,_bp
      000330 08               [12]  586 	inc	r0
      000331 86 82            [24]  587 	mov	dpl,@r0
      000333 08               [12]  588 	inc	r0
      000334 86 83            [24]  589 	mov	dph,@r0
      000336 08               [12]  590 	inc	r0
      000337 86 F0            [24]  591 	mov	b,@r0
      000339 08               [12]  592 	inc	r0
      00033A E6               [12]  593 	mov	a,@r0
      00033B 12r00r00         [24]  594 	lcall	___fslt
      00033E AF 82            [24]  595 	mov	r7,dpl
      000340 E5 81            [12]  596 	mov	a,sp
      000342 24 FC            [12]  597 	add	a,#0xfc
      000344 F5 81            [12]  598 	mov	sp,a
      000346 D0 03            [24]  599 	pop	ar3
      000348 D0 04            [24]  600 	pop	ar4
      00034A D0 05            [24]  601 	pop	ar5
      00034C D0 06            [24]  602 	pop	ar6
      00034E EF               [12]  603 	mov	a,r7
      00034F 60 04            [24]  604 	jz	00111$
      000351 EB               [12]  605 	mov	a,r3
      000352 B2 E7            [12]  606 	cpl	acc.7
      000354 FB               [12]  607 	mov	r3,a
      000355                        608 00111$:
                                    609 ;	tanhf.c:68: return r;
      000355 8E 82            [24]  610 	mov	dpl,r6
      000357 8D 83            [24]  611 	mov	dph,r5
      000359 8C F0            [24]  612 	mov	b,r4
      00035B EB               [12]  613 	mov	a,r3
                                    614 ;	tanhf.c:69: }
      00035C 85*00 81         [24]  615 	mov	sp,_bp
      00035F D0*00            [24]  616 	pop	_bp
      000361 02r00r00         [24]  617 	ljmp	__sdcc_banked_ret
                                    618 	.area CSEG    (CODE)
                                    619 	.area CONST   (CODE)
                                    620 	.area XINIT   (CODE)
                                    621 	.area CABS    (ABS,CODE)
