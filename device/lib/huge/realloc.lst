                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module realloc
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___sdcc_heap_init
                                     12 	.globl ___memcpy
                                     13 	.globl _memmove
                                     14 	.globl _free
                                     15 	.globl _malloc
                                     16 	.globl _realloc_PARM_2
                                     17 	.globl _realloc
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; special function bits
                                     25 ;--------------------------------------------------------
                                     26 	.area RSEG    (ABS,DATA)
      000000                         27 	.org 0x0000
                                     28 ;--------------------------------------------------------
                                     29 ; overlayable register banks
                                     30 ;--------------------------------------------------------
                                     31 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         32 	.ds 8
                                     33 ;--------------------------------------------------------
                                     34 ; internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area DSEG    (DATA)
      000000                         37 _realloc_sloc0_1_0:
      000000                         38 	.ds 2
      000002                         39 _realloc_sloc1_1_0:
      000002                         40 	.ds 2
      000004                         41 _realloc_sloc2_1_0:
      000004                         42 	.ds 3
      000007                         43 _realloc_sloc3_1_0:
      000007                         44 	.ds 3
                                     45 ;--------------------------------------------------------
                                     46 ; overlayable items in internal ram
                                     47 ;--------------------------------------------------------
                                     48 ;--------------------------------------------------------
                                     49 ; indirectly addressable internal ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area ISEG    (DATA)
                                     52 ;--------------------------------------------------------
                                     53 ; absolute internal ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area IABS    (ABS,DATA)
                                     56 	.area IABS    (ABS,DATA)
                                     57 ;--------------------------------------------------------
                                     58 ; bit data
                                     59 ;--------------------------------------------------------
                                     60 	.area BSEG    (BIT)
      000000                         61 _realloc_sloc4_1_0:
      000000                         62 	.ds 1
                                     63 ;--------------------------------------------------------
                                     64 ; paged external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area PSEG    (PAG,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; uninitialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XSEG    (XDATA)
      000000                         71 _realloc_PARM_2:
      000000                         72 	.ds 2
      000002                         73 _realloc_ptr_65536_66:
      000002                         74 	.ds 3
      000005                         75 _realloc_h_65536_67:
      000005                         76 	.ds 2
      000007                         77 _realloc_next_free_65536_67:
      000007                         78 	.ds 2
      000009                         79 _realloc_prev_free_65536_67:
      000009                         80 	.ds 2
      00000B                         81 _realloc_f_65536_67:
      00000B                         82 	.ds 2
      00000D                         83 _realloc_pf_65536_67:
      00000D                         84 	.ds 2
      00000F                         85 _realloc_blocksize_65536_67:
      00000F                         86 	.ds 2
      000011                         87 _realloc_maxblocksize_65536_67:
      000011                         88 	.ds 2
                                     89 ;--------------------------------------------------------
                                     90 ; absolute external ram data
                                     91 ;--------------------------------------------------------
                                     92 	.area XABS    (ABS,XDATA)
                                     93 ;--------------------------------------------------------
                                     94 ; initialized external ram data
                                     95 ;--------------------------------------------------------
                                     96 	.area XISEG   (XDATA)
                                     97 	.area HOME    (CODE)
                                     98 	.area GSINIT0 (CODE)
                                     99 	.area GSINIT1 (CODE)
                                    100 	.area GSINIT2 (CODE)
                                    101 	.area GSINIT3 (CODE)
                                    102 	.area GSINIT4 (CODE)
                                    103 	.area GSINIT5 (CODE)
                                    104 	.area GSINIT  (CODE)
                                    105 	.area GSFINAL (CODE)
                                    106 	.area CSEG    (CODE)
                                    107 ;--------------------------------------------------------
                                    108 ; global & static initialisations
                                    109 ;--------------------------------------------------------
                                    110 	.area HOME    (CODE)
                                    111 	.area GSINIT  (CODE)
                                    112 	.area GSFINAL (CODE)
                                    113 	.area GSINIT  (CODE)
                                    114 ;--------------------------------------------------------
                                    115 ; Home
                                    116 ;--------------------------------------------------------
                                    117 	.area HOME    (CODE)
                                    118 	.area HOME    (CODE)
                                    119 ;--------------------------------------------------------
                                    120 ; code
                                    121 ;--------------------------------------------------------
                                    122 	.area CSEG    (CODE)
                                    123 ;------------------------------------------------------------
                                    124 ;Allocation info for local variables in function 'realloc'
                                    125 ;------------------------------------------------------------
                                    126 ;sloc0                     Allocated with name '_realloc_sloc0_1_0'
                                    127 ;sloc1                     Allocated with name '_realloc_sloc1_1_0'
                                    128 ;sloc2                     Allocated with name '_realloc_sloc2_1_0'
                                    129 ;sloc3                     Allocated with name '_realloc_sloc3_1_0'
                                    130 ;size                      Allocated with name '_realloc_PARM_2'
                                    131 ;ptr                       Allocated with name '_realloc_ptr_65536_66'
                                    132 ;ret                       Allocated with name '_realloc_ret_65536_67'
                                    133 ;h                         Allocated with name '_realloc_h_65536_67'
                                    134 ;next_free                 Allocated with name '_realloc_next_free_65536_67'
                                    135 ;prev_free                 Allocated with name '_realloc_prev_free_65536_67'
                                    136 ;f                         Allocated with name '_realloc_f_65536_67'
                                    137 ;pf                        Allocated with name '_realloc_pf_65536_67'
                                    138 ;blocksize                 Allocated with name '_realloc_blocksize_65536_67'
                                    139 ;oldblocksize              Allocated with name '_realloc_oldblocksize_65536_67'
                                    140 ;maxblocksize              Allocated with name '_realloc_maxblocksize_65536_67'
                                    141 ;newheader                 Allocated with name '_realloc_newheader_196608_73'
                                    142 ;oldsize                   Allocated with name '_realloc_oldsize_131072_74'
                                    143 ;------------------------------------------------------------
                                    144 ;	realloc.c:58: void HEAPSPACE *realloc(void *ptr, size_t size)
                                    145 ;	-----------------------------------------
                                    146 ;	 function realloc
                                    147 ;	-----------------------------------------
      000000                        148 _realloc:
                           000007   149 	ar7 = 0x07
                           000006   150 	ar6 = 0x06
                           000005   151 	ar5 = 0x05
                           000004   152 	ar4 = 0x04
                           000003   153 	ar3 = 0x03
                           000002   154 	ar2 = 0x02
                           000001   155 	ar1 = 0x01
                           000000   156 	ar0 = 0x00
      000000 AF F0            [24]  157 	mov	r7,b
      000002 AE 83            [24]  158 	mov	r6,dph
      000004 E5 82            [12]  159 	mov	a,dpl
      000006 90r00r02         [24]  160 	mov	dptr,#_realloc_ptr_65536_66
      000009 F0               [24]  161 	movx	@dptr,a
      00000A EE               [12]  162 	mov	a,r6
      00000B A3               [24]  163 	inc	dptr
      00000C F0               [24]  164 	movx	@dptr,a
      00000D EF               [12]  165 	mov	a,r7
      00000E A3               [24]  166 	inc	dptr
      00000F F0               [24]  167 	movx	@dptr,a
                                    168 ;	realloc.c:69: if(!__sdcc_heap_free)
      000010 90r00r00         [24]  169 	mov	dptr,#___sdcc_heap_free
      000013 E0               [24]  170 	movx	a,@dptr
      000014 F5 F0            [12]  171 	mov	b,a
      000016 A3               [24]  172 	inc	dptr
      000017 E0               [24]  173 	movx	a,@dptr
      000018 45 F0            [12]  174 	orl	a,b
      00001A 70 09            [24]  175 	jnz	00102$
                                    176 ;	realloc.c:70: __sdcc_heap_init();
      00001C 78r00            [12]  177 	mov	r0,#___sdcc_heap_init
      00001E 79s00            [12]  178 	mov	r1,#(___sdcc_heap_init >> 8)
      000020 7As00            [12]  179 	mov	r2,#(___sdcc_heap_init >> 16)
      000022 12r00r00         [24]  180 	lcall	__sdcc_banked_call
      000025                        181 00102$:
                                    182 ;	realloc.c:73: if(!ptr)
      000025 90r00r02         [24]  183 	mov	dptr,#_realloc_ptr_65536_66
      000028 E0               [24]  184 	movx	a,@dptr
      000029 FD               [12]  185 	mov	r5,a
      00002A A3               [24]  186 	inc	dptr
      00002B E0               [24]  187 	movx	a,@dptr
      00002C FE               [12]  188 	mov	r6,a
      00002D A3               [24]  189 	inc	dptr
      00002E E0               [24]  190 	movx	a,@dptr
      00002F FF               [12]  191 	mov	r7,a
      000030 90r00r02         [24]  192 	mov	dptr,#_realloc_ptr_65536_66
      000033 E0               [24]  193 	movx	a,@dptr
      000034 F5 F0            [12]  194 	mov	b,a
      000036 A3               [24]  195 	inc	dptr
      000037 E0               [24]  196 	movx	a,@dptr
      000038 45 F0            [12]  197 	orl	a,b
      00003A 70 1C            [24]  198 	jnz	00104$
                                    199 ;	realloc.c:74: return(malloc(size));
      00003C 90r00r00         [24]  200 	mov	dptr,#_realloc_PARM_2
      00003F E0               [24]  201 	movx	a,@dptr
      000040 FB               [12]  202 	mov	r3,a
      000041 A3               [24]  203 	inc	dptr
      000042 E0               [24]  204 	movx	a,@dptr
      000043 FC               [12]  205 	mov	r4,a
      000044 8B 82            [24]  206 	mov	dpl,r3
      000046 8C 83            [24]  207 	mov	dph,r4
      000048 78r00            [12]  208 	mov	r0,#_malloc
      00004A 79s00            [12]  209 	mov	r1,#(_malloc >> 8)
      00004C 7As00            [12]  210 	mov	r2,#(_malloc >> 16)
      00004E 12r00r00         [24]  211 	lcall	__sdcc_banked_call
      000051 AB 82            [24]  212 	mov	r3,dpl
      000053 AC 83            [24]  213 	mov  r4,dph
      000055 02r00r00         [24]  214 	ljmp	__sdcc_banked_ret
      000058                        215 00104$:
                                    216 ;	realloc.c:76: if(!size)
      000058 90r00r00         [24]  217 	mov	dptr,#_realloc_PARM_2
      00005B E0               [24]  218 	movx	a,@dptr
      00005C FB               [12]  219 	mov	r3,a
      00005D A3               [24]  220 	inc	dptr
      00005E E0               [24]  221 	movx	a,@dptr
      00005F FC               [12]  222 	mov	r4,a
      000060 4B               [12]  223 	orl	a,r3
      000061 70 15            [24]  224 	jnz	00106$
                                    225 ;	realloc.c:78: free(ptr);
      000063 8D 82            [24]  226 	mov	dpl,r5
      000065 8E 83            [24]  227 	mov	dph,r6
      000067 8F F0            [24]  228 	mov	b,r7
      000069 78r00            [12]  229 	mov	r0,#_free
      00006B 79s00            [12]  230 	mov	r1,#(_free >> 8)
      00006D 7As00            [12]  231 	mov	r2,#(_free >> 16)
      00006F 12r00r00         [24]  232 	lcall	__sdcc_banked_call
                                    233 ;	realloc.c:79: return(0);
      000072 90 00 00         [24]  234 	mov	dptr,#0x0000
      000075 02r00r00         [24]  235 	ljmp	__sdcc_banked_ret
      000078                        236 00106$:
                                    237 ;	realloc.c:82: prev_free = 0, pf = 0;
      000078 90r00r09         [24]  238 	mov	dptr,#_realloc_prev_free_65536_67
      00007B E4               [12]  239 	clr	a
      00007C F0               [24]  240 	movx	@dptr,a
      00007D A3               [24]  241 	inc	dptr
      00007E F0               [24]  242 	movx	@dptr,a
      00007F 90r00r0D         [24]  243 	mov	dptr,#_realloc_pf_65536_67
      000082 F0               [24]  244 	movx	@dptr,a
      000083 A3               [24]  245 	inc	dptr
      000084 F0               [24]  246 	movx	@dptr,a
                                    247 ;	realloc.c:83: for(h = __sdcc_heap_free, f = &__sdcc_heap_free; h && h < ptr; prev_free = h, pf = f, f = &(h->next_free), h = h->next_free); // Find adjacent blocks in free list
      000085 90r00r00         [24]  248 	mov	dptr,#___sdcc_heap_free
      000088 E0               [24]  249 	movx	a,@dptr
      000089 F9               [12]  250 	mov	r1,a
      00008A A3               [24]  251 	inc	dptr
      00008B E0               [24]  252 	movx	a,@dptr
      00008C FA               [12]  253 	mov	r2,a
      00008D 90r00r05         [24]  254 	mov	dptr,#_realloc_h_65536_67
      000090 E9               [12]  255 	mov	a,r1
      000091 F0               [24]  256 	movx	@dptr,a
      000092 EA               [12]  257 	mov	a,r2
      000093 A3               [24]  258 	inc	dptr
      000094 F0               [24]  259 	movx	@dptr,a
      000095 90r00r0B         [24]  260 	mov	dptr,#_realloc_f_65536_67
      000098 74r00            [12]  261 	mov	a,#___sdcc_heap_free
      00009A F0               [24]  262 	movx	@dptr,a
      00009B 74s00            [12]  263 	mov	a,#(___sdcc_heap_free >> 8)
      00009D A3               [24]  264 	inc	dptr
      00009E F0               [24]  265 	movx	@dptr,a
      00009F                        266 00131$:
      00009F 90r00r05         [24]  267 	mov	dptr,#_realloc_h_65536_67
      0000A2 E0               [24]  268 	movx	a,@dptr
      0000A3 F9               [12]  269 	mov	r1,a
      0000A4 A3               [24]  270 	inc	dptr
      0000A5 E0               [24]  271 	movx	a,@dptr
      0000A6 FA               [12]  272 	mov	r2,a
      0000A7 49               [12]  273 	orl	a,r1
      0000A8 60 5F            [24]  274 	jz	00107$
      0000AA C0 03            [24]  275 	push	ar3
      0000AC C0 04            [24]  276 	push	ar4
      0000AE 89*00            [24]  277 	mov	_realloc_sloc0_1_0,r1
      0000B0 8A*01            [24]  278 	mov	(_realloc_sloc0_1_0 + 1),r2
      0000B2 8D 03            [24]  279 	mov	ar3,r5
      0000B4 8E 04            [24]  280 	mov	ar4,r6
      0000B6 C3               [12]  281 	clr	c
      0000B7 E5*00            [12]  282 	mov	a,_realloc_sloc0_1_0
      0000B9 9B               [12]  283 	subb	a,r3
      0000BA E5*01            [12]  284 	mov	a,(_realloc_sloc0_1_0 + 1)
      0000BC 9C               [12]  285 	subb	a,r4
      0000BD D0 04            [24]  286 	pop	ar4
      0000BF D0 03            [24]  287 	pop	ar3
      0000C1 50 46            [24]  288 	jnc	00107$
      0000C3 C0 05            [24]  289 	push	ar5
      0000C5 C0 06            [24]  290 	push	ar6
      0000C7 C0 07            [24]  291 	push	ar7
      0000C9 90r00r09         [24]  292 	mov	dptr,#_realloc_prev_free_65536_67
      0000CC E9               [12]  293 	mov	a,r1
      0000CD F0               [24]  294 	movx	@dptr,a
      0000CE EA               [12]  295 	mov	a,r2
      0000CF A3               [24]  296 	inc	dptr
      0000D0 F0               [24]  297 	movx	@dptr,a
      0000D1 90r00r0B         [24]  298 	mov	dptr,#_realloc_f_65536_67
      0000D4 E0               [24]  299 	movx	a,@dptr
      0000D5 F8               [12]  300 	mov	r0,a
      0000D6 A3               [24]  301 	inc	dptr
      0000D7 E0               [24]  302 	movx	a,@dptr
      0000D8 FF               [12]  303 	mov	r7,a
      0000D9 90r00r0D         [24]  304 	mov	dptr,#_realloc_pf_65536_67
      0000DC E8               [12]  305 	mov	a,r0
      0000DD F0               [24]  306 	movx	@dptr,a
      0000DE EF               [12]  307 	mov	a,r7
      0000DF A3               [24]  308 	inc	dptr
      0000E0 F0               [24]  309 	movx	@dptr,a
      0000E1 74 02            [12]  310 	mov	a,#0x02
      0000E3 29               [12]  311 	add	a,r1
      0000E4 F9               [12]  312 	mov	r1,a
      0000E5 E4               [12]  313 	clr	a
      0000E6 3A               [12]  314 	addc	a,r2
      0000E7 FA               [12]  315 	mov	r2,a
      0000E8 90r00r0B         [24]  316 	mov	dptr,#_realloc_f_65536_67
      0000EB E9               [12]  317 	mov	a,r1
      0000EC F0               [24]  318 	movx	@dptr,a
      0000ED EA               [12]  319 	mov	a,r2
      0000EE A3               [24]  320 	inc	dptr
      0000EF F0               [24]  321 	movx	@dptr,a
      0000F0 89 82            [24]  322 	mov	dpl,r1
      0000F2 8A 83            [24]  323 	mov	dph,r2
      0000F4 E0               [24]  324 	movx	a,@dptr
      0000F5 F9               [12]  325 	mov	r1,a
      0000F6 A3               [24]  326 	inc	dptr
      0000F7 E0               [24]  327 	movx	a,@dptr
      0000F8 FA               [12]  328 	mov	r2,a
      0000F9 90r00r05         [24]  329 	mov	dptr,#_realloc_h_65536_67
      0000FC E9               [12]  330 	mov	a,r1
      0000FD F0               [24]  331 	movx	@dptr,a
      0000FE EA               [12]  332 	mov	a,r2
      0000FF A3               [24]  333 	inc	dptr
      000100 F0               [24]  334 	movx	@dptr,a
      000101 D0 07            [24]  335 	pop	ar7
      000103 D0 06            [24]  336 	pop	ar6
      000105 D0 05            [24]  337 	pop	ar5
      000107 80 96            [24]  338 	sjmp	00131$
      000109                        339 00107$:
                                    340 ;	realloc.c:84: next_free = h;
      000109 90r00r05         [24]  341 	mov	dptr,#_realloc_h_65536_67
      00010C E0               [24]  342 	movx	a,@dptr
      00010D FE               [12]  343 	mov	r6,a
      00010E A3               [24]  344 	inc	dptr
      00010F E0               [24]  345 	movx	a,@dptr
      000110 FF               [12]  346 	mov	r7,a
      000111 90r00r07         [24]  347 	mov	dptr,#_realloc_next_free_65536_67
      000114 EE               [12]  348 	mov	a,r6
      000115 F0               [24]  349 	movx	@dptr,a
      000116 EF               [12]  350 	mov	a,r7
      000117 A3               [24]  351 	inc	dptr
      000118 F0               [24]  352 	movx	@dptr,a
                                    353 ;	realloc.c:86: if(size + offsetof(struct header, next_free) < size) // Handle overflow
      000119 74 02            [12]  354 	mov	a,#0x02
      00011B 2B               [12]  355 	add	a,r3
      00011C FE               [12]  356 	mov	r6,a
      00011D E4               [12]  357 	clr	a
      00011E 3C               [12]  358 	addc	a,r4
      00011F FF               [12]  359 	mov	r7,a
      000120 C3               [12]  360 	clr	c
      000121 EE               [12]  361 	mov	a,r6
      000122 9B               [12]  362 	subb	a,r3
      000123 EF               [12]  363 	mov	a,r7
      000124 9C               [12]  364 	subb	a,r4
      000125 50 06            [24]  365 	jnc	00109$
                                    366 ;	realloc.c:87: return(0);
      000127 90 00 00         [24]  367 	mov	dptr,#0x0000
      00012A 02r00r00         [24]  368 	ljmp	__sdcc_banked_ret
      00012D                        369 00109$:
                                    370 ;	realloc.c:88: blocksize = size + offsetof(struct header, next_free);
      00012D 74 02            [12]  371 	mov	a,#0x02
      00012F 2B               [12]  372 	add	a,r3
      000130 FE               [12]  373 	mov	r6,a
      000131 E4               [12]  374 	clr	a
      000132 3C               [12]  375 	addc	a,r4
      000133 FF               [12]  376 	mov	r7,a
      000134 90r00r0F         [24]  377 	mov	dptr,#_realloc_blocksize_65536_67
      000137 EE               [12]  378 	mov	a,r6
      000138 F0               [24]  379 	movx	@dptr,a
      000139 EF               [12]  380 	mov	a,r7
      00013A A3               [24]  381 	inc	dptr
      00013B F0               [24]  382 	movx	@dptr,a
                                    383 ;	realloc.c:89: if(blocksize < sizeof(struct header)) // Requiring a minimum size makes it easier to implement free(), and avoid memory leaks.
      00013C C3               [12]  384 	clr	c
      00013D EE               [12]  385 	mov	a,r6
      00013E 94 04            [12]  386 	subb	a,#0x04
      000140 EF               [12]  387 	mov	a,r7
      000141 94 00            [12]  388 	subb	a,#0x00
      000143 50 09            [24]  389 	jnc	00111$
                                    390 ;	realloc.c:90: blocksize = sizeof(struct header);
      000145 90r00r0F         [24]  391 	mov	dptr,#_realloc_blocksize_65536_67
      000148 74 04            [12]  392 	mov	a,#0x04
      00014A F0               [24]  393 	movx	@dptr,a
      00014B E4               [12]  394 	clr	a
      00014C A3               [24]  395 	inc	dptr
      00014D F0               [24]  396 	movx	@dptr,a
      00014E                        397 00111$:
                                    398 ;	realloc.c:92: h = (void HEAPSPACE *)((char HEAPSPACE *)(ptr) - offsetof(struct header, next_free));
      00014E C0 03            [24]  399 	push	ar3
      000150 C0 04            [24]  400 	push	ar4
      000152 90r00r02         [24]  401 	mov	dptr,#_realloc_ptr_65536_66
      000155 E0               [24]  402 	movx	a,@dptr
      000156 FD               [12]  403 	mov	r5,a
      000157 A3               [24]  404 	inc	dptr
      000158 E0               [24]  405 	movx	a,@dptr
      000159 FE               [12]  406 	mov	r6,a
      00015A A3               [24]  407 	inc	dptr
      00015B E0               [24]  408 	movx	a,@dptr
      00015C ED               [12]  409 	mov	a,r5
      00015D 24 FE            [12]  410 	add	a,#0xfe
      00015F FD               [12]  411 	mov	r5,a
      000160 EE               [12]  412 	mov	a,r6
      000161 34 FF            [12]  413 	addc	a,#0xff
      000163 FE               [12]  414 	mov	r6,a
      000164 90r00r05         [24]  415 	mov	dptr,#_realloc_h_65536_67
      000167 ED               [12]  416 	mov	a,r5
      000168 F0               [24]  417 	movx	@dptr,a
      000169 EE               [12]  418 	mov	a,r6
      00016A A3               [24]  419 	inc	dptr
      00016B F0               [24]  420 	movx	@dptr,a
                                    421 ;	realloc.c:93: oldblocksize = (char HEAPSPACE *)(h->next) - (char HEAPSPACE *)h;
      00016C 8D 82            [24]  422 	mov	dpl,r5
      00016E 8E 83            [24]  423 	mov	dph,r6
      000170 E0               [24]  424 	movx	a,@dptr
      000171 FA               [12]  425 	mov	r2,a
      000172 A3               [24]  426 	inc	dptr
      000173 E0               [24]  427 	movx	a,@dptr
      000174 FF               [12]  428 	mov	r7,a
      000175 8A 00            [24]  429 	mov	ar0,r2
      000177 8F 01            [24]  430 	mov	ar1,r7
      000179 8D 03            [24]  431 	mov	ar3,r5
      00017B 8E 04            [24]  432 	mov	ar4,r6
      00017D E8               [12]  433 	mov	a,r0
      00017E C3               [12]  434 	clr	c
      00017F 9B               [12]  435 	subb	a,r3
      000180 F5*00            [12]  436 	mov	_realloc_sloc0_1_0,a
      000182 E9               [12]  437 	mov	a,r1
      000183 9C               [12]  438 	subb	a,r4
      000184 F5*01            [12]  439 	mov	(_realloc_sloc0_1_0 + 1),a
                                    440 ;	realloc.c:95: maxblocksize = oldblocksize;
      000186 90r00r11         [24]  441 	mov	dptr,#_realloc_maxblocksize_65536_67
      000189 E5*00            [12]  442 	mov	a,_realloc_sloc0_1_0
      00018B F0               [24]  443 	movx	@dptr,a
      00018C E5*01            [12]  444 	mov	a,(_realloc_sloc0_1_0 + 1)
      00018E A3               [24]  445 	inc	dptr
      00018F F0               [24]  446 	movx	@dptr,a
                                    447 ;	realloc.c:96: if(prev_free && prev_free->next == h) // Can merge with previous block
      000190 90r00r09         [24]  448 	mov	dptr,#_realloc_prev_free_65536_67
      000193 E0               [24]  449 	movx	a,@dptr
      000194 F5*02            [12]  450 	mov	_realloc_sloc1_1_0,a
      000196 A3               [24]  451 	inc	dptr
      000197 E0               [24]  452 	movx	a,@dptr
      000198 F5*03            [12]  453 	mov	(_realloc_sloc1_1_0 + 1),a
      00019A D0 04            [24]  454 	pop	ar4
      00019C D0 03            [24]  455 	pop	ar3
      00019E E5*02            [12]  456 	mov	a,_realloc_sloc1_1_0
      0001A0 45*03            [12]  457 	orl	a,(_realloc_sloc1_1_0 + 1)
      0001A2 60 36            [24]  458 	jz	00113$
      0001A4 85*02 82         [24]  459 	mov	dpl,_realloc_sloc1_1_0
      0001A7 85*03 83         [24]  460 	mov	dph,(_realloc_sloc1_1_0 + 1)
      0001AA E0               [24]  461 	movx	a,@dptr
      0001AB F8               [12]  462 	mov	r0,a
      0001AC A3               [24]  463 	inc	dptr
      0001AD E0               [24]  464 	movx	a,@dptr
      0001AE F9               [12]  465 	mov	r1,a
      0001AF E8               [12]  466 	mov	a,r0
      0001B0 B5 05 27         [24]  467 	cjne	a,ar5,00113$
      0001B3 E9               [12]  468 	mov	a,r1
      0001B4 B5 06 23         [24]  469 	cjne	a,ar6,00113$
                                    470 ;	realloc.c:97: maxblocksize += (char HEAPSPACE *)h - (char HEAPSPACE *)prev_free;
      0001B7 C0 02            [24]  471 	push	ar2
      0001B9 C0 07            [24]  472 	push	ar7
      0001BB 8D 00            [24]  473 	mov	ar0,r5
      0001BD 8E 01            [24]  474 	mov	ar1,r6
      0001BF AA*02            [24]  475 	mov	r2,_realloc_sloc1_1_0
      0001C1 AF*03            [24]  476 	mov	r7,(_realloc_sloc1_1_0 + 1)
      0001C3 E8               [12]  477 	mov	a,r0
      0001C4 C3               [12]  478 	clr	c
      0001C5 9A               [12]  479 	subb	a,r2
      0001C6 F8               [12]  480 	mov	r0,a
      0001C7 E9               [12]  481 	mov	a,r1
      0001C8 9F               [12]  482 	subb	a,r7
      0001C9 F9               [12]  483 	mov	r1,a
      0001CA 90r00r11         [24]  484 	mov	dptr,#_realloc_maxblocksize_65536_67
      0001CD E8               [12]  485 	mov	a,r0
      0001CE 25*00            [12]  486 	add	a,_realloc_sloc0_1_0
      0001D0 F0               [24]  487 	movx	@dptr,a
      0001D1 E9               [12]  488 	mov	a,r1
      0001D2 35*01            [12]  489 	addc	a,(_realloc_sloc0_1_0 + 1)
      0001D4 A3               [24]  490 	inc	dptr
      0001D5 F0               [24]  491 	movx	@dptr,a
                                    492 ;	realloc.c:137: return(0);
      0001D6 D0 07            [24]  493 	pop	ar7
      0001D8 D0 02            [24]  494 	pop	ar2
                                    495 ;	realloc.c:97: maxblocksize += (char HEAPSPACE *)h - (char HEAPSPACE *)prev_free;
      0001DA                        496 00113$:
                                    497 ;	realloc.c:98: if(next_free == h->next) // Can merge with next block
      0001DA 90r00r07         [24]  498 	mov	dptr,#_realloc_next_free_65536_67
      0001DD E0               [24]  499 	movx	a,@dptr
      0001DE F8               [12]  500 	mov	r0,a
      0001DF A3               [24]  501 	inc	dptr
      0001E0 E0               [24]  502 	movx	a,@dptr
      0001E1 F9               [12]  503 	mov	r1,a
      0001E2 E8               [12]  504 	mov	a,r0
      0001E3 B5 02 26         [24]  505 	cjne	a,ar2,00116$
      0001E6 E9               [12]  506 	mov	a,r1
      0001E7 B5 07 22         [24]  507 	cjne	a,ar7,00116$
                                    508 ;	realloc.c:99: maxblocksize += (char HEAPSPACE *)(next_free->next) - (char HEAPSPACE *)next_free;
      0001EA 88 82            [24]  509 	mov	dpl,r0
      0001EC 89 83            [24]  510 	mov	dph,r1
      0001EE E0               [24]  511 	movx	a,@dptr
      0001EF FA               [12]  512 	mov	r2,a
      0001F0 A3               [24]  513 	inc	dptr
      0001F1 E0               [24]  514 	movx	a,@dptr
      0001F2 FF               [12]  515 	mov	r7,a
      0001F3 EA               [12]  516 	mov	a,r2
      0001F4 C3               [12]  517 	clr	c
      0001F5 98               [12]  518 	subb	a,r0
      0001F6 FA               [12]  519 	mov	r2,a
      0001F7 EF               [12]  520 	mov	a,r7
      0001F8 99               [12]  521 	subb	a,r1
      0001F9 FF               [12]  522 	mov	r7,a
      0001FA 90r00r11         [24]  523 	mov	dptr,#_realloc_maxblocksize_65536_67
      0001FD E0               [24]  524 	movx	a,@dptr
      0001FE F8               [12]  525 	mov	r0,a
      0001FF A3               [24]  526 	inc	dptr
      000200 E0               [24]  527 	movx	a,@dptr
      000201 F9               [12]  528 	mov	r1,a
      000202 90r00r11         [24]  529 	mov	dptr,#_realloc_maxblocksize_65536_67
      000205 EA               [12]  530 	mov	a,r2
      000206 28               [12]  531 	add	a,r0
      000207 F0               [24]  532 	movx	@dptr,a
      000208 EF               [12]  533 	mov	a,r7
      000209 39               [12]  534 	addc	a,r1
      00020A A3               [24]  535 	inc	dptr
      00020B F0               [24]  536 	movx	@dptr,a
      00020C                        537 00116$:
                                    538 ;	realloc.c:101: if(blocksize <= maxblocksize) // Can resize in place.
      00020C 90r00r0F         [24]  539 	mov	dptr,#_realloc_blocksize_65536_67
      00020F E0               [24]  540 	movx	a,@dptr
      000210 FA               [12]  541 	mov	r2,a
      000211 A3               [24]  542 	inc	dptr
      000212 E0               [24]  543 	movx	a,@dptr
      000213 FF               [12]  544 	mov	r7,a
      000214 90r00r11         [24]  545 	mov	dptr,#_realloc_maxblocksize_65536_67
      000217 E0               [24]  546 	movx	a,@dptr
      000218 F8               [12]  547 	mov	r0,a
      000219 A3               [24]  548 	inc	dptr
      00021A E0               [24]  549 	movx	a,@dptr
      00021B F9               [12]  550 	mov	r1,a
      00021C C3               [12]  551 	clr	c
      00021D E8               [12]  552 	mov	a,r0
      00021E 9A               [12]  553 	subb	a,r2
      00021F E9               [12]  554 	mov	a,r1
      000220 9F               [12]  555 	subb	a,r7
      000221 50 03            [24]  556 	jnc	00231$
      000223 02r03rB9         [24]  557 	ljmp	00126$
      000226                        558 00231$:
                                    559 ;	realloc.c:103: if(prev_free && prev_free->next == h) // Always move into previous block to defragment
      000226 90r00r09         [24]  560 	mov	dptr,#_realloc_prev_free_65536_67
      000229 E0               [24]  561 	movx	a,@dptr
      00022A F8               [12]  562 	mov	r0,a
      00022B A3               [24]  563 	inc	dptr
      00022C E0               [24]  564 	movx	a,@dptr
      00022D F9               [12]  565 	mov	r1,a
      00022E 48               [12]  566 	orl	a,r0
      00022F 70 03            [24]  567 	jnz	00232$
      000231 02r02rD2         [24]  568 	ljmp	00118$
      000234                        569 00232$:
      000234 C0 02            [24]  570 	push	ar2
      000236 C0 07            [24]  571 	push	ar7
      000238 88 82            [24]  572 	mov	dpl,r0
      00023A 89 83            [24]  573 	mov	dph,r1
      00023C E0               [24]  574 	movx	a,@dptr
      00023D FA               [12]  575 	mov	r2,a
      00023E A3               [24]  576 	inc	dptr
      00023F E0               [24]  577 	movx	a,@dptr
      000240 FF               [12]  578 	mov	r7,a
      000241 EA               [12]  579 	mov	a,r2
      000242 B5 05 06         [24]  580 	cjne	a,ar5,00233$
      000245 EF               [12]  581 	mov	a,r7
      000246 B5 06 02         [24]  582 	cjne	a,ar6,00233$
      000249 80 07            [24]  583 	sjmp	00234$
      00024B                        584 00233$:
      00024B D0 07            [24]  585 	pop	ar7
      00024D D0 02            [24]  586 	pop	ar2
      00024F 02r02rD2         [24]  587 	ljmp	00118$
      000252                        588 00234$:
      000252 D0 07            [24]  589 	pop	ar7
      000254 D0 02            [24]  590 	pop	ar2
                                    591 ;	realloc.c:105: memmove(prev_free, h, blocksize <= oldblocksize ? blocksize : oldblocksize);
      000256 88*04            [24]  592 	mov	_realloc_sloc2_1_0,r0
      000258 89*05            [24]  593 	mov	(_realloc_sloc2_1_0 + 1),r1
      00025A 75*06 00         [24]  594 	mov	(_realloc_sloc2_1_0 + 2),#0x00
      00025D 8D*07            [24]  595 	mov	_realloc_sloc3_1_0,r5
      00025F 8E*08            [24]  596 	mov	(_realloc_sloc3_1_0 + 1),r6
      000261 75*09 00         [24]  597 	mov	(_realloc_sloc3_1_0 + 2),#0x00
      000264 A8*00            [24]  598 	mov	r0,_realloc_sloc0_1_0
      000266 AE*01            [24]  599 	mov	r6,(_realloc_sloc0_1_0 + 1)
      000268 C3               [12]  600 	clr	c
      000269 E8               [12]  601 	mov	a,r0
      00026A 9A               [12]  602 	subb	a,r2
      00026B EE               [12]  603 	mov	a,r6
      00026C 9F               [12]  604 	subb	a,r7
      00026D 92*00            [24]  605 	mov	_realloc_sloc4_1_0,c
      00026F 40 04            [24]  606 	jc	00135$
      000271 8A 06            [24]  607 	mov	ar6,r2
      000273 80 04            [24]  608 	sjmp	00136$
      000275                        609 00135$:
      000275 AE*00            [24]  610 	mov	r6,_realloc_sloc0_1_0
      000277 AF*01            [24]  611 	mov	r7,(_realloc_sloc0_1_0 + 1)
      000279                        612 00136$:
      000279 90r00r00         [24]  613 	mov	dptr,#_memmove_PARM_2
      00027C E5*07            [12]  614 	mov	a,_realloc_sloc3_1_0
      00027E F0               [24]  615 	movx	@dptr,a
      00027F E5*08            [12]  616 	mov	a,(_realloc_sloc3_1_0 + 1)
      000281 A3               [24]  617 	inc	dptr
      000282 F0               [24]  618 	movx	@dptr,a
      000283 E5*09            [12]  619 	mov	a,(_realloc_sloc3_1_0 + 2)
      000285 A3               [24]  620 	inc	dptr
      000286 F0               [24]  621 	movx	@dptr,a
      000287 90r00r00         [24]  622 	mov	dptr,#_memmove_PARM_3
      00028A EE               [12]  623 	mov	a,r6
      00028B F0               [24]  624 	movx	@dptr,a
      00028C EF               [12]  625 	mov	a,r7
      00028D A3               [24]  626 	inc	dptr
      00028E F0               [24]  627 	movx	@dptr,a
      00028F 85*04 82         [24]  628 	mov	dpl,_realloc_sloc2_1_0
      000292 85*05 83         [24]  629 	mov	dph,(_realloc_sloc2_1_0 + 1)
      000295 85*06 F0         [24]  630 	mov	b,(_realloc_sloc2_1_0 + 2)
      000298 78r00            [12]  631 	mov	r0,#_memmove
      00029A 79s00            [12]  632 	mov	r1,#(_memmove >> 8)
      00029C 7As00            [12]  633 	mov	r2,#(_memmove >> 16)
      00029E 12r00r00         [24]  634 	lcall	__sdcc_banked_call
                                    635 ;	realloc.c:106: h = prev_free;
      0002A1 90r00r09         [24]  636 	mov	dptr,#_realloc_prev_free_65536_67
      0002A4 E0               [24]  637 	movx	a,@dptr
      0002A5 FE               [12]  638 	mov	r6,a
      0002A6 A3               [24]  639 	inc	dptr
      0002A7 E0               [24]  640 	movx	a,@dptr
      0002A8 FF               [12]  641 	mov	r7,a
      0002A9 90r00r05         [24]  642 	mov	dptr,#_realloc_h_65536_67
      0002AC EE               [12]  643 	mov	a,r6
      0002AD F0               [24]  644 	movx	@dptr,a
      0002AE EF               [12]  645 	mov	a,r7
      0002AF A3               [24]  646 	inc	dptr
      0002B0 F0               [24]  647 	movx	@dptr,a
                                    648 ;	realloc.c:107: *pf = next_free;
      0002B1 90r00r0D         [24]  649 	mov	dptr,#_realloc_pf_65536_67
      0002B4 E0               [24]  650 	movx	a,@dptr
      0002B5 FE               [12]  651 	mov	r6,a
      0002B6 A3               [24]  652 	inc	dptr
      0002B7 E0               [24]  653 	movx	a,@dptr
      0002B8 FF               [12]  654 	mov	r7,a
      0002B9 90r00r07         [24]  655 	mov	dptr,#_realloc_next_free_65536_67
      0002BC E0               [24]  656 	movx	a,@dptr
      0002BD FA               [12]  657 	mov	r2,a
      0002BE A3               [24]  658 	inc	dptr
      0002BF E0               [24]  659 	movx	a,@dptr
      0002C0 FD               [12]  660 	mov	r5,a
      0002C1 8E 82            [24]  661 	mov	dpl,r6
      0002C3 8F 83            [24]  662 	mov	dph,r7
      0002C5 EA               [12]  663 	mov	a,r2
      0002C6 F0               [24]  664 	movx	@dptr,a
      0002C7 ED               [12]  665 	mov	a,r5
      0002C8 A3               [24]  666 	inc	dptr
      0002C9 F0               [24]  667 	movx	@dptr,a
                                    668 ;	realloc.c:108: f = pf;
      0002CA 90r00r0B         [24]  669 	mov	dptr,#_realloc_f_65536_67
      0002CD EE               [12]  670 	mov	a,r6
      0002CE F0               [24]  671 	movx	@dptr,a
      0002CF EF               [12]  672 	mov	a,r7
      0002D0 A3               [24]  673 	inc	dptr
      0002D1 F0               [24]  674 	movx	@dptr,a
      0002D2                        675 00118$:
                                    676 ;	realloc.c:111: if(next_free && next_free == h->next) // Merge with following block
      0002D2 90r00r07         [24]  677 	mov	dptr,#_realloc_next_free_65536_67
      0002D5 E0               [24]  678 	movx	a,@dptr
      0002D6 FE               [12]  679 	mov	r6,a
      0002D7 A3               [24]  680 	inc	dptr
      0002D8 E0               [24]  681 	movx	a,@dptr
      0002D9 FF               [12]  682 	mov	r7,a
      0002DA 4E               [12]  683 	orl	a,r6
      0002DB 60 47            [24]  684 	jz	00121$
      0002DD 90r00r05         [24]  685 	mov	dptr,#_realloc_h_65536_67
      0002E0 E0               [24]  686 	movx	a,@dptr
      0002E1 FA               [12]  687 	mov	r2,a
      0002E2 A3               [24]  688 	inc	dptr
      0002E3 E0               [24]  689 	movx	a,@dptr
      0002E4 FD               [12]  690 	mov	r5,a
      0002E5 8A 82            [24]  691 	mov	dpl,r2
      0002E7 8D 83            [24]  692 	mov	dph,r5
      0002E9 E0               [24]  693 	movx	a,@dptr
      0002EA F8               [12]  694 	mov	r0,a
      0002EB A3               [24]  695 	inc	dptr
      0002EC E0               [24]  696 	movx	a,@dptr
      0002ED F9               [12]  697 	mov	r1,a
      0002EE EE               [12]  698 	mov	a,r6
      0002EF B5 00 32         [24]  699 	cjne	a,ar0,00121$
      0002F2 EF               [12]  700 	mov	a,r7
      0002F3 B5 01 2E         [24]  701 	cjne	a,ar1,00121$
                                    702 ;	realloc.c:113: h->next = next_free->next;
      0002F6 8E 82            [24]  703 	mov	dpl,r6
      0002F8 8F 83            [24]  704 	mov	dph,r7
      0002FA E0               [24]  705 	movx	a,@dptr
      0002FB F8               [12]  706 	mov	r0,a
      0002FC A3               [24]  707 	inc	dptr
      0002FD E0               [24]  708 	movx	a,@dptr
      0002FE F9               [12]  709 	mov	r1,a
      0002FF 8A 82            [24]  710 	mov	dpl,r2
      000301 8D 83            [24]  711 	mov	dph,r5
      000303 E8               [12]  712 	mov	a,r0
      000304 F0               [24]  713 	movx	@dptr,a
      000305 E9               [12]  714 	mov	a,r1
      000306 A3               [24]  715 	inc	dptr
      000307 F0               [24]  716 	movx	@dptr,a
                                    717 ;	realloc.c:114: *f = next_free->next_free;
      000308 90r00r0B         [24]  718 	mov	dptr,#_realloc_f_65536_67
      00030B E0               [24]  719 	movx	a,@dptr
      00030C FA               [12]  720 	mov	r2,a
      00030D A3               [24]  721 	inc	dptr
      00030E E0               [24]  722 	movx	a,@dptr
      00030F FD               [12]  723 	mov	r5,a
      000310 8E 82            [24]  724 	mov	dpl,r6
      000312 8F 83            [24]  725 	mov	dph,r7
      000314 A3               [24]  726 	inc	dptr
      000315 A3               [24]  727 	inc	dptr
      000316 E0               [24]  728 	movx	a,@dptr
      000317 FE               [12]  729 	mov	r6,a
      000318 A3               [24]  730 	inc	dptr
      000319 E0               [24]  731 	movx	a,@dptr
      00031A FF               [12]  732 	mov	r7,a
      00031B 8A 82            [24]  733 	mov	dpl,r2
      00031D 8D 83            [24]  734 	mov	dph,r5
      00031F EE               [12]  735 	mov	a,r6
      000320 F0               [24]  736 	movx	@dptr,a
      000321 EF               [12]  737 	mov	a,r7
      000322 A3               [24]  738 	inc	dptr
      000323 F0               [24]  739 	movx	@dptr,a
      000324                        740 00121$:
                                    741 ;	realloc.c:117: if(maxblocksize >= blocksize + sizeof(struct header)) // Create new block from free space
      000324 90r00r0F         [24]  742 	mov	dptr,#_realloc_blocksize_65536_67
      000327 E0               [24]  743 	movx	a,@dptr
      000328 FE               [12]  744 	mov	r6,a
      000329 A3               [24]  745 	inc	dptr
      00032A E0               [24]  746 	movx	a,@dptr
      00032B FF               [12]  747 	mov	r7,a
      00032C 74 04            [12]  748 	mov	a,#0x04
      00032E 2E               [12]  749 	add	a,r6
      00032F FA               [12]  750 	mov	r2,a
      000330 E4               [12]  751 	clr	a
      000331 3F               [12]  752 	addc	a,r7
      000332 FD               [12]  753 	mov	r5,a
      000333 90r00r11         [24]  754 	mov	dptr,#_realloc_maxblocksize_65536_67
      000336 E0               [24]  755 	movx	a,@dptr
      000337 F8               [12]  756 	mov	r0,a
      000338 A3               [24]  757 	inc	dptr
      000339 E0               [24]  758 	movx	a,@dptr
      00033A F9               [12]  759 	mov	r1,a
      00033B C3               [12]  760 	clr	c
      00033C E8               [12]  761 	mov	a,r0
      00033D 9A               [12]  762 	subb	a,r2
      00033E E9               [12]  763 	mov	a,r1
      00033F 9D               [12]  764 	subb	a,r5
      000340 40 61            [24]  765 	jc	00124$
                                    766 ;	realloc.c:119: header_t *const newheader = (header_t *const)((char HEAPSPACE *)h + blocksize);
      000342 90r00r05         [24]  767 	mov	dptr,#_realloc_h_65536_67
      000345 E0               [24]  768 	movx	a,@dptr
      000346 FA               [12]  769 	mov	r2,a
      000347 A3               [24]  770 	inc	dptr
      000348 E0               [24]  771 	movx	a,@dptr
      000349 FD               [12]  772 	mov	r5,a
      00034A 8A 00            [24]  773 	mov	ar0,r2
      00034C 8D 01            [24]  774 	mov	ar1,r5
      00034E EE               [12]  775 	mov	a,r6
      00034F 28               [12]  776 	add	a,r0
      000350 FE               [12]  777 	mov	r6,a
      000351 EF               [12]  778 	mov	a,r7
      000352 39               [12]  779 	addc	a,r1
      000353 FF               [12]  780 	mov	r7,a
                                    781 ;	realloc.c:120: newheader->next = h->next;
      000354 8A 82            [24]  782 	mov	dpl,r2
      000356 8D 83            [24]  783 	mov	dph,r5
      000358 E0               [24]  784 	movx	a,@dptr
      000359 F8               [12]  785 	mov	r0,a
      00035A A3               [24]  786 	inc	dptr
      00035B E0               [24]  787 	movx	a,@dptr
      00035C F9               [12]  788 	mov	r1,a
      00035D 8E 82            [24]  789 	mov	dpl,r6
      00035F 8F 83            [24]  790 	mov	dph,r7
      000361 E8               [12]  791 	mov	a,r0
      000362 F0               [24]  792 	movx	@dptr,a
      000363 E9               [12]  793 	mov	a,r1
      000364 A3               [24]  794 	inc	dptr
      000365 F0               [24]  795 	movx	@dptr,a
                                    796 ;	realloc.c:121: newheader->next_free = *f;
      000366 74 02            [12]  797 	mov	a,#0x02
      000368 2E               [12]  798 	add	a,r6
      000369 F5*07            [12]  799 	mov	_realloc_sloc3_1_0,a
      00036B E4               [12]  800 	clr	a
      00036C 3F               [12]  801 	addc	a,r7
      00036D F5*08            [12]  802 	mov	(_realloc_sloc3_1_0 + 1),a
      00036F 90r00r0B         [24]  803 	mov	dptr,#_realloc_f_65536_67
      000372 E0               [24]  804 	movx	a,@dptr
      000373 F5*04            [12]  805 	mov	_realloc_sloc2_1_0,a
      000375 A3               [24]  806 	inc	dptr
      000376 E0               [24]  807 	movx	a,@dptr
      000377 F5*05            [12]  808 	mov	(_realloc_sloc2_1_0 + 1),a
      000379 85*04 82         [24]  809 	mov	dpl,_realloc_sloc2_1_0
      00037C 85*05 83         [24]  810 	mov	dph,(_realloc_sloc2_1_0 + 1)
      00037F E0               [24]  811 	movx	a,@dptr
      000380 F8               [12]  812 	mov	r0,a
      000381 A3               [24]  813 	inc	dptr
      000382 E0               [24]  814 	movx	a,@dptr
      000383 F9               [12]  815 	mov	r1,a
      000384 85*07 82         [24]  816 	mov	dpl,_realloc_sloc3_1_0
      000387 85*08 83         [24]  817 	mov	dph,(_realloc_sloc3_1_0 + 1)
      00038A E8               [12]  818 	mov	a,r0
      00038B F0               [24]  819 	movx	@dptr,a
      00038C E9               [12]  820 	mov	a,r1
      00038D A3               [24]  821 	inc	dptr
      00038E F0               [24]  822 	movx	@dptr,a
                                    823 ;	realloc.c:122: *f = newheader;
      00038F 85*04 82         [24]  824 	mov	dpl,_realloc_sloc2_1_0
      000392 85*05 83         [24]  825 	mov	dph,(_realloc_sloc2_1_0 + 1)
      000395 EE               [12]  826 	mov	a,r6
      000396 F0               [24]  827 	movx	@dptr,a
      000397 EF               [12]  828 	mov	a,r7
      000398 A3               [24]  829 	inc	dptr
      000399 F0               [24]  830 	movx	@dptr,a
                                    831 ;	realloc.c:123: h->next = newheader;
      00039A 8A 82            [24]  832 	mov	dpl,r2
      00039C 8D 83            [24]  833 	mov	dph,r5
      00039E EE               [12]  834 	mov	a,r6
      00039F F0               [24]  835 	movx	@dptr,a
      0003A0 EF               [12]  836 	mov	a,r7
      0003A1 A3               [24]  837 	inc	dptr
      0003A2 F0               [24]  838 	movx	@dptr,a
      0003A3                        839 00124$:
                                    840 ;	realloc.c:126: return(&(h->next_free));
      0003A3 90r00r05         [24]  841 	mov	dptr,#_realloc_h_65536_67
      0003A6 E0               [24]  842 	movx	a,@dptr
      0003A7 FE               [12]  843 	mov	r6,a
      0003A8 A3               [24]  844 	inc	dptr
      0003A9 E0               [24]  845 	movx	a,@dptr
      0003AA FF               [12]  846 	mov	r7,a
      0003AB 74 02            [12]  847 	mov	a,#0x02
      0003AD 2E               [12]  848 	add	a,r6
      0003AE FE               [12]  849 	mov	r6,a
      0003AF E4               [12]  850 	clr	a
      0003B0 3F               [12]  851 	addc	a,r7
      0003B1 FF               [12]  852 	mov	r7,a
      0003B2 8E 82            [24]  853 	mov	dpl,r6
      0003B4 8F 83            [24]  854 	mov	dph,r7
      0003B6 02r00r00         [24]  855 	ljmp	__sdcc_banked_ret
      0003B9                        856 00126$:
                                    857 ;	realloc.c:129: if(ret = malloc(size))
      0003B9 8B 82            [24]  858 	mov	dpl,r3
      0003BB 8C 83            [24]  859 	mov	dph,r4
      0003BD C0 04            [24]  860 	push	ar4
      0003BF C0 03            [24]  861 	push	ar3
      0003C1 78r00            [12]  862 	mov	r0,#_malloc
      0003C3 79s00            [12]  863 	mov	r1,#(_malloc >> 8)
      0003C5 7As00            [12]  864 	mov	r2,#(_malloc >> 16)
      0003C7 12r00r00         [24]  865 	lcall	__sdcc_banked_call
      0003CA AE 82            [24]  866 	mov	r6,dpl
      0003CC AF 83            [24]  867 	mov	r7,dph
      0003CE D0 03            [24]  868 	pop	ar3
      0003D0 D0 04            [24]  869 	pop	ar4
      0003D2 EE               [12]  870 	mov	a,r6
      0003D3 4F               [12]  871 	orl	a,r7
      0003D4 70 03            [24]  872 	jnz	00240$
      0003D6 02r04r59         [24]  873 	ljmp	00128$
      0003D9                        874 00240$:
                                    875 ;	realloc.c:131: size_t oldsize = oldblocksize - offsetof(struct header, next_free);
      0003D9 E5*00            [12]  876 	mov	a,_realloc_sloc0_1_0
      0003DB 24 FE            [12]  877 	add	a,#0xfe
      0003DD FA               [12]  878 	mov	r2,a
      0003DE E5*01            [12]  879 	mov	a,(_realloc_sloc0_1_0 + 1)
      0003E0 34 FF            [12]  880 	addc	a,#0xff
      0003E2 FD               [12]  881 	mov	r5,a
                                    882 ;	realloc.c:132: memcpy(ret, ptr, size <= oldsize ? size : oldsize);
      0003E3 8E 00            [24]  883 	mov	ar0,r6
      0003E5 8F 01            [24]  884 	mov	ar1,r7
      0003E7 88*07            [24]  885 	mov	_realloc_sloc3_1_0,r0
      0003E9 89*08            [24]  886 	mov	(_realloc_sloc3_1_0 + 1),r1
      0003EB 75*09 00         [24]  887 	mov	(_realloc_sloc3_1_0 + 2),#0x00
      0003EE 90r00r02         [24]  888 	mov	dptr,#_realloc_ptr_65536_66
      0003F1 E0               [24]  889 	movx	a,@dptr
      0003F2 F5*04            [12]  890 	mov	_realloc_sloc2_1_0,a
      0003F4 A3               [24]  891 	inc	dptr
      0003F5 E0               [24]  892 	movx	a,@dptr
      0003F6 F5*05            [12]  893 	mov	(_realloc_sloc2_1_0 + 1),a
      0003F8 A3               [24]  894 	inc	dptr
      0003F9 E0               [24]  895 	movx	a,@dptr
      0003FA F5*06            [12]  896 	mov	(_realloc_sloc2_1_0 + 2),a
      0003FC C3               [12]  897 	clr	c
      0003FD EA               [12]  898 	mov	a,r2
      0003FE 9B               [12]  899 	subb	a,r3
      0003FF ED               [12]  900 	mov	a,r5
      000400 9C               [12]  901 	subb	a,r4
      000401 92*00            [24]  902 	mov	_realloc_sloc4_1_0,c
      000403 50 04            [24]  903 	jnc	00138$
      000405 8A 03            [24]  904 	mov	ar3,r2
      000407 8D 04            [24]  905 	mov	ar4,r5
      000409                        906 00138$:
      000409 90r00r00         [24]  907 	mov	dptr,#___memcpy_PARM_2
      00040C E5*04            [12]  908 	mov	a,_realloc_sloc2_1_0
      00040E F0               [24]  909 	movx	@dptr,a
      00040F E5*05            [12]  910 	mov	a,(_realloc_sloc2_1_0 + 1)
      000411 A3               [24]  911 	inc	dptr
      000412 F0               [24]  912 	movx	@dptr,a
      000413 E5*06            [12]  913 	mov	a,(_realloc_sloc2_1_0 + 2)
      000415 A3               [24]  914 	inc	dptr
      000416 F0               [24]  915 	movx	@dptr,a
      000417 90r00r00         [24]  916 	mov	dptr,#___memcpy_PARM_3
      00041A EB               [12]  917 	mov	a,r3
      00041B F0               [24]  918 	movx	@dptr,a
      00041C EC               [12]  919 	mov	a,r4
      00041D A3               [24]  920 	inc	dptr
      00041E F0               [24]  921 	movx	@dptr,a
      00041F 85*07 82         [24]  922 	mov	dpl,_realloc_sloc3_1_0
      000422 85*08 83         [24]  923 	mov	dph,(_realloc_sloc3_1_0 + 1)
      000425 85*09 F0         [24]  924 	mov	b,(_realloc_sloc3_1_0 + 2)
      000428 C0 07            [24]  925 	push	ar7
      00042A C0 06            [24]  926 	push	ar6
      00042C 78r00            [12]  927 	mov	r0,#___memcpy
      00042E 79s00            [12]  928 	mov	r1,#(___memcpy >> 8)
      000430 7As00            [12]  929 	mov	r2,#(___memcpy >> 16)
      000432 12r00r00         [24]  930 	lcall	__sdcc_banked_call
                                    931 ;	realloc.c:133: free(ptr);
      000435 90r00r02         [24]  932 	mov	dptr,#_realloc_ptr_65536_66
      000438 E0               [24]  933 	movx	a,@dptr
      000439 FB               [12]  934 	mov	r3,a
      00043A A3               [24]  935 	inc	dptr
      00043B E0               [24]  936 	movx	a,@dptr
      00043C FC               [12]  937 	mov	r4,a
      00043D A3               [24]  938 	inc	dptr
      00043E E0               [24]  939 	movx	a,@dptr
      00043F FD               [12]  940 	mov	r5,a
      000440 8B 82            [24]  941 	mov	dpl,r3
      000442 8C 83            [24]  942 	mov	dph,r4
      000444 8D F0            [24]  943 	mov	b,r5
      000446 78r00            [12]  944 	mov	r0,#_free
      000448 79s00            [12]  945 	mov	r1,#(_free >> 8)
      00044A 7As00            [12]  946 	mov	r2,#(_free >> 16)
      00044C 12r00r00         [24]  947 	lcall	__sdcc_banked_call
      00044F D0 06            [24]  948 	pop	ar6
      000451 D0 07            [24]  949 	pop	ar7
                                    950 ;	realloc.c:134: return(ret);
      000453 8E 82            [24]  951 	mov	dpl,r6
      000455 8F 83            [24]  952 	mov	dph,r7
      000457 80 03            [24]  953 	sjmp	00133$
      000459                        954 00128$:
                                    955 ;	realloc.c:137: return(0);
      000459 90 00 00         [24]  956 	mov	dptr,#0x0000
      00045C                        957 00133$:
                                    958 ;	realloc.c:138: }
      00045C 02r00r00         [24]  959 	ljmp	__sdcc_banked_ret
                                    960 	.area CSEG    (CODE)
                                    961 	.area CONST   (CODE)
                                    962 	.area XINIT   (CODE)
                                    963 	.area CABS    (ABS,CODE)
