                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strdup
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl _strlen
                                     13 	.globl _strcpy
                                     14 	.globl _strdup
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
      000000                         58 _strdup_s_65536_64:
      000000                         59 	.ds 3
                                     60 ;--------------------------------------------------------
                                     61 ; absolute external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XABS    (ABS,XDATA)
                                     64 ;--------------------------------------------------------
                                     65 ; initialized external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XISEG   (XDATA)
                                     68 	.area HOME    (CODE)
                                     69 	.area GSINIT0 (CODE)
                                     70 	.area GSINIT1 (CODE)
                                     71 	.area GSINIT2 (CODE)
                                     72 	.area GSINIT3 (CODE)
                                     73 	.area GSINIT4 (CODE)
                                     74 	.area GSINIT5 (CODE)
                                     75 	.area GSINIT  (CODE)
                                     76 	.area GSFINAL (CODE)
                                     77 	.area CSEG    (CODE)
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; Home
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area HOME    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; code
                                     92 ;--------------------------------------------------------
                                     93 	.area CSEG    (CODE)
                                     94 ;------------------------------------------------------------
                                     95 ;Allocation info for local variables in function 'strdup'
                                     96 ;------------------------------------------------------------
                                     97 ;s                         Allocated with name '_strdup_s_65536_64'
                                     98 ;r                         Allocated with name '_strdup_r_65536_65'
                                     99 ;------------------------------------------------------------
                                    100 ;	strdup.c:33: char *strdup (const char *s)
                                    101 ;	-----------------------------------------
                                    102 ;	 function strdup
                                    103 ;	-----------------------------------------
      000000                        104 _strdup:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 AF F0            [24]  113 	mov	r7,b
      000002 AE 83            [24]  114 	mov	r6,dph
      000004 E5 82            [12]  115 	mov	a,dpl
      000006 90r00r00         [24]  116 	mov	dptr,#_strdup_s_65536_64
      000009 F0               [24]  117 	movx	@dptr,a
      00000A EE               [12]  118 	mov	a,r6
      00000B A3               [24]  119 	inc	dptr
      00000C F0               [24]  120 	movx	@dptr,a
      00000D EF               [12]  121 	mov	a,r7
      00000E A3               [24]  122 	inc	dptr
      00000F F0               [24]  123 	movx	@dptr,a
                                    124 ;	strdup.c:35: char *r = malloc(strlen(s) + 1);
      000010 90r00r00         [24]  125 	mov	dptr,#_strdup_s_65536_64
      000013 E0               [24]  126 	movx	a,@dptr
      000014 FD               [12]  127 	mov	r5,a
      000015 A3               [24]  128 	inc	dptr
      000016 E0               [24]  129 	movx	a,@dptr
      000017 FE               [12]  130 	mov	r6,a
      000018 A3               [24]  131 	inc	dptr
      000019 E0               [24]  132 	movx	a,@dptr
      00001A FF               [12]  133 	mov	r7,a
      00001B 8D 82            [24]  134 	mov	dpl,r5
      00001D 8E 83            [24]  135 	mov	dph,r6
      00001F 8F F0            [24]  136 	mov	b,r7
      000021 78r00            [12]  137 	mov	r0,#_strlen
      000023 79s00            [12]  138 	mov	r1,#(_strlen >> 8)
      000025 7As00            [12]  139 	mov	r2,#(_strlen >> 16)
      000027 12r00r00         [24]  140 	lcall	__sdcc_banked_call
      00002A E5 82            [12]  141 	mov	a,dpl
      00002C 85 83 F0         [24]  142 	mov	b,dph
      00002F 24 01            [12]  143 	add	a,#0x01
      000031 FE               [12]  144 	mov	r6,a
      000032 E4               [12]  145 	clr	a
      000033 35 F0            [12]  146 	addc	a,b
      000035 FF               [12]  147 	mov	r7,a
      000036 8E 82            [24]  148 	mov	dpl,r6
      000038 8F 83            [24]  149 	mov	dph,r7
      00003A 78r00            [12]  150 	mov	r0,#_malloc
      00003C 79s00            [12]  151 	mov	r1,#(_malloc >> 8)
      00003E 7As00            [12]  152 	mov	r2,#(_malloc >> 16)
      000040 12r00r00         [24]  153 	lcall	__sdcc_banked_call
      000043 AE 82            [24]  154 	mov	r6,dpl
      000045 AD 83            [24]  155 	mov	r5,dph
      000047 7F 00            [12]  156 	mov	r7,#0x00
                                    157 ;	strdup.c:36: if (r)
      000049 EE               [12]  158 	mov	a,r6
      00004A 4D               [12]  159 	orl	a,r5
      00004B 60 31            [24]  160 	jz	00102$
                                    161 ;	strdup.c:37: strcpy(r, s);
      00004D 90r00r00         [24]  162 	mov	dptr,#_strdup_s_65536_64
      000050 E0               [24]  163 	movx	a,@dptr
      000051 FA               [12]  164 	mov	r2,a
      000052 A3               [24]  165 	inc	dptr
      000053 E0               [24]  166 	movx	a,@dptr
      000054 FB               [12]  167 	mov	r3,a
      000055 A3               [24]  168 	inc	dptr
      000056 E0               [24]  169 	movx	a,@dptr
      000057 FC               [12]  170 	mov	r4,a
      000058 90r00r00         [24]  171 	mov	dptr,#_strcpy_PARM_2
      00005B EA               [12]  172 	mov	a,r2
      00005C F0               [24]  173 	movx	@dptr,a
      00005D EB               [12]  174 	mov	a,r3
      00005E A3               [24]  175 	inc	dptr
      00005F F0               [24]  176 	movx	@dptr,a
      000060 EC               [12]  177 	mov	a,r4
      000061 A3               [24]  178 	inc	dptr
      000062 F0               [24]  179 	movx	@dptr,a
      000063 8E 82            [24]  180 	mov	dpl,r6
      000065 8D 83            [24]  181 	mov	dph,r5
      000067 8F F0            [24]  182 	mov	b,r7
      000069 C0 07            [24]  183 	push	ar7
      00006B C0 06            [24]  184 	push	ar6
      00006D C0 05            [24]  185 	push	ar5
      00006F 78r00            [12]  186 	mov	r0,#_strcpy
      000071 79s00            [12]  187 	mov	r1,#(_strcpy >> 8)
      000073 7As00            [12]  188 	mov	r2,#(_strcpy >> 16)
      000075 12r00r00         [24]  189 	lcall	__sdcc_banked_call
      000078 D0 05            [24]  190 	pop	ar5
      00007A D0 06            [24]  191 	pop	ar6
      00007C D0 07            [24]  192 	pop	ar7
      00007E                        193 00102$:
                                    194 ;	strdup.c:38: return (r);
      00007E 8E 82            [24]  195 	mov	dpl,r6
      000080 8D 83            [24]  196 	mov	dph,r5
      000082 8F F0            [24]  197 	mov	b,r7
                                    198 ;	strdup.c:39: }
      000084 02r00r00         [24]  199 	ljmp	__sdcc_banked_ret
                                    200 	.area CSEG    (CODE)
                                    201 	.area CONST   (CODE)
                                    202 	.area XINIT   (CODE)
                                    203 	.area CABS    (ABS,CODE)
