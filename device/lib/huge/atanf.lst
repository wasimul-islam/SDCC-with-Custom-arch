                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atanf
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _atanf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; initialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'atanf'
                                     92 ;------------------------------------------------------------
                                     93 ;x                         Allocated to stack - _bp +1
                                     94 ;f                         Allocated to stack - _bp +13
                                     95 ;r                         Allocated to registers r4 r5 r6 r7 
                                     96 ;g                         Allocated to registers r7 r6 r5 r4 
                                     97 ;n                         Allocated to stack - _bp +17
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;sloc1                     Allocated to stack - _bp +9
                                    100 ;------------------------------------------------------------
                                    101 ;	atanf.c:55: float atanf(float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function atanf
                                    104 ;	-----------------------------------------
      000000                        105 _atanf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C0 82            [24]  116 	push	dpl
      000007 C0 83            [24]  117 	push	dph
      000009 C0 F0            [24]  118 	push	b
      00000B C0 E0            [24]  119 	push	acc
      00000D E5 81            [12]  120 	mov	a,sp
      00000F 24 0E            [12]  121 	add	a,#0x0e
      000011 F5 81            [12]  122 	mov	sp,a
                                    123 ;	atanf.c:58: int n=0;
      000013 E5*00            [12]  124 	mov	a,_bp
      000015 24 11            [12]  125 	add	a,#0x11
      000017 F8               [12]  126 	mov	r0,a
      000018 E4               [12]  127 	clr	a
      000019 F6               [12]  128 	mov	@r0,a
      00001A 08               [12]  129 	inc	r0
      00001B F6               [12]  130 	mov	@r0,a
                                    131 ;	atanf.c:61: f=fabsf(x);
      00001C A8*00            [24]  132 	mov	r0,_bp
      00001E 08               [12]  133 	inc	r0
      00001F 86 82            [24]  134 	mov	dpl,@r0
      000021 08               [12]  135 	inc	r0
      000022 86 83            [24]  136 	mov	dph,@r0
      000024 08               [12]  137 	inc	r0
      000025 86 F0            [24]  138 	mov	b,@r0
      000027 08               [12]  139 	inc	r0
      000028 E6               [12]  140 	mov	a,@r0
      000029 78r00            [12]  141 	mov	r0,#_fabsf
      00002B 79s00            [12]  142 	mov	r1,#(_fabsf >> 8)
      00002D 7As00            [12]  143 	mov	r2,#(_fabsf >> 16)
      00002F 12r00r00         [24]  144 	lcall	__sdcc_banked_call
      000032 AC 82            [24]  145 	mov	r4,dpl
      000034 AD 83            [24]  146 	mov	r5,dph
      000036 AE F0            [24]  147 	mov	r6,b
      000038 FF               [12]  148 	mov	r7,a
      000039 E5*00            [12]  149 	mov	a,_bp
      00003B 24 0D            [12]  150 	add	a,#0x0d
      00003D F8               [12]  151 	mov	r0,a
      00003E A6 04            [24]  152 	mov	@r0,ar4
      000040 08               [12]  153 	inc	r0
      000041 A6 05            [24]  154 	mov	@r0,ar5
      000043 08               [12]  155 	inc	r0
      000044 A6 06            [24]  156 	mov	@r0,ar6
      000046 08               [12]  157 	inc	r0
      000047 A6 07            [24]  158 	mov	@r0,ar7
                                    159 ;	atanf.c:62: if(f>1.0)
      000049 E5*00            [12]  160 	mov	a,_bp
      00004B 24 0D            [12]  161 	add	a,#0x0d
      00004D F8               [12]  162 	mov	r0,a
      00004E E6               [12]  163 	mov	a,@r0
      00004F C0 E0            [24]  164 	push	acc
      000051 08               [12]  165 	inc	r0
      000052 E6               [12]  166 	mov	a,@r0
      000053 C0 E0            [24]  167 	push	acc
      000055 08               [12]  168 	inc	r0
      000056 E6               [12]  169 	mov	a,@r0
      000057 C0 E0            [24]  170 	push	acc
      000059 08               [12]  171 	inc	r0
      00005A E6               [12]  172 	mov	a,@r0
      00005B C0 E0            [24]  173 	push	acc
      00005D 90 00 00         [24]  174 	mov	dptr,#0x0000
      000060 75 F0 80         [24]  175 	mov	b,#0x80
      000063 74 3F            [12]  176 	mov	a,#0x3f
      000065 12r00r00         [24]  177 	lcall	___fslt
      000068 AB 82            [24]  178 	mov	r3,dpl
      00006A E5 81            [12]  179 	mov	a,sp
      00006C 24 FC            [12]  180 	add	a,#0xfc
      00006E F5 81            [12]  181 	mov	sp,a
      000070 EB               [12]  182 	mov	a,r3
      000071 60 46            [24]  183 	jz	00102$
                                    184 ;	atanf.c:64: f=1.0/f;
      000073 E5*00            [12]  185 	mov	a,_bp
      000075 24 0D            [12]  186 	add	a,#0x0d
      000077 F8               [12]  187 	mov	r0,a
      000078 E6               [12]  188 	mov	a,@r0
      000079 C0 E0            [24]  189 	push	acc
      00007B 08               [12]  190 	inc	r0
      00007C E6               [12]  191 	mov	a,@r0
      00007D C0 E0            [24]  192 	push	acc
      00007F 08               [12]  193 	inc	r0
      000080 E6               [12]  194 	mov	a,@r0
      000081 C0 E0            [24]  195 	push	acc
      000083 08               [12]  196 	inc	r0
      000084 E6               [12]  197 	mov	a,@r0
      000085 C0 E0            [24]  198 	push	acc
      000087 90 00 00         [24]  199 	mov	dptr,#0x0000
      00008A 75 F0 80         [24]  200 	mov	b,#0x80
      00008D 74 3F            [12]  201 	mov	a,#0x3f
      00008F 12r00r00         [24]  202 	lcall	___fsdiv
      000092 AC 82            [24]  203 	mov	r4,dpl
      000094 AD 83            [24]  204 	mov	r5,dph
      000096 AE F0            [24]  205 	mov	r6,b
      000098 FF               [12]  206 	mov	r7,a
      000099 E5 81            [12]  207 	mov	a,sp
      00009B 24 FC            [12]  208 	add	a,#0xfc
      00009D F5 81            [12]  209 	mov	sp,a
      00009F E5*00            [12]  210 	mov	a,_bp
      0000A1 24 0D            [12]  211 	add	a,#0x0d
      0000A3 F8               [12]  212 	mov	r0,a
      0000A4 A6 04            [24]  213 	mov	@r0,ar4
      0000A6 08               [12]  214 	inc	r0
      0000A7 A6 05            [24]  215 	mov	@r0,ar5
      0000A9 08               [12]  216 	inc	r0
      0000AA A6 06            [24]  217 	mov	@r0,ar6
      0000AC 08               [12]  218 	inc	r0
      0000AD A6 07            [24]  219 	mov	@r0,ar7
                                    220 ;	atanf.c:65: n=2;
      0000AF E5*00            [12]  221 	mov	a,_bp
      0000B1 24 11            [12]  222 	add	a,#0x11
      0000B3 F8               [12]  223 	mov	r0,a
      0000B4 76 02            [12]  224 	mov	@r0,#0x02
      0000B6 08               [12]  225 	inc	r0
      0000B7 76 00            [12]  226 	mov	@r0,#0x00
      0000B9                        227 00102$:
                                    228 ;	atanf.c:67: if(f>K1)
      0000B9 E5*00            [12]  229 	mov	a,_bp
      0000BB 24 0D            [12]  230 	add	a,#0x0d
      0000BD F8               [12]  231 	mov	r0,a
      0000BE E6               [12]  232 	mov	a,@r0
      0000BF C0 E0            [24]  233 	push	acc
      0000C1 08               [12]  234 	inc	r0
      0000C2 E6               [12]  235 	mov	a,@r0
      0000C3 C0 E0            [24]  236 	push	acc
      0000C5 08               [12]  237 	inc	r0
      0000C6 E6               [12]  238 	mov	a,@r0
      0000C7 C0 E0            [24]  239 	push	acc
      0000C9 08               [12]  240 	inc	r0
      0000CA E6               [12]  241 	mov	a,@r0
      0000CB C0 E0            [24]  242 	push	acc
      0000CD 90 30 A3         [24]  243 	mov	dptr,#0x30a3
      0000D0 75 F0 89         [24]  244 	mov	b,#0x89
      0000D3 74 3E            [12]  245 	mov	a,#0x3e
      0000D5 12r00r00         [24]  246 	lcall	___fslt
      0000D8 AB 82            [24]  247 	mov	r3,dpl
      0000DA E5 81            [12]  248 	mov	a,sp
      0000DC 24 FC            [12]  249 	add	a,#0xfc
      0000DE F5 81            [12]  250 	mov	sp,a
      0000E0 EB               [12]  251 	mov	a,r3
      0000E1 70 03            [24]  252 	jnz	00140$
      0000E3 02r01rDB         [24]  253 	ljmp	00104$
      0000E6                        254 00140$:
                                    255 ;	atanf.c:69: f=((K2*f-1.0)+f)/(K3+f);
      0000E6 E5*00            [12]  256 	mov	a,_bp
      0000E8 24 0D            [12]  257 	add	a,#0x0d
      0000EA F8               [12]  258 	mov	r0,a
      0000EB E6               [12]  259 	mov	a,@r0
      0000EC C0 E0            [24]  260 	push	acc
      0000EE 08               [12]  261 	inc	r0
      0000EF E6               [12]  262 	mov	a,@r0
      0000F0 C0 E0            [24]  263 	push	acc
      0000F2 08               [12]  264 	inc	r0
      0000F3 E6               [12]  265 	mov	a,@r0
      0000F4 C0 E0            [24]  266 	push	acc
      0000F6 08               [12]  267 	inc	r0
      0000F7 E6               [12]  268 	mov	a,@r0
      0000F8 C0 E0            [24]  269 	push	acc
      0000FA 90 67 AF         [24]  270 	mov	dptr,#0x67af
      0000FD 75 F0 3B         [24]  271 	mov	b,#0x3b
      000100 74 3F            [12]  272 	mov	a,#0x3f
      000102 12r00r00         [24]  273 	lcall	___fsmul
      000105 AA 82            [24]  274 	mov	r2,dpl
      000107 AB 83            [24]  275 	mov	r3,dph
      000109 AE F0            [24]  276 	mov	r6,b
      00010B FF               [12]  277 	mov	r7,a
      00010C E5 81            [12]  278 	mov	a,sp
      00010E 24 FC            [12]  279 	add	a,#0xfc
      000110 F5 81            [12]  280 	mov	sp,a
      000112 E4               [12]  281 	clr	a
      000113 C0 E0            [24]  282 	push	acc
      000115 C0 E0            [24]  283 	push	acc
      000117 74 80            [12]  284 	mov	a,#0x80
      000119 C0 E0            [24]  285 	push	acc
      00011B 74 3F            [12]  286 	mov	a,#0x3f
      00011D C0 E0            [24]  287 	push	acc
      00011F 8A 82            [24]  288 	mov	dpl,r2
      000121 8B 83            [24]  289 	mov	dph,r3
      000123 8E F0            [24]  290 	mov	b,r6
      000125 EF               [12]  291 	mov	a,r7
      000126 12r00r00         [24]  292 	lcall	___fssub
      000129 AC 82            [24]  293 	mov	r4,dpl
      00012B AD 83            [24]  294 	mov	r5,dph
      00012D AE F0            [24]  295 	mov	r6,b
      00012F FF               [12]  296 	mov	r7,a
      000130 E5 81            [12]  297 	mov	a,sp
      000132 24 FC            [12]  298 	add	a,#0xfc
      000134 F5 81            [12]  299 	mov	sp,a
      000136 E5*00            [12]  300 	mov	a,_bp
      000138 24 0D            [12]  301 	add	a,#0x0d
      00013A F8               [12]  302 	mov	r0,a
      00013B E6               [12]  303 	mov	a,@r0
      00013C C0 E0            [24]  304 	push	acc
      00013E 08               [12]  305 	inc	r0
      00013F E6               [12]  306 	mov	a,@r0
      000140 C0 E0            [24]  307 	push	acc
      000142 08               [12]  308 	inc	r0
      000143 E6               [12]  309 	mov	a,@r0
      000144 C0 E0            [24]  310 	push	acc
      000146 08               [12]  311 	inc	r0
      000147 E6               [12]  312 	mov	a,@r0
      000148 C0 E0            [24]  313 	push	acc
      00014A 8C 82            [24]  314 	mov	dpl,r4
      00014C 8D 83            [24]  315 	mov	dph,r5
      00014E 8E F0            [24]  316 	mov	b,r6
      000150 EF               [12]  317 	mov	a,r7
      000151 12r00r00         [24]  318 	lcall	___fsadd
      000154 C8               [12]  319 	xch	a,r0
      000155 E5*00            [12]  320 	mov	a,_bp
      000157 24 05            [12]  321 	add	a,#0x05
      000159 C8               [12]  322 	xch	a,r0
      00015A A6 82            [24]  323 	mov	@r0,dpl
      00015C 08               [12]  324 	inc	r0
      00015D A6 83            [24]  325 	mov	@r0,dph
      00015F 08               [12]  326 	inc	r0
      000160 A6 F0            [24]  327 	mov	@r0,b
      000162 08               [12]  328 	inc	r0
      000163 F6               [12]  329 	mov	@r0,a
      000164 E5 81            [12]  330 	mov	a,sp
      000166 24 FC            [12]  331 	add	a,#0xfc
      000168 F5 81            [12]  332 	mov	sp,a
      00016A 74 D7            [12]  333 	mov	a,#0xd7
      00016C C0 E0            [24]  334 	push	acc
      00016E 74 B3            [12]  335 	mov	a,#0xb3
      000170 C0 E0            [24]  336 	push	acc
      000172 74 DD            [12]  337 	mov	a,#0xdd
      000174 C0 E0            [24]  338 	push	acc
      000176 74 3F            [12]  339 	mov	a,#0x3f
      000178 C0 E0            [24]  340 	push	acc
      00017A E5*00            [12]  341 	mov	a,_bp
      00017C 24 0D            [12]  342 	add	a,#0x0d
      00017E F8               [12]  343 	mov	r0,a
      00017F 86 82            [24]  344 	mov	dpl,@r0
      000181 08               [12]  345 	inc	r0
      000182 86 83            [24]  346 	mov	dph,@r0
      000184 08               [12]  347 	inc	r0
      000185 86 F0            [24]  348 	mov	b,@r0
      000187 08               [12]  349 	inc	r0
      000188 E6               [12]  350 	mov	a,@r0
      000189 12r00r00         [24]  351 	lcall	___fsadd
      00018C AA 82            [24]  352 	mov	r2,dpl
      00018E AB 83            [24]  353 	mov	r3,dph
      000190 AE F0            [24]  354 	mov	r6,b
      000192 FF               [12]  355 	mov	r7,a
      000193 E5 81            [12]  356 	mov	a,sp
      000195 24 FC            [12]  357 	add	a,#0xfc
      000197 F5 81            [12]  358 	mov	sp,a
      000199 C0 02            [24]  359 	push	ar2
      00019B C0 03            [24]  360 	push	ar3
      00019D C0 06            [24]  361 	push	ar6
      00019F C0 07            [24]  362 	push	ar7
      0001A1 E5*00            [12]  363 	mov	a,_bp
      0001A3 24 05            [12]  364 	add	a,#0x05
      0001A5 F8               [12]  365 	mov	r0,a
      0001A6 86 82            [24]  366 	mov	dpl,@r0
      0001A8 08               [12]  367 	inc	r0
      0001A9 86 83            [24]  368 	mov	dph,@r0
      0001AB 08               [12]  369 	inc	r0
      0001AC 86 F0            [24]  370 	mov	b,@r0
      0001AE 08               [12]  371 	inc	r0
      0001AF E6               [12]  372 	mov	a,@r0
      0001B0 12r00r00         [24]  373 	lcall	___fsdiv
      0001B3 AC 82            [24]  374 	mov	r4,dpl
      0001B5 AD 83            [24]  375 	mov	r5,dph
      0001B7 AE F0            [24]  376 	mov	r6,b
      0001B9 FF               [12]  377 	mov	r7,a
      0001BA E5 81            [12]  378 	mov	a,sp
      0001BC 24 FC            [12]  379 	add	a,#0xfc
      0001BE F5 81            [12]  380 	mov	sp,a
      0001C0 E5*00            [12]  381 	mov	a,_bp
      0001C2 24 0D            [12]  382 	add	a,#0x0d
      0001C4 F8               [12]  383 	mov	r0,a
      0001C5 A6 04            [24]  384 	mov	@r0,ar4
      0001C7 08               [12]  385 	inc	r0
      0001C8 A6 05            [24]  386 	mov	@r0,ar5
      0001CA 08               [12]  387 	inc	r0
      0001CB A6 06            [24]  388 	mov	@r0,ar6
      0001CD 08               [12]  389 	inc	r0
      0001CE A6 07            [24]  390 	mov	@r0,ar7
                                    391 ;	atanf.c:73: n++;
      0001D0 E5*00            [12]  392 	mov	a,_bp
      0001D2 24 11            [12]  393 	add	a,#0x11
      0001D4 F8               [12]  394 	mov	r0,a
      0001D5 06               [12]  395 	inc	@r0
      0001D6 B6 00 02         [24]  396 	cjne	@r0,#0x00,00141$
      0001D9 08               [12]  397 	inc	r0
      0001DA 06               [12]  398 	inc	@r0
      0001DB                        399 00141$:
      0001DB                        400 00104$:
                                    401 ;	atanf.c:75: if(fabsf(f)<EPS) r=f;
      0001DB E5*00            [12]  402 	mov	a,_bp
      0001DD 24 0D            [12]  403 	add	a,#0x0d
      0001DF F8               [12]  404 	mov	r0,a
      0001E0 86 82            [24]  405 	mov	dpl,@r0
      0001E2 08               [12]  406 	inc	r0
      0001E3 86 83            [24]  407 	mov	dph,@r0
      0001E5 08               [12]  408 	inc	r0
      0001E6 86 F0            [24]  409 	mov	b,@r0
      0001E8 08               [12]  410 	inc	r0
      0001E9 E6               [12]  411 	mov	a,@r0
      0001EA 78r00            [12]  412 	mov	r0,#_fabsf
      0001EC 79s00            [12]  413 	mov	r1,#(_fabsf >> 8)
      0001EE 7As00            [12]  414 	mov	r2,#(_fabsf >> 16)
      0001F0 12r00r00         [24]  415 	lcall	__sdcc_banked_call
      0001F3 AC 82            [24]  416 	mov	r4,dpl
      0001F5 AD 83            [24]  417 	mov	r5,dph
      0001F7 AE F0            [24]  418 	mov	r6,b
      0001F9 FF               [12]  419 	mov	r7,a
      0001FA E4               [12]  420 	clr	a
      0001FB C0 E0            [24]  421 	push	acc
      0001FD C0 E0            [24]  422 	push	acc
      0001FF 74 80            [12]  423 	mov	a,#0x80
      000201 C0 E0            [24]  424 	push	acc
      000203 74 39            [12]  425 	mov	a,#0x39
      000205 C0 E0            [24]  426 	push	acc
      000207 8C 82            [24]  427 	mov	dpl,r4
      000209 8D 83            [24]  428 	mov	dph,r5
      00020B 8E F0            [24]  429 	mov	b,r6
      00020D EF               [12]  430 	mov	a,r7
      00020E 12r00r00         [24]  431 	lcall	___fslt
      000211 AF 82            [24]  432 	mov	r7,dpl
      000213 E5 81            [12]  433 	mov	a,sp
      000215 24 FC            [12]  434 	add	a,#0xfc
      000217 F5 81            [12]  435 	mov	sp,a
      000219 EF               [12]  436 	mov	a,r7
      00021A 60 1B            [24]  437 	jz	00106$
      00021C E5*00            [12]  438 	mov	a,_bp
      00021E 24 0D            [12]  439 	add	a,#0x0d
      000220 F8               [12]  440 	mov	r0,a
      000221 E5*00            [12]  441 	mov	a,_bp
      000223 24 09            [12]  442 	add	a,#0x09
      000225 F9               [12]  443 	mov	r1,a
      000226 E6               [12]  444 	mov	a,@r0
      000227 F7               [12]  445 	mov	@r1,a
      000228 08               [12]  446 	inc	r0
      000229 E6               [12]  447 	mov	a,@r0
      00022A 09               [12]  448 	inc	r1
      00022B F7               [12]  449 	mov	@r1,a
      00022C 08               [12]  450 	inc	r0
      00022D E6               [12]  451 	mov	a,@r0
      00022E 09               [12]  452 	inc	r1
      00022F F7               [12]  453 	mov	@r1,a
      000230 08               [12]  454 	inc	r0
      000231 E6               [12]  455 	mov	a,@r0
      000232 09               [12]  456 	inc	r1
      000233 F7               [12]  457 	mov	@r1,a
      000234 02r03rD5         [24]  458 	ljmp	00107$
      000237                        459 00106$:
                                    460 ;	atanf.c:78: g=f*f;
      000237 E5*00            [12]  461 	mov	a,_bp
      000239 24 0D            [12]  462 	add	a,#0x0d
      00023B F8               [12]  463 	mov	r0,a
      00023C E6               [12]  464 	mov	a,@r0
      00023D C0 E0            [24]  465 	push	acc
      00023F 08               [12]  466 	inc	r0
      000240 E6               [12]  467 	mov	a,@r0
      000241 C0 E0            [24]  468 	push	acc
      000243 08               [12]  469 	inc	r0
      000244 E6               [12]  470 	mov	a,@r0
      000245 C0 E0            [24]  471 	push	acc
      000247 08               [12]  472 	inc	r0
      000248 E6               [12]  473 	mov	a,@r0
      000249 C0 E0            [24]  474 	push	acc
      00024B E5*00            [12]  475 	mov	a,_bp
      00024D 24 0D            [12]  476 	add	a,#0x0d
      00024F F8               [12]  477 	mov	r0,a
      000250 86 82            [24]  478 	mov	dpl,@r0
      000252 08               [12]  479 	inc	r0
      000253 86 83            [24]  480 	mov	dph,@r0
      000255 08               [12]  481 	inc	r0
      000256 86 F0            [24]  482 	mov	b,@r0
      000258 08               [12]  483 	inc	r0
      000259 E6               [12]  484 	mov	a,@r0
      00025A 12r00r00         [24]  485 	lcall	___fsmul
      00025D AF 82            [24]  486 	mov	r7,dpl
      00025F AE 83            [24]  487 	mov	r6,dph
      000261 AD F0            [24]  488 	mov	r5,b
      000263 FC               [12]  489 	mov	r4,a
      000264 E5 81            [12]  490 	mov	a,sp
      000266 24 FC            [12]  491 	add	a,#0xfc
      000268 F5 81            [12]  492 	mov	sp,a
                                    493 ;	atanf.c:79: r=f+P(g,f)/Q(g);
      00026A C0 07            [24]  494 	push	ar7
      00026C C0 06            [24]  495 	push	ar6
      00026E C0 05            [24]  496 	push	ar5
      000270 C0 04            [24]  497 	push	ar4
      000272 C0 07            [24]  498 	push	ar7
      000274 C0 06            [24]  499 	push	ar6
      000276 C0 05            [24]  500 	push	ar5
      000278 C0 04            [24]  501 	push	ar4
      00027A 90 86 91         [24]  502 	mov	dptr,#0x8691
      00027D 75 F0 50         [24]  503 	mov	b,#0x50
      000280 74 BD            [12]  504 	mov	a,#0xbd
      000282 12r00r00         [24]  505 	lcall	___fsmul
      000285 C8               [12]  506 	xch	a,r0
      000286 E5*00            [12]  507 	mov	a,_bp
      000288 24 05            [12]  508 	add	a,#0x05
      00028A C8               [12]  509 	xch	a,r0
      00028B A6 82            [24]  510 	mov	@r0,dpl
      00028D 08               [12]  511 	inc	r0
      00028E A6 83            [24]  512 	mov	@r0,dph
      000290 08               [12]  513 	inc	r0
      000291 A6 F0            [24]  514 	mov	@r0,b
      000293 08               [12]  515 	inc	r0
      000294 F6               [12]  516 	mov	@r0,a
      000295 E5 81            [12]  517 	mov	a,sp
      000297 24 FC            [12]  518 	add	a,#0xfc
      000299 F5 81            [12]  519 	mov	sp,a
      00029B 74 F6            [12]  520 	mov	a,#0xf6
      00029D C0 E0            [24]  521 	push	acc
      00029F 74 10            [12]  522 	mov	a,#0x10
      0002A1 C0 E0            [24]  523 	push	acc
      0002A3 74 F1            [12]  524 	mov	a,#0xf1
      0002A5 C0 E0            [24]  525 	push	acc
      0002A7 74 BE            [12]  526 	mov	a,#0xbe
      0002A9 C0 E0            [24]  527 	push	acc
      0002AB E5*00            [12]  528 	mov	a,_bp
      0002AD 24 05            [12]  529 	add	a,#0x05
      0002AF F8               [12]  530 	mov	r0,a
      0002B0 86 82            [24]  531 	mov	dpl,@r0
      0002B2 08               [12]  532 	inc	r0
      0002B3 86 83            [24]  533 	mov	dph,@r0
      0002B5 08               [12]  534 	inc	r0
      0002B6 86 F0            [24]  535 	mov	b,@r0
      0002B8 08               [12]  536 	inc	r0
      0002B9 E6               [12]  537 	mov	a,@r0
      0002BA 12r00r00         [24]  538 	lcall	___fsadd
      0002BD C8               [12]  539 	xch	a,r0
      0002BE E5*00            [12]  540 	mov	a,_bp
      0002C0 24 05            [12]  541 	add	a,#0x05
      0002C2 C8               [12]  542 	xch	a,r0
      0002C3 A6 82            [24]  543 	mov	@r0,dpl
      0002C5 08               [12]  544 	inc	r0
      0002C6 A6 83            [24]  545 	mov	@r0,dph
      0002C8 08               [12]  546 	inc	r0
      0002C9 A6 F0            [24]  547 	mov	@r0,b
      0002CB 08               [12]  548 	inc	r0
      0002CC F6               [12]  549 	mov	@r0,a
      0002CD E5 81            [12]  550 	mov	a,sp
      0002CF 24 FC            [12]  551 	add	a,#0xfc
      0002D1 F5 81            [12]  552 	mov	sp,a
      0002D3 D0 04            [24]  553 	pop	ar4
      0002D5 D0 05            [24]  554 	pop	ar5
      0002D7 D0 06            [24]  555 	pop	ar6
      0002D9 D0 07            [24]  556 	pop	ar7
      0002DB C0 07            [24]  557 	push	ar7
      0002DD C0 06            [24]  558 	push	ar6
      0002DF C0 05            [24]  559 	push	ar5
      0002E1 C0 04            [24]  560 	push	ar4
      0002E3 C0 07            [24]  561 	push	ar7
      0002E5 C0 06            [24]  562 	push	ar6
      0002E7 C0 05            [24]  563 	push	ar5
      0002E9 C0 04            [24]  564 	push	ar4
      0002EB E5*00            [12]  565 	mov	a,_bp
      0002ED 24 05            [12]  566 	add	a,#0x05
      0002EF F8               [12]  567 	mov	r0,a
      0002F0 86 82            [24]  568 	mov	dpl,@r0
      0002F2 08               [12]  569 	inc	r0
      0002F3 86 83            [24]  570 	mov	dph,@r0
      0002F5 08               [12]  571 	inc	r0
      0002F6 86 F0            [24]  572 	mov	b,@r0
      0002F8 08               [12]  573 	inc	r0
      0002F9 E6               [12]  574 	mov	a,@r0
      0002FA 12r00r00         [24]  575 	lcall	___fsmul
      0002FD C8               [12]  576 	xch	a,r0
      0002FE E5*00            [12]  577 	mov	a,_bp
      000300 24 05            [12]  578 	add	a,#0x05
      000302 C8               [12]  579 	xch	a,r0
      000303 A6 82            [24]  580 	mov	@r0,dpl
      000305 08               [12]  581 	inc	r0
      000306 A6 83            [24]  582 	mov	@r0,dph
      000308 08               [12]  583 	inc	r0
      000309 A6 F0            [24]  584 	mov	@r0,b
      00030B 08               [12]  585 	inc	r0
      00030C F6               [12]  586 	mov	@r0,a
      00030D E5 81            [12]  587 	mov	a,sp
      00030F 24 FC            [12]  588 	add	a,#0xfc
      000311 F5 81            [12]  589 	mov	sp,a
      000313 E5*00            [12]  590 	mov	a,_bp
      000315 24 0D            [12]  591 	add	a,#0x0d
      000317 F8               [12]  592 	mov	r0,a
      000318 E6               [12]  593 	mov	a,@r0
      000319 C0 E0            [24]  594 	push	acc
      00031B 08               [12]  595 	inc	r0
      00031C E6               [12]  596 	mov	a,@r0
      00031D C0 E0            [24]  597 	push	acc
      00031F 08               [12]  598 	inc	r0
      000320 E6               [12]  599 	mov	a,@r0
      000321 C0 E0            [24]  600 	push	acc
      000323 08               [12]  601 	inc	r0
      000324 E6               [12]  602 	mov	a,@r0
      000325 C0 E0            [24]  603 	push	acc
      000327 E5*00            [12]  604 	mov	a,_bp
      000329 24 05            [12]  605 	add	a,#0x05
      00032B F8               [12]  606 	mov	r0,a
      00032C 86 82            [24]  607 	mov	dpl,@r0
      00032E 08               [12]  608 	inc	r0
      00032F 86 83            [24]  609 	mov	dph,@r0
      000331 08               [12]  610 	inc	r0
      000332 86 F0            [24]  611 	mov	b,@r0
      000334 08               [12]  612 	inc	r0
      000335 E6               [12]  613 	mov	a,@r0
      000336 12r00r00         [24]  614 	lcall	___fsmul
      000339 C8               [12]  615 	xch	a,r0
      00033A E5*00            [12]  616 	mov	a,_bp
      00033C 24 05            [12]  617 	add	a,#0x05
      00033E C8               [12]  618 	xch	a,r0
      00033F A6 82            [24]  619 	mov	@r0,dpl
      000341 08               [12]  620 	inc	r0
      000342 A6 83            [24]  621 	mov	@r0,dph
      000344 08               [12]  622 	inc	r0
      000345 A6 F0            [24]  623 	mov	@r0,b
      000347 08               [12]  624 	inc	r0
      000348 F6               [12]  625 	mov	@r0,a
      000349 E5 81            [12]  626 	mov	a,sp
      00034B 24 FC            [12]  627 	add	a,#0xfc
      00034D F5 81            [12]  628 	mov	sp,a
      00034F D0 04            [24]  629 	pop	ar4
      000351 D0 05            [24]  630 	pop	ar5
      000353 D0 06            [24]  631 	pop	ar6
      000355 D0 07            [24]  632 	pop	ar7
      000357 74 D3            [12]  633 	mov	a,#0xd3
      000359 C0 E0            [24]  634 	push	acc
      00035B 74 CC            [12]  635 	mov	a,#0xcc
      00035D C0 E0            [24]  636 	push	acc
      00035F 74 B4            [12]  637 	mov	a,#0xb4
      000361 C0 E0            [24]  638 	push	acc
      000363 74 3F            [12]  639 	mov	a,#0x3f
      000365 C0 E0            [24]  640 	push	acc
      000367 8F 82            [24]  641 	mov	dpl,r7
      000369 8E 83            [24]  642 	mov	dph,r6
      00036B 8D F0            [24]  643 	mov	b,r5
      00036D EC               [12]  644 	mov	a,r4
      00036E 12r00r00         [24]  645 	lcall	___fsadd
      000371 AF 82            [24]  646 	mov	r7,dpl
      000373 AE 83            [24]  647 	mov	r6,dph
      000375 AD F0            [24]  648 	mov	r5,b
      000377 FC               [12]  649 	mov	r4,a
      000378 E5 81            [12]  650 	mov	a,sp
      00037A 24 FC            [12]  651 	add	a,#0xfc
      00037C F5 81            [12]  652 	mov	sp,a
      00037E C0 07            [24]  653 	push	ar7
      000380 C0 06            [24]  654 	push	ar6
      000382 C0 05            [24]  655 	push	ar5
      000384 C0 04            [24]  656 	push	ar4
      000386 E5*00            [12]  657 	mov	a,_bp
      000388 24 05            [12]  658 	add	a,#0x05
      00038A F8               [12]  659 	mov	r0,a
      00038B 86 82            [24]  660 	mov	dpl,@r0
      00038D 08               [12]  661 	inc	r0
      00038E 86 83            [24]  662 	mov	dph,@r0
      000390 08               [12]  663 	inc	r0
      000391 86 F0            [24]  664 	mov	b,@r0
      000393 08               [12]  665 	inc	r0
      000394 E6               [12]  666 	mov	a,@r0
      000395 12r00r00         [24]  667 	lcall	___fsdiv
      000398 AF 82            [24]  668 	mov	r7,dpl
      00039A AE 83            [24]  669 	mov	r6,dph
      00039C AD F0            [24]  670 	mov	r5,b
      00039E FC               [12]  671 	mov	r4,a
      00039F E5 81            [12]  672 	mov	a,sp
      0003A1 24 FC            [12]  673 	add	a,#0xfc
      0003A3 F5 81            [12]  674 	mov	sp,a
      0003A5 C0 07            [24]  675 	push	ar7
      0003A7 C0 06            [24]  676 	push	ar6
      0003A9 C0 05            [24]  677 	push	ar5
      0003AB C0 04            [24]  678 	push	ar4
      0003AD E5*00            [12]  679 	mov	a,_bp
      0003AF 24 0D            [12]  680 	add	a,#0x0d
      0003B1 F8               [12]  681 	mov	r0,a
      0003B2 86 82            [24]  682 	mov	dpl,@r0
      0003B4 08               [12]  683 	inc	r0
      0003B5 86 83            [24]  684 	mov	dph,@r0
      0003B7 08               [12]  685 	inc	r0
      0003B8 86 F0            [24]  686 	mov	b,@r0
      0003BA 08               [12]  687 	inc	r0
      0003BB E6               [12]  688 	mov	a,@r0
      0003BC 12r00r00         [24]  689 	lcall	___fsadd
      0003BF C8               [12]  690 	xch	a,r0
      0003C0 E5*00            [12]  691 	mov	a,_bp
      0003C2 24 09            [12]  692 	add	a,#0x09
      0003C4 C8               [12]  693 	xch	a,r0
      0003C5 A6 82            [24]  694 	mov	@r0,dpl
      0003C7 08               [12]  695 	inc	r0
      0003C8 A6 83            [24]  696 	mov	@r0,dph
      0003CA 08               [12]  697 	inc	r0
      0003CB A6 F0            [24]  698 	mov	@r0,b
      0003CD 08               [12]  699 	inc	r0
      0003CE F6               [12]  700 	mov	@r0,a
      0003CF E5 81            [12]  701 	mov	a,sp
      0003D1 24 FC            [12]  702 	add	a,#0xfc
      0003D3 F5 81            [12]  703 	mov	sp,a
      0003D5                        704 00107$:
                                    705 ;	atanf.c:81: if(n>1) r=-r;
      0003D5 E5*00            [12]  706 	mov	a,_bp
      0003D7 24 11            [12]  707 	add	a,#0x11
      0003D9 F8               [12]  708 	mov	r0,a
      0003DA C3               [12]  709 	clr	c
      0003DB 74 01            [12]  710 	mov	a,#0x01
      0003DD 96               [12]  711 	subb	a,@r0
      0003DE 74 80            [12]  712 	mov	a,#(0x00 ^ 0x80)
      0003E0 08               [12]  713 	inc	r0
      0003E1 86 F0            [24]  714 	mov	b,@r0
      0003E3 63 F0 80         [24]  715 	xrl	b,#0x80
      0003E6 95 F0            [12]  716 	subb	a,b
      0003E8 50 0F            [24]  717 	jnc	00109$
      0003EA E5*00            [12]  718 	mov	a,_bp
      0003EC 24 09            [12]  719 	add	a,#0x09
      0003EE F8               [12]  720 	mov	r0,a
      0003EF E6               [12]  721 	mov  a,@r0
      0003F0 08               [12]  722 	inc	r0
      0003F1 E6               [12]  723 	mov  a,@r0
      0003F2 08               [12]  724 	inc	r0
      0003F3 E6               [12]  725 	mov  a,@r0
      0003F4 08               [12]  726 	inc	r0
      0003F5 E6               [12]  727 	mov	a,@r0
      0003F6 B2 E7            [12]  728 	cpl	acc.7
      0003F8 F6               [12]  729 	mov	@r0,a
      0003F9                        730 00109$:
                                    731 ;	atanf.c:82: r+=a[n];
      0003F9 E5*00            [12]  732 	mov	a,_bp
      0003FB 24 11            [12]  733 	add	a,#0x11
      0003FD F8               [12]  734 	mov	r0,a
      0003FE E6               [12]  735 	mov	a,@r0
      0003FF 26               [12]  736 	add	a,@r0
      000400 FA               [12]  737 	mov	r2,a
      000401 08               [12]  738 	inc	r0
      000402 E6               [12]  739 	mov	a,@r0
      000403 33               [12]  740 	rlc	a
      000404 FB               [12]  741 	mov	r3,a
      000405 EA               [12]  742 	mov	a,r2
      000406 2A               [12]  743 	add	a,r2
      000407 FA               [12]  744 	mov	r2,a
      000408 EB               [12]  745 	mov	a,r3
      000409 33               [12]  746 	rlc	a
      00040A FB               [12]  747 	mov	r3,a
      00040B EA               [12]  748 	mov	a,r2
      00040C 24r00            [12]  749 	add	a,#_atanf_a_65536_26
      00040E F5 82            [12]  750 	mov	dpl,a
      000410 EB               [12]  751 	mov	a,r3
      000411 34s00            [12]  752 	addc	a,#(_atanf_a_65536_26 >> 8)
      000413 F5 83            [12]  753 	mov	dph,a
      000415 E4               [12]  754 	clr	a
      000416 93               [24]  755 	movc	a,@a+dptr
      000417 FA               [12]  756 	mov	r2,a
      000418 A3               [24]  757 	inc	dptr
      000419 E4               [12]  758 	clr	a
      00041A 93               [24]  759 	movc	a,@a+dptr
      00041B FB               [12]  760 	mov	r3,a
      00041C A3               [24]  761 	inc	dptr
      00041D E4               [12]  762 	clr	a
      00041E 93               [24]  763 	movc	a,@a+dptr
      00041F FE               [12]  764 	mov	r6,a
      000420 A3               [24]  765 	inc	dptr
      000421 E4               [12]  766 	clr	a
      000422 93               [24]  767 	movc	a,@a+dptr
      000423 FF               [12]  768 	mov	r7,a
      000424 C0 02            [24]  769 	push	ar2
      000426 C0 03            [24]  770 	push	ar3
      000428 C0 06            [24]  771 	push	ar6
      00042A C0 07            [24]  772 	push	ar7
      00042C E5*00            [12]  773 	mov	a,_bp
      00042E 24 09            [12]  774 	add	a,#0x09
      000430 F8               [12]  775 	mov	r0,a
      000431 86 82            [24]  776 	mov	dpl,@r0
      000433 08               [12]  777 	inc	r0
      000434 86 83            [24]  778 	mov	dph,@r0
      000436 08               [12]  779 	inc	r0
      000437 86 F0            [24]  780 	mov	b,@r0
      000439 08               [12]  781 	inc	r0
      00043A E6               [12]  782 	mov	a,@r0
      00043B 12r00r00         [24]  783 	lcall	___fsadd
      00043E AC 82            [24]  784 	mov	r4,dpl
      000440 AD 83            [24]  785 	mov	r5,dph
      000442 AE F0            [24]  786 	mov	r6,b
      000444 FF               [12]  787 	mov	r7,a
      000445 E5 81            [12]  788 	mov	a,sp
      000447 24 FC            [12]  789 	add	a,#0xfc
      000449 F5 81            [12]  790 	mov	sp,a
                                    791 ;	atanf.c:83: if(x<0.0) r=-r;
      00044B C0 07            [24]  792 	push	ar7
      00044D C0 06            [24]  793 	push	ar6
      00044F C0 05            [24]  794 	push	ar5
      000451 C0 04            [24]  795 	push	ar4
      000453 E4               [12]  796 	clr	a
      000454 C0 E0            [24]  797 	push	acc
      000456 C0 E0            [24]  798 	push	acc
      000458 C0 E0            [24]  799 	push	acc
      00045A C0 E0            [24]  800 	push	acc
      00045C A8*00            [24]  801 	mov	r0,_bp
      00045E 08               [12]  802 	inc	r0
      00045F 86 82            [24]  803 	mov	dpl,@r0
      000461 08               [12]  804 	inc	r0
      000462 86 83            [24]  805 	mov	dph,@r0
      000464 08               [12]  806 	inc	r0
      000465 86 F0            [24]  807 	mov	b,@r0
      000467 08               [12]  808 	inc	r0
      000468 E6               [12]  809 	mov	a,@r0
      000469 12r00r00         [24]  810 	lcall	___fslt
      00046C AB 82            [24]  811 	mov	r3,dpl
      00046E E5 81            [12]  812 	mov	a,sp
      000470 24 FC            [12]  813 	add	a,#0xfc
      000472 F5 81            [12]  814 	mov	sp,a
      000474 D0 04            [24]  815 	pop	ar4
      000476 D0 05            [24]  816 	pop	ar5
      000478 D0 06            [24]  817 	pop	ar6
      00047A D0 07            [24]  818 	pop	ar7
      00047C EB               [12]  819 	mov	a,r3
      00047D 60 04            [24]  820 	jz	00111$
      00047F EF               [12]  821 	mov	a,r7
      000480 B2 E7            [12]  822 	cpl	acc.7
      000482 FF               [12]  823 	mov	r7,a
      000483                        824 00111$:
                                    825 ;	atanf.c:84: return r;
      000483 8C 82            [24]  826 	mov	dpl,r4
      000485 8D 83            [24]  827 	mov	dph,r5
      000487 8E F0            [24]  828 	mov	b,r6
      000489 EF               [12]  829 	mov	a,r7
                                    830 ;	atanf.c:85: }
      00048A 85*00 81         [24]  831 	mov	sp,_bp
      00048D D0*00            [24]  832 	pop	_bp
      00048F 02r00r00         [24]  833 	ljmp	__sdcc_banked_ret
                                    834 	.area CSEG    (CODE)
                                    835 	.area CONST   (CODE)
      000000                        836 _atanf_a_65536_26:
      000000 00 00 00 00            837 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000004 92 0A 06 3F            838 	.byte #0x92, #0x0a, #0x06, #0x3f	;  5.235988e-01
      000008 DB 0F C9 3F            839 	.byte #0xdb, #0x0f, #0xc9, #0x3f	;  1.570796e+00
      00000C 92 0A 86 3F            840 	.byte #0x92, #0x0a, #0x86, #0x3f	;  1.047198e+00
                                    841 	.area XINIT   (CODE)
                                    842 	.area CABS    (ABS,CODE)
