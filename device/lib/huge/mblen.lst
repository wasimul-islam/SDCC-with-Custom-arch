                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mblen
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mblen_PARM_2
                                     12 	.globl _mblen
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
      000000                         56 _mblen_PARM_2:
      000000                         57 	.ds 2
      000002                         58 _mblen_s_65536_39:
      000002                         59 	.ds 3
      000005                         60 _mblen_c_65536_40:
      000005                         61 	.ds 1
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; initialized external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function 'mblen'
                                     98 ;------------------------------------------------------------
                                     99 ;n                         Allocated with name '_mblen_PARM_2'
                                    100 ;s                         Allocated with name '_mblen_s_65536_39'
                                    101 ;m                         Allocated with name '_mblen_m_65536_40'
                                    102 ;c                         Allocated with name '_mblen_c_65536_40'
                                    103 ;------------------------------------------------------------
                                    104 ;	mblen.c:31: int mblen(const char *s, size_t n)
                                    105 ;	-----------------------------------------
                                    106 ;	 function mblen
                                    107 ;	-----------------------------------------
      000000                        108 _mblen:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 AF F0            [24]  117 	mov	r7,b
      000002 AE 83            [24]  118 	mov	r6,dph
      000004 E5 82            [12]  119 	mov	a,dpl
      000006 90r00r02         [24]  120 	mov	dptr,#_mblen_s_65536_39
      000009 F0               [24]  121 	movx	@dptr,a
      00000A EE               [12]  122 	mov	a,r6
      00000B A3               [24]  123 	inc	dptr
      00000C F0               [24]  124 	movx	@dptr,a
      00000D EF               [12]  125 	mov	a,r7
      00000E A3               [24]  126 	inc	dptr
      00000F F0               [24]  127 	movx	@dptr,a
                                    128 ;	mblen.c:36: if(!s)
      000010 90r00r02         [24]  129 	mov	dptr,#_mblen_s_65536_39
      000013 E0               [24]  130 	movx	a,@dptr
      000014 FD               [12]  131 	mov	r5,a
      000015 A3               [24]  132 	inc	dptr
      000016 E0               [24]  133 	movx	a,@dptr
      000017 FE               [12]  134 	mov	r6,a
      000018 A3               [24]  135 	inc	dptr
      000019 E0               [24]  136 	movx	a,@dptr
      00001A FF               [12]  137 	mov	r7,a
      00001B 90r00r02         [24]  138 	mov	dptr,#_mblen_s_65536_39
      00001E E0               [24]  139 	movx	a,@dptr
      00001F F5 F0            [12]  140 	mov	b,a
      000021 A3               [24]  141 	inc	dptr
      000022 E0               [24]  142 	movx	a,@dptr
      000023 45 F0            [12]  143 	orl	a,b
      000025 70 06            [24]  144 	jnz	00102$
                                    145 ;	mblen.c:37: return(0);
      000027 90 00 00         [24]  146 	mov	dptr,#0x0000
      00002A 02r00r00         [24]  147 	ljmp	__sdcc_banked_ret
      00002D                        148 00102$:
                                    149 ;	mblen.c:39: if(!n)
      00002D 90r00r00         [24]  150 	mov	dptr,#_mblen_PARM_2
      000030 E0               [24]  151 	movx	a,@dptr
      000031 FB               [12]  152 	mov	r3,a
      000032 A3               [24]  153 	inc	dptr
      000033 E0               [24]  154 	movx	a,@dptr
      000034 FC               [12]  155 	mov	r4,a
      000035 90r00r00         [24]  156 	mov	dptr,#_mblen_PARM_2
      000038 E0               [24]  157 	movx	a,@dptr
      000039 F5 F0            [12]  158 	mov	b,a
      00003B A3               [24]  159 	inc	dptr
      00003C E0               [24]  160 	movx	a,@dptr
      00003D 45 F0            [12]  161 	orl	a,b
      00003F 70 06            [24]  162 	jnz	00104$
                                    163 ;	mblen.c:40: return(-1);
      000041 90 FF FF         [24]  164 	mov	dptr,#0xffff
      000044 02r00r00         [24]  165 	ljmp	__sdcc_banked_ret
      000047                        166 00104$:
                                    167 ;	mblen.c:42: c = *s;
      000047 8D 82            [24]  168 	mov	dpl,r5
      000049 8E 83            [24]  169 	mov	dph,r6
      00004B 8F F0            [24]  170 	mov	b,r7
      00004D 12r00r00         [24]  171 	lcall	__gptrget
      000050 FF               [12]  172 	mov	r7,a
      000051 90r00r05         [24]  173 	mov	dptr,#_mblen_c_65536_40
      000054 F0               [24]  174 	movx	@dptr,a
                                    175 ;	mblen.c:44: if(!c)
      000055 EF               [12]  176 	mov	a,r7
      000056 70 06            [24]  177 	jnz	00106$
                                    178 ;	mblen.c:45: return(0);
      000058 90 00 00         [24]  179 	mov	dptr,#0x0000
      00005B 02r00r00         [24]  180 	ljmp	__sdcc_banked_ret
      00005E                        181 00106$:
                                    182 ;	mblen.c:47: if(c <= 0x7f)
      00005E EF               [12]  183 	mov	a,r7
      00005F 24 80            [12]  184 	add	a,#0xff - 0x7f
      000061 40 05            [24]  185 	jc	00126$
                                    186 ;	mblen.c:48: return(1);
      000063 90 00 01         [24]  187 	mov	dptr,#0x0001
                                    188 ;	mblen.c:50: while(c & 0x80)
      000066 80 63            [24]  189 	sjmp	00119$
      000068                        190 00126$:
      000068 7F 00            [12]  191 	mov	r7,#0x00
      00006A                        192 00109$:
      00006A 90r00r05         [24]  193 	mov	dptr,#_mblen_c_65536_40
      00006D E0               [24]  194 	movx	a,@dptr
      00006E FE               [12]  195 	mov	r6,a
      00006F 30 E7 0A         [24]  196 	jnb	acc.7,00111$
                                    197 ;	mblen.c:52: c <<= 1;
      000072 EE               [12]  198 	mov	a,r6
      000073 2E               [12]  199 	add	a,r6
      000074 FE               [12]  200 	mov	r6,a
      000075 90r00r05         [24]  201 	mov	dptr,#_mblen_c_65536_40
      000078 F0               [24]  202 	movx	@dptr,a
                                    203 ;	mblen.c:53: m++;
      000079 0F               [12]  204 	inc	r7
      00007A 80 EE            [24]  205 	sjmp	00109$
      00007C                        206 00111$:
                                    207 ;	mblen.c:56: if(m > n)
      00007C 8F 05            [24]  208 	mov	ar5,r7
      00007E 7E 00            [12]  209 	mov	r6,#0x00
      000080 C3               [12]  210 	clr	c
      000081 EB               [12]  211 	mov	a,r3
      000082 9D               [12]  212 	subb	a,r5
      000083 EC               [12]  213 	mov	a,r4
      000084 9E               [12]  214 	subb	a,r6
      000085 50 05            [24]  215 	jnc	00129$
                                    216 ;	mblen.c:57: return(-1);
      000087 90 FF FF         [24]  217 	mov	dptr,#0xffff
                                    218 ;	mblen.c:60: while(--m)
      00008A 80 3F            [24]  219 	sjmp	00119$
      00008C                        220 00129$:
      00008C 90r00r02         [24]  221 	mov	dptr,#_mblen_s_65536_39
      00008F E0               [24]  222 	movx	a,@dptr
      000090 FA               [12]  223 	mov	r2,a
      000091 A3               [24]  224 	inc	dptr
      000092 E0               [24]  225 	movx	a,@dptr
      000093 FB               [12]  226 	mov	r3,a
      000094 A3               [24]  227 	inc	dptr
      000095 E0               [24]  228 	movx	a,@dptr
      000096 FC               [12]  229 	mov	r4,a
      000097                        230 00116$:
      000097 1F               [12]  231 	dec	r7
      000098 EF               [12]  232 	mov	a,r7
      000099 60 2C            [24]  233 	jz	00118$
                                    234 ;	mblen.c:61: if((*++s & 0xc0) != 0x80)
      00009B 0A               [12]  235 	inc	r2
      00009C BA 00 01         [24]  236 	cjne	r2,#0x00,00169$
      00009F 0B               [12]  237 	inc	r3
      0000A0                        238 00169$:
      0000A0 90r00r02         [24]  239 	mov	dptr,#_mblen_s_65536_39
      0000A3 EA               [12]  240 	mov	a,r2
      0000A4 F0               [24]  241 	movx	@dptr,a
      0000A5 EB               [12]  242 	mov	a,r3
      0000A6 A3               [24]  243 	inc	dptr
      0000A7 F0               [24]  244 	movx	@dptr,a
      0000A8 EC               [12]  245 	mov	a,r4
      0000A9 A3               [24]  246 	inc	dptr
      0000AA F0               [24]  247 	movx	@dptr,a
      0000AB 8A 82            [24]  248 	mov	dpl,r2
      0000AD 8B 83            [24]  249 	mov	dph,r3
      0000AF 8C F0            [24]  250 	mov	b,r4
      0000B1 12r00r00         [24]  251 	lcall	__gptrget
      0000B4 F8               [12]  252 	mov	r0,a
      0000B5 53 00 C0         [24]  253 	anl	ar0,#0xc0
      0000B8 79 00            [12]  254 	mov	r1,#0x00
      0000BA B8 80 05         [24]  255 	cjne	r0,#0x80,00170$
      0000BD B9 00 02         [24]  256 	cjne	r1,#0x00,00170$
      0000C0 80 D5            [24]  257 	sjmp	00116$
      0000C2                        258 00170$:
                                    259 ;	mblen.c:62: return(-1);
      0000C2 90 FF FF         [24]  260 	mov	dptr,#0xffff
      0000C5 80 04            [24]  261 	sjmp	00119$
      0000C7                        262 00118$:
                                    263 ;	mblen.c:64: return(n);
      0000C7 8D 82            [24]  264 	mov	dpl,r5
      0000C9 8E 83            [24]  265 	mov	dph,r6
      0000CB                        266 00119$:
                                    267 ;	mblen.c:65: }
      0000CB 02r00r00         [24]  268 	ljmp	__sdcc_banked_ret
                                    269 	.area CSEG    (CODE)
                                    270 	.area CONST   (CODE)
                                    271 	.area XINIT   (CODE)
                                    272 	.area CABS    (ABS,CODE)
