                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _memmove
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memmove_PARM_3
                                     12 	.globl _memmove_PARM_2
                                     13 	.globl _memmove
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 	.area	OSEG    (OVR,DATA)
      000000                         37 _memmove_sloc0_1_0:
      000000                         38 	.ds 3
      000003                         39 _memmove_sloc1_1_0:
      000003                         40 	.ds 3
      000006                         41 _memmove_sloc2_1_0:
      000006                         42 	.ds 2
      000008                         43 _memmove_sloc3_1_0:
      000008                         44 	.ds 3
                                     45 ;--------------------------------------------------------
                                     46 ; indirectly addressable internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area ISEG    (DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; absolute internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area IABS    (ABS,DATA)
                                     53 	.area IABS    (ABS,DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; bit data
                                     56 ;--------------------------------------------------------
                                     57 	.area BSEG    (BIT)
                                     58 ;--------------------------------------------------------
                                     59 ; paged external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area PSEG    (PAG,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; uninitialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XSEG    (XDATA)
      000000                         66 _memmove_PARM_2:
      000000                         67 	.ds 3
      000003                         68 _memmove_PARM_3:
      000003                         69 	.ds 2
      000005                         70 _memmove_dst_65536_26:
      000005                         71 	.ds 3
                                     72 ;--------------------------------------------------------
                                     73 ; absolute external ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area XABS    (ABS,XDATA)
                                     76 ;--------------------------------------------------------
                                     77 ; initialized external ram data
                                     78 ;--------------------------------------------------------
                                     79 	.area XISEG   (XDATA)
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT0 (CODE)
                                     82 	.area GSINIT1 (CODE)
                                     83 	.area GSINIT2 (CODE)
                                     84 	.area GSINIT3 (CODE)
                                     85 	.area GSINIT4 (CODE)
                                     86 	.area GSINIT5 (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 	.area GSFINAL (CODE)
                                     89 	.area CSEG    (CODE)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area HOME    (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 	.area GSFINAL (CODE)
                                     96 	.area GSINIT  (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME    (CODE)
                                    101 	.area HOME    (CODE)
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area CSEG    (CODE)
                                    106 ;------------------------------------------------------------
                                    107 ;Allocation info for local variables in function 'memmove'
                                    108 ;------------------------------------------------------------
                                    109 ;src                       Allocated with name '_memmove_PARM_2'
                                    110 ;size                      Allocated with name '_memmove_PARM_3'
                                    111 ;dst                       Allocated with name '_memmove_dst_65536_26'
                                    112 ;c                         Allocated with name '_memmove_c_65536_27'
                                    113 ;d                         Allocated with name '_memmove_d_65537_28'
                                    114 ;s                         Allocated with name '_memmove_s_65537_28'
                                    115 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                                    116 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                                    117 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                                    118 ;sloc3                     Allocated with name '_memmove_sloc3_1_0'
                                    119 ;------------------------------------------------------------
                                    120 ;	_memmove.c:35: void *memmove (void *dst, const void *src, size_t size)
                                    121 ;	-----------------------------------------
                                    122 ;	 function memmove
                                    123 ;	-----------------------------------------
      000000                        124 _memmove:
                           000007   125 	ar7 = 0x07
                           000006   126 	ar6 = 0x06
                           000005   127 	ar5 = 0x05
                           000004   128 	ar4 = 0x04
                           000003   129 	ar3 = 0x03
                           000002   130 	ar2 = 0x02
                           000001   131 	ar1 = 0x01
                           000000   132 	ar0 = 0x00
      000000 AF F0            [24]  133 	mov	r7,b
      000002 AE 83            [24]  134 	mov	r6,dph
      000004 E5 82            [12]  135 	mov	a,dpl
      000006 90r00r05         [24]  136 	mov	dptr,#_memmove_dst_65536_26
      000009 F0               [24]  137 	movx	@dptr,a
      00000A EE               [12]  138 	mov	a,r6
      00000B A3               [24]  139 	inc	dptr
      00000C F0               [24]  140 	movx	@dptr,a
      00000D EF               [12]  141 	mov	a,r7
      00000E A3               [24]  142 	inc	dptr
      00000F F0               [24]  143 	movx	@dptr,a
                                    144 ;	_memmove.c:37: size_t c = size;
      000010 90r00r03         [24]  145 	mov	dptr,#_memmove_PARM_3
      000013 E0               [24]  146 	movx	a,@dptr
      000014 FE               [12]  147 	mov	r6,a
      000015 A3               [24]  148 	inc	dptr
      000016 E0               [24]  149 	movx	a,@dptr
                                    150 ;	_memmove.c:38: if (c == 0 || dst == src)
      000017 FF               [12]  151 	mov	r7,a
      000018 4E               [12]  152 	orl	a,r6
      000019 60 2D            [24]  153 	jz	00101$
      00001B 90r00r05         [24]  154 	mov	dptr,#_memmove_dst_65536_26
      00001E E0               [24]  155 	movx	a,@dptr
      00001F FB               [12]  156 	mov	r3,a
      000020 A3               [24]  157 	inc	dptr
      000021 E0               [24]  158 	movx	a,@dptr
      000022 FC               [12]  159 	mov	r4,a
      000023 A3               [24]  160 	inc	dptr
      000024 E0               [24]  161 	movx	a,@dptr
      000025 FD               [12]  162 	mov	r5,a
      000026 90r00r00         [24]  163 	mov	dptr,#_memmove_PARM_2
      000029 E0               [24]  164 	movx	a,@dptr
      00002A F8               [12]  165 	mov	r0,a
      00002B A3               [24]  166 	inc	dptr
      00002C E0               [24]  167 	movx	a,@dptr
      00002D F9               [12]  168 	mov	r1,a
      00002E A3               [24]  169 	inc	dptr
      00002F E0               [24]  170 	movx	a,@dptr
      000030 FA               [12]  171 	mov	r2,a
      000031 C0 00            [24]  172 	push	ar0
      000033 C0 01            [24]  173 	push	ar1
      000035 C0 02            [24]  174 	push	ar2
      000037 8B 82            [24]  175 	mov	dpl,r3
      000039 8C 83            [24]  176 	mov	dph,r4
      00003B 8D F0            [24]  177 	mov	b,r5
      00003D 12r00r00         [24]  178 	lcall	___gptr_cmp
      000040 15 81            [12]  179 	dec	sp
      000042 15 81            [12]  180 	dec	sp
      000044 15 81            [12]  181 	dec	sp
      000046 70 1A            [24]  182 	jnz	00102$
      000048                        183 00101$:
                                    184 ;	_memmove.c:39: return dst;
      000048 90r00r05         [24]  185 	mov	dptr,#_memmove_dst_65536_26
      00004B E0               [24]  186 	movx	a,@dptr
      00004C F5*00            [12]  187 	mov	_memmove_sloc0_1_0,a
      00004E A3               [24]  188 	inc	dptr
      00004F E0               [24]  189 	movx	a,@dptr
      000050 F5*01            [12]  190 	mov	(_memmove_sloc0_1_0 + 1),a
      000052 A3               [24]  191 	inc	dptr
      000053 E0               [24]  192 	movx	a,@dptr
      000054 F5*02            [12]  193 	mov	(_memmove_sloc0_1_0 + 2),a
      000056 85*00 82         [24]  194 	mov	dpl,_memmove_sloc0_1_0
      000059 85*01 83         [24]  195 	mov	dph,(_memmove_sloc0_1_0 + 1)
      00005C 85*02 F0         [24]  196 	mov	b,(_memmove_sloc0_1_0 + 2)
      00005F 02r00r00         [24]  197 	ljmp	__sdcc_banked_ret
      000062                        198 00102$:
                                    199 ;	_memmove.c:41: char *d = dst;
      000062 C0 06            [24]  200 	push	ar6
      000064 C0 07            [24]  201 	push	ar7
                                    202 ;	_memmove.c:42: const char *s = src;
      000066 88*00            [24]  203 	mov	_memmove_sloc0_1_0,r0
      000068 89*01            [24]  204 	mov	(_memmove_sloc0_1_0 + 1),r1
      00006A 8A*02            [24]  205 	mov	(_memmove_sloc0_1_0 + 2),r2
                                    206 ;	_memmove.c:43: if (s < d) {
      00006C 85*00*03         [24]  207 	mov	_memmove_sloc1_1_0,_memmove_sloc0_1_0
      00006F 85*01*04         [24]  208 	mov	(_memmove_sloc1_1_0 + 1),(_memmove_sloc0_1_0 + 1)
      000072 85*02*05         [24]  209 	mov	(_memmove_sloc1_1_0 + 2),(_memmove_sloc0_1_0 + 2)
      000075 8B 00            [24]  210 	mov	ar0,r3
      000077 8C 01            [24]  211 	mov	ar1,r4
      000079 8D 07            [24]  212 	mov	ar7,r5
      00007B C0 00            [24]  213 	push	ar0
      00007D C0 01            [24]  214 	push	ar1
      00007F C0 07            [24]  215 	push	ar7
      000081 85*03 82         [24]  216 	mov	dpl,_memmove_sloc1_1_0
      000084 85*04 83         [24]  217 	mov	dph,(_memmove_sloc1_1_0 + 1)
      000087 85*05 F0         [24]  218 	mov	b,(_memmove_sloc1_1_0 + 2)
      00008A 12r00r00         [24]  219 	lcall	___gptr_cmp
      00008D 15 81            [12]  220 	dec	sp
      00008F 15 81            [12]  221 	dec	sp
      000091 15 81            [12]  222 	dec	sp
      000093 D0 07            [24]  223 	pop	ar7
      000095 D0 06            [24]  224 	pop	ar6
      000097 50 57            [24]  225 	jnc	00119$
                                    226 ;	_memmove.c:50: s += c;
      000099 EE               [12]  227 	mov	a,r6
      00009A 25*00            [12]  228 	add	a,_memmove_sloc0_1_0
      00009C F5*08            [12]  229 	mov	_memmove_sloc3_1_0,a
      00009E EF               [12]  230 	mov	a,r7
      00009F 35*01            [12]  231 	addc	a,(_memmove_sloc0_1_0 + 1)
      0000A1 F5*09            [12]  232 	mov	(_memmove_sloc3_1_0 + 1),a
      0000A3 85*02*0A         [24]  233 	mov	(_memmove_sloc3_1_0 + 2),(_memmove_sloc0_1_0 + 2)
                                    234 ;	_memmove.c:51: d += c;
      0000A6 EE               [12]  235 	mov	a,r6
      0000A7 2B               [12]  236 	add	a,r3
      0000A8 F5*03            [12]  237 	mov	_memmove_sloc1_1_0,a
      0000AA EF               [12]  238 	mov	a,r7
      0000AB 3C               [12]  239 	addc	a,r4
      0000AC F5*04            [12]  240 	mov	(_memmove_sloc1_1_0 + 1),a
      0000AE 8D*05            [24]  241 	mov	(_memmove_sloc1_1_0 + 2),r5
                                    242 ;	_memmove.c:52: do {
      0000B0 8E*06            [24]  243 	mov	_memmove_sloc2_1_0,r6
      0000B2 8F*07            [24]  244 	mov	(_memmove_sloc2_1_0 + 1),r7
      0000B4                        245 00104$:
                                    246 ;	_memmove.c:53: *--d = *--s;
      0000B4 15*03            [12]  247 	dec	_memmove_sloc1_1_0
      0000B6 74 FF            [12]  248 	mov	a,#0xff
      0000B8 B5*03 02         [24]  249 	cjne	a,_memmove_sloc1_1_0,00141$
      0000BB 15*04            [12]  250 	dec	(_memmove_sloc1_1_0 + 1)
      0000BD                        251 00141$:
      0000BD 15*08            [12]  252 	dec	_memmove_sloc3_1_0
      0000BF 74 FF            [12]  253 	mov	a,#0xff
      0000C1 B5*08 02         [24]  254 	cjne	a,_memmove_sloc3_1_0,00142$
      0000C4 15*09            [12]  255 	dec	(_memmove_sloc3_1_0 + 1)
      0000C6                        256 00142$:
      0000C6 85*08 82         [24]  257 	mov	dpl,_memmove_sloc3_1_0
      0000C9 85*09 83         [24]  258 	mov	dph,(_memmove_sloc3_1_0 + 1)
      0000CC 85*0A F0         [24]  259 	mov	b,(_memmove_sloc3_1_0 + 2)
      0000CF 12r00r00         [24]  260 	lcall	__gptrget
      0000D2 FA               [12]  261 	mov	r2,a
      0000D3 85*03 82         [24]  262 	mov	dpl,_memmove_sloc1_1_0
      0000D6 85*04 83         [24]  263 	mov	dph,(_memmove_sloc1_1_0 + 1)
      0000D9 85*05 F0         [24]  264 	mov	b,(_memmove_sloc1_1_0 + 2)
      0000DC 12r00r00         [24]  265 	lcall	__gptrput
                                    266 ;	_memmove.c:54: } while (--c);
      0000DF 15*06            [12]  267 	dec	_memmove_sloc2_1_0
      0000E1 74 FF            [12]  268 	mov	a,#0xff
      0000E3 B5*06 02         [24]  269 	cjne	a,_memmove_sloc2_1_0,00143$
      0000E6 15*07            [12]  270 	dec	(_memmove_sloc2_1_0 + 1)
      0000E8                        271 00143$:
      0000E8 E5*06            [12]  272 	mov	a,_memmove_sloc2_1_0
      0000EA 45*07            [12]  273 	orl	a,(_memmove_sloc2_1_0 + 1)
      0000EC 70 C6            [24]  274 	jnz	00104$
                                    275 ;	_memmove.c:59: do {
      0000EE 80 37            [24]  276 	sjmp	00112$
      0000F0                        277 00119$:
      0000F0 A8*00            [24]  278 	mov	r0,_memmove_sloc0_1_0
      0000F2 A9*01            [24]  279 	mov	r1,(_memmove_sloc0_1_0 + 1)
      0000F4 AA*02            [24]  280 	mov	r2,(_memmove_sloc0_1_0 + 2)
      0000F6 8E*08            [24]  281 	mov	_memmove_sloc3_1_0,r6
      0000F8 8F*09            [24]  282 	mov	(_memmove_sloc3_1_0 + 1),r7
      0000FA                        283 00107$:
                                    284 ;	_memmove.c:60: *d++ = *s++;
      0000FA 88 82            [24]  285 	mov	dpl,r0
      0000FC 89 83            [24]  286 	mov	dph,r1
      0000FE 8A F0            [24]  287 	mov	b,r2
      000100 12r00r00         [24]  288 	lcall	__gptrget
      000103 FF               [12]  289 	mov	r7,a
      000104 A3               [24]  290 	inc	dptr
      000105 A8 82            [24]  291 	mov	r0,dpl
      000107 A9 83            [24]  292 	mov	r1,dph
      000109 8B 82            [24]  293 	mov	dpl,r3
      00010B 8C 83            [24]  294 	mov	dph,r4
      00010D 8D F0            [24]  295 	mov	b,r5
      00010F EF               [12]  296 	mov	a,r7
      000110 12r00r00         [24]  297 	lcall	__gptrput
      000113 A3               [24]  298 	inc	dptr
      000114 AB 82            [24]  299 	mov	r3,dpl
      000116 AC 83            [24]  300 	mov	r4,dph
                                    301 ;	_memmove.c:61: } while (--c);
      000118 15*08            [12]  302 	dec	_memmove_sloc3_1_0
      00011A 74 FF            [12]  303 	mov	a,#0xff
      00011C B5*08 02         [24]  304 	cjne	a,_memmove_sloc3_1_0,00145$
      00011F 15*09            [12]  305 	dec	(_memmove_sloc3_1_0 + 1)
      000121                        306 00145$:
      000121 E5*08            [12]  307 	mov	a,_memmove_sloc3_1_0
      000123 45*09            [12]  308 	orl	a,(_memmove_sloc3_1_0 + 1)
      000125 70 D3            [24]  309 	jnz	00107$
      000127                        310 00112$:
                                    311 ;	_memmove.c:65: return dst;
      000127 90r00r05         [24]  312 	mov	dptr,#_memmove_dst_65536_26
      00012A E0               [24]  313 	movx	a,@dptr
      00012B FD               [12]  314 	mov	r5,a
      00012C A3               [24]  315 	inc	dptr
      00012D E0               [24]  316 	movx	a,@dptr
      00012E FE               [12]  317 	mov	r6,a
      00012F A3               [24]  318 	inc	dptr
      000130 E0               [24]  319 	movx	a,@dptr
      000131 FF               [12]  320 	mov	r7,a
      000132 8D 82            [24]  321 	mov	dpl,r5
      000134 8E 83            [24]  322 	mov	dph,r6
      000136 8F F0            [24]  323 	mov	b,r7
                                    324 ;	_memmove.c:66: }
      000138 02r00r00         [24]  325 	ljmp	__sdcc_banked_ret
                                    326 	.area CSEG    (CODE)
                                    327 	.area CONST   (CODE)
                                    328 	.area XINIT   (CODE)
                                    329 	.area CABS    (ABS,CODE)
