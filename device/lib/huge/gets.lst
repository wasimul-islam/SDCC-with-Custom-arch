                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module gets
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _gets
                                     12 	.globl _putchar
                                     13 	.globl _getchar
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; uninitialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
      000000                         57 _gets_s_65536_14:
      000000                         58 	.ds 3
      000003                         59 _gets_count_65536_15:
      000003                         60 	.ds 2
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; initialized external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'gets'
                                     97 ;------------------------------------------------------------
                                     98 ;s                         Allocated with name '_gets_s_65536_14'
                                     99 ;c                         Allocated with name '_gets_c_65536_15'
                                    100 ;count                     Allocated with name '_gets_count_65536_15'
                                    101 ;------------------------------------------------------------
                                    102 ;	gets.c:32: gets (char *s)
                                    103 ;	-----------------------------------------
                                    104 ;	 function gets
                                    105 ;	-----------------------------------------
      000000                        106 _gets:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 AF F0            [24]  115 	mov	r7,b
      000002 AE 83            [24]  116 	mov	r6,dph
      000004 E5 82            [12]  117 	mov	a,dpl
      000006 90r00r00         [24]  118 	mov	dptr,#_gets_s_65536_14
      000009 F0               [24]  119 	movx	@dptr,a
      00000A EE               [12]  120 	mov	a,r6
      00000B A3               [24]  121 	inc	dptr
      00000C F0               [24]  122 	movx	@dptr,a
      00000D EF               [12]  123 	mov	a,r7
      00000E A3               [24]  124 	inc	dptr
      00000F F0               [24]  125 	movx	@dptr,a
                                    126 ;	gets.c:35: unsigned int count = 0;
      000010 90r00r03         [24]  127 	mov	dptr,#_gets_count_65536_15
      000013 E4               [12]  128 	clr	a
      000014 F0               [24]  129 	movx	@dptr,a
      000015 A3               [24]  130 	inc	dptr
      000016 F0               [24]  131 	movx	@dptr,a
                                    132 ;	gets.c:37: while (1)
      000017                        133 00109$:
                                    134 ;	gets.c:39: c = getchar ();
      000017 78r00            [12]  135 	mov	r0,#_getchar
      000019 79s00            [12]  136 	mov	r1,#(_getchar >> 8)
      00001B 7As00            [12]  137 	mov	r2,#(_getchar >> 16)
      00001D 12r00r00         [24]  138 	lcall	__sdcc_banked_call
      000020 AE 82            [24]  139 	mov	r6,dpl
      000022 AF 83            [24]  140 	mov	r7,dph
                                    141 ;	gets.c:40: switch(c)
      000024 BE 08 02         [24]  142 	cjne	r6,#0x08,00133$
      000027 80 0D            [24]  143 	sjmp	00101$
      000029                        144 00133$:
      000029 BE 0A 02         [24]  145 	cjne	r6,#0x0a,00134$
      00002C 80 72            [24]  146 	sjmp	00105$
      00002E                        147 00134$:
      00002E BE 0D 02         [24]  148 	cjne	r6,#0x0d,00135$
      000031 80 6D            [24]  149 	sjmp	00105$
      000033                        150 00135$:
      000033 02r00rD5         [24]  151 	ljmp	00106$
                                    152 ;	gets.c:42: case '\b': /* backspace */
      000036                        153 00101$:
                                    154 ;	gets.c:43: if (count)
      000036 90r00r03         [24]  155 	mov	dptr,#_gets_count_65536_15
      000039 E0               [24]  156 	movx	a,@dptr
      00003A FD               [12]  157 	mov	r5,a
      00003B A3               [24]  158 	inc	dptr
      00003C E0               [24]  159 	movx	a,@dptr
      00003D FF               [12]  160 	mov	r7,a
      00003E 90r00r03         [24]  161 	mov	dptr,#_gets_count_65536_15
      000041 E0               [24]  162 	movx	a,@dptr
      000042 F5 F0            [12]  163 	mov	b,a
      000044 A3               [24]  164 	inc	dptr
      000045 E0               [24]  165 	movx	a,@dptr
      000046 45 F0            [12]  166 	orl	a,b
      000048 60 CD            [24]  167 	jz	00109$
                                    168 ;	gets.c:45: putchar ('\b');
      00004A 90 00 08         [24]  169 	mov	dptr,#0x0008
      00004D C0 07            [24]  170 	push	ar7
      00004F C0 05            [24]  171 	push	ar5
      000051 78r00            [12]  172 	mov	r0,#_putchar
      000053 79s00            [12]  173 	mov	r1,#(_putchar >> 8)
      000055 7As00            [12]  174 	mov	r2,#(_putchar >> 16)
      000057 12r00r00         [24]  175 	lcall	__sdcc_banked_call
                                    176 ;	gets.c:46: putchar (' ');
      00005A 90 00 20         [24]  177 	mov	dptr,#0x0020
      00005D 78r00            [12]  178 	mov	r0,#_putchar
      00005F 79s00            [12]  179 	mov	r1,#(_putchar >> 8)
      000061 7As00            [12]  180 	mov	r2,#(_putchar >> 16)
      000063 12r00r00         [24]  181 	lcall	__sdcc_banked_call
                                    182 ;	gets.c:47: putchar ('\b');
      000066 90 00 08         [24]  183 	mov	dptr,#0x0008
      000069 78r00            [12]  184 	mov	r0,#_putchar
      00006B 79s00            [12]  185 	mov	r1,#(_putchar >> 8)
      00006D 7As00            [12]  186 	mov	r2,#(_putchar >> 16)
      00006F 12r00r00         [24]  187 	lcall	__sdcc_banked_call
      000072 D0 05            [24]  188 	pop	ar5
      000074 D0 07            [24]  189 	pop	ar7
                                    190 ;	gets.c:48: --s;
      000076 90r00r00         [24]  191 	mov	dptr,#_gets_s_65536_14
      000079 E0               [24]  192 	movx	a,@dptr
      00007A 24 FF            [12]  193 	add	a,#0xff
      00007C FA               [12]  194 	mov	r2,a
      00007D A3               [24]  195 	inc	dptr
      00007E E0               [24]  196 	movx	a,@dptr
      00007F 34 FF            [12]  197 	addc	a,#0xff
      000081 FB               [12]  198 	mov	r3,a
      000082 A3               [24]  199 	inc	dptr
      000083 E0               [24]  200 	movx	a,@dptr
      000084 FC               [12]  201 	mov	r4,a
      000085 90r00r00         [24]  202 	mov	dptr,#_gets_s_65536_14
      000088 EA               [12]  203 	mov	a,r2
      000089 F0               [24]  204 	movx	@dptr,a
      00008A EB               [12]  205 	mov	a,r3
      00008B A3               [24]  206 	inc	dptr
      00008C F0               [24]  207 	movx	@dptr,a
      00008D EC               [12]  208 	mov	a,r4
      00008E A3               [24]  209 	inc	dptr
      00008F F0               [24]  210 	movx	@dptr,a
                                    211 ;	gets.c:49: --count;
      000090 1D               [12]  212 	dec	r5
      000091 BD FF 01         [24]  213 	cjne	r5,#0xff,00137$
      000094 1F               [12]  214 	dec	r7
      000095                        215 00137$:
      000095 90r00r03         [24]  216 	mov	dptr,#_gets_count_65536_15
      000098 ED               [12]  217 	mov	a,r5
      000099 F0               [24]  218 	movx	@dptr,a
      00009A EF               [12]  219 	mov	a,r7
      00009B A3               [24]  220 	inc	dptr
      00009C F0               [24]  221 	movx	@dptr,a
                                    222 ;	gets.c:51: break;
      00009D 02r00r17         [24]  223 	ljmp	00109$
                                    224 ;	gets.c:54: case '\r': /* CR or LF */
      0000A0                        225 00105$:
                                    226 ;	gets.c:55: putchar ('\r');
      0000A0 90 00 0D         [24]  227 	mov	dptr,#0x000d
      0000A3 78r00            [12]  228 	mov	r0,#_putchar
      0000A5 79s00            [12]  229 	mov	r1,#(_putchar >> 8)
      0000A7 7As00            [12]  230 	mov	r2,#(_putchar >> 16)
      0000A9 12r00r00         [24]  231 	lcall	__sdcc_banked_call
                                    232 ;	gets.c:56: putchar ('\n');
      0000AC 90 00 0A         [24]  233 	mov	dptr,#0x000a
      0000AF 78r00            [12]  234 	mov	r0,#_putchar
      0000B1 79s00            [12]  235 	mov	r1,#(_putchar >> 8)
      0000B3 7As00            [12]  236 	mov	r2,#(_putchar >> 16)
      0000B5 12r00r00         [24]  237 	lcall	__sdcc_banked_call
                                    238 ;	gets.c:57: *s = 0;
      0000B8 90r00r00         [24]  239 	mov	dptr,#_gets_s_65536_14
      0000BB E0               [24]  240 	movx	a,@dptr
      0000BC FC               [12]  241 	mov	r4,a
      0000BD A3               [24]  242 	inc	dptr
      0000BE E0               [24]  243 	movx	a,@dptr
      0000BF FD               [12]  244 	mov	r5,a
      0000C0 A3               [24]  245 	inc	dptr
      0000C1 E0               [24]  246 	movx	a,@dptr
      0000C2 FF               [12]  247 	mov	r7,a
      0000C3 8C 82            [24]  248 	mov	dpl,r4
      0000C5 8D 83            [24]  249 	mov	dph,r5
      0000C7 8F F0            [24]  250 	mov	b,r7
      0000C9 E4               [12]  251 	clr	a
      0000CA 12r00r00         [24]  252 	lcall	__gptrput
                                    253 ;	gets.c:58: return s;
      0000CD 8C 82            [24]  254 	mov	dpl,r4
      0000CF 8D 83            [24]  255 	mov	dph,r5
      0000D1 8F F0            [24]  256 	mov	b,r7
                                    257 ;	gets.c:60: default:
      0000D3 80 41            [24]  258 	sjmp	00111$
      0000D5                        259 00106$:
                                    260 ;	gets.c:61: *s++ = c;
      0000D5 90r00r00         [24]  261 	mov	dptr,#_gets_s_65536_14
      0000D8 E0               [24]  262 	movx	a,@dptr
      0000D9 FC               [12]  263 	mov	r4,a
      0000DA A3               [24]  264 	inc	dptr
      0000DB E0               [24]  265 	movx	a,@dptr
      0000DC FD               [12]  266 	mov	r5,a
      0000DD A3               [24]  267 	inc	dptr
      0000DE E0               [24]  268 	movx	a,@dptr
      0000DF FF               [12]  269 	mov	r7,a
      0000E0 8C 82            [24]  270 	mov	dpl,r4
      0000E2 8D 83            [24]  271 	mov	dph,r5
      0000E4 8F F0            [24]  272 	mov	b,r7
      0000E6 EE               [12]  273 	mov	a,r6
      0000E7 12r00r00         [24]  274 	lcall	__gptrput
      0000EA 90r00r00         [24]  275 	mov	dptr,#_gets_s_65536_14
      0000ED 74 01            [12]  276 	mov	a,#0x01
      0000EF 2C               [12]  277 	add	a,r4
      0000F0 F0               [24]  278 	movx	@dptr,a
      0000F1 E4               [12]  279 	clr	a
      0000F2 3D               [12]  280 	addc	a,r5
      0000F3 A3               [24]  281 	inc	dptr
      0000F4 F0               [24]  282 	movx	@dptr,a
      0000F5 EF               [12]  283 	mov	a,r7
      0000F6 A3               [24]  284 	inc	dptr
      0000F7 F0               [24]  285 	movx	@dptr,a
                                    286 ;	gets.c:62: ++count;
      0000F8 90r00r03         [24]  287 	mov	dptr,#_gets_count_65536_15
      0000FB E0               [24]  288 	movx	a,@dptr
      0000FC 24 01            [12]  289 	add	a,#0x01
      0000FE F0               [24]  290 	movx	@dptr,a
      0000FF A3               [24]  291 	inc	dptr
      000100 E0               [24]  292 	movx	a,@dptr
      000101 34 00            [12]  293 	addc	a,#0x00
      000103 F0               [24]  294 	movx	@dptr,a
                                    295 ;	gets.c:63: putchar (c);
      000104 7F 00            [12]  296 	mov	r7,#0x00
      000106 8E 82            [24]  297 	mov	dpl,r6
      000108 8F 83            [24]  298 	mov	dph,r7
      00010A 78r00            [12]  299 	mov	r0,#_putchar
      00010C 79s00            [12]  300 	mov	r1,#(_putchar >> 8)
      00010E 7As00            [12]  301 	mov	r2,#(_putchar >> 16)
      000110 12r00r00         [24]  302 	lcall	__sdcc_banked_call
                                    303 ;	gets.c:65: }
      000113 02r00r17         [24]  304 	ljmp	00109$
      000116                        305 00111$:
                                    306 ;	gets.c:67: }
      000116 02r00r00         [24]  307 	ljmp	__sdcc_banked_ret
                                    308 	.area CSEG    (CODE)
                                    309 	.area CONST   (CODE)
                                    310 	.area XINIT   (CODE)
                                    311 	.area CABS    (ABS,CODE)
