                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module malloc
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___sdcc_heap_init
                                     12 	.globl ___sdcc_heap_free
                                     13 	.globl _malloc
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
      000000                         33 _malloc_sloc0_1_0:
      000000                         34 	.ds 2
                                     35 ;--------------------------------------------------------
                                     36 ; overlayable items in internal ram
                                     37 ;--------------------------------------------------------
                                     38 ;--------------------------------------------------------
                                     39 ; indirectly addressable internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area ISEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; absolute internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area IABS    (ABS,DATA)
                                     46 	.area IABS    (ABS,DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; bit data
                                     49 ;--------------------------------------------------------
                                     50 	.area BSEG    (BIT)
                                     51 ;--------------------------------------------------------
                                     52 ; paged external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area PSEG    (PAG,XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; uninitialized external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XSEG    (XDATA)
      000000                         59 ___sdcc_heap_free::
      000000                         60 	.ds 2
      000002                         61 _malloc_size_65536_42:
      000002                         62 	.ds 2
      000004                         63 _malloc_h_65536_43:
      000004                         64 	.ds 2
      000006                         65 _malloc_f_65536_43:
      000006                         66 	.ds 2
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XABS    (ABS,XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; initialized external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XISEG   (XDATA)
                                     75 	.area HOME    (CODE)
                                     76 	.area GSINIT0 (CODE)
                                     77 	.area GSINIT1 (CODE)
                                     78 	.area GSINIT2 (CODE)
                                     79 	.area GSINIT3 (CODE)
                                     80 	.area GSINIT4 (CODE)
                                     81 	.area GSINIT5 (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 	.area GSFINAL (CODE)
                                     84 	.area CSEG    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME    (CODE)
                                     89 	.area GSINIT  (CODE)
                                     90 	.area GSFINAL (CODE)
                                     91 	.area GSINIT  (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; Home
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME    (CODE)
                                     96 	.area HOME    (CODE)
                                     97 ;--------------------------------------------------------
                                     98 ; code
                                     99 ;--------------------------------------------------------
                                    100 	.area CSEG    (CODE)
                                    101 ;------------------------------------------------------------
                                    102 ;Allocation info for local variables in function '__sdcc_heap_init'
                                    103 ;------------------------------------------------------------
                                    104 ;	malloc.c:65: void __sdcc_heap_init(void)
                                    105 ;	-----------------------------------------
                                    106 ;	 function __sdcc_heap_init
                                    107 ;	-----------------------------------------
      000000                        108 ___sdcc_heap_init:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
                                    117 ;	malloc.c:67: __sdcc_heap_free = HEAP_START;
      000000 90r00r00         [24]  118 	mov	dptr,#___sdcc_heap_free
      000003 74r00            [12]  119 	mov	a,#___sdcc_heap
      000005 F0               [24]  120 	movx	@dptr,a
      000006 74s00            [12]  121 	mov	a,#(___sdcc_heap >> 8)
      000008 A3               [24]  122 	inc	dptr
      000009 F0               [24]  123 	movx	@dptr,a
                                    124 ;	malloc.c:68: __sdcc_heap_free->next = HEAP_END;
      00000A 90r00r00         [24]  125 	mov	dptr,#___sdcc_heap_size
      00000D E4               [12]  126 	clr	a
      00000E 93               [24]  127 	movc	a,@a+dptr
      00000F FE               [12]  128 	mov	r6,a
      000010 74 01            [12]  129 	mov	a,#0x01
      000012 93               [24]  130 	movc	a,@a+dptr
      000013 FF               [12]  131 	mov	r7,a
      000014 1E               [12]  132 	dec	r6
      000015 BE FF 01         [24]  133 	cjne	r6,#0xff,00103$
      000018 1F               [12]  134 	dec	r7
      000019                        135 00103$:
      000019 EE               [12]  136 	mov	a,r6
      00001A 24r00            [12]  137 	add	a,#___sdcc_heap
      00001C FE               [12]  138 	mov	r6,a
      00001D EF               [12]  139 	mov	a,r7
      00001E 34s00            [12]  140 	addc	a,#(___sdcc_heap >> 8)
      000020 FF               [12]  141 	mov	r7,a
      000021 90r00r00         [24]  142 	mov	dptr,#___sdcc_heap
      000024 EE               [12]  143 	mov	a,r6
      000025 F0               [24]  144 	movx	@dptr,a
      000026 EF               [12]  145 	mov	a,r7
      000027 A3               [24]  146 	inc	dptr
      000028 F0               [24]  147 	movx	@dptr,a
                                    148 ;	malloc.c:69: __sdcc_heap_free->next_free = 0;
      000029 90r00r00         [24]  149 	mov	dptr,#___sdcc_heap_free
      00002C E0               [24]  150 	movx	a,@dptr
      00002D FE               [12]  151 	mov	r6,a
      00002E A3               [24]  152 	inc	dptr
      00002F E0               [24]  153 	movx	a,@dptr
      000030 FF               [12]  154 	mov	r7,a
      000031 8E 82            [24]  155 	mov	dpl,r6
      000033 8F 83            [24]  156 	mov	dph,r7
      000035 A3               [24]  157 	inc	dptr
      000036 A3               [24]  158 	inc	dptr
      000037 E4               [12]  159 	clr	a
      000038 F0               [24]  160 	movx	@dptr,a
      000039 A3               [24]  161 	inc	dptr
      00003A F0               [24]  162 	movx	@dptr,a
                                    163 ;	malloc.c:70: }
      00003B 02r00r00         [24]  164 	ljmp	__sdcc_banked_ret
                                    165 ;------------------------------------------------------------
                                    166 ;Allocation info for local variables in function 'malloc'
                                    167 ;------------------------------------------------------------
                                    168 ;sloc0                     Allocated with name '_malloc_sloc0_1_0'
                                    169 ;size                      Allocated with name '_malloc_size_65536_42'
                                    170 ;h                         Allocated with name '_malloc_h_65536_43'
                                    171 ;f                         Allocated with name '_malloc_f_65536_43'
                                    172 ;blocksize                 Allocated with name '_malloc_blocksize_196608_45'
                                    173 ;newheader                 Allocated with name '_malloc_newheader_327680_47'
                                    174 ;------------------------------------------------------------
                                    175 ;	malloc.c:73: void HEAPSPACE *malloc(size_t size)
                                    176 ;	-----------------------------------------
                                    177 ;	 function malloc
                                    178 ;	-----------------------------------------
      00003E                        179 _malloc:
      00003E AF 83            [24]  180 	mov	r7,dph
      000040 E5 82            [12]  181 	mov	a,dpl
      000042 90r00r02         [24]  182 	mov	dptr,#_malloc_size_65536_42
      000045 F0               [24]  183 	movx	@dptr,a
      000046 EF               [12]  184 	mov	a,r7
      000047 A3               [24]  185 	inc	dptr
      000048 F0               [24]  186 	movx	@dptr,a
                                    187 ;	malloc.c:82: if(!__sdcc_heap_free)
      000049 90r00r00         [24]  188 	mov	dptr,#___sdcc_heap_free
      00004C E0               [24]  189 	movx	a,@dptr
      00004D F5 F0            [12]  190 	mov	b,a
      00004F A3               [24]  191 	inc	dptr
      000050 E0               [24]  192 	movx	a,@dptr
      000051 45 F0            [12]  193 	orl	a,b
      000053 70 09            [24]  194 	jnz	00102$
                                    195 ;	malloc.c:83: __sdcc_heap_init();
      000055 78r00            [12]  196 	mov	r0,#___sdcc_heap_init
      000057 79s00            [12]  197 	mov	r1,#(___sdcc_heap_init >> 8)
      000059 7As00            [12]  198 	mov	r2,#(___sdcc_heap_init >> 16)
      00005B 12r00r00         [24]  199 	lcall	__sdcc_banked_call
      00005E                        200 00102$:
                                    201 ;	malloc.c:86: if(!size || size + offsetof(struct header, next_free) < size)
      00005E 90r00r02         [24]  202 	mov	dptr,#_malloc_size_65536_42
      000061 E0               [24]  203 	movx	a,@dptr
      000062 FE               [12]  204 	mov	r6,a
      000063 A3               [24]  205 	inc	dptr
      000064 E0               [24]  206 	movx	a,@dptr
      000065 FF               [12]  207 	mov	r7,a
      000066 4E               [12]  208 	orl	a,r6
      000067 60 0E            [24]  209 	jz	00103$
      000069 74 02            [12]  210 	mov	a,#0x02
      00006B 2E               [12]  211 	add	a,r6
      00006C FC               [12]  212 	mov	r4,a
      00006D E4               [12]  213 	clr	a
      00006E 3F               [12]  214 	addc	a,r7
      00006F FD               [12]  215 	mov	r5,a
      000070 C3               [12]  216 	clr	c
      000071 EC               [12]  217 	mov	a,r4
      000072 9E               [12]  218 	subb	a,r6
      000073 ED               [12]  219 	mov	a,r5
      000074 9F               [12]  220 	subb	a,r7
      000075 50 06            [24]  221 	jnc	00104$
      000077                        222 00103$:
                                    223 ;	malloc.c:87: return(0);
      000077 90 00 00         [24]  224 	mov	dptr,#0x0000
      00007A 02r00r00         [24]  225 	ljmp	__sdcc_banked_ret
      00007D                        226 00104$:
                                    227 ;	malloc.c:88: size += offsetof(struct header, next_free);
      00007D 90r00r02         [24]  228 	mov	dptr,#_malloc_size_65536_42
      000080 74 02            [12]  229 	mov	a,#0x02
      000082 2E               [12]  230 	add	a,r6
      000083 F0               [24]  231 	movx	@dptr,a
      000084 E4               [12]  232 	clr	a
      000085 3F               [12]  233 	addc	a,r7
      000086 A3               [24]  234 	inc	dptr
      000087 F0               [24]  235 	movx	@dptr,a
                                    236 ;	malloc.c:89: if(size < sizeof(struct header)) // Requiring a minimum size makes it easier to implement free(), and avoid memory leaks.
      000088 90r00r02         [24]  237 	mov	dptr,#_malloc_size_65536_42
      00008B E0               [24]  238 	movx	a,@dptr
      00008C FE               [12]  239 	mov	r6,a
      00008D A3               [24]  240 	inc	dptr
      00008E E0               [24]  241 	movx	a,@dptr
      00008F FF               [12]  242 	mov	r7,a
      000090 C3               [12]  243 	clr	c
      000091 EE               [12]  244 	mov	a,r6
      000092 94 04            [12]  245 	subb	a,#0x04
      000094 EF               [12]  246 	mov	a,r7
      000095 94 00            [12]  247 	subb	a,#0x00
      000097 50 09            [24]  248 	jnc	00107$
                                    249 ;	malloc.c:90: size = sizeof(struct header);
      000099 90r00r02         [24]  250 	mov	dptr,#_malloc_size_65536_42
      00009C 74 04            [12]  251 	mov	a,#0x04
      00009E F0               [24]  252 	movx	@dptr,a
      00009F E4               [12]  253 	clr	a
      0000A0 A3               [24]  254 	inc	dptr
      0000A1 F0               [24]  255 	movx	@dptr,a
      0000A2                        256 00107$:
                                    257 ;	malloc.c:92: for(h = __sdcc_heap_free, f = &__sdcc_heap_free; h; f = &(h->next_free), h = h->next_free)
      0000A2 90r00r00         [24]  258 	mov	dptr,#___sdcc_heap_free
      0000A5 E0               [24]  259 	movx	a,@dptr
      0000A6 FE               [12]  260 	mov	r6,a
      0000A7 A3               [24]  261 	inc	dptr
      0000A8 E0               [24]  262 	movx	a,@dptr
      0000A9 FF               [12]  263 	mov	r7,a
      0000AA 90r00r04         [24]  264 	mov	dptr,#_malloc_h_65536_43
      0000AD EE               [12]  265 	mov	a,r6
      0000AE F0               [24]  266 	movx	@dptr,a
      0000AF EF               [12]  267 	mov	a,r7
      0000B0 A3               [24]  268 	inc	dptr
      0000B1 F0               [24]  269 	movx	@dptr,a
      0000B2 90r00r06         [24]  270 	mov	dptr,#_malloc_f_65536_43
      0000B5 74r00            [12]  271 	mov	a,#___sdcc_heap_free
      0000B7 F0               [24]  272 	movx	@dptr,a
      0000B8 74s00            [12]  273 	mov	a,#(___sdcc_heap_free >> 8)
      0000BA A3               [24]  274 	inc	dptr
      0000BB F0               [24]  275 	movx	@dptr,a
      0000BC                        276 00115$:
      0000BC 90r00r04         [24]  277 	mov	dptr,#_malloc_h_65536_43
      0000BF E0               [24]  278 	movx	a,@dptr
      0000C0 FE               [12]  279 	mov	r6,a
      0000C1 A3               [24]  280 	inc	dptr
      0000C2 E0               [24]  281 	movx	a,@dptr
      0000C3 FF               [12]  282 	mov	r7,a
      0000C4 4E               [12]  283 	orl	a,r6
      0000C5 70 03            [24]  284 	jnz	00151$
      0000C7 02r01rAC         [24]  285 	ljmp	00113$
      0000CA                        286 00151$:
                                    287 ;	malloc.c:94: size_t blocksize = (char HEAPSPACE *)(h->next) - (char HEAPSPACE *)h;
      0000CA 8E 82            [24]  288 	mov	dpl,r6
      0000CC 8F 83            [24]  289 	mov	dph,r7
      0000CE E0               [24]  290 	movx	a,@dptr
      0000CF FC               [12]  291 	mov	r4,a
      0000D0 A3               [24]  292 	inc	dptr
      0000D1 E0               [24]  293 	movx	a,@dptr
      0000D2 FD               [12]  294 	mov	r5,a
      0000D3 8C 02            [24]  295 	mov	ar2,r4
      0000D5 8D 03            [24]  296 	mov	ar3,r5
      0000D7 8E 00            [24]  297 	mov	ar0,r6
      0000D9 8F 01            [24]  298 	mov	ar1,r7
      0000DB EA               [12]  299 	mov	a,r2
      0000DC C3               [12]  300 	clr	c
      0000DD 98               [12]  301 	subb	a,r0
      0000DE FA               [12]  302 	mov	r2,a
      0000DF EB               [12]  303 	mov	a,r3
      0000E0 99               [12]  304 	subb	a,r1
      0000E1 FB               [12]  305 	mov	r3,a
                                    306 ;	malloc.c:95: if(blocksize >= size) // Found free block of sufficient size.
      0000E2 8A 00            [24]  307 	mov	ar0,r2
      0000E4 8B 01            [24]  308 	mov	ar1,r3
      0000E6 90r00r02         [24]  309 	mov	dptr,#_malloc_size_65536_42
      0000E9 E0               [24]  310 	movx	a,@dptr
      0000EA F5*00            [12]  311 	mov	_malloc_sloc0_1_0,a
      0000EC A3               [24]  312 	inc	dptr
      0000ED E0               [24]  313 	movx	a,@dptr
      0000EE F5*01            [12]  314 	mov	(_malloc_sloc0_1_0 + 1),a
      0000F0 C3               [12]  315 	clr	c
      0000F1 E8               [12]  316 	mov	a,r0
      0000F2 95*00            [12]  317 	subb	a,_malloc_sloc0_1_0
      0000F4 E9               [12]  318 	mov	a,r1
      0000F5 95*01            [12]  319 	subb	a,(_malloc_sloc0_1_0 + 1)
      0000F7 50 03            [24]  320 	jnc	00152$
      0000F9 02r01r89         [24]  321 	ljmp	00116$
      0000FC                        322 00152$:
                                    323 ;	malloc.c:97: if(blocksize >= size + sizeof(struct header)) // It is worth creating a new free block
      0000FC 74 04            [12]  324 	mov	a,#0x04
      0000FE 25*00            [12]  325 	add	a,_malloc_sloc0_1_0
      000100 F8               [12]  326 	mov	r0,a
      000101 E4               [12]  327 	clr	a
      000102 35*01            [12]  328 	addc	a,(_malloc_sloc0_1_0 + 1)
      000104 F9               [12]  329 	mov	r1,a
      000105 C3               [12]  330 	clr	c
      000106 EA               [12]  331 	mov	a,r2
      000107 98               [12]  332 	subb	a,r0
      000108 EB               [12]  333 	mov	a,r3
      000109 99               [12]  334 	subb	a,r1
      00010A 40 4C            [24]  335 	jc	00109$
                                    336 ;	malloc.c:99: header_t *const newheader = (header_t *const)((char HEAPSPACE *)h + size);
      00010C 8E 02            [24]  337 	mov	ar2,r6
      00010E 8F 03            [24]  338 	mov	ar3,r7
      000110 E5*00            [12]  339 	mov	a,_malloc_sloc0_1_0
      000112 2A               [12]  340 	add	a,r2
      000113 FA               [12]  341 	mov	r2,a
      000114 E5*01            [12]  342 	mov	a,(_malloc_sloc0_1_0 + 1)
      000116 3B               [12]  343 	addc	a,r3
      000117 FB               [12]  344 	mov	r3,a
                                    345 ;	malloc.c:100: newheader->next = h->next;
      000118 8A 82            [24]  346 	mov	dpl,r2
      00011A 8B 83            [24]  347 	mov	dph,r3
      00011C EC               [12]  348 	mov	a,r4
      00011D F0               [24]  349 	movx	@dptr,a
      00011E ED               [12]  350 	mov	a,r5
      00011F A3               [24]  351 	inc	dptr
      000120 F0               [24]  352 	movx	@dptr,a
                                    353 ;	malloc.c:101: newheader->next_free = h->next_free;
      000121 74 02            [12]  354 	mov	a,#0x02
      000123 2A               [12]  355 	add	a,r2
      000124 FC               [12]  356 	mov	r4,a
      000125 E4               [12]  357 	clr	a
      000126 3B               [12]  358 	addc	a,r3
      000127 FD               [12]  359 	mov	r5,a
      000128 8E 82            [24]  360 	mov	dpl,r6
      00012A 8F 83            [24]  361 	mov	dph,r7
      00012C A3               [24]  362 	inc	dptr
      00012D A3               [24]  363 	inc	dptr
      00012E E0               [24]  364 	movx	a,@dptr
      00012F F8               [12]  365 	mov	r0,a
      000130 A3               [24]  366 	inc	dptr
      000131 E0               [24]  367 	movx	a,@dptr
      000132 F9               [12]  368 	mov	r1,a
      000133 8C 82            [24]  369 	mov	dpl,r4
      000135 8D 83            [24]  370 	mov	dph,r5
      000137 E8               [12]  371 	mov	a,r0
      000138 F0               [24]  372 	movx	@dptr,a
      000139 E9               [12]  373 	mov	a,r1
      00013A A3               [24]  374 	inc	dptr
      00013B F0               [24]  375 	movx	@dptr,a
                                    376 ;	malloc.c:102: *f = newheader;
      00013C 90r00r06         [24]  377 	mov	dptr,#_malloc_f_65536_43
      00013F E0               [24]  378 	movx	a,@dptr
      000140 FC               [12]  379 	mov	r4,a
      000141 A3               [24]  380 	inc	dptr
      000142 E0               [24]  381 	movx	a,@dptr
      000143 FD               [12]  382 	mov	r5,a
      000144 8C 82            [24]  383 	mov	dpl,r4
      000146 8D 83            [24]  384 	mov	dph,r5
      000148 EA               [12]  385 	mov	a,r2
      000149 F0               [24]  386 	movx	@dptr,a
      00014A EB               [12]  387 	mov	a,r3
      00014B A3               [24]  388 	inc	dptr
      00014C F0               [24]  389 	movx	@dptr,a
                                    390 ;	malloc.c:103: h->next = newheader;
      00014D 8E 82            [24]  391 	mov	dpl,r6
      00014F 8F 83            [24]  392 	mov	dph,r7
      000151 EA               [12]  393 	mov	a,r2
      000152 F0               [24]  394 	movx	@dptr,a
      000153 EB               [12]  395 	mov	a,r3
      000154 A3               [24]  396 	inc	dptr
      000155 F0               [24]  397 	movx	@dptr,a
      000156 80 1C            [24]  398 	sjmp	00110$
      000158                        399 00109$:
                                    400 ;	malloc.c:106: *f = h->next_free;
      000158 90r00r06         [24]  401 	mov	dptr,#_malloc_f_65536_43
      00015B E0               [24]  402 	movx	a,@dptr
      00015C FC               [12]  403 	mov	r4,a
      00015D A3               [24]  404 	inc	dptr
      00015E E0               [24]  405 	movx	a,@dptr
      00015F FD               [12]  406 	mov	r5,a
      000160 8E 82            [24]  407 	mov	dpl,r6
      000162 8F 83            [24]  408 	mov	dph,r7
      000164 A3               [24]  409 	inc	dptr
      000165 A3               [24]  410 	inc	dptr
      000166 E0               [24]  411 	movx	a,@dptr
      000167 FA               [12]  412 	mov	r2,a
      000168 A3               [24]  413 	inc	dptr
      000169 E0               [24]  414 	movx	a,@dptr
      00016A FB               [12]  415 	mov	r3,a
      00016B 8C 82            [24]  416 	mov	dpl,r4
      00016D 8D 83            [24]  417 	mov	dph,r5
      00016F EA               [12]  418 	mov	a,r2
      000170 F0               [24]  419 	movx	@dptr,a
      000171 EB               [12]  420 	mov	a,r3
      000172 A3               [24]  421 	inc	dptr
      000173 F0               [24]  422 	movx	@dptr,a
      000174                        423 00110$:
                                    424 ;	malloc.c:108: return(&(h->next_free));
      000174 90r00r04         [24]  425 	mov	dptr,#_malloc_h_65536_43
      000177 E0               [24]  426 	movx	a,@dptr
      000178 FC               [12]  427 	mov	r4,a
      000179 A3               [24]  428 	inc	dptr
      00017A E0               [24]  429 	movx	a,@dptr
      00017B FD               [12]  430 	mov	r5,a
      00017C 74 02            [12]  431 	mov	a,#0x02
      00017E 2C               [12]  432 	add	a,r4
      00017F FC               [12]  433 	mov	r4,a
      000180 E4               [12]  434 	clr	a
      000181 3D               [12]  435 	addc	a,r5
      000182 FD               [12]  436 	mov	r5,a
      000183 8C 82            [24]  437 	mov	dpl,r4
      000185 8D 83            [24]  438 	mov	dph,r5
      000187 80 26            [24]  439 	sjmp	00117$
      000189                        440 00116$:
                                    441 ;	malloc.c:92: for(h = __sdcc_heap_free, f = &__sdcc_heap_free; h; f = &(h->next_free), h = h->next_free)
      000189 74 02            [12]  442 	mov	a,#0x02
      00018B 2E               [12]  443 	add	a,r6
      00018C FE               [12]  444 	mov	r6,a
      00018D E4               [12]  445 	clr	a
      00018E 3F               [12]  446 	addc	a,r7
      00018F FF               [12]  447 	mov	r7,a
      000190 90r00r06         [24]  448 	mov	dptr,#_malloc_f_65536_43
      000193 EE               [12]  449 	mov	a,r6
      000194 F0               [24]  450 	movx	@dptr,a
      000195 EF               [12]  451 	mov	a,r7
      000196 A3               [24]  452 	inc	dptr
      000197 F0               [24]  453 	movx	@dptr,a
      000198 8E 82            [24]  454 	mov	dpl,r6
      00019A 8F 83            [24]  455 	mov	dph,r7
      00019C E0               [24]  456 	movx	a,@dptr
      00019D FE               [12]  457 	mov	r6,a
      00019E A3               [24]  458 	inc	dptr
      00019F E0               [24]  459 	movx	a,@dptr
      0001A0 FF               [12]  460 	mov	r7,a
      0001A1 90r00r04         [24]  461 	mov	dptr,#_malloc_h_65536_43
      0001A4 EE               [12]  462 	mov	a,r6
      0001A5 F0               [24]  463 	movx	@dptr,a
      0001A6 EF               [12]  464 	mov	a,r7
      0001A7 A3               [24]  465 	inc	dptr
      0001A8 F0               [24]  466 	movx	@dptr,a
      0001A9 02r00rBC         [24]  467 	ljmp	00115$
      0001AC                        468 00113$:
                                    469 ;	malloc.c:112: return(0);
      0001AC 90 00 00         [24]  470 	mov	dptr,#0x0000
      0001AF                        471 00117$:
                                    472 ;	malloc.c:113: }
      0001AF 02r00r00         [24]  473 	ljmp	__sdcc_banked_ret
                                    474 	.area CSEG    (CODE)
                                    475 	.area CONST   (CODE)
                                    476 	.area XINIT   (CODE)
                                    477 	.area CABS    (ABS,CODE)
