                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module floorf
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _floorf
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'floorf'
                                     91 ;------------------------------------------------------------
                                     92 ;x                         Allocated to stack - _bp +1
                                     93 ;r                         Allocated to stack - _bp +5
                                     94 ;------------------------------------------------------------
                                     95 ;	floorf.c:33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                                     96 ;	-----------------------------------------
                                     97 ;	 function floorf
                                     98 ;	-----------------------------------------
      000000                         99 _floorf:
                           000007   100 	ar7 = 0x07
                           000006   101 	ar6 = 0x06
                           000005   102 	ar5 = 0x05
                           000004   103 	ar4 = 0x04
                           000003   104 	ar3 = 0x03
                           000002   105 	ar2 = 0x02
                           000001   106 	ar1 = 0x01
                           000000   107 	ar0 = 0x00
      000000 C0*00            [24]  108 	push	_bp
      000002 85 81*00         [24]  109 	mov	_bp,sp
      000005 C0 82            [24]  110 	push	dpl
      000007 C0 83            [24]  111 	push	dph
      000009 C0 F0            [24]  112 	push	b
      00000B C0 E0            [24]  113 	push	acc
      00000D E5 81            [12]  114 	mov	a,sp
      00000F 24 04            [12]  115 	add	a,#0x04
      000011 F5 81            [12]  116 	mov	sp,a
                                    117 ;	floorf.c:36: r=x;
      000013 A8*00            [24]  118 	mov	r0,_bp
      000015 08               [12]  119 	inc	r0
      000016 86 82            [24]  120 	mov	dpl,@r0
      000018 08               [12]  121 	inc	r0
      000019 86 83            [24]  122 	mov	dph,@r0
      00001B 08               [12]  123 	inc	r0
      00001C 86 F0            [24]  124 	mov	b,@r0
      00001E 08               [12]  125 	inc	r0
      00001F E6               [12]  126 	mov	a,@r0
      000020 12r00r00         [24]  127 	lcall	___fs2slong
      000023 AC 82            [24]  128 	mov	r4,dpl
      000025 AD 83            [24]  129 	mov	r5,dph
      000027 AE F0            [24]  130 	mov	r6,b
      000029 FF               [12]  131 	mov	r7,a
      00002A E5*00            [12]  132 	mov	a,_bp
      00002C 24 05            [12]  133 	add	a,#0x05
      00002E F8               [12]  134 	mov	r0,a
      00002F A6 04            [24]  135 	mov	@r0,ar4
      000031 08               [12]  136 	inc	r0
      000032 A6 05            [24]  137 	mov	@r0,ar5
      000034 08               [12]  138 	inc	r0
      000035 A6 06            [24]  139 	mov	@r0,ar6
      000037 08               [12]  140 	inc	r0
      000038 A6 07            [24]  141 	mov	@r0,ar7
                                    142 ;	floorf.c:37: if (r<=0)
      00003A E5*00            [12]  143 	mov	a,_bp
      00003C 24 05            [12]  144 	add	a,#0x05
      00003E F8               [12]  145 	mov	r0,a
      00003F C3               [12]  146 	clr	c
      000040 E4               [12]  147 	clr	a
      000041 96               [12]  148 	subb	a,@r0
      000042 E4               [12]  149 	clr	a
      000043 08               [12]  150 	inc	r0
      000044 96               [12]  151 	subb	a,@r0
      000045 E4               [12]  152 	clr	a
      000046 08               [12]  153 	inc	r0
      000047 96               [12]  154 	subb	a,@r0
      000048 74 80            [12]  155 	mov	a,#(0x00 ^ 0x80)
      00004A 08               [12]  156 	inc	r0
      00004B 86 F0            [24]  157 	mov	b,@r0
      00004D 63 F0 80         [24]  158 	xrl	b,#0x80
      000050 95 F0            [12]  159 	subb	a,b
      000052 40 71            [24]  160 	jc	00102$
                                    161 ;	floorf.c:38: return (r+((r>x)?-1:0));
      000054 E5*00            [12]  162 	mov	a,_bp
      000056 24 05            [12]  163 	add	a,#0x05
      000058 F8               [12]  164 	mov	r0,a
      000059 86 82            [24]  165 	mov	dpl,@r0
      00005B 08               [12]  166 	inc	r0
      00005C 86 83            [24]  167 	mov	dph,@r0
      00005E 08               [12]  168 	inc	r0
      00005F 86 F0            [24]  169 	mov	b,@r0
      000061 08               [12]  170 	inc	r0
      000062 E6               [12]  171 	mov	a,@r0
      000063 12r00r00         [24]  172 	lcall	___slong2fs
      000066 AC 82            [24]  173 	mov	r4,dpl
      000068 AD 83            [24]  174 	mov	r5,dph
      00006A AE F0            [24]  175 	mov	r6,b
      00006C FF               [12]  176 	mov	r7,a
      00006D C0 04            [24]  177 	push	ar4
      00006F C0 05            [24]  178 	push	ar5
      000071 C0 06            [24]  179 	push	ar6
      000073 C0 07            [24]  180 	push	ar7
      000075 A8*00            [24]  181 	mov	r0,_bp
      000077 08               [12]  182 	inc	r0
      000078 86 82            [24]  183 	mov	dpl,@r0
      00007A 08               [12]  184 	inc	r0
      00007B 86 83            [24]  185 	mov	dph,@r0
      00007D 08               [12]  186 	inc	r0
      00007E 86 F0            [24]  187 	mov	b,@r0
      000080 08               [12]  188 	inc	r0
      000081 E6               [12]  189 	mov	a,@r0
      000082 12r00r00         [24]  190 	lcall	___fslt
      000085 AF 82            [24]  191 	mov	r7,dpl
      000087 E5 81            [12]  192 	mov	a,sp
      000089 24 FC            [12]  193 	add	a,#0xfc
      00008B F5 81            [12]  194 	mov	sp,a
      00008D EF               [12]  195 	mov	a,r7
      00008E 60 06            [24]  196 	jz	00106$
      000090 7E FF            [12]  197 	mov	r6,#0xff
      000092 7F FF            [12]  198 	mov	r7,#0xff
      000094 80 04            [24]  199 	sjmp	00107$
      000096                        200 00106$:
      000096 7E 00            [12]  201 	mov	r6,#0x00
      000098 7F 00            [12]  202 	mov	r7,#0x00
      00009A                        203 00107$:
      00009A EF               [12]  204 	mov	a,r7
      00009B 33               [12]  205 	rlc	a
      00009C 95 E0            [12]  206 	subb	a,acc
      00009E FD               [12]  207 	mov	r5,a
      00009F FC               [12]  208 	mov	r4,a
      0000A0 E5*00            [12]  209 	mov	a,_bp
      0000A2 24 05            [12]  210 	add	a,#0x05
      0000A4 F8               [12]  211 	mov	r0,a
      0000A5 EE               [12]  212 	mov	a,r6
      0000A6 26               [12]  213 	add	a,@r0
      0000A7 FE               [12]  214 	mov	r6,a
      0000A8 EF               [12]  215 	mov	a,r7
      0000A9 08               [12]  216 	inc	r0
      0000AA 36               [12]  217 	addc	a,@r0
      0000AB FF               [12]  218 	mov	r7,a
      0000AC ED               [12]  219 	mov	a,r5
      0000AD 08               [12]  220 	inc	r0
      0000AE 36               [12]  221 	addc	a,@r0
      0000AF FD               [12]  222 	mov	r5,a
      0000B0 EC               [12]  223 	mov	a,r4
      0000B1 08               [12]  224 	inc	r0
      0000B2 36               [12]  225 	addc	a,@r0
      0000B3 8E 82            [24]  226 	mov	dpl,r6
      0000B5 8F 83            [24]  227 	mov	dph,r7
      0000B7 8D F0            [24]  228 	mov	b,r5
      0000B9 12r00r00         [24]  229 	lcall	___slong2fs
      0000BC AC 82            [24]  230 	mov	r4,dpl
      0000BE AD 83            [24]  231 	mov	r5,dph
      0000C0 AE F0            [24]  232 	mov	r6,b
      0000C2 FF               [12]  233 	mov	r7,a
      0000C3 80 19            [24]  234 	sjmp	00104$
      0000C5                        235 00102$:
                                    236 ;	floorf.c:40: return r;
      0000C5 E5*00            [12]  237 	mov	a,_bp
      0000C7 24 05            [12]  238 	add	a,#0x05
      0000C9 F8               [12]  239 	mov	r0,a
      0000CA 86 82            [24]  240 	mov	dpl,@r0
      0000CC 08               [12]  241 	inc	r0
      0000CD 86 83            [24]  242 	mov	dph,@r0
      0000CF 08               [12]  243 	inc	r0
      0000D0 86 F0            [24]  244 	mov	b,@r0
      0000D2 08               [12]  245 	inc	r0
      0000D3 E6               [12]  246 	mov	a,@r0
      0000D4 12r00r00         [24]  247 	lcall	___slong2fs
      0000D7 AC 82            [24]  248 	mov	r4,dpl
      0000D9 AD 83            [24]  249 	mov	r5,dph
      0000DB AE F0            [24]  250 	mov	r6,b
      0000DD FF               [12]  251 	mov	r7,a
      0000DE                        252 00104$:
                                    253 ;	floorf.c:41: }
      0000DE 85*00 81         [24]  254 	mov	sp,_bp
      0000E1 D0*00            [24]  255 	pop	_bp
      0000E3 02r00r00         [24]  256 	ljmp	__sdcc_banked_ret
                                    257 	.area CSEG    (CODE)
                                    258 	.area CONST   (CODE)
                                    259 	.area XINIT   (CODE)
                                    260 	.area CABS    (ABS,CODE)
