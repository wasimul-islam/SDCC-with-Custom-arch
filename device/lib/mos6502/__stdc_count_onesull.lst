                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __stdc_count_onesull
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___stdc_count_onesull_PARM_1
                             12 	.globl ___stdc_count_onesull
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
   0000                      17 ___stdc_count_onesull_sloc0_1_0:
   0000                      18 	.ds 1
   0001                      19 ___stdc_count_onesull_sloc1_1_0:
   0001                      20 	.ds 8
                             21 ;--------------------------------------------------------
                             22 ; overlayable items in ram
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; uninitialized external ram data
                             26 ;--------------------------------------------------------
                             27 	.area BSS
   0000                      28 ___stdc_count_onesull_PARM_1:
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; absolute external ram data
                             32 ;--------------------------------------------------------
                             33 	.area DABS    (ABS)
                             34 ;--------------------------------------------------------
                             35 ; initialized external ram data
                             36 ;--------------------------------------------------------
                             37 	.area DATA
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area GSINIT
                             43 	.area GSFINAL
                             44 	.area GSINIT
                             45 ;--------------------------------------------------------
                             46 ; Home
                             47 ;--------------------------------------------------------
                             48 	.area _CODE
                             49 	.area _CODE
                             50 ;--------------------------------------------------------
                             51 ; code
                             52 ;--------------------------------------------------------
                             53 	.area CODE
                             54 ;------------------------------------------------------------
                             55 ;Allocation info for local variables in function '__stdc_count_onesull'
                             56 ;------------------------------------------------------------
                             57 ;sloc0                     Allocated with name '___stdc_count_onesull_sloc0_1_0'
                             58 ;sloc1                     Allocated with name '___stdc_count_onesull_sloc1_1_0'
                             59 ;value                     Allocated with name '___stdc_count_onesull_PARM_1'
                             60 ;count                     Allocated to registers 
                             61 ;i                         Allocated to registers 
                             62 ;------------------------------------------------------------
                             63 ;	../__stdc_count_onesull.c: 37: int_fast8_t __stdc_count_onesull(unsigned long long value)
                             64 ;	-----------------------------------------
                             65 ;	 function __stdc_count_onesull
                             66 ;	-----------------------------------------
                             67 ;	Register assignment is optimal.
                             68 ;	Stack space usage: 0 bytes.
   0000                      69 ___stdc_count_onesull:
                             70 ;	../__stdc_count_onesull.c: 40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
   0000 A2 00         [ 2]   71 	ldx	#0x00
   0002 86*00         [ 3]   72 	stx	*___stdc_count_onesull_sloc0_1_0
   0004                      73 00105$:
   0004 E0 40         [ 2]   74 	cpx	#0x40
   0006 90 03         [ 4]   75 	bcc	00122$
   0008 4Cr90r00      [ 3]   76 	jmp	00103$
   000B                      77 00122$:
                             78 ;	../__stdc_count_onesull.c: 41: if(value & (1ull << i))
   000B A0 01         [ 2]   79 	ldy	#0x01
   000D 8Cr00r00      [ 4]   80 	sty	__rlulonglong_PARM_1
   0010 88            [ 2]   81 	dey
   0011 8Cr01r00      [ 4]   82 	sty	(__rlulonglong_PARM_1 + 1)
   0014 8Cr02r00      [ 4]   83 	sty	(__rlulonglong_PARM_1 + 2)
   0017 8Cr03r00      [ 4]   84 	sty	(__rlulonglong_PARM_1 + 3)
   001A 8Cr04r00      [ 4]   85 	sty	(__rlulonglong_PARM_1 + 4)
   001D 8Cr05r00      [ 4]   86 	sty	(__rlulonglong_PARM_1 + 5)
   0020 8Cr06r00      [ 4]   87 	sty	(__rlulonglong_PARM_1 + 6)
   0023 8Cr07r00      [ 4]   88 	sty	(__rlulonglong_PARM_1 + 7)
   0026 8Er00r00      [ 4]   89 	stx	__rlulonglong_PARM_2
   0029 85*00         [ 3]   90 	sta	*(__TEMP+0)
   002B 8A            [ 2]   91 	txa
   002C 48            [ 3]   92 	pha
   002D A5*00         [ 3]   93 	lda	*(__TEMP+0)
   002F 20r00r00      [ 6]   94 	jsr	__rlulonglong
   0032 85*01         [ 3]   95 	sta	*___stdc_count_onesull_sloc1_1_0
   0034 86*02         [ 3]   96 	stx	*(___stdc_count_onesull_sloc1_1_0 + 1)
   0036 A5*00         [ 3]   97 	lda	*___SDCC_m6502_ret2
   0038 85*03         [ 3]   98 	sta	*(___stdc_count_onesull_sloc1_1_0 + 2)
   003A A5*00         [ 3]   99 	lda	*___SDCC_m6502_ret3
   003C 85*04         [ 3]  100 	sta	*(___stdc_count_onesull_sloc1_1_0 + 3)
   003E A5*00         [ 3]  101 	lda	*___SDCC_m6502_ret4
   0040 85*05         [ 3]  102 	sta	*(___stdc_count_onesull_sloc1_1_0 + 4)
   0042 A5*00         [ 3]  103 	lda	*___SDCC_m6502_ret5
   0044 85*06         [ 3]  104 	sta	*(___stdc_count_onesull_sloc1_1_0 + 5)
   0046 A5*00         [ 3]  105 	lda	*___SDCC_m6502_ret6
   0048 85*07         [ 3]  106 	sta	*(___stdc_count_onesull_sloc1_1_0 + 6)
   004A A5*00         [ 3]  107 	lda	*___SDCC_m6502_ret7
   004C 85*08         [ 3]  108 	sta	*(___stdc_count_onesull_sloc1_1_0 + 7)
   004E 85*00         [ 3]  109 	sta	*(__TEMP+0)
   0050 68            [ 4]  110 	pla
   0051 AA            [ 2]  111 	tax
   0052 A5*01         [ 3]  112 	lda	*___stdc_count_onesull_sloc1_1_0
   0054 2Dr00r00      [ 4]  113 	and	___stdc_count_onesull_PARM_1
   0057 D0 2F         [ 4]  114 	bne	00123$
   0059 A5*02         [ 3]  115 	lda	*(___stdc_count_onesull_sloc1_1_0 + 1)
   005B 2Dr01r00      [ 4]  116 	and	(___stdc_count_onesull_PARM_1 + 1)
   005E D0 28         [ 4]  117 	bne	00123$
   0060 A5*03         [ 3]  118 	lda	*(___stdc_count_onesull_sloc1_1_0 + 2)
   0062 2Dr02r00      [ 4]  119 	and	(___stdc_count_onesull_PARM_1 + 2)
   0065 D0 21         [ 4]  120 	bne	00123$
   0067 A5*04         [ 3]  121 	lda	*(___stdc_count_onesull_sloc1_1_0 + 3)
   0069 2Dr03r00      [ 4]  122 	and	(___stdc_count_onesull_PARM_1 + 3)
   006C D0 1A         [ 4]  123 	bne	00123$
   006E A5*05         [ 3]  124 	lda	*(___stdc_count_onesull_sloc1_1_0 + 4)
   0070 2Dr04r00      [ 4]  125 	and	(___stdc_count_onesull_PARM_1 + 4)
   0073 D0 13         [ 4]  126 	bne	00123$
   0075 A5*06         [ 3]  127 	lda	*(___stdc_count_onesull_sloc1_1_0 + 5)
   0077 2Dr05r00      [ 4]  128 	and	(___stdc_count_onesull_PARM_1 + 5)
   007A D0 0C         [ 4]  129 	bne	00123$
   007C A5*07         [ 3]  130 	lda	*(___stdc_count_onesull_sloc1_1_0 + 6)
   007E 2Dr06r00      [ 4]  131 	and	(___stdc_count_onesull_PARM_1 + 6)
   0081 D0 05         [ 4]  132 	bne	00123$
   0083 A5*08         [ 3]  133 	lda	*(___stdc_count_onesull_sloc1_1_0 + 7)
   0085 2Dr07r00      [ 4]  134 	and	(___stdc_count_onesull_PARM_1 + 7)
   0088                     135 00123$:
   0088 F0 02         [ 4]  136 	beq	00106$
                            137 ;	../__stdc_count_onesull.c: 42: count++;
   008A E6*00         [ 5]  138 	inc	*___stdc_count_onesull_sloc0_1_0
   008C                     139 00106$:
                            140 ;	../__stdc_count_onesull.c: 40: for(uint_fast8_t i = 0; i < ULLONG_WIDTH; i++)
   008C E8            [ 2]  141 	inx
   008D 4Cr04r00      [ 3]  142 	jmp	00105$
   0090                     143 00103$:
                            144 ;	../__stdc_count_onesull.c: 43: return count;
   0090 A5*00         [ 3]  145 	lda	*___stdc_count_onesull_sloc0_1_0
                            146 ;	../__stdc_count_onesull.c: 44: }
   0092 60            [ 6]  147 	rts
                            148 	.area CODE
                            149 	.area RODATA
                            150 	.area XINIT
                            151 	.area CABS    (ABS)
