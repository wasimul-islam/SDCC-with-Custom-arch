                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbstowcs
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _mbtowc
                             12 	.globl _mbstowcs_PARM_3
                             13 	.globl _mbstowcs_PARM_2
                             14 	.globl _mbstowcs
                             15 ;--------------------------------------------------------
                             16 ; ZP ram data
                             17 ;--------------------------------------------------------
                             18 	.area ZP      (PAG)
   0000                      19 _mbstowcs_sloc0_1_0:
   0000                      20 	.ds 2
   0002                      21 _mbstowcs_sloc1_1_0:
   0002                      22 	.ds 2
   0004                      23 _mbstowcs_sloc2_1_0:
   0004                      24 	.ds 2
                             25 ;--------------------------------------------------------
                             26 ; overlayable items in ram
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; uninitialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area BSS
   0000                      32 _mbstowcs_PARM_2:
   0000                      33 	.ds 2
   0002                      34 _mbstowcs_PARM_3:
   0002                      35 	.ds 2
   0004                      36 _mbstowcs_m_65536_37:
   0004                      37 	.ds 2
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area DABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; initialized external ram data
                             44 ;--------------------------------------------------------
                             45 	.area DATA
                             46 ;--------------------------------------------------------
                             47 ; global & static initialisations
                             48 ;--------------------------------------------------------
                             49 	.area _CODE
                             50 	.area GSINIT
                             51 	.area GSFINAL
                             52 	.area GSINIT
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _CODE
                             57 	.area _CODE
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area CODE
                             62 ;------------------------------------------------------------
                             63 ;Allocation info for local variables in function 'mbstowcs'
                             64 ;------------------------------------------------------------
                             65 ;sloc0                     Allocated with name '_mbstowcs_sloc0_1_0'
                             66 ;sloc1                     Allocated with name '_mbstowcs_sloc1_1_0'
                             67 ;sloc2                     Allocated with name '_mbstowcs_sloc2_1_0'
                             68 ;s                         Allocated with name '_mbstowcs_PARM_2'
                             69 ;n                         Allocated with name '_mbstowcs_PARM_3'
                             70 ;pwcs                      Allocated to registers 
                             71 ;m                         Allocated with name '_mbstowcs_m_65536_37'
                             72 ;b                         Allocated to registers a x 
                             73 ;------------------------------------------------------------
                             74 ;	../mbstowcs.c: 33: size_t mbstowcs(wchar_t *restrict pwcs, const char *restrict s, size_t n)
                             75 ;	-----------------------------------------
                             76 ;	 function mbstowcs
                             77 ;	-----------------------------------------
                             78 ;	Register assignment is optimal.
                             79 ;	Stack space usage: 0 bytes.
   0000                      80 _mbstowcs:
   0000 85*00         [ 3]   81 	sta	*_mbstowcs_sloc0_1_0
   0002 86*01         [ 3]   82 	stx	*(_mbstowcs_sloc0_1_0 + 1)
                             83 ;	../mbstowcs.c: 35: size_t m = 0;
   0004 A2 00         [ 2]   84 	ldx	#0x00
   0006 8Er04r00      [ 4]   85 	stx	_mbstowcs_m_65536_37
   0009 8Er05r00      [ 4]   86 	stx	(_mbstowcs_m_65536_37 + 1)
                             87 ;	../mbstowcs.c: 36: while(n--)
   000C 86*02         [ 3]   88 	stx	*_mbstowcs_sloc1_1_0
   000E 86*03         [ 3]   89 	stx	*(_mbstowcs_sloc1_1_0 + 1)
   0010 ADr02r00      [ 4]   90 	lda	_mbstowcs_PARM_3
   0013 85*04         [ 3]   91 	sta	*_mbstowcs_sloc2_1_0
   0015 ADr03r00      [ 4]   92 	lda	(_mbstowcs_PARM_3 + 1)
   0018 85*05         [ 3]   93 	sta	*(_mbstowcs_sloc2_1_0 + 1)
   001A                      94 00105$:
   001A A5*04         [ 3]   95 	lda	*_mbstowcs_sloc2_1_0
   001C A6*05         [ 3]   96 	ldx	*(_mbstowcs_sloc2_1_0 + 1)
   001E 48            [ 3]   97 	pha
   001F 38            [ 2]   98 	sec
   0020 A5*04         [ 3]   99 	lda	*_mbstowcs_sloc2_1_0
   0022 E9 01         [ 2]  100 	sbc	#0x01
   0024 85*04         [ 3]  101 	sta	*_mbstowcs_sloc2_1_0
   0026 B0 02         [ 4]  102 	bcs	00126$
   0028 C6*05         [ 5]  103 	dec	*(_mbstowcs_sloc2_1_0 + 1)
   002A                     104 00126$:
   002A 68            [ 4]  105 	pla
   002B D0 02         [ 4]  106 	bne	00127$
   002D E0 00         [ 2]  107 	cpx	#0x00
   002F                     108 00127$:
   002F F0 69         [ 4]  109 	beq	00107$
                            110 ;	../mbstowcs.c: 38: int b = mbtowc(pwcs++, s, MB_LEN_MAX);
   0031 A5*00         [ 3]  111 	lda	*_mbstowcs_sloc0_1_0
   0033 A6*01         [ 3]  112 	ldx	*(_mbstowcs_sloc0_1_0 + 1)
   0035 48            [ 3]  113 	pha
   0036 A5*00         [ 3]  114 	lda	*_mbstowcs_sloc0_1_0
   0038 18            [ 2]  115 	clc
   0039 69 04         [ 2]  116 	adc	#0x04
   003B 85*00         [ 3]  117 	sta	*_mbstowcs_sloc0_1_0
   003D 90 02         [ 4]  118 	bcc	00129$
   003F E6*01         [ 5]  119 	inc	*(_mbstowcs_sloc0_1_0 + 1)
   0041                     120 00129$:
   0041 68            [ 4]  121 	pla
   0042 ACr00r00      [ 4]  122 	ldy	_mbstowcs_PARM_2
   0045 8Cr00r00      [ 4]  123 	sty	_mbtowc_PARM_2
   0048 ACr01r00      [ 4]  124 	ldy	(_mbstowcs_PARM_2 + 1)
   004B 8Cr01r00      [ 4]  125 	sty	(_mbtowc_PARM_2 + 1)
   004E A0 04         [ 2]  126 	ldy	#0x04
   0050 8Cr00r00      [ 4]  127 	sty	_mbtowc_PARM_3
   0053 A0 00         [ 2]  128 	ldy	#0x00
   0055 8Cr01r00      [ 4]  129 	sty	(_mbtowc_PARM_3 + 1)
   0058 20r00r00      [ 6]  130 	jsr	_mbtowc
                            131 ;	../mbstowcs.c: 39: if(!b)
   005B C9 00         [ 2]  132 	cmp	#0x00
   005D D0 02         [ 4]  133 	bne	00130$
   005F E0 00         [ 2]  134 	cpx	#0x00
   0061                     135 00130$:
   0061 F0 37         [ 4]  136 	beq	00107$
                            137 ;	../mbstowcs.c: 41: if(b < 0)
   0063 85*00         [ 3]  138 	sta	*(__TEMP+0)
   0065 8A            [ 2]  139 	txa
   0066 38            [ 2]  140 	sec
   0067 E9 00         [ 2]  141 	sbc	#0x00
   0069 08            [ 3]  142 	php
   006A A5*00         [ 3]  143 	lda	*(__TEMP+0)
   006C 28            [ 4]  144 	plp
   006D 50 04         [ 4]  145 	bvc	00133$
   006F 10 04         [ 4]  146 	bpl	00132$
   0071 30 06         [ 4]  147 	bmi	00104$
   0073                     148 00133$:
   0073 10 04         [ 4]  149 	bpl	00104$
   0075                     150 00132$:
                            151 ;	../mbstowcs.c: 42: return(-1);
   0075 A9 FF         [ 2]  152 	lda	#0xff
   0077 AA            [ 2]  153 	tax
   0078 60            [ 6]  154 	rts
   0079                     155 00104$:
                            156 ;	../mbstowcs.c: 43: s += b;
   0079 18            [ 2]  157 	clc
   007A 6Dr00r00      [ 4]  158 	adc	_mbstowcs_PARM_2
   007D 8Dr00r00      [ 4]  159 	sta	_mbstowcs_PARM_2
   0080 8A            [ 2]  160 	txa
   0081 6Dr01r00      [ 4]  161 	adc	(_mbstowcs_PARM_2 + 1)
   0084 8Dr01r00      [ 4]  162 	sta	(_mbstowcs_PARM_2 + 1)
                            163 ;	../mbstowcs.c: 44: m++;
   0087 E6*02         [ 5]  164 	inc	*_mbstowcs_sloc1_1_0
   0089 D0 02         [ 4]  165 	bne	00135$
   008B E6*03         [ 5]  166 	inc	*(_mbstowcs_sloc1_1_0 + 1)
   008D                     167 00135$:
   008D A5*02         [ 3]  168 	lda	*_mbstowcs_sloc1_1_0
   008F 8Dr04r00      [ 4]  169 	sta	_mbstowcs_m_65536_37
   0092 A5*03         [ 3]  170 	lda	*(_mbstowcs_sloc1_1_0 + 1)
   0094 8Dr05r00      [ 4]  171 	sta	(_mbstowcs_m_65536_37 + 1)
   0097 4Cr1Ar00      [ 3]  172 	jmp	00105$
   009A                     173 00107$:
                            174 ;	../mbstowcs.c: 47: return(m);
   009A AEr05r00      [ 4]  175 	ldx	(_mbstowcs_m_65536_37 + 1)
   009D ADr04r00      [ 4]  176 	lda	_mbstowcs_m_65536_37
                            177 ;	../mbstowcs.c: 48: }
   00A0 60            [ 6]  178 	rts
                            179 	.area CODE
                            180 	.area RODATA
                            181 	.area XINIT
                            182 	.area CABS    (ABS)
