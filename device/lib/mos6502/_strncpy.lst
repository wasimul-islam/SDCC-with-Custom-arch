                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strncpy
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strncpy_PARM_3
                             12 	.globl _strncpy_PARM_2
                             13 	.globl _strncpy
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 	.area	OSEG    (PAG, OVR)
   0000                      22 _strncpy_sloc0_1_0:
   0000                      23 	.ds 2
   0002                      24 _strncpy_sloc1_1_0:
   0002                      25 	.ds 2
   0004                      26 _strncpy_sloc2_1_0:
   0004                      27 	.ds 2
                             28 ;--------------------------------------------------------
                             29 ; uninitialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area BSS
   0000                      32 _strncpy_PARM_2:
   0000                      33 	.ds 2
   0002                      34 _strncpy_PARM_3:
   0002                      35 	.ds 2
   0004                      36 _strncpy_d1_65536_27:
   0004                      37 	.ds 2
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area DABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; initialized external ram data
                             44 ;--------------------------------------------------------
                             45 	.area DATA
                             46 ;--------------------------------------------------------
                             47 ; global & static initialisations
                             48 ;--------------------------------------------------------
                             49 	.area _CODE
                             50 	.area GSINIT
                             51 	.area GSFINAL
                             52 	.area GSINIT
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _CODE
                             57 	.area _CODE
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area CODE
                             62 ;------------------------------------------------------------
                             63 ;Allocation info for local variables in function 'strncpy'
                             64 ;------------------------------------------------------------
                             65 ;s                         Allocated with name '_strncpy_PARM_2'
                             66 ;n                         Allocated with name '_strncpy_PARM_3'
                             67 ;d                         Allocated to registers a x 
                             68 ;d1                        Allocated with name '_strncpy_d1_65536_27'
                             69 ;sloc0                     Allocated with name '_strncpy_sloc0_1_0'
                             70 ;sloc1                     Allocated with name '_strncpy_sloc1_1_0'
                             71 ;sloc2                     Allocated with name '_strncpy_sloc2_1_0'
                             72 ;------------------------------------------------------------
                             73 ;	../_strncpy.c: 33: char *strncpy ( char * d, const char * s, size_t n )
                             74 ;	-----------------------------------------
                             75 ;	 function strncpy
                             76 ;	-----------------------------------------
                             77 ;	Register assignment is optimal.
                             78 ;	Stack space usage: 0 bytes.
   0000                      79 _strncpy:
                             80 ;	../_strncpy.c: 35: register char * d1 =  d;
   0000 8Dr04r00      [ 4]   81 	sta	_strncpy_d1_65536_27
   0003 8Er05r00      [ 4]   82 	stx	(_strncpy_d1_65536_27 + 1)
                             83 ;	../_strncpy.c: 37: while ( n && *s )
   0006 ACr02r00      [ 4]   84 	ldy	_strncpy_PARM_3
   0009 84*00         [ 3]   85 	sty	*_strncpy_sloc0_1_0
   000B ACr03r00      [ 4]   86 	ldy	(_strncpy_PARM_3 + 1)
   000E 84*01         [ 3]   87 	sty	*(_strncpy_sloc0_1_0 + 1)
   0010 ACr00r00      [ 4]   88 	ldy	_strncpy_PARM_2
   0013 84*02         [ 3]   89 	sty	*_strncpy_sloc1_1_0
   0015 ACr01r00      [ 4]   90 	ldy	(_strncpy_PARM_2 + 1)
   0018 84*03         [ 3]   91 	sty	*(_strncpy_sloc1_1_0 + 1)
   001A 85*04         [ 3]   92 	sta	*_strncpy_sloc2_1_0
   001C 86*05         [ 3]   93 	stx	*(_strncpy_sloc2_1_0 + 1)
   001E                      94 00102$:
   001E A5*01         [ 3]   95 	lda	*(_strncpy_sloc0_1_0 + 1)
   0020 05*00         [ 3]   96 	ora	*_strncpy_sloc0_1_0
   0022 F0 24         [ 4]   97 	beq	00114$
   0024 A0 00         [ 2]   98 	ldy	#0x00
   0026 B1*02         [ 6]   99 	lda	[*_strncpy_sloc1_1_0],y
   0028 AA            [ 2]  100 	tax
   0029 F0 1D         [ 4]  101 	beq	00114$
                            102 ;	../_strncpy.c: 39: n-- ;
   002B 38            [ 2]  103 	sec
   002C A5*00         [ 3]  104 	lda	*_strncpy_sloc0_1_0
   002E E9 01         [ 2]  105 	sbc	#0x01
   0030 85*00         [ 3]  106 	sta	*_strncpy_sloc0_1_0
   0032 B0 02         [ 4]  107 	bcs	00134$
   0034 C6*01         [ 5]  108 	dec	*(_strncpy_sloc0_1_0 + 1)
   0036                     109 00134$:
                            110 ;	../_strncpy.c: 40: *d++ = *s++ ;
   0036 8A            [ 2]  111 	txa
   0037 E6*02         [ 5]  112 	inc	*_strncpy_sloc1_1_0
   0039 D0 02         [ 4]  113 	bne	00135$
   003B E6*03         [ 5]  114 	inc	*(_strncpy_sloc1_1_0 + 1)
   003D                     115 00135$:
   003D 91*04         [ 6]  116 	sta	[*_strncpy_sloc2_1_0],y
   003F E6*04         [ 5]  117 	inc	*_strncpy_sloc2_1_0
   0041 D0 DB         [ 4]  118 	bne	00102$
   0043 E6*05         [ 5]  119 	inc	*(_strncpy_sloc2_1_0 + 1)
   0045 4Cr1Er00      [ 3]  120 	jmp	00102$
                            121 ;	../_strncpy.c: 42: while ( n-- )
   0048                     122 00114$:
   0048 A5*00         [ 3]  123 	lda	*_strncpy_sloc0_1_0
   004A A6*01         [ 3]  124 	ldx	*(_strncpy_sloc0_1_0 + 1)
   004C                     125 00105$:
   004C 85*02         [ 3]  126 	sta	*_strncpy_sloc1_1_0
   004E 86*03         [ 3]  127 	stx	*(_strncpy_sloc1_1_0 + 1)
   0050 38            [ 2]  128 	sec
   0051 E9 01         [ 2]  129 	sbc	#0x01
   0053 B0 01         [ 4]  130 	bcs	00137$
   0055 CA            [ 2]  131 	dex
   0056                     132 00137$:
   0056 85*00         [ 3]  133 	sta	*(__TEMP+0)
   0058 A5*03         [ 3]  134 	lda	*(_strncpy_sloc1_1_0 + 1)
   005A 05*02         [ 3]  135 	ora	*_strncpy_sloc1_1_0
   005C 08            [ 3]  136 	php
   005D A5*00         [ 3]  137 	lda	*(__TEMP+0)
   005F 28            [ 4]  138 	plp
   0060 F0 12         [ 4]  139 	beq	00107$
                            140 ;	../_strncpy.c: 44: *d++ = '\0' ;
   0062 85*00         [ 3]  141 	sta	*(__TEMP+0)
   0064 A9 00         [ 2]  142 	lda	#0x00
   0066 A8            [ 2]  143 	tay
   0067 91*04         [ 6]  144 	sta	[*_strncpy_sloc2_1_0],y
   0069 A5*00         [ 3]  145 	lda	*(__TEMP+0)
   006B E6*04         [ 5]  146 	inc	*_strncpy_sloc2_1_0
   006D D0 DD         [ 4]  147 	bne	00105$
   006F E6*05         [ 5]  148 	inc	*(_strncpy_sloc2_1_0 + 1)
   0071 4Cr4Cr00      [ 3]  149 	jmp	00105$
   0074                     150 00107$:
                            151 ;	../_strncpy.c: 46: return d1;
   0074 AEr05r00      [ 4]  152 	ldx	(_strncpy_d1_65536_27 + 1)
   0077 ADr04r00      [ 4]  153 	lda	_strncpy_d1_65536_27
                            154 ;	../_strncpy.c: 47: }
   007A 60            [ 6]  155 	rts
                            156 	.area CODE
                            157 	.area RODATA
                            158 	.area XINIT
                            159 	.area CABS    (ABS)
