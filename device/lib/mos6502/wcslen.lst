                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module wcslen
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _wcslen
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 	.area	OSEG    (PAG, OVR)
   0000                      20 _wcslen_n_65536_10:
   0000                      21 	.ds 2
   0002                      22 _wcslen_sloc0_1_0:
   0002                      23 	.ds 2
   0004                      24 _wcslen_sloc1_1_0:
   0004                      25 	.ds 4
                             26 ;--------------------------------------------------------
                             27 ; uninitialized external ram data
                             28 ;--------------------------------------------------------
                             29 	.area BSS
                             30 ;--------------------------------------------------------
                             31 ; absolute external ram data
                             32 ;--------------------------------------------------------
                             33 	.area DABS    (ABS)
                             34 ;--------------------------------------------------------
                             35 ; initialized external ram data
                             36 ;--------------------------------------------------------
                             37 	.area DATA
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area GSINIT
                             43 	.area GSFINAL
                             44 	.area GSINIT
                             45 ;--------------------------------------------------------
                             46 ; Home
                             47 ;--------------------------------------------------------
                             48 	.area _CODE
                             49 	.area _CODE
                             50 ;--------------------------------------------------------
                             51 ; code
                             52 ;--------------------------------------------------------
                             53 	.area CODE
                             54 ;------------------------------------------------------------
                             55 ;Allocation info for local variables in function 'wcslen'
                             56 ;------------------------------------------------------------
                             57 ;s                         Allocated to registers 
                             58 ;n                         Allocated with name '_wcslen_n_65536_10'
                             59 ;sloc0                     Allocated with name '_wcslen_sloc0_1_0'
                             60 ;sloc1                     Allocated with name '_wcslen_sloc1_1_0'
                             61 ;------------------------------------------------------------
                             62 ;	../wcslen.c: 31: size_t wcslen(const wchar_t *s)
                             63 ;	-----------------------------------------
                             64 ;	 function wcslen
                             65 ;	-----------------------------------------
                             66 ;	Register assignment is optimal.
                             67 ;	Stack space usage: 0 bytes.
   0000                      68 _wcslen:
   0000 85*02         [ 3]   69 	sta	*_wcslen_sloc0_1_0
   0002 86*03         [ 3]   70 	stx	*(_wcslen_sloc0_1_0 + 1)
                             71 ;	../wcslen.c: 34: while (*s)
   0004 A2 00         [ 2]   72 	ldx	#0x00
   0006 86*00         [ 3]   73 	stx	*_wcslen_n_65536_10
   0008 86*01         [ 3]   74 	stx	*(_wcslen_n_65536_10 + 1)
   000A                      75 00101$:
   000A A0 00         [ 2]   76 	ldy	#0x00
   000C B1*02         [ 6]   77 	lda	[*_wcslen_sloc0_1_0],y
   000E 85*04         [ 3]   78 	sta	*_wcslen_sloc1_1_0
   0010 C8            [ 2]   79 	iny
   0011 B1*02         [ 6]   80 	lda	[*_wcslen_sloc0_1_0],y
   0013 85*05         [ 3]   81 	sta	*(_wcslen_sloc1_1_0 + 1)
   0015 C8            [ 2]   82 	iny
   0016 B1*02         [ 6]   83 	lda	[*_wcslen_sloc0_1_0],y
   0018 85*06         [ 3]   84 	sta	*(_wcslen_sloc1_1_0 + 2)
   001A C8            [ 2]   85 	iny
   001B B1*02         [ 6]   86 	lda	[*_wcslen_sloc0_1_0],y
   001D 85*07         [ 3]   87 	sta	*(_wcslen_sloc1_1_0 + 3)
   001F 05*06         [ 3]   88 	ora	*(_wcslen_sloc1_1_0 + 2)
   0021 05*05         [ 3]   89 	ora	*(_wcslen_sloc1_1_0 + 1)
   0023 05*04         [ 3]   90 	ora	*_wcslen_sloc1_1_0
   0025 F0 14         [ 4]   91 	beq	00103$
                             92 ;	../wcslen.c: 36: n++;
   0027 E6*00         [ 5]   93 	inc	*_wcslen_n_65536_10
   0029 D0 02         [ 4]   94 	bne	00116$
   002B E6*01         [ 5]   95 	inc	*(_wcslen_n_65536_10 + 1)
   002D                      96 00116$:
                             97 ;	../wcslen.c: 37: s++;
   002D A5*02         [ 3]   98 	lda	*_wcslen_sloc0_1_0
   002F 18            [ 2]   99 	clc
   0030 69 04         [ 2]  100 	adc	#0x04
   0032 85*02         [ 3]  101 	sta	*_wcslen_sloc0_1_0
   0034 90 D4         [ 4]  102 	bcc	00101$
   0036 E6*03         [ 5]  103 	inc	*(_wcslen_sloc0_1_0 + 1)
   0038 4Cr0Ar00      [ 3]  104 	jmp	00101$
   003B                     105 00103$:
                            106 ;	../wcslen.c: 40: return n;
   003B A6*01         [ 3]  107 	ldx	*(_wcslen_n_65536_10 + 1)
   003D A5*00         [ 3]  108 	lda	*_wcslen_n_65536_10
                            109 ;	../wcslen.c: 41: }
   003F 60            [ 6]  110 	rts
                            111 	.area CODE
                            112 	.area RODATA
                            113 	.area XINIT
                            114 	.area CABS    (ABS)
