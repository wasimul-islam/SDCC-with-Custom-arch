                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module atol
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _atol
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
   0000                      16 _atol_sloc0_1_0:
   0000                      17 	.ds 2
   0002                      18 _atol_sloc1_1_0:
   0002                      19 	.ds 1
   0003                      20 _atol_sloc2_1_0:
   0003                      21 	.ds 4
   0007                      22 _atol_sloc3_1_0:
   0007                      23 	.ds 4
                             24 ;--------------------------------------------------------
                             25 ; overlayable items in ram
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; uninitialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area BSS
   0000                      31 _atol_ret_65536_57:
   0000                      32 	.ds 4
   0004                      33 _atol_neg_65536_57:
   0004                      34 	.ds 1
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area DABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; initialized external ram data
                             41 ;--------------------------------------------------------
                             42 	.area DATA
                             43 ;--------------------------------------------------------
                             44 ; global & static initialisations
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 	.area GSINIT
                             48 	.area GSFINAL
                             49 	.area GSINIT
                             50 ;--------------------------------------------------------
                             51 ; Home
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 	.area _CODE
                             55 ;--------------------------------------------------------
                             56 ; code
                             57 ;--------------------------------------------------------
                             58 	.area CODE
                             59 ;------------------------------------------------------------
                             60 ;Allocation info for local variables in function 'atol'
                             61 ;------------------------------------------------------------
                             62 ;sloc0                     Allocated with name '_atol_sloc0_1_0'
                             63 ;sloc1                     Allocated with name '_atol_sloc1_1_0'
                             64 ;sloc2                     Allocated with name '_atol_sloc2_1_0'
                             65 ;sloc3                     Allocated with name '_atol_sloc3_1_0'
                             66 ;nptr                      Allocated to registers a x 
                             67 ;__1310720007              Allocated to registers 
                             68 ;__1310720004              Allocated to registers 
                             69 ;ret                       Allocated with name '_atol_ret_65536_57'
                             70 ;neg                       Allocated with name '_atol_neg_65536_57'
                             71 ;__1310720005              Allocated to registers 
                             72 ;c                         Allocated to registers 
                             73 ;__1310720008              Allocated to registers 
                             74 ;c                         Allocated to registers 
                             75 ;------------------------------------------------------------
                             76 ;	../atol.c: 34: long int atol(const char *nptr)
                             77 ;	-----------------------------------------
                             78 ;	 function atol
                             79 ;	-----------------------------------------
                             80 ;	Register assignment is optimal.
                             81 ;	Stack space usage: 0 bytes.
   0000                      82 _atol:
   0000 85*00         [ 3]   83 	sta	*_atol_sloc0_1_0
   0002 86*01         [ 3]   84 	stx	*(_atol_sloc0_1_0 + 1)
                             85 ;	../atol.c: 36: long int ret = 0;
   0004 A2 00         [ 2]   86 	ldx	#0x00
   0006 8Er00r00      [ 4]   87 	stx	_atol_ret_65536_57
   0009 8Er01r00      [ 4]   88 	stx	(_atol_ret_65536_57 + 1)
   000C 8Er02r00      [ 4]   89 	stx	(_atol_ret_65536_57 + 2)
   000F 8Er03r00      [ 4]   90 	stx	(_atol_ret_65536_57 + 3)
                             91 ;	../atol.c: 39: while (isblank (*nptr))
   0012                      92 00101$:
   0012 A0 00         [ 2]   93 	ldy	#0x00
   0014 B1*00         [ 6]   94 	lda	[*_atol_sloc0_1_0],y
                             95 ;	./../../include/ctype.h: 53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   0016 C9 20         [ 2]   96 	cmp	#0x20
   0018 F0 04         [ 4]   97 	beq	00115$
   001A C9 09         [ 2]   98 	cmp	#0x09
   001C D0 09         [ 4]   99 	bne	00131$
   001E                     100 00115$:
                            101 ;	../atol.c: 40: nptr++;
   001E E6*00         [ 5]  102 	inc	*_atol_sloc0_1_0
   0020 D0 F0         [ 4]  103 	bne	00101$
   0022 E6*01         [ 5]  104 	inc	*(_atol_sloc0_1_0 + 1)
   0024 4Cr12r00      [ 3]  105 	jmp	00101$
   0027                     106 00131$:
   0027 A5*00         [ 3]  107 	lda	*_atol_sloc0_1_0
   0029 A6*01         [ 3]  108 	ldx	*(_atol_sloc0_1_0 + 1)
                            109 ;	../atol.c: 42: neg = (*nptr == '-');
   002B 85*00         [ 3]  110 	sta	*(__TEMP+0)
   002D A0 00         [ 2]  111 	ldy	#0x00
   002F B1*00         [ 6]  112 	lda	[*_atol_sloc0_1_0],y
   0031 A8            [ 2]  113 	tay
   0032 A5*00         [ 3]  114 	lda	*(__TEMP+0)
   0034 C0 2D         [ 2]  115 	cpy	#0x2d
   0036 85*00         [ 3]  116 	sta	*(__TEMP+0)
   0038 F0 05         [ 4]  117 	beq	00165$
   003A A9 00         [ 2]  118 	lda	#0x00
   003C 4Cr41r00      [ 3]  119 	jmp	00164$
   003F                     120 00165$:
   003F A9 01         [ 2]  121 	lda	#0x01
   0041                     122 00164$:
   0041 8Dr04r00      [ 4]  123 	sta	_atol_neg_65536_57
   0044 A5*00         [ 3]  124 	lda	*(__TEMP+0)
                            125 ;	../atol.c: 44: if (*nptr == '-' || *nptr == '+')
   0046 C0 2D         [ 2]  126 	cpy	#0x2d
   0048 F0 04         [ 4]  127 	beq	00104$
   004A C0 2B         [ 2]  128 	cpy	#0x2b
   004C D0 06         [ 4]  129 	bne	00129$
   004E                     130 00104$:
                            131 ;	../atol.c: 45: nptr++;
   004E 18            [ 2]  132 	clc
   004F 69 01         [ 2]  133 	adc	#0x01
   0051 90 01         [ 4]  134 	bcc	00168$
   0053 E8            [ 2]  135 	inx
   0054                     136 00168$:
                            137 ;	../atol.c: 47: while (isdigit (*nptr))
   0054                     138 00129$:
   0054 85*00         [ 3]  139 	sta	*_atol_sloc0_1_0
   0056 86*01         [ 3]  140 	stx	*(_atol_sloc0_1_0 + 1)
   0058                     141 00107$:
   0058 A0 00         [ 2]  142 	ldy	#0x00
   005A B1*00         [ 6]  143 	lda	[*_atol_sloc0_1_0],y
                            144 ;	./../../include/ctype.h: 62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   005C C9 30         [ 2]  145 	cmp	#0x30
   005E B0 03         [ 4]  146 	bcs	00169$
   0060 4CrDFr00      [ 3]  147 	jmp	00109$
   0063                     148 00169$:
   0063 C9 39         [ 2]  149 	cmp	#0x39
   0065 F0 02         [ 4]  150 	beq	00170$
   0067 B0 76         [ 4]  151 	bcs	00109$
   0069                     152 00170$:
                            153 ;	../atol.c: 48: ret = ret * 10 + (*(nptr++) - '0');
   0069 A2 0A         [ 2]  154 	ldx	#0x0a
   006B 8Er00r00      [ 4]  155 	stx	__mullong_PARM_1
   006E 8Cr01r00      [ 4]  156 	sty	(__mullong_PARM_1 + 1)
   0071 8Cr02r00      [ 4]  157 	sty	(__mullong_PARM_1 + 2)
   0074 8Cr03r00      [ 4]  158 	sty	(__mullong_PARM_1 + 3)
   0077 ADr00r00      [ 4]  159 	lda	_atol_ret_65536_57
   007A 8Dr00r00      [ 4]  160 	sta	__mullong_PARM_2
   007D ADr01r00      [ 4]  161 	lda	(_atol_ret_65536_57 + 1)
   0080 8Dr01r00      [ 4]  162 	sta	(__mullong_PARM_2 + 1)
   0083 ADr02r00      [ 4]  163 	lda	(_atol_ret_65536_57 + 2)
   0086 8Dr02r00      [ 4]  164 	sta	(__mullong_PARM_2 + 2)
   0089 ADr03r00      [ 4]  165 	lda	(_atol_ret_65536_57 + 3)
   008C 8Dr03r00      [ 4]  166 	sta	(__mullong_PARM_2 + 3)
   008F 20r00r00      [ 6]  167 	jsr	__mullong
   0092 85*03         [ 3]  168 	sta	*_atol_sloc2_1_0
   0094 86*04         [ 3]  169 	stx	*(_atol_sloc2_1_0 + 1)
   0096 A5*00         [ 3]  170 	lda	*___SDCC_m6502_ret2
   0098 85*05         [ 3]  171 	sta	*(_atol_sloc2_1_0 + 2)
   009A A5*00         [ 3]  172 	lda	*___SDCC_m6502_ret3
   009C 85*06         [ 3]  173 	sta	*(_atol_sloc2_1_0 + 3)
   009E A0 00         [ 2]  174 	ldy	#0x00
   00A0 B1*00         [ 6]  175 	lda	[*_atol_sloc0_1_0],y
   00A2 E6*00         [ 5]  176 	inc	*_atol_sloc0_1_0
   00A4 D0 02         [ 4]  177 	bne	00172$
   00A6 E6*01         [ 5]  178 	inc	*(_atol_sloc0_1_0 + 1)
   00A8                     179 00172$:
   00A8 A2 00         [ 2]  180 	ldx	#0x00
   00AA 38            [ 2]  181 	sec
   00AB E9 30         [ 2]  182 	sbc	#0x30
   00AD B0 01         [ 4]  183 	bcs	00173$
   00AF CA            [ 2]  184 	dex
   00B0                     185 00173$:
   00B0 85*07         [ 3]  186 	sta	*_atol_sloc3_1_0
   00B2 86*08         [ 3]  187 	stx	*(_atol_sloc3_1_0 + 1)
   00B4 8A            [ 2]  188 	txa
   00B5 0A            [ 2]  189 	asl	a
   00B6 98            [ 2]  190 	tya
   00B7 69 FF         [ 2]  191 	adc	#0xff
   00B9 49 FF         [ 2]  192 	eor	#0xff
   00BB 85*09         [ 3]  193 	sta	*(_atol_sloc3_1_0 + 2)
   00BD 85*0A         [ 3]  194 	sta	*(_atol_sloc3_1_0 + 3)
   00BF A5*03         [ 3]  195 	lda	*_atol_sloc2_1_0
   00C1 18            [ 2]  196 	clc
   00C2 65*07         [ 3]  197 	adc	*_atol_sloc3_1_0
   00C4 8Dr00r00      [ 4]  198 	sta	_atol_ret_65536_57
   00C7 A5*04         [ 3]  199 	lda	*(_atol_sloc2_1_0 + 1)
   00C9 65*08         [ 3]  200 	adc	*(_atol_sloc3_1_0 + 1)
   00CB 8Dr01r00      [ 4]  201 	sta	(_atol_ret_65536_57 + 1)
   00CE A5*05         [ 3]  202 	lda	*(_atol_sloc2_1_0 + 2)
   00D0 65*09         [ 3]  203 	adc	*(_atol_sloc3_1_0 + 2)
   00D2 8Dr02r00      [ 4]  204 	sta	(_atol_ret_65536_57 + 2)
   00D5 A5*06         [ 3]  205 	lda	*(_atol_sloc2_1_0 + 3)
   00D7 65*0A         [ 3]  206 	adc	*(_atol_sloc3_1_0 + 3)
   00D9 8Dr03r00      [ 4]  207 	sta	(_atol_ret_65536_57 + 3)
   00DC 4Cr58r00      [ 3]  208 	jmp	00107$
   00DF                     209 00109$:
                            210 ;	../atol.c: 50: return (neg ? -ret : ret); // Since -LONG_MIN is LONG_MIN in sdcc, the result value always turns out ok.
   00DF ADr04r00      [ 4]  211 	lda	_atol_neg_65536_57
   00E2 F0 20         [ 4]  212 	beq	00120$
   00E4 A9 00         [ 2]  213 	lda	#0x00
   00E6 38            [ 2]  214 	sec
   00E7 EDr00r00      [ 4]  215 	sbc	_atol_ret_65536_57
   00EA 85*07         [ 3]  216 	sta	*_atol_sloc3_1_0
   00EC A9 00         [ 2]  217 	lda	#0x00
   00EE EDr01r00      [ 4]  218 	sbc	(_atol_ret_65536_57 + 1)
   00F1 85*08         [ 3]  219 	sta	*(_atol_sloc3_1_0 + 1)
   00F3 A9 00         [ 2]  220 	lda	#0x00
   00F5 EDr02r00      [ 4]  221 	sbc	(_atol_ret_65536_57 + 2)
   00F8 85*09         [ 3]  222 	sta	*(_atol_sloc3_1_0 + 2)
   00FA A9 00         [ 2]  223 	lda	#0x00
   00FC EDr03r00      [ 4]  224 	sbc	(_atol_ret_65536_57 + 3)
   00FF 85*0A         [ 3]  225 	sta	*(_atol_sloc3_1_0 + 3)
   0101 4Cr18r01      [ 3]  226 	jmp	00121$
   0104                     227 00120$:
   0104 ADr00r00      [ 4]  228 	lda	_atol_ret_65536_57
   0107 85*07         [ 3]  229 	sta	*_atol_sloc3_1_0
   0109 ADr01r00      [ 4]  230 	lda	(_atol_ret_65536_57 + 1)
   010C 85*08         [ 3]  231 	sta	*(_atol_sloc3_1_0 + 1)
   010E ADr02r00      [ 4]  232 	lda	(_atol_ret_65536_57 + 2)
   0111 85*09         [ 3]  233 	sta	*(_atol_sloc3_1_0 + 2)
   0113 ADr03r00      [ 4]  234 	lda	(_atol_ret_65536_57 + 3)
   0116 85*0A         [ 3]  235 	sta	*(_atol_sloc3_1_0 + 3)
   0118                     236 00121$:
   0118 A5*0A         [ 3]  237 	lda	*(_atol_sloc3_1_0 + 3)
   011A 85*00         [ 3]  238 	sta	*___SDCC_m6502_ret3
   011C A5*09         [ 3]  239 	lda	*(_atol_sloc3_1_0 + 2)
   011E 85*00         [ 3]  240 	sta	*___SDCC_m6502_ret2
   0120 A6*08         [ 3]  241 	ldx	*(_atol_sloc3_1_0 + 1)
   0122 A5*07         [ 3]  242 	lda	*_atol_sloc3_1_0
                            243 ;	../atol.c: 51: }
   0124 60            [ 6]  244 	rts
                            245 	.area CODE
                            246 	.area RODATA
                            247 	.area XINIT
                            248 	.area CABS    (ABS)
