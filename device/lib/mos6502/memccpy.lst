                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module memccpy
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _memccpy_PARM_4
                             12 	.globl _memccpy_PARM_3
                             13 	.globl _memccpy_PARM_2
                             14 	.globl _memccpy
                             15 ;--------------------------------------------------------
                             16 ; ZP ram data
                             17 ;--------------------------------------------------------
                             18 	.area ZP      (PAG)
                             19 ;--------------------------------------------------------
                             20 ; overlayable items in ram
                             21 ;--------------------------------------------------------
                             22 	.area	OSEG    (PAG, OVR)
   0000                      23 _memccpy_sloc0_1_0:
   0000                      24 	.ds 2
   0002                      25 _memccpy_sloc1_1_0:
   0002                      26 	.ds 2
   0004                      27 _memccpy_sloc2_1_0:
   0004                      28 	.ds 2
   0006                      29 _memccpy_sloc3_1_0:
   0006                      30 	.ds 1
                             31 ;--------------------------------------------------------
                             32 ; uninitialized external ram data
                             33 ;--------------------------------------------------------
                             34 	.area BSS
   0000                      35 _memccpy_PARM_2:
   0000                      36 	.ds 2
   0002                      37 _memccpy_PARM_3:
   0002                      38 	.ds 2
   0004                      39 _memccpy_PARM_4:
   0004                      40 	.ds 2
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area DABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; initialized external ram data
                             47 ;--------------------------------------------------------
                             48 	.area DATA
                             49 ;--------------------------------------------------------
                             50 ; global & static initialisations
                             51 ;--------------------------------------------------------
                             52 	.area _CODE
                             53 	.area GSINIT
                             54 	.area GSFINAL
                             55 	.area GSINIT
                             56 ;--------------------------------------------------------
                             57 ; Home
                             58 ;--------------------------------------------------------
                             59 	.area _CODE
                             60 	.area _CODE
                             61 ;--------------------------------------------------------
                             62 ; code
                             63 ;--------------------------------------------------------
                             64 	.area CODE
                             65 ;------------------------------------------------------------
                             66 ;Allocation info for local variables in function 'memccpy'
                             67 ;------------------------------------------------------------
                             68 ;src                       Allocated with name '_memccpy_PARM_2'
                             69 ;c                         Allocated with name '_memccpy_PARM_3'
                             70 ;n                         Allocated with name '_memccpy_PARM_4'
                             71 ;dst                       Allocated to registers a x 
                             72 ;d                         Allocated to registers a x 
                             73 ;s                         Allocated to registers 
                             74 ;sloc0                     Allocated with name '_memccpy_sloc0_1_0'
                             75 ;sloc1                     Allocated with name '_memccpy_sloc1_1_0'
                             76 ;sloc2                     Allocated with name '_memccpy_sloc2_1_0'
                             77 ;sloc3                     Allocated with name '_memccpy_sloc3_1_0'
                             78 ;------------------------------------------------------------
                             79 ;	../memccpy.c: 31: void *memccpy (void *restrict dst, const void *restrict src, int c, size_t n)
                             80 ;	-----------------------------------------
                             81 ;	 function memccpy
                             82 ;	-----------------------------------------
                             83 ;	Register assignment is optimal.
                             84 ;	Stack space usage: 0 bytes.
   0000                      85 _memccpy:
                             86 ;	../memccpy.c: 33: char *d = dst;
   0000 85*00         [ 3]   87 	sta	*_memccpy_sloc0_1_0
   0002 86*01         [ 3]   88 	stx	*(_memccpy_sloc0_1_0 + 1)
                             89 ;	../memccpy.c: 34: const char *s = src;
   0004 ADr00r00      [ 4]   90 	lda	_memccpy_PARM_2
   0007 85*02         [ 3]   91 	sta	*_memccpy_sloc1_1_0
   0009 ADr01r00      [ 4]   92 	lda	(_memccpy_PARM_2 + 1)
   000C 85*03         [ 3]   93 	sta	*(_memccpy_sloc1_1_0 + 1)
                             94 ;	../memccpy.c: 36: while (n--)
   000E ADr04r00      [ 4]   95 	lda	_memccpy_PARM_4
   0011 85*04         [ 3]   96 	sta	*_memccpy_sloc2_1_0
   0013 ADr05r00      [ 4]   97 	lda	(_memccpy_PARM_4 + 1)
   0016 85*05         [ 3]   98 	sta	*(_memccpy_sloc2_1_0 + 1)
   0018                      99 00103$:
   0018 A5*04         [ 3]  100 	lda	*_memccpy_sloc2_1_0
   001A A6*05         [ 3]  101 	ldx	*(_memccpy_sloc2_1_0 + 1)
   001C 48            [ 3]  102 	pha
   001D 38            [ 2]  103 	sec
   001E A5*04         [ 3]  104 	lda	*_memccpy_sloc2_1_0
   0020 E9 01         [ 2]  105 	sbc	#0x01
   0022 85*04         [ 3]  106 	sta	*_memccpy_sloc2_1_0
   0024 B0 02         [ 4]  107 	bcs	00123$
   0026 C6*05         [ 5]  108 	dec	*(_memccpy_sloc2_1_0 + 1)
   0028                     109 00123$:
   0028 68            [ 4]  110 	pla
   0029 D0 02         [ 4]  111 	bne	00124$
   002B E0 00         [ 2]  112 	cpx	#0x00
   002D                     113 00124$:
   002D F0 22         [ 4]  114 	beq	00105$
                            115 ;	../memccpy.c: 37: if ((*d++ = *s++) == (unsigned char)c)
   002F A0 00         [ 2]  116 	ldy	#0x00
   0031 B1*02         [ 6]  117 	lda	[*_memccpy_sloc1_1_0],y
   0033 85*06         [ 3]  118 	sta	*_memccpy_sloc3_1_0
   0035 E6*02         [ 5]  119 	inc	*_memccpy_sloc1_1_0
   0037 D0 02         [ 4]  120 	bne	00126$
   0039 E6*03         [ 5]  121 	inc	*(_memccpy_sloc1_1_0 + 1)
   003B                     122 00126$:
   003B A5*06         [ 3]  123 	lda	*_memccpy_sloc3_1_0
   003D 91*00         [ 6]  124 	sta	[*_memccpy_sloc0_1_0],y
   003F E6*00         [ 5]  125 	inc	*_memccpy_sloc0_1_0
   0041 D0 02         [ 4]  126 	bne	00127$
   0043 E6*01         [ 5]  127 	inc	*(_memccpy_sloc0_1_0 + 1)
   0045                     128 00127$:
   0045 A5*00         [ 3]  129 	lda	*_memccpy_sloc0_1_0
   0047 A6*01         [ 3]  130 	ldx	*(_memccpy_sloc0_1_0 + 1)
   0049 ACr02r00      [ 4]  131 	ldy	_memccpy_PARM_3
   004C C4*06         [ 3]  132 	cpy	*_memccpy_sloc3_1_0
   004E D0 C8         [ 4]  133 	bne	00103$
                            134 ;	../memccpy.c: 38: return (d);
   0050 60            [ 6]  135 	rts
   0051                     136 00105$:
                            137 ;	../memccpy.c: 40: return (0);
   0051 A9 00         [ 2]  138 	lda	#0x00
   0053 AA            [ 2]  139 	tax
                            140 ;	../memccpy.c: 41: }
   0054 60            [ 6]  141 	rts
                            142 	.area CODE
                            143 	.area RODATA
                            144 	.area XINIT
                            145 	.area CABS    (ABS)
