                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module modff
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _modff_PARM_2
                             12 	.globl _modff_PARM_1
                             13 	.globl _modff
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
   0000                      18 _modff_sloc0_1_0:
   0000                      19 	.ds 2
   0002                      20 _modff_sloc1_1_0:
   0002                      21 	.ds 4
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in ram
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; uninitialized external ram data
                             27 ;--------------------------------------------------------
                             28 	.area BSS
   0000                      29 _modff_PARM_1:
   0000                      30 	.ds 4
   0004                      31 _modff_PARM_2:
   0004                      32 	.ds 2
                             33 ;--------------------------------------------------------
                             34 ; absolute external ram data
                             35 ;--------------------------------------------------------
                             36 	.area DABS    (ABS)
                             37 ;--------------------------------------------------------
                             38 ; initialized external ram data
                             39 ;--------------------------------------------------------
                             40 	.area DATA
                             41 ;--------------------------------------------------------
                             42 ; global & static initialisations
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area GSINIT
                             46 	.area GSFINAL
                             47 	.area GSINIT
                             48 ;--------------------------------------------------------
                             49 ; Home
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 	.area _CODE
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area CODE
                             57 ;------------------------------------------------------------
                             58 ;Allocation info for local variables in function 'modff'
                             59 ;------------------------------------------------------------
                             60 ;sloc0                     Allocated with name '_modff_sloc0_1_0'
                             61 ;sloc1                     Allocated with name '_modff_sloc1_1_0'
                             62 ;x                         Allocated with name '_modff_PARM_1'
                             63 ;y                         Allocated with name '_modff_PARM_2'
                             64 ;------------------------------------------------------------
                             65 ;	../modff.c: 33: float modff(float x, float * y)
                             66 ;	-----------------------------------------
                             67 ;	 function modff
                             68 ;	-----------------------------------------
                             69 ;	Register assignment is optimal.
                             70 ;	Stack space usage: 0 bytes.
   0000                      71 _modff:
                             72 ;	../modff.c: 35: *y=(long)x;
   0000 ADr04r00      [ 4]   73 	lda	_modff_PARM_2
   0003 85*00         [ 3]   74 	sta	*_modff_sloc0_1_0
   0005 ADr05r00      [ 4]   75 	lda	(_modff_PARM_2 + 1)
   0008 85*01         [ 3]   76 	sta	*(_modff_sloc0_1_0 + 1)
   000A ADr00r00      [ 4]   77 	lda	_modff_PARM_1
   000D 8Dr00r00      [ 4]   78 	sta	___fs2slong_PARM_1
   0010 ADr01r00      [ 4]   79 	lda	(_modff_PARM_1 + 1)
   0013 8Dr01r00      [ 4]   80 	sta	(___fs2slong_PARM_1 + 1)
   0016 ADr02r00      [ 4]   81 	lda	(_modff_PARM_1 + 2)
   0019 8Dr02r00      [ 4]   82 	sta	(___fs2slong_PARM_1 + 2)
   001C ADr03r00      [ 4]   83 	lda	(_modff_PARM_1 + 3)
   001F 8Dr03r00      [ 4]   84 	sta	(___fs2slong_PARM_1 + 3)
   0022 20r00r00      [ 6]   85 	jsr	___fs2slong
   0025 8Dr00r00      [ 4]   86 	sta	___slong2fs_PARM_1
   0028 8Er01r00      [ 4]   87 	stx	(___slong2fs_PARM_1 + 1)
   002B A5*00         [ 3]   88 	lda	*___SDCC_m6502_ret2
   002D 8Dr02r00      [ 4]   89 	sta	(___slong2fs_PARM_1 + 2)
   0030 A5*00         [ 3]   90 	lda	*___SDCC_m6502_ret3
   0032 8Dr03r00      [ 4]   91 	sta	(___slong2fs_PARM_1 + 3)
   0035 20r00r00      [ 6]   92 	jsr	___slong2fs
   0038 85*02         [ 3]   93 	sta	*_modff_sloc1_1_0
   003A 86*03         [ 3]   94 	stx	*(_modff_sloc1_1_0 + 1)
   003C A5*00         [ 3]   95 	lda	*___SDCC_m6502_ret2
   003E 85*04         [ 3]   96 	sta	*(_modff_sloc1_1_0 + 2)
   0040 A5*00         [ 3]   97 	lda	*___SDCC_m6502_ret3
   0042 85*05         [ 3]   98 	sta	*(_modff_sloc1_1_0 + 3)
   0044 A5*02         [ 3]   99 	lda	*_modff_sloc1_1_0
   0046 A0 00         [ 2]  100 	ldy	#0x00
   0048 91*00         [ 6]  101 	sta	[*_modff_sloc0_1_0],y
   004A A5*03         [ 3]  102 	lda	*(_modff_sloc1_1_0 + 1)
   004C C8            [ 2]  103 	iny
   004D 91*00         [ 6]  104 	sta	[*_modff_sloc0_1_0],y
   004F A5*04         [ 3]  105 	lda	*(_modff_sloc1_1_0 + 2)
   0051 C8            [ 2]  106 	iny
   0052 91*00         [ 6]  107 	sta	[*_modff_sloc0_1_0],y
   0054 A5*05         [ 3]  108 	lda	*(_modff_sloc1_1_0 + 3)
   0056 C8            [ 2]  109 	iny
   0057 91*00         [ 6]  110 	sta	[*_modff_sloc0_1_0],y
                            111 ;	../modff.c: 36: return (x-*y);
   0059 ADr00r00      [ 4]  112 	lda	_modff_PARM_1
   005C 8Dr00r00      [ 4]  113 	sta	___fssub_PARM_1
   005F ADr01r00      [ 4]  114 	lda	(_modff_PARM_1 + 1)
   0062 8Dr01r00      [ 4]  115 	sta	(___fssub_PARM_1 + 1)
   0065 ADr02r00      [ 4]  116 	lda	(_modff_PARM_1 + 2)
   0068 8Dr02r00      [ 4]  117 	sta	(___fssub_PARM_1 + 2)
   006B ADr03r00      [ 4]  118 	lda	(_modff_PARM_1 + 3)
   006E 8Dr03r00      [ 4]  119 	sta	(___fssub_PARM_1 + 3)
   0071 A5*02         [ 3]  120 	lda	*_modff_sloc1_1_0
   0073 8Dr00r00      [ 4]  121 	sta	___fssub_PARM_2
   0076 A5*03         [ 3]  122 	lda	*(_modff_sloc1_1_0 + 1)
   0078 8Dr01r00      [ 4]  123 	sta	(___fssub_PARM_2 + 1)
   007B A5*04         [ 3]  124 	lda	*(_modff_sloc1_1_0 + 2)
   007D 8Dr02r00      [ 4]  125 	sta	(___fssub_PARM_2 + 2)
   0080 A5*05         [ 3]  126 	lda	*(_modff_sloc1_1_0 + 3)
   0082 8Dr03r00      [ 4]  127 	sta	(___fssub_PARM_2 + 3)
   0085 20r00r00      [ 6]  128 	jsr	___fssub
   0088 85*02         [ 3]  129 	sta	*_modff_sloc1_1_0
   008A 86*03         [ 3]  130 	stx	*(_modff_sloc1_1_0 + 1)
   008C A5*00         [ 3]  131 	lda	*___SDCC_m6502_ret2
   008E 85*04         [ 3]  132 	sta	*(_modff_sloc1_1_0 + 2)
   0090 A5*00         [ 3]  133 	lda	*___SDCC_m6502_ret3
   0092 85*05         [ 3]  134 	sta	*(_modff_sloc1_1_0 + 3)
   0094 85*00         [ 3]  135 	sta	*___SDCC_m6502_ret3
   0096 A5*04         [ 3]  136 	lda	*(_modff_sloc1_1_0 + 2)
   0098 85*00         [ 3]  137 	sta	*___SDCC_m6502_ret2
   009A A6*03         [ 3]  138 	ldx	*(_modff_sloc1_1_0 + 1)
   009C A5*02         [ 3]  139 	lda	*_modff_sloc1_1_0
                            140 ;	../modff.c: 37: }
   009E 60            [ 6]  141 	rts
                            142 	.area CODE
                            143 	.area RODATA
                            144 	.area XINIT
                            145 	.area CABS    (ABS)
