                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module atomic_flag_test_and_set
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _atomic_flag_test_and_set
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 	.area	OSEG    (PAG, OVR)
   0000                      20 _atomic_flag_test_and_set_sloc0_1_0:
   0000                      21 	.ds 2
                             22 ;--------------------------------------------------------
                             23 ; uninitialized external ram data
                             24 ;--------------------------------------------------------
                             25 	.area BSS
   0000                      26 _atomic_flag_test_and_set_object_65536_3:
   0000                      27 	.ds 2
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area DABS    (ABS)
                             32 ;--------------------------------------------------------
                             33 ; initialized external ram data
                             34 ;--------------------------------------------------------
                             35 	.area DATA
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 	.area GSINIT
                             41 	.area GSFINAL
                             42 	.area GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 	.area _CODE
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area CODE
                             52 ;------------------------------------------------------------
                             53 ;Allocation info for local variables in function 'atomic_flag_test_and_set'
                             54 ;------------------------------------------------------------
                             55 ;object                    Allocated with name '_atomic_flag_test_and_set_object_65536_3'
                             56 ;t                         Allocated to registers x 
                             57 ;sloc0                     Allocated with name '_atomic_flag_test_and_set_sloc0_1_0'
                             58 ;------------------------------------------------------------
                             59 ;	atomic_flag_test_and_set.c: 31: _Bool atomic_flag_test_and_set(volatile atomic_flag *object)
                             60 ;	-----------------------------------------
                             61 ;	 function atomic_flag_test_and_set
                             62 ;	-----------------------------------------
                             63 ;	Register assignment is optimal.
                             64 ;	Stack space usage: 0 bytes.
   0000                      65 _atomic_flag_test_and_set:
                             66 ;	atomic_flag_test_and_set.c: 34: t=object->flag;
   0000 8Dr00r00      [ 4]   67 	sta	_atomic_flag_test_and_set_object_65536_3
   0003 8Er01r00      [ 4]   68 	stx	(_atomic_flag_test_and_set_object_65536_3 + 1)
   0006 85*00         [ 3]   69 	sta	*_atomic_flag_test_and_set_sloc0_1_0
   0008 86*01         [ 3]   70 	stx	*(_atomic_flag_test_and_set_sloc0_1_0 + 1)
   000A A0 00         [ 2]   71 	ldy	#0x00
   000C B1*00         [ 6]   72 	lda	[*_atomic_flag_test_and_set_sloc0_1_0],y
   000E AA            [ 2]   73 	tax
                             74 ;	atomic_flag_test_and_set.c: 35: object->flag=0;
   000F 98            [ 2]   75 	tya
   0010 91*00         [ 6]   76 	sta	[*_atomic_flag_test_and_set_sloc0_1_0],y
                             77 ;	atomic_flag_test_and_set.c: 36: return t^0x01;
   0012 8A            [ 2]   78 	txa
   0013 49 01         [ 2]   79 	eor	#0x01
   0015 C9 01         [ 2]   80 	cmp	#0x01
   0017 98            [ 2]   81 	tya
   0018 2A            [ 2]   82 	rol	a
                             83 ;	atomic_flag_test_and_set.c: 37: }
   0019 60            [ 6]   84 	rts
                             85 	.area CODE
                             86 	.area RODATA
                             87 	.area XINIT
                             88 	.area CABS    (ABS)
