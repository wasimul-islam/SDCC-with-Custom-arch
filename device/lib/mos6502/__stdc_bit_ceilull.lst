                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __stdc_bit_ceilull
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___stdc_bit_ceilull_PARM_1
                             12 	.globl ___stdc_bit_ceilull
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
   0000                      17 ___stdc_bit_ceilull_sloc0_1_0:
   0000                      18 	.ds 8
                             19 ;--------------------------------------------------------
                             20 ; overlayable items in ram
                             21 ;--------------------------------------------------------
                             22 ;--------------------------------------------------------
                             23 ; uninitialized external ram data
                             24 ;--------------------------------------------------------
                             25 	.area BSS
   0000                      26 ___stdc_bit_ceilull_PARM_1:
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area DABS    (ABS)
                             32 ;--------------------------------------------------------
                             33 ; initialized external ram data
                             34 ;--------------------------------------------------------
                             35 	.area DATA
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 	.area GSINIT
                             41 	.area GSFINAL
                             42 	.area GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 	.area _CODE
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area CODE
                             52 ;------------------------------------------------------------
                             53 ;Allocation info for local variables in function '__stdc_bit_ceilull'
                             54 ;------------------------------------------------------------
                             55 ;sloc0                     Allocated with name '___stdc_bit_ceilull_sloc0_1_0'
                             56 ;value                     Allocated with name '___stdc_bit_ceilull_PARM_1'
                             57 ;i                         Allocated to registers 
                             58 ;------------------------------------------------------------
                             59 ;	../__stdc_bit_ceilull.c: 37: unsigned long long __stdc_bit_ceilull(unsigned long long value)
                             60 ;	-----------------------------------------
                             61 ;	 function __stdc_bit_ceilull
                             62 ;	-----------------------------------------
                             63 ;	Register assignment is optimal.
                             64 ;	Stack space usage: 0 bytes.
   0000                      65 ___stdc_bit_ceilull:
                             66 ;	../__stdc_bit_ceilull.c: 40: for(i = 0; i < ULLONG_WIDTH; i++)
   0000 A2 00         [ 2]   67 	ldx	#0x00
   0002                      68 00104$:
                             69 ;	../__stdc_bit_ceilull.c: 41: if(value <= (1ull << i))
   0002 A0 01         [ 2]   70 	ldy	#0x01
   0004 8Cr00r00      [ 4]   71 	sty	__rlulonglong_PARM_1
   0007 88            [ 2]   72 	dey
   0008 8Cr01r00      [ 4]   73 	sty	(__rlulonglong_PARM_1 + 1)
   000B 8Cr02r00      [ 4]   74 	sty	(__rlulonglong_PARM_1 + 2)
   000E 8Cr03r00      [ 4]   75 	sty	(__rlulonglong_PARM_1 + 3)
   0011 8Cr04r00      [ 4]   76 	sty	(__rlulonglong_PARM_1 + 4)
   0014 8Cr05r00      [ 4]   77 	sty	(__rlulonglong_PARM_1 + 5)
   0017 8Cr06r00      [ 4]   78 	sty	(__rlulonglong_PARM_1 + 6)
   001A 8Cr07r00      [ 4]   79 	sty	(__rlulonglong_PARM_1 + 7)
   001D 8Er00r00      [ 4]   80 	stx	__rlulonglong_PARM_2
   0020 85*00         [ 3]   81 	sta	*(__TEMP+0)
   0022 8A            [ 2]   82 	txa
   0023 48            [ 3]   83 	pha
   0024 A5*00         [ 3]   84 	lda	*(__TEMP+0)
   0026 20r00r00      [ 6]   85 	jsr	__rlulonglong
   0029 85*00         [ 3]   86 	sta	*___stdc_bit_ceilull_sloc0_1_0
   002B 86*01         [ 3]   87 	stx	*(___stdc_bit_ceilull_sloc0_1_0 + 1)
   002D A5*00         [ 3]   88 	lda	*___SDCC_m6502_ret2
   002F 85*02         [ 3]   89 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 2)
   0031 A5*00         [ 3]   90 	lda	*___SDCC_m6502_ret3
   0033 85*03         [ 3]   91 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 3)
   0035 A5*00         [ 3]   92 	lda	*___SDCC_m6502_ret4
   0037 85*04         [ 3]   93 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 4)
   0039 A5*00         [ 3]   94 	lda	*___SDCC_m6502_ret5
   003B 85*05         [ 3]   95 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 5)
   003D A5*00         [ 3]   96 	lda	*___SDCC_m6502_ret6
   003F 85*06         [ 3]   97 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 6)
   0041 A5*00         [ 3]   98 	lda	*___SDCC_m6502_ret7
   0043 85*07         [ 3]   99 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 7)
   0045 85*00         [ 3]  100 	sta	*(__TEMP+0)
   0047 68            [ 4]  101 	pla
   0048 AA            [ 2]  102 	tax
   0049 A5*00         [ 3]  103 	lda	*___stdc_bit_ceilull_sloc0_1_0
   004B 38            [ 2]  104 	sec
   004C EDr00r00      [ 4]  105 	sbc	___stdc_bit_ceilull_PARM_1
   004F A5*01         [ 3]  106 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 1)
   0051 EDr01r00      [ 4]  107 	sbc	(___stdc_bit_ceilull_PARM_1 + 1)
   0054 A5*02         [ 3]  108 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 2)
   0056 EDr02r00      [ 4]  109 	sbc	(___stdc_bit_ceilull_PARM_1 + 2)
   0059 A5*03         [ 3]  110 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 3)
   005B EDr03r00      [ 4]  111 	sbc	(___stdc_bit_ceilull_PARM_1 + 3)
   005E A5*04         [ 3]  112 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 4)
   0060 EDr04r00      [ 4]  113 	sbc	(___stdc_bit_ceilull_PARM_1 + 4)
   0063 A5*05         [ 3]  114 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 5)
   0065 EDr05r00      [ 4]  115 	sbc	(___stdc_bit_ceilull_PARM_1 + 5)
   0068 A5*06         [ 3]  116 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 6)
   006A EDr06r00      [ 4]  117 	sbc	(___stdc_bit_ceilull_PARM_1 + 6)
   006D A5*07         [ 3]  118 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 7)
   006F EDr07r00      [ 4]  119 	sbc	(___stdc_bit_ceilull_PARM_1 + 7)
   0072 B0 05         [ 4]  120 	bcs	00103$
                            121 ;	../__stdc_bit_ceilull.c: 40: for(i = 0; i < ULLONG_WIDTH; i++)
   0074 E8            [ 2]  122 	inx
   0075 E0 40         [ 2]  123 	cpx	#0x40
   0077 90 89         [ 4]  124 	bcc	00104$
   0079                     125 00103$:
                            126 ;	../__stdc_bit_ceilull.c: 43: return (1ull << i);
   0079 A0 01         [ 2]  127 	ldy	#0x01
   007B 8Cr00r00      [ 4]  128 	sty	__rlulonglong_PARM_1
   007E 88            [ 2]  129 	dey
   007F 8Cr01r00      [ 4]  130 	sty	(__rlulonglong_PARM_1 + 1)
   0082 8Cr02r00      [ 4]  131 	sty	(__rlulonglong_PARM_1 + 2)
   0085 8Cr03r00      [ 4]  132 	sty	(__rlulonglong_PARM_1 + 3)
   0088 8Cr04r00      [ 4]  133 	sty	(__rlulonglong_PARM_1 + 4)
   008B 8Cr05r00      [ 4]  134 	sty	(__rlulonglong_PARM_1 + 5)
   008E 8Cr06r00      [ 4]  135 	sty	(__rlulonglong_PARM_1 + 6)
   0091 8Cr07r00      [ 4]  136 	sty	(__rlulonglong_PARM_1 + 7)
   0094 8Er00r00      [ 4]  137 	stx	__rlulonglong_PARM_2
   0097 20r00r00      [ 6]  138 	jsr	__rlulonglong
   009A 85*00         [ 3]  139 	sta	*___stdc_bit_ceilull_sloc0_1_0
   009C 86*01         [ 3]  140 	stx	*(___stdc_bit_ceilull_sloc0_1_0 + 1)
   009E A5*00         [ 3]  141 	lda	*___SDCC_m6502_ret2
   00A0 85*02         [ 3]  142 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 2)
   00A2 A5*00         [ 3]  143 	lda	*___SDCC_m6502_ret3
   00A4 85*03         [ 3]  144 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 3)
   00A6 A5*00         [ 3]  145 	lda	*___SDCC_m6502_ret4
   00A8 85*04         [ 3]  146 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 4)
   00AA A5*00         [ 3]  147 	lda	*___SDCC_m6502_ret5
   00AC 85*05         [ 3]  148 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 5)
   00AE A5*00         [ 3]  149 	lda	*___SDCC_m6502_ret6
   00B0 85*06         [ 3]  150 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 6)
   00B2 A5*00         [ 3]  151 	lda	*___SDCC_m6502_ret7
   00B4 85*07         [ 3]  152 	sta	*(___stdc_bit_ceilull_sloc0_1_0 + 7)
   00B6 85*00         [ 3]  153 	sta	*___SDCC_m6502_ret7
   00B8 A5*06         [ 3]  154 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 6)
   00BA 85*00         [ 3]  155 	sta	*___SDCC_m6502_ret6
   00BC A5*05         [ 3]  156 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 5)
   00BE 85*00         [ 3]  157 	sta	*___SDCC_m6502_ret5
   00C0 A5*04         [ 3]  158 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 4)
   00C2 85*00         [ 3]  159 	sta	*___SDCC_m6502_ret4
   00C4 A5*03         [ 3]  160 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 3)
   00C6 85*00         [ 3]  161 	sta	*___SDCC_m6502_ret3
   00C8 A5*02         [ 3]  162 	lda	*(___stdc_bit_ceilull_sloc0_1_0 + 2)
   00CA 85*00         [ 3]  163 	sta	*___SDCC_m6502_ret2
   00CC A6*01         [ 3]  164 	ldx	*(___stdc_bit_ceilull_sloc0_1_0 + 1)
   00CE A5*00         [ 3]  165 	lda	*___stdc_bit_ceilull_sloc0_1_0
                            166 ;	../__stdc_bit_ceilull.c: 44: }
   00D0 60            [ 6]  167 	rts
                            168 	.area CODE
                            169 	.area RODATA
                            170 	.area XINIT
                            171 	.area CABS    (ABS)
