                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module c16stombs
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___memcpy
                             12 	.globl _wctomb
                             13 	.globl ___c16stombs_PARM_3
                             14 	.globl ___c16stombs_PARM_2
                             15 	.globl ___c16stombs
                             16 ;--------------------------------------------------------
                             17 ; ZP ram data
                             18 ;--------------------------------------------------------
                             19 	.area ZP      (PAG)
   0000                      20 ___c16stombs_sloc0_1_0:
   0000                      21 	.ds 2
   0002                      22 ___c16stombs_sloc1_1_0:
   0002                      23 	.ds 2
   0004                      24 ___c16stombs_sloc2_1_0:
   0004                      25 	.ds 2
   0006                      26 ___c16stombs_sloc3_1_0:
   0006                      27 	.ds 4
   000A                      28 ___c16stombs_sloc4_1_0:
   000A                      29 	.ds 4
                             30 ;--------------------------------------------------------
                             31 ; overlayable items in ram
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; uninitialized external ram data
                             35 ;--------------------------------------------------------
                             36 	.area BSS
   0000                      37 ___c16stombs_PARM_2:
   0000                      38 	.ds 2
   0002                      39 ___c16stombs_PARM_3:
   0002                      40 	.ds 2
   0004                      41 ___c16stombs_s_65536_75:
   0004                      42 	.ds 2
   0006                      43 ___c16stombs_m_65536_76:
   0006                      44 	.ds 2
   0008                      45 ___c16stombs_b_65536_76:
   0008                      46 	.ds 4
   000C                      47 ___c16stombs_l_196608_78:
   000C                      48 	.ds 2
   000E                      49 ___c16stombs_codepoint_196608_78:
   000E                      50 	.ds 4
                             51 ;--------------------------------------------------------
                             52 ; absolute external ram data
                             53 ;--------------------------------------------------------
                             54 	.area DABS    (ABS)
                             55 ;--------------------------------------------------------
                             56 ; initialized external ram data
                             57 ;--------------------------------------------------------
                             58 	.area DATA
                             59 ;--------------------------------------------------------
                             60 ; global & static initialisations
                             61 ;--------------------------------------------------------
                             62 	.area _CODE
                             63 	.area GSINIT
                             64 	.area GSFINAL
                             65 	.area GSINIT
                             66 ;--------------------------------------------------------
                             67 ; Home
                             68 ;--------------------------------------------------------
                             69 	.area _CODE
                             70 	.area _CODE
                             71 ;--------------------------------------------------------
                             72 ; code
                             73 ;--------------------------------------------------------
                             74 	.area CODE
                             75 ;------------------------------------------------------------
                             76 ;Allocation info for local variables in function '__c16stombs'
                             77 ;------------------------------------------------------------
                             78 ;sloc0                     Allocated with name '___c16stombs_sloc0_1_0'
                             79 ;sloc1                     Allocated with name '___c16stombs_sloc1_1_0'
                             80 ;sloc2                     Allocated with name '___c16stombs_sloc2_1_0'
                             81 ;sloc3                     Allocated with name '___c16stombs_sloc3_1_0'
                             82 ;sloc4                     Allocated with name '___c16stombs_sloc4_1_0'
                             83 ;c16s                      Allocated with name '___c16stombs_PARM_2'
                             84 ;n                         Allocated with name '___c16stombs_PARM_3'
                             85 ;s                         Allocated with name '___c16stombs_s_65536_75'
                             86 ;m                         Allocated with name '___c16stombs_m_65536_76'
                             87 ;b                         Allocated with name '___c16stombs_b_65536_76'
                             88 ;l                         Allocated with name '___c16stombs_l_196608_78'
                             89 ;codepoint                 Allocated with name '___c16stombs_codepoint_196608_78'
                             90 ;------------------------------------------------------------
                             91 ;	../c16stombs.c: 44: size_t __c16stombs(char *restrict s, const char16_t *restrict c16s, size_t n)
                             92 ;	-----------------------------------------
                             93 ;	 function __c16stombs
                             94 ;	-----------------------------------------
                             95 ;	Register assignment is optimal.
                             96 ;	Stack space usage: 0 bytes.
   0000                      97 ___c16stombs:
   0000 8Dr04r00      [ 4]   98 	sta	___c16stombs_s_65536_75
   0003 8Er05r00      [ 4]   99 	stx	(___c16stombs_s_65536_75 + 1)
                            100 ;	../c16stombs.c: 46: size_t m = 0;
   0006 A2 00         [ 2]  101 	ldx	#0x00
   0008 8Er06r00      [ 4]  102 	stx	___c16stombs_m_65536_76
   000B 8Er07r00      [ 4]  103 	stx	(___c16stombs_m_65536_76 + 1)
                            104 ;	../c16stombs.c: 87: return(m);
   000E                     105 00119$:
                            106 ;	../c16stombs.c: 54: if(c16s[0] < 0xd800 || c16s[0] >= 0xe000) // Basic multilingual plane
   000E ADr00r00      [ 4]  107 	lda	___c16stombs_PARM_2
   0011 85*00         [ 3]  108 	sta	*___c16stombs_sloc0_1_0
   0013 ADr01r00      [ 4]  109 	lda	(___c16stombs_PARM_2 + 1)
   0016 85*01         [ 3]  110 	sta	*(___c16stombs_sloc0_1_0 + 1)
   0018 A0 00         [ 2]  111 	ldy	#0x00
   001A B1*00         [ 6]  112 	lda	[*___c16stombs_sloc0_1_0],y
   001C 85*02         [ 3]  113 	sta	*___c16stombs_sloc1_1_0
   001E C8            [ 2]  114 	iny
   001F B1*00         [ 6]  115 	lda	[*___c16stombs_sloc0_1_0],y
   0021 85*03         [ 3]  116 	sta	*(___c16stombs_sloc1_1_0 + 1)
   0023 38            [ 2]  117 	sec
   0024 E9 D8         [ 2]  118 	sbc	#0xd8
   0026 90 07         [ 4]  119 	bcc	00106$
   0028 A5*03         [ 3]  120 	lda	*(___c16stombs_sloc1_1_0 + 1)
   002A 38            [ 2]  121 	sec
   002B E9 E0         [ 2]  122 	sbc	#0xe0
   002D 90 30         [ 4]  123 	bcc	00107$
   002F                     124 00106$:
                            125 ;	../c16stombs.c: 56: codepoint = c16s[0];
   002F ADr00r00      [ 4]  126 	lda	___c16stombs_PARM_2
   0032 85*04         [ 3]  127 	sta	*___c16stombs_sloc2_1_0
   0034 ADr01r00      [ 4]  128 	lda	(___c16stombs_PARM_2 + 1)
   0037 85*05         [ 3]  129 	sta	*(___c16stombs_sloc2_1_0 + 1)
   0039 A0 01         [ 2]  130 	ldy	#0x01
   003B B1*04         [ 6]  131 	lda	[*___c16stombs_sloc2_1_0],y
   003D AA            [ 2]  132 	tax
   003E 88            [ 2]  133 	dey
   003F B1*04         [ 6]  134 	lda	[*___c16stombs_sloc2_1_0],y
   0041 8Dr0Er00      [ 4]  135 	sta	___c16stombs_codepoint_196608_78
   0044 8Er0Fr00      [ 4]  136 	stx	(___c16stombs_codepoint_196608_78 + 1)
   0047 8Cr10r00      [ 4]  137 	sty	(___c16stombs_codepoint_196608_78 + 2)
   004A 8Cr11r00      [ 4]  138 	sty	(___c16stombs_codepoint_196608_78 + 3)
                            139 ;	../c16stombs.c: 57: c16s++;
   004D A5*04         [ 3]  140 	lda	*___c16stombs_sloc2_1_0
   004F 18            [ 2]  141 	clc
   0050 69 02         [ 2]  142 	adc	#0x02
   0052 8Dr00r00      [ 4]  143 	sta	___c16stombs_PARM_2
   0055 A5*05         [ 3]  144 	lda	*(___c16stombs_sloc2_1_0 + 1)
   0057 69 00         [ 2]  145 	adc	#0x00
   0059 8Dr01r00      [ 4]  146 	sta	(___c16stombs_PARM_2 + 1)
   005C 4Cr18r01      [ 3]  147 	jmp	00108$
   005F                     148 00107$:
                            149 ;	../c16stombs.c: 59: else if(c16s[0] > 0xdbff || c16s[1] < 0xdc00 || c16s[1] > 0xdfff) // Unpaired surrogate
   005F A9 FF         [ 2]  150 	lda	#0xff
   0061 38            [ 2]  151 	sec
   0062 E5*02         [ 3]  152 	sbc	*___c16stombs_sloc1_1_0
   0064 A9 DB         [ 2]  153 	lda	#0xdb
   0066 E5*03         [ 3]  154 	sbc	*(___c16stombs_sloc1_1_0 + 1)
   0068 90 23         [ 4]  155 	bcc	00101$
   006A A5*00         [ 3]  156 	lda	*___c16stombs_sloc0_1_0
   006C A6*01         [ 3]  157 	ldx	*(___c16stombs_sloc0_1_0 + 1)
   006E 85*00         [ 3]  158 	sta	*(__DPTR+0)
   0070 86*01         [ 3]  159 	stx	*(__DPTR+1)
   0072 A0 02         [ 2]  160 	ldy	#0x02
   0074 B1*00         [ 6]  161 	lda	[__DPTR],y
   0076 85*04         [ 3]  162 	sta	*___c16stombs_sloc2_1_0
   0078 C8            [ 2]  163 	iny
   0079 B1*00         [ 6]  164 	lda	[__DPTR],y
   007B 85*05         [ 3]  165 	sta	*(___c16stombs_sloc2_1_0 + 1)
   007D 38            [ 2]  166 	sec
   007E E9 DC         [ 2]  167 	sbc	#0xdc
   0080 90 0B         [ 4]  168 	bcc	00101$
   0082 A9 FF         [ 2]  169 	lda	#0xff
   0084 38            [ 2]  170 	sec
   0085 E5*04         [ 3]  171 	sbc	*___c16stombs_sloc2_1_0
   0087 A9 DF         [ 2]  172 	lda	#0xdf
   0089 E5*05         [ 3]  173 	sbc	*(___c16stombs_sloc2_1_0 + 1)
   008B B0 04         [ 4]  174 	bcs	00102$
   008D                     175 00101$:
                            176 ;	../c16stombs.c: 60: return(-1);
   008D A9 FF         [ 2]  177 	lda	#0xff
   008F AA            [ 2]  178 	tax
   0090 60            [ 6]  179 	rts
   0091                     180 00102$:
                            181 ;	../c16stombs.c: 63: codepoint = ((unsigned long)(c16s[0]) << 10) -(0xd800ul << 10) + (unsigned long)(c16s[1]) - 0xdc00ul + 0x10000ul;
   0091 A5*02         [ 3]  182 	lda	*___c16stombs_sloc1_1_0
   0093 85*06         [ 3]  183 	sta	*___c16stombs_sloc3_1_0
   0095 A5*03         [ 3]  184 	lda	*(___c16stombs_sloc1_1_0 + 1)
   0097 85*07         [ 3]  185 	sta	*(___c16stombs_sloc3_1_0 + 1)
   0099 A2 00         [ 2]  186 	ldx	#0x00
   009B 86*08         [ 3]  187 	stx	*(___c16stombs_sloc3_1_0 + 2)
   009D 86*09         [ 3]  188 	stx	*(___c16stombs_sloc3_1_0 + 3)
   009F A5*07         [ 3]  189 	lda	*(___c16stombs_sloc3_1_0 + 1)
   00A1 A6*08         [ 3]  190 	ldx	*(___c16stombs_sloc3_1_0 + 2)
   00A3 0A            [ 2]  191 	asl	a
   00A4 48            [ 3]  192 	pha
   00A5 8A            [ 2]  193 	txa
   00A6 2A            [ 2]  194 	rol	a
   00A7 AA            [ 2]  195 	tax
   00A8 68            [ 4]  196 	pla
   00A9 0A            [ 2]  197 	asl	a
   00AA 48            [ 3]  198 	pha
   00AB 8A            [ 2]  199 	txa
   00AC 2A            [ 2]  200 	rol	a
   00AD AA            [ 2]  201 	tax
   00AE 68            [ 4]  202 	pla
   00AF 85*08         [ 3]  203 	sta	*(___c16stombs_sloc3_1_0 + 2)
   00B1 86*09         [ 3]  204 	stx	*(___c16stombs_sloc3_1_0 + 3)
   00B3 A5*06         [ 3]  205 	lda	*___c16stombs_sloc3_1_0
   00B5 0A            [ 2]  206 	asl	a
   00B6 0A            [ 2]  207 	asl	a
   00B7 85*07         [ 3]  208 	sta	*(___c16stombs_sloc3_1_0 + 1)
   00B9 A5*06         [ 3]  209 	lda	*___c16stombs_sloc3_1_0
   00BB 2A            [ 2]  210 	rol	a
   00BC 2A            [ 2]  211 	rol	a
   00BD 2A            [ 2]  212 	rol	a
   00BE 29 03         [ 2]  213 	and	#0x03
   00C0 05*08         [ 3]  214 	ora	*(___c16stombs_sloc3_1_0 + 2)
   00C2 85*08         [ 3]  215 	sta	*(___c16stombs_sloc3_1_0 + 2)
   00C4 A2 00         [ 2]  216 	ldx	#0x00
   00C6 86*06         [ 3]  217 	stx	*___c16stombs_sloc3_1_0
   00C8 A5*04         [ 3]  218 	lda	*___c16stombs_sloc2_1_0
   00CA 85*0A         [ 3]  219 	sta	*___c16stombs_sloc4_1_0
   00CC A5*05         [ 3]  220 	lda	*(___c16stombs_sloc2_1_0 + 1)
   00CE 85*0B         [ 3]  221 	sta	*(___c16stombs_sloc4_1_0 + 1)
   00D0 86*0C         [ 3]  222 	stx	*(___c16stombs_sloc4_1_0 + 2)
   00D2 86*0D         [ 3]  223 	stx	*(___c16stombs_sloc4_1_0 + 3)
   00D4 A5*06         [ 3]  224 	lda	*___c16stombs_sloc3_1_0
   00D6 18            [ 2]  225 	clc
   00D7 65*0A         [ 3]  226 	adc	*___c16stombs_sloc4_1_0
   00D9 85*0A         [ 3]  227 	sta	*___c16stombs_sloc4_1_0
   00DB A5*07         [ 3]  228 	lda	*(___c16stombs_sloc3_1_0 + 1)
   00DD 65*0B         [ 3]  229 	adc	*(___c16stombs_sloc4_1_0 + 1)
   00DF 85*0B         [ 3]  230 	sta	*(___c16stombs_sloc4_1_0 + 1)
   00E1 A5*08         [ 3]  231 	lda	*(___c16stombs_sloc3_1_0 + 2)
   00E3 65*0C         [ 3]  232 	adc	*(___c16stombs_sloc4_1_0 + 2)
   00E5 85*0C         [ 3]  233 	sta	*(___c16stombs_sloc4_1_0 + 2)
   00E7 A5*09         [ 3]  234 	lda	*(___c16stombs_sloc3_1_0 + 3)
   00E9 65*0D         [ 3]  235 	adc	*(___c16stombs_sloc4_1_0 + 3)
   00EB 85*0D         [ 3]  236 	sta	*(___c16stombs_sloc4_1_0 + 3)
   00ED A5*0A         [ 3]  237 	lda	*___c16stombs_sloc4_1_0
   00EF 18            [ 2]  238 	clc
   00F0 8Dr0Er00      [ 4]  239 	sta	___c16stombs_codepoint_196608_78
   00F3 A5*0B         [ 3]  240 	lda	*(___c16stombs_sloc4_1_0 + 1)
   00F5 18            [ 2]  241 	clc
   00F6 69 24         [ 2]  242 	adc	#0x24
   00F8 8Dr0Fr00      [ 4]  243 	sta	(___c16stombs_codepoint_196608_78 + 1)
   00FB A5*0C         [ 3]  244 	lda	*(___c16stombs_sloc4_1_0 + 2)
   00FD 69 A0         [ 2]  245 	adc	#0xa0
   00FF 8Dr10r00      [ 4]  246 	sta	(___c16stombs_codepoint_196608_78 + 2)
   0102 A5*0D         [ 3]  247 	lda	*(___c16stombs_sloc4_1_0 + 3)
   0104 69 FC         [ 2]  248 	adc	#0xfc
   0106 8Dr11r00      [ 4]  249 	sta	(___c16stombs_codepoint_196608_78 + 3)
                            250 ;	../c16stombs.c: 64: c16s += 2;
   0109 A5*00         [ 3]  251 	lda	*___c16stombs_sloc0_1_0
   010B 18            [ 2]  252 	clc
   010C 69 04         [ 2]  253 	adc	#0x04
   010E 8Dr00r00      [ 4]  254 	sta	___c16stombs_PARM_2
   0111 A5*01         [ 3]  255 	lda	*(___c16stombs_sloc0_1_0 + 1)
   0113 69 00         [ 2]  256 	adc	#0x00
   0115 8Dr01r00      [ 4]  257 	sta	(___c16stombs_PARM_2 + 1)
   0118                     258 00108$:
                            259 ;	../c16stombs.c: 67: if(!codepoint)
   0118 ADr11r00      [ 4]  260 	lda	(___c16stombs_codepoint_196608_78 + 3)
   011B 0Dr10r00      [ 4]  261 	ora	(___c16stombs_codepoint_196608_78 + 2)
   011E 0Dr0Fr00      [ 4]  262 	ora	(___c16stombs_codepoint_196608_78 + 1)
   0121 0Dr0Er00      [ 4]  263 	ora	___c16stombs_codepoint_196608_78
   0124 D0 24         [ 4]  264 	bne	00113$
                            265 ;	../c16stombs.c: 69: if(m < n)
   0126 ADr06r00      [ 4]  266 	lda	___c16stombs_m_65536_76
   0129 38            [ 2]  267 	sec
   012A EDr02r00      [ 4]  268 	sbc	___c16stombs_PARM_3
   012D ADr07r00      [ 4]  269 	lda	(___c16stombs_m_65536_76 + 1)
   0130 EDr03r00      [ 4]  270 	sbc	(___c16stombs_PARM_3 + 1)
   0133 90 03         [ 4]  271 	bcc	00161$
   0135 4CrEDr01      [ 3]  272 	jmp	00118$
   0138                     273 00161$:
                            274 ;	../c16stombs.c: 70: *s = 0;
   0138 ADr04r00      [ 4]  275 	lda	___c16stombs_s_65536_75
   013B 85*00         [ 3]  276 	sta	*(__DPTR+0)
   013D ADr05r00      [ 4]  277 	lda	(___c16stombs_s_65536_75 + 1)
   0140 85*01         [ 3]  278 	sta	*(__DPTR+1)
   0142 A9 00         [ 2]  279 	lda	#0x00
   0144 A8            [ 2]  280 	tay
   0145 91*00         [ 6]  281 	sta	[__DPTR],y
                            282 ;	../c16stombs.c: 71: break;
   0147 4CrEDr01      [ 3]  283 	jmp	00118$
   014A                     284 00113$:
                            285 ;	../c16stombs.c: 74: l = wctomb(b, codepoint);
   014A ADr0Er00      [ 4]  286 	lda	___c16stombs_codepoint_196608_78
   014D 8Dr00r00      [ 4]  287 	sta	_wctomb_PARM_2
   0150 ADr0Fr00      [ 4]  288 	lda	(___c16stombs_codepoint_196608_78 + 1)
   0153 8Dr01r00      [ 4]  289 	sta	(_wctomb_PARM_2 + 1)
   0156 ADr10r00      [ 4]  290 	lda	(___c16stombs_codepoint_196608_78 + 2)
   0159 8Dr02r00      [ 4]  291 	sta	(_wctomb_PARM_2 + 2)
   015C ADr11r00      [ 4]  292 	lda	(___c16stombs_codepoint_196608_78 + 3)
   015F 8Dr03r00      [ 4]  293 	sta	(_wctomb_PARM_2 + 3)
   0162 A2s00         [ 2]  294 	ldx	#>___c16stombs_b_65536_76
   0164 A9r08         [ 2]  295 	lda	#___c16stombs_b_65536_76
   0166 20r00r00      [ 6]  296 	jsr	_wctomb
   0169 8Dr0Cr00      [ 4]  297 	sta	___c16stombs_l_196608_78
   016C 8Er0Dr00      [ 4]  298 	stx	(___c16stombs_l_196608_78 + 1)
                            299 ;	../c16stombs.c: 76: if(l < 0)
   016F ADr0Dr00      [ 4]  300 	lda	(___c16stombs_l_196608_78 + 1)
   0172 38            [ 2]  301 	sec
   0173 E9 00         [ 2]  302 	sbc	#0x00
   0175 50 04         [ 4]  303 	bvc	00163$
   0177 10 04         [ 4]  304 	bpl	00162$
   0179 30 06         [ 4]  305 	bmi	00115$
   017B                     306 00163$:
   017B 10 04         [ 4]  307 	bpl	00115$
   017D                     308 00162$:
                            309 ;	../c16stombs.c: 77: return(-1);
   017D A9 FF         [ 2]  310 	lda	#0xff
   017F AA            [ 2]  311 	tax
   0180 60            [ 6]  312 	rts
   0181                     313 00115$:
                            314 ;	../c16stombs.c: 79: if(m + l > n)
   0181 ADr0Cr00      [ 4]  315 	lda	___c16stombs_l_196608_78
   0184 85*0A         [ 3]  316 	sta	*___c16stombs_sloc4_1_0
   0186 ADr0Dr00      [ 4]  317 	lda	(___c16stombs_l_196608_78 + 1)
   0189 85*0B         [ 3]  318 	sta	*(___c16stombs_sloc4_1_0 + 1)
   018B ADr06r00      [ 4]  319 	lda	___c16stombs_m_65536_76
   018E 18            [ 2]  320 	clc
   018F 65*0A         [ 3]  321 	adc	*___c16stombs_sloc4_1_0
   0191 85*06         [ 3]  322 	sta	*___c16stombs_sloc3_1_0
   0193 ADr07r00      [ 4]  323 	lda	(___c16stombs_m_65536_76 + 1)
   0196 65*0B         [ 3]  324 	adc	*(___c16stombs_sloc4_1_0 + 1)
   0198 85*07         [ 3]  325 	sta	*(___c16stombs_sloc3_1_0 + 1)
   019A ADr02r00      [ 4]  326 	lda	___c16stombs_PARM_3
   019D 38            [ 2]  327 	sec
   019E E5*06         [ 3]  328 	sbc	*___c16stombs_sloc3_1_0
   01A0 ADr03r00      [ 4]  329 	lda	(___c16stombs_PARM_3 + 1)
   01A3 E5*07         [ 3]  330 	sbc	*(___c16stombs_sloc3_1_0 + 1)
   01A5 90 46         [ 4]  331 	bcc	00118$
                            332 ;	../c16stombs.c: 82: memcpy(s, b, l);
   01A7 ADr04r00      [ 4]  333 	lda	___c16stombs_s_65536_75
   01AA AEr05r00      [ 4]  334 	ldx	(___c16stombs_s_65536_75 + 1)
   01AD A0r08         [ 2]  335 	ldy	#___c16stombs_b_65536_76
   01AF 8Cr00r00      [ 4]  336 	sty	___memcpy_PARM_2
   01B2 A0s00         [ 2]  337 	ldy	#>___c16stombs_b_65536_76
   01B4 8Cr01r00      [ 4]  338 	sty	(___memcpy_PARM_2 + 1)
   01B7 ACr0Cr00      [ 4]  339 	ldy	___c16stombs_l_196608_78
   01BA 8Cr00r00      [ 4]  340 	sty	___memcpy_PARM_3
   01BD ACr0Dr00      [ 4]  341 	ldy	(___c16stombs_l_196608_78 + 1)
   01C0 8Cr01r00      [ 4]  342 	sty	(___memcpy_PARM_3 + 1)
   01C3 20r00r00      [ 6]  343 	jsr	___memcpy
                            344 ;	../c16stombs.c: 83: s += l;
   01C6 ADr04r00      [ 4]  345 	lda	___c16stombs_s_65536_75
   01C9 18            [ 2]  346 	clc
   01CA 6Dr0Cr00      [ 4]  347 	adc	___c16stombs_l_196608_78
   01CD 8Dr04r00      [ 4]  348 	sta	___c16stombs_s_65536_75
   01D0 ADr05r00      [ 4]  349 	lda	(___c16stombs_s_65536_75 + 1)
   01D3 6Dr0Dr00      [ 4]  350 	adc	(___c16stombs_l_196608_78 + 1)
   01D6 8Dr05r00      [ 4]  351 	sta	(___c16stombs_s_65536_75 + 1)
                            352 ;	../c16stombs.c: 84: m += l;
   01D9 ADr06r00      [ 4]  353 	lda	___c16stombs_m_65536_76
   01DC 18            [ 2]  354 	clc
   01DD 65*0A         [ 3]  355 	adc	*___c16stombs_sloc4_1_0
   01DF 8Dr06r00      [ 4]  356 	sta	___c16stombs_m_65536_76
   01E2 ADr07r00      [ 4]  357 	lda	(___c16stombs_m_65536_76 + 1)
   01E5 65*0B         [ 3]  358 	adc	*(___c16stombs_sloc4_1_0 + 1)
   01E7 8Dr07r00      [ 4]  359 	sta	(___c16stombs_m_65536_76 + 1)
   01EA 4Cr0Er00      [ 3]  360 	jmp	00119$
   01ED                     361 00118$:
                            362 ;	../c16stombs.c: 87: return(m);
   01ED AEr07r00      [ 4]  363 	ldx	(___c16stombs_m_65536_76 + 1)
   01F0 ADr06r00      [ 4]  364 	lda	___c16stombs_m_65536_76
                            365 ;	../c16stombs.c: 88: }
   01F3 60            [ 6]  366 	rts
                            367 	.area CODE
                            368 	.area RODATA
                            369 	.area XINIT
                            370 	.area CABS    (ABS)
