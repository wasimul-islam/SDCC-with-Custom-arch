                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module rand
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _rand
                             12 	.globl _srand
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 	.area	OSEG    (PAG, OVR)
   0000                      21 _rand_t_65536_37:
   0000                      22 	.ds 4
   0004                      23 _rand_sloc0_1_0:
   0004                      24 	.ds 4
   0008                      25 _rand_sloc1_1_0:
   0008                      26 	.ds 4
                             27 	.area	OSEG    (PAG, OVR)
   0000                      28 _srand_sloc0_1_0:
   0000                      29 	.ds 4
                             30 ;--------------------------------------------------------
                             31 ; uninitialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area BSS
                             34 ;--------------------------------------------------------
                             35 ; absolute external ram data
                             36 ;--------------------------------------------------------
                             37 	.area DABS    (ABS)
                             38 ;--------------------------------------------------------
                             39 ; initialized external ram data
                             40 ;--------------------------------------------------------
                             41 	.area DATA
   0000                      42 _s:
   0000                      43 	.ds 4
                             44 ;--------------------------------------------------------
                             45 ; global & static initialisations
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 	.area GSINIT
                             49 	.area GSFINAL
                             50 	.area GSINIT
                             51 ;--------------------------------------------------------
                             52 ; Home
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 	.area _CODE
                             56 ;--------------------------------------------------------
                             57 ; code
                             58 ;--------------------------------------------------------
                             59 	.area CODE
                             60 ;------------------------------------------------------------
                             61 ;Allocation info for local variables in function 'rand'
                             62 ;------------------------------------------------------------
                             63 ;t                         Allocated with name '_rand_t_65536_37'
                             64 ;sloc0                     Allocated with name '_rand_sloc0_1_0'
                             65 ;sloc1                     Allocated with name '_rand_sloc1_1_0'
                             66 ;------------------------------------------------------------
                             67 ;	../rand.c: 40: int rand(void)
                             68 ;	-----------------------------------------
                             69 ;	 function rand
                             70 ;	-----------------------------------------
                             71 ;	Register assignment is optimal.
                             72 ;	Stack space usage: 0 bytes.
   0000                      73 _rand:
                             74 ;	../rand.c: 44: t ^= t >> 10;
   0000 ADr01r00      [ 4]   75 	lda	(_s + 1)
   0003 AEr02r00      [ 4]   76 	ldx	(_s + 2)
   0006 86*00         [ 3]   77 	stx	*(__TEMP+0)
   0008 46*00         [ 5]   78 	lsr	*(__TEMP+0)
   000A 6A            [ 2]   79 	ror	a
   000B 46*00         [ 5]   80 	lsr	*(__TEMP+0)
   000D 6A            [ 2]   81 	ror	a
   000E A6*00         [ 3]   82 	ldx	*(__TEMP+0)
   0010 85*04         [ 3]   83 	sta	*_rand_sloc0_1_0
   0012 86*05         [ 3]   84 	stx	*(_rand_sloc0_1_0 + 1)
   0014 AEr03r00      [ 4]   85 	ldx	(_s + 3)
   0017 A9 00         [ 2]   86 	lda	#0x00
   0019 86*00         [ 3]   87 	stx	*(__TEMP+0)
   001B 46*00         [ 5]   88 	lsr	*(__TEMP+0)
   001D 6A            [ 2]   89 	ror	a
   001E 46*00         [ 5]   90 	lsr	*(__TEMP+0)
   0020 6A            [ 2]   91 	ror	a
   0021 A6*00         [ 3]   92 	ldx	*(__TEMP+0)
   0023 05*05         [ 3]   93 	ora	*(_rand_sloc0_1_0 + 1)
   0025 85*05         [ 3]   94 	sta	*(_rand_sloc0_1_0 + 1)
   0027 86*06         [ 3]   95 	stx	*(_rand_sloc0_1_0 + 2)
   0029 A0 00         [ 2]   96 	ldy	#0x00
   002B 84*07         [ 3]   97 	sty	*(_rand_sloc0_1_0 + 3)
   002D ADr00r00      [ 4]   98 	lda	_s
   0030 45*04         [ 3]   99 	eor	*_rand_sloc0_1_0
   0032 85*04         [ 3]  100 	sta	*_rand_sloc0_1_0
   0034 ADr01r00      [ 4]  101 	lda	(_s + 1)
   0037 45*05         [ 3]  102 	eor	*(_rand_sloc0_1_0 + 1)
   0039 85*05         [ 3]  103 	sta	*(_rand_sloc0_1_0 + 1)
   003B ADr02r00      [ 4]  104 	lda	(_s + 2)
   003E 45*06         [ 3]  105 	eor	*(_rand_sloc0_1_0 + 2)
   0040 85*06         [ 3]  106 	sta	*(_rand_sloc0_1_0 + 2)
   0042 ADr03r00      [ 4]  107 	lda	(_s + 3)
   0045 45*07         [ 3]  108 	eor	*(_rand_sloc0_1_0 + 3)
   0047 85*07         [ 3]  109 	sta	*(_rand_sloc0_1_0 + 3)
                            110 ;	../rand.c: 45: t ^= t << 9;
   0049 A5*04         [ 3]  111 	lda	*_rand_sloc0_1_0
   004B 0A            [ 2]  112 	asl	a
   004C A6*05         [ 3]  113 	ldx	*(_rand_sloc0_1_0 + 1)
   004E 85*09         [ 3]  114 	sta	*(_rand_sloc1_1_0 + 1)
   0050 8A            [ 2]  115 	txa
   0051 2A            [ 2]  116 	rol	a
   0052 A6*06         [ 3]  117 	ldx	*(_rand_sloc0_1_0 + 2)
   0054 85*0A         [ 3]  118 	sta	*(_rand_sloc1_1_0 + 2)
   0056 8A            [ 2]  119 	txa
   0057 2A            [ 2]  120 	rol	a
   0058 85*0B         [ 3]  121 	sta	*(_rand_sloc1_1_0 + 3)
   005A 84*08         [ 3]  122 	sty	*_rand_sloc1_1_0
   005C A5*04         [ 3]  123 	lda	*_rand_sloc0_1_0
   005E 45*08         [ 3]  124 	eor	*_rand_sloc1_1_0
   0060 85*08         [ 3]  125 	sta	*_rand_sloc1_1_0
   0062 A5*05         [ 3]  126 	lda	*(_rand_sloc0_1_0 + 1)
   0064 45*09         [ 3]  127 	eor	*(_rand_sloc1_1_0 + 1)
   0066 85*09         [ 3]  128 	sta	*(_rand_sloc1_1_0 + 1)
   0068 A5*06         [ 3]  129 	lda	*(_rand_sloc0_1_0 + 2)
   006A 45*0A         [ 3]  130 	eor	*(_rand_sloc1_1_0 + 2)
   006C 85*0A         [ 3]  131 	sta	*(_rand_sloc1_1_0 + 2)
   006E A5*07         [ 3]  132 	lda	*(_rand_sloc0_1_0 + 3)
   0070 45*0B         [ 3]  133 	eor	*(_rand_sloc1_1_0 + 3)
                            134 ;	../rand.c: 46: t ^= t >> 25;
   0072 85*0B         [ 3]  135 	sta	*(_rand_sloc1_1_0 + 3)
   0074 4A            [ 2]  136 	lsr	a
   0075 85*04         [ 3]  137 	sta	*_rand_sloc0_1_0
   0077 84*05         [ 3]  138 	sty	*(_rand_sloc0_1_0 + 1)
   0079 84*06         [ 3]  139 	sty	*(_rand_sloc0_1_0 + 2)
   007B 84*07         [ 3]  140 	sty	*(_rand_sloc0_1_0 + 3)
   007D A5*08         [ 3]  141 	lda	*_rand_sloc1_1_0
   007F 45*04         [ 3]  142 	eor	*_rand_sloc0_1_0
   0081 85*08         [ 3]  143 	sta	*_rand_sloc1_1_0
   0083 A5*09         [ 3]  144 	lda	*(_rand_sloc1_1_0 + 1)
   0085 45*05         [ 3]  145 	eor	*(_rand_sloc0_1_0 + 1)
   0087 85*09         [ 3]  146 	sta	*(_rand_sloc1_1_0 + 1)
   0089 A5*0A         [ 3]  147 	lda	*(_rand_sloc1_1_0 + 2)
   008B 45*06         [ 3]  148 	eor	*(_rand_sloc0_1_0 + 2)
   008D 85*0A         [ 3]  149 	sta	*(_rand_sloc1_1_0 + 2)
   008F A5*0B         [ 3]  150 	lda	*(_rand_sloc1_1_0 + 3)
   0091 45*07         [ 3]  151 	eor	*(_rand_sloc0_1_0 + 3)
   0093 85*0B         [ 3]  152 	sta	*(_rand_sloc1_1_0 + 3)
   0095 A5*08         [ 3]  153 	lda	*_rand_sloc1_1_0
   0097 85*00         [ 3]  154 	sta	*_rand_t_65536_37
   0099 A5*09         [ 3]  155 	lda	*(_rand_sloc1_1_0 + 1)
   009B 85*01         [ 3]  156 	sta	*(_rand_t_65536_37 + 1)
   009D A5*0A         [ 3]  157 	lda	*(_rand_sloc1_1_0 + 2)
   009F 85*02         [ 3]  158 	sta	*(_rand_t_65536_37 + 2)
   00A1 A5*0B         [ 3]  159 	lda	*(_rand_sloc1_1_0 + 3)
   00A3 85*03         [ 3]  160 	sta	*(_rand_t_65536_37 + 3)
                            161 ;	../rand.c: 48: s = t;
   00A5 A5*08         [ 3]  162 	lda	*_rand_sloc1_1_0
   00A7 8Dr00r00      [ 4]  163 	sta	_s
   00AA A5*09         [ 3]  164 	lda	*(_rand_sloc1_1_0 + 1)
   00AC 8Dr01r00      [ 4]  165 	sta	(_s + 1)
   00AF A5*0A         [ 3]  166 	lda	*(_rand_sloc1_1_0 + 2)
   00B1 8Dr02r00      [ 4]  167 	sta	(_s + 2)
   00B4 A5*0B         [ 3]  168 	lda	*(_rand_sloc1_1_0 + 3)
   00B6 8Dr03r00      [ 4]  169 	sta	(_s + 3)
                            170 ;	../rand.c: 50: return(t & RAND_MAX);
   00B9 A5*00         [ 3]  171 	lda	*_rand_t_65536_37
   00BB A6*01         [ 3]  172 	ldx	*(_rand_t_65536_37 + 1)
   00BD 85*00         [ 3]  173 	sta	*(__TEMP+0)
   00BF 8A            [ 2]  174 	txa
   00C0 29 7F         [ 2]  175 	and	#0x7f
   00C2 AA            [ 2]  176 	tax
   00C3 A5*00         [ 3]  177 	lda	*(__TEMP+0)
                            178 ;	../rand.c: 51: }
   00C5 60            [ 6]  179 	rts
                            180 ;------------------------------------------------------------
                            181 ;Allocation info for local variables in function 'srand'
                            182 ;------------------------------------------------------------
                            183 ;seed                      Allocated to registers a x 
                            184 ;sloc0                     Allocated with name '_srand_sloc0_1_0'
                            185 ;------------------------------------------------------------
                            186 ;	../rand.c: 53: void srand(unsigned int seed)
                            187 ;	-----------------------------------------
                            188 ;	 function srand
                            189 ;	-----------------------------------------
                            190 ;	Register assignment is optimal.
                            191 ;	Stack space usage: 0 bytes.
   00C6                     192 _srand:
                            193 ;	../rand.c: 55: s = seed | 0x80000000; /* s shall not become 0 */
   00C6 85*00         [ 3]  194 	sta	*_srand_sloc0_1_0
   00C8 86*01         [ 3]  195 	stx	*(_srand_sloc0_1_0 + 1)
   00CA A0 00         [ 2]  196 	ldy	#0x00
   00CC 84*02         [ 3]  197 	sty	*(_srand_sloc0_1_0 + 2)
   00CE 84*03         [ 3]  198 	sty	*(_srand_sloc0_1_0 + 3)
   00D0 A5*00         [ 3]  199 	lda	*_srand_sloc0_1_0
   00D2 8Dr00r00      [ 4]  200 	sta	_s
   00D5 A5*01         [ 3]  201 	lda	*(_srand_sloc0_1_0 + 1)
   00D7 8Dr01r00      [ 4]  202 	sta	(_s + 1)
   00DA A5*02         [ 3]  203 	lda	*(_srand_sloc0_1_0 + 2)
   00DC 8Dr02r00      [ 4]  204 	sta	(_s + 2)
   00DF A5*03         [ 3]  205 	lda	*(_srand_sloc0_1_0 + 3)
   00E1 09 80         [ 2]  206 	ora	#0x80
   00E3 8Dr03r00      [ 4]  207 	sta	(_s + 3)
                            208 ;	../rand.c: 56: }
   00E6 60            [ 6]  209 	rts
                            210 	.area CODE
                            211 	.area RODATA
                            212 	.area XINIT
   0000                     213 __xinit__s:
   0000 01 00 00 80         214 	.byte #0x01, #0x00, #0x00, #0x80	; 2147483649
                            215 	.area CABS    (ABS)
