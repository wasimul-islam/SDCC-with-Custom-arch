                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strncmp
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strncmp_PARM_3
                             12 	.globl _strncmp_PARM_2
                             13 	.globl _strncmp
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 	.area	OSEG    (PAG, OVR)
   0000                      22 _strncmp_sloc0_1_0:
   0000                      23 	.ds 2
   0002                      24 _strncmp_sloc1_1_0:
   0002                      25 	.ds 2
   0004                      26 _strncmp_sloc2_1_0:
   0004                      27 	.ds 2
                             28 ;--------------------------------------------------------
                             29 ; uninitialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area BSS
   0000                      32 _strncmp_PARM_2:
   0000                      33 	.ds 2
   0002                      34 _strncmp_PARM_3:
   0002                      35 	.ds 2
                             36 ;--------------------------------------------------------
                             37 ; absolute external ram data
                             38 ;--------------------------------------------------------
                             39 	.area DABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; initialized external ram data
                             42 ;--------------------------------------------------------
                             43 	.area DATA
                             44 ;--------------------------------------------------------
                             45 ; global & static initialisations
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 	.area GSINIT
                             49 	.area GSFINAL
                             50 	.area GSINIT
                             51 ;--------------------------------------------------------
                             52 ; Home
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 	.area _CODE
                             56 ;--------------------------------------------------------
                             57 ; code
                             58 ;--------------------------------------------------------
                             59 	.area CODE
                             60 ;------------------------------------------------------------
                             61 ;Allocation info for local variables in function 'strncmp'
                             62 ;------------------------------------------------------------
                             63 ;last                      Allocated with name '_strncmp_PARM_2'
                             64 ;count                     Allocated with name '_strncmp_PARM_3'
                             65 ;first                     Allocated to registers a x 
                             66 ;sloc0                     Allocated with name '_strncmp_sloc0_1_0'
                             67 ;sloc1                     Allocated with name '_strncmp_sloc1_1_0'
                             68 ;sloc2                     Allocated with name '_strncmp_sloc2_1_0'
                             69 ;------------------------------------------------------------
                             70 ;	../_strncmp.c: 31: int strncmp ( const char * first, const char * last, size_t count )
                             71 ;	-----------------------------------------
                             72 ;	 function strncmp
                             73 ;	-----------------------------------------
                             74 ;	Register assignment is optimal.
                             75 ;	Stack space usage: 0 bytes.
   0000                      76 _strncmp:
                             77 ;	../_strncmp.c: 33: if (!count)
   0000 85*00         [ 3]   78 	sta	*(__TEMP+0)
   0002 ADr03r00      [ 4]   79 	lda	(_strncmp_PARM_3 + 1)
   0005 0Dr02r00      [ 4]   80 	ora	_strncmp_PARM_3
   0008 08            [ 3]   81 	php
   0009 A5*00         [ 3]   82 	lda	*(__TEMP+0)
   000B 28            [ 4]   83 	plp
   000C D0 04         [ 4]   84 	bne	00114$
                             85 ;	../_strncmp.c: 34: return(0);
   000E A9 00         [ 2]   86 	lda	#0x00
   0010 AA            [ 2]   87 	tax
   0011 60            [ 6]   88 	rts
                             89 ;	../_strncmp.c: 36: while (--count && *first && *first == *last) {
   0012                      90 00114$:
   0012 85*00         [ 3]   91 	sta	*_strncmp_sloc0_1_0
   0014 86*01         [ 3]   92 	stx	*(_strncmp_sloc0_1_0 + 1)
   0016 ADr00r00      [ 4]   93 	lda	_strncmp_PARM_2
   0019 85*02         [ 3]   94 	sta	*_strncmp_sloc1_1_0
   001B ADr01r00      [ 4]   95 	lda	(_strncmp_PARM_2 + 1)
   001E 85*03         [ 3]   96 	sta	*(_strncmp_sloc1_1_0 + 1)
   0020 ADr02r00      [ 4]   97 	lda	_strncmp_PARM_3
   0023 85*04         [ 3]   98 	sta	*_strncmp_sloc2_1_0
   0025 ADr03r00      [ 4]   99 	lda	(_strncmp_PARM_3 + 1)
   0028 85*05         [ 3]  100 	sta	*(_strncmp_sloc2_1_0 + 1)
   002A                     101 00105$:
   002A 38            [ 2]  102 	sec
   002B A5*04         [ 3]  103 	lda	*_strncmp_sloc2_1_0
   002D E9 01         [ 2]  104 	sbc	#0x01
   002F 85*04         [ 3]  105 	sta	*_strncmp_sloc2_1_0
   0031 B0 02         [ 4]  106 	bcs	00132$
   0033 C6*05         [ 5]  107 	dec	*(_strncmp_sloc2_1_0 + 1)
   0035                     108 00132$:
   0035 A5*05         [ 3]  109 	lda	*(_strncmp_sloc2_1_0 + 1)
   0037 05*04         [ 3]  110 	ora	*_strncmp_sloc2_1_0
   0039 F0 1E         [ 4]  111 	beq	00107$
   003B A0 00         [ 2]  112 	ldy	#0x00
   003D B1*00         [ 6]  113 	lda	[*_strncmp_sloc0_1_0],y
   003F AA            [ 2]  114 	tax
   0040 F0 17         [ 4]  115 	beq	00107$
   0042 B1*02         [ 6]  116 	lda	[*_strncmp_sloc1_1_0],y
   0044 86*00         [ 3]  117 	stx	*(__TEMP+0)
   0046 C5*00         [ 3]  118 	cmp	*(__TEMP+0)
   0048 D0 0F         [ 4]  119 	bne	00107$
                            120 ;	../_strncmp.c: 37: first++;
   004A E6*00         [ 5]  121 	inc	*_strncmp_sloc0_1_0
   004C D0 02         [ 4]  122 	bne	00136$
   004E E6*01         [ 5]  123 	inc	*(_strncmp_sloc0_1_0 + 1)
   0050                     124 00136$:
                            125 ;	../_strncmp.c: 38: last++;
   0050 E6*02         [ 5]  126 	inc	*_strncmp_sloc1_1_0
   0052 D0 D6         [ 4]  127 	bne	00105$
   0054 E6*03         [ 5]  128 	inc	*(_strncmp_sloc1_1_0 + 1)
   0056 4Cr2Ar00      [ 3]  129 	jmp	00105$
   0059                     130 00107$:
                            131 ;	../_strncmp.c: 41: return( *first - *last );
   0059 A0 00         [ 2]  132 	ldy	#0x00
   005B B1*00         [ 6]  133 	lda	[*_strncmp_sloc0_1_0],y
   005D 85*04         [ 3]  134 	sta	*_strncmp_sloc2_1_0
   005F 84*05         [ 3]  135 	sty	*(_strncmp_sloc2_1_0 + 1)
   0061 B1*02         [ 6]  136 	lda	[*_strncmp_sloc1_1_0],y
   0063 A2 00         [ 2]  137 	ldx	#0x00
   0065 85*00         [ 3]  138 	sta	*(__TEMP+0)
   0067 A5*04         [ 3]  139 	lda	*_strncmp_sloc2_1_0
   0069 38            [ 2]  140 	sec
   006A E5*00         [ 3]  141 	sbc	*(__TEMP+0)
   006C 48            [ 3]  142 	pha
   006D A5*05         [ 3]  143 	lda	*(_strncmp_sloc2_1_0 + 1)
   006F 86*00         [ 3]  144 	stx	*(__TEMP+0)
   0071 E5*00         [ 3]  145 	sbc	*(__TEMP+0)
   0073 AA            [ 2]  146 	tax
   0074 68            [ 4]  147 	pla
                            148 ;	../_strncmp.c: 42: }
   0075 60            [ 6]  149 	rts
                            150 	.area CODE
                            151 	.area RODATA
                            152 	.area XINIT
                            153 	.area CABS    (ABS)
