                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module floorf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _floorf
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'floorf'
                             49 ;------------------------------------------------------------
                             50 ;x                         Allocated to stack - sp +11
                             51 ;r                         Allocated to stack - sp +5
                             52 ;sloc0                     Allocated to stack - sp +5
                             53 ;sloc1                     Allocated to stack - sp +1
                             54 ;------------------------------------------------------------
                             55 ;	../floorf.c: 33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                             56 ;	-----------------------------------------
                             57 ;	 function floorf
                             58 ;	-----------------------------------------
                             59 ;	Register assignment is optimal.
                             60 ;	Stack space usage: 8 bytes.
   0000                      61 _floorf:
   0000 85*00         [ 3]   62 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   63 	stx	*(__TEMP+1)
   0004 BA            [ 2]   64 	tsx
   0005 8A            [ 2]   65 	txa
   0006 18            [ 2]   66 	clc
   0007 69 F8         [ 2]   67 	adc	#0xf8
   0009 AA            [ 2]   68 	tax
   000A 9A            [ 2]   69 	txs
   000B A6*01         [ 3]   70 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   71 	lda	*(__TEMP+0)
                             72 ;	../floorf.c: 36: r=x;
   000F BA            [ 2]   73 	tsx
   0010 BD 0B 01      [ 5]   74 	lda	0x10b,x
   0013 8Dr00r00      [ 4]   75 	sta	___fs2slong_PARM_1
   0016 BD 0C 01      [ 5]   76 	lda	0x10c,x
   0019 8Dr01r00      [ 4]   77 	sta	(___fs2slong_PARM_1 + 1)
   001C BD 0D 01      [ 5]   78 	lda	0x10d,x
   001F 8Dr02r00      [ 4]   79 	sta	(___fs2slong_PARM_1 + 2)
   0022 BD 0E 01      [ 5]   80 	lda	0x10e,x
   0025 8Dr03r00      [ 4]   81 	sta	(___fs2slong_PARM_1 + 3)
   0028 20r00r00      [ 6]   82 	jsr	___fs2slong
   002B 86*00         [ 3]   83 	stx	*(__TEMP+0)
   002D BA            [ 2]   84 	tsx
   002E 9D 05 01      [ 5]   85 	sta	0x105,x
   0031 A6*00         [ 3]   86 	ldx	*(__TEMP+0)
   0033 8A            [ 2]   87 	txa
   0034 BA            [ 2]   88 	tsx
   0035 9D 06 01      [ 5]   89 	sta	0x106,x
   0038 A6*00         [ 3]   90 	ldx	*(__TEMP+0)
   003A A5*00         [ 3]   91 	lda	*___SDCC_m6502_ret2
   003C BA            [ 2]   92 	tsx
   003D 9D 07 01      [ 5]   93 	sta	0x107,x
   0040 A5*00         [ 3]   94 	lda	*___SDCC_m6502_ret3
   0042 9D 08 01      [ 5]   95 	sta	0x108,x
                             96 ;	../floorf.c: 37: if (r<=0)
   0045 A9 00         [ 2]   97 	lda	#0x00
   0047 38            [ 2]   98 	sec
   0048 FD 05 01      [ 5]   99 	sbc	0x105,x
   004B A9 00         [ 2]  100 	lda	#0x00
   004D FD 06 01      [ 5]  101 	sbc	0x106,x
   0050 A9 00         [ 2]  102 	lda	#0x00
   0052 FD 07 01      [ 5]  103 	sbc	0x107,x
   0055 A9 00         [ 2]  104 	lda	#0x00
   0057 FD 08 01      [ 5]  105 	sbc	0x108,x
   005A 70 04         [ 4]  106 	bvs	00117$
   005C 10 07         [ 4]  107 	bpl	00116$
   005E 30 02         [ 4]  108 	bmi	00118$
   0060                     109 00117$:
   0060 30 03         [ 4]  110 	bmi	00116$
   0062                     111 00118$:
   0062 4Cr2Dr01      [ 3]  112 	jmp	00102$
   0065                     113 00116$:
                            114 ;	../floorf.c: 38: return (r+((r>x)?-1:0));
   0065 BD 05 01      [ 5]  115 	lda	0x105,x
   0068 8Dr00r00      [ 4]  116 	sta	___slong2fs_PARM_1
   006B BD 06 01      [ 5]  117 	lda	0x106,x
   006E 8Dr01r00      [ 4]  118 	sta	(___slong2fs_PARM_1 + 1)
   0071 BD 07 01      [ 5]  119 	lda	0x107,x
   0074 8Dr02r00      [ 4]  120 	sta	(___slong2fs_PARM_1 + 2)
   0077 BD 08 01      [ 5]  121 	lda	0x108,x
   007A 8Dr03r00      [ 4]  122 	sta	(___slong2fs_PARM_1 + 3)
   007D 20r00r00      [ 6]  123 	jsr	___slong2fs
   0080 8Dr00r00      [ 4]  124 	sta	___fslt_PARM_2
   0083 8Er01r00      [ 4]  125 	stx	(___fslt_PARM_2 + 1)
   0086 A5*00         [ 3]  126 	lda	*___SDCC_m6502_ret2
   0088 8Dr02r00      [ 4]  127 	sta	(___fslt_PARM_2 + 2)
   008B A5*00         [ 3]  128 	lda	*___SDCC_m6502_ret3
   008D 8Dr03r00      [ 4]  129 	sta	(___fslt_PARM_2 + 3)
   0090 BA            [ 2]  130 	tsx
   0091 BD 0B 01      [ 5]  131 	lda	0x10b,x
   0094 8Dr00r00      [ 4]  132 	sta	___fslt_PARM_1
   0097 BD 0C 01      [ 5]  133 	lda	0x10c,x
   009A 8Dr01r00      [ 4]  134 	sta	(___fslt_PARM_1 + 1)
   009D BD 0D 01      [ 5]  135 	lda	0x10d,x
   00A0 8Dr02r00      [ 4]  136 	sta	(___fslt_PARM_1 + 2)
   00A3 BD 0E 01      [ 5]  137 	lda	0x10e,x
   00A6 8Dr03r00      [ 4]  138 	sta	(___fslt_PARM_1 + 3)
   00A9 20r00r00      [ 6]  139 	jsr	___fslt
   00AC C9 00         [ 2]  140 	cmp	#0x00
   00AE F0 06         [ 4]  141 	beq	00106$
   00B0 A9 FF         [ 2]  142 	lda	#0xff
   00B2 AA            [ 2]  143 	tax
   00B3 4CrB9r00      [ 3]  144 	jmp	00107$
   00B6                     145 00106$:
   00B6 A9 00         [ 2]  146 	lda	#0x00
   00B8 AA            [ 2]  147 	tax
   00B9                     148 00107$:
   00B9 48            [ 3]  149 	pha
   00BA 8A            [ 2]  150 	txa
   00BB BA            [ 2]  151 	tsx
   00BC 9D 03 01      [ 5]  152 	sta	0x103,x
   00BF 68            [ 4]  153 	pla
   00C0 9D 02 01      [ 5]  154 	sta	0x102,x
   00C3 BD 03 01      [ 5]  155 	lda	0x103,x
   00C6 0A            [ 2]  156 	asl	a
   00C7 A9 00         [ 2]  157 	lda	#0x00
   00C9 69 FF         [ 2]  158 	adc	#0xff
   00CB 49 FF         [ 2]  159 	eor	#0xff
   00CD 9D 04 01      [ 5]  160 	sta	0x104,x
   00D0 9D 05 01      [ 5]  161 	sta	0x105,x
   00D3 BD 06 01      [ 5]  162 	lda	0x106,x
   00D6 18            [ 2]  163 	clc
   00D7 7D 02 01      [ 5]  164 	adc	0x102,x
   00DA 8Dr00r00      [ 4]  165 	sta	___slong2fs_PARM_1
   00DD BD 07 01      [ 5]  166 	lda	0x107,x
   00E0 7D 03 01      [ 5]  167 	adc	0x103,x
   00E3 8Dr01r00      [ 4]  168 	sta	(___slong2fs_PARM_1 + 1)
   00E6 BD 08 01      [ 5]  169 	lda	0x108,x
   00E9 7D 04 01      [ 5]  170 	adc	0x104,x
   00EC 8Dr02r00      [ 4]  171 	sta	(___slong2fs_PARM_1 + 2)
   00EF BD 09 01      [ 5]  172 	lda	0x109,x
   00F2 7D 05 01      [ 5]  173 	adc	0x105,x
   00F5 8Dr03r00      [ 4]  174 	sta	(___slong2fs_PARM_1 + 3)
   00F8 20r00r00      [ 6]  175 	jsr	___slong2fs
   00FB 86*00         [ 3]  176 	stx	*(__TEMP+0)
   00FD BA            [ 2]  177 	tsx
   00FE 9D 01 01      [ 5]  178 	sta	0x101,x
   0101 A6*00         [ 3]  179 	ldx	*(__TEMP+0)
   0103 8A            [ 2]  180 	txa
   0104 BA            [ 2]  181 	tsx
   0105 9D 02 01      [ 5]  182 	sta	0x102,x
   0108 A6*00         [ 3]  183 	ldx	*(__TEMP+0)
   010A A5*00         [ 3]  184 	lda	*___SDCC_m6502_ret2
   010C BA            [ 2]  185 	tsx
   010D 9D 03 01      [ 5]  186 	sta	0x103,x
   0110 A5*00         [ 3]  187 	lda	*___SDCC_m6502_ret3
   0112 9D 04 01      [ 5]  188 	sta	0x104, x
   0115 85*00         [ 3]  189 	sta	*___SDCC_m6502_ret3
   0117 BD 03 01      [ 5]  190 	lda	0x103,x
   011A 85*00         [ 3]  191 	sta	*___SDCC_m6502_ret2
   011C BD 02 01      [ 5]  192 	lda	0x102,x
   011F AA            [ 2]  193 	tax
   0120 86*00         [ 3]  194 	stx	*(__TEMP+0)
   0122 BA            [ 2]  195 	tsx
   0123 BD 01 01      [ 5]  196 	lda	0x101,x
   0126 08            [ 3]  197 	php
   0127 A6*00         [ 3]  198 	ldx	*(__TEMP+0)
   0129 28            [ 4]  199 	plp
   012A 4Cr78r01      [ 3]  200 	jmp	00104$
   012D                     201 00102$:
                            202 ;	../floorf.c: 40: return r;
   012D BA            [ 2]  203 	tsx
   012E BD 05 01      [ 5]  204 	lda	0x105,x
   0131 8Dr00r00      [ 4]  205 	sta	___slong2fs_PARM_1
   0134 BD 06 01      [ 5]  206 	lda	0x106,x
   0137 8Dr01r00      [ 4]  207 	sta	(___slong2fs_PARM_1 + 1)
   013A BD 07 01      [ 5]  208 	lda	0x107,x
   013D 8Dr02r00      [ 4]  209 	sta	(___slong2fs_PARM_1 + 2)
   0140 BD 08 01      [ 5]  210 	lda	0x108,x
   0143 8Dr03r00      [ 4]  211 	sta	(___slong2fs_PARM_1 + 3)
   0146 20r00r00      [ 6]  212 	jsr	___slong2fs
   0149 86*00         [ 3]  213 	stx	*(__TEMP+0)
   014B BA            [ 2]  214 	tsx
   014C 9D 01 01      [ 5]  215 	sta	0x101,x
   014F A6*00         [ 3]  216 	ldx	*(__TEMP+0)
   0151 8A            [ 2]  217 	txa
   0152 BA            [ 2]  218 	tsx
   0153 9D 02 01      [ 5]  219 	sta	0x102,x
   0156 A6*00         [ 3]  220 	ldx	*(__TEMP+0)
   0158 A5*00         [ 3]  221 	lda	*___SDCC_m6502_ret2
   015A BA            [ 2]  222 	tsx
   015B 9D 03 01      [ 5]  223 	sta	0x103,x
   015E A5*00         [ 3]  224 	lda	*___SDCC_m6502_ret3
   0160 9D 04 01      [ 5]  225 	sta	0x104, x
   0163 85*00         [ 3]  226 	sta	*___SDCC_m6502_ret3
   0165 BD 03 01      [ 5]  227 	lda	0x103,x
   0168 85*00         [ 3]  228 	sta	*___SDCC_m6502_ret2
   016A BD 02 01      [ 5]  229 	lda	0x102,x
   016D AA            [ 2]  230 	tax
   016E 86*00         [ 3]  231 	stx	*(__TEMP+0)
   0170 BA            [ 2]  232 	tsx
   0171 BD 01 01      [ 5]  233 	lda	0x101,x
   0174 08            [ 3]  234 	php
   0175 A6*00         [ 3]  235 	ldx	*(__TEMP+0)
   0177 28            [ 4]  236 	plp
   0178                     237 00104$:
                            238 ;	../floorf.c: 41: }
   0178 85*00         [ 3]  239 	sta	*(__TEMP+0)
   017A 86*01         [ 3]  240 	stx	*(__TEMP+1)
   017C BA            [ 2]  241 	tsx
   017D 8A            [ 2]  242 	txa
   017E 18            [ 2]  243 	clc
   017F 69 08         [ 2]  244 	adc	#0x08
   0181 AA            [ 2]  245 	tax
   0182 9A            [ 2]  246 	txs
   0183 A6*01         [ 3]  247 	ldx	*(__TEMP+1)
   0185 A5*00         [ 3]  248 	lda	*(__TEMP+0)
   0187 60            [ 6]  249 	rts
                            250 	.area CODE
                            251 	.area RODATA
                            252 	.area XINIT
                            253 	.area CABS    (ABS)
