                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module puts
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _putchar
                             12 	.globl _puts
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
   0000                      17 _puts_sloc0_1_0:
   0000                      18 	.ds 2
                             19 ;--------------------------------------------------------
                             20 ; overlayable items in ram
                             21 ;--------------------------------------------------------
                             22 ;--------------------------------------------------------
                             23 ; uninitialized external ram data
                             24 ;--------------------------------------------------------
                             25 	.area BSS
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area DABS    (ABS)
                             30 ;--------------------------------------------------------
                             31 ; initialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area DATA
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _CODE
                             38 	.area GSINIT
                             39 	.area GSFINAL
                             40 	.area GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area _CODE
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area CODE
                             50 ;------------------------------------------------------------
                             51 ;Allocation info for local variables in function 'puts'
                             52 ;------------------------------------------------------------
                             53 ;sloc0                     Allocated with name '_puts_sloc0_1_0'
                             54 ;s                         Allocated to registers 
                             55 ;------------------------------------------------------------
                             56 ;	../puts.c: 31: int puts (const char *s)
                             57 ;	-----------------------------------------
                             58 ;	 function puts
                             59 ;	-----------------------------------------
                             60 ;	Register assignment is optimal.
                             61 ;	Stack space usage: 0 bytes.
   0000                      62 _puts:
   0000 85*00         [ 3]   63 	sta	*_puts_sloc0_1_0
   0002 86*01         [ 3]   64 	stx	*(_puts_sloc0_1_0 + 1)
                             65 ;	../puts.c: 33: while (*s)
   0004                      66 00103$:
   0004 A0 00         [ 2]   67 	ldy	#0x00
   0006 B1*00         [ 6]   68 	lda	[*_puts_sloc0_1_0],y
   0008 F0 17         [ 4]   69 	beq	00105$
                             70 ;	../puts.c: 34: if (putchar(*s++) == EOF)
   000A E6*00         [ 5]   71 	inc	*_puts_sloc0_1_0
   000C D0 02         [ 4]   72 	bne	00121$
   000E E6*01         [ 5]   73 	inc	*(_puts_sloc0_1_0 + 1)
   0010                      74 00121$:
   0010 A2 00         [ 2]   75 	ldx	#0x00
   0012 20r00r00      [ 6]   76 	jsr	_putchar
   0015 C9 FF         [ 2]   77 	cmp	#0xff
   0017 D0 EB         [ 4]   78 	bne	00103$
   0019 E0 FF         [ 2]   79 	cpx	#0xff
   001B D0 E7         [ 4]   80 	bne	00103$
                             81 ;	../puts.c: 35: return EOF;
   001D A9 FF         [ 2]   82 	lda	#0xff
   001F AA            [ 2]   83 	tax
   0020 60            [ 6]   84 	rts
   0021                      85 00105$:
                             86 ;	../puts.c: 36: return putchar('\n');
   0021 A2 00         [ 2]   87 	ldx	#0x00
   0023 A9 0A         [ 2]   88 	lda	#0x0a
                             89 ;	../puts.c: 37: }
   0025 4Cr00r00      [ 3]   90 	jmp	_putchar
                             91 	.area CODE
                             92 	.area RODATA
                             93 	.area XINIT
                             94 	.area CABS    (ABS)
