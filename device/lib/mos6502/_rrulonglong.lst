                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _rrulonglong
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __rrulonglong_PARM_2
                             12 	.globl __rrulonglong_PARM_1
                             13 	.globl __rrulonglong
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 	.area	OSEG    (PAG, OVR)
   0000                      22 __rrulonglong_sloc0_1_0:
   0000                      23 	.ds 1
   0001                      24 __rrulonglong_sloc1_1_0:
   0001                      25 	.ds 2
   0003                      26 __rrulonglong_sloc2_1_0:
   0003                      27 	.ds 2
   0005                      28 __rrulonglong_sloc3_1_0:
   0005                      29 	.ds 2
                             30 ;--------------------------------------------------------
                             31 ; uninitialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area BSS
   0000                      34 __rrulonglong_PARM_1:
   0000                      35 	.ds 8
   0008                      36 __rrulonglong_PARM_2:
   0008                      37 	.ds 1
   0009                      38 __rrulonglong_t1_65536_2:
   0009                      39 	.ds 1
   000A                      40 __rrulonglong_t2_65536_2:
   000A                      41 	.ds 1
   000B                      42 __rrulonglong_zb_65536_2:
   000B                      43 	.ds 1
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area DABS    (ABS)
                             48 ;--------------------------------------------------------
                             49 ; initialized external ram data
                             50 ;--------------------------------------------------------
                             51 	.area DATA
                             52 ;--------------------------------------------------------
                             53 ; global & static initialisations
                             54 ;--------------------------------------------------------
                             55 	.area _CODE
                             56 	.area GSINIT
                             57 	.area GSFINAL
                             58 	.area GSINIT
                             59 ;--------------------------------------------------------
                             60 ; Home
                             61 ;--------------------------------------------------------
                             62 	.area _CODE
                             63 	.area _CODE
                             64 ;--------------------------------------------------------
                             65 ; code
                             66 ;--------------------------------------------------------
                             67 	.area CODE
                             68 ;------------------------------------------------------------
                             69 ;Allocation info for local variables in function '_rrulonglong'
                             70 ;------------------------------------------------------------
                             71 ;l                         Allocated with name '__rrulonglong_PARM_1'
                             72 ;s                         Allocated with name '__rrulonglong_PARM_2'
                             73 ;b                         Allocated to registers 
                             74 ;shift                     Allocated to registers 
                             75 ;t1                        Allocated with name '__rrulonglong_t1_65536_2'
                             76 ;t2                        Allocated with name '__rrulonglong_t2_65536_2'
                             77 ;zb                        Allocated with name '__rrulonglong_zb_65536_2'
                             78 ;i                         Allocated to registers 
                             79 ;sloc0                     Allocated with name '__rrulonglong_sloc0_1_0'
                             80 ;sloc1                     Allocated with name '__rrulonglong_sloc1_1_0'
                             81 ;sloc2                     Allocated with name '__rrulonglong_sloc2_1_0'
                             82 ;sloc3                     Allocated with name '__rrulonglong_sloc3_1_0'
                             83 ;------------------------------------------------------------
                             84 ;	_rrulonglong.c: 8: unsigned long long _rrulonglong(unsigned long long l, char s)
                             85 ;	-----------------------------------------
                             86 ;	 function _rrulonglong
                             87 ;	-----------------------------------------
                             88 ;	Register assignment is optimal.
                             89 ;	Stack space usage: 0 bytes.
   0000                      90 __rrulonglong:
                             91 ;	_rrulonglong.c: 11: uint8_t *const b = (uint8_t *)(&l);
                             92 ;	_rrulonglong.c: 15: zb=s>>3;
   0000 ADr08r00      [ 4]   93 	lda	__rrulonglong_PARM_2
   0003 C9 80         [ 2]   94 	cmp	#0x80
   0005 6A            [ 2]   95 	ror	a
   0006 C9 80         [ 2]   96 	cmp	#0x80
   0008 6A            [ 2]   97 	ror	a
   0009 C9 80         [ 2]   98 	cmp	#0x80
   000B 6A            [ 2]   99 	ror	a
                            100 ;	_rrulonglong.c: 16: if(zb) {
   000C 8Dr0Br00      [ 4]  101 	sta	__rrulonglong_zb_65536_2
   000F D0 03         [ 4]  102 	bne	00165$
   0011 4CrB6r00      [ 3]  103 	jmp	00104$
   0014                     104 00165$:
                            105 ;	_rrulonglong.c: 17: for(i=0;i<(8-zb);i++) {
   0014 A2 00         [ 2]  106 	ldx	#0x00
   0016 86*00         [ 3]  107 	stx	*__rrulonglong_sloc0_1_0
   0018                     108 00110$:
   0018 ADr0Br00      [ 4]  109 	lda	__rrulonglong_zb_65536_2
   001B 85*01         [ 3]  110 	sta	*__rrulonglong_sloc1_1_0
   001D 0A            [ 2]  111 	asl	a
   001E A9 00         [ 2]  112 	lda	#0x00
   0020 69 FF         [ 2]  113 	adc	#0xff
   0022 49 FF         [ 2]  114 	eor	#0xff
   0024 85*02         [ 3]  115 	sta	*(__rrulonglong_sloc1_1_0 + 1)
   0026 A9 08         [ 2]  116 	lda	#0x08
   0028 38            [ 2]  117 	sec
   0029 E5*01         [ 3]  118 	sbc	*__rrulonglong_sloc1_1_0
   002B 85*03         [ 3]  119 	sta	*__rrulonglong_sloc2_1_0
   002D A9 00         [ 2]  120 	lda	#0x00
   002F E5*02         [ 3]  121 	sbc	*(__rrulonglong_sloc1_1_0 + 1)
   0031 85*04         [ 3]  122 	sta	*(__rrulonglong_sloc2_1_0 + 1)
   0033 A5*00         [ 3]  123 	lda	*__rrulonglong_sloc0_1_0
   0035 48            [ 3]  124 	pha
   0036 0A            [ 2]  125 	asl	a
   0037 A9 00         [ 2]  126 	lda	#0x00
   0039 69 FF         [ 2]  127 	adc	#0xff
   003B 49 FF         [ 2]  128 	eor	#0xff
   003D AA            [ 2]  129 	tax
   003E 68            [ 4]  130 	pla
   003F 85*00         [ 3]  131 	sta	*(__TEMP+0)
   0041 38            [ 2]  132 	sec
   0042 E5*03         [ 3]  133 	sbc	*__rrulonglong_sloc2_1_0
   0044 8A            [ 2]  134 	txa
   0045 E5*04         [ 3]  135 	sbc	*(__rrulonglong_sloc2_1_0 + 1)
   0047 08            [ 3]  136 	php
   0048 A5*00         [ 3]  137 	lda	*(__TEMP+0)
   004A 28            [ 4]  138 	plp
   004B 50 04         [ 4]  139 	bvc	00167$
   004D 10 04         [ 4]  140 	bpl	00166$
   004F 30 35         [ 4]  141 	bmi	00126$
   0051                     142 00167$:
   0051 10 33         [ 4]  143 	bpl	00126$
   0053                     144 00166$:
                            145 ;	_rrulonglong.c: 18: b[i]=b[zb+i];
   0053 85*03         [ 3]  146 	sta	*__rrulonglong_sloc2_1_0
   0055 86*04         [ 3]  147 	stx	*(__rrulonglong_sloc2_1_0 + 1)
   0057 18            [ 2]  148 	clc
   0058 65*01         [ 3]  149 	adc	*__rrulonglong_sloc1_1_0
   005A 48            [ 3]  150 	pha
   005B 8A            [ 2]  151 	txa
   005C 65*02         [ 3]  152 	adc	*(__rrulonglong_sloc1_1_0 + 1)
   005E AA            [ 2]  153 	tax
   005F 68            [ 4]  154 	pla
   0060 18            [ 2]  155 	clc
   0061 69r00         [ 2]  156 	adc	#<(__rrulonglong_PARM_1+0)
   0063 85*00         [ 3]  157 	sta	*(__DPTR+0)
   0065 8A            [ 2]  158 	txa
   0066 69s00         [ 2]  159 	adc	#>(__rrulonglong_PARM_1+0)
   0068 85*01         [ 3]  160 	sta	*(__DPTR+1)
   006A A0 00         [ 2]  161 	ldy	#0x00
   006C B1*00         [ 6]  162 	lda	[__DPTR],y
   006E 85*00         [ 3]  163 	sta	*(__TEMP+0)
   0070 18            [ 2]  164 	clc
   0071 A5*03         [ 3]  165 	lda	*__rrulonglong_sloc2_1_0
   0073 69r00         [ 2]  166 	adc	#<(__rrulonglong_PARM_1+0)
   0075 85*00         [ 3]  167 	sta	*(__DPTR+0)
   0077 A5*04         [ 3]  168 	lda	*(__rrulonglong_sloc2_1_0 + 1)
   0079 69s00         [ 2]  169 	adc	#>(__rrulonglong_PARM_1+0)
   007B 85*01         [ 3]  170 	sta	*(__DPTR+1)
   007D A5*00         [ 3]  171 	lda	*(__TEMP+0)
   007F 91*00         [ 6]  172 	sta	[__DPTR],y
                            173 ;	_rrulonglong.c: 17: for(i=0;i<(8-zb);i++) {
   0081 E6*00         [ 5]  174 	inc	*__rrulonglong_sloc0_1_0
   0083 4Cr18r00      [ 3]  175 	jmp	00110$
   0086                     176 00126$:
   0086 A4*00         [ 3]  177 	ldy	*__rrulonglong_sloc0_1_0
   0088                     178 00113$:
                            179 ;	_rrulonglong.c: 21: for(;i<8;i++)
   0088 98            [ 2]  180 	tya
   0089 38            [ 2]  181 	sec
   008A E9 08         [ 2]  182 	sbc	#0x08
   008C 50 04         [ 4]  183 	bvc	00170$
   008E 10 04         [ 4]  184 	bpl	00169$
   0090 30 24         [ 4]  185 	bmi	00104$
   0092                     186 00170$:
   0092 10 22         [ 4]  187 	bpl	00104$
   0094                     188 00169$:
                            189 ;	_rrulonglong.c: 22: b[i]=0;
   0094 98            [ 2]  190 	tya
   0095 48            [ 3]  191 	pha
   0096 0A            [ 2]  192 	asl	a
   0097 A9 00         [ 2]  193 	lda	#0x00
   0099 69 FF         [ 2]  194 	adc	#0xff
   009B 49 FF         [ 2]  195 	eor	#0xff
   009D AA            [ 2]  196 	tax
   009E 68            [ 4]  197 	pla
   009F 84*00         [ 3]  198 	sty	*(__TEMP+0)
   00A1 18            [ 2]  199 	clc
   00A2 69r00         [ 2]  200 	adc	#<(__rrulonglong_PARM_1+0)
   00A4 85*00         [ 3]  201 	sta	*(__DPTR+0)
   00A6 8A            [ 2]  202 	txa
   00A7 69s00         [ 2]  203 	adc	#>(__rrulonglong_PARM_1+0)
   00A9 85*01         [ 3]  204 	sta	*(__DPTR+1)
   00AB A9 00         [ 2]  205 	lda	#0x00
   00AD A8            [ 2]  206 	tay
   00AE 91*00         [ 6]  207 	sta	[__DPTR],y
   00B0 A4*00         [ 3]  208 	ldy	*(__TEMP+0)
                            209 ;	_rrulonglong.c: 21: for(;i<8;i++)
   00B2 C8            [ 2]  210 	iny
   00B3 4Cr88r00      [ 3]  211 	jmp	00113$
   00B6                     212 00104$:
                            213 ;	_rrulonglong.c: 25: shift=s&0x7;
   00B6 ADr08r00      [ 4]  214 	lda	__rrulonglong_PARM_2
   00B9 29 07         [ 2]  215 	and	#0x07
   00BB 85*03         [ 3]  216 	sta	*__rrulonglong_sloc2_1_0
                            217 ;	_rrulonglong.c: 26: while(shift--) {
   00BD A9 07         [ 2]  218 	lda	#0x07
   00BF 38            [ 2]  219 	sec
   00C0 EDr0Br00      [ 4]  220 	sbc	__rrulonglong_zb_65536_2
   00C3 85*01         [ 3]  221 	sta	*__rrulonglong_sloc1_1_0
   00C5                     222 00106$:
   00C5 A5*03         [ 3]  223 	lda	*__rrulonglong_sloc2_1_0
   00C7 C6*03         [ 5]  224 	dec	*__rrulonglong_sloc2_1_0
   00C9 C9 00         [ 2]  225 	cmp	#0x00
   00CB F0 6A         [ 4]  226 	beq	00108$
                            227 ;	_rrulonglong.c: 27: t2=0;
   00CD A2 00         [ 2]  228 	ldx	#0x00
   00CF 8Er0Ar00      [ 4]  229 	stx	__rrulonglong_t2_65536_2
                            230 ;	_rrulonglong.c: 28: for(i=7-zb;i>=0;i--) {
   00D2 A5*01         [ 3]  231 	lda	*__rrulonglong_sloc1_1_0
   00D4 85*00         [ 3]  232 	sta	*__rrulonglong_sloc0_1_0
   00D6                     233 00116$:
   00D6 A5*00         [ 3]  234 	lda	*__rrulonglong_sloc0_1_0
   00D8 38            [ 2]  235 	sec
   00D9 E9 00         [ 2]  236 	sbc	#0x00
   00DB 70 04         [ 4]  237 	bvs	00174$
   00DD 10 04         [ 4]  238 	bpl	00173$
   00DF 30 E4         [ 4]  239 	bmi	00106$
   00E1                     240 00174$:
   00E1 10 E2         [ 4]  241 	bpl	00106$
   00E3                     242 00173$:
                            243 ;	_rrulonglong.c: 29: t1=b[i]&1;
   00E3 A5*00         [ 3]  244 	lda	*__rrulonglong_sloc0_1_0
   00E5 48            [ 3]  245 	pha
   00E6 0A            [ 2]  246 	asl	a
   00E7 A9 00         [ 2]  247 	lda	#0x00
   00E9 69 FF         [ 2]  248 	adc	#0xff
   00EB 49 FF         [ 2]  249 	eor	#0xff
   00ED AA            [ 2]  250 	tax
   00EE 68            [ 4]  251 	pla
   00EF 85*05         [ 3]  252 	sta	*__rrulonglong_sloc3_1_0
   00F1 86*06         [ 3]  253 	stx	*(__rrulonglong_sloc3_1_0 + 1)
   00F3 18            [ 2]  254 	clc
   00F4 A5*05         [ 3]  255 	lda	*__rrulonglong_sloc3_1_0
   00F6 69r00         [ 2]  256 	adc	#<(__rrulonglong_PARM_1+0)
   00F8 85*00         [ 3]  257 	sta	*(__DPTR+0)
   00FA A5*06         [ 3]  258 	lda	*(__rrulonglong_sloc3_1_0 + 1)
   00FC 69s00         [ 2]  259 	adc	#>(__rrulonglong_PARM_1+0)
   00FE 85*01         [ 3]  260 	sta	*(__DPTR+1)
   0100 A0 00         [ 2]  261 	ldy	#0x00
   0102 B1*00         [ 6]  262 	lda	[__DPTR],y
   0104 AA            [ 2]  263 	tax
   0105 29 01         [ 2]  264 	and	#0x01
   0107 8Dr09r00      [ 4]  265 	sta	__rrulonglong_t1_65536_2
                            266 ;	_rrulonglong.c: 30: b[i]=(b[i]>>1)|t2;
   010A 8A            [ 2]  267 	txa
   010B 4A            [ 2]  268 	lsr	a
   010C 0Dr0Ar00      [ 4]  269 	ora	__rrulonglong_t2_65536_2
   010F AA            [ 2]  270 	tax
   0110 18            [ 2]  271 	clc
   0111 A5*05         [ 3]  272 	lda	*__rrulonglong_sloc3_1_0
   0113 69r00         [ 2]  273 	adc	#<(__rrulonglong_PARM_1+0)
   0115 85*00         [ 3]  274 	sta	*(__DPTR+0)
   0117 A5*06         [ 3]  275 	lda	*(__rrulonglong_sloc3_1_0 + 1)
   0119 69s00         [ 2]  276 	adc	#>(__rrulonglong_PARM_1+0)
   011B 85*01         [ 3]  277 	sta	*(__DPTR+1)
   011D 8A            [ 2]  278 	txa
   011E 91*00         [ 6]  279 	sta	[__DPTR],y
                            280 ;	_rrulonglong.c: 31: t2=t1?0x80:0;
   0120 ADr09r00      [ 4]  281 	lda	__rrulonglong_t1_65536_2
   0123 F0 07         [ 4]  282 	beq	00120$
   0125 A9 80         [ 2]  283 	lda	#0x80
   0127 A2 00         [ 2]  284 	ldx	#0x00
   0129 4Cr2Fr01      [ 3]  285 	jmp	00121$
   012C                     286 00120$:
   012C A9 00         [ 2]  287 	lda	#0x00
   012E AA            [ 2]  288 	tax
   012F                     289 00121$:
   012F 8Dr0Ar00      [ 4]  290 	sta	__rrulonglong_t2_65536_2
                            291 ;	_rrulonglong.c: 28: for(i=7-zb;i>=0;i--) {
   0132 C6*00         [ 5]  292 	dec	*__rrulonglong_sloc0_1_0
   0134 4CrD6r00      [ 3]  293 	jmp	00116$
   0137                     294 00108$:
                            295 ;	_rrulonglong.c: 35: return(l);
   0137 ADr07r00      [ 4]  296 	lda	(__rrulonglong_PARM_1 + 7)
   013A 85*00         [ 3]  297 	sta	*___SDCC_m6502_ret7
   013C ADr06r00      [ 4]  298 	lda	(__rrulonglong_PARM_1 + 6)
   013F 85*00         [ 3]  299 	sta	*___SDCC_m6502_ret6
   0141 ADr05r00      [ 4]  300 	lda	(__rrulonglong_PARM_1 + 5)
   0144 85*00         [ 3]  301 	sta	*___SDCC_m6502_ret5
   0146 ADr04r00      [ 4]  302 	lda	(__rrulonglong_PARM_1 + 4)
   0149 85*00         [ 3]  303 	sta	*___SDCC_m6502_ret4
   014B ADr03r00      [ 4]  304 	lda	(__rrulonglong_PARM_1 + 3)
   014E 85*00         [ 3]  305 	sta	*___SDCC_m6502_ret3
   0150 ADr02r00      [ 4]  306 	lda	(__rrulonglong_PARM_1 + 2)
   0153 85*00         [ 3]  307 	sta	*___SDCC_m6502_ret2
   0155 AEr01r00      [ 4]  308 	ldx	(__rrulonglong_PARM_1 + 1)
   0158 ADr00r00      [ 4]  309 	lda	__rrulonglong_PARM_1
                            310 ;	_rrulonglong.c: 36: }
   015B 60            [ 6]  311 	rts
                            312 	.area CODE
                            313 	.area RODATA
                            314 	.area XINIT
                            315 	.area CABS    (ABS)
