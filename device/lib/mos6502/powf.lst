                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module powf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _logf
                             12 	.globl _expf
                             13 	.globl _powf_PARM_2
                             14 	.globl _powf_PARM_1
                             15 	.globl _powf
                             16 ;--------------------------------------------------------
                             17 ; ZP ram data
                             18 ;--------------------------------------------------------
                             19 	.area ZP      (PAG)
   0000                      20 _powf_sloc0_1_0:
   0000                      21 	.ds 4
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in ram
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; uninitialized external ram data
                             27 ;--------------------------------------------------------
                             28 	.area BSS
   0000                      29 _powf_PARM_1:
   0000                      30 	.ds 4
   0004                      31 _powf_PARM_2:
   0004                      32 	.ds 4
                             33 ;--------------------------------------------------------
                             34 ; absolute external ram data
                             35 ;--------------------------------------------------------
                             36 	.area DABS    (ABS)
                             37 ;--------------------------------------------------------
                             38 ; initialized external ram data
                             39 ;--------------------------------------------------------
                             40 	.area DATA
                             41 ;--------------------------------------------------------
                             42 ; global & static initialisations
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area GSINIT
                             46 	.area GSFINAL
                             47 	.area GSINIT
                             48 ;--------------------------------------------------------
                             49 ; Home
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 	.area _CODE
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area CODE
                             57 ;------------------------------------------------------------
                             58 ;Allocation info for local variables in function 'powf'
                             59 ;------------------------------------------------------------
                             60 ;sloc0                     Allocated with name '_powf_sloc0_1_0'
                             61 ;x                         Allocated with name '_powf_PARM_1'
                             62 ;y                         Allocated with name '_powf_PARM_2'
                             63 ;------------------------------------------------------------
                             64 ;	../powf.c: 35: float powf(float x, float y)
                             65 ;	-----------------------------------------
                             66 ;	 function powf
                             67 ;	-----------------------------------------
                             68 ;	Register assignment is optimal.
                             69 ;	Stack space usage: 0 bytes.
   0000                      70 _powf:
                             71 ;	../powf.c: 37: if(y == 0.0) return 1.0;
   0000 ADr07r00      [ 4]   72 	lda	(_powf_PARM_2 + 3)
   0003 29 7F         [ 2]   73 	and	#0x7F
   0005 0Dr06r00      [ 4]   74 	ora	(_powf_PARM_2 + 2)
   0008 0Dr05r00      [ 4]   75 	ora	(_powf_PARM_2 + 1)
   000B 0Dr04r00      [ 4]   76 	ora	_powf_PARM_2
   000E D0 0C         [ 4]   77 	bne	00102$
   0010 A9 00         [ 2]   78 	lda	#0x00
   0012 AA            [ 2]   79 	tax
   0013 A0 80         [ 2]   80 	ldy	#0x80
   0015 84*00         [ 3]   81 	sty	*___SDCC_m6502_ret2
   0017 A0 3F         [ 2]   82 	ldy	#0x3f
   0019 84*00         [ 3]   83 	sty	*___SDCC_m6502_ret3
   001B 60            [ 6]   84 	rts
   001C                      85 00102$:
                             86 ;	../powf.c: 38: if(y == 1.0) return x;
   001C ADr04r00      [ 4]   87 	lda	_powf_PARM_2
   001F 8Dr00r00      [ 4]   88 	sta	___fseq_PARM_1
   0022 ADr05r00      [ 4]   89 	lda	(_powf_PARM_2 + 1)
   0025 8Dr01r00      [ 4]   90 	sta	(___fseq_PARM_1 + 1)
   0028 ADr06r00      [ 4]   91 	lda	(_powf_PARM_2 + 2)
   002B 8Dr02r00      [ 4]   92 	sta	(___fseq_PARM_1 + 2)
   002E ADr07r00      [ 4]   93 	lda	(_powf_PARM_2 + 3)
   0031 8Dr03r00      [ 4]   94 	sta	(___fseq_PARM_1 + 3)
   0034 A2 00         [ 2]   95 	ldx	#0x00
   0036 8Er00r00      [ 4]   96 	stx	___fseq_PARM_2
   0039 8Er01r00      [ 4]   97 	stx	(___fseq_PARM_2 + 1)
   003C A2 80         [ 2]   98 	ldx	#0x80
   003E 8Er02r00      [ 4]   99 	stx	(___fseq_PARM_2 + 2)
   0041 A2 3F         [ 2]  100 	ldx	#0x3f
   0043 8Er03r00      [ 4]  101 	stx	(___fseq_PARM_2 + 3)
   0046 20r00r00      [ 6]  102 	jsr	___fseq
   0049 C9 00         [ 2]  103 	cmp	#0x00
   004B F0 11         [ 4]  104 	beq	00104$
   004D ADr03r00      [ 4]  105 	lda	(_powf_PARM_1 + 3)
   0050 85*00         [ 3]  106 	sta	*___SDCC_m6502_ret3
   0052 ADr02r00      [ 4]  107 	lda	(_powf_PARM_1 + 2)
   0055 85*00         [ 3]  108 	sta	*___SDCC_m6502_ret2
   0057 AEr01r00      [ 4]  109 	ldx	(_powf_PARM_1 + 1)
   005A ADr00r00      [ 4]  110 	lda	_powf_PARM_1
   005D 60            [ 6]  111 	rts
   005E                     112 00104$:
                            113 ;	../powf.c: 39: if(x <= 0.0) return 0.0;
   005E A2 00         [ 2]  114 	ldx	#0x00
   0060 8Er00r00      [ 4]  115 	stx	___fslt_PARM_1
   0063 8Er01r00      [ 4]  116 	stx	(___fslt_PARM_1 + 1)
   0066 8Er02r00      [ 4]  117 	stx	(___fslt_PARM_1 + 2)
   0069 8Er03r00      [ 4]  118 	stx	(___fslt_PARM_1 + 3)
   006C ADr00r00      [ 4]  119 	lda	_powf_PARM_1
   006F 8Dr00r00      [ 4]  120 	sta	___fslt_PARM_2
   0072 ADr01r00      [ 4]  121 	lda	(_powf_PARM_1 + 1)
   0075 8Dr01r00      [ 4]  122 	sta	(___fslt_PARM_2 + 1)
   0078 ADr02r00      [ 4]  123 	lda	(_powf_PARM_1 + 2)
   007B 8Dr02r00      [ 4]  124 	sta	(___fslt_PARM_2 + 2)
   007E ADr03r00      [ 4]  125 	lda	(_powf_PARM_1 + 3)
   0081 8Dr03r00      [ 4]  126 	sta	(___fslt_PARM_2 + 3)
   0084 20r00r00      [ 6]  127 	jsr	___fslt
   0087 C9 00         [ 2]  128 	cmp	#0x00
   0089 D0 08         [ 4]  129 	bne	00106$
   008B A9 00         [ 2]  130 	lda	#0x00
   008D AA            [ 2]  131 	tax
   008E 85*00         [ 3]  132 	sta	*___SDCC_m6502_ret2
   0090 85*00         [ 3]  133 	sta	*___SDCC_m6502_ret3
   0092 60            [ 6]  134 	rts
   0093                     135 00106$:
                            136 ;	../powf.c: 40: return expf(logf(x) * y);
   0093 ADr03r00      [ 4]  137 	lda	(_powf_PARM_1 + 3)
   0096 48            [ 3]  138 	pha
   0097 ADr02r00      [ 4]  139 	lda	(_powf_PARM_1 + 2)
   009A 48            [ 3]  140 	pha
   009B ADr01r00      [ 4]  141 	lda	(_powf_PARM_1 + 1)
   009E 48            [ 3]  142 	pha
   009F ADr00r00      [ 4]  143 	lda	_powf_PARM_1
   00A2 48            [ 3]  144 	pha
   00A3 20r00r00      [ 6]  145 	jsr	_logf
   00A6 8Dr00r00      [ 4]  146 	sta	___fsmul_PARM_1
   00A9 8Er01r00      [ 4]  147 	stx	(___fsmul_PARM_1 + 1)
   00AC A5*00         [ 3]  148 	lda	*___SDCC_m6502_ret2
   00AE 8Dr02r00      [ 4]  149 	sta	(___fsmul_PARM_1 + 2)
   00B1 A5*00         [ 3]  150 	lda	*___SDCC_m6502_ret3
   00B3 8Dr03r00      [ 4]  151 	sta	(___fsmul_PARM_1 + 3)
   00B6 85*00         [ 3]  152 	sta	*(__TEMP+0)
   00B8 68            [ 4]  153 	pla
   00B9 68            [ 4]  154 	pla
   00BA 68            [ 4]  155 	pla
   00BB 68            [ 4]  156 	pla
   00BC ADr04r00      [ 4]  157 	lda	_powf_PARM_2
   00BF 8Dr00r00      [ 4]  158 	sta	___fsmul_PARM_2
   00C2 ADr05r00      [ 4]  159 	lda	(_powf_PARM_2 + 1)
   00C5 8Dr01r00      [ 4]  160 	sta	(___fsmul_PARM_2 + 1)
   00C8 ADr06r00      [ 4]  161 	lda	(_powf_PARM_2 + 2)
   00CB 8Dr02r00      [ 4]  162 	sta	(___fsmul_PARM_2 + 2)
   00CE ADr07r00      [ 4]  163 	lda	(_powf_PARM_2 + 3)
   00D1 8Dr03r00      [ 4]  164 	sta	(___fsmul_PARM_2 + 3)
   00D4 20r00r00      [ 6]  165 	jsr	___fsmul
   00D7 85*00         [ 3]  166 	sta	*_powf_sloc0_1_0
   00D9 86*01         [ 3]  167 	stx	*(_powf_sloc0_1_0 + 1)
   00DB A5*00         [ 3]  168 	lda	*___SDCC_m6502_ret2
   00DD 85*02         [ 3]  169 	sta	*(_powf_sloc0_1_0 + 2)
   00DF A5*00         [ 3]  170 	lda	*___SDCC_m6502_ret3
   00E1 85*03         [ 3]  171 	sta	*(_powf_sloc0_1_0 + 3)
   00E3 48            [ 3]  172 	pha
   00E4 A5*02         [ 3]  173 	lda	*(_powf_sloc0_1_0 + 2)
   00E6 48            [ 3]  174 	pha
   00E7 A5*01         [ 3]  175 	lda	*(_powf_sloc0_1_0 + 1)
   00E9 48            [ 3]  176 	pha
   00EA A5*00         [ 3]  177 	lda	*_powf_sloc0_1_0
   00EC 48            [ 3]  178 	pha
   00ED 20r00r00      [ 6]  179 	jsr	_expf
   00F0 85*00         [ 3]  180 	sta	*_powf_sloc0_1_0
   00F2 86*01         [ 3]  181 	stx	*(_powf_sloc0_1_0 + 1)
   00F4 A5*00         [ 3]  182 	lda	*___SDCC_m6502_ret2
   00F6 85*02         [ 3]  183 	sta	*(_powf_sloc0_1_0 + 2)
   00F8 A5*00         [ 3]  184 	lda	*___SDCC_m6502_ret3
   00FA 85*03         [ 3]  185 	sta	*(_powf_sloc0_1_0 + 3)
   00FC 85*00         [ 3]  186 	sta	*(__TEMP+0)
   00FE 68            [ 4]  187 	pla
   00FF 68            [ 4]  188 	pla
   0100 68            [ 4]  189 	pla
   0101 68            [ 4]  190 	pla
   0102 A5*03         [ 3]  191 	lda	*(_powf_sloc0_1_0 + 3)
   0104 85*00         [ 3]  192 	sta	*___SDCC_m6502_ret3
   0106 A5*02         [ 3]  193 	lda	*(_powf_sloc0_1_0 + 2)
   0108 85*00         [ 3]  194 	sta	*___SDCC_m6502_ret2
   010A A6*01         [ 3]  195 	ldx	*(_powf_sloc0_1_0 + 1)
   010C A5*00         [ 3]  196 	lda	*_powf_sloc0_1_0
                            197 ;	../powf.c: 41: }
   010E 60            [ 6]  198 	rts
                            199 	.area CODE
                            200 	.area RODATA
                            201 	.area XINIT
                            202 	.area CABS    (ABS)
