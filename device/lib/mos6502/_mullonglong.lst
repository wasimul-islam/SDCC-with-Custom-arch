                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _mullonglong
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __mullonglong_PARM_2
                             12 	.globl __mullonglong_PARM_1
                             13 	.globl __mullonglong
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
   0000                      18 __mullonglong_sloc0_1_0:
   0000                      19 	.ds 1
   0001                      20 __mullonglong_sloc1_1_0:
   0001                      21 	.ds 8
   0009                      22 __mullonglong_sloc2_1_0:
   0009                      23 	.ds 2
   000B                      24 __mullonglong_sloc3_1_0:
   000B                      25 	.ds 8
                             26 ;--------------------------------------------------------
                             27 ; overlayable items in ram
                             28 ;--------------------------------------------------------
                             29 ;--------------------------------------------------------
                             30 ; uninitialized external ram data
                             31 ;--------------------------------------------------------
                             32 	.area BSS
   0000                      33 __mullonglong_PARM_1:
   0000                      34 	.ds 8
   0008                      35 __mullonglong_PARM_2:
   0008                      36 	.ds 8
   0010                      37 __mullonglong_ret_65536_2:
   0010                      38 	.ds 8
   0018                      39 __mullonglong_l_196608_4:
   0018                      40 	.ds 1
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area DABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; initialized external ram data
                             47 ;--------------------------------------------------------
                             48 	.area DATA
                             49 ;--------------------------------------------------------
                             50 ; global & static initialisations
                             51 ;--------------------------------------------------------
                             52 	.area _CODE
                             53 	.area GSINIT
                             54 	.area GSFINAL
                             55 	.area GSINIT
                             56 ;--------------------------------------------------------
                             57 ; Home
                             58 ;--------------------------------------------------------
                             59 	.area _CODE
                             60 	.area _CODE
                             61 ;--------------------------------------------------------
                             62 ; code
                             63 ;--------------------------------------------------------
                             64 	.area CODE
                             65 ;------------------------------------------------------------
                             66 ;Allocation info for local variables in function '_mullonglong'
                             67 ;------------------------------------------------------------
                             68 ;sloc0                     Allocated with name '__mullonglong_sloc0_1_0'
                             69 ;sloc1                     Allocated with name '__mullonglong_sloc1_1_0'
                             70 ;sloc2                     Allocated with name '__mullonglong_sloc2_1_0'
                             71 ;sloc3                     Allocated with name '__mullonglong_sloc3_1_0'
                             72 ;ll                        Allocated with name '__mullonglong_PARM_1'
                             73 ;lr                        Allocated with name '__mullonglong_PARM_2'
                             74 ;ret                       Allocated with name '__mullonglong_ret_65536_2'
                             75 ;i                         Allocated to registers 
                             76 ;j                         Allocated to registers 
                             77 ;l                         Allocated with name '__mullonglong_l_196608_4'
                             78 ;r                         Allocated to registers a 
                             79 ;------------------------------------------------------------
                             80 ;	../_mullonglong.c: 39: long long _mullonglong(long long ll, long long lr) __SDCC_NONBANKED
                             81 ;	-----------------------------------------
                             82 ;	 function _mullonglong
                             83 ;	-----------------------------------------
                             84 ;	Register assignment is optimal.
                             85 ;	Stack space usage: 0 bytes.
   0000                      86 __mullonglong:
                             87 ;	../_mullonglong.c: 41: unsigned long long ret = 0ull;
   0000 A2 00         [ 2]   88 	ldx	#0x00
   0002 8Er10r00      [ 4]   89 	stx	__mullonglong_ret_65536_2
   0005 8Er11r00      [ 4]   90 	stx	(__mullonglong_ret_65536_2 + 1)
   0008 8Er12r00      [ 4]   91 	stx	(__mullonglong_ret_65536_2 + 2)
   000B 8Er13r00      [ 4]   92 	stx	(__mullonglong_ret_65536_2 + 3)
   000E 8Er14r00      [ 4]   93 	stx	(__mullonglong_ret_65536_2 + 4)
   0011 8Er15r00      [ 4]   94 	stx	(__mullonglong_ret_65536_2 + 5)
   0014 8Er16r00      [ 4]   95 	stx	(__mullonglong_ret_65536_2 + 6)
   0017 8Er17r00      [ 4]   96 	stx	(__mullonglong_ret_65536_2 + 7)
                             97 ;	../_mullonglong.c: 44: for (i = 0; i < sizeof (long long); i++)
   001A 86*00         [ 3]   98 	stx	*__mullonglong_sloc0_1_0
   001C                      99 00106$:
                            100 ;	../_mullonglong.c: 46: unsigned char l = ll >> (i * 8);
   001C A5*00         [ 3]  101 	lda	*__mullonglong_sloc0_1_0
   001E 0A            [ 2]  102 	asl	a
   001F 0A            [ 2]  103 	asl	a
   0020 0A            [ 2]  104 	asl	a
   0021 8Dr00r00      [ 4]  105 	sta	__rrslonglong_PARM_2
   0024 ADr00r00      [ 4]  106 	lda	__mullonglong_PARM_1
   0027 8Dr00r00      [ 4]  107 	sta	__rrslonglong_PARM_1
   002A ADr01r00      [ 4]  108 	lda	(__mullonglong_PARM_1 + 1)
   002D 8Dr01r00      [ 4]  109 	sta	(__rrslonglong_PARM_1 + 1)
   0030 ADr02r00      [ 4]  110 	lda	(__mullonglong_PARM_1 + 2)
   0033 8Dr02r00      [ 4]  111 	sta	(__rrslonglong_PARM_1 + 2)
   0036 ADr03r00      [ 4]  112 	lda	(__mullonglong_PARM_1 + 3)
   0039 8Dr03r00      [ 4]  113 	sta	(__rrslonglong_PARM_1 + 3)
   003C ADr04r00      [ 4]  114 	lda	(__mullonglong_PARM_1 + 4)
   003F 8Dr04r00      [ 4]  115 	sta	(__rrslonglong_PARM_1 + 4)
   0042 ADr05r00      [ 4]  116 	lda	(__mullonglong_PARM_1 + 5)
   0045 8Dr05r00      [ 4]  117 	sta	(__rrslonglong_PARM_1 + 5)
   0048 ADr06r00      [ 4]  118 	lda	(__mullonglong_PARM_1 + 6)
   004B 8Dr06r00      [ 4]  119 	sta	(__rrslonglong_PARM_1 + 6)
   004E ADr07r00      [ 4]  120 	lda	(__mullonglong_PARM_1 + 7)
   0051 8Dr07r00      [ 4]  121 	sta	(__rrslonglong_PARM_1 + 7)
   0054 20r00r00      [ 6]  122 	jsr	__rrslonglong
   0057 85*01         [ 3]  123 	sta	*__mullonglong_sloc1_1_0
   0059 86*02         [ 3]  124 	stx	*(__mullonglong_sloc1_1_0 + 1)
   005B A5*00         [ 3]  125 	lda	*___SDCC_m6502_ret2
   005D 85*03         [ 3]  126 	sta	*(__mullonglong_sloc1_1_0 + 2)
   005F A5*00         [ 3]  127 	lda	*___SDCC_m6502_ret3
   0061 85*04         [ 3]  128 	sta	*(__mullonglong_sloc1_1_0 + 3)
   0063 A5*00         [ 3]  129 	lda	*___SDCC_m6502_ret4
   0065 85*05         [ 3]  130 	sta	*(__mullonglong_sloc1_1_0 + 4)
   0067 A5*00         [ 3]  131 	lda	*___SDCC_m6502_ret5
   0069 85*06         [ 3]  132 	sta	*(__mullonglong_sloc1_1_0 + 5)
   006B A5*00         [ 3]  133 	lda	*___SDCC_m6502_ret6
   006D 85*07         [ 3]  134 	sta	*(__mullonglong_sloc1_1_0 + 6)
   006F A5*00         [ 3]  135 	lda	*___SDCC_m6502_ret7
   0071 85*08         [ 3]  136 	sta	*(__mullonglong_sloc1_1_0 + 7)
   0073 A5*01         [ 3]  137 	lda	*__mullonglong_sloc1_1_0
   0075 8Dr18r00      [ 4]  138 	sta	__mullonglong_l_196608_4
                            139 ;	../_mullonglong.c: 47: for(j = 0; (i + j) < sizeof (long long); j++)
   0078 A2 00         [ 2]  140 	ldx	#0x00
   007A 86*01         [ 3]  141 	stx	*__mullonglong_sloc1_1_0
   007C                     142 00104$:
   007C A5*00         [ 3]  143 	lda	*__mullonglong_sloc0_1_0
   007E A2 00         [ 2]  144 	ldx	#0x00
   0080 A4*01         [ 3]  145 	ldy	*__mullonglong_sloc1_1_0
   0082 84*09         [ 3]  146 	sty	*__mullonglong_sloc2_1_0
   0084 86*0A         [ 3]  147 	stx	*(__mullonglong_sloc2_1_0 + 1)
   0086 18            [ 2]  148 	clc
   0087 65*09         [ 3]  149 	adc	*__mullonglong_sloc2_1_0
   0089 48            [ 3]  150 	pha
   008A 8A            [ 2]  151 	txa
   008B 65*0A         [ 3]  152 	adc	*(__mullonglong_sloc2_1_0 + 1)
   008D AA            [ 2]  153 	tax
   008E 68            [ 4]  154 	pla
   008F 38            [ 2]  155 	sec
   0090 E9 08         [ 2]  156 	sbc	#0x08
   0092 8A            [ 2]  157 	txa
   0093 E9 00         [ 2]  158 	sbc	#0x00
   0095 50 04         [ 4]  159 	bvc	00129$
   0097 10 07         [ 4]  160 	bpl	00128$
   0099 30 02         [ 4]  161 	bmi	00130$
   009B                     162 00129$:
   009B 30 03         [ 4]  163 	bmi	00128$
   009D                     164 00130$:
   009D 4Cr8Ar01      [ 3]  165 	jmp	00107$
   00A0                     166 00128$:
                            167 ;	../_mullonglong.c: 49: unsigned char r = lr >> (j * 8);
   00A0 A5*01         [ 3]  168 	lda	*__mullonglong_sloc1_1_0
   00A2 0A            [ 2]  169 	asl	a
   00A3 0A            [ 2]  170 	asl	a
   00A4 0A            [ 2]  171 	asl	a
   00A5 8Dr00r00      [ 4]  172 	sta	__rrslonglong_PARM_2
   00A8 ADr08r00      [ 4]  173 	lda	__mullonglong_PARM_2
   00AB 8Dr00r00      [ 4]  174 	sta	__rrslonglong_PARM_1
   00AE ADr09r00      [ 4]  175 	lda	(__mullonglong_PARM_2 + 1)
   00B1 8Dr01r00      [ 4]  176 	sta	(__rrslonglong_PARM_1 + 1)
   00B4 ADr0Ar00      [ 4]  177 	lda	(__mullonglong_PARM_2 + 2)
   00B7 8Dr02r00      [ 4]  178 	sta	(__rrslonglong_PARM_1 + 2)
   00BA ADr0Br00      [ 4]  179 	lda	(__mullonglong_PARM_2 + 3)
   00BD 8Dr03r00      [ 4]  180 	sta	(__rrslonglong_PARM_1 + 3)
   00C0 ADr0Cr00      [ 4]  181 	lda	(__mullonglong_PARM_2 + 4)
   00C3 8Dr04r00      [ 4]  182 	sta	(__rrslonglong_PARM_1 + 4)
   00C6 ADr0Dr00      [ 4]  183 	lda	(__mullonglong_PARM_2 + 5)
   00C9 8Dr05r00      [ 4]  184 	sta	(__rrslonglong_PARM_1 + 5)
   00CC ADr0Er00      [ 4]  185 	lda	(__mullonglong_PARM_2 + 6)
   00CF 8Dr06r00      [ 4]  186 	sta	(__rrslonglong_PARM_1 + 6)
   00D2 ADr0Fr00      [ 4]  187 	lda	(__mullonglong_PARM_2 + 7)
   00D5 8Dr07r00      [ 4]  188 	sta	(__rrslonglong_PARM_1 + 7)
   00D8 20r00r00      [ 6]  189 	jsr	__rrslonglong
   00DB 85*0B         [ 3]  190 	sta	*__mullonglong_sloc3_1_0
   00DD 86*0C         [ 3]  191 	stx	*(__mullonglong_sloc3_1_0 + 1)
   00DF A5*00         [ 3]  192 	lda	*___SDCC_m6502_ret2
   00E1 85*0D         [ 3]  193 	sta	*(__mullonglong_sloc3_1_0 + 2)
   00E3 A5*00         [ 3]  194 	lda	*___SDCC_m6502_ret3
   00E5 85*0E         [ 3]  195 	sta	*(__mullonglong_sloc3_1_0 + 3)
   00E7 A5*00         [ 3]  196 	lda	*___SDCC_m6502_ret4
   00E9 85*0F         [ 3]  197 	sta	*(__mullonglong_sloc3_1_0 + 4)
   00EB A5*00         [ 3]  198 	lda	*___SDCC_m6502_ret5
   00ED 85*10         [ 3]  199 	sta	*(__mullonglong_sloc3_1_0 + 5)
   00EF A5*00         [ 3]  200 	lda	*___SDCC_m6502_ret6
   00F1 85*11         [ 3]  201 	sta	*(__mullonglong_sloc3_1_0 + 6)
   00F3 A5*00         [ 3]  202 	lda	*___SDCC_m6502_ret7
   00F5 85*12         [ 3]  203 	sta	*(__mullonglong_sloc3_1_0 + 7)
   00F7 A5*0B         [ 3]  204 	lda	*__mullonglong_sloc3_1_0
                            205 ;	../_mullonglong.c: 50: ret += (unsigned long long)((unsigned short)(l * r)) << ((i + j) * 8);
   00F9 AA            [ 2]  206 	tax
   00FA ADr18r00      [ 4]  207 	lda	__mullonglong_l_196608_4
   00FD 20r00r00      [ 6]  208 	jsr	__muluchar
   0100 8Dr00r00      [ 4]  209 	sta	__rlulonglong_PARM_1
   0103 8Er01r00      [ 4]  210 	stx	(__rlulonglong_PARM_1 + 1)
   0106 A0 00         [ 2]  211 	ldy	#0x00
   0108 8Cr02r00      [ 4]  212 	sty	(__rlulonglong_PARM_1 + 2)
   010B 8Cr03r00      [ 4]  213 	sty	(__rlulonglong_PARM_1 + 3)
   010E 8Cr04r00      [ 4]  214 	sty	(__rlulonglong_PARM_1 + 4)
   0111 8Cr05r00      [ 4]  215 	sty	(__rlulonglong_PARM_1 + 5)
   0114 8Cr06r00      [ 4]  216 	sty	(__rlulonglong_PARM_1 + 6)
   0117 8Cr07r00      [ 4]  217 	sty	(__rlulonglong_PARM_1 + 7)
   011A A5*00         [ 3]  218 	lda	*__mullonglong_sloc0_1_0
   011C 18            [ 2]  219 	clc
   011D 65*01         [ 3]  220 	adc	*__mullonglong_sloc1_1_0
   011F 0A            [ 2]  221 	asl	a
   0120 0A            [ 2]  222 	asl	a
   0121 0A            [ 2]  223 	asl	a
   0122 8Dr00r00      [ 4]  224 	sta	__rlulonglong_PARM_2
   0125 20r00r00      [ 6]  225 	jsr	__rlulonglong
   0128 85*0B         [ 3]  226 	sta	*__mullonglong_sloc3_1_0
   012A 86*0C         [ 3]  227 	stx	*(__mullonglong_sloc3_1_0 + 1)
   012C A5*00         [ 3]  228 	lda	*___SDCC_m6502_ret2
   012E 85*0D         [ 3]  229 	sta	*(__mullonglong_sloc3_1_0 + 2)
   0130 A5*00         [ 3]  230 	lda	*___SDCC_m6502_ret3
   0132 85*0E         [ 3]  231 	sta	*(__mullonglong_sloc3_1_0 + 3)
   0134 A5*00         [ 3]  232 	lda	*___SDCC_m6502_ret4
   0136 85*0F         [ 3]  233 	sta	*(__mullonglong_sloc3_1_0 + 4)
   0138 A5*00         [ 3]  234 	lda	*___SDCC_m6502_ret5
   013A 85*10         [ 3]  235 	sta	*(__mullonglong_sloc3_1_0 + 5)
   013C A5*00         [ 3]  236 	lda	*___SDCC_m6502_ret6
   013E 85*11         [ 3]  237 	sta	*(__mullonglong_sloc3_1_0 + 6)
   0140 A5*00         [ 3]  238 	lda	*___SDCC_m6502_ret7
   0142 85*12         [ 3]  239 	sta	*(__mullonglong_sloc3_1_0 + 7)
   0144 ADr10r00      [ 4]  240 	lda	__mullonglong_ret_65536_2
   0147 18            [ 2]  241 	clc
   0148 65*0B         [ 3]  242 	adc	*__mullonglong_sloc3_1_0
   014A 8Dr10r00      [ 4]  243 	sta	__mullonglong_ret_65536_2
   014D ADr11r00      [ 4]  244 	lda	(__mullonglong_ret_65536_2 + 1)
   0150 65*0C         [ 3]  245 	adc	*(__mullonglong_sloc3_1_0 + 1)
   0152 8Dr11r00      [ 4]  246 	sta	(__mullonglong_ret_65536_2 + 1)
   0155 ADr12r00      [ 4]  247 	lda	(__mullonglong_ret_65536_2 + 2)
   0158 65*0D         [ 3]  248 	adc	*(__mullonglong_sloc3_1_0 + 2)
   015A 8Dr12r00      [ 4]  249 	sta	(__mullonglong_ret_65536_2 + 2)
   015D ADr13r00      [ 4]  250 	lda	(__mullonglong_ret_65536_2 + 3)
   0160 65*0E         [ 3]  251 	adc	*(__mullonglong_sloc3_1_0 + 3)
   0162 8Dr13r00      [ 4]  252 	sta	(__mullonglong_ret_65536_2 + 3)
   0165 ADr14r00      [ 4]  253 	lda	(__mullonglong_ret_65536_2 + 4)
   0168 65*0F         [ 3]  254 	adc	*(__mullonglong_sloc3_1_0 + 4)
   016A 8Dr14r00      [ 4]  255 	sta	(__mullonglong_ret_65536_2 + 4)
   016D ADr15r00      [ 4]  256 	lda	(__mullonglong_ret_65536_2 + 5)
   0170 65*10         [ 3]  257 	adc	*(__mullonglong_sloc3_1_0 + 5)
   0172 8Dr15r00      [ 4]  258 	sta	(__mullonglong_ret_65536_2 + 5)
   0175 ADr16r00      [ 4]  259 	lda	(__mullonglong_ret_65536_2 + 6)
   0178 65*11         [ 3]  260 	adc	*(__mullonglong_sloc3_1_0 + 6)
   017A 8Dr16r00      [ 4]  261 	sta	(__mullonglong_ret_65536_2 + 6)
   017D ADr17r00      [ 4]  262 	lda	(__mullonglong_ret_65536_2 + 7)
   0180 65*12         [ 3]  263 	adc	*(__mullonglong_sloc3_1_0 + 7)
   0182 8Dr17r00      [ 4]  264 	sta	(__mullonglong_ret_65536_2 + 7)
                            265 ;	../_mullonglong.c: 47: for(j = 0; (i + j) < sizeof (long long); j++)
   0185 E6*01         [ 5]  266 	inc	*__mullonglong_sloc1_1_0
   0187 4Cr7Cr00      [ 3]  267 	jmp	00104$
   018A                     268 00107$:
                            269 ;	../_mullonglong.c: 44: for (i = 0; i < sizeof (long long); i++)
   018A E6*00         [ 5]  270 	inc	*__mullonglong_sloc0_1_0
   018C A5*00         [ 3]  271 	lda	*__mullonglong_sloc0_1_0
   018E C9 08         [ 2]  272 	cmp	#0x08
   0190 B0 03         [ 4]  273 	bcs	00131$
   0192 4Cr1Cr00      [ 3]  274 	jmp	00106$
   0195                     275 00131$:
                            276 ;	../_mullonglong.c: 54: return(ret);
   0195 ADr17r00      [ 4]  277 	lda	(__mullonglong_ret_65536_2 + 7)
   0198 85*00         [ 3]  278 	sta	*___SDCC_m6502_ret7
   019A ADr16r00      [ 4]  279 	lda	(__mullonglong_ret_65536_2 + 6)
   019D 85*00         [ 3]  280 	sta	*___SDCC_m6502_ret6
   019F ADr15r00      [ 4]  281 	lda	(__mullonglong_ret_65536_2 + 5)
   01A2 85*00         [ 3]  282 	sta	*___SDCC_m6502_ret5
   01A4 ADr14r00      [ 4]  283 	lda	(__mullonglong_ret_65536_2 + 4)
   01A7 85*00         [ 3]  284 	sta	*___SDCC_m6502_ret4
   01A9 ADr13r00      [ 4]  285 	lda	(__mullonglong_ret_65536_2 + 3)
   01AC 85*00         [ 3]  286 	sta	*___SDCC_m6502_ret3
   01AE ADr12r00      [ 4]  287 	lda	(__mullonglong_ret_65536_2 + 2)
   01B1 85*00         [ 3]  288 	sta	*___SDCC_m6502_ret2
   01B3 AEr11r00      [ 4]  289 	ldx	(__mullonglong_ret_65536_2 + 1)
   01B6 ADr10r00      [ 4]  290 	lda	__mullonglong_ret_65536_2
                            291 ;	../_mullonglong.c: 55: }
   01B9 60            [ 6]  292 	rts
                            293 	.area CODE
                            294 	.area RODATA
                            295 	.area XINIT
                            296 	.area CABS    (ABS)
