                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module strdup
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _malloc
                             12 	.globl _strlen
                             13 	.globl _strcpy
                             14 	.globl _strdup
                             15 ;--------------------------------------------------------
                             16 ; ZP ram data
                             17 ;--------------------------------------------------------
                             18 	.area ZP      (PAG)
                             19 ;--------------------------------------------------------
                             20 ; overlayable items in ram
                             21 ;--------------------------------------------------------
                             22 ;--------------------------------------------------------
                             23 ; uninitialized external ram data
                             24 ;--------------------------------------------------------
                             25 	.area BSS
   0000                      26 _strdup_s_65536_61:
   0000                      27 	.ds 2
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area DABS    (ABS)
                             32 ;--------------------------------------------------------
                             33 ; initialized external ram data
                             34 ;--------------------------------------------------------
                             35 	.area DATA
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 	.area GSINIT
                             41 	.area GSFINAL
                             42 	.area GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 	.area _CODE
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area CODE
                             52 ;------------------------------------------------------------
                             53 ;Allocation info for local variables in function 'strdup'
                             54 ;------------------------------------------------------------
                             55 ;s                         Allocated with name '_strdup_s_65536_61'
                             56 ;r                         Allocated to registers a x 
                             57 ;------------------------------------------------------------
                             58 ;	../strdup.c: 33: char *strdup (const char *s)
                             59 ;	-----------------------------------------
                             60 ;	 function strdup
                             61 ;	-----------------------------------------
                             62 ;	Register assignment is optimal.
                             63 ;	Stack space usage: 0 bytes.
   0000                      64 _strdup:
   0000 8Dr00r00      [ 4]   65 	sta	_strdup_s_65536_61
                             66 ;	../strdup.c: 35: char *r = malloc(strlen(s) + 1);
   0003 8Er01r00      [ 4]   67 	stx	(_strdup_s_65536_61 + 1)
   0006 ADr00r00      [ 4]   68 	lda	_strdup_s_65536_61
   0009 20r00r00      [ 6]   69 	jsr	_strlen
   000C 18            [ 2]   70 	clc
   000D 69 01         [ 2]   71 	adc	#0x01
   000F 90 01         [ 4]   72 	bcc	00109$
   0011 E8            [ 2]   73 	inx
   0012                      74 00109$:
   0012 20r00r00      [ 6]   75 	jsr	_malloc
                             76 ;	../strdup.c: 36: if (r)
   0015 C9 00         [ 2]   77 	cmp	#0x00
   0017 D0 02         [ 4]   78 	bne	00110$
   0019 E0 00         [ 2]   79 	cpx	#0x00
   001B                      80 00110$:
   001B F0 19         [ 4]   81 	beq	00102$
                             82 ;	../strdup.c: 37: strcpy(r, s);
   001D ACr00r00      [ 4]   83 	ldy	_strdup_s_65536_61
   0020 8Cr00r00      [ 4]   84 	sty	_strcpy_PARM_2
   0023 ACr01r00      [ 4]   85 	ldy	(_strdup_s_65536_61 + 1)
   0026 8Cr01r00      [ 4]   86 	sty	(_strcpy_PARM_2 + 1)
   0029 48            [ 3]   87 	pha
   002A 85*00         [ 3]   88 	sta	*(__TEMP+0)
   002C 8A            [ 2]   89 	txa
   002D 48            [ 3]   90 	pha
   002E A5*00         [ 3]   91 	lda	*(__TEMP+0)
   0030 20r00r00      [ 6]   92 	jsr	_strcpy
   0033 68            [ 4]   93 	pla
   0034 AA            [ 2]   94 	tax
   0035 68            [ 4]   95 	pla
   0036                      96 00102$:
                             97 ;	../strdup.c: 38: return (r);
                             98 ;	../strdup.c: 39: }
   0036 60            [ 6]   99 	rts
                            100 	.area CODE
                            101 	.area RODATA
                            102 	.area XINIT
                            103 	.area CABS    (ABS)
