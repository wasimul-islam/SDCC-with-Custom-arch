                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _fsneq
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___fsneq_PARM_2
                             12 	.globl ___fsneq_PARM_1
                             13 	.globl ___fsneq
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 	.area	OSEG    (PAG, OVR)
   0000                      22 ___fsneq_sloc0_1_0:
   0000                      23 	.ds 4
   0004                      24 ___fsneq_sloc1_1_0:
   0004                      25 	.ds 4
                             26 ;--------------------------------------------------------
                             27 ; uninitialized external ram data
                             28 ;--------------------------------------------------------
                             29 	.area BSS
   0000                      30 ___fsneq_PARM_1:
   0000                      31 	.ds 4
   0004                      32 ___fsneq_PARM_2:
   0004                      33 	.ds 4
   0008                      34 ___fsneq_fl1_65536_21:
   0008                      35 	.ds 4
   000C                      36 ___fsneq_fl2_65536_21:
   000C                      37 	.ds 4
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area DABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; initialized external ram data
                             44 ;--------------------------------------------------------
                             45 	.area DATA
                             46 ;--------------------------------------------------------
                             47 ; global & static initialisations
                             48 ;--------------------------------------------------------
                             49 	.area _CODE
                             50 	.area GSINIT
                             51 	.area GSFINAL
                             52 	.area GSINIT
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _CODE
                             57 	.area _CODE
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area CODE
                             62 ;------------------------------------------------------------
                             63 ;Allocation info for local variables in function '__fsneq'
                             64 ;------------------------------------------------------------
                             65 ;a1                        Allocated with name '___fsneq_PARM_1'
                             66 ;a2                        Allocated with name '___fsneq_PARM_2'
                             67 ;fl1                       Allocated with name '___fsneq_fl1_65536_21'
                             68 ;fl2                       Allocated with name '___fsneq_fl2_65536_21'
                             69 ;sloc0                     Allocated with name '___fsneq_sloc0_1_0'
                             70 ;sloc1                     Allocated with name '___fsneq_sloc1_1_0'
                             71 ;------------------------------------------------------------
                             72 ;	../_fsneq.c: 80: _Bool __fsneq (float a1, float a2)
                             73 ;	-----------------------------------------
                             74 ;	 function __fsneq
                             75 ;	-----------------------------------------
                             76 ;	Register assignment is optimal.
                             77 ;	Stack space usage: 0 bytes.
   0000                      78 ___fsneq:
                             79 ;	../_fsneq.c: 84: fl1.f = a1;
   0000 ADr03r00      [ 4]   80 	lda	(___fsneq_PARM_1 + 3)
   0003 8Dr0Br00      [ 4]   81 	sta	(___fsneq_fl1_65536_21 + 3)
   0006 ADr02r00      [ 4]   82 	lda	(___fsneq_PARM_1 + 2)
   0009 8Dr0Ar00      [ 4]   83 	sta	(___fsneq_fl1_65536_21 + 2)
   000C ADr01r00      [ 4]   84 	lda	(___fsneq_PARM_1 + 1)
   000F 8Dr09r00      [ 4]   85 	sta	(___fsneq_fl1_65536_21 + 1)
   0012 ADr00r00      [ 4]   86 	lda	___fsneq_PARM_1
   0015 8Dr08r00      [ 4]   87 	sta	___fsneq_fl1_65536_21
                             88 ;	../_fsneq.c: 85: fl2.f = a2;
   0018 ADr07r00      [ 4]   89 	lda	(___fsneq_PARM_2 + 3)
   001B 8Dr0Fr00      [ 4]   90 	sta	(___fsneq_fl2_65536_21 + 3)
   001E ADr06r00      [ 4]   91 	lda	(___fsneq_PARM_2 + 2)
   0021 8Dr0Er00      [ 4]   92 	sta	(___fsneq_fl2_65536_21 + 2)
   0024 ADr05r00      [ 4]   93 	lda	(___fsneq_PARM_2 + 1)
   0027 8Dr0Dr00      [ 4]   94 	sta	(___fsneq_fl2_65536_21 + 1)
   002A ADr04r00      [ 4]   95 	lda	___fsneq_PARM_2
   002D 8Dr0Cr00      [ 4]   96 	sta	___fsneq_fl2_65536_21
                             97 ;	../_fsneq.c: 87: if (fl1.l == fl2.l)
   0030 ADr0Br00      [ 4]   98 	lda	(___fsneq_fl1_65536_21 + 3)
   0033 85*03         [ 3]   99 	sta	*(___fsneq_sloc0_1_0 + 3)
   0035 ADr0Ar00      [ 4]  100 	lda	(___fsneq_fl1_65536_21 + 2)
   0038 85*02         [ 3]  101 	sta	*(___fsneq_sloc0_1_0 + 2)
   003A ADr09r00      [ 4]  102 	lda	(___fsneq_fl1_65536_21 + 1)
   003D 85*01         [ 3]  103 	sta	*(___fsneq_sloc0_1_0 + 1)
   003F ADr08r00      [ 4]  104 	lda	___fsneq_fl1_65536_21
   0042 85*00         [ 3]  105 	sta	*___fsneq_sloc0_1_0
   0044 ADr0Fr00      [ 4]  106 	lda	(___fsneq_fl2_65536_21 + 3)
   0047 85*07         [ 3]  107 	sta	*(___fsneq_sloc1_1_0 + 3)
   0049 ADr0Er00      [ 4]  108 	lda	(___fsneq_fl2_65536_21 + 2)
   004C 85*06         [ 3]  109 	sta	*(___fsneq_sloc1_1_0 + 2)
   004E ADr0Dr00      [ 4]  110 	lda	(___fsneq_fl2_65536_21 + 1)
   0051 85*05         [ 3]  111 	sta	*(___fsneq_sloc1_1_0 + 1)
   0053 ADr0Cr00      [ 4]  112 	lda	___fsneq_fl2_65536_21
   0056 85*04         [ 3]  113 	sta	*___fsneq_sloc1_1_0
   0058 A5*00         [ 3]  114 	lda	*___fsneq_sloc0_1_0
   005A C5*04         [ 3]  115 	cmp	*___fsneq_sloc1_1_0
   005C D0 15         [ 4]  116 	bne	00102$
   005E A5*01         [ 3]  117 	lda	*(___fsneq_sloc0_1_0 + 1)
   0060 C5*05         [ 3]  118 	cmp	*(___fsneq_sloc1_1_0 + 1)
   0062 D0 0F         [ 4]  119 	bne	00102$
   0064 A5*02         [ 3]  120 	lda	*(___fsneq_sloc0_1_0 + 2)
   0066 C5*06         [ 3]  121 	cmp	*(___fsneq_sloc1_1_0 + 2)
   0068 D0 09         [ 4]  122 	bne	00102$
   006A A5*03         [ 3]  123 	lda	*(___fsneq_sloc0_1_0 + 3)
   006C C5*07         [ 3]  124 	cmp	*(___fsneq_sloc1_1_0 + 3)
   006E D0 03         [ 4]  125 	bne	00102$
                            126 ;	../_fsneq.c: 88: return (0);
   0070 A9 00         [ 2]  127 	lda	#0x00
   0072 60            [ 6]  128 	rts
   0073                     129 00102$:
                            130 ;	../_fsneq.c: 89: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
   0073 ADr0Br00      [ 4]  131 	lda	(___fsneq_fl1_65536_21 + 3)
   0076 85*07         [ 3]  132 	sta	*(___fsneq_sloc1_1_0 + 3)
   0078 ADr0Ar00      [ 4]  133 	lda	(___fsneq_fl1_65536_21 + 2)
   007B 85*06         [ 3]  134 	sta	*(___fsneq_sloc1_1_0 + 2)
   007D ADr09r00      [ 4]  135 	lda	(___fsneq_fl1_65536_21 + 1)
   0080 85*05         [ 3]  136 	sta	*(___fsneq_sloc1_1_0 + 1)
   0082 ADr08r00      [ 4]  137 	lda	___fsneq_fl1_65536_21
   0085 85*04         [ 3]  138 	sta	*___fsneq_sloc1_1_0
   0087 ADr0Fr00      [ 4]  139 	lda	(___fsneq_fl2_65536_21 + 3)
   008A 85*03         [ 3]  140 	sta	*(___fsneq_sloc0_1_0 + 3)
   008C ADr0Er00      [ 4]  141 	lda	(___fsneq_fl2_65536_21 + 2)
   008F 85*02         [ 3]  142 	sta	*(___fsneq_sloc0_1_0 + 2)
   0091 ADr0Dr00      [ 4]  143 	lda	(___fsneq_fl2_65536_21 + 1)
   0094 85*01         [ 3]  144 	sta	*(___fsneq_sloc0_1_0 + 1)
   0096 ADr0Cr00      [ 4]  145 	lda	___fsneq_fl2_65536_21
   0099 85*00         [ 3]  146 	sta	*___fsneq_sloc0_1_0
   009B A5*04         [ 3]  147 	lda	*___fsneq_sloc1_1_0
   009D 05*00         [ 3]  148 	ora	*___fsneq_sloc0_1_0
   009F 85*04         [ 3]  149 	sta	*___fsneq_sloc1_1_0
   00A1 A5*05         [ 3]  150 	lda	*(___fsneq_sloc1_1_0 + 1)
   00A3 05*01         [ 3]  151 	ora	*(___fsneq_sloc0_1_0 + 1)
   00A5 85*05         [ 3]  152 	sta	*(___fsneq_sloc1_1_0 + 1)
   00A7 A5*06         [ 3]  153 	lda	*(___fsneq_sloc1_1_0 + 2)
   00A9 05*02         [ 3]  154 	ora	*(___fsneq_sloc0_1_0 + 2)
   00AB 85*06         [ 3]  155 	sta	*(___fsneq_sloc1_1_0 + 2)
   00AD A5*07         [ 3]  156 	lda	*(___fsneq_sloc1_1_0 + 3)
   00AF 05*03         [ 3]  157 	ora	*(___fsneq_sloc0_1_0 + 3)
   00B1 85*07         [ 3]  158 	sta	*(___fsneq_sloc1_1_0 + 3)
   00B3 A5*04         [ 3]  159 	lda	*___fsneq_sloc1_1_0
   00B5 D0 0C         [ 4]  160 	bne	00120$
   00B7 A5*05         [ 3]  161 	lda	*(___fsneq_sloc1_1_0 + 1)
   00B9 D0 08         [ 4]  162 	bne	00120$
   00BB A5*06         [ 3]  163 	lda	*(___fsneq_sloc1_1_0 + 2)
   00BD D0 04         [ 4]  164 	bne	00120$
   00BF A9 7F         [ 2]  165 	lda	#0x7f
   00C1 25*07         [ 3]  166 	and	*(___fsneq_sloc1_1_0 + 3)
   00C3                     167 00120$:
   00C3 D0 03         [ 4]  168 	bne	00104$
                            169 ;	../_fsneq.c: 90: return (0);
   00C5 A9 00         [ 2]  170 	lda	#0x00
   00C7 60            [ 6]  171 	rts
   00C8                     172 00104$:
                            173 ;	../_fsneq.c: 91: return (1);
   00C8 A9 01         [ 2]  174 	lda	#0x01
                            175 ;	../_fsneq.c: 92: }
   00CA 60            [ 6]  176 	rts
                            177 	.area CODE
                            178 	.area RODATA
                            179 	.area XINIT
                            180 	.area CABS    (ABS)
