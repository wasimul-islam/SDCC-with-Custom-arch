                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module strndup
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _malloc
                             12 	.globl ___memcpy
                             13 	.globl _strlen
                             14 	.globl _strndup_PARM_2
                             15 	.globl _strndup
                             16 ;--------------------------------------------------------
                             17 ; ZP ram data
                             18 ;--------------------------------------------------------
                             19 	.area ZP      (PAG)
   0000                      20 _strndup_sloc0_1_0:
   0000                      21 	.ds 2
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in ram
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; uninitialized external ram data
                             27 ;--------------------------------------------------------
                             28 	.area BSS
   0000                      29 _strndup_PARM_2:
   0000                      30 	.ds 2
   0002                      31 _strndup_s_65536_61:
   0002                      32 	.ds 2
   0004                      33 _strndup_l_65536_62:
   0004                      34 	.ds 2
   0006                      35 _strndup_r_65537_63:
   0006                      36 	.ds 2
                             37 ;--------------------------------------------------------
                             38 ; absolute external ram data
                             39 ;--------------------------------------------------------
                             40 	.area DABS    (ABS)
                             41 ;--------------------------------------------------------
                             42 ; initialized external ram data
                             43 ;--------------------------------------------------------
                             44 	.area DATA
                             45 ;--------------------------------------------------------
                             46 ; global & static initialisations
                             47 ;--------------------------------------------------------
                             48 	.area _CODE
                             49 	.area GSINIT
                             50 	.area GSFINAL
                             51 	.area GSINIT
                             52 ;--------------------------------------------------------
                             53 ; Home
                             54 ;--------------------------------------------------------
                             55 	.area _CODE
                             56 	.area _CODE
                             57 ;--------------------------------------------------------
                             58 ; code
                             59 ;--------------------------------------------------------
                             60 	.area CODE
                             61 ;------------------------------------------------------------
                             62 ;Allocation info for local variables in function 'strndup'
                             63 ;------------------------------------------------------------
                             64 ;sloc0                     Allocated with name '_strndup_sloc0_1_0'
                             65 ;n                         Allocated with name '_strndup_PARM_2'
                             66 ;s                         Allocated with name '_strndup_s_65536_61'
                             67 ;l                         Allocated with name '_strndup_l_65536_62'
                             68 ;r                         Allocated with name '_strndup_r_65537_63'
                             69 ;------------------------------------------------------------
                             70 ;	../strndup.c: 33: char *strndup (const char *s, size_t n)
                             71 ;	-----------------------------------------
                             72 ;	 function strndup
                             73 ;	-----------------------------------------
                             74 ;	Register assignment is optimal.
                             75 ;	Stack space usage: 0 bytes.
   0000                      76 _strndup:
   0000 8Dr02r00      [ 4]   77 	sta	_strndup_s_65536_61
                             78 ;	../strndup.c: 35: size_t l = strlen (s);
   0003 8Er03r00      [ 4]   79 	stx	(_strndup_s_65536_61 + 1)
   0006 ADr02r00      [ 4]   80 	lda	_strndup_s_65536_61
   0009 20r00r00      [ 6]   81 	jsr	_strlen
   000C 8Dr04r00      [ 4]   82 	sta	_strndup_l_65536_62
   000F 8Er05r00      [ 4]   83 	stx	(_strndup_l_65536_62 + 1)
                             84 ;	../strndup.c: 36: if (l > n)
   0012 ADr00r00      [ 4]   85 	lda	_strndup_PARM_2
   0015 38            [ 2]   86 	sec
   0016 EDr04r00      [ 4]   87 	sbc	_strndup_l_65536_62
   0019 ADr01r00      [ 4]   88 	lda	(_strndup_PARM_2 + 1)
   001C EDr05r00      [ 4]   89 	sbc	(_strndup_l_65536_62 + 1)
   001F B0 0C         [ 4]   90 	bcs	00102$
                             91 ;	../strndup.c: 37: l = n;
   0021 ADr00r00      [ 4]   92 	lda	_strndup_PARM_2
   0024 8Dr04r00      [ 4]   93 	sta	_strndup_l_65536_62
   0027 ADr01r00      [ 4]   94 	lda	(_strndup_PARM_2 + 1)
   002A 8Dr05r00      [ 4]   95 	sta	(_strndup_l_65536_62 + 1)
   002D                      96 00102$:
                             97 ;	../strndup.c: 38: char *r = malloc (l + 1);
   002D ADr04r00      [ 4]   98 	lda	_strndup_l_65536_62
   0030 AEr05r00      [ 4]   99 	ldx	(_strndup_l_65536_62 + 1)
   0033 18            [ 2]  100 	clc
   0034 69 01         [ 2]  101 	adc	#0x01
   0036 90 01         [ 4]  102 	bcc	00116$
   0038 E8            [ 2]  103 	inx
   0039                     104 00116$:
   0039 20r00r00      [ 6]  105 	jsr	_malloc
   003C 8Dr06r00      [ 4]  106 	sta	_strndup_r_65537_63
   003F 8Er07r00      [ 4]  107 	stx	(_strndup_r_65537_63 + 1)
                            108 ;	../strndup.c: 39: if (r)
   0042 ADr07r00      [ 4]  109 	lda	(_strndup_r_65537_63 + 1)
   0045 0Dr06r00      [ 4]  110 	ora	_strndup_r_65537_63
   0048 F0 37         [ 4]  111 	beq	00104$
                            112 ;	../strndup.c: 41: memcpy (r, s, l);
   004A ADr06r00      [ 4]  113 	lda	_strndup_r_65537_63
   004D AEr07r00      [ 4]  114 	ldx	(_strndup_r_65537_63 + 1)
   0050 ACr02r00      [ 4]  115 	ldy	_strndup_s_65536_61
   0053 8Cr00r00      [ 4]  116 	sty	___memcpy_PARM_2
   0056 ACr03r00      [ 4]  117 	ldy	(_strndup_s_65536_61 + 1)
   0059 8Cr01r00      [ 4]  118 	sty	(___memcpy_PARM_2 + 1)
   005C ACr04r00      [ 4]  119 	ldy	_strndup_l_65536_62
   005F 8Cr00r00      [ 4]  120 	sty	___memcpy_PARM_3
   0062 ACr05r00      [ 4]  121 	ldy	(_strndup_l_65536_62 + 1)
   0065 8Cr01r00      [ 4]  122 	sty	(___memcpy_PARM_3 + 1)
   0068 20r00r00      [ 6]  123 	jsr	___memcpy
                            124 ;	../strndup.c: 42: r[l] = 0;
   006B ADr06r00      [ 4]  125 	lda	_strndup_r_65537_63
   006E 18            [ 2]  126 	clc
   006F 6Dr04r00      [ 4]  127 	adc	_strndup_l_65536_62
   0072 85*00         [ 3]  128 	sta	*_strndup_sloc0_1_0
   0074 ADr07r00      [ 4]  129 	lda	(_strndup_r_65537_63 + 1)
   0077 6Dr05r00      [ 4]  130 	adc	(_strndup_l_65536_62 + 1)
   007A 85*01         [ 3]  131 	sta	*(_strndup_sloc0_1_0 + 1)
   007C A9 00         [ 2]  132 	lda	#0x00
   007E A8            [ 2]  133 	tay
   007F 91*00         [ 6]  134 	sta	[*_strndup_sloc0_1_0],y
   0081                     135 00104$:
                            136 ;	../strndup.c: 44: return (r);
   0081 AEr07r00      [ 4]  137 	ldx	(_strndup_r_65537_63 + 1)
   0084 ADr06r00      [ 4]  138 	lda	_strndup_r_65537_63
                            139 ;	../strndup.c: 45: }
   0087 60            [ 6]  140 	rts
                            141 	.area CODE
                            142 	.area RODATA
                            143 	.area XINIT
                            144 	.area CABS    (ABS)
