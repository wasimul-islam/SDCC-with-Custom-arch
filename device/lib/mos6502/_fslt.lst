                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _fslt
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___fslt_PARM_2
                             12 	.globl ___fslt_PARM_1
                             13 	.globl ___fslt
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 	.area	OSEG    (PAG, OVR)
   0000                      22 ___fslt_sloc0_1_0:
   0000                      23 	.ds 4
   0004                      24 ___fslt_sloc1_1_0:
   0004                      25 	.ds 4
                             26 ;--------------------------------------------------------
                             27 ; uninitialized external ram data
                             28 ;--------------------------------------------------------
                             29 	.area BSS
   0000                      30 ___fslt_PARM_1:
   0000                      31 	.ds 4
   0004                      32 ___fslt_PARM_2:
   0004                      33 	.ds 4
   0008                      34 ___fslt_fl1_65536_21:
   0008                      35 	.ds 4
   000C                      36 ___fslt_fl2_65536_21:
   000C                      37 	.ds 4
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area DABS    (ABS)
                             42 ;--------------------------------------------------------
                             43 ; initialized external ram data
                             44 ;--------------------------------------------------------
                             45 	.area DATA
                             46 ;--------------------------------------------------------
                             47 ; global & static initialisations
                             48 ;--------------------------------------------------------
                             49 	.area _CODE
                             50 	.area GSINIT
                             51 	.area GSFINAL
                             52 	.area GSINIT
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _CODE
                             57 	.area _CODE
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area CODE
                             62 ;------------------------------------------------------------
                             63 ;Allocation info for local variables in function '__fslt'
                             64 ;------------------------------------------------------------
                             65 ;a1                        Allocated with name '___fslt_PARM_1'
                             66 ;a2                        Allocated with name '___fslt_PARM_2'
                             67 ;fl1                       Allocated with name '___fslt_fl1_65536_21'
                             68 ;fl2                       Allocated with name '___fslt_fl2_65536_21'
                             69 ;sloc0                     Allocated with name '___fslt_sloc0_1_0'
                             70 ;sloc1                     Allocated with name '___fslt_sloc1_1_0'
                             71 ;------------------------------------------------------------
                             72 ;	../_fslt.c: 108: _Bool __fslt (float a1, float a2)
                             73 ;	-----------------------------------------
                             74 ;	 function __fslt
                             75 ;	-----------------------------------------
                             76 ;	Register assignment is optimal.
                             77 ;	Stack space usage: 0 bytes.
   0000                      78 ___fslt:
                             79 ;	../_fslt.c: 112: fl1.f = a1;
   0000 ADr03r00      [ 4]   80 	lda	(___fslt_PARM_1 + 3)
   0003 8Dr0Br00      [ 4]   81 	sta	(___fslt_fl1_65536_21 + 3)
   0006 ADr02r00      [ 4]   82 	lda	(___fslt_PARM_1 + 2)
   0009 8Dr0Ar00      [ 4]   83 	sta	(___fslt_fl1_65536_21 + 2)
   000C ADr01r00      [ 4]   84 	lda	(___fslt_PARM_1 + 1)
   000F 8Dr09r00      [ 4]   85 	sta	(___fslt_fl1_65536_21 + 1)
   0012 ADr00r00      [ 4]   86 	lda	___fslt_PARM_1
   0015 8Dr08r00      [ 4]   87 	sta	___fslt_fl1_65536_21
                             88 ;	../_fslt.c: 113: fl2.f = a2;
   0018 ADr07r00      [ 4]   89 	lda	(___fslt_PARM_2 + 3)
   001B 8Dr0Fr00      [ 4]   90 	sta	(___fslt_fl2_65536_21 + 3)
   001E ADr06r00      [ 4]   91 	lda	(___fslt_PARM_2 + 2)
   0021 8Dr0Er00      [ 4]   92 	sta	(___fslt_fl2_65536_21 + 2)
   0024 ADr05r00      [ 4]   93 	lda	(___fslt_PARM_2 + 1)
   0027 8Dr0Dr00      [ 4]   94 	sta	(___fslt_fl2_65536_21 + 1)
   002A ADr04r00      [ 4]   95 	lda	___fslt_PARM_2
   002D 8Dr0Cr00      [ 4]   96 	sta	___fslt_fl2_65536_21
                             97 ;	../_fslt.c: 115: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
   0030 ADr0Br00      [ 4]   98 	lda	(___fslt_fl1_65536_21 + 3)
   0033 85*03         [ 3]   99 	sta	*(___fslt_sloc0_1_0 + 3)
   0035 ADr0Ar00      [ 4]  100 	lda	(___fslt_fl1_65536_21 + 2)
   0038 85*02         [ 3]  101 	sta	*(___fslt_sloc0_1_0 + 2)
   003A ADr09r00      [ 4]  102 	lda	(___fslt_fl1_65536_21 + 1)
   003D 85*01         [ 3]  103 	sta	*(___fslt_sloc0_1_0 + 1)
   003F ADr08r00      [ 4]  104 	lda	___fslt_fl1_65536_21
   0042 85*00         [ 3]  105 	sta	*___fslt_sloc0_1_0
   0044 ADr0Fr00      [ 4]  106 	lda	(___fslt_fl2_65536_21 + 3)
   0047 85*07         [ 3]  107 	sta	*(___fslt_sloc1_1_0 + 3)
   0049 ADr0Er00      [ 4]  108 	lda	(___fslt_fl2_65536_21 + 2)
   004C 85*06         [ 3]  109 	sta	*(___fslt_sloc1_1_0 + 2)
   004E ADr0Dr00      [ 4]  110 	lda	(___fslt_fl2_65536_21 + 1)
   0051 85*05         [ 3]  111 	sta	*(___fslt_sloc1_1_0 + 1)
   0053 ADr0Cr00      [ 4]  112 	lda	___fslt_fl2_65536_21
   0056 85*04         [ 3]  113 	sta	*___fslt_sloc1_1_0
   0058 A5*00         [ 3]  114 	lda	*___fslt_sloc0_1_0
   005A 05*04         [ 3]  115 	ora	*___fslt_sloc1_1_0
   005C 85*04         [ 3]  116 	sta	*___fslt_sloc1_1_0
   005E A5*01         [ 3]  117 	lda	*(___fslt_sloc0_1_0 + 1)
   0060 05*05         [ 3]  118 	ora	*(___fslt_sloc1_1_0 + 1)
   0062 85*05         [ 3]  119 	sta	*(___fslt_sloc1_1_0 + 1)
   0064 A5*02         [ 3]  120 	lda	*(___fslt_sloc0_1_0 + 2)
   0066 05*06         [ 3]  121 	ora	*(___fslt_sloc1_1_0 + 2)
   0068 85*06         [ 3]  122 	sta	*(___fslt_sloc1_1_0 + 2)
   006A A5*03         [ 3]  123 	lda	*(___fslt_sloc0_1_0 + 3)
   006C 05*07         [ 3]  124 	ora	*(___fslt_sloc1_1_0 + 3)
   006E 85*07         [ 3]  125 	sta	*(___fslt_sloc1_1_0 + 3)
   0070 A5*04         [ 3]  126 	lda	*___fslt_sloc1_1_0
   0072 D0 0C         [ 4]  127 	bne	00132$
   0074 A5*05         [ 3]  128 	lda	*(___fslt_sloc1_1_0 + 1)
   0076 D0 08         [ 4]  129 	bne	00132$
   0078 A5*06         [ 3]  130 	lda	*(___fslt_sloc1_1_0 + 2)
   007A D0 04         [ 4]  131 	bne	00132$
   007C A9 7F         [ 2]  132 	lda	#0x7f
   007E 25*07         [ 3]  133 	and	*(___fslt_sloc1_1_0 + 3)
   0080                     134 00132$:
   0080 D0 03         [ 4]  135 	bne	00102$
                            136 ;	../_fslt.c: 116: return (0);
   0082 A9 00         [ 2]  137 	lda	#0x00
   0084 60            [ 6]  138 	rts
   0085                     139 00102$:
                            140 ;	../_fslt.c: 118: if (fl1.l<0 && fl2.l<0) {
   0085 ADr0Br00      [ 4]  141 	lda	(___fslt_fl1_65536_21 + 3)
   0088 85*07         [ 3]  142 	sta	*(___fslt_sloc1_1_0 + 3)
   008A ADr0Ar00      [ 4]  143 	lda	(___fslt_fl1_65536_21 + 2)
   008D 85*06         [ 3]  144 	sta	*(___fslt_sloc1_1_0 + 2)
   008F ADr09r00      [ 4]  145 	lda	(___fslt_fl1_65536_21 + 1)
   0092 85*05         [ 3]  146 	sta	*(___fslt_sloc1_1_0 + 1)
   0094 ADr08r00      [ 4]  147 	lda	___fslt_fl1_65536_21
   0097 85*04         [ 3]  148 	sta	*___fslt_sloc1_1_0
   0099 A5*07         [ 3]  149 	lda	*(___fslt_sloc1_1_0 + 3)
   009B 38            [ 2]  150 	sec
   009C E9 00         [ 2]  151 	sbc	#0x00
   009E 50 04         [ 4]  152 	bvc	00135$
   00A0 10 04         [ 4]  153 	bpl	00134$
   00A2 30 6A         [ 4]  154 	bmi	00106$
   00A4                     155 00135$:
   00A4 10 68         [ 4]  156 	bpl	00106$
   00A6                     157 00134$:
   00A6 ADr0Fr00      [ 4]  158 	lda	(___fslt_fl2_65536_21 + 3)
   00A9 85*07         [ 3]  159 	sta	*(___fslt_sloc1_1_0 + 3)
   00AB ADr0Er00      [ 4]  160 	lda	(___fslt_fl2_65536_21 + 2)
   00AE 85*06         [ 3]  161 	sta	*(___fslt_sloc1_1_0 + 2)
   00B0 ADr0Dr00      [ 4]  162 	lda	(___fslt_fl2_65536_21 + 1)
   00B3 85*05         [ 3]  163 	sta	*(___fslt_sloc1_1_0 + 1)
   00B5 ADr0Cr00      [ 4]  164 	lda	___fslt_fl2_65536_21
   00B8 85*04         [ 3]  165 	sta	*___fslt_sloc1_1_0
   00BA A5*07         [ 3]  166 	lda	*(___fslt_sloc1_1_0 + 3)
   00BC 38            [ 2]  167 	sec
   00BD E9 00         [ 2]  168 	sbc	#0x00
   00BF 50 04         [ 4]  169 	bvc	00138$
   00C1 10 04         [ 4]  170 	bpl	00137$
   00C3 30 49         [ 4]  171 	bmi	00106$
   00C5                     172 00138$:
   00C5 10 47         [ 4]  173 	bpl	00106$
   00C7                     174 00137$:
                            175 ;	../_fslt.c: 119: if (fl2.l < fl1.l)
   00C7 ADr0Fr00      [ 4]  176 	lda	(___fslt_fl2_65536_21 + 3)
   00CA 85*07         [ 3]  177 	sta	*(___fslt_sloc1_1_0 + 3)
   00CC ADr0Er00      [ 4]  178 	lda	(___fslt_fl2_65536_21 + 2)
   00CF 85*06         [ 3]  179 	sta	*(___fslt_sloc1_1_0 + 2)
   00D1 ADr0Dr00      [ 4]  180 	lda	(___fslt_fl2_65536_21 + 1)
   00D4 85*05         [ 3]  181 	sta	*(___fslt_sloc1_1_0 + 1)
   00D6 ADr0Cr00      [ 4]  182 	lda	___fslt_fl2_65536_21
   00D9 85*04         [ 3]  183 	sta	*___fslt_sloc1_1_0
   00DB ADr0Br00      [ 4]  184 	lda	(___fslt_fl1_65536_21 + 3)
   00DE 85*03         [ 3]  185 	sta	*(___fslt_sloc0_1_0 + 3)
   00E0 ADr0Ar00      [ 4]  186 	lda	(___fslt_fl1_65536_21 + 2)
   00E3 85*02         [ 3]  187 	sta	*(___fslt_sloc0_1_0 + 2)
   00E5 ADr09r00      [ 4]  188 	lda	(___fslt_fl1_65536_21 + 1)
   00E8 85*01         [ 3]  189 	sta	*(___fslt_sloc0_1_0 + 1)
   00EA ADr08r00      [ 4]  190 	lda	___fslt_fl1_65536_21
   00ED 85*00         [ 3]  191 	sta	*___fslt_sloc0_1_0
   00EF A5*04         [ 3]  192 	lda	*___fslt_sloc1_1_0
   00F1 38            [ 2]  193 	sec
   00F2 E5*00         [ 3]  194 	sbc	*___fslt_sloc0_1_0
   00F4 A5*05         [ 3]  195 	lda	*(___fslt_sloc1_1_0 + 1)
   00F6 E5*01         [ 3]  196 	sbc	*(___fslt_sloc0_1_0 + 1)
   00F8 A5*06         [ 3]  197 	lda	*(___fslt_sloc1_1_0 + 2)
   00FA E5*02         [ 3]  198 	sbc	*(___fslt_sloc0_1_0 + 2)
   00FC A5*07         [ 3]  199 	lda	*(___fslt_sloc1_1_0 + 3)
   00FE E5*03         [ 3]  200 	sbc	*(___fslt_sloc0_1_0 + 3)
   0100 50 04         [ 4]  201 	bvc	00141$
   0102 10 04         [ 4]  202 	bpl	00140$
   0104 30 05         [ 4]  203 	bmi	00104$
   0106                     204 00141$:
   0106 10 03         [ 4]  205 	bpl	00104$
   0108                     206 00140$:
                            207 ;	../_fslt.c: 120: return (1);
   0108 A9 01         [ 2]  208 	lda	#0x01
   010A 60            [ 6]  209 	rts
   010B                     210 00104$:
                            211 ;	../_fslt.c: 121: return (0);
   010B A9 00         [ 2]  212 	lda	#0x00
   010D 60            [ 6]  213 	rts
   010E                     214 00106$:
                            215 ;	../_fslt.c: 124: if (fl1.l < fl2.l)
   010E ADr0Br00      [ 4]  216 	lda	(___fslt_fl1_65536_21 + 3)
   0111 85*07         [ 3]  217 	sta	*(___fslt_sloc1_1_0 + 3)
   0113 ADr0Ar00      [ 4]  218 	lda	(___fslt_fl1_65536_21 + 2)
   0116 85*06         [ 3]  219 	sta	*(___fslt_sloc1_1_0 + 2)
   0118 ADr09r00      [ 4]  220 	lda	(___fslt_fl1_65536_21 + 1)
   011B 85*05         [ 3]  221 	sta	*(___fslt_sloc1_1_0 + 1)
   011D ADr08r00      [ 4]  222 	lda	___fslt_fl1_65536_21
   0120 85*04         [ 3]  223 	sta	*___fslt_sloc1_1_0
   0122 ADr0Fr00      [ 4]  224 	lda	(___fslt_fl2_65536_21 + 3)
   0125 85*03         [ 3]  225 	sta	*(___fslt_sloc0_1_0 + 3)
   0127 ADr0Er00      [ 4]  226 	lda	(___fslt_fl2_65536_21 + 2)
   012A 85*02         [ 3]  227 	sta	*(___fslt_sloc0_1_0 + 2)
   012C ADr0Dr00      [ 4]  228 	lda	(___fslt_fl2_65536_21 + 1)
   012F 85*01         [ 3]  229 	sta	*(___fslt_sloc0_1_0 + 1)
   0131 ADr0Cr00      [ 4]  230 	lda	___fslt_fl2_65536_21
   0134 85*00         [ 3]  231 	sta	*___fslt_sloc0_1_0
   0136 A5*04         [ 3]  232 	lda	*___fslt_sloc1_1_0
   0138 38            [ 2]  233 	sec
   0139 E5*00         [ 3]  234 	sbc	*___fslt_sloc0_1_0
   013B A5*05         [ 3]  235 	lda	*(___fslt_sloc1_1_0 + 1)
   013D E5*01         [ 3]  236 	sbc	*(___fslt_sloc0_1_0 + 1)
   013F A5*06         [ 3]  237 	lda	*(___fslt_sloc1_1_0 + 2)
   0141 E5*02         [ 3]  238 	sbc	*(___fslt_sloc0_1_0 + 2)
   0143 A5*07         [ 3]  239 	lda	*(___fslt_sloc1_1_0 + 3)
   0145 E5*03         [ 3]  240 	sbc	*(___fslt_sloc0_1_0 + 3)
   0147 50 04         [ 4]  241 	bvc	00144$
   0149 10 04         [ 4]  242 	bpl	00143$
   014B 30 05         [ 4]  243 	bmi	00109$
   014D                     244 00144$:
   014D 10 03         [ 4]  245 	bpl	00109$
   014F                     246 00143$:
                            247 ;	../_fslt.c: 125: return (1);
   014F A9 01         [ 2]  248 	lda	#0x01
   0151 60            [ 6]  249 	rts
   0152                     250 00109$:
                            251 ;	../_fslt.c: 126: return (0);
   0152 A9 00         [ 2]  252 	lda	#0x00
                            253 ;	../_fslt.c: 127: }
   0154 60            [ 6]  254 	rts
                            255 	.area CODE
                            256 	.area RODATA
                            257 	.area XINIT
                            258 	.area CABS    (ABS)
