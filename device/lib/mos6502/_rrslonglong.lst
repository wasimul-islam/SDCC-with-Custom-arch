                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _rrslonglong
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __rrslonglong_PARM_2
                             12 	.globl __rrslonglong_PARM_1
                             13 	.globl __rrslonglong
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 	.area	OSEG    (PAG, OVR)
   0000                      22 __rrslonglong_sloc0_1_0:
   0000                      23 	.ds 1
   0001                      24 __rrslonglong_sloc1_1_0:
   0001                      25 	.ds 2
   0003                      26 __rrslonglong_sloc2_1_0:
   0003                      27 	.ds 2
   0005                      28 __rrslonglong_sloc3_1_0:
   0005                      29 	.ds 2
                             30 ;--------------------------------------------------------
                             31 ; uninitialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area BSS
   0000                      34 __rrslonglong_PARM_1:
   0000                      35 	.ds 8
   0008                      36 __rrslonglong_PARM_2:
   0008                      37 	.ds 1
   0009                      38 __rrslonglong_t1_65536_2:
   0009                      39 	.ds 1
   000A                      40 __rrslonglong_t2_65536_2:
   000A                      41 	.ds 1
   000B                      42 __rrslonglong_sign_65536_2:
   000B                      43 	.ds 1
   000C                      44 __rrslonglong_zb_65536_2:
   000C                      45 	.ds 1
                             46 ;--------------------------------------------------------
                             47 ; absolute external ram data
                             48 ;--------------------------------------------------------
                             49 	.area DABS    (ABS)
                             50 ;--------------------------------------------------------
                             51 ; initialized external ram data
                             52 ;--------------------------------------------------------
                             53 	.area DATA
                             54 ;--------------------------------------------------------
                             55 ; global & static initialisations
                             56 ;--------------------------------------------------------
                             57 	.area _CODE
                             58 	.area GSINIT
                             59 	.area GSFINAL
                             60 	.area GSINIT
                             61 ;--------------------------------------------------------
                             62 ; Home
                             63 ;--------------------------------------------------------
                             64 	.area _CODE
                             65 	.area _CODE
                             66 ;--------------------------------------------------------
                             67 ; code
                             68 ;--------------------------------------------------------
                             69 	.area CODE
                             70 ;------------------------------------------------------------
                             71 ;Allocation info for local variables in function '_rrslonglong'
                             72 ;------------------------------------------------------------
                             73 ;l                         Allocated with name '__rrslonglong_PARM_1'
                             74 ;s                         Allocated with name '__rrslonglong_PARM_2'
                             75 ;b                         Allocated to registers 
                             76 ;shift                     Allocated to registers 
                             77 ;t1                        Allocated with name '__rrslonglong_t1_65536_2'
                             78 ;t2                        Allocated with name '__rrslonglong_t2_65536_2'
                             79 ;sign                      Allocated with name '__rrslonglong_sign_65536_2'
                             80 ;zb                        Allocated with name '__rrslonglong_zb_65536_2'
                             81 ;i                         Allocated to registers 
                             82 ;sloc0                     Allocated with name '__rrslonglong_sloc0_1_0'
                             83 ;sloc1                     Allocated with name '__rrslonglong_sloc1_1_0'
                             84 ;sloc2                     Allocated with name '__rrslonglong_sloc2_1_0'
                             85 ;sloc3                     Allocated with name '__rrslonglong_sloc3_1_0'
                             86 ;------------------------------------------------------------
                             87 ;	_rrslonglong.c: 8: long long _rrslonglong(long long l, char s)
                             88 ;	-----------------------------------------
                             89 ;	 function _rrslonglong
                             90 ;	-----------------------------------------
                             91 ;	Register assignment is optimal.
                             92 ;	Stack space usage: 0 bytes.
   0000                      93 __rrslonglong:
                             94 ;	_rrslonglong.c: 11: uint8_t *const b = (uint8_t *)(&l);
                             95 ;	_rrslonglong.c: 15: sign=b[7]&0x80;
   0000 ADr07r00      [ 4]   96 	lda	(__rrslonglong_PARM_1 + 0x0007)
   0003 29 80         [ 2]   97 	and	#0x80
   0005 8Dr0Br00      [ 4]   98 	sta	__rrslonglong_sign_65536_2
                             99 ;	_rrslonglong.c: 17: zb=s>>3;
   0008 ADr08r00      [ 4]  100 	lda	__rrslonglong_PARM_2
   000B C9 80         [ 2]  101 	cmp	#0x80
   000D 6A            [ 2]  102 	ror	a
   000E C9 80         [ 2]  103 	cmp	#0x80
   0010 6A            [ 2]  104 	ror	a
   0011 C9 80         [ 2]  105 	cmp	#0x80
   0013 6A            [ 2]  106 	ror	a
                            107 ;	_rrslonglong.c: 18: if(zb) {
   0014 8Dr0Cr00      [ 4]  108 	sta	__rrslonglong_zb_65536_2
   0017 D0 03         [ 4]  109 	bne	00171$
   0019 4CrD7r00      [ 3]  110 	jmp	00104$
   001C                     111 00171$:
                            112 ;	_rrslonglong.c: 19: i=0;
   001C A2 00         [ 2]  113 	ldx	#0x00
   001E 86*00         [ 3]  114 	stx	*__rrslonglong_sloc0_1_0
   0020                     115 00110$:
                            116 ;	_rrslonglong.c: 20: for(;i<(8-zb);i++) {
   0020 ADr0Cr00      [ 4]  117 	lda	__rrslonglong_zb_65536_2
   0023 85*01         [ 3]  118 	sta	*__rrslonglong_sloc1_1_0
   0025 0A            [ 2]  119 	asl	a
   0026 A9 00         [ 2]  120 	lda	#0x00
   0028 69 FF         [ 2]  121 	adc	#0xff
   002A 49 FF         [ 2]  122 	eor	#0xff
   002C 85*02         [ 3]  123 	sta	*(__rrslonglong_sloc1_1_0 + 1)
   002E A9 08         [ 2]  124 	lda	#0x08
   0030 38            [ 2]  125 	sec
   0031 E5*01         [ 3]  126 	sbc	*__rrslonglong_sloc1_1_0
   0033 85*03         [ 3]  127 	sta	*__rrslonglong_sloc2_1_0
   0035 A9 00         [ 2]  128 	lda	#0x00
   0037 E5*02         [ 3]  129 	sbc	*(__rrslonglong_sloc1_1_0 + 1)
   0039 85*04         [ 3]  130 	sta	*(__rrslonglong_sloc2_1_0 + 1)
   003B A5*00         [ 3]  131 	lda	*__rrslonglong_sloc0_1_0
   003D 48            [ 3]  132 	pha
   003E 0A            [ 2]  133 	asl	a
   003F A9 00         [ 2]  134 	lda	#0x00
   0041 69 FF         [ 2]  135 	adc	#0xff
   0043 49 FF         [ 2]  136 	eor	#0xff
   0045 AA            [ 2]  137 	tax
   0046 68            [ 4]  138 	pla
   0047 85*00         [ 3]  139 	sta	*(__TEMP+0)
   0049 38            [ 2]  140 	sec
   004A E5*03         [ 3]  141 	sbc	*__rrslonglong_sloc2_1_0
   004C 8A            [ 2]  142 	txa
   004D E5*04         [ 3]  143 	sbc	*(__rrslonglong_sloc2_1_0 + 1)
   004F 08            [ 3]  144 	php
   0050 A5*00         [ 3]  145 	lda	*(__TEMP+0)
   0052 28            [ 4]  146 	plp
   0053 50 04         [ 4]  147 	bvc	00173$
   0055 10 04         [ 4]  148 	bpl	00172$
   0057 30 35         [ 4]  149 	bmi	00129$
   0059                     150 00173$:
   0059 10 33         [ 4]  151 	bpl	00129$
   005B                     152 00172$:
                            153 ;	_rrslonglong.c: 21: b[i]=b[zb+i];
   005B 85*03         [ 3]  154 	sta	*__rrslonglong_sloc2_1_0
   005D 86*04         [ 3]  155 	stx	*(__rrslonglong_sloc2_1_0 + 1)
   005F 18            [ 2]  156 	clc
   0060 65*01         [ 3]  157 	adc	*__rrslonglong_sloc1_1_0
   0062 48            [ 3]  158 	pha
   0063 8A            [ 2]  159 	txa
   0064 65*02         [ 3]  160 	adc	*(__rrslonglong_sloc1_1_0 + 1)
   0066 AA            [ 2]  161 	tax
   0067 68            [ 4]  162 	pla
   0068 18            [ 2]  163 	clc
   0069 69r00         [ 2]  164 	adc	#<(__rrslonglong_PARM_1+0)
   006B 85*00         [ 3]  165 	sta	*(__DPTR+0)
   006D 8A            [ 2]  166 	txa
   006E 69s00         [ 2]  167 	adc	#>(__rrslonglong_PARM_1+0)
   0070 85*01         [ 3]  168 	sta	*(__DPTR+1)
   0072 A0 00         [ 2]  169 	ldy	#0x00
   0074 B1*00         [ 6]  170 	lda	[__DPTR],y
   0076 85*00         [ 3]  171 	sta	*(__TEMP+0)
   0078 18            [ 2]  172 	clc
   0079 A5*03         [ 3]  173 	lda	*__rrslonglong_sloc2_1_0
   007B 69r00         [ 2]  174 	adc	#<(__rrslonglong_PARM_1+0)
   007D 85*00         [ 3]  175 	sta	*(__DPTR+0)
   007F A5*04         [ 3]  176 	lda	*(__rrslonglong_sloc2_1_0 + 1)
   0081 69s00         [ 2]  177 	adc	#>(__rrslonglong_PARM_1+0)
   0083 85*01         [ 3]  178 	sta	*(__DPTR+1)
   0085 A5*00         [ 3]  179 	lda	*(__TEMP+0)
   0087 91*00         [ 6]  180 	sta	[__DPTR],y
                            181 ;	_rrslonglong.c: 20: for(;i<(8-zb);i++) {
   0089 E6*00         [ 5]  182 	inc	*__rrslonglong_sloc0_1_0
   008B 4Cr20r00      [ 3]  183 	jmp	00110$
   008E                     184 00129$:
   008E A4*00         [ 3]  185 	ldy	*__rrslonglong_sloc0_1_0
   0090                     186 00113$:
                            187 ;	_rrslonglong.c: 23: for(;i<8;i++)
   0090 98            [ 2]  188 	tya
   0091 38            [ 2]  189 	sec
   0092 E9 08         [ 2]  190 	sbc	#0x08
   0094 50 04         [ 4]  191 	bvc	00176$
   0096 10 04         [ 4]  192 	bpl	00175$
   0098 30 3D         [ 4]  193 	bmi	00104$
   009A                     194 00176$:
   009A 10 3B         [ 4]  195 	bpl	00104$
   009C                     196 00175$:
                            197 ;	_rrslonglong.c: 24: b[i]=sign?0xff:0x00;
   009C 98            [ 2]  198 	tya
   009D 48            [ 3]  199 	pha
   009E 0A            [ 2]  200 	asl	a
   009F A9 00         [ 2]  201 	lda	#0x00
   00A1 69 FF         [ 2]  202 	adc	#0xff
   00A3 49 FF         [ 2]  203 	eor	#0xff
   00A5 AA            [ 2]  204 	tax
   00A6 68            [ 4]  205 	pla
   00A7 85*03         [ 3]  206 	sta	*__rrslonglong_sloc2_1_0
   00A9 86*04         [ 3]  207 	stx	*(__rrslonglong_sloc2_1_0 + 1)
   00AB ADr0Br00      [ 4]  208 	lda	__rrslonglong_sign_65536_2
   00AE F0 07         [ 4]  209 	beq	00120$
   00B0 A9 FF         [ 2]  210 	lda	#0xff
   00B2 A2 00         [ 2]  211 	ldx	#0x00
   00B4 4CrBAr00      [ 3]  212 	jmp	00121$
   00B7                     213 00120$:
   00B7 A9 00         [ 2]  214 	lda	#0x00
   00B9 AA            [ 2]  215 	tax
   00BA                     216 00121$:
   00BA 85*00         [ 3]  217 	sta	*(__TEMP+0)
   00BC 84*01         [ 3]  218 	sty	*(__TEMP+1)
   00BE 18            [ 2]  219 	clc
   00BF A5*03         [ 3]  220 	lda	*__rrslonglong_sloc2_1_0
   00C1 69r00         [ 2]  221 	adc	#<(__rrslonglong_PARM_1+0)
   00C3 85*00         [ 3]  222 	sta	*(__DPTR+0)
   00C5 A5*04         [ 3]  223 	lda	*(__rrslonglong_sloc2_1_0 + 1)
   00C7 69s00         [ 2]  224 	adc	#>(__rrslonglong_PARM_1+0)
   00C9 85*01         [ 3]  225 	sta	*(__DPTR+1)
   00CB A5*00         [ 3]  226 	lda	*(__TEMP+0)
   00CD A0 00         [ 2]  227 	ldy	#0x00
   00CF 91*00         [ 6]  228 	sta	[__DPTR],y
   00D1 A4*01         [ 3]  229 	ldy	*(__TEMP+1)
                            230 ;	_rrslonglong.c: 23: for(;i<8;i++)
   00D3 C8            [ 2]  231 	iny
   00D4 4Cr90r00      [ 3]  232 	jmp	00113$
   00D7                     233 00104$:
                            234 ;	_rrslonglong.c: 27: shift=s&0x7;
   00D7 ADr08r00      [ 4]  235 	lda	__rrslonglong_PARM_2
   00DA 29 07         [ 2]  236 	and	#0x07
   00DC 85*03         [ 3]  237 	sta	*__rrslonglong_sloc2_1_0
                            238 ;	_rrslonglong.c: 28: while(shift--) {
   00DE A9 07         [ 2]  239 	lda	#0x07
   00E0 38            [ 2]  240 	sec
   00E1 EDr0Cr00      [ 4]  241 	sbc	__rrslonglong_zb_65536_2
   00E4 85*01         [ 3]  242 	sta	*__rrslonglong_sloc1_1_0
   00E6                     243 00106$:
   00E6 A5*03         [ 3]  244 	lda	*__rrslonglong_sloc2_1_0
   00E8 C6*03         [ 5]  245 	dec	*__rrslonglong_sloc2_1_0
   00EA C9 00         [ 2]  246 	cmp	#0x00
   00EC F0 6B         [ 4]  247 	beq	00108$
                            248 ;	_rrslonglong.c: 29: t2=sign;
   00EE ADr0Br00      [ 4]  249 	lda	__rrslonglong_sign_65536_2
   00F1 8Dr0Ar00      [ 4]  250 	sta	__rrslonglong_t2_65536_2
                            251 ;	_rrslonglong.c: 30: for(i=7-zb;i>=0;i--) {
   00F4 A5*01         [ 3]  252 	lda	*__rrslonglong_sloc1_1_0
   00F6 85*00         [ 3]  253 	sta	*__rrslonglong_sloc0_1_0
   00F8                     254 00116$:
   00F8 A5*00         [ 3]  255 	lda	*__rrslonglong_sloc0_1_0
   00FA 38            [ 2]  256 	sec
   00FB E9 00         [ 2]  257 	sbc	#0x00
   00FD 70 04         [ 4]  258 	bvs	00181$
   00FF 10 04         [ 4]  259 	bpl	00180$
   0101 30 E3         [ 4]  260 	bmi	00106$
   0103                     261 00181$:
   0103 10 E1         [ 4]  262 	bpl	00106$
   0105                     263 00180$:
                            264 ;	_rrslonglong.c: 31: t1=b[i]&1;
   0105 A5*00         [ 3]  265 	lda	*__rrslonglong_sloc0_1_0
   0107 48            [ 3]  266 	pha
   0108 0A            [ 2]  267 	asl	a
   0109 A9 00         [ 2]  268 	lda	#0x00
   010B 69 FF         [ 2]  269 	adc	#0xff
   010D 49 FF         [ 2]  270 	eor	#0xff
   010F AA            [ 2]  271 	tax
   0110 68            [ 4]  272 	pla
   0111 85*05         [ 3]  273 	sta	*__rrslonglong_sloc3_1_0
   0113 86*06         [ 3]  274 	stx	*(__rrslonglong_sloc3_1_0 + 1)
   0115 18            [ 2]  275 	clc
   0116 A5*05         [ 3]  276 	lda	*__rrslonglong_sloc3_1_0
   0118 69r00         [ 2]  277 	adc	#<(__rrslonglong_PARM_1+0)
   011A 85*00         [ 3]  278 	sta	*(__DPTR+0)
   011C A5*06         [ 3]  279 	lda	*(__rrslonglong_sloc3_1_0 + 1)
   011E 69s00         [ 2]  280 	adc	#>(__rrslonglong_PARM_1+0)
   0120 85*01         [ 3]  281 	sta	*(__DPTR+1)
   0122 A0 00         [ 2]  282 	ldy	#0x00
   0124 B1*00         [ 6]  283 	lda	[__DPTR],y
   0126 AA            [ 2]  284 	tax
   0127 29 01         [ 2]  285 	and	#0x01
   0129 8Dr09r00      [ 4]  286 	sta	__rrslonglong_t1_65536_2
                            287 ;	_rrslonglong.c: 32: b[i]=(b[i]>>1)|t2;
   012C 8A            [ 2]  288 	txa
   012D 4A            [ 2]  289 	lsr	a
   012E 0Dr0Ar00      [ 4]  290 	ora	__rrslonglong_t2_65536_2
   0131 AA            [ 2]  291 	tax
   0132 18            [ 2]  292 	clc
   0133 A5*05         [ 3]  293 	lda	*__rrslonglong_sloc3_1_0
   0135 69r00         [ 2]  294 	adc	#<(__rrslonglong_PARM_1+0)
   0137 85*00         [ 3]  295 	sta	*(__DPTR+0)
   0139 A5*06         [ 3]  296 	lda	*(__rrslonglong_sloc3_1_0 + 1)
   013B 69s00         [ 2]  297 	adc	#>(__rrslonglong_PARM_1+0)
   013D 85*01         [ 3]  298 	sta	*(__DPTR+1)
   013F 8A            [ 2]  299 	txa
   0140 91*00         [ 6]  300 	sta	[__DPTR],y
                            301 ;	_rrslonglong.c: 33: t2=t1?0x80:0;
   0142 ADr09r00      [ 4]  302 	lda	__rrslonglong_t1_65536_2
   0145 F0 07         [ 4]  303 	beq	00122$
   0147 A9 80         [ 2]  304 	lda	#0x80
   0149 A2 00         [ 2]  305 	ldx	#0x00
   014B 4Cr51r01      [ 3]  306 	jmp	00123$
   014E                     307 00122$:
   014E A9 00         [ 2]  308 	lda	#0x00
   0150 AA            [ 2]  309 	tax
   0151                     310 00123$:
   0151 8Dr0Ar00      [ 4]  311 	sta	__rrslonglong_t2_65536_2
                            312 ;	_rrslonglong.c: 30: for(i=7-zb;i>=0;i--) {
   0154 C6*00         [ 5]  313 	dec	*__rrslonglong_sloc0_1_0
   0156 4CrF8r00      [ 3]  314 	jmp	00116$
   0159                     315 00108$:
                            316 ;	_rrslonglong.c: 37: return(l);
   0159 ADr07r00      [ 4]  317 	lda	(__rrslonglong_PARM_1 + 7)
   015C 85*00         [ 3]  318 	sta	*___SDCC_m6502_ret7
   015E ADr06r00      [ 4]  319 	lda	(__rrslonglong_PARM_1 + 6)
   0161 85*00         [ 3]  320 	sta	*___SDCC_m6502_ret6
   0163 ADr05r00      [ 4]  321 	lda	(__rrslonglong_PARM_1 + 5)
   0166 85*00         [ 3]  322 	sta	*___SDCC_m6502_ret5
   0168 ADr04r00      [ 4]  323 	lda	(__rrslonglong_PARM_1 + 4)
   016B 85*00         [ 3]  324 	sta	*___SDCC_m6502_ret4
   016D ADr03r00      [ 4]  325 	lda	(__rrslonglong_PARM_1 + 3)
   0170 85*00         [ 3]  326 	sta	*___SDCC_m6502_ret3
   0172 ADr02r00      [ 4]  327 	lda	(__rrslonglong_PARM_1 + 2)
   0175 85*00         [ 3]  328 	sta	*___SDCC_m6502_ret2
   0177 AEr01r00      [ 4]  329 	ldx	(__rrslonglong_PARM_1 + 1)
   017A ADr00r00      [ 4]  330 	lda	__rrslonglong_PARM_1
                            331 ;	_rrslonglong.c: 38: }
   017D 60            [ 6]  332 	rts
                            333 	.area CODE
                            334 	.area RODATA
                            335 	.area XINIT
                            336 	.area CABS    (ABS)
