                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _memcmp
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _memcmp_PARM_3
                             12 	.globl _memcmp_PARM_2
                             13 	.globl _memcmp
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 	.area	OSEG    (PAG, OVR)
   0000                      22 _memcmp_sloc0_1_0:
   0000                      23 	.ds 2
   0002                      24 _memcmp_sloc1_1_0:
   0002                      25 	.ds 2
   0004                      26 _memcmp_sloc2_1_0:
   0004                      27 	.ds 1
   0005                      28 _memcmp_sloc3_1_0:
   0005                      29 	.ds 2
                             30 ;--------------------------------------------------------
                             31 ; uninitialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area BSS
   0000                      34 _memcmp_PARM_2:
   0000                      35 	.ds 2
   0002                      36 _memcmp_PARM_3:
   0002                      37 	.ds 2
   0004                      38 _memcmp_buf1_65536_26:
   0004                      39 	.ds 2
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area DABS    (ABS)
                             44 ;--------------------------------------------------------
                             45 ; initialized external ram data
                             46 ;--------------------------------------------------------
                             47 	.area DATA
                             48 ;--------------------------------------------------------
                             49 ; global & static initialisations
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 	.area GSINIT
                             53 	.area GSFINAL
                             54 	.area GSINIT
                             55 ;--------------------------------------------------------
                             56 ; Home
                             57 ;--------------------------------------------------------
                             58 	.area _CODE
                             59 	.area _CODE
                             60 ;--------------------------------------------------------
                             61 ; code
                             62 ;--------------------------------------------------------
                             63 	.area CODE
                             64 ;------------------------------------------------------------
                             65 ;Allocation info for local variables in function 'memcmp'
                             66 ;------------------------------------------------------------
                             67 ;buf2                      Allocated with name '_memcmp_PARM_2'
                             68 ;count                     Allocated with name '_memcmp_PARM_3'
                             69 ;buf1                      Allocated with name '_memcmp_buf1_65536_26'
                             70 ;sloc0                     Allocated with name '_memcmp_sloc0_1_0'
                             71 ;sloc1                     Allocated with name '_memcmp_sloc1_1_0'
                             72 ;sloc2                     Allocated with name '_memcmp_sloc2_1_0'
                             73 ;sloc3                     Allocated with name '_memcmp_sloc3_1_0'
                             74 ;------------------------------------------------------------
                             75 ;	../_memcmp.c: 31: int memcmp (const void * buf1, const void * buf2, size_t count)
                             76 ;	-----------------------------------------
                             77 ;	 function memcmp
                             78 ;	-----------------------------------------
                             79 ;	Register assignment is optimal.
                             80 ;	Stack space usage: 0 bytes.
   0000                      81 _memcmp:
   0000 8Dr04r00      [ 4]   82 	sta	_memcmp_buf1_65536_26
   0003 8Er05r00      [ 4]   83 	stx	(_memcmp_buf1_65536_26 + 1)
                             84 ;	../_memcmp.c: 33: if (!count)
   0006 ADr03r00      [ 4]   85 	lda	(_memcmp_PARM_3 + 1)
   0009 0Dr02r00      [ 4]   86 	ora	_memcmp_PARM_3
   000C D0 04         [ 4]   87 	bne	00112$
                             88 ;	../_memcmp.c: 34: return(0);
   000E A9 00         [ 2]   89 	lda	#0x00
   0010 AA            [ 2]   90 	tax
   0011 60            [ 6]   91 	rts
                             92 ;	../_memcmp.c: 36: while ( --count && *((char *)buf1) == *((char *)buf2) ) {
   0012                      93 00112$:
   0012 ADr02r00      [ 4]   94 	lda	_memcmp_PARM_3
   0015 85*00         [ 3]   95 	sta	*_memcmp_sloc0_1_0
   0017 ADr03r00      [ 4]   96 	lda	(_memcmp_PARM_3 + 1)
   001A 85*01         [ 3]   97 	sta	*(_memcmp_sloc0_1_0 + 1)
   001C                      98 00104$:
   001C 38            [ 2]   99 	sec
   001D A5*00         [ 3]  100 	lda	*_memcmp_sloc0_1_0
   001F E9 01         [ 2]  101 	sbc	#0x01
   0021 85*00         [ 3]  102 	sta	*_memcmp_sloc0_1_0
   0023 B0 02         [ 4]  103 	bcs	00127$
   0025 C6*01         [ 5]  104 	dec	*(_memcmp_sloc0_1_0 + 1)
   0027                     105 00127$:
   0027 A5*01         [ 3]  106 	lda	*(_memcmp_sloc0_1_0 + 1)
   0029 05*00         [ 3]  107 	ora	*_memcmp_sloc0_1_0
   002B F0 43         [ 4]  108 	beq	00106$
   002D ADr04r00      [ 4]  109 	lda	_memcmp_buf1_65536_26
   0030 85*02         [ 3]  110 	sta	*_memcmp_sloc1_1_0
   0032 ADr05r00      [ 4]  111 	lda	(_memcmp_buf1_65536_26 + 1)
   0035 85*03         [ 3]  112 	sta	*(_memcmp_sloc1_1_0 + 1)
   0037 A0 00         [ 2]  113 	ldy	#0x00
   0039 B1*02         [ 6]  114 	lda	[*_memcmp_sloc1_1_0],y
   003B 85*04         [ 3]  115 	sta	*_memcmp_sloc2_1_0
   003D ADr00r00      [ 4]  116 	lda	_memcmp_PARM_2
   0040 85*05         [ 3]  117 	sta	*_memcmp_sloc3_1_0
   0042 ADr01r00      [ 4]  118 	lda	(_memcmp_PARM_2 + 1)
   0045 85*06         [ 3]  119 	sta	*(_memcmp_sloc3_1_0 + 1)
   0047 B1*05         [ 6]  120 	lda	[*_memcmp_sloc3_1_0],y
   0049 C5*04         [ 3]  121 	cmp	*_memcmp_sloc2_1_0
   004B D0 23         [ 4]  122 	bne	00106$
                            123 ;	../_memcmp.c: 37: buf1 = (char *)buf1 + 1;
   004D A5*02         [ 3]  124 	lda	*_memcmp_sloc1_1_0
   004F A6*03         [ 3]  125 	ldx	*(_memcmp_sloc1_1_0 + 1)
   0051 18            [ 2]  126 	clc
   0052 69 01         [ 2]  127 	adc	#0x01
   0054 90 01         [ 4]  128 	bcc	00130$
   0056 E8            [ 2]  129 	inx
   0057                     130 00130$:
   0057 8Dr04r00      [ 4]  131 	sta	_memcmp_buf1_65536_26
   005A 8Er05r00      [ 4]  132 	stx	(_memcmp_buf1_65536_26 + 1)
                            133 ;	../_memcmp.c: 38: buf2 = (char *)buf2 + 1;
   005D A5*05         [ 3]  134 	lda	*_memcmp_sloc3_1_0
   005F A6*06         [ 3]  135 	ldx	*(_memcmp_sloc3_1_0 + 1)
   0061 18            [ 2]  136 	clc
   0062 69 01         [ 2]  137 	adc	#0x01
   0064 90 01         [ 4]  138 	bcc	00131$
   0066 E8            [ 2]  139 	inx
   0067                     140 00131$:
   0067 8Dr00r00      [ 4]  141 	sta	_memcmp_PARM_2
   006A 8Er01r00      [ 4]  142 	stx	(_memcmp_PARM_2 + 1)
   006D 4Cr1Cr00      [ 3]  143 	jmp	00104$
   0070                     144 00106$:
                            145 ;	../_memcmp.c: 41: return( *((unsigned char *)buf1) - *((unsigned char *)buf2) );
   0070 ADr04r00      [ 4]  146 	lda	_memcmp_buf1_65536_26
   0073 AEr05r00      [ 4]  147 	ldx	(_memcmp_buf1_65536_26 + 1)
   0076 85*00         [ 3]  148 	sta	*(__DPTR+0)
   0078 86*01         [ 3]  149 	stx	*(__DPTR+1)
   007A A0 00         [ 2]  150 	ldy	#0x00
   007C B1*00         [ 6]  151 	lda	[__DPTR],y
   007E 85*05         [ 3]  152 	sta	*_memcmp_sloc3_1_0
   0080 84*06         [ 3]  153 	sty	*(_memcmp_sloc3_1_0 + 1)
   0082 ADr00r00      [ 4]  154 	lda	_memcmp_PARM_2
   0085 AEr01r00      [ 4]  155 	ldx	(_memcmp_PARM_2 + 1)
   0088 85*00         [ 3]  156 	sta	*(__DPTR+0)
   008A 86*01         [ 3]  157 	stx	*(__DPTR+1)
   008C B1*00         [ 6]  158 	lda	[__DPTR],y
   008E A2 00         [ 2]  159 	ldx	#0x00
   0090 85*00         [ 3]  160 	sta	*(__TEMP+0)
   0092 A5*05         [ 3]  161 	lda	*_memcmp_sloc3_1_0
   0094 38            [ 2]  162 	sec
   0095 E5*00         [ 3]  163 	sbc	*(__TEMP+0)
   0097 48            [ 3]  164 	pha
   0098 A5*06         [ 3]  165 	lda	*(_memcmp_sloc3_1_0 + 1)
   009A 86*00         [ 3]  166 	stx	*(__TEMP+0)
   009C E5*00         [ 3]  167 	sbc	*(__TEMP+0)
   009E AA            [ 2]  168 	tax
   009F 68            [ 4]  169 	pla
                            170 ;	../_memcmp.c: 42: }
   00A0 60            [ 6]  171 	rts
                            172 	.area CODE
                            173 	.area RODATA
                            174 	.area XINIT
                            175 	.area CABS    (ABS)
