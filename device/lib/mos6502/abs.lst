                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module abs
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _abs
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'abs'
                             49 ;------------------------------------------------------------
                             50 ;j                         Allocated to registers 
                             51 ;------------------------------------------------------------
                             52 ;	abs.c: 2: int abs(int j) __naked
                             53 ;	-----------------------------------------
                             54 ;	 function abs
                             55 ;	-----------------------------------------
                             56 ;	Register assignment is optimal.
                             57 ;	Stack space usage: 0 bytes.
   0000                      58 _abs:
                             59 ;	naked function: no prologue.
                             60 ;	abs.c: 5: __asm__("cpx #0x00");
   0000 E0 00         [ 2]   61 	cpx	#0x00
                             62 ;	abs.c: 6: __asm__("bpl skip");
   0002 10 0D         [ 4]   63 	bpl	skip
                             64 ;	abs.c: 7: __asm__("___negax::");
   0004                      65 	___negax::
                             66 ;	abs.c: 8: __asm__("sec");
   0004 38            [ 2]   67 	sec
                             68 ;	abs.c: 9: __asm__("eor #0xff");
   0005 49 FF         [ 2]   69 	eor	#0xff
                             70 ;	abs.c: 10: __asm__("adc #0x00");
   0007 69 00         [ 2]   71 	adc	#0x00
                             72 ;	abs.c: 11: __asm__("pha");
   0009 48            [ 3]   73 	pha
                             74 ;	abs.c: 12: __asm__("txa");
   000A 8A            [ 2]   75 	txa
                             76 ;	abs.c: 13: __asm__("eor #0xff");
   000B 49 FF         [ 2]   77 	eor	#0xff
                             78 ;	abs.c: 14: __asm__("adc #0x00");
   000D 69 00         [ 2]   79 	adc	#0x00
                             80 ;	abs.c: 15: __asm__("tax");
   000F AA            [ 2]   81 	tax
                             82 ;	abs.c: 16: __asm__("pla");
   0010 68            [ 4]   83 	pla
                             84 ;	abs.c: 17: __asm__("skip:");
   0011                      85 	skip:
                             86 ;	abs.c: 18: __asm__("rts");
   0011 60            [ 6]   87 	rts
                             88 ;	abs.c: 20: }
                             89 ;	naked function: no epilogue.
                             90 	.area CODE
                             91 	.area RODATA
                             92 	.area XINIT
                             93 	.area CABS    (ABS)
