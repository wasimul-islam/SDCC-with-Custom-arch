                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module sprintf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __print_format
                             12 	.globl _vsprintf_PARM_3
                             13 	.globl _vsprintf_PARM_2
                             14 	.globl _vsprintf
                             15 	.globl _sprintf
                             16 ;--------------------------------------------------------
                             17 ; ZP ram data
                             18 ;--------------------------------------------------------
                             19 	.area ZP      (PAG)
   0000                      20 _vsprintf_sloc0_1_0:
   0000                      21 	.ds 2
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in ram
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; uninitialized external ram data
                             27 ;--------------------------------------------------------
                             28 	.area BSS
   0000                      29 _vsprintf_PARM_2:
   0000                      30 	.ds 2
   0002                      31 _vsprintf_PARM_3:
   0002                      32 	.ds 2
   0004                      33 _vsprintf_buf_65536_13:
   0004                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area DABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; initialized external ram data
                             41 ;--------------------------------------------------------
                             42 	.area DATA
                             43 ;--------------------------------------------------------
                             44 ; global & static initialisations
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 	.area GSINIT
                             48 	.area GSFINAL
                             49 	.area GSINIT
                             50 ;--------------------------------------------------------
                             51 ; Home
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 	.area _CODE
                             55 ;--------------------------------------------------------
                             56 ; code
                             57 ;--------------------------------------------------------
                             58 	.area CODE
                             59 ;------------------------------------------------------------
                             60 ;Allocation info for local variables in function 'put_char_to_string'
                             61 ;------------------------------------------------------------
                             62 ;p                         Allocated to stack - sp +10
                             63 ;c                         Allocated to stack - sp +7
                             64 ;buf                       Allocated to stack - sp +5
                             65 ;sloc0                     Allocated to stack - sp +3
                             66 ;sloc1                     Allocated to stack - sp +1
                             67 ;------------------------------------------------------------
                             68 ;	../sprintf.c: 34: put_char_to_string (char c, void* p) _REENTRANT
                             69 ;	-----------------------------------------
                             70 ;	 function put_char_to_string
                             71 ;	-----------------------------------------
                             72 ;	Register assignment is optimal.
                             73 ;	Stack space usage: 7 bytes.
   0000                      74 _put_char_to_string:
   0000 48            [ 3]   75 	pha
   0001 48            [ 3]   76 	pha
   0002 48            [ 3]   77 	pha
   0003 48            [ 3]   78 	pha
   0004 48            [ 3]   79 	pha
   0005 48            [ 3]   80 	pha
   0006 48            [ 3]   81 	pha
                             82 ;	../sprintf.c: 36: char **buf = (char **)p;
   0007 BA            [ 2]   83 	tsx
   0008 BD 0A 01      [ 5]   84 	lda	0x10a,x
   000B 9D 05 01      [ 5]   85 	sta	0x105,x
   000E BD 0B 01      [ 5]   86 	lda	0x10b,x
   0011 9D 06 01      [ 5]   87 	sta	0x106,x
                             88 ;	../sprintf.c: 37: *(*buf)++ = c;
   0014 BD 05 01      [ 5]   89 	lda	0x105,x
   0017 85*00         [ 3]   90 	sta	*(__DPTR+0)
   0019 BD 06 01      [ 5]   91 	lda	0x106,x
   001C 85*01         [ 3]   92 	sta	*(__DPTR+1)
   001E A0 00         [ 2]   93 	ldy	#0x00
   0020 B1*00         [ 6]   94 	lda	[__DPTR],y
   0022 9D 03 01      [ 5]   95 	sta	0x103,x
   0025 C8            [ 2]   96 	iny
   0026 B1*00         [ 6]   97 	lda	[__DPTR],y
   0028 9D 04 01      [ 5]   98 	sta	0x104,x
   002B BD 03 01      [ 5]   99 	lda	0x103,x
   002E 18            [ 2]  100 	clc
   002F 69 01         [ 2]  101 	adc	#0x01
   0031 9D 01 01      [ 5]  102 	sta	0x101,x
   0034 BD 04 01      [ 5]  103 	lda	0x104,x
   0037 69 00         [ 2]  104 	adc	#0x00
   0039 9D 02 01      [ 5]  105 	sta	0x102,x
   003C BD 05 01      [ 5]  106 	lda	0x105,x
   003F 85*00         [ 3]  107 	sta	*(__DPTR+0)
   0041 BD 06 01      [ 5]  108 	lda	0x106,x
   0044 85*01         [ 3]  109 	sta	*(__DPTR+1)
   0046 BD 01 01      [ 5]  110 	lda	0x101,x
   0049 88            [ 2]  111 	dey
   004A 91*00         [ 6]  112 	sta	[__DPTR],y
   004C BD 02 01      [ 5]  113 	lda	0x102,x
   004F C8            [ 2]  114 	iny
   0050 91*00         [ 6]  115 	sta	[__DPTR],y
   0052 BD 03 01      [ 5]  116 	lda	0x103,x
   0055 85*00         [ 3]  117 	sta	*(__DPTR+0)
   0057 BD 04 01      [ 5]  118 	lda	0x104,x
   005A 85*01         [ 3]  119 	sta	*(__DPTR+1)
   005C BD 07 01      [ 5]  120 	lda	0x107,x
   005F 88            [ 2]  121 	dey
   0060 91*00         [ 6]  122 	sta	[__DPTR],y
                            123 ;	../sprintf.c: 38: }
   0062 85*00         [ 3]  124 	sta	*(__TEMP+0)
   0064 68            [ 4]  125 	pla
   0065 68            [ 4]  126 	pla
   0066 68            [ 4]  127 	pla
   0067 68            [ 4]  128 	pla
   0068 68            [ 4]  129 	pla
   0069 68            [ 4]  130 	pla
   006A 68            [ 4]  131 	pla
   006B A5*00         [ 3]  132 	lda	*(__TEMP+0)
   006D 60            [ 6]  133 	rts
                            134 ;------------------------------------------------------------
                            135 ;Allocation info for local variables in function 'vsprintf'
                            136 ;------------------------------------------------------------
                            137 ;sloc0                     Allocated with name '_vsprintf_sloc0_1_0'
                            138 ;format                    Allocated with name '_vsprintf_PARM_2'
                            139 ;ap                        Allocated with name '_vsprintf_PARM_3'
                            140 ;buf                       Allocated with name '_vsprintf_buf_65536_13'
                            141 ;i                         Allocated to registers a x 
                            142 ;------------------------------------------------------------
                            143 ;	../sprintf.c: 41: vsprintf (char *buf, const char *format, va_list ap)
                            144 ;	-----------------------------------------
                            145 ;	 function vsprintf
                            146 ;	-----------------------------------------
                            147 ;	Register assignment is optimal.
                            148 ;	Stack space usage: 0 bytes.
   006E                     149 _vsprintf:
   006E 8Dr04r00      [ 4]  150 	sta	_vsprintf_buf_65536_13
   0071 8Er05r00      [ 4]  151 	stx	(_vsprintf_buf_65536_13 + 1)
                            152 ;	../sprintf.c: 44: i = _print_format (put_char_to_string, &buf, format, ap);
   0074 A9r04         [ 2]  153 	lda	#_vsprintf_buf_65536_13
   0076 8Dr00r00      [ 4]  154 	sta	__print_format_PARM_2
   0079 A9s00         [ 2]  155 	lda	#>_vsprintf_buf_65536_13
   007B 8Dr01r00      [ 4]  156 	sta	(__print_format_PARM_2 + 1)
   007E ADr00r00      [ 4]  157 	lda	_vsprintf_PARM_2
   0081 8Dr00r00      [ 4]  158 	sta	__print_format_PARM_3
   0084 ADr01r00      [ 4]  159 	lda	(_vsprintf_PARM_2 + 1)
   0087 8Dr01r00      [ 4]  160 	sta	(__print_format_PARM_3 + 1)
   008A ADr02r00      [ 4]  161 	lda	_vsprintf_PARM_3
   008D 8Dr00r00      [ 4]  162 	sta	__print_format_PARM_4
   0090 ADr03r00      [ 4]  163 	lda	(_vsprintf_PARM_3 + 1)
   0093 8Dr01r00      [ 4]  164 	sta	(__print_format_PARM_4 + 1)
   0096 A2s00         [ 2]  165 	ldx	#>(_put_char_to_string)
   0098 A9r00         [ 2]  166 	lda	#(_put_char_to_string)
   009A 20r00r00      [ 6]  167 	jsr	__print_format
                            168 ;	../sprintf.c: 45: *buf = 0;
   009D ACr04r00      [ 4]  169 	ldy	_vsprintf_buf_65536_13
   00A0 84*00         [ 3]  170 	sty	*_vsprintf_sloc0_1_0
   00A2 ACr05r00      [ 4]  171 	ldy	(_vsprintf_buf_65536_13 + 1)
   00A5 84*01         [ 3]  172 	sty	*(_vsprintf_sloc0_1_0 + 1)
   00A7 85*00         [ 3]  173 	sta	*(__TEMP+0)
   00A9 A9 00         [ 2]  174 	lda	#0x00
   00AB A8            [ 2]  175 	tay
   00AC 91*00         [ 6]  176 	sta	[*_vsprintf_sloc0_1_0],y
   00AE A5*00         [ 3]  177 	lda	*(__TEMP+0)
                            178 ;	../sprintf.c: 46: return i;
                            179 ;	../sprintf.c: 47: }
   00B0 60            [ 6]  180 	rts
                            181 ;------------------------------------------------------------
                            182 ;Allocation info for local variables in function 'sprintf'
                            183 ;------------------------------------------------------------
                            184 ;buf                       Allocated to stack - sp +5
                            185 ;format                    Allocated to stack - sp +7
                            186 ;arg                       Allocated to registers 
                            187 ;i                         Allocated to stack - sp +1
                            188 ;------------------------------------------------------------
                            189 ;	../sprintf.c: 50: sprintf (char *buf, const char *format, ...)
                            190 ;	-----------------------------------------
                            191 ;	 function sprintf
                            192 ;	-----------------------------------------
                            193 ;	Register assignment is optimal.
                            194 ;	Stack space usage: 2 bytes.
   00B1                     195 _sprintf:
   00B1 48            [ 3]  196 	pha
   00B2 48            [ 3]  197 	pha
                            198 ;	../sprintf.c: 55: va_start (arg, format);
   00B3 BA            [ 2]  199 	tsx
   00B4 8A            [ 2]  200 	txa
   00B5 18            [ 2]  201 	clc
   00B6 69 07         [ 2]  202 	adc	#0x07
   00B8 A2 01         [ 2]  203 	ldx	#0x01
   00BA 18            [ 2]  204 	clc
   00BB 69 02         [ 2]  205 	adc	#0x02
   00BD 8Dr00r00      [ 4]  206 	sta	__print_format_PARM_4
   00C0 8A            [ 2]  207 	txa
   00C1 69 00         [ 2]  208 	adc	#0x00
   00C3 8Dr01r00      [ 4]  209 	sta	(__print_format_PARM_4 + 1)
                            210 ;	../sprintf.c: 56: i = _print_format (put_char_to_string, &buf, format, arg);
   00C6 BA            [ 2]  211 	tsx
   00C7 8A            [ 2]  212 	txa
   00C8 18            [ 2]  213 	clc
   00C9 69 05         [ 2]  214 	adc	#0x05
   00CB A2 01         [ 2]  215 	ldx	#0x01
   00CD 8Dr00r00      [ 4]  216 	sta	__print_format_PARM_2
   00D0 8Er01r00      [ 4]  217 	stx	(__print_format_PARM_2 + 1)
   00D3 BA            [ 2]  218 	tsx
   00D4 BD 07 01      [ 5]  219 	lda	0x107,x
   00D7 8Dr00r00      [ 4]  220 	sta	__print_format_PARM_3
   00DA BD 08 01      [ 5]  221 	lda	0x108,x
   00DD 8Dr01r00      [ 4]  222 	sta	(__print_format_PARM_3 + 1)
   00E0 A2s00         [ 2]  223 	ldx	#>(_put_char_to_string)
   00E2 A9r00         [ 2]  224 	lda	#(_put_char_to_string)
   00E4 20r00r00      [ 6]  225 	jsr	__print_format
   00E7 86*00         [ 3]  226 	stx	*(__TEMP+0)
   00E9 BA            [ 2]  227 	tsx
   00EA 9D 01 01      [ 5]  228 	sta	0x101,x
   00ED A6*00         [ 3]  229 	ldx	*(__TEMP+0)
   00EF 8A            [ 2]  230 	txa
   00F0 BA            [ 2]  231 	tsx
   00F1 9D 02 01      [ 5]  232 	sta	0x102,x
                            233 ;	../sprintf.c: 57: *buf = 0;
   00F4 BA            [ 2]  234 	tsx
   00F5 BD 05 01      [ 5]  235 	lda	0x105,x
   00F8 85*00         [ 3]  236 	sta	*(__TEMP+0)
   00FA BD 06 01      [ 5]  237 	lda	0x106,x
   00FD AA            [ 2]  238 	tax
   00FE A5*00         [ 3]  239 	lda	*(__TEMP+0)
   0100 85*00         [ 3]  240 	sta	*(__DPTR+0)
   0102 86*01         [ 3]  241 	stx	*(__DPTR+1)
   0104 A9 00         [ 2]  242 	lda	#0x00
   0106 A8            [ 2]  243 	tay
   0107 91*00         [ 6]  244 	sta	[__DPTR],y
                            245 ;	../sprintf.c: 60: return i;
   0109 BA            [ 2]  246 	tsx
   010A BD 02 01      [ 5]  247 	lda	0x102,x
   010D AA            [ 2]  248 	tax
   010E 86*00         [ 3]  249 	stx	*(__TEMP+0)
   0110 BA            [ 2]  250 	tsx
   0111 BD 01 01      [ 5]  251 	lda	0x101,x
   0114 08            [ 3]  252 	php
   0115 A6*00         [ 3]  253 	ldx	*(__TEMP+0)
   0117 28            [ 4]  254 	plp
                            255 ;	../sprintf.c: 61: }
   0118 85*00         [ 3]  256 	sta	*(__TEMP+0)
   011A 68            [ 4]  257 	pla
   011B 68            [ 4]  258 	pla
   011C A5*00         [ 3]  259 	lda	*(__TEMP+0)
   011E 60            [ 6]  260 	rts
                            261 	.area CODE
                            262 	.area RODATA
                            263 	.area XINIT
                            264 	.area CABS    (ABS)
