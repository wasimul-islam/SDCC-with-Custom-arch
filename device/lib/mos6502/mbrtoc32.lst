                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbrtoc32
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _mbrtowc
                             12 	.globl _mbrtoc32_PARM_4
                             13 	.globl _mbrtoc32_PARM_3
                             14 	.globl _mbrtoc32_PARM_2
                             15 	.globl _mbrtoc32
                             16 ;--------------------------------------------------------
                             17 ; ZP ram data
                             18 ;--------------------------------------------------------
                             19 	.area ZP      (PAG)
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in ram
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; uninitialized external ram data
                             25 ;--------------------------------------------------------
                             26 	.area BSS
   0000                      27 _mbrtoc32_PARM_2:
   0000                      28 	.ds 2
   0002                      29 _mbrtoc32_PARM_3:
   0002                      30 	.ds 2
   0004                      31 _mbrtoc32_PARM_4:
   0004                      32 	.ds 2
   0006                      33 _mbrtoc32_pc32_65536_15:
   0006                      34 	.ds 2
   0008                      35 _mbrtoc32_wc_65536_16:
   0008                      36 	.ds 4
   000C                      37 _mbrtoc32_ret_65536_16:
   000C                      38 	.ds 2
   000E                      39 _mbrtoc32_sps_65536_16:
   000E                      40 	.ds 3
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area DABS    (ABS)
                             45 ;--------------------------------------------------------
                             46 ; initialized external ram data
                             47 ;--------------------------------------------------------
                             48 	.area DATA
                             49 ;--------------------------------------------------------
                             50 ; global & static initialisations
                             51 ;--------------------------------------------------------
                             52 	.area _CODE
                             53 	.area GSINIT
                             54 	.area GSFINAL
                             55 	.area GSINIT
                             56 ;--------------------------------------------------------
                             57 ; Home
                             58 ;--------------------------------------------------------
                             59 	.area _CODE
                             60 	.area _CODE
                             61 ;--------------------------------------------------------
                             62 ; code
                             63 ;--------------------------------------------------------
                             64 	.area CODE
                             65 ;------------------------------------------------------------
                             66 ;Allocation info for local variables in function 'mbrtoc32'
                             67 ;------------------------------------------------------------
                             68 ;s                         Allocated with name '_mbrtoc32_PARM_2'
                             69 ;n                         Allocated with name '_mbrtoc32_PARM_3'
                             70 ;ps                        Allocated with name '_mbrtoc32_PARM_4'
                             71 ;pc32                      Allocated with name '_mbrtoc32_pc32_65536_15'
                             72 ;wc                        Allocated with name '_mbrtoc32_wc_65536_16'
                             73 ;ret                       Allocated with name '_mbrtoc32_ret_65536_16'
                             74 ;sps                       Allocated with name '_mbrtoc32_sps_65536_16'
                             75 ;------------------------------------------------------------
                             76 ;	../mbrtoc32.c: 34: size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
                             77 ;	-----------------------------------------
                             78 ;	 function mbrtoc32
                             79 ;	-----------------------------------------
                             80 ;	Register assignment is optimal.
                             81 ;	Stack space usage: 0 bytes.
   0000                      82 _mbrtoc32:
   0000 8Dr06r00      [ 4]   83 	sta	_mbrtoc32_pc32_65536_15
   0003 8Er07r00      [ 4]   84 	stx	(_mbrtoc32_pc32_65536_15 + 1)
                             85 ;	../mbrtoc32.c: 40: if(!ps)
   0006 ADr05r00      [ 4]   86 	lda	(_mbrtoc32_PARM_4 + 1)
   0009 0Dr04r00      [ 4]   87 	ora	_mbrtoc32_PARM_4
   000C D0 0A         [ 4]   88 	bne	00102$
                             89 ;	../mbrtoc32.c: 41: ps = &sps;
   000E A9r0E         [ 2]   90 	lda	#_mbrtoc32_sps_65536_16
   0010 8Dr04r00      [ 4]   91 	sta	_mbrtoc32_PARM_4
   0013 A9s00         [ 2]   92 	lda	#>_mbrtoc32_sps_65536_16
   0015 8Dr05r00      [ 4]   93 	sta	(_mbrtoc32_PARM_4 + 1)
   0018                      94 00102$:
                             95 ;	../mbrtoc32.c: 43: if(!pc32)
   0018 ADr07r00      [ 4]   96 	lda	(_mbrtoc32_pc32_65536_15 + 1)
   001B 0Dr06r00      [ 4]   97 	ora	_mbrtoc32_pc32_65536_15
   001E D0 2A         [ 4]   98 	bne	00104$
                             99 ;	../mbrtoc32.c: 44: return(mbrtowc(0, s, n, ps));
   0020 ADr00r00      [ 4]  100 	lda	_mbrtoc32_PARM_2
   0023 8Dr00r00      [ 4]  101 	sta	_mbrtowc_PARM_2
   0026 ADr01r00      [ 4]  102 	lda	(_mbrtoc32_PARM_2 + 1)
   0029 8Dr01r00      [ 4]  103 	sta	(_mbrtowc_PARM_2 + 1)
   002C ADr02r00      [ 4]  104 	lda	_mbrtoc32_PARM_3
   002F 8Dr00r00      [ 4]  105 	sta	_mbrtowc_PARM_3
   0032 ADr03r00      [ 4]  106 	lda	(_mbrtoc32_PARM_3 + 1)
   0035 8Dr01r00      [ 4]  107 	sta	(_mbrtowc_PARM_3 + 1)
   0038 ADr04r00      [ 4]  108 	lda	_mbrtoc32_PARM_4
   003B 8Dr00r00      [ 4]  109 	sta	_mbrtowc_PARM_4
   003E ADr05r00      [ 4]  110 	lda	(_mbrtoc32_PARM_4 + 1)
   0041 8Dr01r00      [ 4]  111 	sta	(_mbrtowc_PARM_4 + 1)
   0044 A2 00         [ 2]  112 	ldx	#0x00
   0046 8A            [ 2]  113 	txa
   0047 4Cr00r00      [ 3]  114 	jmp	_mbrtowc
   004A                     115 00104$:
                            116 ;	../mbrtoc32.c: 46: ret = mbrtowc(&wc, s, n, ps);
   004A ADr00r00      [ 4]  117 	lda	_mbrtoc32_PARM_2
   004D 8Dr00r00      [ 4]  118 	sta	_mbrtowc_PARM_2
   0050 ADr01r00      [ 4]  119 	lda	(_mbrtoc32_PARM_2 + 1)
   0053 8Dr01r00      [ 4]  120 	sta	(_mbrtowc_PARM_2 + 1)
   0056 ADr02r00      [ 4]  121 	lda	_mbrtoc32_PARM_3
   0059 8Dr00r00      [ 4]  122 	sta	_mbrtowc_PARM_3
   005C ADr03r00      [ 4]  123 	lda	(_mbrtoc32_PARM_3 + 1)
   005F 8Dr01r00      [ 4]  124 	sta	(_mbrtowc_PARM_3 + 1)
   0062 ADr04r00      [ 4]  125 	lda	_mbrtoc32_PARM_4
   0065 8Dr00r00      [ 4]  126 	sta	_mbrtowc_PARM_4
   0068 ADr05r00      [ 4]  127 	lda	(_mbrtoc32_PARM_4 + 1)
   006B 8Dr01r00      [ 4]  128 	sta	(_mbrtowc_PARM_4 + 1)
   006E A2s00         [ 2]  129 	ldx	#>_mbrtoc32_wc_65536_16
   0070 A9r08         [ 2]  130 	lda	#_mbrtoc32_wc_65536_16
   0072 20r00r00      [ 6]  131 	jsr	_mbrtowc
   0075 8Dr0Cr00      [ 4]  132 	sta	_mbrtoc32_ret_65536_16
   0078 8Er0Dr00      [ 4]  133 	stx	(_mbrtoc32_ret_65536_16 + 1)
                            134 ;	../mbrtoc32.c: 48: if(ret <= MB_LEN_MAX)
   007B A9 04         [ 2]  135 	lda	#0x04
   007D 38            [ 2]  136 	sec
   007E EDr0Cr00      [ 4]  137 	sbc	_mbrtoc32_ret_65536_16
   0081 A9 00         [ 2]  138 	lda	#0x00
   0083 EDr0Dr00      [ 4]  139 	sbc	(_mbrtoc32_ret_65536_16 + 1)
   0086 90 23         [ 4]  140 	bcc	00106$
                            141 ;	../mbrtoc32.c: 49: *pc32 = wc;
   0088 ADr06r00      [ 4]  142 	lda	_mbrtoc32_pc32_65536_15
   008B 85*00         [ 3]  143 	sta	*(__DPTR+0)
   008D ADr07r00      [ 4]  144 	lda	(_mbrtoc32_pc32_65536_15 + 1)
   0090 85*01         [ 3]  145 	sta	*(__DPTR+1)
   0092 ADr08r00      [ 4]  146 	lda	_mbrtoc32_wc_65536_16
   0095 A0 00         [ 2]  147 	ldy	#0x00
   0097 91*00         [ 6]  148 	sta	[__DPTR],y
   0099 ADr09r00      [ 4]  149 	lda	(_mbrtoc32_wc_65536_16 + 1)
   009C C8            [ 2]  150 	iny
   009D 91*00         [ 6]  151 	sta	[__DPTR],y
   009F ADr0Ar00      [ 4]  152 	lda	(_mbrtoc32_wc_65536_16 + 2)
   00A2 C8            [ 2]  153 	iny
   00A3 91*00         [ 6]  154 	sta	[__DPTR],y
   00A5 ADr0Br00      [ 4]  155 	lda	(_mbrtoc32_wc_65536_16 + 3)
   00A8 C8            [ 2]  156 	iny
   00A9 91*00         [ 6]  157 	sta	[__DPTR],y
   00AB                     158 00106$:
                            159 ;	../mbrtoc32.c: 51: return(ret);
   00AB AEr0Dr00      [ 4]  160 	ldx	(_mbrtoc32_ret_65536_16 + 1)
   00AE ADr0Cr00      [ 4]  161 	lda	_mbrtoc32_ret_65536_16
                            162 ;	../mbrtoc32.c: 52: }
   00B1 60            [ 6]  163 	rts
                            164 	.area CODE
                            165 	.area RODATA
                            166 	.area XINIT
                            167 	.area CABS    (ABS)
