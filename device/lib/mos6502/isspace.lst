                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module isspace
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _isspace
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'isspace'
                             49 ;------------------------------------------------------------
                             50 ;c                         Allocated to registers a x 
                             51 ;------------------------------------------------------------
                             52 ;	../isspace.c: 39: int isspace (int c)
                             53 ;	-----------------------------------------
                             54 ;	 function isspace
                             55 ;	-----------------------------------------
                             56 ;	Register assignment is optimal.
                             57 ;	Stack space usage: 0 bytes.
   0000                      58 _isspace:
                             59 ;	../isspace.c: 42: if((c & 0xff00) != 0)
   0000 85*00         [ 3]   60 	sta	*(__TEMP+0)
   0002 8A            [ 2]   61 	txa
   0003 08            [ 3]   62 	php
   0004 A5*00         [ 3]   63 	lda	*(__TEMP+0)
   0006 28            [ 4]   64 	plp
   0007 F0 04         [ 4]   65 	beq	00102$
                             66 ;	../isspace.c: 43: return 0;
   0009 A9 00         [ 2]   67 	lda	#0x00
   000B AA            [ 2]   68 	tax
   000C 60            [ 6]   69 	rts
   000D                      70 00102$:
                             71 ;	../isspace.c: 44: return ((unsigned char)c == ' ' || (unsigned char)c == '\t' || (unsigned char)c == '\n' || (unsigned char)c == '\v' || (unsigned char)c == '\f' || (unsigned char)c == '\r');
   000D C9 20         [ 2]   72 	cmp	#0x20
   000F F0 19         [ 4]   73 	beq	00106$
   0011 C9 09         [ 2]   74 	cmp	#0x09
   0013 F0 15         [ 4]   75 	beq	00106$
   0015 C9 0A         [ 2]   76 	cmp	#0x0a
   0017 F0 11         [ 4]   77 	beq	00106$
   0019 C9 0B         [ 2]   78 	cmp	#0x0b
   001B F0 0D         [ 4]   79 	beq	00106$
   001D C9 0C         [ 2]   80 	cmp	#0x0c
   001F F0 09         [ 4]   81 	beq	00106$
   0021 C9 0D         [ 2]   82 	cmp	#0x0d
   0023 F0 05         [ 4]   83 	beq	00106$
   0025 A9 00         [ 2]   84 	lda	#0x00
   0027 4Cr2Cr00      [ 3]   85 	jmp	00107$
   002A                      86 00106$:
   002A A9 01         [ 2]   87 	lda	#0x01
   002C                      88 00107$:
   002C A2 00         [ 2]   89 	ldx	#0x00
                             90 ;	../isspace.c: 48: }
   002E 60            [ 6]   91 	rts
                             92 	.area CODE
                             93 	.area RODATA
                             94 	.area XINIT
                             95 	.area CABS    (ABS)
