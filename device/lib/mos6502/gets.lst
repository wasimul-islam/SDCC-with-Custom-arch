                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module gets
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _gets
                             12 	.globl _putchar
                             13 	.globl _getchar
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; uninitialized external ram data
                             23 ;--------------------------------------------------------
                             24 	.area BSS
   0000                      25 _gets_s_65536_11:
   0000                      26 	.ds 2
   0002                      27 _gets_count_65536_12:
   0002                      28 	.ds 2
                             29 ;--------------------------------------------------------
                             30 ; absolute external ram data
                             31 ;--------------------------------------------------------
                             32 	.area DABS    (ABS)
                             33 ;--------------------------------------------------------
                             34 ; initialized external ram data
                             35 ;--------------------------------------------------------
                             36 	.area DATA
                             37 ;--------------------------------------------------------
                             38 ; global & static initialisations
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 	.area GSINIT
                             42 	.area GSFINAL
                             43 	.area GSINIT
                             44 ;--------------------------------------------------------
                             45 ; Home
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 	.area _CODE
                             49 ;--------------------------------------------------------
                             50 ; code
                             51 ;--------------------------------------------------------
                             52 	.area CODE
                             53 ;------------------------------------------------------------
                             54 ;Allocation info for local variables in function 'gets'
                             55 ;------------------------------------------------------------
                             56 ;s                         Allocated with name '_gets_s_65536_11'
                             57 ;c                         Allocated to registers a 
                             58 ;count                     Allocated with name '_gets_count_65536_12'
                             59 ;------------------------------------------------------------
                             60 ;	../gets.c: 32: gets (char *s)
                             61 ;	-----------------------------------------
                             62 ;	 function gets
                             63 ;	-----------------------------------------
                             64 ;	Register assignment is optimal.
                             65 ;	Stack space usage: 0 bytes.
   0000                      66 _gets:
   0000 8Dr00r00      [ 4]   67 	sta	_gets_s_65536_11
   0003 8Er01r00      [ 4]   68 	stx	(_gets_s_65536_11 + 1)
                             69 ;	../gets.c: 35: unsigned int count = 0;
   0006 A2 00         [ 2]   70 	ldx	#0x00
   0008 8Er02r00      [ 4]   71 	stx	_gets_count_65536_12
   000B 8Er03r00      [ 4]   72 	stx	(_gets_count_65536_12 + 1)
                             73 ;	../gets.c: 37: while (1)
   000E                      74 00109$:
                             75 ;	../gets.c: 39: c = getchar ();
   000E 20r00r00      [ 6]   76 	jsr	_getchar
                             77 ;	../gets.c: 40: switch(c)
   0011 C9 08         [ 2]   78 	cmp	#0x08
   0013 F0 0B         [ 4]   79 	beq	00101$
   0015 C9 0A         [ 2]   80 	cmp	#0x0a
   0017 F0 43         [ 4]   81 	beq	00105$
   0019 C9 0D         [ 2]   82 	cmp	#0x0d
   001B F0 3F         [ 4]   83 	beq	00105$
   001D 4Cr80r00      [ 3]   84 	jmp	00106$
                             85 ;	../gets.c: 42: case '\b': /* backspace */
   0020                      86 00101$:
                             87 ;	../gets.c: 43: if (count)
   0020 ADr03r00      [ 4]   88 	lda	(_gets_count_65536_12 + 1)
   0023 0Dr02r00      [ 4]   89 	ora	_gets_count_65536_12
   0026 F0 E6         [ 4]   90 	beq	00109$
                             91 ;	../gets.c: 45: putchar ('\b');
   0028 A2 00         [ 2]   92 	ldx	#0x00
   002A A9 08         [ 2]   93 	lda	#0x08
   002C 20r00r00      [ 6]   94 	jsr	_putchar
                             95 ;	../gets.c: 46: putchar (' ');
   002F A2 00         [ 2]   96 	ldx	#0x00
   0031 A9 20         [ 2]   97 	lda	#0x20
   0033 20r00r00      [ 6]   98 	jsr	_putchar
                             99 ;	../gets.c: 47: putchar ('\b');
   0036 A2 00         [ 2]  100 	ldx	#0x00
   0038 A9 08         [ 2]  101 	lda	#0x08
   003A 20r00r00      [ 6]  102 	jsr	_putchar
                            103 ;	../gets.c: 48: --s;
   003D 38            [ 2]  104 	sec
   003E ADr00r00      [ 4]  105 	lda	_gets_s_65536_11
   0041 E9 01         [ 2]  106 	sbc	#0x01
   0043 8Dr00r00      [ 4]  107 	sta	_gets_s_65536_11
   0046 B0 03         [ 4]  108 	bcs	00137$
   0048 CEr01r00      [ 6]  109 	dec	(_gets_s_65536_11 + 1)
   004B                     110 00137$:
                            111 ;	../gets.c: 49: --count;
   004B 38            [ 2]  112 	sec
   004C ADr02r00      [ 4]  113 	lda	_gets_count_65536_12
   004F E9 01         [ 2]  114 	sbc	#0x01
   0051 8Dr02r00      [ 4]  115 	sta	_gets_count_65536_12
   0054 B0 B8         [ 4]  116 	bcs	00109$
   0056 CEr03r00      [ 6]  117 	dec	(_gets_count_65536_12 + 1)
                            118 ;	../gets.c: 51: break;
   0059 4Cr0Er00      [ 3]  119 	jmp	00109$
                            120 ;	../gets.c: 54: case '\r': /* CR or LF */
   005C                     121 00105$:
                            122 ;	../gets.c: 55: putchar ('\r');
   005C A2 00         [ 2]  123 	ldx	#0x00
   005E A9 0D         [ 2]  124 	lda	#0x0d
   0060 20r00r00      [ 6]  125 	jsr	_putchar
                            126 ;	../gets.c: 56: putchar ('\n');
   0063 A2 00         [ 2]  127 	ldx	#0x00
   0065 A9 0A         [ 2]  128 	lda	#0x0a
   0067 20r00r00      [ 6]  129 	jsr	_putchar
                            130 ;	../gets.c: 57: *s = 0;
   006A ADr00r00      [ 4]  131 	lda	_gets_s_65536_11
   006D 85*00         [ 3]  132 	sta	*(__DPTR+0)
   006F ADr01r00      [ 4]  133 	lda	(_gets_s_65536_11 + 1)
   0072 85*01         [ 3]  134 	sta	*(__DPTR+1)
   0074 A9 00         [ 2]  135 	lda	#0x00
   0076 A8            [ 2]  136 	tay
   0077 91*00         [ 6]  137 	sta	[__DPTR],y
                            138 ;	../gets.c: 58: return s;
   0079 AEr01r00      [ 4]  139 	ldx	(_gets_s_65536_11 + 1)
   007C ADr00r00      [ 4]  140 	lda	_gets_s_65536_11
   007F 60            [ 6]  141 	rts
                            142 ;	../gets.c: 60: default:
   0080                     143 00106$:
                            144 ;	../gets.c: 61: *s++ = c;
   0080 85*00         [ 3]  145 	sta	*(__TEMP+0)
   0082 ADr00r00      [ 4]  146 	lda	_gets_s_65536_11
   0085 85*00         [ 3]  147 	sta	*(__DPTR+0)
   0087 ADr01r00      [ 4]  148 	lda	(_gets_s_65536_11 + 1)
   008A 85*01         [ 3]  149 	sta	*(__DPTR+1)
   008C A5*00         [ 3]  150 	lda	*(__TEMP+0)
   008E A0 00         [ 2]  151 	ldy	#0x00
   0090 91*00         [ 6]  152 	sta	[__DPTR],y
   0092 A5*00         [ 3]  153 	lda	*(__TEMP+0)
   0094 EEr00r00      [ 6]  154 	inc	_gets_s_65536_11
   0097 D0 03         [ 4]  155 	bne	00139$
   0099 EEr01r00      [ 6]  156 	inc	(_gets_s_65536_11 + 1)
   009C                     157 00139$:
                            158 ;	../gets.c: 62: ++count;
   009C EEr02r00      [ 6]  159 	inc	_gets_count_65536_12
   009F D0 03         [ 4]  160 	bne	00140$
   00A1 EEr03r00      [ 6]  161 	inc	(_gets_count_65536_12 + 1)
   00A4                     162 00140$:
                            163 ;	../gets.c: 63: putchar (c);
   00A4 A2 00         [ 2]  164 	ldx	#0x00
   00A6 20r00r00      [ 6]  165 	jsr	_putchar
                            166 ;	../gets.c: 65: }
   00A9 4Cr0Er00      [ 3]  167 	jmp	00109$
                            168 ;	../gets.c: 67: }
   00AC 60            [ 6]  169 	rts
                            170 	.area CODE
                            171 	.area RODATA
                            172 	.area XINIT
                            173 	.area CABS    (ABS)
