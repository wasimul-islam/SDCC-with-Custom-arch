                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module atoi
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _atoi
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
   0000                      16 _atoi_sloc0_1_0:
   0000                      17 	.ds 2
   0002                      18 _atoi_sloc1_1_0:
   0002                      19 	.ds 1
   0003                      20 _atoi_sloc2_1_0:
   0003                      21 	.ds 2
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in ram
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; uninitialized external ram data
                             27 ;--------------------------------------------------------
                             28 	.area BSS
   0000                      29 _atoi_ret_65536_57:
   0000                      30 	.ds 2
   0002                      31 _atoi_neg_65536_57:
   0002                      32 	.ds 1
                             33 ;--------------------------------------------------------
                             34 ; absolute external ram data
                             35 ;--------------------------------------------------------
                             36 	.area DABS    (ABS)
                             37 ;--------------------------------------------------------
                             38 ; initialized external ram data
                             39 ;--------------------------------------------------------
                             40 	.area DATA
                             41 ;--------------------------------------------------------
                             42 ; global & static initialisations
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 	.area GSINIT
                             46 	.area GSFINAL
                             47 	.area GSINIT
                             48 ;--------------------------------------------------------
                             49 ; Home
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 	.area _CODE
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area CODE
                             57 ;------------------------------------------------------------
                             58 ;Allocation info for local variables in function 'atoi'
                             59 ;------------------------------------------------------------
                             60 ;sloc0                     Allocated with name '_atoi_sloc0_1_0'
                             61 ;sloc1                     Allocated with name '_atoi_sloc1_1_0'
                             62 ;sloc2                     Allocated with name '_atoi_sloc2_1_0'
                             63 ;nptr                      Allocated to registers a x 
                             64 ;__1310720007              Allocated to registers 
                             65 ;__1310720004              Allocated to registers 
                             66 ;ret                       Allocated with name '_atoi_ret_65536_57'
                             67 ;neg                       Allocated with name '_atoi_neg_65536_57'
                             68 ;__1310720005              Allocated to registers 
                             69 ;c                         Allocated to registers 
                             70 ;__1310720008              Allocated to registers 
                             71 ;c                         Allocated to registers 
                             72 ;------------------------------------------------------------
                             73 ;	../atoi.c: 34: int atoi(const char *nptr)
                             74 ;	-----------------------------------------
                             75 ;	 function atoi
                             76 ;	-----------------------------------------
                             77 ;	Register assignment is optimal.
                             78 ;	Stack space usage: 0 bytes.
   0000                      79 _atoi:
   0000 85*00         [ 3]   80 	sta	*_atoi_sloc0_1_0
   0002 86*01         [ 3]   81 	stx	*(_atoi_sloc0_1_0 + 1)
                             82 ;	../atoi.c: 36: int ret = 0;
   0004 A2 00         [ 2]   83 	ldx	#0x00
   0006 8Er00r00      [ 4]   84 	stx	_atoi_ret_65536_57
   0009 8Er01r00      [ 4]   85 	stx	(_atoi_ret_65536_57 + 1)
                             86 ;	../atoi.c: 39: while (isblank (*nptr))
   000C                      87 00101$:
   000C A0 00         [ 2]   88 	ldy	#0x00
   000E B1*00         [ 6]   89 	lda	[*_atoi_sloc0_1_0],y
                             90 ;	./../../include/ctype.h: 53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
   0010 C9 20         [ 2]   91 	cmp	#0x20
   0012 F0 04         [ 4]   92 	beq	00115$
   0014 C9 09         [ 2]   93 	cmp	#0x09
   0016 D0 09         [ 4]   94 	bne	00131$
   0018                      95 00115$:
                             96 ;	../atoi.c: 40: nptr++;
   0018 E6*00         [ 5]   97 	inc	*_atoi_sloc0_1_0
   001A D0 F0         [ 4]   98 	bne	00101$
   001C E6*01         [ 5]   99 	inc	*(_atoi_sloc0_1_0 + 1)
   001E 4Cr0Cr00      [ 3]  100 	jmp	00101$
   0021                     101 00131$:
   0021 A5*00         [ 3]  102 	lda	*_atoi_sloc0_1_0
   0023 A6*01         [ 3]  103 	ldx	*(_atoi_sloc0_1_0 + 1)
                            104 ;	../atoi.c: 42: neg = (*nptr == '-');
   0025 85*00         [ 3]  105 	sta	*(__TEMP+0)
   0027 A0 00         [ 2]  106 	ldy	#0x00
   0029 B1*00         [ 6]  107 	lda	[*_atoi_sloc0_1_0],y
   002B A8            [ 2]  108 	tay
   002C A5*00         [ 3]  109 	lda	*(__TEMP+0)
   002E C0 2D         [ 2]  110 	cpy	#0x2d
   0030 85*00         [ 3]  111 	sta	*(__TEMP+0)
   0032 F0 05         [ 4]  112 	beq	00165$
   0034 A9 00         [ 2]  113 	lda	#0x00
   0036 4Cr3Br00      [ 3]  114 	jmp	00164$
   0039                     115 00165$:
   0039 A9 01         [ 2]  116 	lda	#0x01
   003B                     117 00164$:
   003B 8Dr02r00      [ 4]  118 	sta	_atoi_neg_65536_57
   003E A5*00         [ 3]  119 	lda	*(__TEMP+0)
                            120 ;	../atoi.c: 44: if (*nptr == '-' || *nptr == '+')
   0040 C0 2D         [ 2]  121 	cpy	#0x2d
   0042 F0 04         [ 4]  122 	beq	00104$
   0044 C0 2B         [ 2]  123 	cpy	#0x2b
   0046 D0 06         [ 4]  124 	bne	00129$
   0048                     125 00104$:
                            126 ;	../atoi.c: 45: nptr++;
   0048 18            [ 2]  127 	clc
   0049 69 01         [ 2]  128 	adc	#0x01
   004B 90 01         [ 4]  129 	bcc	00168$
   004D E8            [ 2]  130 	inx
   004E                     131 00168$:
                            132 ;	../atoi.c: 47: while (isdigit (*nptr))
   004E                     133 00129$:
   004E 85*00         [ 3]  134 	sta	*_atoi_sloc0_1_0
   0050 86*01         [ 3]  135 	stx	*(_atoi_sloc0_1_0 + 1)
   0052                     136 00107$:
   0052 A0 00         [ 2]  137 	ldy	#0x00
   0054 B1*00         [ 6]  138 	lda	[*_atoi_sloc0_1_0],y
                            139 ;	./../../include/ctype.h: 62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
   0056 C9 30         [ 2]  140 	cmp	#0x30
   0058 90 3E         [ 4]  141 	bcc	00109$
   005A C9 39         [ 2]  142 	cmp	#0x39
   005C F0 02         [ 4]  143 	beq	00170$
   005E B0 38         [ 4]  144 	bcs	00109$
   0060                     145 00170$:
                            146 ;	../atoi.c: 48: ret = ret * 10 + (*(nptr++) - '0');
   0060 ADr00r00      [ 4]  147 	lda	_atoi_ret_65536_57
   0063 8Dr00r00      [ 4]  148 	sta	__mulint_PARM_2
   0066 ADr01r00      [ 4]  149 	lda	(_atoi_ret_65536_57 + 1)
   0069 8Dr01r00      [ 4]  150 	sta	(__mulint_PARM_2 + 1)
   006C A2 00         [ 2]  151 	ldx	#0x00
   006E A9 0A         [ 2]  152 	lda	#0x0a
   0070 20r00r00      [ 6]  153 	jsr	__mulint
   0073 85*03         [ 3]  154 	sta	*_atoi_sloc2_1_0
   0075 86*04         [ 3]  155 	stx	*(_atoi_sloc2_1_0 + 1)
   0077 A0 00         [ 2]  156 	ldy	#0x00
   0079 B1*00         [ 6]  157 	lda	[*_atoi_sloc0_1_0],y
   007B E6*00         [ 5]  158 	inc	*_atoi_sloc0_1_0
   007D D0 02         [ 4]  159 	bne	00172$
   007F E6*01         [ 5]  160 	inc	*(_atoi_sloc0_1_0 + 1)
   0081                     161 00172$:
   0081 A2 00         [ 2]  162 	ldx	#0x00
   0083 38            [ 2]  163 	sec
   0084 E9 30         [ 2]  164 	sbc	#0x30
   0086 B0 01         [ 4]  165 	bcs	00173$
   0088 CA            [ 2]  166 	dex
   0089                     167 00173$:
   0089 18            [ 2]  168 	clc
   008A 65*03         [ 3]  169 	adc	*_atoi_sloc2_1_0
   008C 8Dr00r00      [ 4]  170 	sta	_atoi_ret_65536_57
   008F 8A            [ 2]  171 	txa
   0090 65*04         [ 3]  172 	adc	*(_atoi_sloc2_1_0 + 1)
   0092 8Dr01r00      [ 4]  173 	sta	(_atoi_ret_65536_57 + 1)
   0095 4Cr52r00      [ 3]  174 	jmp	00107$
   0098                     175 00109$:
                            176 ;	../atoi.c: 50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
   0098 ADr02r00      [ 4]  177 	lda	_atoi_neg_65536_57
   009B F0 0F         [ 4]  178 	beq	00120$
   009D A9 00         [ 2]  179 	lda	#0x00
   009F 38            [ 2]  180 	sec
   00A0 EDr00r00      [ 4]  181 	sbc	_atoi_ret_65536_57
   00A3 48            [ 3]  182 	pha
   00A4 A9 00         [ 2]  183 	lda	#0x00
   00A6 EDr01r00      [ 4]  184 	sbc	(_atoi_ret_65536_57 + 1)
   00A9 AA            [ 2]  185 	tax
   00AA 68            [ 4]  186 	pla
   00AB 60            [ 6]  187 	rts
   00AC                     188 00120$:
   00AC ADr00r00      [ 4]  189 	lda	_atoi_ret_65536_57
   00AF AEr01r00      [ 4]  190 	ldx	(_atoi_ret_65536_57 + 1)
                            191 ;	../atoi.c: 51: }
   00B2 60            [ 6]  192 	rts
                            193 	.area CODE
                            194 	.area RODATA
                            195 	.area XINIT
                            196 	.area CABS    (ABS)
