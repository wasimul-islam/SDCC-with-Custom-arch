                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module ceilf
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _ceilf
                             12 ;--------------------------------------------------------
                             13 ; ZP ram data
                             14 ;--------------------------------------------------------
                             15 	.area ZP      (PAG)
                             16 ;--------------------------------------------------------
                             17 ; overlayable items in ram
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; uninitialized external ram data
                             21 ;--------------------------------------------------------
                             22 	.area BSS
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area DABS    (ABS)
                             27 ;--------------------------------------------------------
                             28 ; initialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area DATA
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _CODE
                             35 	.area GSINIT
                             36 	.area GSFINAL
                             37 	.area GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _CODE
                             42 	.area _CODE
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area CODE
                             47 ;------------------------------------------------------------
                             48 ;Allocation info for local variables in function 'ceilf'
                             49 ;------------------------------------------------------------
                             50 ;x                         Allocated to stack - sp +11
                             51 ;r                         Allocated to stack - sp +5
                             52 ;sloc0                     Allocated to stack - sp +5
                             53 ;sloc1                     Allocated to stack - sp +1
                             54 ;------------------------------------------------------------
                             55 ;	../ceilf.c: 33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                             56 ;	-----------------------------------------
                             57 ;	 function ceilf
                             58 ;	-----------------------------------------
                             59 ;	Register assignment is optimal.
                             60 ;	Stack space usage: 8 bytes.
   0000                      61 _ceilf:
   0000 85*00         [ 3]   62 	sta	*(__TEMP+0)
   0002 86*01         [ 3]   63 	stx	*(__TEMP+1)
   0004 BA            [ 2]   64 	tsx
   0005 8A            [ 2]   65 	txa
   0006 18            [ 2]   66 	clc
   0007 69 F8         [ 2]   67 	adc	#0xf8
   0009 AA            [ 2]   68 	tax
   000A 9A            [ 2]   69 	txs
   000B A6*01         [ 3]   70 	ldx	*(__TEMP+1)
   000D A5*00         [ 3]   71 	lda	*(__TEMP+0)
                             72 ;	../ceilf.c: 36: r=x;
   000F BA            [ 2]   73 	tsx
   0010 BD 0B 01      [ 5]   74 	lda	0x10b,x
   0013 8Dr00r00      [ 4]   75 	sta	___fs2slong_PARM_1
   0016 BD 0C 01      [ 5]   76 	lda	0x10c,x
   0019 8Dr01r00      [ 4]   77 	sta	(___fs2slong_PARM_1 + 1)
   001C BD 0D 01      [ 5]   78 	lda	0x10d,x
   001F 8Dr02r00      [ 4]   79 	sta	(___fs2slong_PARM_1 + 2)
   0022 BD 0E 01      [ 5]   80 	lda	0x10e,x
   0025 8Dr03r00      [ 4]   81 	sta	(___fs2slong_PARM_1 + 3)
   0028 20r00r00      [ 6]   82 	jsr	___fs2slong
   002B 86*00         [ 3]   83 	stx	*(__TEMP+0)
   002D BA            [ 2]   84 	tsx
   002E 9D 05 01      [ 5]   85 	sta	0x105,x
   0031 A6*00         [ 3]   86 	ldx	*(__TEMP+0)
   0033 8A            [ 2]   87 	txa
   0034 BA            [ 2]   88 	tsx
   0035 9D 06 01      [ 5]   89 	sta	0x106,x
   0038 A6*00         [ 3]   90 	ldx	*(__TEMP+0)
   003A A5*00         [ 3]   91 	lda	*___SDCC_m6502_ret2
   003C BA            [ 2]   92 	tsx
   003D 9D 07 01      [ 5]   93 	sta	0x107,x
   0040 A5*00         [ 3]   94 	lda	*___SDCC_m6502_ret3
                             95 ;	../ceilf.c: 37: if (r<0)
   0042 9D 08 01      [ 5]   96 	sta	0x108, x
   0045 38            [ 2]   97 	sec
   0046 E9 00         [ 2]   98 	sbc	#0x00
   0048 50 04         [ 4]   99 	bvc	00117$
   004A 10 04         [ 4]  100 	bpl	00116$
   004C 30 4F         [ 4]  101 	bmi	00102$
   004E                     102 00117$:
   004E 10 4D         [ 4]  103 	bpl	00102$
   0050                     104 00116$:
                            105 ;	../ceilf.c: 38: return r;
   0050 BD 05 01      [ 5]  106 	lda	0x105,x
   0053 8Dr00r00      [ 4]  107 	sta	___slong2fs_PARM_1
   0056 BD 06 01      [ 5]  108 	lda	0x106,x
   0059 8Dr01r00      [ 4]  109 	sta	(___slong2fs_PARM_1 + 1)
   005C BD 07 01      [ 5]  110 	lda	0x107,x
   005F 8Dr02r00      [ 4]  111 	sta	(___slong2fs_PARM_1 + 2)
   0062 BD 08 01      [ 5]  112 	lda	0x108,x
   0065 8Dr03r00      [ 4]  113 	sta	(___slong2fs_PARM_1 + 3)
   0068 20r00r00      [ 6]  114 	jsr	___slong2fs
   006B 86*00         [ 3]  115 	stx	*(__TEMP+0)
   006D BA            [ 2]  116 	tsx
   006E 9D 01 01      [ 5]  117 	sta	0x101,x
   0071 A6*00         [ 3]  118 	ldx	*(__TEMP+0)
   0073 8A            [ 2]  119 	txa
   0074 BA            [ 2]  120 	tsx
   0075 9D 02 01      [ 5]  121 	sta	0x102,x
   0078 A6*00         [ 3]  122 	ldx	*(__TEMP+0)
   007A A5*00         [ 3]  123 	lda	*___SDCC_m6502_ret2
   007C BA            [ 2]  124 	tsx
   007D 9D 03 01      [ 5]  125 	sta	0x103,x
   0080 A5*00         [ 3]  126 	lda	*___SDCC_m6502_ret3
   0082 9D 04 01      [ 5]  127 	sta	0x104, x
   0085 85*00         [ 3]  128 	sta	*___SDCC_m6502_ret3
   0087 BD 03 01      [ 5]  129 	lda	0x103,x
   008A 85*00         [ 3]  130 	sta	*___SDCC_m6502_ret2
   008C BD 02 01      [ 5]  131 	lda	0x102,x
   008F AA            [ 2]  132 	tax
   0090 86*00         [ 3]  133 	stx	*(__TEMP+0)
   0092 BA            [ 2]  134 	tsx
   0093 BD 01 01      [ 5]  135 	lda	0x101,x
   0096 08            [ 3]  136 	php
   0097 A6*00         [ 3]  137 	ldx	*(__TEMP+0)
   0099 28            [ 4]  138 	plp
   009A 4Cr64r01      [ 3]  139 	jmp	00104$
   009D                     140 00102$:
                            141 ;	../ceilf.c: 40: return (r+((r<x)?1:0));
   009D BA            [ 2]  142 	tsx
   009E BD 05 01      [ 5]  143 	lda	0x105,x
   00A1 8Dr00r00      [ 4]  144 	sta	___slong2fs_PARM_1
   00A4 BD 06 01      [ 5]  145 	lda	0x106,x
   00A7 8Dr01r00      [ 4]  146 	sta	(___slong2fs_PARM_1 + 1)
   00AA BD 07 01      [ 5]  147 	lda	0x107,x
   00AD 8Dr02r00      [ 4]  148 	sta	(___slong2fs_PARM_1 + 2)
   00B0 BD 08 01      [ 5]  149 	lda	0x108,x
   00B3 8Dr03r00      [ 4]  150 	sta	(___slong2fs_PARM_1 + 3)
   00B6 20r00r00      [ 6]  151 	jsr	___slong2fs
   00B9 8Dr00r00      [ 4]  152 	sta	___fslt_PARM_1
   00BC 8Er01r00      [ 4]  153 	stx	(___fslt_PARM_1 + 1)
   00BF A5*00         [ 3]  154 	lda	*___SDCC_m6502_ret2
   00C1 8Dr02r00      [ 4]  155 	sta	(___fslt_PARM_1 + 2)
   00C4 A5*00         [ 3]  156 	lda	*___SDCC_m6502_ret3
   00C6 8Dr03r00      [ 4]  157 	sta	(___fslt_PARM_1 + 3)
   00C9 BA            [ 2]  158 	tsx
   00CA BD 0B 01      [ 5]  159 	lda	0x10b,x
   00CD 8Dr00r00      [ 4]  160 	sta	___fslt_PARM_2
   00D0 BD 0C 01      [ 5]  161 	lda	0x10c,x
   00D3 8Dr01r00      [ 4]  162 	sta	(___fslt_PARM_2 + 1)
   00D6 BD 0D 01      [ 5]  163 	lda	0x10d,x
   00D9 8Dr02r00      [ 4]  164 	sta	(___fslt_PARM_2 + 2)
   00DC BD 0E 01      [ 5]  165 	lda	0x10e,x
   00DF 8Dr03r00      [ 4]  166 	sta	(___fslt_PARM_2 + 3)
   00E2 20r00r00      [ 6]  167 	jsr	___fslt
   00E5 C9 00         [ 2]  168 	cmp	#0x00
   00E7 F0 07         [ 4]  169 	beq	00106$
   00E9 A9 01         [ 2]  170 	lda	#0x01
   00EB A2 00         [ 2]  171 	ldx	#0x00
   00ED 4CrF3r00      [ 3]  172 	jmp	00107$
   00F0                     173 00106$:
   00F0 A9 00         [ 2]  174 	lda	#0x00
   00F2 AA            [ 2]  175 	tax
   00F3                     176 00107$:
   00F3 48            [ 3]  177 	pha
   00F4 8A            [ 2]  178 	txa
   00F5 BA            [ 2]  179 	tsx
   00F6 9D 03 01      [ 5]  180 	sta	0x103,x
   00F9 68            [ 4]  181 	pla
   00FA 9D 02 01      [ 5]  182 	sta	0x102,x
   00FD BD 03 01      [ 5]  183 	lda	0x103,x
   0100 0A            [ 2]  184 	asl	a
   0101 A9 00         [ 2]  185 	lda	#0x00
   0103 69 FF         [ 2]  186 	adc	#0xff
   0105 49 FF         [ 2]  187 	eor	#0xff
   0107 9D 04 01      [ 5]  188 	sta	0x104,x
   010A 9D 05 01      [ 5]  189 	sta	0x105,x
   010D BD 06 01      [ 5]  190 	lda	0x106,x
   0110 18            [ 2]  191 	clc
   0111 7D 02 01      [ 5]  192 	adc	0x102,x
   0114 8Dr00r00      [ 4]  193 	sta	___slong2fs_PARM_1
   0117 BD 07 01      [ 5]  194 	lda	0x107,x
   011A 7D 03 01      [ 5]  195 	adc	0x103,x
   011D 8Dr01r00      [ 4]  196 	sta	(___slong2fs_PARM_1 + 1)
   0120 BD 08 01      [ 5]  197 	lda	0x108,x
   0123 7D 04 01      [ 5]  198 	adc	0x104,x
   0126 8Dr02r00      [ 4]  199 	sta	(___slong2fs_PARM_1 + 2)
   0129 BD 09 01      [ 5]  200 	lda	0x109,x
   012C 7D 05 01      [ 5]  201 	adc	0x105,x
   012F 8Dr03r00      [ 4]  202 	sta	(___slong2fs_PARM_1 + 3)
   0132 20r00r00      [ 6]  203 	jsr	___slong2fs
   0135 86*00         [ 3]  204 	stx	*(__TEMP+0)
   0137 BA            [ 2]  205 	tsx
   0138 9D 01 01      [ 5]  206 	sta	0x101,x
   013B A6*00         [ 3]  207 	ldx	*(__TEMP+0)
   013D 8A            [ 2]  208 	txa
   013E BA            [ 2]  209 	tsx
   013F 9D 02 01      [ 5]  210 	sta	0x102,x
   0142 A6*00         [ 3]  211 	ldx	*(__TEMP+0)
   0144 A5*00         [ 3]  212 	lda	*___SDCC_m6502_ret2
   0146 BA            [ 2]  213 	tsx
   0147 9D 03 01      [ 5]  214 	sta	0x103,x
   014A A5*00         [ 3]  215 	lda	*___SDCC_m6502_ret3
   014C 9D 04 01      [ 5]  216 	sta	0x104, x
   014F 85*00         [ 3]  217 	sta	*___SDCC_m6502_ret3
   0151 BD 03 01      [ 5]  218 	lda	0x103,x
   0154 85*00         [ 3]  219 	sta	*___SDCC_m6502_ret2
   0156 BD 02 01      [ 5]  220 	lda	0x102,x
   0159 AA            [ 2]  221 	tax
   015A 86*00         [ 3]  222 	stx	*(__TEMP+0)
   015C BA            [ 2]  223 	tsx
   015D BD 01 01      [ 5]  224 	lda	0x101,x
   0160 08            [ 3]  225 	php
   0161 A6*00         [ 3]  226 	ldx	*(__TEMP+0)
   0163 28            [ 4]  227 	plp
   0164                     228 00104$:
                            229 ;	../ceilf.c: 41: }
   0164 85*00         [ 3]  230 	sta	*(__TEMP+0)
   0166 86*01         [ 3]  231 	stx	*(__TEMP+1)
   0168 BA            [ 2]  232 	tsx
   0169 8A            [ 2]  233 	txa
   016A 18            [ 2]  234 	clc
   016B 69 08         [ 2]  235 	adc	#0x08
   016D AA            [ 2]  236 	tax
   016E 9A            [ 2]  237 	txs
   016F A6*01         [ 3]  238 	ldx	*(__TEMP+1)
   0171 A5*00         [ 3]  239 	lda	*(__TEMP+0)
   0173 60            [ 6]  240 	rts
                            241 	.area CODE
                            242 	.area RODATA
                            243 	.area XINIT
                            244 	.area CABS    (ABS)
