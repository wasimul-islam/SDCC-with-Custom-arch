                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _memmove
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _memmove_PARM_3
                             12 	.globl _memmove_PARM_2
                             13 	.globl _memmove
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 	.area	OSEG    (PAG, OVR)
   0000                      22 _memmove_sloc0_1_0:
   0000                      23 	.ds 2
   0002                      24 _memmove_sloc1_1_0:
   0002                      25 	.ds 2
   0004                      26 _memmove_sloc2_1_0:
   0004                      27 	.ds 2
   0006                      28 _memmove_sloc3_1_0:
   0006                      29 	.ds 2
                             30 ;--------------------------------------------------------
                             31 ; uninitialized external ram data
                             32 ;--------------------------------------------------------
                             33 	.area BSS
   0000                      34 _memmove_PARM_2:
   0000                      35 	.ds 2
   0002                      36 _memmove_PARM_3:
   0002                      37 	.ds 2
   0004                      38 _memmove_dst_65536_26:
   0004                      39 	.ds 2
   0006                      40 _memmove_c_65536_27:
   0006                      41 	.ds 2
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area DABS    (ABS)
                             46 ;--------------------------------------------------------
                             47 ; initialized external ram data
                             48 ;--------------------------------------------------------
                             49 	.area DATA
                             50 ;--------------------------------------------------------
                             51 ; global & static initialisations
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 	.area GSINIT
                             55 	.area GSFINAL
                             56 	.area GSINIT
                             57 ;--------------------------------------------------------
                             58 ; Home
                             59 ;--------------------------------------------------------
                             60 	.area _CODE
                             61 	.area _CODE
                             62 ;--------------------------------------------------------
                             63 ; code
                             64 ;--------------------------------------------------------
                             65 	.area CODE
                             66 ;------------------------------------------------------------
                             67 ;Allocation info for local variables in function 'memmove'
                             68 ;------------------------------------------------------------
                             69 ;src                       Allocated with name '_memmove_PARM_2'
                             70 ;size                      Allocated with name '_memmove_PARM_3'
                             71 ;dst                       Allocated with name '_memmove_dst_65536_26'
                             72 ;c                         Allocated with name '_memmove_c_65536_27'
                             73 ;d                         Allocated to registers 
                             74 ;s                         Allocated to registers 
                             75 ;sloc0                     Allocated with name '_memmove_sloc0_1_0'
                             76 ;sloc1                     Allocated with name '_memmove_sloc1_1_0'
                             77 ;sloc2                     Allocated with name '_memmove_sloc2_1_0'
                             78 ;sloc3                     Allocated with name '_memmove_sloc3_1_0'
                             79 ;------------------------------------------------------------
                             80 ;	../_memmove.c: 35: void *memmove (void *dst, const void *src, size_t size)
                             81 ;	-----------------------------------------
                             82 ;	 function memmove
                             83 ;	-----------------------------------------
                             84 ;	Register assignment is optimal.
                             85 ;	Stack space usage: 0 bytes.
   0000                      86 _memmove:
   0000 8Dr04r00      [ 4]   87 	sta	_memmove_dst_65536_26
   0003 8Er05r00      [ 4]   88 	stx	(_memmove_dst_65536_26 + 1)
                             89 ;	../_memmove.c: 37: size_t c = size;
   0006 ADr02r00      [ 4]   90 	lda	_memmove_PARM_3
   0009 8Dr06r00      [ 4]   91 	sta	_memmove_c_65536_27
   000C ADr03r00      [ 4]   92 	lda	(_memmove_PARM_3 + 1)
                             93 ;	../_memmove.c: 38: if (c == 0 || dst == src)
   000F 8Dr07r00      [ 4]   94 	sta	(_memmove_c_65536_27 + 1)
   0012 0Dr06r00      [ 4]   95 	ora	_memmove_c_65536_27
   0015 F0 10         [ 4]   96 	beq	00101$
   0017 ADr04r00      [ 4]   97 	lda	_memmove_dst_65536_26
   001A CDr00r00      [ 4]   98 	cmp	_memmove_PARM_2
   001D D0 0F         [ 4]   99 	bne	00102$
   001F ADr05r00      [ 4]  100 	lda	(_memmove_dst_65536_26 + 1)
   0022 CDr01r00      [ 4]  101 	cmp	(_memmove_PARM_2 + 1)
   0025 D0 07         [ 4]  102 	bne	00102$
   0027                     103 00101$:
                            104 ;	../_memmove.c: 39: return dst;
   0027 AEr05r00      [ 4]  105 	ldx	(_memmove_dst_65536_26 + 1)
   002A ADr04r00      [ 4]  106 	lda	_memmove_dst_65536_26
   002D 60            [ 6]  107 	rts
   002E                     108 00102$:
                            109 ;	../_memmove.c: 41: char *d = dst;
   002E ADr04r00      [ 4]  110 	lda	_memmove_dst_65536_26
   0031 85*00         [ 3]  111 	sta	*_memmove_sloc0_1_0
   0033 ADr05r00      [ 4]  112 	lda	(_memmove_dst_65536_26 + 1)
   0036 85*01         [ 3]  113 	sta	*(_memmove_sloc0_1_0 + 1)
                            114 ;	../_memmove.c: 42: const char *s = src;
   0038 ADr00r00      [ 4]  115 	lda	_memmove_PARM_2
   003B AEr01r00      [ 4]  116 	ldx	(_memmove_PARM_2 + 1)
                            117 ;	../_memmove.c: 43: if (s < d) {
   003E 85*00         [ 3]  118 	sta	*(__TEMP+0)
   0040 38            [ 2]  119 	sec
   0041 E5*00         [ 3]  120 	sbc	*_memmove_sloc0_1_0
   0043 8A            [ 2]  121 	txa
   0044 E5*01         [ 3]  122 	sbc	*(_memmove_sloc0_1_0 + 1)
   0046 08            [ 3]  123 	php
   0047 A5*00         [ 3]  124 	lda	*(__TEMP+0)
   0049 28            [ 4]  125 	plp
   004A B0 55         [ 4]  126 	bcs	00119$
                            127 ;	../_memmove.c: 50: s += c;
   004C 18            [ 2]  128 	clc
   004D 6Dr06r00      [ 4]  129 	adc	_memmove_c_65536_27
   0050 85*02         [ 3]  130 	sta	*_memmove_sloc1_1_0
   0052 8A            [ 2]  131 	txa
   0053 6Dr07r00      [ 4]  132 	adc	(_memmove_c_65536_27 + 1)
   0056 85*03         [ 3]  133 	sta	*(_memmove_sloc1_1_0 + 1)
                            134 ;	../_memmove.c: 51: d += c;
   0058 A5*00         [ 3]  135 	lda	*_memmove_sloc0_1_0
   005A 18            [ 2]  136 	clc
   005B 6Dr06r00      [ 4]  137 	adc	_memmove_c_65536_27
   005E 85*04         [ 3]  138 	sta	*_memmove_sloc2_1_0
   0060 A5*01         [ 3]  139 	lda	*(_memmove_sloc0_1_0 + 1)
   0062 6Dr07r00      [ 4]  140 	adc	(_memmove_c_65536_27 + 1)
   0065 85*05         [ 3]  141 	sta	*(_memmove_sloc2_1_0 + 1)
                            142 ;	../_memmove.c: 52: do {
   0067 ADr06r00      [ 4]  143 	lda	_memmove_c_65536_27
   006A 85*06         [ 3]  144 	sta	*_memmove_sloc3_1_0
   006C ADr07r00      [ 4]  145 	lda	(_memmove_c_65536_27 + 1)
   006F 85*07         [ 3]  146 	sta	*(_memmove_sloc3_1_0 + 1)
   0071                     147 00104$:
                            148 ;	../_memmove.c: 53: *--d = *--s;
   0071 38            [ 2]  149 	sec
   0072 A5*04         [ 3]  150 	lda	*_memmove_sloc2_1_0
   0074 E9 01         [ 2]  151 	sbc	#0x01
   0076 85*04         [ 3]  152 	sta	*_memmove_sloc2_1_0
   0078 B0 02         [ 4]  153 	bcs	00147$
   007A C6*05         [ 5]  154 	dec	*(_memmove_sloc2_1_0 + 1)
   007C                     155 00147$:
   007C 38            [ 2]  156 	sec
   007D A5*02         [ 3]  157 	lda	*_memmove_sloc1_1_0
   007F E9 01         [ 2]  158 	sbc	#0x01
   0081 85*02         [ 3]  159 	sta	*_memmove_sloc1_1_0
   0083 B0 02         [ 4]  160 	bcs	00148$
   0085 C6*03         [ 5]  161 	dec	*(_memmove_sloc1_1_0 + 1)
   0087                     162 00148$:
   0087 A0 00         [ 2]  163 	ldy	#0x00
   0089 B1*02         [ 6]  164 	lda	[*_memmove_sloc1_1_0],y
   008B 91*04         [ 6]  165 	sta	[*_memmove_sloc2_1_0],y
                            166 ;	../_memmove.c: 54: } while (--c);
   008D 38            [ 2]  167 	sec
   008E A5*06         [ 3]  168 	lda	*_memmove_sloc3_1_0
   0090 E9 01         [ 2]  169 	sbc	#0x01
   0092 85*06         [ 3]  170 	sta	*_memmove_sloc3_1_0
   0094 B0 02         [ 4]  171 	bcs	00149$
   0096 C6*07         [ 5]  172 	dec	*(_memmove_sloc3_1_0 + 1)
   0098                     173 00149$:
   0098 A5*07         [ 3]  174 	lda	*(_memmove_sloc3_1_0 + 1)
   009A 05*06         [ 3]  175 	ora	*_memmove_sloc3_1_0
   009C D0 D3         [ 4]  176 	bne	00104$
   009E 4CrDAr00      [ 3]  177 	jmp	00112$
                            178 ;	../_memmove.c: 59: do {
   00A1                     179 00119$:
   00A1 85*06         [ 3]  180 	sta	*_memmove_sloc3_1_0
   00A3 86*07         [ 3]  181 	stx	*(_memmove_sloc3_1_0 + 1)
   00A5 A5*00         [ 3]  182 	lda	*_memmove_sloc0_1_0
   00A7 85*04         [ 3]  183 	sta	*_memmove_sloc2_1_0
   00A9 A5*01         [ 3]  184 	lda	*(_memmove_sloc0_1_0 + 1)
   00AB 85*05         [ 3]  185 	sta	*(_memmove_sloc2_1_0 + 1)
   00AD ADr06r00      [ 4]  186 	lda	_memmove_c_65536_27
   00B0 85*02         [ 3]  187 	sta	*_memmove_sloc1_1_0
   00B2 ADr07r00      [ 4]  188 	lda	(_memmove_c_65536_27 + 1)
   00B5 85*03         [ 3]  189 	sta	*(_memmove_sloc1_1_0 + 1)
   00B7                     190 00107$:
                            191 ;	../_memmove.c: 60: *d++ = *s++;
   00B7 A0 00         [ 2]  192 	ldy	#0x00
   00B9 B1*06         [ 6]  193 	lda	[*_memmove_sloc3_1_0],y
   00BB E6*06         [ 5]  194 	inc	*_memmove_sloc3_1_0
   00BD D0 02         [ 4]  195 	bne	00151$
   00BF E6*07         [ 5]  196 	inc	*(_memmove_sloc3_1_0 + 1)
   00C1                     197 00151$:
   00C1 91*04         [ 6]  198 	sta	[*_memmove_sloc2_1_0],y
   00C3 E6*04         [ 5]  199 	inc	*_memmove_sloc2_1_0
   00C5 D0 02         [ 4]  200 	bne	00152$
   00C7 E6*05         [ 5]  201 	inc	*(_memmove_sloc2_1_0 + 1)
   00C9                     202 00152$:
                            203 ;	../_memmove.c: 61: } while (--c);
   00C9 38            [ 2]  204 	sec
   00CA A5*02         [ 3]  205 	lda	*_memmove_sloc1_1_0
   00CC E9 01         [ 2]  206 	sbc	#0x01
   00CE 85*02         [ 3]  207 	sta	*_memmove_sloc1_1_0
   00D0 B0 02         [ 4]  208 	bcs	00153$
   00D2 C6*03         [ 5]  209 	dec	*(_memmove_sloc1_1_0 + 1)
   00D4                     210 00153$:
   00D4 A5*03         [ 3]  211 	lda	*(_memmove_sloc1_1_0 + 1)
   00D6 05*02         [ 3]  212 	ora	*_memmove_sloc1_1_0
   00D8 D0 DD         [ 4]  213 	bne	00107$
   00DA                     214 00112$:
                            215 ;	../_memmove.c: 65: return dst;
   00DA AEr05r00      [ 4]  216 	ldx	(_memmove_dst_65536_26 + 1)
   00DD ADr04r00      [ 4]  217 	lda	_memmove_dst_65536_26
                            218 ;	../_memmove.c: 66: }
   00E0 60            [ 6]  219 	rts
                            220 	.area CODE
                            221 	.area RODATA
                            222 	.area XINIT
                            223 	.area CABS    (ABS)
