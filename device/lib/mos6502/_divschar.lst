                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _divschar
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __divschar
                             12 	.globl __divuschar
                             13 	.globl __divsuchar
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
   0000                      18 __divschar_sloc0_1_0:
   0000                      19 	.ds 2
   0002                      20 __divuschar_sloc0_1_0:
   0002                      21 	.ds 2
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in ram
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; uninitialized external ram data
                             27 ;--------------------------------------------------------
                             28 	.area BSS
   0000                      29 __divsuchar_y_65536_5:
   0000                      30 	.ds 1
                             31 ;--------------------------------------------------------
                             32 ; absolute external ram data
                             33 ;--------------------------------------------------------
                             34 	.area DABS    (ABS)
                             35 ;--------------------------------------------------------
                             36 ; initialized external ram data
                             37 ;--------------------------------------------------------
                             38 	.area DATA
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 	.area GSINIT
                             44 	.area GSFINAL
                             45 	.area GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _CODE
                             50 	.area _CODE
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area CODE
                             55 ;------------------------------------------------------------
                             56 ;Allocation info for local variables in function '_divschar'
                             57 ;------------------------------------------------------------
                             58 ;sloc0                     Allocated with name '__divschar_sloc0_1_0'
                             59 ;y                         Allocated to registers x 
                             60 ;x                         Allocated to registers a 
                             61 ;------------------------------------------------------------
                             62 ;	../_divschar.c: 31: _divschar (signed char x, signed char y)
                             63 ;	-----------------------------------------
                             64 ;	 function _divschar
                             65 ;	-----------------------------------------
                             66 ;	Register assignment is optimal.
                             67 ;	Stack space usage: 0 bytes.
   0000                      68 __divschar:
                             69 ;	../_divschar.c: 33: return ((int)x / (int)y);
   0000 85*00         [ 3]   70 	sta	*__divschar_sloc0_1_0
   0002 0A            [ 2]   71 	asl	a
   0003 A9 00         [ 2]   72 	lda	#0x00
   0005 69 FF         [ 2]   73 	adc	#0xff
   0007 49 FF         [ 2]   74 	eor	#0xff
   0009 85*01         [ 3]   75 	sta	*(__divschar_sloc0_1_0 + 1)
   000B 8A            [ 2]   76 	txa
   000C 8Dr00r00      [ 4]   77 	sta	__divsint_PARM_2
   000F 0A            [ 2]   78 	asl	a
   0010 A9 00         [ 2]   79 	lda	#0x00
   0012 69 FF         [ 2]   80 	adc	#0xff
   0014 49 FF         [ 2]   81 	eor	#0xff
   0016 8Dr01r00      [ 4]   82 	sta	(__divsint_PARM_2 + 1)
   0019 A6*01         [ 3]   83 	ldx	*(__divschar_sloc0_1_0 + 1)
   001B A5*00         [ 3]   84 	lda	*__divschar_sloc0_1_0
                             85 ;	../_divschar.c: 34: }
   001D 4Cr00r00      [ 3]   86 	jmp	__divsint
                             87 ;------------------------------------------------------------
                             88 ;Allocation info for local variables in function '_divuschar'
                             89 ;------------------------------------------------------------
                             90 ;sloc0                     Allocated with name '__divuschar_sloc0_1_0'
                             91 ;y                         Allocated to registers x 
                             92 ;x                         Allocated to registers a 
                             93 ;------------------------------------------------------------
                             94 ;	../_divschar.c: 37: _divuschar (unsigned char x, unsigned char y)
                             95 ;	-----------------------------------------
                             96 ;	 function _divuschar
                             97 ;	-----------------------------------------
                             98 ;	Register assignment is optimal.
                             99 ;	Stack space usage: 0 bytes.
   0020                     100 __divuschar:
                            101 ;	../_divschar.c: 39: return ((int)((signed char)x) / (int)y);
   0020 85*02         [ 3]  102 	sta	*__divuschar_sloc0_1_0
   0022 0A            [ 2]  103 	asl	a
   0023 A9 00         [ 2]  104 	lda	#0x00
   0025 69 FF         [ 2]  105 	adc	#0xff
   0027 49 FF         [ 2]  106 	eor	#0xff
   0029 85*03         [ 3]  107 	sta	*(__divuschar_sloc0_1_0 + 1)
   002B 8Er00r00      [ 4]  108 	stx	__divsint_PARM_2
   002E A0 00         [ 2]  109 	ldy	#0x00
   0030 8Cr01r00      [ 4]  110 	sty	(__divsint_PARM_2 + 1)
   0033 A6*03         [ 3]  111 	ldx	*(__divuschar_sloc0_1_0 + 1)
   0035 A5*02         [ 3]  112 	lda	*__divuschar_sloc0_1_0
                            113 ;	../_divschar.c: 40: }
   0037 4Cr00r00      [ 3]  114 	jmp	__divsint
                            115 ;------------------------------------------------------------
                            116 ;Allocation info for local variables in function '_divsuchar'
                            117 ;------------------------------------------------------------
                            118 ;y                         Allocated with name '__divsuchar_y_65536_5'
                            119 ;x                         Allocated to registers a 
                            120 ;------------------------------------------------------------
                            121 ;	../_divschar.c: 43: _divsuchar (signed char x, signed char y)
                            122 ;	-----------------------------------------
                            123 ;	 function _divsuchar
                            124 ;	-----------------------------------------
                            125 ;	Register assignment is optimal.
                            126 ;	Stack space usage: 0 bytes.
   003A                     127 __divsuchar:
   003A 8Er00r00      [ 4]  128 	stx	__divsuchar_y_65536_5
                            129 ;	../_divschar.c: 45: return ((int)((unsigned char)x) / (int)y);
   003D A2 00         [ 2]  130 	ldx	#0x00
   003F 48            [ 3]  131 	pha
   0040 ADr00r00      [ 4]  132 	lda	__divsuchar_y_65536_5
   0043 8Dr00r00      [ 4]  133 	sta	__divsint_PARM_2
   0046 0A            [ 2]  134 	asl	a
   0047 8A            [ 2]  135 	txa
   0048 69 FF         [ 2]  136 	adc	#0xff
   004A 49 FF         [ 2]  137 	eor	#0xff
   004C 8Dr01r00      [ 4]  138 	sta	(__divsint_PARM_2 + 1)
   004F 68            [ 4]  139 	pla
                            140 ;	../_divschar.c: 46: }
   0050 4Cr00r00      [ 3]  141 	jmp	__divsint
                            142 	.area CODE
                            143 	.area RODATA
                            144 	.area XINIT
                            145 	.area CABS    (ABS)
