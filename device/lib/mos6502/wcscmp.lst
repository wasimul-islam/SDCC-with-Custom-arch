                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module wcscmp
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _wcscmp_PARM_2
                             12 	.globl _wcscmp
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 	.area	OSEG    (PAG, OVR)
   0000                      21 _wcscmp_sloc0_1_0:
   0000                      22 	.ds 2
   0002                      23 _wcscmp_sloc1_1_0:
   0002                      24 	.ds 2
   0004                      25 _wcscmp_sloc2_1_0:
   0004                      26 	.ds 4
   0008                      27 _wcscmp_sloc3_1_0:
   0008                      28 	.ds 4
                             29 ;--------------------------------------------------------
                             30 ; uninitialized external ram data
                             31 ;--------------------------------------------------------
                             32 	.area BSS
   0000                      33 _wcscmp_PARM_2:
   0000                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area DABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; initialized external ram data
                             41 ;--------------------------------------------------------
                             42 	.area DATA
                             43 ;--------------------------------------------------------
                             44 ; global & static initialisations
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 	.area GSINIT
                             48 	.area GSFINAL
                             49 	.area GSINIT
                             50 ;--------------------------------------------------------
                             51 ; Home
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 	.area _CODE
                             55 ;--------------------------------------------------------
                             56 ; code
                             57 ;--------------------------------------------------------
                             58 	.area CODE
                             59 ;------------------------------------------------------------
                             60 ;Allocation info for local variables in function 'wcscmp'
                             61 ;------------------------------------------------------------
                             62 ;s2                        Allocated with name '_wcscmp_PARM_2'
                             63 ;s1                        Allocated to registers 
                             64 ;sloc0                     Allocated with name '_wcscmp_sloc0_1_0'
                             65 ;sloc1                     Allocated with name '_wcscmp_sloc1_1_0'
                             66 ;sloc2                     Allocated with name '_wcscmp_sloc2_1_0'
                             67 ;sloc3                     Allocated with name '_wcscmp_sloc3_1_0'
                             68 ;------------------------------------------------------------
                             69 ;	../wcscmp.c: 31: int wcscmp(const wchar_t *s1, const wchar_t *s2)
                             70 ;	-----------------------------------------
                             71 ;	 function wcscmp
                             72 ;	-----------------------------------------
                             73 ;	Register assignment is optimal.
                             74 ;	Stack space usage: 0 bytes.
   0000                      75 _wcscmp:
   0000 85*00         [ 3]   76 	sta	*_wcscmp_sloc0_1_0
   0002 86*01         [ 3]   77 	stx	*(_wcscmp_sloc0_1_0 + 1)
                             78 ;	../wcscmp.c: 33: while(*s1 == *s2 && *s1)
   0004 ADr00r00      [ 4]   79 	lda	_wcscmp_PARM_2
   0007 85*02         [ 3]   80 	sta	*_wcscmp_sloc1_1_0
   0009 ADr01r00      [ 4]   81 	lda	(_wcscmp_PARM_2 + 1)
   000C 85*03         [ 3]   82 	sta	*(_wcscmp_sloc1_1_0 + 1)
   000E                      83 00102$:
   000E A0 00         [ 2]   84 	ldy	#0x00
   0010 B1*00         [ 6]   85 	lda	[*_wcscmp_sloc0_1_0],y
   0012 85*04         [ 3]   86 	sta	*_wcscmp_sloc2_1_0
   0014 C8            [ 2]   87 	iny
   0015 B1*00         [ 6]   88 	lda	[*_wcscmp_sloc0_1_0],y
   0017 85*05         [ 3]   89 	sta	*(_wcscmp_sloc2_1_0 + 1)
   0019 C8            [ 2]   90 	iny
   001A B1*00         [ 6]   91 	lda	[*_wcscmp_sloc0_1_0],y
   001C 85*06         [ 3]   92 	sta	*(_wcscmp_sloc2_1_0 + 2)
   001E C8            [ 2]   93 	iny
   001F B1*00         [ 6]   94 	lda	[*_wcscmp_sloc0_1_0],y
   0021 85*07         [ 3]   95 	sta	*(_wcscmp_sloc2_1_0 + 3)
   0023 A0 00         [ 2]   96 	ldy	#0x00
   0025 B1*02         [ 6]   97 	lda	[*_wcscmp_sloc1_1_0],y
   0027 85*08         [ 3]   98 	sta	*_wcscmp_sloc3_1_0
   0029 C8            [ 2]   99 	iny
   002A B1*02         [ 6]  100 	lda	[*_wcscmp_sloc1_1_0],y
   002C 85*09         [ 3]  101 	sta	*(_wcscmp_sloc3_1_0 + 1)
   002E C8            [ 2]  102 	iny
   002F B1*02         [ 6]  103 	lda	[*_wcscmp_sloc1_1_0],y
   0031 85*0A         [ 3]  104 	sta	*(_wcscmp_sloc3_1_0 + 2)
   0033 C8            [ 2]  105 	iny
   0034 B1*02         [ 6]  106 	lda	[*_wcscmp_sloc1_1_0],y
   0036 85*0B         [ 3]  107 	sta	*(_wcscmp_sloc3_1_0 + 3)
   0038 A5*04         [ 3]  108 	lda	*_wcscmp_sloc2_1_0
   003A C5*08         [ 3]  109 	cmp	*_wcscmp_sloc3_1_0
   003C D0 35         [ 4]  110 	bne	00104$
   003E A5*05         [ 3]  111 	lda	*(_wcscmp_sloc2_1_0 + 1)
   0040 C5*09         [ 3]  112 	cmp	*(_wcscmp_sloc3_1_0 + 1)
   0042 D0 2F         [ 4]  113 	bne	00104$
   0044 A5*06         [ 3]  114 	lda	*(_wcscmp_sloc2_1_0 + 2)
   0046 C5*0A         [ 3]  115 	cmp	*(_wcscmp_sloc3_1_0 + 2)
   0048 D0 29         [ 4]  116 	bne	00104$
   004A A5*07         [ 3]  117 	lda	*(_wcscmp_sloc2_1_0 + 3)
   004C C5*0B         [ 3]  118 	cmp	*(_wcscmp_sloc3_1_0 + 3)
   004E D0 23         [ 4]  119 	bne	00104$
   0050 A5*07         [ 3]  120 	lda	*(_wcscmp_sloc2_1_0 + 3)
   0052 05*06         [ 3]  121 	ora	*(_wcscmp_sloc2_1_0 + 2)
   0054 05*05         [ 3]  122 	ora	*(_wcscmp_sloc2_1_0 + 1)
   0056 05*04         [ 3]  123 	ora	*_wcscmp_sloc2_1_0
   0058 F0 19         [ 4]  124 	beq	00104$
                            125 ;	../wcscmp.c: 34: s1++, s2++;
   005A A5*00         [ 3]  126 	lda	*_wcscmp_sloc0_1_0
   005C 18            [ 2]  127 	clc
   005D 69 04         [ 2]  128 	adc	#0x04
   005F 85*00         [ 3]  129 	sta	*_wcscmp_sloc0_1_0
   0061 90 02         [ 4]  130 	bcc	00138$
   0063 E6*01         [ 5]  131 	inc	*(_wcscmp_sloc0_1_0 + 1)
   0065                     132 00138$:
   0065 A5*02         [ 3]  133 	lda	*_wcscmp_sloc1_1_0
   0067 18            [ 2]  134 	clc
   0068 69 04         [ 2]  135 	adc	#0x04
   006A 85*02         [ 3]  136 	sta	*_wcscmp_sloc1_1_0
   006C 90 A0         [ 4]  137 	bcc	00102$
   006E E6*03         [ 5]  138 	inc	*(_wcscmp_sloc1_1_0 + 1)
   0070 4Cr0Er00      [ 3]  139 	jmp	00102$
   0073                     140 00104$:
                            141 ;	../wcscmp.c: 36: if(*s1 < *s2)
   0073 A0 00         [ 2]  142 	ldy	#0x00
   0075 B1*00         [ 6]  143 	lda	[*_wcscmp_sloc0_1_0],y
   0077 85*08         [ 3]  144 	sta	*_wcscmp_sloc3_1_0
   0079 C8            [ 2]  145 	iny
   007A B1*00         [ 6]  146 	lda	[*_wcscmp_sloc0_1_0],y
   007C 85*09         [ 3]  147 	sta	*(_wcscmp_sloc3_1_0 + 1)
   007E C8            [ 2]  148 	iny
   007F B1*00         [ 6]  149 	lda	[*_wcscmp_sloc0_1_0],y
   0081 85*0A         [ 3]  150 	sta	*(_wcscmp_sloc3_1_0 + 2)
   0083 C8            [ 2]  151 	iny
   0084 B1*00         [ 6]  152 	lda	[*_wcscmp_sloc0_1_0],y
   0086 85*0B         [ 3]  153 	sta	*(_wcscmp_sloc3_1_0 + 3)
   0088 A0 00         [ 2]  154 	ldy	#0x00
   008A B1*02         [ 6]  155 	lda	[*_wcscmp_sloc1_1_0],y
   008C 85*04         [ 3]  156 	sta	*_wcscmp_sloc2_1_0
   008E C8            [ 2]  157 	iny
   008F B1*02         [ 6]  158 	lda	[*_wcscmp_sloc1_1_0],y
   0091 85*05         [ 3]  159 	sta	*(_wcscmp_sloc2_1_0 + 1)
   0093 C8            [ 2]  160 	iny
   0094 B1*02         [ 6]  161 	lda	[*_wcscmp_sloc1_1_0],y
   0096 85*06         [ 3]  162 	sta	*(_wcscmp_sloc2_1_0 + 2)
   0098 C8            [ 2]  163 	iny
   0099 B1*02         [ 6]  164 	lda	[*_wcscmp_sloc1_1_0],y
   009B 85*07         [ 3]  165 	sta	*(_wcscmp_sloc2_1_0 + 3)
   009D A5*08         [ 3]  166 	lda	*_wcscmp_sloc3_1_0
   009F 38            [ 2]  167 	sec
   00A0 E5*04         [ 3]  168 	sbc	*_wcscmp_sloc2_1_0
   00A2 A5*09         [ 3]  169 	lda	*(_wcscmp_sloc3_1_0 + 1)
   00A4 E5*05         [ 3]  170 	sbc	*(_wcscmp_sloc2_1_0 + 1)
   00A6 A5*0A         [ 3]  171 	lda	*(_wcscmp_sloc3_1_0 + 2)
   00A8 E5*06         [ 3]  172 	sbc	*(_wcscmp_sloc2_1_0 + 2)
   00AA A5*0B         [ 3]  173 	lda	*(_wcscmp_sloc3_1_0 + 3)
   00AC E5*07         [ 3]  174 	sbc	*(_wcscmp_sloc2_1_0 + 3)
   00AE B0 04         [ 4]  175 	bcs	00106$
                            176 ;	../wcscmp.c: 37: return(-1);
   00B0 A9 FF         [ 2]  177 	lda	#0xff
   00B2 AA            [ 2]  178 	tax
   00B3 60            [ 6]  179 	rts
   00B4                     180 00106$:
                            181 ;	../wcscmp.c: 38: if(*s1 > *s2)
   00B4 A5*04         [ 3]  182 	lda	*_wcscmp_sloc2_1_0
   00B6 38            [ 2]  183 	sec
   00B7 E5*08         [ 3]  184 	sbc	*_wcscmp_sloc3_1_0
   00B9 A5*05         [ 3]  185 	lda	*(_wcscmp_sloc2_1_0 + 1)
   00BB E5*09         [ 3]  186 	sbc	*(_wcscmp_sloc3_1_0 + 1)
   00BD A5*06         [ 3]  187 	lda	*(_wcscmp_sloc2_1_0 + 2)
   00BF E5*0A         [ 3]  188 	sbc	*(_wcscmp_sloc3_1_0 + 2)
   00C1 A5*07         [ 3]  189 	lda	*(_wcscmp_sloc2_1_0 + 3)
   00C3 E5*0B         [ 3]  190 	sbc	*(_wcscmp_sloc3_1_0 + 3)
   00C5 B0 05         [ 4]  191 	bcs	00108$
                            192 ;	../wcscmp.c: 39: return(1);
   00C7 A9 01         [ 2]  193 	lda	#0x01
   00C9 A2 00         [ 2]  194 	ldx	#0x00
   00CB 60            [ 6]  195 	rts
   00CC                     196 00108$:
                            197 ;	../wcscmp.c: 40: return(0);
   00CC A9 00         [ 2]  198 	lda	#0x00
   00CE AA            [ 2]  199 	tax
                            200 ;	../wcscmp.c: 41: }
   00CF 60            [ 6]  201 	rts
                            202 	.area CODE
                            203 	.area RODATA
                            204 	.area XINIT
                            205 	.area CABS    (ABS)
