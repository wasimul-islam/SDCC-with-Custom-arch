                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strchr
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strchr_PARM_2
                             12 	.globl _strchr
                             13 ;--------------------------------------------------------
                             14 ; ZP ram data
                             15 ;--------------------------------------------------------
                             16 	.area ZP      (PAG)
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in ram
                             19 ;--------------------------------------------------------
                             20 	.area	OSEG    (PAG, OVR)
   0000                      21 _strchr_sloc0_1_0:
   0000                      22 	.ds 2
                             23 ;--------------------------------------------------------
                             24 ; uninitialized external ram data
                             25 ;--------------------------------------------------------
                             26 	.area BSS
   0000                      27 _strchr_PARM_2:
   0000                      28 	.ds 1
                             29 ;--------------------------------------------------------
                             30 ; absolute external ram data
                             31 ;--------------------------------------------------------
                             32 	.area DABS    (ABS)
                             33 ;--------------------------------------------------------
                             34 ; initialized external ram data
                             35 ;--------------------------------------------------------
                             36 	.area DATA
                             37 ;--------------------------------------------------------
                             38 ; global & static initialisations
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 	.area GSINIT
                             42 	.area GSFINAL
                             43 	.area GSINIT
                             44 ;--------------------------------------------------------
                             45 ; Home
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 	.area _CODE
                             49 ;--------------------------------------------------------
                             50 ; code
                             51 ;--------------------------------------------------------
                             52 	.area CODE
                             53 ;------------------------------------------------------------
                             54 ;Allocation info for local variables in function 'strchr'
                             55 ;------------------------------------------------------------
                             56 ;ch                        Allocated with name '_strchr_PARM_2'
                             57 ;string                    Allocated to registers 
                             58 ;sloc0                     Allocated with name '_strchr_sloc0_1_0'
                             59 ;------------------------------------------------------------
                             60 ;	../_strchr.c: 34: char * strchr ( const char * string, char ch )
                             61 ;	-----------------------------------------
                             62 ;	 function strchr
                             63 ;	-----------------------------------------
                             64 ;	Register assignment is optimal.
                             65 ;	Stack space usage: 0 bytes.
   0000                      66 _strchr:
   0000 85*00         [ 3]   67 	sta	*_strchr_sloc0_1_0
   0002 86*01         [ 3]   68 	stx	*(_strchr_sloc0_1_0 + 1)
                             69 ;	../_strchr.c: 39: while (*string && *string != (char)ch)
   0004                      70 00102$:
   0004 A0 00         [ 2]   71 	ldy	#0x00
   0006 B1*00         [ 6]   72 	lda	[*_strchr_sloc0_1_0],y
   0008 F0 0E         [ 4]   73 	beq	00104$
   000A CDr00r00      [ 4]   74 	cmp	_strchr_PARM_2
   000D F0 09         [ 4]   75 	beq	00104$
                             76 ;	../_strchr.c: 40: string++;
   000F E6*00         [ 5]   77 	inc	*_strchr_sloc0_1_0
   0011 D0 F1         [ 4]   78 	bne	00102$
   0013 E6*01         [ 5]   79 	inc	*(_strchr_sloc0_1_0 + 1)
   0015 4Cr04r00      [ 3]   80 	jmp	00102$
   0018                      81 00104$:
                             82 ;	../_strchr.c: 42: if (*string == (char)ch)
   0018 A0 00         [ 2]   83 	ldy	#0x00
   001A B1*00         [ 6]   84 	lda	[*_strchr_sloc0_1_0],y
   001C CDr00r00      [ 4]   85 	cmp	_strchr_PARM_2
   001F D0 05         [ 4]   86 	bne	00106$
                             87 ;	../_strchr.c: 43: return((char *)string);
   0021 A6*01         [ 3]   88 	ldx	*(_strchr_sloc0_1_0 + 1)
   0023 A5*00         [ 3]   89 	lda	*_strchr_sloc0_1_0
   0025 60            [ 6]   90 	rts
   0026                      91 00106$:
                             92 ;	../_strchr.c: 44: return ( NULL );
   0026 A9 00         [ 2]   93 	lda	#0x00
   0028 AA            [ 2]   94 	tax
                             95 ;	../_strchr.c: 45: }
   0029 60            [ 6]   96 	rts
                             97 	.area CODE
                             98 	.area RODATA
                             99 	.area XINIT
                            100 	.area CABS    (ABS)
