                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module mbrtoc16
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _mbrtowc
                             12 	.globl _mbrtoc16_PARM_4
                             13 	.globl _mbrtoc16_PARM_3
                             14 	.globl _mbrtoc16_PARM_2
                             15 	.globl _mbrtoc16
                             16 ;--------------------------------------------------------
                             17 ; ZP ram data
                             18 ;--------------------------------------------------------
                             19 	.area ZP      (PAG)
   0000                      20 _mbrtoc16_sloc0_1_0:
   0000                      21 	.ds 2
   0002                      22 _mbrtoc16_sloc1_1_0:
   0002                      23 	.ds 4
                             24 ;--------------------------------------------------------
                             25 ; overlayable items in ram
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; uninitialized external ram data
                             29 ;--------------------------------------------------------
                             30 	.area BSS
   0000                      31 _mbrtoc16_PARM_2:
   0000                      32 	.ds 2
   0002                      33 _mbrtoc16_PARM_3:
   0002                      34 	.ds 2
   0004                      35 _mbrtoc16_PARM_4:
   0004                      36 	.ds 2
   0006                      37 _mbrtoc16_pc16_65536_15:
   0006                      38 	.ds 2
   0008                      39 _mbrtoc16_codepoint_65536_16:
   0008                      40 	.ds 4
   000C                      41 _mbrtoc16_ret_65536_16:
   000C                      42 	.ds 2
   000E                      43 _mbrtoc16_sps_65536_16:
   000E                      44 	.ds 3
   0011                      45 _mbrtoc16_low_surrogate_65536_16:
   0011                      46 	.ds 2
                             47 ;--------------------------------------------------------
                             48 ; absolute external ram data
                             49 ;--------------------------------------------------------
                             50 	.area DABS    (ABS)
                             51 ;--------------------------------------------------------
                             52 ; initialized external ram data
                             53 ;--------------------------------------------------------
                             54 	.area DATA
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area _CODE
                             59 	.area GSINIT
                             60 	.area GSFINAL
                             61 	.area GSINIT
                             62 ;--------------------------------------------------------
                             63 ; Home
                             64 ;--------------------------------------------------------
                             65 	.area _CODE
                             66 	.area _CODE
                             67 ;--------------------------------------------------------
                             68 ; code
                             69 ;--------------------------------------------------------
                             70 	.area CODE
                             71 ;------------------------------------------------------------
                             72 ;Allocation info for local variables in function 'mbrtoc16'
                             73 ;------------------------------------------------------------
                             74 ;sloc0                     Allocated with name '_mbrtoc16_sloc0_1_0'
                             75 ;sloc1                     Allocated with name '_mbrtoc16_sloc1_1_0'
                             76 ;s                         Allocated with name '_mbrtoc16_PARM_2'
                             77 ;n                         Allocated with name '_mbrtoc16_PARM_3'
                             78 ;ps                        Allocated with name '_mbrtoc16_PARM_4'
                             79 ;pc16                      Allocated with name '_mbrtoc16_pc16_65536_15'
                             80 ;codepoint                 Allocated with name '_mbrtoc16_codepoint_65536_16'
                             81 ;ret                       Allocated with name '_mbrtoc16_ret_65536_16'
                             82 ;sps                       Allocated with name '_mbrtoc16_sps_65536_16'
                             83 ;low_surrogate             Allocated with name '_mbrtoc16_low_surrogate_65536_16'
                             84 ;------------------------------------------------------------
                             85 ;	../mbrtoc16.c: 34: size_t mbrtoc16(char16_t *restrict pc16, const char *restrict s, size_t n, mbstate_t *restrict ps)
                             86 ;	-----------------------------------------
                             87 ;	 function mbrtoc16
                             88 ;	-----------------------------------------
                             89 ;	Register assignment is optimal.
                             90 ;	Stack space usage: 0 bytes.
   0000                      91 _mbrtoc16:
   0000 8Dr06r00      [ 4]   92 	sta	_mbrtoc16_pc16_65536_15
   0003 8Er07r00      [ 4]   93 	stx	(_mbrtoc16_pc16_65536_15 + 1)
                             94 ;	../mbrtoc16.c: 41: if(!s)
   0006 ADr01r00      [ 4]   95 	lda	(_mbrtoc16_PARM_2 + 1)
   0009 0Dr00r00      [ 4]   96 	ora	_mbrtoc16_PARM_2
   000C D0 17         [ 4]   97 	bne	00102$
                             98 ;	../mbrtoc16.c: 42: return(mbrtoc16(0, "", 1, ps));
   000E A9r00         [ 2]   99 	lda	#___str_0
   0010 8Dr00r00      [ 4]  100 	sta	_mbrtoc16_PARM_2
   0013 A9s00         [ 2]  101 	lda	#>___str_0
   0015 8Dr01r00      [ 4]  102 	sta	(_mbrtoc16_PARM_2 + 1)
   0018 A2 01         [ 2]  103 	ldx	#0x01
   001A 8Er02r00      [ 4]  104 	stx	_mbrtoc16_PARM_3
   001D CA            [ 2]  105 	dex
   001E 8Er03r00      [ 4]  106 	stx	(_mbrtoc16_PARM_3 + 1)
   0021 8A            [ 2]  107 	txa
   0022 4Cr00r00      [ 3]  108 	jmp	_mbrtoc16
   0025                     109 00102$:
                            110 ;	../mbrtoc16.c: 44: if(!ps)
   0025 ADr05r00      [ 4]  111 	lda	(_mbrtoc16_PARM_4 + 1)
   0028 0Dr04r00      [ 4]  112 	ora	_mbrtoc16_PARM_4
   002B D0 0A         [ 4]  113 	bne	00104$
                            114 ;	../mbrtoc16.c: 45: ps = &sps;
   002D A9r0E         [ 2]  115 	lda	#_mbrtoc16_sps_65536_16
   002F 8Dr04r00      [ 4]  116 	sta	_mbrtoc16_PARM_4
   0032 A9s00         [ 2]  117 	lda	#>_mbrtoc16_sps_65536_16
   0034 8Dr05r00      [ 4]  118 	sta	(_mbrtoc16_PARM_4 + 1)
   0037                     119 00104$:
                            120 ;	../mbrtoc16.c: 47: if(!ps->c[0] && (ps->c[1] || ps->c[2]))
   0037 ADr04r00      [ 4]  121 	lda	_mbrtoc16_PARM_4
   003A 85*00         [ 3]  122 	sta	*_mbrtoc16_sloc0_1_0
   003C ADr05r00      [ 4]  123 	lda	(_mbrtoc16_PARM_4 + 1)
   003F 85*01         [ 3]  124 	sta	*(_mbrtoc16_sloc0_1_0 + 1)
   0041 A0 00         [ 2]  125 	ldy	#0x00
   0043 B1*00         [ 6]  126 	lda	[*_mbrtoc16_sloc0_1_0],y
   0045 F0 03         [ 4]  127 	beq	00159$
   0047 4CrCDr00      [ 3]  128 	jmp	00108$
   004A                     129 00159$:
   004A A5*00         [ 3]  130 	lda	*_mbrtoc16_sloc0_1_0
   004C A6*01         [ 3]  131 	ldx	*(_mbrtoc16_sloc0_1_0 + 1)
   004E 85*00         [ 3]  132 	sta	*(__DPTR+0)
   0050 86*01         [ 3]  133 	stx	*(__DPTR+1)
   0052 C8            [ 2]  134 	iny
   0053 B1*00         [ 6]  135 	lda	[__DPTR],y
   0055 D0 0D         [ 4]  136 	bne	00107$
   0057 A5*00         [ 3]  137 	lda	*_mbrtoc16_sloc0_1_0
   0059 A6*01         [ 3]  138 	ldx	*(_mbrtoc16_sloc0_1_0 + 1)
   005B 85*00         [ 3]  139 	sta	*(__DPTR+0)
   005D 86*01         [ 3]  140 	stx	*(__DPTR+1)
   005F C8            [ 2]  141 	iny
   0060 B1*00         [ 6]  142 	lda	[__DPTR],y
   0062 F0 69         [ 4]  143 	beq	00108$
   0064                     144 00107$:
                            145 ;	../mbrtoc16.c: 49: if(pc16)
   0064 ADr07r00      [ 4]  146 	lda	(_mbrtoc16_pc16_65536_15 + 1)
   0067 0Dr06r00      [ 4]  147 	ora	_mbrtoc16_pc16_65536_15
   006A F0 45         [ 4]  148 	beq	00106$
                            149 ;	../mbrtoc16.c: 50: *pc16 = ps->c[1] + (ps->c[2] << 8);
   006C ADr04r00      [ 4]  150 	lda	_mbrtoc16_PARM_4
   006F AEr05r00      [ 4]  151 	ldx	(_mbrtoc16_PARM_4 + 1)
   0072 85*00         [ 3]  152 	sta	*_mbrtoc16_sloc0_1_0
   0074 86*01         [ 3]  153 	stx	*(_mbrtoc16_sloc0_1_0 + 1)
   0076 85*00         [ 3]  154 	sta	*(__TEMP+0)
   0078 A0 01         [ 2]  155 	ldy	#0x01
   007A B1*00         [ 6]  156 	lda	[*_mbrtoc16_sloc0_1_0],y
   007C A8            [ 2]  157 	tay
   007D A5*00         [ 3]  158 	lda	*(__TEMP+0)
   007F 84*00         [ 3]  159 	sty	*_mbrtoc16_sloc0_1_0
   0081 48            [ 3]  160 	pha
   0082 A9 00         [ 2]  161 	lda	#0x00
   0084 85*01         [ 3]  162 	sta	*(_mbrtoc16_sloc0_1_0 + 1)
   0086 68            [ 4]  163 	pla
   0087 85*00         [ 3]  164 	sta	*(__DPTR+0)
   0089 86*01         [ 3]  165 	stx	*(__DPTR+1)
   008B A0 02         [ 2]  166 	ldy	#0x02
   008D B1*00         [ 6]  167 	lda	[__DPTR],y
   008F AA            [ 2]  168 	tax
   0090 A9 00         [ 2]  169 	lda	#0x00
   0092 18            [ 2]  170 	clc
   0093 65*00         [ 3]  171 	adc	*_mbrtoc16_sloc0_1_0
   0095 48            [ 3]  172 	pha
   0096 8A            [ 2]  173 	txa
   0097 65*01         [ 3]  174 	adc	*(_mbrtoc16_sloc0_1_0 + 1)
   0099 AA            [ 2]  175 	tax
   009A 68            [ 4]  176 	pla
   009B 85*00         [ 3]  177 	sta	*(__TEMP+0)
   009D ADr06r00      [ 4]  178 	lda	_mbrtoc16_pc16_65536_15
   00A0 85*00         [ 3]  179 	sta	*(__DPTR+0)
   00A2 ADr07r00      [ 4]  180 	lda	(_mbrtoc16_pc16_65536_15 + 1)
   00A5 85*01         [ 3]  181 	sta	*(__DPTR+1)
   00A7 A5*00         [ 3]  182 	lda	*(__TEMP+0)
   00A9 A0 00         [ 2]  183 	ldy	#0x00
   00AB 91*00         [ 6]  184 	sta	[__DPTR],y
   00AD 8A            [ 2]  185 	txa
   00AE C8            [ 2]  186 	iny
   00AF 91*00         [ 6]  187 	sta	[__DPTR],y
   00B1                     188 00106$:
                            189 ;	../mbrtoc16.c: 51: ps->c[1] = ps->c[2] = 0;
   00B1 ADr04r00      [ 4]  190 	lda	_mbrtoc16_PARM_4
   00B4 AEr05r00      [ 4]  191 	ldx	(_mbrtoc16_PARM_4 + 1)
   00B7 85*00         [ 3]  192 	sta	*_mbrtoc16_sloc0_1_0
   00B9 86*01         [ 3]  193 	stx	*(_mbrtoc16_sloc0_1_0 + 1)
   00BB 85*00         [ 3]  194 	sta	*(__DPTR+0)
   00BD 86*01         [ 3]  195 	stx	*(__DPTR+1)
   00BF A9 00         [ 2]  196 	lda	#0x00
   00C1 A0 02         [ 2]  197 	ldy	#0x02
   00C3 91*00         [ 6]  198 	sta	[__DPTR],y
   00C5 88            [ 2]  199 	dey
   00C6 91*00         [ 6]  200 	sta	[*_mbrtoc16_sloc0_1_0],y
                            201 ;	../mbrtoc16.c: 52: return(-3);
   00C8 A9 FD         [ 2]  202 	lda	#0xfd
   00CA A2 FF         [ 2]  203 	ldx	#0xff
   00CC 60            [ 6]  204 	rts
   00CD                     205 00108$:
                            206 ;	../mbrtoc16.c: 55: ret = mbrtowc(&codepoint, s, n, ps);
   00CD ADr00r00      [ 4]  207 	lda	_mbrtoc16_PARM_2
   00D0 8Dr00r00      [ 4]  208 	sta	_mbrtowc_PARM_2
   00D3 ADr01r00      [ 4]  209 	lda	(_mbrtoc16_PARM_2 + 1)
   00D6 8Dr01r00      [ 4]  210 	sta	(_mbrtowc_PARM_2 + 1)
   00D9 ADr02r00      [ 4]  211 	lda	_mbrtoc16_PARM_3
   00DC 8Dr00r00      [ 4]  212 	sta	_mbrtowc_PARM_3
   00DF ADr03r00      [ 4]  213 	lda	(_mbrtoc16_PARM_3 + 1)
   00E2 8Dr01r00      [ 4]  214 	sta	(_mbrtowc_PARM_3 + 1)
   00E5 ADr04r00      [ 4]  215 	lda	_mbrtoc16_PARM_4
   00E8 8Dr00r00      [ 4]  216 	sta	_mbrtowc_PARM_4
   00EB ADr05r00      [ 4]  217 	lda	(_mbrtoc16_PARM_4 + 1)
   00EE 8Dr01r00      [ 4]  218 	sta	(_mbrtowc_PARM_4 + 1)
   00F1 A2s00         [ 2]  219 	ldx	#>_mbrtoc16_codepoint_65536_16
   00F3 A9r08         [ 2]  220 	lda	#_mbrtoc16_codepoint_65536_16
   00F5 20r00r00      [ 6]  221 	jsr	_mbrtowc
   00F8 8Dr0Cr00      [ 4]  222 	sta	_mbrtoc16_ret_65536_16
   00FB 8Er0Dr00      [ 4]  223 	stx	(_mbrtoc16_ret_65536_16 + 1)
                            224 ;	../mbrtoc16.c: 57: if(ret > MB_LEN_MAX)
   00FE A9 04         [ 2]  225 	lda	#0x04
   0100 38            [ 2]  226 	sec
   0101 EDr0Cr00      [ 4]  227 	sbc	_mbrtoc16_ret_65536_16
   0104 A9 00         [ 2]  228 	lda	#0x00
   0106 EDr0Dr00      [ 4]  229 	sbc	(_mbrtoc16_ret_65536_16 + 1)
   0109 B0 07         [ 4]  230 	bcs	00112$
                            231 ;	../mbrtoc16.c: 58: return(ret);
   010B AEr0Dr00      [ 4]  232 	ldx	(_mbrtoc16_ret_65536_16 + 1)
   010E ADr0Cr00      [ 4]  233 	lda	_mbrtoc16_ret_65536_16
   0111 60            [ 6]  234 	rts
   0112                     235 00112$:
                            236 ;	../mbrtoc16.c: 60: if (codepoint <= 0xffff) // Basic multilingual plane
   0112 A9 FF         [ 2]  237 	lda	#0xff
   0114 38            [ 2]  238 	sec
   0115 EDr08r00      [ 4]  239 	sbc	_mbrtoc16_codepoint_65536_16
   0118 A9 FF         [ 2]  240 	lda	#0xff
   011A EDr09r00      [ 4]  241 	sbc	(_mbrtoc16_codepoint_65536_16 + 1)
   011D A9 00         [ 2]  242 	lda	#0x00
   011F EDr0Ar00      [ 4]  243 	sbc	(_mbrtoc16_codepoint_65536_16 + 2)
   0122 A9 00         [ 2]  244 	lda	#0x00
   0124 EDr0Br00      [ 4]  245 	sbc	(_mbrtoc16_codepoint_65536_16 + 3)
   0127 90 2B         [ 4]  246 	bcc	00116$
                            247 ;	../mbrtoc16.c: 62: if(pc16)
   0129 ADr07r00      [ 4]  248 	lda	(_mbrtoc16_pc16_65536_15 + 1)
   012C 0Dr06r00      [ 4]  249 	ora	_mbrtoc16_pc16_65536_15
   012F F0 1C         [ 4]  250 	beq	00114$
                            251 ;	../mbrtoc16.c: 63: *pc16 = codepoint;
   0131 ADr08r00      [ 4]  252 	lda	_mbrtoc16_codepoint_65536_16
   0134 AEr09r00      [ 4]  253 	ldx	(_mbrtoc16_codepoint_65536_16 + 1)
   0137 85*00         [ 3]  254 	sta	*(__TEMP+0)
   0139 ADr06r00      [ 4]  255 	lda	_mbrtoc16_pc16_65536_15
   013C 85*00         [ 3]  256 	sta	*(__DPTR+0)
   013E ADr07r00      [ 4]  257 	lda	(_mbrtoc16_pc16_65536_15 + 1)
   0141 85*01         [ 3]  258 	sta	*(__DPTR+1)
   0143 A5*00         [ 3]  259 	lda	*(__TEMP+0)
   0145 A0 00         [ 2]  260 	ldy	#0x00
   0147 91*00         [ 6]  261 	sta	[__DPTR],y
   0149 8A            [ 2]  262 	txa
   014A C8            [ 2]  263 	iny
   014B 91*00         [ 6]  264 	sta	[__DPTR],y
   014D                     265 00114$:
                            266 ;	../mbrtoc16.c: 64: return(ret);
   014D AEr0Dr00      [ 4]  267 	ldx	(_mbrtoc16_ret_65536_16 + 1)
   0150 ADr0Cr00      [ 4]  268 	lda	_mbrtoc16_ret_65536_16
   0153 60            [ 6]  269 	rts
   0154                     270 00116$:
                            271 ;	../mbrtoc16.c: 67: codepoint -= 0x100000;
   0154 ADr08r00      [ 4]  272 	lda	_mbrtoc16_codepoint_65536_16
   0157 38            [ 2]  273 	sec
   0158 E9 00         [ 2]  274 	sbc	#0x00
   015A 8Dr08r00      [ 4]  275 	sta	_mbrtoc16_codepoint_65536_16
   015D ADr09r00      [ 4]  276 	lda	(_mbrtoc16_codepoint_65536_16 + 1)
   0160 E9 00         [ 2]  277 	sbc	#0x00
   0162 8Dr09r00      [ 4]  278 	sta	(_mbrtoc16_codepoint_65536_16 + 1)
   0165 ADr0Ar00      [ 4]  279 	lda	(_mbrtoc16_codepoint_65536_16 + 2)
   0168 E9 10         [ 2]  280 	sbc	#0x10
   016A 8Dr0Ar00      [ 4]  281 	sta	(_mbrtoc16_codepoint_65536_16 + 2)
   016D ADr0Br00      [ 4]  282 	lda	(_mbrtoc16_codepoint_65536_16 + 3)
   0170 E9 00         [ 2]  283 	sbc	#0x00
   0172 8Dr0Br00      [ 4]  284 	sta	(_mbrtoc16_codepoint_65536_16 + 3)
                            285 ;	../mbrtoc16.c: 68: if(pc16)
   0175 ADr07r00      [ 4]  286 	lda	(_mbrtoc16_pc16_65536_15 + 1)
   0178 0Dr06r00      [ 4]  287 	ora	_mbrtoc16_pc16_65536_15
   017B F0 55         [ 4]  288 	beq	00118$
                            289 ;	../mbrtoc16.c: 69: *pc16 = ((codepoint >> 10) & 0x3ff) + 0xd800;
   017D ADr09r00      [ 4]  290 	lda	(_mbrtoc16_codepoint_65536_16 + 1)
   0180 AEr0Ar00      [ 4]  291 	ldx	(_mbrtoc16_codepoint_65536_16 + 2)
   0183 86*00         [ 3]  292 	stx	*(__TEMP+0)
   0185 46*00         [ 5]  293 	lsr	*(__TEMP+0)
   0187 6A            [ 2]  294 	ror	a
   0188 46*00         [ 5]  295 	lsr	*(__TEMP+0)
   018A 6A            [ 2]  296 	ror	a
   018B A6*00         [ 3]  297 	ldx	*(__TEMP+0)
   018D 85*02         [ 3]  298 	sta	*_mbrtoc16_sloc1_1_0
   018F 86*03         [ 3]  299 	stx	*(_mbrtoc16_sloc1_1_0 + 1)
   0191 AEr0Br00      [ 4]  300 	ldx	(_mbrtoc16_codepoint_65536_16 + 3)
   0194 A9 00         [ 2]  301 	lda	#0x00
   0196 86*00         [ 3]  302 	stx	*(__TEMP+0)
   0198 46*00         [ 5]  303 	lsr	*(__TEMP+0)
   019A 6A            [ 2]  304 	ror	a
   019B 46*00         [ 5]  305 	lsr	*(__TEMP+0)
   019D 6A            [ 2]  306 	ror	a
   019E A6*00         [ 3]  307 	ldx	*(__TEMP+0)
   01A0 05*03         [ 3]  308 	ora	*(_mbrtoc16_sloc1_1_0 + 1)
   01A2 85*03         [ 3]  309 	sta	*(_mbrtoc16_sloc1_1_0 + 1)
   01A4 86*04         [ 3]  310 	stx	*(_mbrtoc16_sloc1_1_0 + 2)
   01A6 A0 00         [ 2]  311 	ldy	#0x00
   01A8 84*05         [ 3]  312 	sty	*(_mbrtoc16_sloc1_1_0 + 3)
   01AA A5*02         [ 3]  313 	lda	*_mbrtoc16_sloc1_1_0
   01AC A6*03         [ 3]  314 	ldx	*(_mbrtoc16_sloc1_1_0 + 1)
   01AE 85*00         [ 3]  315 	sta	*(__TEMP+0)
   01B0 8A            [ 2]  316 	txa
   01B1 29 03         [ 2]  317 	and	#0x03
   01B3 AA            [ 2]  318 	tax
   01B4 A5*00         [ 3]  319 	lda	*(__TEMP+0)
   01B6 18            [ 2]  320 	clc
   01B7 48            [ 3]  321 	pha
   01B8 8A            [ 2]  322 	txa
   01B9 18            [ 2]  323 	clc
   01BA 69 D8         [ 2]  324 	adc	#0xd8
   01BC AA            [ 2]  325 	tax
   01BD 68            [ 4]  326 	pla
   01BE 85*00         [ 3]  327 	sta	*(__TEMP+0)
   01C0 ADr06r00      [ 4]  328 	lda	_mbrtoc16_pc16_65536_15
   01C3 85*00         [ 3]  329 	sta	*(__DPTR+0)
   01C5 ADr07r00      [ 4]  330 	lda	(_mbrtoc16_pc16_65536_15 + 1)
   01C8 85*01         [ 3]  331 	sta	*(__DPTR+1)
   01CA A5*00         [ 3]  332 	lda	*(__TEMP+0)
   01CC 91*00         [ 6]  333 	sta	[__DPTR],y
   01CE 8A            [ 2]  334 	txa
   01CF C8            [ 2]  335 	iny
   01D0 91*00         [ 6]  336 	sta	[__DPTR],y
   01D2                     337 00118$:
                            338 ;	../mbrtoc16.c: 70: low_surrogate = (codepoint & 0x3ff) + 0xdc00;
   01D2 ADr08r00      [ 4]  339 	lda	_mbrtoc16_codepoint_65536_16
   01D5 AEr09r00      [ 4]  340 	ldx	(_mbrtoc16_codepoint_65536_16 + 1)
   01D8 85*00         [ 3]  341 	sta	*(__TEMP+0)
   01DA 8A            [ 2]  342 	txa
   01DB 29 03         [ 2]  343 	and	#0x03
   01DD AA            [ 2]  344 	tax
   01DE A5*00         [ 3]  345 	lda	*(__TEMP+0)
   01E0 18            [ 2]  346 	clc
   01E1 8Dr11r00      [ 4]  347 	sta	_mbrtoc16_low_surrogate_65536_16
   01E4 8A            [ 2]  348 	txa
   01E5 18            [ 2]  349 	clc
   01E6 69 DC         [ 2]  350 	adc	#0xdc
   01E8 8Dr12r00      [ 4]  351 	sta	(_mbrtoc16_low_surrogate_65536_16 + 1)
                            352 ;	../mbrtoc16.c: 71: ps->c[0] = 0;
   01EB ADr04r00      [ 4]  353 	lda	_mbrtoc16_PARM_4
   01EE 85*02         [ 3]  354 	sta	*_mbrtoc16_sloc1_1_0
   01F0 ADr05r00      [ 4]  355 	lda	(_mbrtoc16_PARM_4 + 1)
   01F3 85*03         [ 3]  356 	sta	*(_mbrtoc16_sloc1_1_0 + 1)
   01F5 A9 00         [ 2]  357 	lda	#0x00
   01F7 A8            [ 2]  358 	tay
   01F8 91*02         [ 6]  359 	sta	[*_mbrtoc16_sloc1_1_0],y
                            360 ;	../mbrtoc16.c: 72: ps->c[1] = low_surrogate & 0xff;
   01FA A5*02         [ 3]  361 	lda	*_mbrtoc16_sloc1_1_0
   01FC 85*00         [ 3]  362 	sta	*_mbrtoc16_sloc0_1_0
   01FE A5*03         [ 3]  363 	lda	*(_mbrtoc16_sloc1_1_0 + 1)
   0200 85*01         [ 3]  364 	sta	*(_mbrtoc16_sloc0_1_0 + 1)
   0202 ADr11r00      [ 4]  365 	lda	_mbrtoc16_low_surrogate_65536_16
   0205 C8            [ 2]  366 	iny
   0206 91*00         [ 6]  367 	sta	[*_mbrtoc16_sloc0_1_0],y
                            368 ;	../mbrtoc16.c: 73: ps->c[2] = low_surrogate >> 8;
   0208 ADr12r00      [ 4]  369 	lda	(_mbrtoc16_low_surrogate_65536_16 + 1)
   020B C8            [ 2]  370 	iny
   020C 91*02         [ 6]  371 	sta	[*_mbrtoc16_sloc1_1_0],y
                            372 ;	../mbrtoc16.c: 75: return(ret);
   020E AEr0Dr00      [ 4]  373 	ldx	(_mbrtoc16_ret_65536_16 + 1)
   0211 ADr0Cr00      [ 4]  374 	lda	_mbrtoc16_ret_65536_16
                            375 ;	../mbrtoc16.c: 76: }
   0214 60            [ 6]  376 	rts
                            377 	.area CODE
                            378 	.area RODATA
                            379 	.area RODATA
   0000                     380 ___str_0:
   0000 00                  381 	.db 0x00
                            382 	.area CODE
                            383 	.area XINIT
                            384 	.area CABS    (ABS)
