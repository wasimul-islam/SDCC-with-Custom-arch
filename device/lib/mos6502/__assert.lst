                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module __assert
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___assert
                             12 	.globl _printf
                             13 	.globl ___assert_PARM_4
                             14 	.globl ___assert_PARM_3
                             15 	.globl ___assert_PARM_2
                             16 ;--------------------------------------------------------
                             17 ; ZP ram data
                             18 ;--------------------------------------------------------
                             19 	.area ZP      (PAG)
                             20 ;--------------------------------------------------------
                             21 ; overlayable items in ram
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; uninitialized external ram data
                             25 ;--------------------------------------------------------
                             26 	.area BSS
   0000                      27 ___assert_PARM_2:
   0000                      28 	.ds 2
   0002                      29 ___assert_PARM_3:
   0002                      30 	.ds 2
   0004                      31 ___assert_PARM_4:
   0004                      32 	.ds 2
   0006                      33 ___assert_expression_65536_46:
   0006                      34 	.ds 2
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area DABS    (ABS)
                             39 ;--------------------------------------------------------
                             40 ; initialized external ram data
                             41 ;--------------------------------------------------------
                             42 	.area DATA
                             43 ;--------------------------------------------------------
                             44 ; global & static initialisations
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 	.area GSINIT
                             48 	.area GSFINAL
                             49 	.area GSINIT
                             50 ;--------------------------------------------------------
                             51 ; Home
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 	.area _CODE
                             55 ;--------------------------------------------------------
                             56 ; code
                             57 ;--------------------------------------------------------
                             58 	.area CODE
                             59 ;------------------------------------------------------------
                             60 ;Allocation info for local variables in function '__assert'
                             61 ;------------------------------------------------------------
                             62 ;functionname              Allocated with name '___assert_PARM_2'
                             63 ;filename                  Allocated with name '___assert_PARM_3'
                             64 ;linenumber                Allocated with name '___assert_PARM_4'
                             65 ;expression                Allocated with name '___assert_expression_65536_46'
                             66 ;------------------------------------------------------------
                             67 ;	../__assert.c: 32: void __assert(const char *expression, const char *functionname, const char *filename, unsigned int linenumber)
                             68 ;	-----------------------------------------
                             69 ;	 function __assert
                             70 ;	-----------------------------------------
                             71 ;	Register assignment is optimal.
                             72 ;	Stack space usage: 0 bytes.
   0000                      73 ___assert:
   0000 8Dr06r00      [ 4]   74 	sta	___assert_expression_65536_46
   0003 8Er07r00      [ 4]   75 	stx	(___assert_expression_65536_46 + 1)
                             76 ;	../__assert.c: 34: printf("Assert(%s) failed in function %s at line %u in file %s.\n",
   0006 ADr03r00      [ 4]   77 	lda	(___assert_PARM_3 + 1)
   0009 48            [ 3]   78 	pha
   000A ADr02r00      [ 4]   79 	lda	___assert_PARM_3
   000D 48            [ 3]   80 	pha
   000E ADr05r00      [ 4]   81 	lda	(___assert_PARM_4 + 1)
   0011 48            [ 3]   82 	pha
   0012 ADr04r00      [ 4]   83 	lda	___assert_PARM_4
   0015 48            [ 3]   84 	pha
   0016 ADr01r00      [ 4]   85 	lda	(___assert_PARM_2 + 1)
   0019 48            [ 3]   86 	pha
   001A ADr00r00      [ 4]   87 	lda	___assert_PARM_2
   001D 48            [ 3]   88 	pha
   001E ADr07r00      [ 4]   89 	lda	(___assert_expression_65536_46 + 1)
   0021 48            [ 3]   90 	pha
   0022 ADr06r00      [ 4]   91 	lda	___assert_expression_65536_46
   0025 48            [ 3]   92 	pha
   0026 A9s00         [ 2]   93 	lda	#>___str_0
   0028 48            [ 3]   94 	pha
   0029 A9r00         [ 2]   95 	lda	#___str_0
   002B 48            [ 3]   96 	pha
   002C 20r00r00      [ 6]   97 	jsr	_printf
   002F 85*00         [ 3]   98 	sta	*(__TEMP+0)
   0031 86*01         [ 3]   99 	stx	*(__TEMP+1)
   0033 BA            [ 2]  100 	tsx
   0034 8A            [ 2]  101 	txa
   0035 18            [ 2]  102 	clc
   0036 69 0A         [ 2]  103 	adc	#0x0a
   0038 AA            [ 2]  104 	tax
   0039 9A            [ 2]  105 	txs
   003A A6*01         [ 3]  106 	ldx	*(__TEMP+1)
   003C A5*00         [ 3]  107 	lda	*(__TEMP+0)
   003E                     108 00103$:
   003E 4Cr3Er00      [ 3]  109 	jmp	00103$
                            110 ;	../__assert.c: 37: }
   0041 60            [ 6]  111 	rts
                            112 	.area CODE
                            113 	.area RODATA
                            114 	.area RODATA
   0000                     115 ___str_0:
   0000 41 73 73 65 72 74   116 	.ascii "Assert(%s) failed in function %s at line %u in file %s."
        28 25 73 29 20 66
        61 69 6C 65 64 20
        69 6E 20 66 75 6E
        63 74 69 6F 6E 20
        25 73 20 61 74 20
        6C 69 6E 65 20 25
        75 20 69 6E 20 66
        69 6C 65 20 25 73
        2E
   0037 0A                  117 	.db 0x0a
   0038 00                  118 	.db 0x00
                            119 	.area CODE
                            120 	.area XINIT
                            121 	.area CABS    (ABS)
