                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _rlulonglong
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __rlulonglong_PARM_2
                             12 	.globl __rlulonglong_PARM_1
                             13 	.globl __rlulonglong
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
                             18 ;--------------------------------------------------------
                             19 ; overlayable items in ram
                             20 ;--------------------------------------------------------
                             21 	.area	OSEG    (PAG, OVR)
   0000                      22 __rlulonglong_sloc0_1_0:
   0000                      23 	.ds 4
   0004                      24 __rlulonglong_sloc1_1_0:
   0004                      25 	.ds 1
   0005                      26 __rlulonglong_sloc2_1_0:
   0005                      27 	.ds 4
                             28 ;--------------------------------------------------------
                             29 ; uninitialized external ram data
                             30 ;--------------------------------------------------------
                             31 	.area BSS
   0000                      32 __rlulonglong_PARM_1:
   0000                      33 	.ds 8
   0008                      34 __rlulonglong_PARM_2:
   0008                      35 	.ds 1
                             36 ;--------------------------------------------------------
                             37 ; absolute external ram data
                             38 ;--------------------------------------------------------
                             39 	.area DABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; initialized external ram data
                             42 ;--------------------------------------------------------
                             43 	.area DATA
                             44 ;--------------------------------------------------------
                             45 ; global & static initialisations
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 	.area GSINIT
                             49 	.area GSFINAL
                             50 	.area GSINIT
                             51 ;--------------------------------------------------------
                             52 ; Home
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 	.area _CODE
                             56 ;--------------------------------------------------------
                             57 ; code
                             58 ;--------------------------------------------------------
                             59 	.area CODE
                             60 ;------------------------------------------------------------
                             61 ;Allocation info for local variables in function '_rlulonglong'
                             62 ;------------------------------------------------------------
                             63 ;l                         Allocated with name '__rlulonglong_PARM_1'
                             64 ;s                         Allocated with name '__rlulonglong_PARM_2'
                             65 ;top                       Allocated to registers 
                             66 ;middle                    Allocated to registers 
                             67 ;bottom                    Allocated to registers 
                             68 ;b                         Allocated to registers 
                             69 ;sloc0                     Allocated with name '__rlulonglong_sloc0_1_0'
                             70 ;sloc1                     Allocated with name '__rlulonglong_sloc1_1_0'
                             71 ;sloc2                     Allocated with name '__rlulonglong_sloc2_1_0'
                             72 ;------------------------------------------------------------
                             73 ;	../_rlulonglong.c: 67: unsigned long long _rlulonglong(unsigned long long l, char s) __SDCC_NONBANKED
                             74 ;	-----------------------------------------
                             75 ;	 function _rlulonglong
                             76 ;	-----------------------------------------
                             77 ;	Register assignment is optimal.
                             78 ;	Stack space usage: 0 bytes.
   0000                      79 __rlulonglong:
                             80 ;	../_rlulonglong.c: 69: uint32_t *const top = (uint32_t *)((char *)(&l) + 4);
                             81 ;	../_rlulonglong.c: 70: uint16_t *const middle = (uint16_t *)((char *)(&l) + 2);
                             82 ;	../_rlulonglong.c: 71: uint32_t *const bottom = (uint32_t *)(&l);
                             83 ;	../_rlulonglong.c: 72: uint16_t *const b = (uint16_t *)(&l);
                             84 ;	../_rlulonglong.c: 82: (*top) <<= s;
   0000                      85 00103$:
                             86 ;	../_rlulonglong.c: 74: for(;s >= 16; s-= 16)
   0000 ADr08r00      [ 4]   87 	lda	__rlulonglong_PARM_2
   0003 C9 10         [ 2]   88 	cmp	#0x10
   0005 90 38         [ 4]   89 	bcc	00101$
                             90 ;	../_rlulonglong.c: 76: b[3] = b[2];
   0007 AEr05r00      [ 4]   91 	ldx	((__rlulonglong_PARM_1 + 0x0004) + 1)
   000A ADr04r00      [ 4]   92 	lda	(__rlulonglong_PARM_1 + 0x0004)
   000D 8Er07r00      [ 4]   93 	stx	((__rlulonglong_PARM_1 + 0x0006) + 1)
   0010 8Dr06r00      [ 4]   94 	sta	(__rlulonglong_PARM_1 + 0x0006)
                             95 ;	../_rlulonglong.c: 77: b[2] = b[1];
   0013 AEr03r00      [ 4]   96 	ldx	((__rlulonglong_PARM_1 + 0x0002) + 1)
   0016 ADr02r00      [ 4]   97 	lda	(__rlulonglong_PARM_1 + 0x0002)
   0019 8Er05r00      [ 4]   98 	stx	((__rlulonglong_PARM_1 + 0x0004) + 1)
   001C 8Dr04r00      [ 4]   99 	sta	(__rlulonglong_PARM_1 + 0x0004)
                            100 ;	../_rlulonglong.c: 78: b[1] = b[0];
   001F AEr01r00      [ 4]  101 	ldx	(__rlulonglong_PARM_1 + 1)
   0022 ADr00r00      [ 4]  102 	lda	__rlulonglong_PARM_1
   0025 8Er03r00      [ 4]  103 	stx	((__rlulonglong_PARM_1 + 0x0002) + 1)
   0028 8Dr02r00      [ 4]  104 	sta	(__rlulonglong_PARM_1 + 0x0002)
                            105 ;	../_rlulonglong.c: 79: b[0] = 0;
   002B A2 00         [ 2]  106 	ldx	#0x00
   002D 8Er01r00      [ 4]  107 	stx	(__rlulonglong_PARM_1 + 1)
   0030 8Er00r00      [ 4]  108 	stx	__rlulonglong_PARM_1
                            109 ;	../_rlulonglong.c: 74: for(;s >= 16; s-= 16)
   0033 ADr08r00      [ 4]  110 	lda	__rlulonglong_PARM_2
   0036 38            [ 2]  111 	sec
   0037 E9 10         [ 2]  112 	sbc	#0x10
   0039 8Dr08r00      [ 4]  113 	sta	__rlulonglong_PARM_2
   003C 4Cr00r00      [ 3]  114 	jmp	00103$
   003F                     115 00101$:
                            116 ;	../_rlulonglong.c: 82: (*top) <<= s;
   003F ADr07r00      [ 4]  117 	lda	((__rlulonglong_PARM_1 + 0x0004) + 3)
   0042 85*03         [ 3]  118 	sta	*(__rlulonglong_sloc0_1_0 + 3)
   0044 ADr06r00      [ 4]  119 	lda	((__rlulonglong_PARM_1 + 0x0004) + 2)
   0047 85*02         [ 3]  120 	sta	*(__rlulonglong_sloc0_1_0 + 2)
   0049 ADr05r00      [ 4]  121 	lda	((__rlulonglong_PARM_1 + 0x0004) + 1)
   004C 85*01         [ 3]  122 	sta	*(__rlulonglong_sloc0_1_0 + 1)
   004E ADr04r00      [ 4]  123 	lda	(__rlulonglong_PARM_1 + 0x0004)
   0051 85*00         [ 3]  124 	sta	*__rlulonglong_sloc0_1_0
   0053 ADr08r00      [ 4]  125 	lda	__rlulonglong_PARM_2
   0056 85*04         [ 3]  126 	sta	*__rlulonglong_sloc1_1_0
   0058 A4*04         [ 3]  127 	ldy	*__rlulonglong_sloc1_1_0
   005A F0 0B         [ 4]  128 	beq	00117$
   005C                     129 00116$:
   005C 06*00         [ 5]  130 	asl	*__rlulonglong_sloc0_1_0
   005E 26*01         [ 5]  131 	rol	*(__rlulonglong_sloc0_1_0 + 1)
   0060 26*02         [ 5]  132 	rol	*(__rlulonglong_sloc0_1_0 + 2)
   0062 26*03         [ 5]  133 	rol	*(__rlulonglong_sloc0_1_0 + 3)
   0064 88            [ 2]  134 	dey
   0065 D0 F5         [ 4]  135 	bne	00116$
   0067                     136 00117$:
   0067 A5*03         [ 3]  137 	lda	*(__rlulonglong_sloc0_1_0 + 3)
   0069 8Dr07r00      [ 4]  138 	sta	((__rlulonglong_PARM_1 + 0x0004) + 3)
   006C A5*02         [ 3]  139 	lda	*(__rlulonglong_sloc0_1_0 + 2)
   006E 8Dr06r00      [ 4]  140 	sta	((__rlulonglong_PARM_1 + 0x0004) + 2)
   0071 A5*01         [ 3]  141 	lda	*(__rlulonglong_sloc0_1_0 + 1)
   0073 8Dr05r00      [ 4]  142 	sta	((__rlulonglong_PARM_1 + 0x0004) + 1)
   0076 A5*00         [ 3]  143 	lda	*__rlulonglong_sloc0_1_0
   0078 8Dr04r00      [ 4]  144 	sta	(__rlulonglong_PARM_1 + 0x0004)
                            145 ;	../_rlulonglong.c: 83: (*top) |= (((uint32_t)((*middle) & 0xffffu) << s) >> 16);
   007B AEr03r00      [ 4]  146 	ldx	((__rlulonglong_PARM_1 + 0x0002) + 1)
   007E ADr02r00      [ 4]  147 	lda	(__rlulonglong_PARM_1 + 0x0002)
   0081 85*05         [ 3]  148 	sta	*__rlulonglong_sloc2_1_0
   0083 86*06         [ 3]  149 	stx	*(__rlulonglong_sloc2_1_0 + 1)
   0085 A0 00         [ 2]  150 	ldy	#0x00
   0087 84*07         [ 3]  151 	sty	*(__rlulonglong_sloc2_1_0 + 2)
   0089 84*08         [ 3]  152 	sty	*(__rlulonglong_sloc2_1_0 + 3)
   008B A4*04         [ 3]  153 	ldy	*__rlulonglong_sloc1_1_0
   008D F0 0B         [ 4]  154 	beq	00119$
   008F                     155 00118$:
   008F 06*05         [ 5]  156 	asl	*__rlulonglong_sloc2_1_0
   0091 26*06         [ 5]  157 	rol	*(__rlulonglong_sloc2_1_0 + 1)
   0093 26*07         [ 5]  158 	rol	*(__rlulonglong_sloc2_1_0 + 2)
   0095 26*08         [ 5]  159 	rol	*(__rlulonglong_sloc2_1_0 + 3)
   0097 88            [ 2]  160 	dey
   0098 D0 F5         [ 4]  161 	bne	00118$
   009A                     162 00119$:
   009A A5*07         [ 3]  163 	lda	*(__rlulonglong_sloc2_1_0 + 2)
   009C A6*08         [ 3]  164 	ldx	*(__rlulonglong_sloc2_1_0 + 3)
   009E 85*05         [ 3]  165 	sta	*__rlulonglong_sloc2_1_0
   00A0 86*06         [ 3]  166 	stx	*(__rlulonglong_sloc2_1_0 + 1)
   00A2 A0 00         [ 2]  167 	ldy	#0x00
   00A4 84*07         [ 3]  168 	sty	*(__rlulonglong_sloc2_1_0 + 2)
   00A6 84*08         [ 3]  169 	sty	*(__rlulonglong_sloc2_1_0 + 3)
   00A8 A5*00         [ 3]  170 	lda	*__rlulonglong_sloc0_1_0
   00AA 05*05         [ 3]  171 	ora	*__rlulonglong_sloc2_1_0
   00AC 85*05         [ 3]  172 	sta	*__rlulonglong_sloc2_1_0
   00AE A5*01         [ 3]  173 	lda	*(__rlulonglong_sloc0_1_0 + 1)
   00B0 05*06         [ 3]  174 	ora	*(__rlulonglong_sloc2_1_0 + 1)
   00B2 85*06         [ 3]  175 	sta	*(__rlulonglong_sloc2_1_0 + 1)
   00B4 A5*02         [ 3]  176 	lda	*(__rlulonglong_sloc0_1_0 + 2)
   00B6 05*07         [ 3]  177 	ora	*(__rlulonglong_sloc2_1_0 + 2)
   00B8 85*07         [ 3]  178 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   00BA A5*03         [ 3]  179 	lda	*(__rlulonglong_sloc0_1_0 + 3)
   00BC 05*08         [ 3]  180 	ora	*(__rlulonglong_sloc2_1_0 + 3)
   00BE 85*08         [ 3]  181 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   00C0 8Dr07r00      [ 4]  182 	sta	((__rlulonglong_PARM_1 + 0x0004) + 3)
   00C3 A5*07         [ 3]  183 	lda	*(__rlulonglong_sloc2_1_0 + 2)
   00C5 8Dr06r00      [ 4]  184 	sta	((__rlulonglong_PARM_1 + 0x0004) + 2)
   00C8 A5*06         [ 3]  185 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   00CA 8Dr05r00      [ 4]  186 	sta	((__rlulonglong_PARM_1 + 0x0004) + 1)
   00CD A5*05         [ 3]  187 	lda	*__rlulonglong_sloc2_1_0
   00CF 8Dr04r00      [ 4]  188 	sta	(__rlulonglong_PARM_1 + 0x0004)
                            189 ;	../_rlulonglong.c: 84: (*bottom) <<= s;
   00D2 ADr03r00      [ 4]  190 	lda	(__rlulonglong_PARM_1 + 3)
   00D5 85*08         [ 3]  191 	sta	*(__rlulonglong_sloc2_1_0 + 3)
   00D7 ADr02r00      [ 4]  192 	lda	(__rlulonglong_PARM_1 + 2)
   00DA 85*07         [ 3]  193 	sta	*(__rlulonglong_sloc2_1_0 + 2)
   00DC ADr01r00      [ 4]  194 	lda	(__rlulonglong_PARM_1 + 1)
   00DF 85*06         [ 3]  195 	sta	*(__rlulonglong_sloc2_1_0 + 1)
   00E1 ADr00r00      [ 4]  196 	lda	__rlulonglong_PARM_1
   00E4 85*05         [ 3]  197 	sta	*__rlulonglong_sloc2_1_0
   00E6 A4*04         [ 3]  198 	ldy	*__rlulonglong_sloc1_1_0
   00E8 F0 0B         [ 4]  199 	beq	00121$
   00EA                     200 00120$:
   00EA 06*05         [ 5]  201 	asl	*__rlulonglong_sloc2_1_0
   00EC 26*06         [ 5]  202 	rol	*(__rlulonglong_sloc2_1_0 + 1)
   00EE 26*07         [ 5]  203 	rol	*(__rlulonglong_sloc2_1_0 + 2)
   00F0 26*08         [ 5]  204 	rol	*(__rlulonglong_sloc2_1_0 + 3)
   00F2 88            [ 2]  205 	dey
   00F3 D0 F5         [ 4]  206 	bne	00120$
   00F5                     207 00121$:
   00F5 A5*08         [ 3]  208 	lda	*(__rlulonglong_sloc2_1_0 + 3)
   00F7 8Dr03r00      [ 4]  209 	sta	(__rlulonglong_PARM_1 + 3)
   00FA A5*07         [ 3]  210 	lda	*(__rlulonglong_sloc2_1_0 + 2)
   00FC 8Dr02r00      [ 4]  211 	sta	(__rlulonglong_PARM_1 + 2)
   00FF A5*06         [ 3]  212 	lda	*(__rlulonglong_sloc2_1_0 + 1)
   0101 8Dr01r00      [ 4]  213 	sta	(__rlulonglong_PARM_1 + 1)
   0104 A5*05         [ 3]  214 	lda	*__rlulonglong_sloc2_1_0
   0106 8Dr00r00      [ 4]  215 	sta	__rlulonglong_PARM_1
                            216 ;	../_rlulonglong.c: 86: return(l);
   0109 ADr07r00      [ 4]  217 	lda	(__rlulonglong_PARM_1 + 7)
   010C 85*00         [ 3]  218 	sta	*___SDCC_m6502_ret7
   010E ADr06r00      [ 4]  219 	lda	(__rlulonglong_PARM_1 + 6)
   0111 85*00         [ 3]  220 	sta	*___SDCC_m6502_ret6
   0113 ADr05r00      [ 4]  221 	lda	(__rlulonglong_PARM_1 + 5)
   0116 85*00         [ 3]  222 	sta	*___SDCC_m6502_ret5
   0118 ADr04r00      [ 4]  223 	lda	(__rlulonglong_PARM_1 + 4)
   011B 85*00         [ 3]  224 	sta	*___SDCC_m6502_ret4
   011D ADr03r00      [ 4]  225 	lda	(__rlulonglong_PARM_1 + 3)
   0120 85*00         [ 3]  226 	sta	*___SDCC_m6502_ret3
   0122 ADr02r00      [ 4]  227 	lda	(__rlulonglong_PARM_1 + 2)
   0125 85*00         [ 3]  228 	sta	*___SDCC_m6502_ret2
   0127 AEr01r00      [ 4]  229 	ldx	(__rlulonglong_PARM_1 + 1)
   012A ADr00r00      [ 4]  230 	lda	__rlulonglong_PARM_1
                            231 ;	../_rlulonglong.c: 87: }
   012D 60            [ 6]  232 	rts
                            233 	.area CODE
                            234 	.area RODATA
                            235 	.area XINIT
                            236 	.area CABS    (ABS)
