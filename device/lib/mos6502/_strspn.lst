                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ISO C Compiler 
                              3 ; Version 4.2.14 #0 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _strspn
                              6 	.optsdcc -mmos6502
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strchr
                             12 	.globl _strspn_PARM_2
                             13 	.globl _strspn
                             14 ;--------------------------------------------------------
                             15 ; ZP ram data
                             16 ;--------------------------------------------------------
                             17 	.area ZP      (PAG)
   0000                      18 _strspn_count_65536_27:
   0000                      19 	.ds 2
   0002                      20 _strspn_sloc0_1_0:
   0002                      21 	.ds 2
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in ram
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; uninitialized external ram data
                             27 ;--------------------------------------------------------
                             28 	.area BSS
   0000                      29 _strspn_PARM_2:
   0000                      30 	.ds 2
                             31 ;--------------------------------------------------------
                             32 ; absolute external ram data
                             33 ;--------------------------------------------------------
                             34 	.area DABS    (ABS)
                             35 ;--------------------------------------------------------
                             36 ; initialized external ram data
                             37 ;--------------------------------------------------------
                             38 	.area DATA
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 	.area GSINIT
                             44 	.area GSFINAL
                             45 	.area GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _CODE
                             50 	.area _CODE
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area CODE
                             55 ;------------------------------------------------------------
                             56 ;Allocation info for local variables in function 'strspn'
                             57 ;------------------------------------------------------------
                             58 ;count                     Allocated with name '_strspn_count_65536_27'
                             59 ;ch                        Allocated to registers x 
                             60 ;sloc0                     Allocated with name '_strspn_sloc0_1_0'
                             61 ;control                   Allocated with name '_strspn_PARM_2'
                             62 ;string                    Allocated to registers 
                             63 ;------------------------------------------------------------
                             64 ;	../_strspn.c: 31: size_t strspn ( const char * string, const char * control )
                             65 ;	-----------------------------------------
                             66 ;	 function strspn
                             67 ;	-----------------------------------------
                             68 ;	Register assignment is optimal.
                             69 ;	Stack space usage: 0 bytes.
   0000                      70 _strspn:
   0000 85*02         [ 3]   71 	sta	*_strspn_sloc0_1_0
   0002 86*03         [ 3]   72 	stx	*(_strspn_sloc0_1_0 + 1)
                             73 ;	../_strspn.c: 36: while (ch = *string) {
   0004 A2 00         [ 2]   74 	ldx	#0x00
   0006 86*00         [ 3]   75 	stx	*_strspn_count_65536_27
   0008 86*01         [ 3]   76 	stx	*(_strspn_count_65536_27 + 1)
   000A                      77 00104$:
   000A A0 00         [ 2]   78 	ldy	#0x00
   000C B1*02         [ 6]   79 	lda	[*_strspn_sloc0_1_0],y
   000E AA            [ 2]   80 	tax
   000F C9 00         [ 2]   81 	cmp	#0x00
   0011 F0 23         [ 4]   82 	beq	00106$
                             83 ;	../_strspn.c: 37: if ( strchr(control,ch) )
   0013 8Er00r00      [ 4]   84 	stx	_strchr_PARM_2
   0016 AEr01r00      [ 4]   85 	ldx	(_strspn_PARM_2 + 1)
   0019 ADr00r00      [ 4]   86 	lda	_strspn_PARM_2
   001C 20r00r00      [ 6]   87 	jsr	_strchr
   001F C9 00         [ 2]   88 	cmp	#0x00
   0021 D0 02         [ 4]   89 	bne	00123$
   0023 E0 00         [ 2]   90 	cpx	#0x00
   0025                      91 00123$:
   0025 F0 0F         [ 4]   92 	beq	00106$
                             93 ;	../_strspn.c: 38: count++ ;
   0027 E6*00         [ 5]   94 	inc	*_strspn_count_65536_27
   0029 D0 02         [ 4]   95 	bne	00125$
   002B E6*01         [ 5]   96 	inc	*(_strspn_count_65536_27 + 1)
   002D                      97 00125$:
                             98 ;	../_strspn.c: 41: string++ ;
   002D E6*02         [ 5]   99 	inc	*_strspn_sloc0_1_0
   002F D0 D9         [ 4]  100 	bne	00104$
   0031 E6*03         [ 5]  101 	inc	*(_strspn_sloc0_1_0 + 1)
   0033 4Cr0Ar00      [ 3]  102 	jmp	00104$
   0036                     103 00106$:
                            104 ;	../_strspn.c: 44: return count ;
   0036 A6*01         [ 3]  105 	ldx	*(_strspn_count_65536_27 + 1)
   0038 A5*00         [ 3]  106 	lda	*_strspn_count_65536_27
                            107 ;	../_strspn.c: 45: }
   003A 60            [ 6]  108 	rts
                            109 	.area CODE
                            110 	.area RODATA
                            111 	.area XINIT
                            112 	.area CABS    (ABS)
