                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _mullong
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __mullong
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_mullong'
                                     91 ;------------------------------------------------------------
                                     92 ;b                         Allocated to stack - _bp -6
                                     93 ;a                         Allocated to stack - _bp +1
                                     94 ;t                         Allocated to stack - _bp +9
                                     95 ;sloc0                     Allocated to stack - _bp +5
                                     96 ;------------------------------------------------------------
                                     97 ;	_mullong.c:743: _mullong (long a, long b) __SDCC_NONBANKED
                                     98 ;	-----------------------------------------
                                     99 ;	 function _mullong
                                    100 ;	-----------------------------------------
      000000                        101 __mullong:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 C0 82            [24]  112 	push	dpl
      000007 C0 83            [24]  113 	push	dph
      000009 C0 F0            [24]  114 	push	b
      00000B C0 E0            [24]  115 	push	acc
      00000D E5 81            [12]  116 	mov	a,sp
      00000F 24 08            [12]  117 	add	a,#0x08
      000011 F5 81            [12]  118 	mov	sp,a
                                    119 ;	_mullong.c:747: t.i.hi = bcast(a)->b.b0 * bcast(b)->b.b2;           // A
      000013 E5*00            [12]  120 	mov	a,_bp
      000015 24 09            [12]  121 	add	a,#0x09
      000017 F9               [12]  122 	mov	r1,a
      000018 24 02            [12]  123 	add	a,#0x02
      00001A F8               [12]  124 	mov	r0,a
      00001B AF*00            [24]  125 	mov	r7,_bp
      00001D 0F               [12]  126 	inc	r7
      00001E 8F 06            [24]  127 	mov	ar6,r7
      000020 C0 00            [24]  128 	push	ar0
      000022 A8 06            [24]  129 	mov	r0,ar6
      000024 86 06            [24]  130 	mov	ar6,@r0
      000026 E5*00            [12]  131 	mov	a,_bp
      000028 24 FA            [12]  132 	add	a,#0xfa
      00002A FD               [12]  133 	mov	r5,a
      00002B FC               [12]  134 	mov	r4,a
      00002C 0C               [12]  135 	inc	r4
      00002D 0C               [12]  136 	inc	r4
      00002E A8 04            [24]  137 	mov	r0,ar4
      000030 86 04            [24]  138 	mov	ar4,@r0
      000032 D0 00            [24]  139 	pop	ar0
      000034 8E F0            [24]  140 	mov	b,r6
      000036 EC               [12]  141 	mov	a,r4
      000037 A4               [48]  142 	mul	ab
      000038 FE               [12]  143 	mov	r6,a
      000039 AB F0            [24]  144 	mov	r3,b
      00003B A6 06            [24]  145 	mov	@r0,ar6
      00003D 08               [12]  146 	inc	r0
      00003E A6 03            [24]  147 	mov	@r0,ar3
                                    148 ;	_mullong.c:748: t.i.lo = bcast(a)->b.b0 * bcast(b)->b.b0;           // A
      000040 8F 06            [24]  149 	mov	ar6,r7
      000042 8E 00            [24]  150 	mov	ar0,r6
      000044 86 06            [24]  151 	mov	ar6,@r0
      000046 8D 04            [24]  152 	mov	ar4,r5
      000048 8C 00            [24]  153 	mov	ar0,r4
      00004A 86 04            [24]  154 	mov	ar4,@r0
      00004C 8E F0            [24]  155 	mov	b,r6
      00004E EC               [12]  156 	mov	a,r4
      00004F A4               [48]  157 	mul	ab
      000050 FE               [12]  158 	mov	r6,a
      000051 AB F0            [24]  159 	mov	r3,b
      000053 A7 06            [24]  160 	mov	@r1,ar6
      000055 09               [12]  161 	inc	r1
      000056 A7 03            [24]  162 	mov	@r1,ar3
                                    163 ;	_mullong.c:749: t.b.b3 += bcast(a)->b.b3 * bcast(b)->b.b0;          // G
      000058 E5*00            [12]  164 	mov	a,_bp
      00005A 24 09            [12]  165 	add	a,#0x09
      00005C 24 03            [12]  166 	add	a,#0x03
      00005E F9               [12]  167 	mov	r1,a
      00005F 87 06            [24]  168 	mov	ar6,@r1
      000061 8F 04            [24]  169 	mov	ar4,r7
      000063 74 03            [12]  170 	mov	a,#0x03
      000065 2C               [12]  171 	add	a,r4
      000066 F8               [12]  172 	mov	r0,a
      000067 86 04            [24]  173 	mov	ar4,@r0
      000069 8D 03            [24]  174 	mov	ar3,r5
      00006B 8B 00            [24]  175 	mov	ar0,r3
      00006D 86 03            [24]  176 	mov	ar3,@r0
      00006F 8C F0            [24]  177 	mov	b,r4
      000071 EB               [12]  178 	mov	a,r3
      000072 A4               [48]  179 	mul	ab
      000073 2E               [12]  180 	add	a,r6
      000074 FE               [12]  181 	mov	r6,a
      000075 F7               [12]  182 	mov	@r1,a
                                    183 ;	_mullong.c:750: t.b.b3 += bcast(a)->b.b2 * bcast(b)->b.b1;          // F
      000076 8F 04            [24]  184 	mov	ar4,r7
      000078 74 02            [12]  185 	mov	a,#0x02
      00007A 2C               [12]  186 	add	a,r4
      00007B F8               [12]  187 	mov	r0,a
      00007C 86 04            [24]  188 	mov	ar4,@r0
      00007E 8D 03            [24]  189 	mov	ar3,r5
      000080 EB               [12]  190 	mov	a,r3
      000081 04               [12]  191 	inc	a
      000082 F8               [12]  192 	mov	r0,a
      000083 86 03            [24]  193 	mov	ar3,@r0
      000085 8C F0            [24]  194 	mov	b,r4
      000087 EB               [12]  195 	mov	a,r3
      000088 A4               [48]  196 	mul	ab
      000089 2E               [12]  197 	add	a,r6
      00008A F7               [12]  198 	mov	@r1,a
                                    199 ;	_mullong.c:751: t.i.hi += bcast(a)->b.b2 * bcast(b)->b.b0;          // E <- b lost in .lst
      00008B E5*00            [12]  200 	mov	a,_bp
      00008D 24 09            [12]  201 	add	a,#0x09
      00008F 24 02            [12]  202 	add	a,#0x02
      000091 F9               [12]  203 	mov	r1,a
      000092 87 04            [24]  204 	mov	ar4,@r1
      000094 09               [12]  205 	inc	r1
      000095 87 06            [24]  206 	mov	ar6,@r1
      000097 19               [12]  207 	dec	r1
      000098 8F 03            [24]  208 	mov	ar3,r7
      00009A 74 02            [12]  209 	mov	a,#0x02
      00009C 2B               [12]  210 	add	a,r3
      00009D F8               [12]  211 	mov	r0,a
      00009E 86 03            [24]  212 	mov	ar3,@r0
      0000A0 8D 02            [24]  213 	mov	ar2,r5
      0000A2 8A 00            [24]  214 	mov	ar0,r2
      0000A4 86 02            [24]  215 	mov	ar2,@r0
      0000A6 8B F0            [24]  216 	mov	b,r3
      0000A8 EA               [12]  217 	mov	a,r2
      0000A9 A4               [48]  218 	mul	ab
      0000AA AB F0            [24]  219 	mov	r3,b
      0000AC 2C               [12]  220 	add	a,r4
      0000AD FC               [12]  221 	mov	r4,a
      0000AE EB               [12]  222 	mov	a,r3
      0000AF 3E               [12]  223 	addc	a,r6
      0000B0 FE               [12]  224 	mov	r6,a
      0000B1 A7 04            [24]  225 	mov	@r1,ar4
      0000B3 09               [12]  226 	inc	r1
      0000B4 A7 06            [24]  227 	mov	@r1,ar6
      0000B6 19               [12]  228 	dec	r1
                                    229 ;	_mullong.c:753: t.i.hi += bcast(a)->b.b1 * bcast(b)->b.b1;          // D <- b lost in .lst
      0000B7 8F 03            [24]  230 	mov	ar3,r7
      0000B9 EB               [12]  231 	mov	a,r3
      0000BA 04               [12]  232 	inc	a
      0000BB F8               [12]  233 	mov	r0,a
      0000BC 86 03            [24]  234 	mov	ar3,@r0
      0000BE 8D 02            [24]  235 	mov	ar2,r5
      0000C0 EA               [12]  236 	mov	a,r2
      0000C1 04               [12]  237 	inc	a
      0000C2 F8               [12]  238 	mov	r0,a
      0000C3 86 02            [24]  239 	mov	ar2,@r0
      0000C5 8B F0            [24]  240 	mov	b,r3
      0000C7 EA               [12]  241 	mov	a,r2
      0000C8 A4               [48]  242 	mul	ab
      0000C9 AB F0            [24]  243 	mov	r3,b
      0000CB 2C               [12]  244 	add	a,r4
      0000CC FC               [12]  245 	mov	r4,a
      0000CD EB               [12]  246 	mov	a,r3
      0000CE 3E               [12]  247 	addc	a,r6
      0000CF FE               [12]  248 	mov	r6,a
      0000D0 A7 04            [24]  249 	mov	@r1,ar4
      0000D2 09               [12]  250 	inc	r1
      0000D3 A7 06            [24]  251 	mov	@r1,ar6
                                    252 ;	_mullong.c:755: bcast(a)->bi.b3 = bcast(a)->b.b1 * bcast(b)->b.b2;  // C
      0000D5 8F 06            [24]  253 	mov	ar6,r7
      0000D7 74 03            [12]  254 	mov	a,#0x03
      0000D9 2E               [12]  255 	add	a,r6
      0000DA F9               [12]  256 	mov	r1,a
      0000DB 8F 06            [24]  257 	mov	ar6,r7
      0000DD EE               [12]  258 	mov	a,r6
      0000DE 04               [12]  259 	inc	a
      0000DF F8               [12]  260 	mov	r0,a
      0000E0 86 06            [24]  261 	mov	ar6,@r0
      0000E2 8D 04            [24]  262 	mov	ar4,r5
      0000E4 74 02            [12]  263 	mov	a,#0x02
      0000E6 2C               [12]  264 	add	a,r4
      0000E7 F8               [12]  265 	mov	r0,a
      0000E8 86 04            [24]  266 	mov	ar4,@r0
      0000EA 8E F0            [24]  267 	mov	b,r6
      0000EC EC               [12]  268 	mov	a,r4
      0000ED A4               [48]  269 	mul	ab
      0000EE F7               [12]  270 	mov	@r1,a
                                    271 ;	_mullong.c:756: bcast(a)->bi.i12 = bcast(a)->b.b1 * bcast(b)->b.b0; // C
      0000EF 8F 06            [24]  272 	mov	ar6,r7
      0000F1 EE               [12]  273 	mov	a,r6
      0000F2 04               [12]  274 	inc	a
      0000F3 F9               [12]  275 	mov	r1,a
      0000F4 8F 06            [24]  276 	mov	ar6,r7
      0000F6 EE               [12]  277 	mov	a,r6
      0000F7 04               [12]  278 	inc	a
      0000F8 F8               [12]  279 	mov	r0,a
      0000F9 86 06            [24]  280 	mov	ar6,@r0
      0000FB 8D 04            [24]  281 	mov	ar4,r5
      0000FD 8C 00            [24]  282 	mov	ar0,r4
      0000FF 86 04            [24]  283 	mov	ar4,@r0
      000101 8E F0            [24]  284 	mov	b,r6
      000103 EC               [12]  285 	mov	a,r4
      000104 A4               [48]  286 	mul	ab
      000105 FE               [12]  287 	mov	r6,a
      000106 AB F0            [24]  288 	mov	r3,b
      000108 A7 06            [24]  289 	mov	@r1,ar6
      00010A 09               [12]  290 	inc	r1
      00010B A7 03            [24]  291 	mov	@r1,ar3
                                    292 ;	_mullong.c:758: bcast(b)->bi.b3 = bcast(a)->b.b0 * bcast(b)->b.b3;  // B
      00010D 8D 06            [24]  293 	mov	ar6,r5
      00010F 74 03            [12]  294 	mov	a,#0x03
      000111 2E               [12]  295 	add	a,r6
      000112 F9               [12]  296 	mov	r1,a
      000113 8F 06            [24]  297 	mov	ar6,r7
      000115 8E 00            [24]  298 	mov	ar0,r6
      000117 86 06            [24]  299 	mov	ar6,@r0
      000119 8D 04            [24]  300 	mov	ar4,r5
      00011B 74 03            [12]  301 	mov	a,#0x03
      00011D 2C               [12]  302 	add	a,r4
      00011E F8               [12]  303 	mov	r0,a
      00011F 86 04            [24]  304 	mov	ar4,@r0
      000121 8E F0            [24]  305 	mov	b,r6
      000123 EC               [12]  306 	mov	a,r4
      000124 A4               [48]  307 	mul	ab
      000125 F7               [12]  308 	mov	@r1,a
                                    309 ;	_mullong.c:759: bcast(b)->bi.i12 = bcast(a)->b.b0 * bcast(b)->b.b1; // B
      000126 8D 06            [24]  310 	mov	ar6,r5
      000128 EE               [12]  311 	mov	a,r6
      000129 04               [12]  312 	inc	a
      00012A F9               [12]  313 	mov	r1,a
      00012B 8F 06            [24]  314 	mov	ar6,r7
      00012D 8E 00            [24]  315 	mov	ar0,r6
      00012F 86 06            [24]  316 	mov	ar6,@r0
      000131 8D 04            [24]  317 	mov	ar4,r5
      000133 EC               [12]  318 	mov	a,r4
      000134 04               [12]  319 	inc	a
      000135 F8               [12]  320 	mov	r0,a
      000136 86 04            [24]  321 	mov	ar4,@r0
      000138 8E F0            [24]  322 	mov	b,r6
      00013A EC               [12]  323 	mov	a,r4
      00013B A4               [48]  324 	mul	ab
      00013C FE               [12]  325 	mov	r6,a
      00013D AB F0            [24]  326 	mov	r3,b
      00013F A7 06            [24]  327 	mov	@r1,ar6
      000141 09               [12]  328 	inc	r1
      000142 A7 03            [24]  329 	mov	@r1,ar3
                                    330 ;	_mullong.c:761: bcast(b)->bi.b0 = 0;                                // B
      000144 8D 01            [24]  331 	mov	ar1,r5
      000146 77 00            [12]  332 	mov	@r1,#0x00
                                    333 ;	_mullong.c:762: bcast(a)->bi.b0 = 0;                                // C
      000148 8F 01            [24]  334 	mov	ar1,r7
      00014A 77 00            [12]  335 	mov	@r1,#0x00
                                    336 ;	_mullong.c:763: t.l += a;
      00014C E5*00            [12]  337 	mov	a,_bp
      00014E 24 09            [12]  338 	add	a,#0x09
      000150 F9               [12]  339 	mov	r1,a
      000151 E5*00            [12]  340 	mov	a,_bp
      000153 24 05            [12]  341 	add	a,#0x05
      000155 F8               [12]  342 	mov	r0,a
      000156 E7               [12]  343 	mov	a,@r1
      000157 F6               [12]  344 	mov	@r0,a
      000158 09               [12]  345 	inc	r1
      000159 E7               [12]  346 	mov	a,@r1
      00015A 08               [12]  347 	inc	r0
      00015B F6               [12]  348 	mov	@r0,a
      00015C 09               [12]  349 	inc	r1
      00015D E7               [12]  350 	mov	a,@r1
      00015E 08               [12]  351 	inc	r0
      00015F F6               [12]  352 	mov	@r0,a
      000160 09               [12]  353 	inc	r1
      000161 E7               [12]  354 	mov	a,@r1
      000162 08               [12]  355 	inc	r0
      000163 F6               [12]  356 	mov	@r0,a
      000164 19               [12]  357 	dec	r1
      000165 19               [12]  358 	dec	r1
      000166 19               [12]  359 	dec	r1
      000167 A8*00            [24]  360 	mov	r0,_bp
      000169 08               [12]  361 	inc	r0
      00016A 86 02            [24]  362 	mov	ar2,@r0
      00016C 08               [12]  363 	inc	r0
      00016D 86 03            [24]  364 	mov	ar3,@r0
      00016F 08               [12]  365 	inc	r0
      000170 86 06            [24]  366 	mov	ar6,@r0
      000172 08               [12]  367 	inc	r0
      000173 86 07            [24]  368 	mov	ar7,@r0
      000175 E5*00            [12]  369 	mov	a,_bp
      000177 24 05            [12]  370 	add	a,#0x05
      000179 F8               [12]  371 	mov	r0,a
      00017A EA               [12]  372 	mov	a,r2
      00017B 26               [12]  373 	add	a,@r0
      00017C F6               [12]  374 	mov	@r0,a
      00017D EB               [12]  375 	mov	a,r3
      00017E 08               [12]  376 	inc	r0
      00017F 36               [12]  377 	addc	a,@r0
      000180 F6               [12]  378 	mov	@r0,a
      000181 EE               [12]  379 	mov	a,r6
      000182 08               [12]  380 	inc	r0
      000183 36               [12]  381 	addc	a,@r0
      000184 F6               [12]  382 	mov	@r0,a
      000185 EF               [12]  383 	mov	a,r7
      000186 08               [12]  384 	inc	r0
      000187 36               [12]  385 	addc	a,@r0
      000188 F6               [12]  386 	mov	@r0,a
      000189 E5*00            [12]  387 	mov	a,_bp
      00018B 24 05            [12]  388 	add	a,#0x05
      00018D F8               [12]  389 	mov	r0,a
      00018E E6               [12]  390 	mov	a,@r0
      00018F F7               [12]  391 	mov	@r1,a
      000190 09               [12]  392 	inc	r1
      000191 08               [12]  393 	inc	r0
      000192 E6               [12]  394 	mov	a,@r0
      000193 F7               [12]  395 	mov	@r1,a
      000194 09               [12]  396 	inc	r1
      000195 08               [12]  397 	inc	r0
      000196 E6               [12]  398 	mov	a,@r0
      000197 F7               [12]  399 	mov	@r1,a
      000198 09               [12]  400 	inc	r1
      000199 08               [12]  401 	inc	r0
      00019A E6               [12]  402 	mov	a,@r0
      00019B F7               [12]  403 	mov	@r1,a
                                    404 ;	_mullong.c:765: return t.l + b;
      00019C E5*00            [12]  405 	mov	a,_bp
      00019E 24 FA            [12]  406 	add	a,#0xfa
      0001A0 F8               [12]  407 	mov	r0,a
      0001A1 86 04            [24]  408 	mov	ar4,@r0
      0001A3 08               [12]  409 	inc	r0
      0001A4 86 05            [24]  410 	mov	ar5,@r0
      0001A6 08               [12]  411 	inc	r0
      0001A7 86 06            [24]  412 	mov	ar6,@r0
      0001A9 08               [12]  413 	inc	r0
      0001AA 86 07            [24]  414 	mov	ar7,@r0
      0001AC E5*00            [12]  415 	mov	a,_bp
      0001AE 24 05            [12]  416 	add	a,#0x05
      0001B0 F8               [12]  417 	mov	r0,a
      0001B1 EC               [12]  418 	mov	a,r4
      0001B2 26               [12]  419 	add	a,@r0
      0001B3 FC               [12]  420 	mov	r4,a
      0001B4 ED               [12]  421 	mov	a,r5
      0001B5 08               [12]  422 	inc	r0
      0001B6 36               [12]  423 	addc	a,@r0
      0001B7 FD               [12]  424 	mov	r5,a
      0001B8 EE               [12]  425 	mov	a,r6
      0001B9 08               [12]  426 	inc	r0
      0001BA 36               [12]  427 	addc	a,@r0
      0001BB FE               [12]  428 	mov	r6,a
      0001BC EF               [12]  429 	mov	a,r7
      0001BD 08               [12]  430 	inc	r0
      0001BE 36               [12]  431 	addc	a,@r0
      0001BF 8C 82            [24]  432 	mov	dpl,r4
      0001C1 8D 83            [24]  433 	mov	dph,r5
      0001C3 8E F0            [24]  434 	mov	b,r6
                                    435 ;	_mullong.c:766: }
      0001C5 85*00 81         [24]  436 	mov	sp,_bp
      0001C8 D0*00            [24]  437 	pop	_bp
      0001CA 22               [24]  438 	ret
                                    439 	.area CSEG    (CODE)
                                    440 	.area CONST   (CODE)
                                    441 	.area XINIT   (CODE)
                                    442 	.area CABS    (ABS,CODE)
