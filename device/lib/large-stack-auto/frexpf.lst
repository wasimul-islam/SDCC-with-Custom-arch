                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module frexpf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _frexpf
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'frexpf'
                                     91 ;------------------------------------------------------------
                                     92 ;pw2                       Allocated to stack - _bp -5
                                     93 ;x                         Allocated to registers r4 r5 r6 r7 
                                     94 ;fl                        Allocated to stack - _bp +1
                                     95 ;i                         Allocated to stack - _bp +5
                                     96 ;------------------------------------------------------------
                                     97 ;	frexpf.c:34: float frexpf(float x, int *pw2)
                                     98 ;	-----------------------------------------
                                     99 ;	 function frexpf
                                    100 ;	-----------------------------------------
      000000                        101 _frexpf:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 AC 82            [24]  112 	mov	r4,dpl
      000007 AD 83            [24]  113 	mov	r5,dph
      000009 AE F0            [24]  114 	mov	r6,b
      00000B FF               [12]  115 	mov	r7,a
      00000C E5 81            [12]  116 	mov	a,sp
      00000E 24 08            [12]  117 	add	a,#0x08
      000010 F5 81            [12]  118 	mov	sp,a
                                    119 ;	frexpf.c:39: fl.f=x;
      000012 E5*00            [12]  120 	mov	a,_bp
      000014 04               [12]  121 	inc	a
      000015 F8               [12]  122 	mov	r0,a
      000016 A6 04            [24]  123 	mov	@r0,ar4
      000018 08               [12]  124 	inc	r0
      000019 A6 05            [24]  125 	mov	@r0,ar5
      00001B 08               [12]  126 	inc	r0
      00001C A6 06            [24]  127 	mov	@r0,ar6
      00001E 08               [12]  128 	inc	r0
      00001F A6 07            [24]  129 	mov	@r0,ar7
                                    130 ;	frexpf.c:41: i  = ( fl.l >> 23) & 0x000000ff;
      000021 A9*00            [24]  131 	mov	r1,_bp
      000023 09               [12]  132 	inc	r1
      000024 87 04            [24]  133 	mov	ar4,@r1
      000026 09               [12]  134 	inc	r1
      000027 87 05            [24]  135 	mov	ar5,@r1
      000029 09               [12]  136 	inc	r1
      00002A 87 06            [24]  137 	mov	ar6,@r1
      00002C 09               [12]  138 	inc	r1
      00002D 87 07            [24]  139 	mov	ar7,@r1
      00002F 19               [12]  140 	dec	r1
      000030 19               [12]  141 	dec	r1
      000031 19               [12]  142 	dec	r1
      000032 8E 04            [24]  143 	mov	ar4,r6
      000034 EF               [12]  144 	mov	a,r7
      000035 A2 E7            [12]  145 	mov	c,acc.7
      000037 CC               [12]  146 	xch	a,r4
      000038 33               [12]  147 	rlc	a
      000039 CC               [12]  148 	xch	a,r4
      00003A 33               [12]  149 	rlc	a
      00003B CC               [12]  150 	xch	a,r4
      00003C 54 01            [12]  151 	anl	a,#0x01
      00003E 30 E0 02         [24]  152 	jnb	acc.0,00103$
      000041 44 FE            [12]  153 	orl	a,#0xfffffffe
      000043                        154 00103$:
      000043 33               [12]  155 	rlc	a
      000044 95 E0            [12]  156 	subb	a,acc
                                    157 ;	frexpf.c:42: i -= 0x7e;
      000046 E4               [12]  158 	clr	a
      000047 FD               [12]  159 	mov	r5,a
      000048 FE               [12]  160 	mov	r6,a
      000049 FF               [12]  161 	mov	r7,a
      00004A E5*00            [12]  162 	mov	a,_bp
      00004C 24 05            [12]  163 	add	a,#0x05
      00004E F8               [12]  164 	mov	r0,a
      00004F EC               [12]  165 	mov	a,r4
      000050 24 82            [12]  166 	add	a,#0x82
      000052 F6               [12]  167 	mov	@r0,a
      000053 ED               [12]  168 	mov	a,r5
      000054 34 FF            [12]  169 	addc	a,#0xff
      000056 08               [12]  170 	inc	r0
      000057 F6               [12]  171 	mov	@r0,a
      000058 EE               [12]  172 	mov	a,r6
      000059 34 FF            [12]  173 	addc	a,#0xff
      00005B 08               [12]  174 	inc	r0
      00005C F6               [12]  175 	mov	@r0,a
      00005D EF               [12]  176 	mov	a,r7
      00005E 34 FF            [12]  177 	addc	a,#0xff
      000060 08               [12]  178 	inc	r0
      000061 F6               [12]  179 	mov	@r0,a
                                    180 ;	frexpf.c:43: *pw2 = i;
      000062 E5*00            [12]  181 	mov	a,_bp
      000064 24 FB            [12]  182 	add	a,#0xfb
      000066 F8               [12]  183 	mov	r0,a
      000067 86 02            [24]  184 	mov	ar2,@r0
      000069 08               [12]  185 	inc	r0
      00006A 86 03            [24]  186 	mov	ar3,@r0
      00006C 08               [12]  187 	inc	r0
      00006D 86 07            [24]  188 	mov	ar7,@r0
      00006F E5*00            [12]  189 	mov	a,_bp
      000071 24 05            [12]  190 	add	a,#0x05
      000073 F8               [12]  191 	mov	r0,a
      000074 86 04            [24]  192 	mov	ar4,@r0
      000076 08               [12]  193 	inc	r0
      000077 86 05            [24]  194 	mov	ar5,@r0
      000079 8A 82            [24]  195 	mov	dpl,r2
      00007B 8B 83            [24]  196 	mov	dph,r3
      00007D 8F F0            [24]  197 	mov	b,r7
      00007F EC               [12]  198 	mov	a,r4
      000080 12r00r00         [24]  199 	lcall	__gptrput
      000083 A3               [24]  200 	inc	dptr
      000084 ED               [12]  201 	mov	a,r5
      000085 12r00r00         [24]  202 	lcall	__gptrput
                                    203 ;	frexpf.c:44: fl.l &= 0x807fffff; /* strip all exponent bits */
      000088 87 04            [24]  204 	mov	ar4,@r1
      00008A 09               [12]  205 	inc	r1
      00008B 87 05            [24]  206 	mov	ar5,@r1
      00008D 09               [12]  207 	inc	r1
      00008E 87 06            [24]  208 	mov	ar6,@r1
      000090 09               [12]  209 	inc	r1
      000091 87 07            [24]  210 	mov	ar7,@r1
      000093 19               [12]  211 	dec	r1
      000094 19               [12]  212 	dec	r1
      000095 19               [12]  213 	dec	r1
      000096 53 06 7F         [24]  214 	anl	ar6,#0x7f
      000099 53 07 80         [24]  215 	anl	ar7,#0x80
      00009C A7 04            [24]  216 	mov	@r1,ar4
      00009E 09               [12]  217 	inc	r1
      00009F A7 05            [24]  218 	mov	@r1,ar5
      0000A1 09               [12]  219 	inc	r1
      0000A2 A7 06            [24]  220 	mov	@r1,ar6
      0000A4 09               [12]  221 	inc	r1
      0000A5 A7 07            [24]  222 	mov	@r1,ar7
      0000A7 19               [12]  223 	dec	r1
      0000A8 19               [12]  224 	dec	r1
      0000A9 19               [12]  225 	dec	r1
                                    226 ;	frexpf.c:45: fl.l |= 0x3f000000; /* mantissa between 0.5 and 1 */
      0000AA 43 07 3F         [24]  227 	orl	ar7,#0x3f
      0000AD A7 04            [24]  228 	mov	@r1,ar4
      0000AF 09               [12]  229 	inc	r1
      0000B0 A7 05            [24]  230 	mov	@r1,ar5
      0000B2 09               [12]  231 	inc	r1
      0000B3 A7 06            [24]  232 	mov	@r1,ar6
      0000B5 09               [12]  233 	inc	r1
      0000B6 A7 07            [24]  234 	mov	@r1,ar7
                                    235 ;	frexpf.c:46: return(fl.f);
      0000B8 A9*00            [24]  236 	mov	r1,_bp
      0000BA 09               [12]  237 	inc	r1
      0000BB 87 04            [24]  238 	mov	ar4,@r1
      0000BD 09               [12]  239 	inc	r1
      0000BE 87 05            [24]  240 	mov	ar5,@r1
      0000C0 09               [12]  241 	inc	r1
      0000C1 87 06            [24]  242 	mov	ar6,@r1
      0000C3 09               [12]  243 	inc	r1
      0000C4 87 07            [24]  244 	mov	ar7,@r1
      0000C6 8C 82            [24]  245 	mov	dpl,r4
      0000C8 8D 83            [24]  246 	mov	dph,r5
      0000CA 8E F0            [24]  247 	mov	b,r6
      0000CC EF               [12]  248 	mov	a,r7
                                    249 ;	frexpf.c:47: }
      0000CD 85*00 81         [24]  250 	mov	sp,_bp
      0000D0 D0*00            [24]  251 	pop	_bp
      0000D2 22               [24]  252 	ret
                                    253 	.area CSEG    (CODE)
                                    254 	.area CONST   (CODE)
                                    255 	.area XINIT   (CODE)
                                    256 	.area CABS    (ABS,CODE)
