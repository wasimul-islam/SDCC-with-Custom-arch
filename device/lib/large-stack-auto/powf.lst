                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module powf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _logf
                                     12 	.globl _expf
                                     13 	.globl _powf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; overlayable bit register bank
                                     31 ;--------------------------------------------------------
                                     32 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         33 bits:
      000000                         34 	.ds 1
                           008000    35 	b0 = bits[0]
                           008100    36 	b1 = bits[1]
                           008200    37 	b2 = bits[2]
                           008300    38 	b3 = bits[3]
                           008400    39 	b4 = bits[4]
                           008500    40 	b5 = bits[5]
                           008600    41 	b6 = bits[6]
                           008700    42 	b7 = bits[7]
                                     43 ;--------------------------------------------------------
                                     44 ; internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DSEG    (DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; overlayable items in internal ram
                                     49 ;--------------------------------------------------------
                                     50 ;--------------------------------------------------------
                                     51 ; indirectly addressable internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area ISEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area IABS    (ABS,DATA)
                                     58 	.area IABS    (ABS,DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; bit data
                                     61 ;--------------------------------------------------------
                                     62 	.area BSEG    (BIT)
                                     63 ;--------------------------------------------------------
                                     64 ; paged external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area PSEG    (PAG,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; uninitialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XSEG    (XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XABS    (ABS,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; initialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XISEG   (XDATA)
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'powf'
                                    107 ;------------------------------------------------------------
                                    108 ;y                         Allocated to stack - _bp -6
                                    109 ;x                         Allocated to registers r4 r5 r6 r7 
                                    110 ;------------------------------------------------------------
                                    111 ;	powf.c:35: float powf(float x, float y)
                                    112 ;	-----------------------------------------
                                    113 ;	 function powf
                                    114 ;	-----------------------------------------
      000000                        115 _powf:
                           000007   116 	ar7 = 0x07
                           000006   117 	ar6 = 0x06
                           000005   118 	ar5 = 0x05
                           000004   119 	ar4 = 0x04
                           000003   120 	ar3 = 0x03
                           000002   121 	ar2 = 0x02
                           000001   122 	ar1 = 0x01
                           000000   123 	ar0 = 0x00
      000000 C0*00            [24]  124 	push	_bp
      000002 85 81*00         [24]  125 	mov	_bp,sp
      000005 AC 82            [24]  126 	mov	r4,dpl
      000007 AD 83            [24]  127 	mov	r5,dph
      000009 AE F0            [24]  128 	mov	r6,b
      00000B FF               [12]  129 	mov	r7,a
                                    130 ;	powf.c:37: if(y == 0.0) return 1.0;
      00000C E5*00            [12]  131 	mov	a,_bp
      00000E 24 FA            [12]  132 	add	a,#0xfa
      000010 F8               [12]  133 	mov	r0,a
      000011 86 F0            [24]  134 	mov	b,@r0
      000013 08               [12]  135 	inc	r0
      000014 E6               [12]  136 	mov	a,@r0
      000015 42 F0            [12]  137 	orl	b,a
      000017 08               [12]  138 	inc	r0
      000018 E6               [12]  139 	mov	a,@r0
      000019 42 F0            [12]  140 	orl	b,a
      00001B 08               [12]  141 	inc	r0
      00001C E6               [12]  142 	mov	a,@r0
      00001D 54 7F            [12]  143 	anl	a,#0x7F
      00001F 45 F0            [12]  144 	orl	a,b
      000021 70 0B            [24]  145 	jnz	00102$
      000023 90 00 00         [24]  146 	mov	dptr,#0x0000
      000026 75 F0 80         [24]  147 	mov	b,#0x80
      000029 74 3F            [12]  148 	mov	a,#0x3f
      00002B 02r00rF6         [24]  149 	ljmp	00107$
      00002E                        150 00102$:
                                    151 ;	powf.c:38: if(y == 1.0) return x;
      00002E C0 07            [24]  152 	push	ar7
      000030 C0 06            [24]  153 	push	ar6
      000032 C0 05            [24]  154 	push	ar5
      000034 C0 04            [24]  155 	push	ar4
      000036 E4               [12]  156 	clr	a
      000037 C0 E0            [24]  157 	push	acc
      000039 C0 E0            [24]  158 	push	acc
      00003B 74 80            [12]  159 	mov	a,#0x80
      00003D C0 E0            [24]  160 	push	acc
      00003F 74 3F            [12]  161 	mov	a,#0x3f
      000041 C0 E0            [24]  162 	push	acc
      000043 E5*00            [12]  163 	mov	a,_bp
      000045 24 FA            [12]  164 	add	a,#0xfa
      000047 F8               [12]  165 	mov	r0,a
      000048 86 82            [24]  166 	mov	dpl,@r0
      00004A 08               [12]  167 	inc	r0
      00004B 86 83            [24]  168 	mov	dph,@r0
      00004D 08               [12]  169 	inc	r0
      00004E 86 F0            [24]  170 	mov	b,@r0
      000050 08               [12]  171 	inc	r0
      000051 E6               [12]  172 	mov	a,@r0
      000052 12r00r00         [24]  173 	lcall	___fseq
      000055 AB 82            [24]  174 	mov	r3,dpl
      000057 E5 81            [12]  175 	mov	a,sp
      000059 24 FC            [12]  176 	add	a,#0xfc
      00005B F5 81            [12]  177 	mov	sp,a
      00005D D0 04            [24]  178 	pop	ar4
      00005F D0 05            [24]  179 	pop	ar5
      000061 D0 06            [24]  180 	pop	ar6
      000063 D0 07            [24]  181 	pop	ar7
      000065 EB               [12]  182 	mov	a,r3
      000066 60 0A            [24]  183 	jz	00104$
      000068 8C 82            [24]  184 	mov	dpl,r4
      00006A 8D 83            [24]  185 	mov	dph,r5
      00006C 8E F0            [24]  186 	mov	b,r6
      00006E EF               [12]  187 	mov	a,r7
      00006F 02r00rF6         [24]  188 	ljmp	00107$
      000072                        189 00104$:
                                    190 ;	powf.c:39: if(x <= 0.0) return 0.0;
      000072 C0 07            [24]  191 	push	ar7
      000074 C0 06            [24]  192 	push	ar6
      000076 C0 05            [24]  193 	push	ar5
      000078 C0 04            [24]  194 	push	ar4
      00007A C0 04            [24]  195 	push	ar4
      00007C C0 05            [24]  196 	push	ar5
      00007E C0 06            [24]  197 	push	ar6
      000080 C0 07            [24]  198 	push	ar7
      000082 90 00 00         [24]  199 	mov	dptr,#(0x00&0x00ff)
      000085 E4               [12]  200 	clr	a
      000086 F5 F0            [12]  201 	mov	b,a
      000088 12r00r00         [24]  202 	lcall	___fslt
      00008B E5 81            [12]  203 	mov	a,sp
      00008D 24 FC            [12]  204 	add	a,#0xfc
      00008F F5 81            [12]  205 	mov	sp,a
      000091 D0 04            [24]  206 	pop	ar4
      000093 D0 05            [24]  207 	pop	ar5
      000095 D0 06            [24]  208 	pop	ar6
      000097 D0 07            [24]  209 	pop	ar7
      000099 E5 82            [12]  210 	mov	a,dpl
      00009B 24 FF            [12]  211 	add	a,#0xff
      00009D 92*00            [24]  212 	mov	b0,c
      00009F 40 08            [24]  213 	jc	00106$
      0000A1 90 00 00         [24]  214 	mov	dptr,#(0x00&0x00ff)
      0000A4 E4               [12]  215 	clr	a
      0000A5 F5 F0            [12]  216 	mov	b,a
      0000A7 80 4D            [24]  217 	sjmp	00107$
      0000A9                        218 00106$:
                                    219 ;	powf.c:40: return expf(logf(x) * y);
      0000A9 8C 82            [24]  220 	mov	dpl,r4
      0000AB 8D 83            [24]  221 	mov	dph,r5
      0000AD 8E F0            [24]  222 	mov	b,r6
      0000AF EF               [12]  223 	mov	a,r7
      0000B0 12r00r00         [24]  224 	lcall	_logf
      0000B3 AC 82            [24]  225 	mov	r4,dpl
      0000B5 AD 83            [24]  226 	mov	r5,dph
      0000B7 AE F0            [24]  227 	mov	r6,b
      0000B9 FF               [12]  228 	mov	r7,a
      0000BA E5*00            [12]  229 	mov	a,_bp
      0000BC 24 FA            [12]  230 	add	a,#0xfa
      0000BE F8               [12]  231 	mov	r0,a
      0000BF E6               [12]  232 	mov	a,@r0
      0000C0 C0 E0            [24]  233 	push	acc
      0000C2 08               [12]  234 	inc	r0
      0000C3 E6               [12]  235 	mov	a,@r0
      0000C4 C0 E0            [24]  236 	push	acc
      0000C6 08               [12]  237 	inc	r0
      0000C7 E6               [12]  238 	mov	a,@r0
      0000C8 C0 E0            [24]  239 	push	acc
      0000CA 08               [12]  240 	inc	r0
      0000CB E6               [12]  241 	mov	a,@r0
      0000CC C0 E0            [24]  242 	push	acc
      0000CE 8C 82            [24]  243 	mov	dpl,r4
      0000D0 8D 83            [24]  244 	mov	dph,r5
      0000D2 8E F0            [24]  245 	mov	b,r6
      0000D4 EF               [12]  246 	mov	a,r7
      0000D5 12r00r00         [24]  247 	lcall	___fsmul
      0000D8 AC 82            [24]  248 	mov	r4,dpl
      0000DA AD 83            [24]  249 	mov	r5,dph
      0000DC AE F0            [24]  250 	mov	r6,b
      0000DE FF               [12]  251 	mov	r7,a
      0000DF E5 81            [12]  252 	mov	a,sp
      0000E1 24 FC            [12]  253 	add	a,#0xfc
      0000E3 F5 81            [12]  254 	mov	sp,a
      0000E5 8C 82            [24]  255 	mov	dpl,r4
      0000E7 8D 83            [24]  256 	mov	dph,r5
      0000E9 8E F0            [24]  257 	mov	b,r6
      0000EB EF               [12]  258 	mov	a,r7
      0000EC 12r00r00         [24]  259 	lcall	_expf
      0000EF AC 82            [24]  260 	mov	r4,dpl
      0000F1 AD 83            [24]  261 	mov	r5,dph
      0000F3 AE F0            [24]  262 	mov	r6,b
      0000F5 FF               [12]  263 	mov	r7,a
      0000F6                        264 00107$:
                                    265 ;	powf.c:41: }
      0000F6 D0*00            [24]  266 	pop	_bp
      0000F8 22               [24]  267 	ret
                                    268 	.area CSEG    (CODE)
                                    269 	.area CONST   (CODE)
                                    270 	.area XINIT   (CODE)
                                    271 	.area CABS    (ABS,CODE)
