                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divuint
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __divuint
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_divuint'
                                     91 ;------------------------------------------------------------
                                     92 ;y                         Allocated to stack - _bp -4
                                     93 ;x                         Allocated to registers r6 r7 
                                     94 ;reste                     Allocated to registers r4 r5 
                                     95 ;count                     Allocated to registers r3 
                                     96 ;c                         Allocated to registers r2 
                                     97 ;------------------------------------------------------------
                                     98 ;	_divuint.c:161: _divuint (unsigned int x, unsigned int y) __SDCC_NONBANKED
                                     99 ;	-----------------------------------------
                                    100 ;	 function _divuint
                                    101 ;	-----------------------------------------
      000000                        102 __divuint:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 AE 82            [24]  113 	mov	r6,dpl
      000007 AF 83            [24]  114 	mov	r7,dph
                                    115 ;	_divuint.c:163: unsigned int reste = 0;
      000009 7C 00            [12]  116 	mov	r4,#0x00
      00000B 7D 00            [12]  117 	mov	r5,#0x00
                                    118 ;	_divuint.c:167: do
      00000D 7B 10            [12]  119 	mov	r3,#0x10
      00000F                        120 00105$:
                                    121 ;	_divuint.c:170: c = MSB_SET(x);
      00000F EF               [12]  122 	mov	a,r7
      000010 23               [12]  123 	rl	a
      000011 54 01            [12]  124 	anl	a,#0x01
      000013 FA               [12]  125 	mov	r2,a
                                    126 ;	_divuint.c:171: x <<= 1;
      000014 EE               [12]  127 	mov	a,r6
      000015 2E               [12]  128 	add	a,r6
      000016 FE               [12]  129 	mov	r6,a
      000017 EF               [12]  130 	mov	a,r7
      000018 33               [12]  131 	rlc	a
      000019 FF               [12]  132 	mov	r7,a
                                    133 ;	_divuint.c:172: reste <<= 1;
      00001A EC               [12]  134 	mov	a,r4
      00001B 2C               [12]  135 	add	a,r4
      00001C FC               [12]  136 	mov	r4,a
      00001D ED               [12]  137 	mov	a,r5
      00001E 33               [12]  138 	rlc	a
      00001F FD               [12]  139 	mov	r5,a
                                    140 ;	_divuint.c:173: if (c)
      000020 EA               [12]  141 	mov	a,r2
      000021 60 03            [24]  142 	jz	00102$
                                    143 ;	_divuint.c:174: reste |= 1;
      000023 43 04 01         [24]  144 	orl	ar4,#0x01
      000026                        145 00102$:
                                    146 ;	_divuint.c:176: if (reste >= y)
      000026 E5*00            [12]  147 	mov	a,_bp
      000028 24 FC            [12]  148 	add	a,#0xfc
      00002A F8               [12]  149 	mov	r0,a
      00002B C3               [12]  150 	clr	c
      00002C EC               [12]  151 	mov	a,r4
      00002D 96               [12]  152 	subb	a,@r0
      00002E ED               [12]  153 	mov	a,r5
      00002F 08               [12]  154 	inc	r0
      000030 96               [12]  155 	subb	a,@r0
      000031 40 10            [24]  156 	jc	00106$
                                    157 ;	_divuint.c:178: reste -= y;
      000033 E5*00            [12]  158 	mov	a,_bp
      000035 24 FC            [12]  159 	add	a,#0xfc
      000037 F8               [12]  160 	mov	r0,a
      000038 EC               [12]  161 	mov	a,r4
      000039 C3               [12]  162 	clr	c
      00003A 96               [12]  163 	subb	a,@r0
      00003B FC               [12]  164 	mov	r4,a
      00003C ED               [12]  165 	mov	a,r5
      00003D 08               [12]  166 	inc	r0
      00003E 96               [12]  167 	subb	a,@r0
      00003F FD               [12]  168 	mov	r5,a
                                    169 ;	_divuint.c:180: x |= 1;
      000040 43 06 01         [24]  170 	orl	ar6,#0x01
      000043                        171 00106$:
                                    172 ;	_divuint.c:183: while (--count);
      000043 DB CA            [24]  173 	djnz	r3,00105$
                                    174 ;	_divuint.c:184: return x;
      000045 8E 82            [24]  175 	mov	dpl,r6
      000047 8F 83            [24]  176 	mov	dph,r7
                                    177 ;	_divuint.c:185: }
      000049 D0*00            [24]  178 	pop	_bp
      00004B 22               [24]  179 	ret
                                    180 	.area CSEG    (CODE)
                                    181 	.area CONST   (CODE)
                                    182 	.area XINIT   (CODE)
                                    183 	.area CABS    (ABS,CODE)
