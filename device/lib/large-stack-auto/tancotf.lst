                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module tancotf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _tancotf
                                     12 	.globl _fabsf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; initialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'tancotf'
                                     92 ;------------------------------------------------------------
                                     93 ;iscotan                   Allocated to stack - _bp -3
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;f                         Allocated to stack - _bp +13
                                     96 ;g                         Allocated to registers r7 r6 r5 r4 
                                     97 ;xn                        Allocated to stack - _bp +17
                                     98 ;xnum                      Allocated to stack - _bp +21
                                     99 ;xden                      Allocated to stack - _bp +25
                                    100 ;n                         Allocated to stack - _bp +29
                                    101 ;sloc0                     Allocated to stack - _bp +5
                                    102 ;sloc1                     Allocated to stack - _bp +9
                                    103 ;------------------------------------------------------------
                                    104 ;	tancotf.c:53: float tancotf(float x, bool iscotan)
                                    105 ;	-----------------------------------------
                                    106 ;	 function tancotf
                                    107 ;	-----------------------------------------
      000000                        108 _tancotf:
                           000007   109 	ar7 = 0x07
                           000006   110 	ar6 = 0x06
                           000005   111 	ar5 = 0x05
                           000004   112 	ar4 = 0x04
                           000003   113 	ar3 = 0x03
                           000002   114 	ar2 = 0x02
                           000001   115 	ar1 = 0x01
                           000000   116 	ar0 = 0x00
      000000 C0*00            [24]  117 	push	_bp
      000002 85 81*00         [24]  118 	mov	_bp,sp
      000005 C0 82            [24]  119 	push	dpl
      000007 C0 83            [24]  120 	push	dph
      000009 C0 F0            [24]  121 	push	b
      00000B C0 E0            [24]  122 	push	acc
      00000D E5 81            [12]  123 	mov	a,sp
      00000F 24 1A            [12]  124 	add	a,#0x1a
      000011 F5 81            [12]  125 	mov	sp,a
                                    126 ;	tancotf.c:58: if (fabsf(x) > YMAX)
      000013 A8*00            [24]  127 	mov	r0,_bp
      000015 08               [12]  128 	inc	r0
      000016 86 82            [24]  129 	mov	dpl,@r0
      000018 08               [12]  130 	inc	r0
      000019 86 83            [24]  131 	mov	dph,@r0
      00001B 08               [12]  132 	inc	r0
      00001C 86 F0            [24]  133 	mov	b,@r0
      00001E 08               [12]  134 	inc	r0
      00001F E6               [12]  135 	mov	a,@r0
      000020 12r00r00         [24]  136 	lcall	_fabsf
      000023 AA 82            [24]  137 	mov	r2,dpl
      000025 AB 83            [24]  138 	mov	r3,dph
      000027 AE F0            [24]  139 	mov	r6,b
      000029 FF               [12]  140 	mov	r7,a
      00002A C0 02            [24]  141 	push	ar2
      00002C C0 03            [24]  142 	push	ar3
      00002E C0 06            [24]  143 	push	ar6
      000030 C0 07            [24]  144 	push	ar7
      000032 90 08 00         [24]  145 	mov	dptr,#0x0800
      000035 75 F0 C9         [24]  146 	mov	b,#0xc9
      000038 74 45            [12]  147 	mov	a,#0x45
      00003A 12r00r00         [24]  148 	lcall	___fslt
      00003D AF 82            [24]  149 	mov	r7,dpl
      00003F E5 81            [12]  150 	mov	a,sp
      000041 24 FC            [12]  151 	add	a,#0xfc
      000043 F5 81            [12]  152 	mov	sp,a
      000045 EF               [12]  153 	mov	a,r7
      000046 60 11            [24]  154 	jz	00102$
                                    155 ;	tancotf.c:60: errno = ERANGE;
      000048 90r00r00         [24]  156 	mov	dptr,#_errno
      00004B 74 22            [12]  157 	mov	a,#0x22
      00004D F0               [24]  158 	movx	@dptr,a
      00004E E4               [12]  159 	clr	a
      00004F A3               [24]  160 	inc	dptr
      000050 F0               [24]  161 	movx	@dptr,a
                                    162 ;	tancotf.c:61: return 0.0;
      000051 90 00 00         [24]  163 	mov	dptr,#0x0000
      000054 F5 F0            [12]  164 	mov	b,a
      000056 02r05rC1         [24]  165 	ljmp	00115$
      000059                        166 00102$:
                                    167 ;	tancotf.c:65: n=(x*TWO_O_PI+(x>0.0?0.5:-0.5)); /*works for +-x*/
      000059 A8*00            [24]  168 	mov	r0,_bp
      00005B 08               [12]  169 	inc	r0
      00005C E6               [12]  170 	mov	a,@r0
      00005D C0 E0            [24]  171 	push	acc
      00005F 08               [12]  172 	inc	r0
      000060 E6               [12]  173 	mov	a,@r0
      000061 C0 E0            [24]  174 	push	acc
      000063 08               [12]  175 	inc	r0
      000064 E6               [12]  176 	mov	a,@r0
      000065 C0 E0            [24]  177 	push	acc
      000067 08               [12]  178 	inc	r0
      000068 E6               [12]  179 	mov	a,@r0
      000069 C0 E0            [24]  180 	push	acc
      00006B 90 F9 83         [24]  181 	mov	dptr,#0xf983
      00006E 75 F0 22         [24]  182 	mov	b,#0x22
      000071 74 3F            [12]  183 	mov	a,#0x3f
      000073 12r00r00         [24]  184 	lcall	___fsmul
      000076 AC 82            [24]  185 	mov	r4,dpl
      000078 AD 83            [24]  186 	mov	r5,dph
      00007A AE F0            [24]  187 	mov	r6,b
      00007C FF               [12]  188 	mov	r7,a
      00007D E5 81            [12]  189 	mov	a,sp
      00007F 24 FC            [12]  190 	add	a,#0xfc
      000081 F5 81            [12]  191 	mov	sp,a
      000083 C0 07            [24]  192 	push	ar7
      000085 C0 06            [24]  193 	push	ar6
      000087 C0 05            [24]  194 	push	ar5
      000089 C0 04            [24]  195 	push	ar4
      00008B A8*00            [24]  196 	mov	r0,_bp
      00008D 08               [12]  197 	inc	r0
      00008E E6               [12]  198 	mov	a,@r0
      00008F C0 E0            [24]  199 	push	acc
      000091 08               [12]  200 	inc	r0
      000092 E6               [12]  201 	mov	a,@r0
      000093 C0 E0            [24]  202 	push	acc
      000095 08               [12]  203 	inc	r0
      000096 E6               [12]  204 	mov	a,@r0
      000097 C0 E0            [24]  205 	push	acc
      000099 08               [12]  206 	inc	r0
      00009A E6               [12]  207 	mov	a,@r0
      00009B C0 E0            [24]  208 	push	acc
      00009D 90 00 00         [24]  209 	mov	dptr,#(0x00&0x00ff)
      0000A0 E4               [12]  210 	clr	a
      0000A1 F5 F0            [12]  211 	mov	b,a
      0000A3 12r00r00         [24]  212 	lcall	___fslt
      0000A6 AB 82            [24]  213 	mov	r3,dpl
      0000A8 E5 81            [12]  214 	mov	a,sp
      0000AA 24 FC            [12]  215 	add	a,#0xfc
      0000AC F5 81            [12]  216 	mov	sp,a
      0000AE D0 04            [24]  217 	pop	ar4
      0000B0 D0 05            [24]  218 	pop	ar5
      0000B2 D0 06            [24]  219 	pop	ar6
      0000B4 D0 07            [24]  220 	pop	ar7
      0000B6 EB               [12]  221 	mov	a,r3
      0000B7 60 10            [24]  222 	jz	00117$
      0000B9 E5*00            [12]  223 	mov	a,_bp
      0000BB 24 05            [12]  224 	add	a,#0x05
      0000BD F8               [12]  225 	mov	r0,a
      0000BE E4               [12]  226 	clr	a
      0000BF F6               [12]  227 	mov	@r0,a
      0000C0 08               [12]  228 	inc	r0
      0000C1 F6               [12]  229 	mov	@r0,a
      0000C2 08               [12]  230 	inc	r0
      0000C3 F6               [12]  231 	mov	@r0,a
      0000C4 08               [12]  232 	inc	r0
      0000C5 76 3F            [12]  233 	mov	@r0,#0x3f
      0000C7 80 0E            [24]  234 	sjmp	00118$
      0000C9                        235 00117$:
      0000C9 E5*00            [12]  236 	mov	a,_bp
      0000CB 24 05            [12]  237 	add	a,#0x05
      0000CD F8               [12]  238 	mov	r0,a
      0000CE E4               [12]  239 	clr	a
      0000CF F6               [12]  240 	mov	@r0,a
      0000D0 08               [12]  241 	inc	r0
      0000D1 F6               [12]  242 	mov	@r0,a
      0000D2 08               [12]  243 	inc	r0
      0000D3 F6               [12]  244 	mov	@r0,a
      0000D4 08               [12]  245 	inc	r0
      0000D5 76 BF            [12]  246 	mov	@r0,#0xbf
      0000D7                        247 00118$:
      0000D7 E5*00            [12]  248 	mov	a,_bp
      0000D9 24 05            [12]  249 	add	a,#0x05
      0000DB F8               [12]  250 	mov	r0,a
      0000DC E6               [12]  251 	mov	a,@r0
      0000DD C0 E0            [24]  252 	push	acc
      0000DF 08               [12]  253 	inc	r0
      0000E0 E6               [12]  254 	mov	a,@r0
      0000E1 C0 E0            [24]  255 	push	acc
      0000E3 08               [12]  256 	inc	r0
      0000E4 E6               [12]  257 	mov	a,@r0
      0000E5 C0 E0            [24]  258 	push	acc
      0000E7 08               [12]  259 	inc	r0
      0000E8 E6               [12]  260 	mov	a,@r0
      0000E9 C0 E0            [24]  261 	push	acc
      0000EB 8C 82            [24]  262 	mov	dpl,r4
      0000ED 8D 83            [24]  263 	mov	dph,r5
      0000EF 8E F0            [24]  264 	mov	b,r6
      0000F1 EF               [12]  265 	mov	a,r7
      0000F2 12r00r00         [24]  266 	lcall	___fsadd
      0000F5 AC 82            [24]  267 	mov	r4,dpl
      0000F7 AD 83            [24]  268 	mov	r5,dph
      0000F9 AE F0            [24]  269 	mov	r6,b
      0000FB FF               [12]  270 	mov	r7,a
      0000FC E5 81            [12]  271 	mov	a,sp
      0000FE 24 FC            [12]  272 	add	a,#0xfc
      000100 F5 81            [12]  273 	mov	sp,a
      000102 8C 82            [24]  274 	mov	dpl,r4
      000104 8D 83            [24]  275 	mov	dph,r5
      000106 8E F0            [24]  276 	mov	b,r6
      000108 EF               [12]  277 	mov	a,r7
      000109 12r00r00         [24]  278 	lcall	___fs2sint
      00010C AE 82            [24]  279 	mov	r6,dpl
      00010E AF 83            [24]  280 	mov	r7,dph
      000110 E5*00            [12]  281 	mov	a,_bp
      000112 24 1D            [12]  282 	add	a,#0x1d
      000114 F8               [12]  283 	mov	r0,a
      000115 A6 06            [24]  284 	mov	@r0,ar6
      000117 08               [12]  285 	inc	r0
      000118 A6 07            [24]  286 	mov	@r0,ar7
                                    287 ;	tancotf.c:66: xn=n;
      00011A E5*00            [12]  288 	mov	a,_bp
      00011C 24 1D            [12]  289 	add	a,#0x1d
      00011E F8               [12]  290 	mov	r0,a
      00011F 86 82            [24]  291 	mov	dpl,@r0
      000121 08               [12]  292 	inc	r0
      000122 86 83            [24]  293 	mov	dph,@r0
      000124 12r00r00         [24]  294 	lcall	___sint2fs
      000127 AA 82            [24]  295 	mov	r2,dpl
      000129 AB 83            [24]  296 	mov	r3,dph
      00012B AC F0            [24]  297 	mov	r4,b
      00012D FD               [12]  298 	mov	r5,a
      00012E E5*00            [12]  299 	mov	a,_bp
      000130 24 11            [12]  300 	add	a,#0x11
      000132 F8               [12]  301 	mov	r0,a
      000133 A6 02            [24]  302 	mov	@r0,ar2
      000135 08               [12]  303 	inc	r0
      000136 A6 03            [24]  304 	mov	@r0,ar3
      000138 08               [12]  305 	inc	r0
      000139 A6 04            [24]  306 	mov	@r0,ar4
      00013B 08               [12]  307 	inc	r0
      00013C A6 05            [24]  308 	mov	@r0,ar5
                                    309 ;	tancotf.c:68: xnum=(int)x;
      00013E A8*00            [24]  310 	mov	r0,_bp
      000140 08               [12]  311 	inc	r0
      000141 86 82            [24]  312 	mov	dpl,@r0
      000143 08               [12]  313 	inc	r0
      000144 86 83            [24]  314 	mov	dph,@r0
      000146 08               [12]  315 	inc	r0
      000147 86 F0            [24]  316 	mov	b,@r0
      000149 08               [12]  317 	inc	r0
      00014A E6               [12]  318 	mov	a,@r0
      00014B 12r00r00         [24]  319 	lcall	___fs2sint
      00014E 12r00r00         [24]  320 	lcall	___sint2fs
      000151 C8               [12]  321 	xch	a,r0
      000152 E5*00            [12]  322 	mov	a,_bp
      000154 24 05            [12]  323 	add	a,#0x05
      000156 C8               [12]  324 	xch	a,r0
      000157 A6 82            [24]  325 	mov	@r0,dpl
      000159 08               [12]  326 	inc	r0
      00015A A6 83            [24]  327 	mov	@r0,dph
      00015C 08               [12]  328 	inc	r0
      00015D A6 F0            [24]  329 	mov	@r0,b
      00015F 08               [12]  330 	inc	r0
      000160 F6               [12]  331 	mov	@r0,a
                                    332 ;	tancotf.c:69: xden=x-xnum;
      000161 E5*00            [12]  333 	mov	a,_bp
      000163 24 05            [12]  334 	add	a,#0x05
      000165 F8               [12]  335 	mov	r0,a
      000166 E6               [12]  336 	mov	a,@r0
      000167 C0 E0            [24]  337 	push	acc
      000169 08               [12]  338 	inc	r0
      00016A E6               [12]  339 	mov	a,@r0
      00016B C0 E0            [24]  340 	push	acc
      00016D 08               [12]  341 	inc	r0
      00016E E6               [12]  342 	mov	a,@r0
      00016F C0 E0            [24]  343 	push	acc
      000171 08               [12]  344 	inc	r0
      000172 E6               [12]  345 	mov	a,@r0
      000173 C0 E0            [24]  346 	push	acc
      000175 A8*00            [24]  347 	mov	r0,_bp
      000177 08               [12]  348 	inc	r0
      000178 86 82            [24]  349 	mov	dpl,@r0
      00017A 08               [12]  350 	inc	r0
      00017B 86 83            [24]  351 	mov	dph,@r0
      00017D 08               [12]  352 	inc	r0
      00017E 86 F0            [24]  353 	mov	b,@r0
      000180 08               [12]  354 	inc	r0
      000181 E6               [12]  355 	mov	a,@r0
      000182 12r00r00         [24]  356 	lcall	___fssub
      000185 C8               [12]  357 	xch	a,r0
      000186 E5*00            [12]  358 	mov	a,_bp
      000188 24 09            [12]  359 	add	a,#0x09
      00018A C8               [12]  360 	xch	a,r0
      00018B A6 82            [24]  361 	mov	@r0,dpl
      00018D 08               [12]  362 	inc	r0
      00018E A6 83            [24]  363 	mov	@r0,dph
      000190 08               [12]  364 	inc	r0
      000191 A6 F0            [24]  365 	mov	@r0,b
      000193 08               [12]  366 	inc	r0
      000194 F6               [12]  367 	mov	@r0,a
      000195 E5 81            [12]  368 	mov	a,sp
      000197 24 FC            [12]  369 	add	a,#0xfc
      000199 F5 81            [12]  370 	mov	sp,a
                                    371 ;	tancotf.c:70: f=((xnum-xn*C1)+xden)-xn*C2;
      00019B E5*00            [12]  372 	mov	a,_bp
      00019D 24 11            [12]  373 	add	a,#0x11
      00019F F8               [12]  374 	mov	r0,a
      0001A0 E6               [12]  375 	mov	a,@r0
      0001A1 C0 E0            [24]  376 	push	acc
      0001A3 08               [12]  377 	inc	r0
      0001A4 E6               [12]  378 	mov	a,@r0
      0001A5 C0 E0            [24]  379 	push	acc
      0001A7 08               [12]  380 	inc	r0
      0001A8 E6               [12]  381 	mov	a,@r0
      0001A9 C0 E0            [24]  382 	push	acc
      0001AB 08               [12]  383 	inc	r0
      0001AC E6               [12]  384 	mov	a,@r0
      0001AD C0 E0            [24]  385 	push	acc
      0001AF 90 00 00         [24]  386 	mov	dptr,#0x0000
      0001B2 75 F0 C9         [24]  387 	mov	b,#0xc9
      0001B5 74 3F            [12]  388 	mov	a,#0x3f
      0001B7 12r00r00         [24]  389 	lcall	___fsmul
      0001BA AC 82            [24]  390 	mov	r4,dpl
      0001BC AD 83            [24]  391 	mov	r5,dph
      0001BE AE F0            [24]  392 	mov	r6,b
      0001C0 FF               [12]  393 	mov	r7,a
      0001C1 E5 81            [12]  394 	mov	a,sp
      0001C3 24 FC            [12]  395 	add	a,#0xfc
      0001C5 F5 81            [12]  396 	mov	sp,a
      0001C7 C0 04            [24]  397 	push	ar4
      0001C9 C0 05            [24]  398 	push	ar5
      0001CB C0 06            [24]  399 	push	ar6
      0001CD C0 07            [24]  400 	push	ar7
      0001CF E5*00            [12]  401 	mov	a,_bp
      0001D1 24 05            [12]  402 	add	a,#0x05
      0001D3 F8               [12]  403 	mov	r0,a
      0001D4 86 82            [24]  404 	mov	dpl,@r0
      0001D6 08               [12]  405 	inc	r0
      0001D7 86 83            [24]  406 	mov	dph,@r0
      0001D9 08               [12]  407 	inc	r0
      0001DA 86 F0            [24]  408 	mov	b,@r0
      0001DC 08               [12]  409 	inc	r0
      0001DD E6               [12]  410 	mov	a,@r0
      0001DE 12r00r00         [24]  411 	lcall	___fssub
      0001E1 AC 82            [24]  412 	mov	r4,dpl
      0001E3 AD 83            [24]  413 	mov	r5,dph
      0001E5 AE F0            [24]  414 	mov	r6,b
      0001E7 FF               [12]  415 	mov	r7,a
      0001E8 E5 81            [12]  416 	mov	a,sp
      0001EA 24 FC            [12]  417 	add	a,#0xfc
      0001EC F5 81            [12]  418 	mov	sp,a
      0001EE E5*00            [12]  419 	mov	a,_bp
      0001F0 24 09            [12]  420 	add	a,#0x09
      0001F2 F8               [12]  421 	mov	r0,a
      0001F3 E6               [12]  422 	mov	a,@r0
      0001F4 C0 E0            [24]  423 	push	acc
      0001F6 08               [12]  424 	inc	r0
      0001F7 E6               [12]  425 	mov	a,@r0
      0001F8 C0 E0            [24]  426 	push	acc
      0001FA 08               [12]  427 	inc	r0
      0001FB E6               [12]  428 	mov	a,@r0
      0001FC C0 E0            [24]  429 	push	acc
      0001FE 08               [12]  430 	inc	r0
      0001FF E6               [12]  431 	mov	a,@r0
      000200 C0 E0            [24]  432 	push	acc
      000202 8C 82            [24]  433 	mov	dpl,r4
      000204 8D 83            [24]  434 	mov	dph,r5
      000206 8E F0            [24]  435 	mov	b,r6
      000208 EF               [12]  436 	mov	a,r7
      000209 12r00r00         [24]  437 	lcall	___fsadd
      00020C C8               [12]  438 	xch	a,r0
      00020D E5*00            [12]  439 	mov	a,_bp
      00020F 24 09            [12]  440 	add	a,#0x09
      000211 C8               [12]  441 	xch	a,r0
      000212 A6 82            [24]  442 	mov	@r0,dpl
      000214 08               [12]  443 	inc	r0
      000215 A6 83            [24]  444 	mov	@r0,dph
      000217 08               [12]  445 	inc	r0
      000218 A6 F0            [24]  446 	mov	@r0,b
      00021A 08               [12]  447 	inc	r0
      00021B F6               [12]  448 	mov	@r0,a
      00021C E5 81            [12]  449 	mov	a,sp
      00021E 24 FC            [12]  450 	add	a,#0xfc
      000220 F5 81            [12]  451 	mov	sp,a
      000222 E5*00            [12]  452 	mov	a,_bp
      000224 24 11            [12]  453 	add	a,#0x11
      000226 F8               [12]  454 	mov	r0,a
      000227 E6               [12]  455 	mov	a,@r0
      000228 C0 E0            [24]  456 	push	acc
      00022A 08               [12]  457 	inc	r0
      00022B E6               [12]  458 	mov	a,@r0
      00022C C0 E0            [24]  459 	push	acc
      00022E 08               [12]  460 	inc	r0
      00022F E6               [12]  461 	mov	a,@r0
      000230 C0 E0            [24]  462 	push	acc
      000232 08               [12]  463 	inc	r0
      000233 E6               [12]  464 	mov	a,@r0
      000234 C0 E0            [24]  465 	push	acc
      000236 90 AA 22         [24]  466 	mov	dptr,#0xaa22
      000239 75 F0 FD         [24]  467 	mov	b,#0xfd
      00023C 74 39            [12]  468 	mov	a,#0x39
      00023E 12r00r00         [24]  469 	lcall	___fsmul
      000241 AA 82            [24]  470 	mov	r2,dpl
      000243 AB 83            [24]  471 	mov	r3,dph
      000245 AE F0            [24]  472 	mov	r6,b
      000247 FF               [12]  473 	mov	r7,a
      000248 E5 81            [12]  474 	mov	a,sp
      00024A 24 FC            [12]  475 	add	a,#0xfc
      00024C F5 81            [12]  476 	mov	sp,a
      00024E C0 02            [24]  477 	push	ar2
      000250 C0 03            [24]  478 	push	ar3
      000252 C0 06            [24]  479 	push	ar6
      000254 C0 07            [24]  480 	push	ar7
      000256 E5*00            [12]  481 	mov	a,_bp
      000258 24 09            [12]  482 	add	a,#0x09
      00025A F8               [12]  483 	mov	r0,a
      00025B 86 82            [24]  484 	mov	dpl,@r0
      00025D 08               [12]  485 	inc	r0
      00025E 86 83            [24]  486 	mov	dph,@r0
      000260 08               [12]  487 	inc	r0
      000261 86 F0            [24]  488 	mov	b,@r0
      000263 08               [12]  489 	inc	r0
      000264 E6               [12]  490 	mov	a,@r0
      000265 12r00r00         [24]  491 	lcall	___fssub
      000268 AC 82            [24]  492 	mov	r4,dpl
      00026A AD 83            [24]  493 	mov	r5,dph
      00026C AE F0            [24]  494 	mov	r6,b
      00026E FF               [12]  495 	mov	r7,a
      00026F E5 81            [12]  496 	mov	a,sp
      000271 24 FC            [12]  497 	add	a,#0xfc
      000273 F5 81            [12]  498 	mov	sp,a
      000275 E5*00            [12]  499 	mov	a,_bp
      000277 24 0D            [12]  500 	add	a,#0x0d
      000279 F8               [12]  501 	mov	r0,a
      00027A A6 04            [24]  502 	mov	@r0,ar4
      00027C 08               [12]  503 	inc	r0
      00027D A6 05            [24]  504 	mov	@r0,ar5
      00027F 08               [12]  505 	inc	r0
      000280 A6 06            [24]  506 	mov	@r0,ar6
      000282 08               [12]  507 	inc	r0
      000283 A6 07            [24]  508 	mov	@r0,ar7
                                    509 ;	tancotf.c:72: if (fabsf(f) < EPS)
      000285 E5*00            [12]  510 	mov	a,_bp
      000287 24 0D            [12]  511 	add	a,#0x0d
      000289 F8               [12]  512 	mov	r0,a
      00028A 86 82            [24]  513 	mov	dpl,@r0
      00028C 08               [12]  514 	inc	r0
      00028D 86 83            [24]  515 	mov	dph,@r0
      00028F 08               [12]  516 	inc	r0
      000290 86 F0            [24]  517 	mov	b,@r0
      000292 08               [12]  518 	inc	r0
      000293 E6               [12]  519 	mov	a,@r0
      000294 12r00r00         [24]  520 	lcall	_fabsf
      000297 AA 82            [24]  521 	mov	r2,dpl
      000299 AB 83            [24]  522 	mov	r3,dph
      00029B AE F0            [24]  523 	mov	r6,b
      00029D FF               [12]  524 	mov	r7,a
      00029E E4               [12]  525 	clr	a
      00029F C0 E0            [24]  526 	push	acc
      0002A1 C0 E0            [24]  527 	push	acc
      0002A3 74 80            [12]  528 	mov	a,#0x80
      0002A5 C0 E0            [24]  529 	push	acc
      0002A7 74 39            [12]  530 	mov	a,#0x39
      0002A9 C0 E0            [24]  531 	push	acc
      0002AB 8A 82            [24]  532 	mov	dpl,r2
      0002AD 8B 83            [24]  533 	mov	dph,r3
      0002AF 8E F0            [24]  534 	mov	b,r6
      0002B1 EF               [12]  535 	mov	a,r7
      0002B2 12r00r00         [24]  536 	lcall	___fslt
      0002B5 AF 82            [24]  537 	mov	r7,dpl
      0002B7 E5 81            [12]  538 	mov	a,sp
      0002B9 24 FC            [12]  539 	add	a,#0xfc
      0002BB F5 81            [12]  540 	mov	sp,a
      0002BD EF               [12]  541 	mov	a,r7
      0002BE 60 2A            [24]  542 	jz	00104$
                                    543 ;	tancotf.c:74: xnum = f;
      0002C0 E5*00            [12]  544 	mov	a,_bp
      0002C2 24 0D            [12]  545 	add	a,#0x0d
      0002C4 F8               [12]  546 	mov	r0,a
      0002C5 E5*00            [12]  547 	mov	a,_bp
      0002C7 24 15            [12]  548 	add	a,#0x15
      0002C9 F9               [12]  549 	mov	r1,a
      0002CA E6               [12]  550 	mov	a,@r0
      0002CB F7               [12]  551 	mov	@r1,a
      0002CC 08               [12]  552 	inc	r0
      0002CD E6               [12]  553 	mov	a,@r0
      0002CE 09               [12]  554 	inc	r1
      0002CF F7               [12]  555 	mov	@r1,a
      0002D0 08               [12]  556 	inc	r0
      0002D1 E6               [12]  557 	mov	a,@r0
      0002D2 09               [12]  558 	inc	r1
      0002D3 F7               [12]  559 	mov	@r1,a
      0002D4 08               [12]  560 	inc	r0
      0002D5 E6               [12]  561 	mov	a,@r0
      0002D6 09               [12]  562 	inc	r1
      0002D7 F7               [12]  563 	mov	@r1,a
                                    564 ;	tancotf.c:75: xden = 1.0;
      0002D8 E5*00            [12]  565 	mov	a,_bp
      0002DA 24 19            [12]  566 	add	a,#0x19
      0002DC F8               [12]  567 	mov	r0,a
      0002DD E4               [12]  568 	clr	a
      0002DE F6               [12]  569 	mov	@r0,a
      0002DF 08               [12]  570 	inc	r0
      0002E0 F6               [12]  571 	mov	@r0,a
      0002E1 08               [12]  572 	inc	r0
      0002E2 76 80            [12]  573 	mov	@r0,#0x80
      0002E4 08               [12]  574 	inc	r0
      0002E5 76 3F            [12]  575 	mov	@r0,#0x3f
      0002E7 02r04rA1         [24]  576 	ljmp	00105$
      0002EA                        577 00104$:
                                    578 ;	tancotf.c:79: g = f*f;
      0002EA E5*00            [12]  579 	mov	a,_bp
      0002EC 24 0D            [12]  580 	add	a,#0x0d
      0002EE F8               [12]  581 	mov	r0,a
      0002EF E6               [12]  582 	mov	a,@r0
      0002F0 C0 E0            [24]  583 	push	acc
      0002F2 08               [12]  584 	inc	r0
      0002F3 E6               [12]  585 	mov	a,@r0
      0002F4 C0 E0            [24]  586 	push	acc
      0002F6 08               [12]  587 	inc	r0
      0002F7 E6               [12]  588 	mov	a,@r0
      0002F8 C0 E0            [24]  589 	push	acc
      0002FA 08               [12]  590 	inc	r0
      0002FB E6               [12]  591 	mov	a,@r0
      0002FC C0 E0            [24]  592 	push	acc
      0002FE E5*00            [12]  593 	mov	a,_bp
      000300 24 0D            [12]  594 	add	a,#0x0d
      000302 F8               [12]  595 	mov	r0,a
      000303 86 82            [24]  596 	mov	dpl,@r0
      000305 08               [12]  597 	inc	r0
      000306 86 83            [24]  598 	mov	dph,@r0
      000308 08               [12]  599 	inc	r0
      000309 86 F0            [24]  600 	mov	b,@r0
      00030B 08               [12]  601 	inc	r0
      00030C E6               [12]  602 	mov	a,@r0
      00030D 12r00r00         [24]  603 	lcall	___fsmul
      000310 AF 82            [24]  604 	mov	r7,dpl
      000312 AE 83            [24]  605 	mov	r6,dph
      000314 AD F0            [24]  606 	mov	r5,b
      000316 FC               [12]  607 	mov	r4,a
      000317 E5 81            [12]  608 	mov	a,sp
      000319 24 FC            [12]  609 	add	a,#0xfc
      00031B F5 81            [12]  610 	mov	sp,a
                                    611 ;	tancotf.c:80: xnum = P(f,g);
      00031D C0 07            [24]  612 	push	ar7
      00031F C0 06            [24]  613 	push	ar6
      000321 C0 05            [24]  614 	push	ar5
      000323 C0 04            [24]  615 	push	ar4
      000325 C0 07            [24]  616 	push	ar7
      000327 C0 06            [24]  617 	push	ar6
      000329 C0 05            [24]  618 	push	ar5
      00032B C0 04            [24]  619 	push	ar4
      00032D 90 33 B8         [24]  620 	mov	dptr,#0x33b8
      000330 75 F0 C4         [24]  621 	mov	b,#0xc4
      000333 74 BD            [12]  622 	mov	a,#0xbd
      000335 12r00r00         [24]  623 	lcall	___fsmul
      000338 C8               [12]  624 	xch	a,r0
      000339 E5*00            [12]  625 	mov	a,_bp
      00033B 24 09            [12]  626 	add	a,#0x09
      00033D C8               [12]  627 	xch	a,r0
      00033E A6 82            [24]  628 	mov	@r0,dpl
      000340 08               [12]  629 	inc	r0
      000341 A6 83            [24]  630 	mov	@r0,dph
      000343 08               [12]  631 	inc	r0
      000344 A6 F0            [24]  632 	mov	@r0,b
      000346 08               [12]  633 	inc	r0
      000347 F6               [12]  634 	mov	@r0,a
      000348 E5 81            [12]  635 	mov	a,sp
      00034A 24 FC            [12]  636 	add	a,#0xfc
      00034C F5 81            [12]  637 	mov	sp,a
      00034E E5*00            [12]  638 	mov	a,_bp
      000350 24 0D            [12]  639 	add	a,#0x0d
      000352 F8               [12]  640 	mov	r0,a
      000353 E6               [12]  641 	mov	a,@r0
      000354 C0 E0            [24]  642 	push	acc
      000356 08               [12]  643 	inc	r0
      000357 E6               [12]  644 	mov	a,@r0
      000358 C0 E0            [24]  645 	push	acc
      00035A 08               [12]  646 	inc	r0
      00035B E6               [12]  647 	mov	a,@r0
      00035C C0 E0            [24]  648 	push	acc
      00035E 08               [12]  649 	inc	r0
      00035F E6               [12]  650 	mov	a,@r0
      000360 C0 E0            [24]  651 	push	acc
      000362 E5*00            [12]  652 	mov	a,_bp
      000364 24 09            [12]  653 	add	a,#0x09
      000366 F8               [12]  654 	mov	r0,a
      000367 86 82            [24]  655 	mov	dpl,@r0
      000369 08               [12]  656 	inc	r0
      00036A 86 83            [24]  657 	mov	dph,@r0
      00036C 08               [12]  658 	inc	r0
      00036D 86 F0            [24]  659 	mov	b,@r0
      00036F 08               [12]  660 	inc	r0
      000370 E6               [12]  661 	mov	a,@r0
      000371 12r00r00         [24]  662 	lcall	___fsmul
      000374 C8               [12]  663 	xch	a,r0
      000375 E5*00            [12]  664 	mov	a,_bp
      000377 24 09            [12]  665 	add	a,#0x09
      000379 C8               [12]  666 	xch	a,r0
      00037A A6 82            [24]  667 	mov	@r0,dpl
      00037C 08               [12]  668 	inc	r0
      00037D A6 83            [24]  669 	mov	@r0,dph
      00037F 08               [12]  670 	inc	r0
      000380 A6 F0            [24]  671 	mov	@r0,b
      000382 08               [12]  672 	inc	r0
      000383 F6               [12]  673 	mov	@r0,a
      000384 E5 81            [12]  674 	mov	a,sp
      000386 24 FC            [12]  675 	add	a,#0xfc
      000388 F5 81            [12]  676 	mov	sp,a
      00038A E5*00            [12]  677 	mov	a,_bp
      00038C 24 0D            [12]  678 	add	a,#0x0d
      00038E F8               [12]  679 	mov	r0,a
      00038F E6               [12]  680 	mov	a,@r0
      000390 C0 E0            [24]  681 	push	acc
      000392 08               [12]  682 	inc	r0
      000393 E6               [12]  683 	mov	a,@r0
      000394 C0 E0            [24]  684 	push	acc
      000396 08               [12]  685 	inc	r0
      000397 E6               [12]  686 	mov	a,@r0
      000398 C0 E0            [24]  687 	push	acc
      00039A 08               [12]  688 	inc	r0
      00039B E6               [12]  689 	mov	a,@r0
      00039C C0 E0            [24]  690 	push	acc
      00039E E5*00            [12]  691 	mov	a,_bp
      0003A0 24 09            [12]  692 	add	a,#0x09
      0003A2 F8               [12]  693 	mov	r0,a
      0003A3 86 82            [24]  694 	mov	dpl,@r0
      0003A5 08               [12]  695 	inc	r0
      0003A6 86 83            [24]  696 	mov	dph,@r0
      0003A8 08               [12]  697 	inc	r0
      0003A9 86 F0            [24]  698 	mov	b,@r0
      0003AB 08               [12]  699 	inc	r0
      0003AC E6               [12]  700 	mov	a,@r0
      0003AD 12r00r00         [24]  701 	lcall	___fsadd
      0003B0 C8               [12]  702 	xch	a,r0
      0003B1 E5*00            [12]  703 	mov	a,_bp
      0003B3 24 09            [12]  704 	add	a,#0x09
      0003B5 C8               [12]  705 	xch	a,r0
      0003B6 A6 82            [24]  706 	mov	@r0,dpl
      0003B8 08               [12]  707 	inc	r0
      0003B9 A6 83            [24]  708 	mov	@r0,dph
      0003BB 08               [12]  709 	inc	r0
      0003BC A6 F0            [24]  710 	mov	@r0,b
      0003BE 08               [12]  711 	inc	r0
      0003BF F6               [12]  712 	mov	@r0,a
      0003C0 E5 81            [12]  713 	mov	a,sp
      0003C2 24 FC            [12]  714 	add	a,#0xfc
      0003C4 F5 81            [12]  715 	mov	sp,a
      0003C6 D0 04            [24]  716 	pop	ar4
      0003C8 D0 05            [24]  717 	pop	ar5
      0003CA D0 06            [24]  718 	pop	ar6
      0003CC D0 07            [24]  719 	pop	ar7
      0003CE E5*00            [12]  720 	mov	a,_bp
      0003D0 24 09            [12]  721 	add	a,#0x09
      0003D2 F8               [12]  722 	mov	r0,a
      0003D3 E5*00            [12]  723 	mov	a,_bp
      0003D5 24 15            [12]  724 	add	a,#0x15
      0003D7 F9               [12]  725 	mov	r1,a
      0003D8 E6               [12]  726 	mov	a,@r0
      0003D9 F7               [12]  727 	mov	@r1,a
      0003DA 08               [12]  728 	inc	r0
      0003DB E6               [12]  729 	mov	a,@r0
      0003DC 09               [12]  730 	inc	r1
      0003DD F7               [12]  731 	mov	@r1,a
      0003DE 08               [12]  732 	inc	r0
      0003DF E6               [12]  733 	mov	a,@r0
      0003E0 09               [12]  734 	inc	r1
      0003E1 F7               [12]  735 	mov	@r1,a
      0003E2 08               [12]  736 	inc	r0
      0003E3 E6               [12]  737 	mov	a,@r0
      0003E4 09               [12]  738 	inc	r1
      0003E5 F7               [12]  739 	mov	@r1,a
                                    740 ;	tancotf.c:81: xden = Q(g);
      0003E6 C0 07            [24]  741 	push	ar7
      0003E8 C0 06            [24]  742 	push	ar6
      0003EA C0 05            [24]  743 	push	ar5
      0003EC C0 04            [24]  744 	push	ar4
      0003EE C0 07            [24]  745 	push	ar7
      0003F0 C0 06            [24]  746 	push	ar6
      0003F2 C0 05            [24]  747 	push	ar5
      0003F4 C0 04            [24]  748 	push	ar4
      0003F6 90 33 75         [24]  749 	mov	dptr,#0x3375
      0003F9 75 F0 1F         [24]  750 	mov	b,#0x1f
      0003FC 74 3C            [12]  751 	mov	a,#0x3c
      0003FE 12r00r00         [24]  752 	lcall	___fsmul
      000401 C8               [12]  753 	xch	a,r0
      000402 E5*00            [12]  754 	mov	a,_bp
      000404 24 09            [12]  755 	add	a,#0x09
      000406 C8               [12]  756 	xch	a,r0
      000407 A6 82            [24]  757 	mov	@r0,dpl
      000409 08               [12]  758 	inc	r0
      00040A A6 83            [24]  759 	mov	@r0,dph
      00040C 08               [12]  760 	inc	r0
      00040D A6 F0            [24]  761 	mov	@r0,b
      00040F 08               [12]  762 	inc	r0
      000410 F6               [12]  763 	mov	@r0,a
      000411 E5 81            [12]  764 	mov	a,sp
      000413 24 FC            [12]  765 	add	a,#0xfc
      000415 F5 81            [12]  766 	mov	sp,a
      000417 74 AF            [12]  767 	mov	a,#0xaf
      000419 C0 E0            [24]  768 	push	acc
      00041B 74 B7            [12]  769 	mov	a,#0xb7
      00041D C0 E0            [24]  770 	push	acc
      00041F 03               [12]  771 	rr	a
      000420 C0 E0            [24]  772 	push	acc
      000422 74 BE            [12]  773 	mov	a,#0xbe
      000424 C0 E0            [24]  774 	push	acc
      000426 E5*00            [12]  775 	mov	a,_bp
      000428 24 09            [12]  776 	add	a,#0x09
      00042A F8               [12]  777 	mov	r0,a
      00042B 86 82            [24]  778 	mov	dpl,@r0
      00042D 08               [12]  779 	inc	r0
      00042E 86 83            [24]  780 	mov	dph,@r0
      000430 08               [12]  781 	inc	r0
      000431 86 F0            [24]  782 	mov	b,@r0
      000433 08               [12]  783 	inc	r0
      000434 E6               [12]  784 	mov	a,@r0
      000435 12r00r00         [24]  785 	lcall	___fsadd
      000438 C8               [12]  786 	xch	a,r0
      000439 E5*00            [12]  787 	mov	a,_bp
      00043B 24 09            [12]  788 	add	a,#0x09
      00043D C8               [12]  789 	xch	a,r0
      00043E A6 82            [24]  790 	mov	@r0,dpl
      000440 08               [12]  791 	inc	r0
      000441 A6 83            [24]  792 	mov	@r0,dph
      000443 08               [12]  793 	inc	r0
      000444 A6 F0            [24]  794 	mov	@r0,b
      000446 08               [12]  795 	inc	r0
      000447 F6               [12]  796 	mov	@r0,a
      000448 E5 81            [12]  797 	mov	a,sp
      00044A 24 FC            [12]  798 	add	a,#0xfc
      00044C F5 81            [12]  799 	mov	sp,a
      00044E E5*00            [12]  800 	mov	a,_bp
      000450 24 09            [12]  801 	add	a,#0x09
      000452 F8               [12]  802 	mov	r0,a
      000453 86 82            [24]  803 	mov	dpl,@r0
      000455 08               [12]  804 	inc	r0
      000456 86 83            [24]  805 	mov	dph,@r0
      000458 08               [12]  806 	inc	r0
      000459 86 F0            [24]  807 	mov	b,@r0
      00045B 08               [12]  808 	inc	r0
      00045C E6               [12]  809 	mov	a,@r0
      00045D 12r00r00         [24]  810 	lcall	___fsmul
      000460 AF 82            [24]  811 	mov	r7,dpl
      000462 AE 83            [24]  812 	mov	r6,dph
      000464 AD F0            [24]  813 	mov	r5,b
      000466 FC               [12]  814 	mov	r4,a
      000467 E5 81            [12]  815 	mov	a,sp
      000469 24 FC            [12]  816 	add	a,#0xfc
      00046B F5 81            [12]  817 	mov	sp,a
      00046D E4               [12]  818 	clr	a
      00046E C0 E0            [24]  819 	push	acc
      000470 C0 E0            [24]  820 	push	acc
      000472 74 80            [12]  821 	mov	a,#0x80
      000474 C0 E0            [24]  822 	push	acc
      000476 74 3F            [12]  823 	mov	a,#0x3f
      000478 C0 E0            [24]  824 	push	acc
      00047A 8F 82            [24]  825 	mov	dpl,r7
      00047C 8E 83            [24]  826 	mov	dph,r6
      00047E 8D F0            [24]  827 	mov	b,r5
      000480 EC               [12]  828 	mov	a,r4
      000481 12r00r00         [24]  829 	lcall	___fsadd
      000484 AC 82            [24]  830 	mov	r4,dpl
      000486 AD 83            [24]  831 	mov	r5,dph
      000488 AE F0            [24]  832 	mov	r6,b
      00048A FF               [12]  833 	mov	r7,a
      00048B E5 81            [12]  834 	mov	a,sp
      00048D 24 FC            [12]  835 	add	a,#0xfc
      00048F F5 81            [12]  836 	mov	sp,a
      000491 E5*00            [12]  837 	mov	a,_bp
      000493 24 19            [12]  838 	add	a,#0x19
      000495 F8               [12]  839 	mov	r0,a
      000496 A6 04            [24]  840 	mov	@r0,ar4
      000498 08               [12]  841 	inc	r0
      000499 A6 05            [24]  842 	mov	@r0,ar5
      00049B 08               [12]  843 	inc	r0
      00049C A6 06            [24]  844 	mov	@r0,ar6
      00049E 08               [12]  845 	inc	r0
      00049F A6 07            [24]  846 	mov	@r0,ar7
      0004A1                        847 00105$:
                                    848 ;	tancotf.c:84: if(n&1)
      0004A1 E5*00            [12]  849 	mov	a,_bp
      0004A3 24 1D            [12]  850 	add	a,#0x1d
      0004A5 F8               [12]  851 	mov	r0,a
      0004A6 E6               [12]  852 	mov	a,@r0
      0004A7 20 E0 03         [24]  853 	jb	acc.0,00152$
      0004AA 02r05r43         [24]  854 	ljmp	00113$
      0004AD                        855 00152$:
                                    856 ;	tancotf.c:87: if(iscotan) return (-xnum/xden);
      0004AD E5*00            [12]  857 	mov	a,_bp
      0004AF 24 FD            [12]  858 	add	a,#0xfd
      0004B1 F8               [12]  859 	mov	r0,a
      0004B2 E6               [12]  860 	mov	a,@r0
      0004B3 60 47            [24]  861 	jz	00107$
      0004B5 E5*00            [12]  862 	mov	a,_bp
      0004B7 24 15            [12]  863 	add	a,#0x15
      0004B9 F8               [12]  864 	mov	r0,a
      0004BA 86 04            [24]  865 	mov	ar4,@r0
      0004BC 08               [12]  866 	inc	r0
      0004BD 86 05            [24]  867 	mov	ar5,@r0
      0004BF 08               [12]  868 	inc	r0
      0004C0 86 06            [24]  869 	mov	ar6,@r0
      0004C2 08               [12]  870 	inc	r0
      0004C3 E6               [12]  871 	mov	a,@r0
      0004C4 B2 E7            [12]  872 	cpl	acc.7
      0004C6 FF               [12]  873 	mov	r7,a
      0004C7 E5*00            [12]  874 	mov	a,_bp
      0004C9 24 19            [12]  875 	add	a,#0x19
      0004CB F8               [12]  876 	mov	r0,a
      0004CC E6               [12]  877 	mov	a,@r0
      0004CD C0 E0            [24]  878 	push	acc
      0004CF 08               [12]  879 	inc	r0
      0004D0 E6               [12]  880 	mov	a,@r0
      0004D1 C0 E0            [24]  881 	push	acc
      0004D3 08               [12]  882 	inc	r0
      0004D4 E6               [12]  883 	mov	a,@r0
      0004D5 C0 E0            [24]  884 	push	acc
      0004D7 08               [12]  885 	inc	r0
      0004D8 E6               [12]  886 	mov	a,@r0
      0004D9 C0 E0            [24]  887 	push	acc
      0004DB 8C 82            [24]  888 	mov	dpl,r4
      0004DD 8D 83            [24]  889 	mov	dph,r5
      0004DF 8E F0            [24]  890 	mov	b,r6
      0004E1 EF               [12]  891 	mov	a,r7
      0004E2 12r00r00         [24]  892 	lcall	___fsdiv
      0004E5 AC 82            [24]  893 	mov	r4,dpl
      0004E7 AD 83            [24]  894 	mov	r5,dph
      0004E9 AE F0            [24]  895 	mov	r6,b
      0004EB FF               [12]  896 	mov	r7,a
      0004EC E5 81            [12]  897 	mov	a,sp
      0004EE 24 FC            [12]  898 	add	a,#0xfc
      0004F0 F5 81            [12]  899 	mov	sp,a
      0004F2 8C 82            [24]  900 	mov	dpl,r4
      0004F4 8D 83            [24]  901 	mov	dph,r5
      0004F6 8E F0            [24]  902 	mov	b,r6
      0004F8 EF               [12]  903 	mov	a,r7
      0004F9 02r05rC1         [24]  904 	ljmp	00115$
      0004FC                        905 00107$:
                                    906 ;	tancotf.c:88: else return (-xden/xnum);
      0004FC E5*00            [12]  907 	mov	a,_bp
      0004FE 24 19            [12]  908 	add	a,#0x19
      000500 F8               [12]  909 	mov	r0,a
      000501 86 04            [24]  910 	mov	ar4,@r0
      000503 08               [12]  911 	inc	r0
      000504 86 05            [24]  912 	mov	ar5,@r0
      000506 08               [12]  913 	inc	r0
      000507 86 06            [24]  914 	mov	ar6,@r0
      000509 08               [12]  915 	inc	r0
      00050A E6               [12]  916 	mov	a,@r0
      00050B B2 E7            [12]  917 	cpl	acc.7
      00050D FF               [12]  918 	mov	r7,a
      00050E E5*00            [12]  919 	mov	a,_bp
      000510 24 15            [12]  920 	add	a,#0x15
      000512 F8               [12]  921 	mov	r0,a
      000513 E6               [12]  922 	mov	a,@r0
      000514 C0 E0            [24]  923 	push	acc
      000516 08               [12]  924 	inc	r0
      000517 E6               [12]  925 	mov	a,@r0
      000518 C0 E0            [24]  926 	push	acc
      00051A 08               [12]  927 	inc	r0
      00051B E6               [12]  928 	mov	a,@r0
      00051C C0 E0            [24]  929 	push	acc
      00051E 08               [12]  930 	inc	r0
      00051F E6               [12]  931 	mov	a,@r0
      000520 C0 E0            [24]  932 	push	acc
      000522 8C 82            [24]  933 	mov	dpl,r4
      000524 8D 83            [24]  934 	mov	dph,r5
      000526 8E F0            [24]  935 	mov	b,r6
      000528 EF               [12]  936 	mov	a,r7
      000529 12r00r00         [24]  937 	lcall	___fsdiv
      00052C AC 82            [24]  938 	mov	r4,dpl
      00052E AD 83            [24]  939 	mov	r5,dph
      000530 AE F0            [24]  940 	mov	r6,b
      000532 FF               [12]  941 	mov	r7,a
      000533 E5 81            [12]  942 	mov	a,sp
      000535 24 FC            [12]  943 	add	a,#0xfc
      000537 F5 81            [12]  944 	mov	sp,a
      000539 8C 82            [24]  945 	mov	dpl,r4
      00053B 8D 83            [24]  946 	mov	dph,r5
      00053D 8E F0            [24]  947 	mov	b,r6
      00053F EF               [12]  948 	mov	a,r7
      000540 02r05rC1         [24]  949 	ljmp	00115$
      000543                        950 00113$:
                                    951 ;	tancotf.c:92: if(iscotan) return (xden/xnum);
      000543 E5*00            [12]  952 	mov	a,_bp
      000545 24 FD            [12]  953 	add	a,#0xfd
      000547 F8               [12]  954 	mov	r0,a
      000548 E6               [12]  955 	mov	a,@r0
      000549 60 3C            [24]  956 	jz	00110$
      00054B E5*00            [12]  957 	mov	a,_bp
      00054D 24 15            [12]  958 	add	a,#0x15
      00054F F8               [12]  959 	mov	r0,a
      000550 E6               [12]  960 	mov	a,@r0
      000551 C0 E0            [24]  961 	push	acc
      000553 08               [12]  962 	inc	r0
      000554 E6               [12]  963 	mov	a,@r0
      000555 C0 E0            [24]  964 	push	acc
      000557 08               [12]  965 	inc	r0
      000558 E6               [12]  966 	mov	a,@r0
      000559 C0 E0            [24]  967 	push	acc
      00055B 08               [12]  968 	inc	r0
      00055C E6               [12]  969 	mov	a,@r0
      00055D C0 E0            [24]  970 	push	acc
      00055F E5*00            [12]  971 	mov	a,_bp
      000561 24 19            [12]  972 	add	a,#0x19
      000563 F8               [12]  973 	mov	r0,a
      000564 86 82            [24]  974 	mov	dpl,@r0
      000566 08               [12]  975 	inc	r0
      000567 86 83            [24]  976 	mov	dph,@r0
      000569 08               [12]  977 	inc	r0
      00056A 86 F0            [24]  978 	mov	b,@r0
      00056C 08               [12]  979 	inc	r0
      00056D E6               [12]  980 	mov	a,@r0
      00056E 12r00r00         [24]  981 	lcall	___fsdiv
      000571 AC 82            [24]  982 	mov	r4,dpl
      000573 AD 83            [24]  983 	mov	r5,dph
      000575 AE F0            [24]  984 	mov	r6,b
      000577 FF               [12]  985 	mov	r7,a
      000578 E5 81            [12]  986 	mov	a,sp
      00057A 24 FC            [12]  987 	add	a,#0xfc
      00057C F5 81            [12]  988 	mov	sp,a
      00057E 8C 82            [24]  989 	mov	dpl,r4
      000580 8D 83            [24]  990 	mov	dph,r5
      000582 8E F0            [24]  991 	mov	b,r6
      000584 EF               [12]  992 	mov	a,r7
      000585 80 3A            [24]  993 	sjmp	00115$
      000587                        994 00110$:
                                    995 ;	tancotf.c:93: else return (xnum/xden);
      000587 E5*00            [12]  996 	mov	a,_bp
      000589 24 19            [12]  997 	add	a,#0x19
      00058B F8               [12]  998 	mov	r0,a
      00058C E6               [12]  999 	mov	a,@r0
      00058D C0 E0            [24] 1000 	push	acc
      00058F 08               [12] 1001 	inc	r0
      000590 E6               [12] 1002 	mov	a,@r0
      000591 C0 E0            [24] 1003 	push	acc
      000593 08               [12] 1004 	inc	r0
      000594 E6               [12] 1005 	mov	a,@r0
      000595 C0 E0            [24] 1006 	push	acc
      000597 08               [12] 1007 	inc	r0
      000598 E6               [12] 1008 	mov	a,@r0
      000599 C0 E0            [24] 1009 	push	acc
      00059B E5*00            [12] 1010 	mov	a,_bp
      00059D 24 15            [12] 1011 	add	a,#0x15
      00059F F8               [12] 1012 	mov	r0,a
      0005A0 86 82            [24] 1013 	mov	dpl,@r0
      0005A2 08               [12] 1014 	inc	r0
      0005A3 86 83            [24] 1015 	mov	dph,@r0
      0005A5 08               [12] 1016 	inc	r0
      0005A6 86 F0            [24] 1017 	mov	b,@r0
      0005A8 08               [12] 1018 	inc	r0
      0005A9 E6               [12] 1019 	mov	a,@r0
      0005AA 12r00r00         [24] 1020 	lcall	___fsdiv
      0005AD AC 82            [24] 1021 	mov	r4,dpl
      0005AF AD 83            [24] 1022 	mov	r5,dph
      0005B1 AE F0            [24] 1023 	mov	r6,b
      0005B3 FF               [12] 1024 	mov	r7,a
      0005B4 E5 81            [12] 1025 	mov	a,sp
      0005B6 24 FC            [12] 1026 	add	a,#0xfc
      0005B8 F5 81            [12] 1027 	mov	sp,a
      0005BA 8C 82            [24] 1028 	mov	dpl,r4
      0005BC 8D 83            [24] 1029 	mov	dph,r5
      0005BE 8E F0            [24] 1030 	mov	b,r6
      0005C0 EF               [12] 1031 	mov	a,r7
      0005C1                       1032 00115$:
                                   1033 ;	tancotf.c:95: }
      0005C1 85*00 81         [24] 1034 	mov	sp,_bp
      0005C4 D0*00            [24] 1035 	pop	_bp
      0005C6 22               [24] 1036 	ret
                                   1037 	.area CSEG    (CODE)
                                   1038 	.area CONST   (CODE)
                                   1039 	.area XINIT   (CODE)
                                   1040 	.area CABS    (ABS,CODE)
