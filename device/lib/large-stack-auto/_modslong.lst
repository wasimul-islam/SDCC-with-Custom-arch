                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _modslong
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __modslong
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_modslong'
                                     91 ;------------------------------------------------------------
                                     92 ;b                         Allocated to stack - _bp -6
                                     93 ;a                         Allocated to registers r4 r5 r6 r7 
                                     94 ;r                         Allocated to stack - _bp +9
                                     95 ;sloc0                     Allocated to stack - _bp +1
                                     96 ;sloc1                     Allocated to stack - _bp +5
                                     97 ;------------------------------------------------------------
                                     98 ;	_modslong.c:265: _modslong (long a, long b) __SDCC_NONBANKED
                                     99 ;	-----------------------------------------
                                    100 ;	 function _modslong
                                    101 ;	-----------------------------------------
      000000                        102 __modslong:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 AC 82            [24]  113 	mov	r4,dpl
      000007 AD 83            [24]  114 	mov	r5,dph
      000009 AE F0            [24]  115 	mov	r6,b
      00000B FF               [12]  116 	mov	r7,a
      00000C E5 81            [12]  117 	mov	a,sp
      00000E 24 0C            [12]  118 	add	a,#0x0c
      000010 F5 81            [12]  119 	mov	sp,a
                                    120 ;	_modslong.c:269: r = (unsigned long)(a < 0 ? -a : a) % (unsigned long)(b < 0 ? -b : b);
      000012 EF               [12]  121 	mov	a,r7
      000013 33               [12]  122 	rlc	a
      000014 E4               [12]  123 	clr	a
      000015 33               [12]  124 	rlc	a
      000016 FB               [12]  125 	mov	r3,a
      000017 60 15            [24]  126 	jz	00106$
      000019 A8*00            [24]  127 	mov	r0,_bp
      00001B 08               [12]  128 	inc	r0
      00001C C3               [12]  129 	clr	c
      00001D E4               [12]  130 	clr	a
      00001E 9C               [12]  131 	subb	a,r4
      00001F F6               [12]  132 	mov	@r0,a
      000020 E4               [12]  133 	clr	a
      000021 9D               [12]  134 	subb	a,r5
      000022 08               [12]  135 	inc	r0
      000023 F6               [12]  136 	mov	@r0,a
      000024 E4               [12]  137 	clr	a
      000025 9E               [12]  138 	subb	a,r6
      000026 08               [12]  139 	inc	r0
      000027 F6               [12]  140 	mov	@r0,a
      000028 E4               [12]  141 	clr	a
      000029 9F               [12]  142 	subb	a,r7
      00002A 08               [12]  143 	inc	r0
      00002B F6               [12]  144 	mov	@r0,a
      00002C 80 0E            [24]  145 	sjmp	00107$
      00002E                        146 00106$:
      00002E A8*00            [24]  147 	mov	r0,_bp
      000030 08               [12]  148 	inc	r0
      000031 A6 04            [24]  149 	mov	@r0,ar4
      000033 08               [12]  150 	inc	r0
      000034 A6 05            [24]  151 	mov	@r0,ar5
      000036 08               [12]  152 	inc	r0
      000037 A6 06            [24]  153 	mov	@r0,ar6
      000039 08               [12]  154 	inc	r0
      00003A A6 07            [24]  155 	mov	@r0,ar7
      00003C                        156 00107$:
      00003C A8*00            [24]  157 	mov	r0,_bp
      00003E 08               [12]  158 	inc	r0
      00003F E5*00            [12]  159 	mov	a,_bp
      000041 24 05            [12]  160 	add	a,#0x05
      000043 F9               [12]  161 	mov	r1,a
      000044 E6               [12]  162 	mov	a,@r0
      000045 F7               [12]  163 	mov	@r1,a
      000046 08               [12]  164 	inc	r0
      000047 E6               [12]  165 	mov	a,@r0
      000048 09               [12]  166 	inc	r1
      000049 F7               [12]  167 	mov	@r1,a
      00004A 08               [12]  168 	inc	r0
      00004B E6               [12]  169 	mov	a,@r0
      00004C 09               [12]  170 	inc	r1
      00004D F7               [12]  171 	mov	@r1,a
      00004E 08               [12]  172 	inc	r0
      00004F E6               [12]  173 	mov	a,@r0
      000050 09               [12]  174 	inc	r1
      000051 F7               [12]  175 	mov	@r1,a
      000052 E5*00            [12]  176 	mov	a,_bp
      000054 24 FA            [12]  177 	add	a,#0xfa
      000056 F8               [12]  178 	mov	r0,a
      000057 08               [12]  179 	inc	r0
      000058 08               [12]  180 	inc	r0
      000059 08               [12]  181 	inc	r0
      00005A E6               [12]  182 	mov	a,@r0
      00005B 30 E7 17         [24]  183 	jnb	acc.7,00108$
      00005E E5*00            [12]  184 	mov	a,_bp
      000060 24 FA            [12]  185 	add	a,#0xfa
      000062 F8               [12]  186 	mov	r0,a
      000063 C3               [12]  187 	clr	c
      000064 E4               [12]  188 	clr	a
      000065 96               [12]  189 	subb	a,@r0
      000066 FC               [12]  190 	mov	r4,a
      000067 08               [12]  191 	inc	r0
      000068 E4               [12]  192 	clr	a
      000069 96               [12]  193 	subb	a,@r0
      00006A FD               [12]  194 	mov	r5,a
      00006B 08               [12]  195 	inc	r0
      00006C E4               [12]  196 	clr	a
      00006D 96               [12]  197 	subb	a,@r0
      00006E FE               [12]  198 	mov	r6,a
      00006F 08               [12]  199 	inc	r0
      000070 E4               [12]  200 	clr	a
      000071 96               [12]  201 	subb	a,@r0
      000072 FF               [12]  202 	mov	r7,a
      000073 80 10            [24]  203 	sjmp	00109$
      000075                        204 00108$:
      000075 E5*00            [12]  205 	mov	a,_bp
      000077 24 FA            [12]  206 	add	a,#0xfa
      000079 F8               [12]  207 	mov	r0,a
      00007A 86 04            [24]  208 	mov	ar4,@r0
      00007C 08               [12]  209 	inc	r0
      00007D 86 05            [24]  210 	mov	ar5,@r0
      00007F 08               [12]  211 	inc	r0
      000080 86 06            [24]  212 	mov	ar6,@r0
      000082 08               [12]  213 	inc	r0
      000083 86 07            [24]  214 	mov	ar7,@r0
      000085                        215 00109$:
      000085 8C 02            [24]  216 	mov	ar2,r4
      000087 C0 03            [24]  217 	push	ar3
      000089 C0 02            [24]  218 	push	ar2
      00008B C0 05            [24]  219 	push	ar5
      00008D C0 06            [24]  220 	push	ar6
      00008F C0 07            [24]  221 	push	ar7
      000091 E5*00            [12]  222 	mov	a,_bp
      000093 24 05            [12]  223 	add	a,#0x05
      000095 F8               [12]  224 	mov	r0,a
      000096 86 82            [24]  225 	mov	dpl,@r0
      000098 08               [12]  226 	inc	r0
      000099 86 83            [24]  227 	mov	dph,@r0
      00009B 08               [12]  228 	inc	r0
      00009C 86 F0            [24]  229 	mov	b,@r0
      00009E 08               [12]  230 	inc	r0
      00009F E6               [12]  231 	mov	a,@r0
      0000A0 12r00r00         [24]  232 	lcall	__modulong
      0000A3 AC 82            [24]  233 	mov	r4,dpl
      0000A5 AD 83            [24]  234 	mov	r5,dph
      0000A7 AE F0            [24]  235 	mov	r6,b
      0000A9 FF               [12]  236 	mov	r7,a
      0000AA E5 81            [12]  237 	mov	a,sp
      0000AC 24 FC            [12]  238 	add	a,#0xfc
      0000AE F5 81            [12]  239 	mov	sp,a
      0000B0 D0 03            [24]  240 	pop	ar3
      0000B2 E5*00            [12]  241 	mov	a,_bp
      0000B4 24 09            [12]  242 	add	a,#0x09
      0000B6 F8               [12]  243 	mov	r0,a
      0000B7 A6 04            [24]  244 	mov	@r0,ar4
      0000B9 08               [12]  245 	inc	r0
      0000BA A6 05            [24]  246 	mov	@r0,ar5
      0000BC 08               [12]  247 	inc	r0
      0000BD A6 06            [24]  248 	mov	@r0,ar6
      0000BF 08               [12]  249 	inc	r0
      0000C0 A6 07            [24]  250 	mov	@r0,ar7
                                    251 ;	_modslong.c:271: if (a < 0)
      0000C2 EB               [12]  252 	mov	a,r3
      0000C3 60 1D            [24]  253 	jz	00102$
                                    254 ;	_modslong.c:272: return -r;
      0000C5 E5*00            [12]  255 	mov	a,_bp
      0000C7 24 09            [12]  256 	add	a,#0x09
      0000C9 F8               [12]  257 	mov	r0,a
      0000CA C3               [12]  258 	clr	c
      0000CB E4               [12]  259 	clr	a
      0000CC 96               [12]  260 	subb	a,@r0
      0000CD FA               [12]  261 	mov	r2,a
      0000CE 08               [12]  262 	inc	r0
      0000CF E4               [12]  263 	clr	a
      0000D0 96               [12]  264 	subb	a,@r0
      0000D1 FB               [12]  265 	mov	r3,a
      0000D2 08               [12]  266 	inc	r0
      0000D3 E4               [12]  267 	clr	a
      0000D4 96               [12]  268 	subb	a,@r0
      0000D5 FE               [12]  269 	mov	r6,a
      0000D6 08               [12]  270 	inc	r0
      0000D7 E4               [12]  271 	clr	a
      0000D8 96               [12]  272 	subb	a,@r0
      0000D9 FF               [12]  273 	mov	r7,a
      0000DA 8A 82            [24]  274 	mov	dpl,r2
      0000DC 8B 83            [24]  275 	mov	dph,r3
      0000DE 8E F0            [24]  276 	mov	b,r6
      0000E0 80 0F            [24]  277 	sjmp	00104$
      0000E2                        278 00102$:
                                    279 ;	_modslong.c:274: return r;
      0000E2 E5*00            [12]  280 	mov	a,_bp
      0000E4 24 09            [12]  281 	add	a,#0x09
      0000E6 F8               [12]  282 	mov	r0,a
      0000E7 86 82            [24]  283 	mov	dpl,@r0
      0000E9 08               [12]  284 	inc	r0
      0000EA 86 83            [24]  285 	mov	dph,@r0
      0000EC 08               [12]  286 	inc	r0
      0000ED 86 F0            [24]  287 	mov	b,@r0
      0000EF 08               [12]  288 	inc	r0
      0000F0 E6               [12]  289 	mov	a,@r0
      0000F1                        290 00104$:
                                    291 ;	_modslong.c:275: }
      0000F1 85*00 81         [24]  292 	mov	sp,_bp
      0000F4 D0*00            [24]  293 	pop	_bp
      0000F6 22               [24]  294 	ret
                                    295 	.area CSEG    (CODE)
                                    296 	.area CONST   (CODE)
                                    297 	.area XINIT   (CODE)
                                    298 	.area CABS    (ABS,CODE)
