                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divulong
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __divulong
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_divulong'
                                     91 ;------------------------------------------------------------
                                     92 ;y                         Allocated to stack - _bp -6
                                     93 ;x                         Allocated to stack - _bp +1
                                     94 ;reste                     Allocated to registers r2 r3 r6 r7 
                                     95 ;count                     Allocated to registers r5 
                                     96 ;c                         Allocated to registers r4 
                                     97 ;------------------------------------------------------------
                                     98 ;	_divulong.c:337: _divulong (unsigned long x, unsigned long y) __SDCC_NONBANKED
                                     99 ;	-----------------------------------------
                                    100 ;	 function _divulong
                                    101 ;	-----------------------------------------
      000000                        102 __divulong:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 C0 82            [24]  113 	push	dpl
      000007 C0 83            [24]  114 	push	dph
      000009 C0 F0            [24]  115 	push	b
      00000B C0 E0            [24]  116 	push	acc
                                    117 ;	_divulong.c:339: unsigned long reste = 0L;
      00000D 7A 00            [12]  118 	mov	r2,#0x00
      00000F 7B 00            [12]  119 	mov	r3,#0x00
      000011 7E 00            [12]  120 	mov	r6,#0x00
      000013 7F 00            [12]  121 	mov	r7,#0x00
                                    122 ;	_divulong.c:343: do
      000015 7D 20            [12]  123 	mov	r5,#0x20
      000017                        124 00105$:
                                    125 ;	_divulong.c:346: c = MSB_SET(x);
      000017 A8*00            [24]  126 	mov	r0,_bp
      000019 08               [12]  127 	inc	r0
      00001A 08               [12]  128 	inc	r0
      00001B 08               [12]  129 	inc	r0
      00001C 08               [12]  130 	inc	r0
      00001D E6               [12]  131 	mov	a,@r0
      00001E 23               [12]  132 	rl	a
      00001F 54 01            [12]  133 	anl	a,#0x01
      000021 FC               [12]  134 	mov	r4,a
                                    135 ;	_divulong.c:347: x <<= 1;
      000022 A8*00            [24]  136 	mov	r0,_bp
      000024 08               [12]  137 	inc	r0
      000025 E6               [12]  138 	mov	a,@r0
      000026 26               [12]  139 	add	a,@r0
      000027 F6               [12]  140 	mov	@r0,a
      000028 08               [12]  141 	inc	r0
      000029 E6               [12]  142 	mov	a,@r0
      00002A 33               [12]  143 	rlc	a
      00002B F6               [12]  144 	mov	@r0,a
      00002C 08               [12]  145 	inc	r0
      00002D E6               [12]  146 	mov	a,@r0
      00002E 33               [12]  147 	rlc	a
      00002F F6               [12]  148 	mov	@r0,a
      000030 08               [12]  149 	inc	r0
      000031 E6               [12]  150 	mov	a,@r0
      000032 33               [12]  151 	rlc	a
      000033 F6               [12]  152 	mov	@r0,a
                                    153 ;	_divulong.c:348: reste <<= 1;
      000034 EA               [12]  154 	mov	a,r2
      000035 2A               [12]  155 	add	a,r2
      000036 FA               [12]  156 	mov	r2,a
      000037 EB               [12]  157 	mov	a,r3
      000038 33               [12]  158 	rlc	a
      000039 FB               [12]  159 	mov	r3,a
      00003A EE               [12]  160 	mov	a,r6
      00003B 33               [12]  161 	rlc	a
      00003C FE               [12]  162 	mov	r6,a
      00003D EF               [12]  163 	mov	a,r7
      00003E 33               [12]  164 	rlc	a
      00003F FF               [12]  165 	mov	r7,a
                                    166 ;	_divulong.c:349: if (c)
      000040 EC               [12]  167 	mov	a,r4
      000041 60 03            [24]  168 	jz	00102$
                                    169 ;	_divulong.c:350: reste |= 1L;
      000043 43 02 01         [24]  170 	orl	ar2,#0x01
      000046                        171 00102$:
                                    172 ;	_divulong.c:352: if (reste >= y)
      000046 E5*00            [12]  173 	mov	a,_bp
      000048 24 FA            [12]  174 	add	a,#0xfa
      00004A F8               [12]  175 	mov	r0,a
      00004B C3               [12]  176 	clr	c
      00004C EA               [12]  177 	mov	a,r2
      00004D 96               [12]  178 	subb	a,@r0
      00004E EB               [12]  179 	mov	a,r3
      00004F 08               [12]  180 	inc	r0
      000050 96               [12]  181 	subb	a,@r0
      000051 EE               [12]  182 	mov	a,r6
      000052 08               [12]  183 	inc	r0
      000053 96               [12]  184 	subb	a,@r0
      000054 EF               [12]  185 	mov	a,r7
      000055 08               [12]  186 	inc	r0
      000056 96               [12]  187 	subb	a,@r0
      000057 40 1C            [24]  188 	jc	00106$
                                    189 ;	_divulong.c:354: reste -= y;
      000059 E5*00            [12]  190 	mov	a,_bp
      00005B 24 FA            [12]  191 	add	a,#0xfa
      00005D F8               [12]  192 	mov	r0,a
      00005E EA               [12]  193 	mov	a,r2
      00005F C3               [12]  194 	clr	c
      000060 96               [12]  195 	subb	a,@r0
      000061 FA               [12]  196 	mov	r2,a
      000062 EB               [12]  197 	mov	a,r3
      000063 08               [12]  198 	inc	r0
      000064 96               [12]  199 	subb	a,@r0
      000065 FB               [12]  200 	mov	r3,a
      000066 EE               [12]  201 	mov	a,r6
      000067 08               [12]  202 	inc	r0
      000068 96               [12]  203 	subb	a,@r0
      000069 FE               [12]  204 	mov	r6,a
      00006A EF               [12]  205 	mov	a,r7
      00006B 08               [12]  206 	inc	r0
      00006C 96               [12]  207 	subb	a,@r0
      00006D FF               [12]  208 	mov	r7,a
                                    209 ;	_divulong.c:356: x |= 1L;
      00006E A8*00            [24]  210 	mov	r0,_bp
      000070 08               [12]  211 	inc	r0
      000071 E6               [12]  212 	mov	a,@r0
      000072 44 01            [12]  213 	orl	a,#0x01
      000074 F6               [12]  214 	mov	@r0,a
      000075                        215 00106$:
                                    216 ;	_divulong.c:359: while (--count);
      000075 DD A0            [24]  217 	djnz	r5,00105$
                                    218 ;	_divulong.c:360: return x;
      000077 A8*00            [24]  219 	mov	r0,_bp
      000079 08               [12]  220 	inc	r0
      00007A 86 82            [24]  221 	mov	dpl,@r0
      00007C 08               [12]  222 	inc	r0
      00007D 86 83            [24]  223 	mov	dph,@r0
      00007F 08               [12]  224 	inc	r0
      000080 86 F0            [24]  225 	mov	b,@r0
      000082 08               [12]  226 	inc	r0
      000083 E6               [12]  227 	mov	a,@r0
                                    228 ;	_divulong.c:361: }
      000084 85*00 81         [24]  229 	mov	sp,_bp
      000087 D0*00            [24]  230 	pop	_bp
      000089 22               [24]  231 	ret
                                    232 	.area CSEG    (CODE)
                                    233 	.area CONST   (CODE)
                                    234 	.area XINIT   (CODE)
                                    235 	.area CABS    (ABS,CODE)
