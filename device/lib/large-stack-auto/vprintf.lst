                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module vprintf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _putchar
                                     12 	.globl __print_format
                                     13 	.globl _vprintf
                                     14 	.globl _printf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'put_char_to_stdout'
                                     94 ;------------------------------------------------------------
                                     95 ;p                         Allocated to stack - _bp -5
                                     96 ;c                         Allocated to registers r7 
                                     97 ;------------------------------------------------------------
                                     98 ;	vprintf.c:34: put_char_to_stdout (char c, void* p) _REENTRANT
                                     99 ;	-----------------------------------------
                                    100 ;	 function put_char_to_stdout
                                    101 ;	-----------------------------------------
      000000                        102 _put_char_to_stdout:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
                                    113 ;	vprintf.c:37: putchar (c);
      000005 7E 00            [12]  114 	mov	r6,#0x00
      000007 8E 83            [24]  115 	mov	dph,r6
      000009 12r00r00         [24]  116 	lcall	_putchar
                                    117 ;	vprintf.c:38: }
      00000C D0*00            [24]  118 	pop	_bp
      00000E 22               [24]  119 	ret
                                    120 ;------------------------------------------------------------
                                    121 ;Allocation info for local variables in function 'vprintf'
                                    122 ;------------------------------------------------------------
                                    123 ;ap                        Allocated to stack - _bp -3
                                    124 ;format                    Allocated to registers r5 r6 r7 
                                    125 ;------------------------------------------------------------
                                    126 ;	vprintf.c:41: vprintf (const char *format, va_list ap)
                                    127 ;	-----------------------------------------
                                    128 ;	 function vprintf
                                    129 ;	-----------------------------------------
      00000F                        130 _vprintf:
      00000F C0*00            [24]  131 	push	_bp
      000011 85 81*00         [24]  132 	mov	_bp,sp
      000014 AD 82            [24]  133 	mov	r5,dpl
      000016 AE 83            [24]  134 	mov	r6,dph
      000018 AF F0            [24]  135 	mov	r7,b
                                    136 ;	vprintf.c:43: return _print_format (put_char_to_stdout, NULL, format, ap);
      00001A E5*00            [12]  137 	mov	a,_bp
      00001C 24 FD            [12]  138 	add	a,#0xfd
      00001E F8               [12]  139 	mov	r0,a
      00001F E6               [12]  140 	mov	a,@r0
      000020 C0 E0            [24]  141 	push	acc
      000022 C0 05            [24]  142 	push	ar5
      000024 C0 06            [24]  143 	push	ar6
      000026 C0 07            [24]  144 	push	ar7
      000028 E4               [12]  145 	clr	a
      000029 C0 E0            [24]  146 	push	acc
      00002B C0 E0            [24]  147 	push	acc
      00002D C0 E0            [24]  148 	push	acc
      00002F 90r00r00         [24]  149 	mov	dptr,#_put_char_to_stdout
      000032 12r00r00         [24]  150 	lcall	__print_format
      000035 AE 82            [24]  151 	mov	r6,dpl
      000037 AF 83            [24]  152 	mov	r7,dph
      000039 E5 81            [12]  153 	mov	a,sp
      00003B 24 F9            [12]  154 	add	a,#0xf9
      00003D F5 81            [12]  155 	mov	sp,a
      00003F 8E 82            [24]  156 	mov	dpl,r6
      000041 8F 83            [24]  157 	mov	dph,r7
                                    158 ;	vprintf.c:44: }
      000043 D0*00            [24]  159 	pop	_bp
      000045 22               [24]  160 	ret
                                    161 ;------------------------------------------------------------
                                    162 ;Allocation info for local variables in function 'printf'
                                    163 ;------------------------------------------------------------
                                    164 ;format                    Allocated to stack - _bp -5
                                    165 ;arg                       Allocated to registers r7 
                                    166 ;i                         Allocated to registers r6 r7 
                                    167 ;------------------------------------------------------------
                                    168 ;	vprintf.c:47: printf (const char *format, ...)
                                    169 ;	-----------------------------------------
                                    170 ;	 function printf
                                    171 ;	-----------------------------------------
      000046                        172 _printf:
      000046 C0*00            [24]  173 	push	_bp
                                    174 ;	vprintf.c:52: va_start (arg, format);
      000048 E5 81            [12]  175 	mov	a,sp
      00004A F5*00            [12]  176 	mov	_bp,a
      00004C 24 FB            [12]  177 	add	a,#0xfb
      00004E FF               [12]  178 	mov	r7,a
                                    179 ;	vprintf.c:53: i = _print_format (put_char_to_stdout, NULL, format, arg);
      00004F C0 07            [24]  180 	push	ar7
      000051 E5*00            [12]  181 	mov	a,_bp
      000053 24 FB            [12]  182 	add	a,#0xfb
      000055 F8               [12]  183 	mov	r0,a
      000056 E6               [12]  184 	mov	a,@r0
      000057 C0 E0            [24]  185 	push	acc
      000059 08               [12]  186 	inc	r0
      00005A E6               [12]  187 	mov	a,@r0
      00005B C0 E0            [24]  188 	push	acc
      00005D 08               [12]  189 	inc	r0
      00005E E6               [12]  190 	mov	a,@r0
      00005F C0 E0            [24]  191 	push	acc
      000061 E4               [12]  192 	clr	a
      000062 C0 E0            [24]  193 	push	acc
      000064 C0 E0            [24]  194 	push	acc
      000066 C0 E0            [24]  195 	push	acc
      000068 90r00r00         [24]  196 	mov	dptr,#_put_char_to_stdout
      00006B 12r00r00         [24]  197 	lcall	__print_format
      00006E AE 82            [24]  198 	mov	r6,dpl
      000070 AF 83            [24]  199 	mov	r7,dph
      000072 E5 81            [12]  200 	mov	a,sp
      000074 24 F9            [12]  201 	add	a,#0xf9
      000076 F5 81            [12]  202 	mov	sp,a
                                    203 ;	vprintf.c:56: return i;
      000078 8E 82            [24]  204 	mov	dpl,r6
      00007A 8F 83            [24]  205 	mov	dph,r7
                                    206 ;	vprintf.c:57: }
      00007C D0*00            [24]  207 	pop	_bp
      00007E 22               [24]  208 	ret
                                    209 	.area CSEG    (CODE)
                                    210 	.area CONST   (CODE)
                                    211 	.area XINIT   (CODE)
                                    212 	.area CABS    (ABS,CODE)
