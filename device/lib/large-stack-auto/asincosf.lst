                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module asincosf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _asincosf
                                     12 	.globl _ldexpf
                                     13 	.globl _fabsf
                                     14 	.globl _sqrtf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'asincosf'
                                     94 ;------------------------------------------------------------
                                     95 ;isacos                    Allocated to stack - _bp -3
                                     96 ;x                         Allocated to stack - _bp +1
                                     97 ;y                         Allocated to registers r7 r6 r5 r4 
                                     98 ;g                         Allocated to stack - _bp +17
                                     99 ;r                         Allocated to registers r4 r5 r6 r7 
                                    100 ;i                         Allocated to registers r3 
                                    101 ;quartPI                   Allocated to stack - _bp +21
                                    102 ;sloc0                     Allocated to stack - _bp +5
                                    103 ;sloc1                     Allocated to stack - _bp +9
                                    104 ;sloc2                     Allocated to stack - _bp +13
                                    105 ;------------------------------------------------------------
                                    106 ;	asincosf.c:47: float asincosf(float x, bool isacos)
                                    107 ;	-----------------------------------------
                                    108 ;	 function asincosf
                                    109 ;	-----------------------------------------
      000000                        110 _asincosf:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 C0*00            [24]  119 	push	_bp
      000002 85 81*00         [24]  120 	mov	_bp,sp
      000005 C0 82            [24]  121 	push	dpl
      000007 C0 83            [24]  122 	push	dph
      000009 C0 F0            [24]  123 	push	b
      00000B C0 E0            [24]  124 	push	acc
      00000D E5 81            [12]  125 	mov	a,sp
      00000F 24 11            [12]  126 	add	a,#0x11
      000011 F5 81            [12]  127 	mov	sp,a
                                    128 ;	asincosf.c:51: bool quartPI = isacos;
      000013 E5*00            [12]  129 	mov	a,_bp
      000015 24 FD            [12]  130 	add	a,#0xfd
      000017 F8               [12]  131 	mov	r0,a
      000018 E5*00            [12]  132 	mov	a,_bp
      00001A 24 15            [12]  133 	add	a,#0x15
      00001C F9               [12]  134 	mov	r1,a
      00001D E6               [12]  135 	mov	a,@r0
      00001E F7               [12]  136 	mov	@r1,a
                                    137 ;	asincosf.c:56: y = fabsf(x);
      00001F A8*00            [24]  138 	mov	r0,_bp
      000021 08               [12]  139 	inc	r0
      000022 86 82            [24]  140 	mov	dpl,@r0
      000024 08               [12]  141 	inc	r0
      000025 86 83            [24]  142 	mov	dph,@r0
      000027 08               [12]  143 	inc	r0
      000028 86 F0            [24]  144 	mov	b,@r0
      00002A 08               [12]  145 	inc	r0
      00002B E6               [12]  146 	mov	a,@r0
      00002C 12r00r00         [24]  147 	lcall	_fabsf
      00002F C8               [12]  148 	xch	a,r0
      000030 E5*00            [12]  149 	mov	a,_bp
      000032 24 0D            [12]  150 	add	a,#0x0d
      000034 C8               [12]  151 	xch	a,r0
      000035 A6 82            [24]  152 	mov	@r0,dpl
      000037 08               [12]  153 	inc	r0
      000038 A6 83            [24]  154 	mov	@r0,dph
      00003A 08               [12]  155 	inc	r0
      00003B A6 F0            [24]  156 	mov	@r0,b
      00003D 08               [12]  157 	inc	r0
      00003E F6               [12]  158 	mov	@r0,a
                                    159 ;	asincosf.c:57: if (y < EPS)
      00003F E4               [12]  160 	clr	a
      000040 C0 E0            [24]  161 	push	acc
      000042 C0 E0            [24]  162 	push	acc
      000044 74 80            [12]  163 	mov	a,#0x80
      000046 C0 E0            [24]  164 	push	acc
      000048 74 39            [12]  165 	mov	a,#0x39
      00004A C0 E0            [24]  166 	push	acc
      00004C E5*00            [12]  167 	mov	a,_bp
      00004E 24 0D            [12]  168 	add	a,#0x0d
      000050 F8               [12]  169 	mov	r0,a
      000051 86 82            [24]  170 	mov	dpl,@r0
      000053 08               [12]  171 	inc	r0
      000054 86 83            [24]  172 	mov	dph,@r0
      000056 08               [12]  173 	inc	r0
      000057 86 F0            [24]  174 	mov	b,@r0
      000059 08               [12]  175 	inc	r0
      00005A E6               [12]  176 	mov	a,@r0
      00005B 12r00r00         [24]  177 	lcall	___fslt
      00005E AD 82            [24]  178 	mov	r5,dpl
      000060 E5 81            [12]  179 	mov	a,sp
      000062 24 FC            [12]  180 	add	a,#0xfc
      000064 F5 81            [12]  181 	mov	sp,a
      000066 ED               [12]  182 	mov	a,r5
      000067 60 1B            [24]  183 	jz	00107$
                                    184 ;	asincosf.c:59: r = y;
      000069 E5*00            [12]  185 	mov	a,_bp
      00006B 24 0D            [12]  186 	add	a,#0x0d
      00006D F8               [12]  187 	mov	r0,a
      00006E E5*00            [12]  188 	mov	a,_bp
      000070 24 05            [12]  189 	add	a,#0x05
      000072 F9               [12]  190 	mov	r1,a
      000073 E6               [12]  191 	mov	a,@r0
      000074 F7               [12]  192 	mov	@r1,a
      000075 08               [12]  193 	inc	r0
      000076 E6               [12]  194 	mov	a,@r0
      000077 09               [12]  195 	inc	r1
      000078 F7               [12]  196 	mov	@r1,a
      000079 08               [12]  197 	inc	r0
      00007A E6               [12]  198 	mov	a,@r0
      00007B 09               [12]  199 	inc	r1
      00007C F7               [12]  200 	mov	@r1,a
      00007D 08               [12]  201 	inc	r0
      00007E E6               [12]  202 	mov	a,@r0
      00007F 09               [12]  203 	inc	r1
      000080 F7               [12]  204 	mov	@r1,a
      000081 02r03r64         [24]  205 	ljmp	00108$
      000084                        206 00107$:
                                    207 ;	asincosf.c:63: if (y > 0.5)
      000084 E5*00            [12]  208 	mov	a,_bp
      000086 24 0D            [12]  209 	add	a,#0x0d
      000088 F8               [12]  210 	mov	r0,a
      000089 E6               [12]  211 	mov	a,@r0
      00008A C0 E0            [24]  212 	push	acc
      00008C 08               [12]  213 	inc	r0
      00008D E6               [12]  214 	mov	a,@r0
      00008E C0 E0            [24]  215 	push	acc
      000090 08               [12]  216 	inc	r0
      000091 E6               [12]  217 	mov	a,@r0
      000092 C0 E0            [24]  218 	push	acc
      000094 08               [12]  219 	inc	r0
      000095 E6               [12]  220 	mov	a,@r0
      000096 C0 E0            [24]  221 	push	acc
      000098 90 00 00         [24]  222 	mov	dptr,#(0x00&0x00ff)
      00009B E4               [12]  223 	clr	a
      00009C F5 F0            [12]  224 	mov	b,a
      00009E 74 3F            [12]  225 	mov	a,#0x3f
      0000A0 12r00r00         [24]  226 	lcall	___fslt
      0000A3 AD 82            [24]  227 	mov	r5,dpl
      0000A5 E5 81            [12]  228 	mov	a,sp
      0000A7 24 FC            [12]  229 	add	a,#0xfc
      0000A9 F5 81            [12]  230 	mov	sp,a
      0000AB ED               [12]  231 	mov	a,r5
      0000AC 70 03            [24]  232 	jnz	00150$
      0000AE 02r01r9B         [24]  233 	ljmp	00104$
      0000B1                        234 00150$:
                                    235 ;	asincosf.c:65: quartPI = !isacos;
      0000B1 E5*00            [12]  236 	mov	a,_bp
      0000B3 24 15            [12]  237 	add	a,#0x15
      0000B5 F8               [12]  238 	mov	r0,a
      0000B6 E6               [12]  239 	mov	a,@r0
      0000B7 B4 01 00         [24]  240 	cjne	a,#0x01,00151$
      0000BA                        241 00151$:
      0000BA E4               [12]  242 	clr	a
      0000BB 33               [12]  243 	rlc	a
      0000BC F6               [12]  244 	mov	@r0,a
                                    245 ;	asincosf.c:66: if (y > 1.0)
      0000BD E5*00            [12]  246 	mov	a,_bp
      0000BF 24 0D            [12]  247 	add	a,#0x0d
      0000C1 F8               [12]  248 	mov	r0,a
      0000C2 E6               [12]  249 	mov	a,@r0
      0000C3 C0 E0            [24]  250 	push	acc
      0000C5 08               [12]  251 	inc	r0
      0000C6 E6               [12]  252 	mov	a,@r0
      0000C7 C0 E0            [24]  253 	push	acc
      0000C9 08               [12]  254 	inc	r0
      0000CA E6               [12]  255 	mov	a,@r0
      0000CB C0 E0            [24]  256 	push	acc
      0000CD 08               [12]  257 	inc	r0
      0000CE E6               [12]  258 	mov	a,@r0
      0000CF C0 E0            [24]  259 	push	acc
      0000D1 90 00 00         [24]  260 	mov	dptr,#0x0000
      0000D4 75 F0 80         [24]  261 	mov	b,#0x80
      0000D7 74 3F            [12]  262 	mov	a,#0x3f
      0000D9 12r00r00         [24]  263 	lcall	___fslt
      0000DC AD 82            [24]  264 	mov	r5,dpl
      0000DE E5 81            [12]  265 	mov	a,sp
      0000E0 24 FC            [12]  266 	add	a,#0xfc
      0000E2 F5 81            [12]  267 	mov	sp,a
      0000E4 ED               [12]  268 	mov	a,r5
      0000E5 60 11            [24]  269 	jz	00102$
                                    270 ;	asincosf.c:68: errno = EDOM;
      0000E7 90r00r00         [24]  271 	mov	dptr,#_errno
      0000EA 74 21            [12]  272 	mov	a,#0x21
      0000EC F0               [24]  273 	movx	@dptr,a
      0000ED E4               [12]  274 	clr	a
      0000EE A3               [24]  275 	inc	dptr
      0000EF F0               [24]  276 	movx	@dptr,a
                                    277 ;	asincosf.c:69: return 0.0;
      0000F0 90 00 00         [24]  278 	mov	dptr,#0x0000
      0000F3 F5 F0            [12]  279 	mov	b,a
      0000F5 02r05r8E         [24]  280 	ljmp	00117$
      0000F8                        281 00102$:
                                    282 ;	asincosf.c:71: g = (0.5 - y) + 0.5;
      0000F8 E5*00            [12]  283 	mov	a,_bp
      0000FA 24 0D            [12]  284 	add	a,#0x0d
      0000FC F8               [12]  285 	mov	r0,a
      0000FD E6               [12]  286 	mov	a,@r0
      0000FE C0 E0            [24]  287 	push	acc
      000100 08               [12]  288 	inc	r0
      000101 E6               [12]  289 	mov	a,@r0
      000102 C0 E0            [24]  290 	push	acc
      000104 08               [12]  291 	inc	r0
      000105 E6               [12]  292 	mov	a,@r0
      000106 C0 E0            [24]  293 	push	acc
      000108 08               [12]  294 	inc	r0
      000109 E6               [12]  295 	mov	a,@r0
      00010A C0 E0            [24]  296 	push	acc
      00010C 90 00 00         [24]  297 	mov	dptr,#0x0000
      00010F 75 F0 80         [24]  298 	mov	b,#0x80
      000112 74 3F            [12]  299 	mov	a,#0x3f
      000114 12r00r00         [24]  300 	lcall	___fssub
      000117 AF 82            [24]  301 	mov	r7,dpl
      000119 AE 83            [24]  302 	mov	r6,dph
      00011B AD F0            [24]  303 	mov	r5,b
      00011D FC               [12]  304 	mov	r4,a
      00011E E5 81            [12]  305 	mov	a,sp
      000120 24 FC            [12]  306 	add	a,#0xfc
      000122 F5 81            [12]  307 	mov	sp,a
                                    308 ;	asincosf.c:72: g = ldexpf(g, -1);
      000124 74 FF            [12]  309 	mov	a,#0xff
      000126 C0 E0            [24]  310 	push	acc
      000128 C0 E0            [24]  311 	push	acc
      00012A 8F 82            [24]  312 	mov	dpl,r7
      00012C 8E 83            [24]  313 	mov	dph,r6
      00012E 8D F0            [24]  314 	mov	b,r5
      000130 EC               [12]  315 	mov	a,r4
      000131 12r00r00         [24]  316 	lcall	_ldexpf
      000134 AF 82            [24]  317 	mov	r7,dpl
      000136 AE 83            [24]  318 	mov	r6,dph
      000138 AD F0            [24]  319 	mov	r5,b
      00013A FC               [12]  320 	mov	r4,a
      00013B 15 81            [12]  321 	dec	sp
      00013D 15 81            [12]  322 	dec	sp
      00013F E5*00            [12]  323 	mov	a,_bp
      000141 24 11            [12]  324 	add	a,#0x11
      000143 F8               [12]  325 	mov	r0,a
      000144 A6 07            [24]  326 	mov	@r0,ar7
      000146 08               [12]  327 	inc	r0
      000147 A6 06            [24]  328 	mov	@r0,ar6
      000149 08               [12]  329 	inc	r0
      00014A A6 05            [24]  330 	mov	@r0,ar5
      00014C 08               [12]  331 	inc	r0
      00014D A6 04            [24]  332 	mov	@r0,ar4
                                    333 ;	asincosf.c:73: y = sqrtf(g);
      00014F E5*00            [12]  334 	mov	a,_bp
      000151 24 11            [12]  335 	add	a,#0x11
      000153 F8               [12]  336 	mov	r0,a
      000154 86 82            [24]  337 	mov	dpl,@r0
      000156 08               [12]  338 	inc	r0
      000157 86 83            [24]  339 	mov	dph,@r0
      000159 08               [12]  340 	inc	r0
      00015A 86 F0            [24]  341 	mov	b,@r0
      00015C 08               [12]  342 	inc	r0
      00015D E6               [12]  343 	mov	a,@r0
      00015E 12r00r00         [24]  344 	lcall	_sqrtf
      000161 AF 82            [24]  345 	mov	r7,dpl
      000163 AE 83            [24]  346 	mov	r6,dph
      000165 AD F0            [24]  347 	mov	r5,b
      000167 FC               [12]  348 	mov	r4,a
                                    349 ;	asincosf.c:74: y = -(y + y);
      000168 C0 07            [24]  350 	push	ar7
      00016A C0 06            [24]  351 	push	ar6
      00016C C0 05            [24]  352 	push	ar5
      00016E C0 04            [24]  353 	push	ar4
      000170 8F 82            [24]  354 	mov	dpl,r7
      000172 8E 83            [24]  355 	mov	dph,r6
      000174 8D F0            [24]  356 	mov	b,r5
      000176 EC               [12]  357 	mov	a,r4
      000177 12r00r00         [24]  358 	lcall	___fsadd
      00017A AC 82            [24]  359 	mov	r4,dpl
      00017C AD 83            [24]  360 	mov	r5,dph
      00017E AE F0            [24]  361 	mov	r6,b
      000180 FF               [12]  362 	mov	r7,a
      000181 E5 81            [12]  363 	mov	a,sp
      000183 24 FC            [12]  364 	add	a,#0xfc
      000185 F5 81            [12]  365 	mov	sp,a
      000187 E5*00            [12]  366 	mov	a,_bp
      000189 24 0D            [12]  367 	add	a,#0x0d
      00018B F8               [12]  368 	mov	r0,a
      00018C A6 04            [24]  369 	mov	@r0,ar4
      00018E 08               [12]  370 	inc	r0
      00018F A6 05            [24]  371 	mov	@r0,ar5
      000191 08               [12]  372 	inc	r0
      000192 A6 06            [24]  373 	mov	@r0,ar6
      000194 EF               [12]  374 	mov	a,r7
      000195 B2 E7            [12]  375 	cpl	acc.7
      000197 08               [12]  376 	inc	r0
      000198 F6               [12]  377 	mov	@r0,a
      000199 80 43            [24]  378 	sjmp	00105$
      00019B                        379 00104$:
                                    380 ;	asincosf.c:78: g = y * y;
      00019B E5*00            [12]  381 	mov	a,_bp
      00019D 24 0D            [12]  382 	add	a,#0x0d
      00019F F8               [12]  383 	mov	r0,a
      0001A0 E6               [12]  384 	mov	a,@r0
      0001A1 C0 E0            [24]  385 	push	acc
      0001A3 08               [12]  386 	inc	r0
      0001A4 E6               [12]  387 	mov	a,@r0
      0001A5 C0 E0            [24]  388 	push	acc
      0001A7 08               [12]  389 	inc	r0
      0001A8 E6               [12]  390 	mov	a,@r0
      0001A9 C0 E0            [24]  391 	push	acc
      0001AB 08               [12]  392 	inc	r0
      0001AC E6               [12]  393 	mov	a,@r0
      0001AD C0 E0            [24]  394 	push	acc
      0001AF E5*00            [12]  395 	mov	a,_bp
      0001B1 24 0D            [12]  396 	add	a,#0x0d
      0001B3 F8               [12]  397 	mov	r0,a
      0001B4 86 82            [24]  398 	mov	dpl,@r0
      0001B6 08               [12]  399 	inc	r0
      0001B7 86 83            [24]  400 	mov	dph,@r0
      0001B9 08               [12]  401 	inc	r0
      0001BA 86 F0            [24]  402 	mov	b,@r0
      0001BC 08               [12]  403 	inc	r0
      0001BD E6               [12]  404 	mov	a,@r0
      0001BE 12r00r00         [24]  405 	lcall	___fsmul
      0001C1 AC 82            [24]  406 	mov	r4,dpl
      0001C3 AD 83            [24]  407 	mov	r5,dph
      0001C5 AE F0            [24]  408 	mov	r6,b
      0001C7 FF               [12]  409 	mov	r7,a
      0001C8 E5 81            [12]  410 	mov	a,sp
      0001CA 24 FC            [12]  411 	add	a,#0xfc
      0001CC F5 81            [12]  412 	mov	sp,a
      0001CE E5*00            [12]  413 	mov	a,_bp
      0001D0 24 11            [12]  414 	add	a,#0x11
      0001D2 F8               [12]  415 	mov	r0,a
      0001D3 A6 04            [24]  416 	mov	@r0,ar4
      0001D5 08               [12]  417 	inc	r0
      0001D6 A6 05            [24]  418 	mov	@r0,ar5
      0001D8 08               [12]  419 	inc	r0
      0001D9 A6 06            [24]  420 	mov	@r0,ar6
      0001DB 08               [12]  421 	inc	r0
      0001DC A6 07            [24]  422 	mov	@r0,ar7
      0001DE                        423 00105$:
                                    424 ;	asincosf.c:80: r = y + y * ((P(g) * g) / Q(g));
      0001DE E5*00            [12]  425 	mov	a,_bp
      0001E0 24 11            [12]  426 	add	a,#0x11
      0001E2 F8               [12]  427 	mov	r0,a
      0001E3 E6               [12]  428 	mov	a,@r0
      0001E4 C0 E0            [24]  429 	push	acc
      0001E6 08               [12]  430 	inc	r0
      0001E7 E6               [12]  431 	mov	a,@r0
      0001E8 C0 E0            [24]  432 	push	acc
      0001EA 08               [12]  433 	inc	r0
      0001EB E6               [12]  434 	mov	a,@r0
      0001EC C0 E0            [24]  435 	push	acc
      0001EE 08               [12]  436 	inc	r0
      0001EF E6               [12]  437 	mov	a,@r0
      0001F0 C0 E0            [24]  438 	push	acc
      0001F2 90 20 65         [24]  439 	mov	dptr,#0x2065
      0001F5 75 F0 01         [24]  440 	mov	b,#0x01
      0001F8 74 BF            [12]  441 	mov	a,#0xbf
      0001FA 12r00r00         [24]  442 	lcall	___fsmul
      0001FD AC 82            [24]  443 	mov	r4,dpl
      0001FF AD 83            [24]  444 	mov	r5,dph
      000201 AE F0            [24]  445 	mov	r6,b
      000203 FF               [12]  446 	mov	r7,a
      000204 E5 81            [12]  447 	mov	a,sp
      000206 24 FC            [12]  448 	add	a,#0xfc
      000208 F5 81            [12]  449 	mov	sp,a
      00020A 74 6B            [12]  450 	mov	a,#0x6b
      00020C C0 E0            [24]  451 	push	acc
      00020E 74 16            [12]  452 	mov	a,#0x16
      000210 C0 E0            [24]  453 	push	acc
      000212 74 6F            [12]  454 	mov	a,#0x6f
      000214 C0 E0            [24]  455 	push	acc
      000216 74 3F            [12]  456 	mov	a,#0x3f
      000218 C0 E0            [24]  457 	push	acc
      00021A 8C 82            [24]  458 	mov	dpl,r4
      00021C 8D 83            [24]  459 	mov	dph,r5
      00021E 8E F0            [24]  460 	mov	b,r6
      000220 EF               [12]  461 	mov	a,r7
      000221 12r00r00         [24]  462 	lcall	___fsadd
      000224 AC 82            [24]  463 	mov	r4,dpl
      000226 AD 83            [24]  464 	mov	r5,dph
      000228 AE F0            [24]  465 	mov	r6,b
      00022A FF               [12]  466 	mov	r7,a
      00022B E5 81            [12]  467 	mov	a,sp
      00022D 24 FC            [12]  468 	add	a,#0xfc
      00022F F5 81            [12]  469 	mov	sp,a
      000231 E5*00            [12]  470 	mov	a,_bp
      000233 24 11            [12]  471 	add	a,#0x11
      000235 F8               [12]  472 	mov	r0,a
      000236 E6               [12]  473 	mov	a,@r0
      000237 C0 E0            [24]  474 	push	acc
      000239 08               [12]  475 	inc	r0
      00023A E6               [12]  476 	mov	a,@r0
      00023B C0 E0            [24]  477 	push	acc
      00023D 08               [12]  478 	inc	r0
      00023E E6               [12]  479 	mov	a,@r0
      00023F C0 E0            [24]  480 	push	acc
      000241 08               [12]  481 	inc	r0
      000242 E6               [12]  482 	mov	a,@r0
      000243 C0 E0            [24]  483 	push	acc
      000245 8C 82            [24]  484 	mov	dpl,r4
      000247 8D 83            [24]  485 	mov	dph,r5
      000249 8E F0            [24]  486 	mov	b,r6
      00024B EF               [12]  487 	mov	a,r7
      00024C 12r00r00         [24]  488 	lcall	___fsmul
      00024F C8               [12]  489 	xch	a,r0
      000250 E5*00            [12]  490 	mov	a,_bp
      000252 24 09            [12]  491 	add	a,#0x09
      000254 C8               [12]  492 	xch	a,r0
      000255 A6 82            [24]  493 	mov	@r0,dpl
      000257 08               [12]  494 	inc	r0
      000258 A6 83            [24]  495 	mov	@r0,dph
      00025A 08               [12]  496 	inc	r0
      00025B A6 F0            [24]  497 	mov	@r0,b
      00025D 08               [12]  498 	inc	r0
      00025E F6               [12]  499 	mov	@r0,a
      00025F E5 81            [12]  500 	mov	a,sp
      000261 24 FC            [12]  501 	add	a,#0xfc
      000263 F5 81            [12]  502 	mov	sp,a
      000265 74 0B            [12]  503 	mov	a,#0x0b
      000267 C0 E0            [24]  504 	push	acc
      000269 74 8D            [12]  505 	mov	a,#0x8d
      00026B C0 E0            [24]  506 	push	acc
      00026D 74 B1            [12]  507 	mov	a,#0xb1
      00026F C0 E0            [24]  508 	push	acc
      000271 74 C0            [12]  509 	mov	a,#0xc0
      000273 C0 E0            [24]  510 	push	acc
      000275 E5*00            [12]  511 	mov	a,_bp
      000277 24 11            [12]  512 	add	a,#0x11
      000279 F8               [12]  513 	mov	r0,a
      00027A 86 82            [24]  514 	mov	dpl,@r0
      00027C 08               [12]  515 	inc	r0
      00027D 86 83            [24]  516 	mov	dph,@r0
      00027F 08               [12]  517 	inc	r0
      000280 86 F0            [24]  518 	mov	b,@r0
      000282 08               [12]  519 	inc	r0
      000283 E6               [12]  520 	mov	a,@r0
      000284 12r00r00         [24]  521 	lcall	___fsadd
      000287 AA 82            [24]  522 	mov	r2,dpl
      000289 AB 83            [24]  523 	mov	r3,dph
      00028B AE F0            [24]  524 	mov	r6,b
      00028D FF               [12]  525 	mov	r7,a
      00028E E5 81            [12]  526 	mov	a,sp
      000290 24 FC            [12]  527 	add	a,#0xfc
      000292 F5 81            [12]  528 	mov	sp,a
      000294 E5*00            [12]  529 	mov	a,_bp
      000296 24 11            [12]  530 	add	a,#0x11
      000298 F8               [12]  531 	mov	r0,a
      000299 E6               [12]  532 	mov	a,@r0
      00029A C0 E0            [24]  533 	push	acc
      00029C 08               [12]  534 	inc	r0
      00029D E6               [12]  535 	mov	a,@r0
      00029E C0 E0            [24]  536 	push	acc
      0002A0 08               [12]  537 	inc	r0
      0002A1 E6               [12]  538 	mov	a,@r0
      0002A2 C0 E0            [24]  539 	push	acc
      0002A4 08               [12]  540 	inc	r0
      0002A5 E6               [12]  541 	mov	a,@r0
      0002A6 C0 E0            [24]  542 	push	acc
      0002A8 8A 82            [24]  543 	mov	dpl,r2
      0002AA 8B 83            [24]  544 	mov	dph,r3
      0002AC 8E F0            [24]  545 	mov	b,r6
      0002AE EF               [12]  546 	mov	a,r7
      0002AF 12r00r00         [24]  547 	lcall	___fsmul
      0002B2 AC 82            [24]  548 	mov	r4,dpl
      0002B4 AD 83            [24]  549 	mov	r5,dph
      0002B6 AE F0            [24]  550 	mov	r6,b
      0002B8 FF               [12]  551 	mov	r7,a
      0002B9 E5 81            [12]  552 	mov	a,sp
      0002BB 24 FC            [12]  553 	add	a,#0xfc
      0002BD F5 81            [12]  554 	mov	sp,a
      0002BF 74 F0            [12]  555 	mov	a,#0xf0
      0002C1 C0 E0            [24]  556 	push	acc
      0002C3 74 50            [12]  557 	mov	a,#0x50
      0002C5 C0 E0            [24]  558 	push	acc
      0002C7 74 B3            [12]  559 	mov	a,#0xb3
      0002C9 C0 E0            [24]  560 	push	acc
      0002CB 74 40            [12]  561 	mov	a,#0x40
      0002CD C0 E0            [24]  562 	push	acc
      0002CF 8C 82            [24]  563 	mov	dpl,r4
      0002D1 8D 83            [24]  564 	mov	dph,r5
      0002D3 8E F0            [24]  565 	mov	b,r6
      0002D5 EF               [12]  566 	mov	a,r7
      0002D6 12r00r00         [24]  567 	lcall	___fsadd
      0002D9 AC 82            [24]  568 	mov	r4,dpl
      0002DB AD 83            [24]  569 	mov	r5,dph
      0002DD AE F0            [24]  570 	mov	r6,b
      0002DF FF               [12]  571 	mov	r7,a
      0002E0 E5 81            [12]  572 	mov	a,sp
      0002E2 24 FC            [12]  573 	add	a,#0xfc
      0002E4 F5 81            [12]  574 	mov	sp,a
      0002E6 C0 04            [24]  575 	push	ar4
      0002E8 C0 05            [24]  576 	push	ar5
      0002EA C0 06            [24]  577 	push	ar6
      0002EC C0 07            [24]  578 	push	ar7
      0002EE E5*00            [12]  579 	mov	a,_bp
      0002F0 24 09            [12]  580 	add	a,#0x09
      0002F2 F8               [12]  581 	mov	r0,a
      0002F3 86 82            [24]  582 	mov	dpl,@r0
      0002F5 08               [12]  583 	inc	r0
      0002F6 86 83            [24]  584 	mov	dph,@r0
      0002F8 08               [12]  585 	inc	r0
      0002F9 86 F0            [24]  586 	mov	b,@r0
      0002FB 08               [12]  587 	inc	r0
      0002FC E6               [12]  588 	mov	a,@r0
      0002FD 12r00r00         [24]  589 	lcall	___fsdiv
      000300 AC 82            [24]  590 	mov	r4,dpl
      000302 AD 83            [24]  591 	mov	r5,dph
      000304 AE F0            [24]  592 	mov	r6,b
      000306 FF               [12]  593 	mov	r7,a
      000307 E5 81            [12]  594 	mov	a,sp
      000309 24 FC            [12]  595 	add	a,#0xfc
      00030B F5 81            [12]  596 	mov	sp,a
      00030D C0 04            [24]  597 	push	ar4
      00030F C0 05            [24]  598 	push	ar5
      000311 C0 06            [24]  599 	push	ar6
      000313 C0 07            [24]  600 	push	ar7
      000315 E5*00            [12]  601 	mov	a,_bp
      000317 24 0D            [12]  602 	add	a,#0x0d
      000319 F8               [12]  603 	mov	r0,a
      00031A 86 82            [24]  604 	mov	dpl,@r0
      00031C 08               [12]  605 	inc	r0
      00031D 86 83            [24]  606 	mov	dph,@r0
      00031F 08               [12]  607 	inc	r0
      000320 86 F0            [24]  608 	mov	b,@r0
      000322 08               [12]  609 	inc	r0
      000323 E6               [12]  610 	mov	a,@r0
      000324 12r00r00         [24]  611 	lcall	___fsmul
      000327 AC 82            [24]  612 	mov	r4,dpl
      000329 AD 83            [24]  613 	mov	r5,dph
      00032B AE F0            [24]  614 	mov	r6,b
      00032D FF               [12]  615 	mov	r7,a
      00032E E5 81            [12]  616 	mov	a,sp
      000330 24 FC            [12]  617 	add	a,#0xfc
      000332 F5 81            [12]  618 	mov	sp,a
      000334 C0 04            [24]  619 	push	ar4
      000336 C0 05            [24]  620 	push	ar5
      000338 C0 06            [24]  621 	push	ar6
      00033A C0 07            [24]  622 	push	ar7
      00033C E5*00            [12]  623 	mov	a,_bp
      00033E 24 0D            [12]  624 	add	a,#0x0d
      000340 F8               [12]  625 	mov	r0,a
      000341 86 82            [24]  626 	mov	dpl,@r0
      000343 08               [12]  627 	inc	r0
      000344 86 83            [24]  628 	mov	dph,@r0
      000346 08               [12]  629 	inc	r0
      000347 86 F0            [24]  630 	mov	b,@r0
      000349 08               [12]  631 	inc	r0
      00034A E6               [12]  632 	mov	a,@r0
      00034B 12r00r00         [24]  633 	lcall	___fsadd
      00034E C8               [12]  634 	xch	a,r0
      00034F E5*00            [12]  635 	mov	a,_bp
      000351 24 05            [12]  636 	add	a,#0x05
      000353 C8               [12]  637 	xch	a,r0
      000354 A6 82            [24]  638 	mov	@r0,dpl
      000356 08               [12]  639 	inc	r0
      000357 A6 83            [24]  640 	mov	@r0,dph
      000359 08               [12]  641 	inc	r0
      00035A A6 F0            [24]  642 	mov	@r0,b
      00035C 08               [12]  643 	inc	r0
      00035D F6               [12]  644 	mov	@r0,a
      00035E E5 81            [12]  645 	mov	a,sp
      000360 24 FC            [12]  646 	add	a,#0xfc
      000362 F5 81            [12]  647 	mov	sp,a
      000364                        648 00108$:
                                    649 ;	asincosf.c:82: i = quartPI;
      000364 E5*00            [12]  650 	mov	a,_bp
      000366 24 15            [12]  651 	add	a,#0x15
      000368 F8               [12]  652 	mov	r0,a
      000369 86 03            [24]  653 	mov	ar3,@r0
                                    654 ;	asincosf.c:83: if (isacos)
      00036B E5*00            [12]  655 	mov	a,_bp
      00036D 24 FD            [12]  656 	add	a,#0xfd
      00036F F8               [12]  657 	mov	r0,a
      000370 E6               [12]  658 	mov	a,@r0
      000371 70 03            [24]  659 	jnz	00153$
      000373 02r04rBD         [24]  660 	ljmp	00115$
      000376                        661 00153$:
                                    662 ;	asincosf.c:85: if (x < 0.0)
      000376 C0 03            [24]  663 	push	ar3
      000378 E4               [12]  664 	clr	a
      000379 C0 E0            [24]  665 	push	acc
      00037B C0 E0            [24]  666 	push	acc
      00037D C0 E0            [24]  667 	push	acc
      00037F C0 E0            [24]  668 	push	acc
      000381 A8*00            [24]  669 	mov	r0,_bp
      000383 08               [12]  670 	inc	r0
      000384 86 82            [24]  671 	mov	dpl,@r0
      000386 08               [12]  672 	inc	r0
      000387 86 83            [24]  673 	mov	dph,@r0
      000389 08               [12]  674 	inc	r0
      00038A 86 F0            [24]  675 	mov	b,@r0
      00038C 08               [12]  676 	inc	r0
      00038D E6               [12]  677 	mov	a,@r0
      00038E 12r00r00         [24]  678 	lcall	___fslt
      000391 AF 82            [24]  679 	mov	r7,dpl
      000393 E5 81            [12]  680 	mov	a,sp
      000395 24 FC            [12]  681 	add	a,#0xfc
      000397 F5 81            [12]  682 	mov	sp,a
      000399 D0 03            [24]  683 	pop	ar3
      00039B EF               [12]  684 	mov	a,r7
      00039C 70 03            [24]  685 	jnz	00154$
      00039E 02r04r28         [24]  686 	ljmp	00110$
      0003A1                        687 00154$:
                                    688 ;	asincosf.c:86: r = (b[i] + r) + b[i];
      0003A1 EB               [12]  689 	mov	a,r3
      0003A2 75 F0 04         [24]  690 	mov	b,#0x04
      0003A5 A4               [48]  691 	mul	ab
      0003A6 24r08            [12]  692 	add	a,#_asincosf_b_65536_26
      0003A8 F5 82            [12]  693 	mov	dpl,a
      0003AA 74s00            [12]  694 	mov	a,#(_asincosf_b_65536_26 >> 8)
      0003AC 35 F0            [12]  695 	addc	a,b
      0003AE F5 83            [12]  696 	mov	dph,a
      0003B0 E5*00            [12]  697 	mov	a,_bp
      0003B2 24 0D            [12]  698 	add	a,#0x0d
      0003B4 F8               [12]  699 	mov	r0,a
      0003B5 E4               [12]  700 	clr	a
      0003B6 93               [24]  701 	movc	a,@a+dptr
      0003B7 F6               [12]  702 	mov	@r0,a
      0003B8 A3               [24]  703 	inc	dptr
      0003B9 E4               [12]  704 	clr	a
      0003BA 93               [24]  705 	movc	a,@a+dptr
      0003BB 08               [12]  706 	inc	r0
      0003BC F6               [12]  707 	mov	@r0,a
      0003BD A3               [24]  708 	inc	dptr
      0003BE E4               [12]  709 	clr	a
      0003BF 93               [24]  710 	movc	a,@a+dptr
      0003C0 08               [12]  711 	inc	r0
      0003C1 F6               [12]  712 	mov	@r0,a
      0003C2 A3               [24]  713 	inc	dptr
      0003C3 E4               [12]  714 	clr	a
      0003C4 93               [24]  715 	movc	a,@a+dptr
      0003C5 08               [12]  716 	inc	r0
      0003C6 F6               [12]  717 	mov	@r0,a
      0003C7 E5*00            [12]  718 	mov	a,_bp
      0003C9 24 05            [12]  719 	add	a,#0x05
      0003CB F8               [12]  720 	mov	r0,a
      0003CC E6               [12]  721 	mov	a,@r0
      0003CD C0 E0            [24]  722 	push	acc
      0003CF 08               [12]  723 	inc	r0
      0003D0 E6               [12]  724 	mov	a,@r0
      0003D1 C0 E0            [24]  725 	push	acc
      0003D3 08               [12]  726 	inc	r0
      0003D4 E6               [12]  727 	mov	a,@r0
      0003D5 C0 E0            [24]  728 	push	acc
      0003D7 08               [12]  729 	inc	r0
      0003D8 E6               [12]  730 	mov	a,@r0
      0003D9 C0 E0            [24]  731 	push	acc
      0003DB E5*00            [12]  732 	mov	a,_bp
      0003DD 24 0D            [12]  733 	add	a,#0x0d
      0003DF F8               [12]  734 	mov	r0,a
      0003E0 86 82            [24]  735 	mov	dpl,@r0
      0003E2 08               [12]  736 	inc	r0
      0003E3 86 83            [24]  737 	mov	dph,@r0
      0003E5 08               [12]  738 	inc	r0
      0003E6 86 F0            [24]  739 	mov	b,@r0
      0003E8 08               [12]  740 	inc	r0
      0003E9 E6               [12]  741 	mov	a,@r0
      0003EA 12r00r00         [24]  742 	lcall	___fsadd
      0003ED AA 82            [24]  743 	mov	r2,dpl
      0003EF AD 83            [24]  744 	mov	r5,dph
      0003F1 AE F0            [24]  745 	mov	r6,b
      0003F3 FF               [12]  746 	mov	r7,a
      0003F4 E5 81            [12]  747 	mov	a,sp
      0003F6 24 FC            [12]  748 	add	a,#0xfc
      0003F8 F5 81            [12]  749 	mov	sp,a
      0003FA E5*00            [12]  750 	mov	a,_bp
      0003FC 24 0D            [12]  751 	add	a,#0x0d
      0003FE F8               [12]  752 	mov	r0,a
      0003FF E6               [12]  753 	mov	a,@r0
      000400 C0 E0            [24]  754 	push	acc
      000402 08               [12]  755 	inc	r0
      000403 E6               [12]  756 	mov	a,@r0
      000404 C0 E0            [24]  757 	push	acc
      000406 08               [12]  758 	inc	r0
      000407 E6               [12]  759 	mov	a,@r0
      000408 C0 E0            [24]  760 	push	acc
      00040A 08               [12]  761 	inc	r0
      00040B E6               [12]  762 	mov	a,@r0
      00040C C0 E0            [24]  763 	push	acc
      00040E 8A 82            [24]  764 	mov	dpl,r2
      000410 8D 83            [24]  765 	mov	dph,r5
      000412 8E F0            [24]  766 	mov	b,r6
      000414 EF               [12]  767 	mov	a,r7
      000415 12r00r00         [24]  768 	lcall	___fsadd
      000418 AC 82            [24]  769 	mov	r4,dpl
      00041A AD 83            [24]  770 	mov	r5,dph
      00041C AE F0            [24]  771 	mov	r6,b
      00041E FF               [12]  772 	mov	r7,a
      00041F E5 81            [12]  773 	mov	a,sp
      000421 24 FC            [12]  774 	add	a,#0xfc
      000423 F5 81            [12]  775 	mov	sp,a
      000425 02r05r87         [24]  776 	ljmp	00116$
      000428                        777 00110$:
                                    778 ;	asincosf.c:88: r = (a[i] - r) + a[i];
      000428 EB               [12]  779 	mov	a,r3
      000429 75 F0 04         [24]  780 	mov	b,#0x04
      00042C A4               [48]  781 	mul	ab
      00042D 24r00            [12]  782 	add	a,#_asincosf_a_65536_26
      00042F F5 82            [12]  783 	mov	dpl,a
      000431 74s00            [12]  784 	mov	a,#(_asincosf_a_65536_26 >> 8)
      000433 35 F0            [12]  785 	addc	a,b
      000435 F5 83            [12]  786 	mov	dph,a
      000437 E4               [12]  787 	clr	a
      000438 93               [24]  788 	movc	a,@a+dptr
      000439 FF               [12]  789 	mov	r7,a
      00043A A3               [24]  790 	inc	dptr
      00043B E4               [12]  791 	clr	a
      00043C 93               [24]  792 	movc	a,@a+dptr
      00043D FE               [12]  793 	mov	r6,a
      00043E A3               [24]  794 	inc	dptr
      00043F E4               [12]  795 	clr	a
      000440 93               [24]  796 	movc	a,@a+dptr
      000441 FD               [12]  797 	mov	r5,a
      000442 A3               [24]  798 	inc	dptr
      000443 E4               [12]  799 	clr	a
      000444 93               [24]  800 	movc	a,@a+dptr
      000445 FC               [12]  801 	mov	r4,a
      000446 C0 07            [24]  802 	push	ar7
      000448 C0 06            [24]  803 	push	ar6
      00044A C0 05            [24]  804 	push	ar5
      00044C C0 04            [24]  805 	push	ar4
      00044E E5*00            [12]  806 	mov	a,_bp
      000450 24 05            [12]  807 	add	a,#0x05
      000452 F8               [12]  808 	mov	r0,a
      000453 E6               [12]  809 	mov	a,@r0
      000454 C0 E0            [24]  810 	push	acc
      000456 08               [12]  811 	inc	r0
      000457 E6               [12]  812 	mov	a,@r0
      000458 C0 E0            [24]  813 	push	acc
      00045A 08               [12]  814 	inc	r0
      00045B E6               [12]  815 	mov	a,@r0
      00045C C0 E0            [24]  816 	push	acc
      00045E 08               [12]  817 	inc	r0
      00045F E6               [12]  818 	mov	a,@r0
      000460 C0 E0            [24]  819 	push	acc
      000462 8F 82            [24]  820 	mov	dpl,r7
      000464 8E 83            [24]  821 	mov	dph,r6
      000466 8D F0            [24]  822 	mov	b,r5
      000468 EC               [12]  823 	mov	a,r4
      000469 12r00r00         [24]  824 	lcall	___fssub
      00046C C8               [12]  825 	xch	a,r0
      00046D E5*00            [12]  826 	mov	a,_bp
      00046F 24 09            [12]  827 	add	a,#0x09
      000471 C8               [12]  828 	xch	a,r0
      000472 A6 82            [24]  829 	mov	@r0,dpl
      000474 08               [12]  830 	inc	r0
      000475 A6 83            [24]  831 	mov	@r0,dph
      000477 08               [12]  832 	inc	r0
      000478 A6 F0            [24]  833 	mov	@r0,b
      00047A 08               [12]  834 	inc	r0
      00047B F6               [12]  835 	mov	@r0,a
      00047C E5 81            [12]  836 	mov	a,sp
      00047E 24 FC            [12]  837 	add	a,#0xfc
      000480 F5 81            [12]  838 	mov	sp,a
      000482 E5*00            [12]  839 	mov	a,_bp
      000484 24 09            [12]  840 	add	a,#0x09
      000486 F8               [12]  841 	mov	r0,a
      000487 86 82            [24]  842 	mov	dpl,@r0
      000489 08               [12]  843 	inc	r0
      00048A 86 83            [24]  844 	mov	dph,@r0
      00048C 08               [12]  845 	inc	r0
      00048D 86 F0            [24]  846 	mov	b,@r0
      00048F 08               [12]  847 	inc	r0
      000490 E6               [12]  848 	mov	a,@r0
      000491 12r00r00         [24]  849 	lcall	___fsadd
      000494 C8               [12]  850 	xch	a,r0
      000495 E5*00            [12]  851 	mov	a,_bp
      000497 24 0D            [12]  852 	add	a,#0x0d
      000499 C8               [12]  853 	xch	a,r0
      00049A A6 82            [24]  854 	mov	@r0,dpl
      00049C 08               [12]  855 	inc	r0
      00049D A6 83            [24]  856 	mov	@r0,dph
      00049F 08               [12]  857 	inc	r0
      0004A0 A6 F0            [24]  858 	mov	@r0,b
      0004A2 08               [12]  859 	inc	r0
      0004A3 F6               [12]  860 	mov	@r0,a
      0004A4 E5 81            [12]  861 	mov	a,sp
      0004A6 24 FC            [12]  862 	add	a,#0xfc
      0004A8 F5 81            [12]  863 	mov	sp,a
      0004AA E5*00            [12]  864 	mov	a,_bp
      0004AC 24 0D            [12]  865 	add	a,#0x0d
      0004AE F8               [12]  866 	mov	r0,a
      0004AF 86 04            [24]  867 	mov	ar4,@r0
      0004B1 08               [12]  868 	inc	r0
      0004B2 86 05            [24]  869 	mov	ar5,@r0
      0004B4 08               [12]  870 	inc	r0
      0004B5 86 06            [24]  871 	mov	ar6,@r0
      0004B7 08               [12]  872 	inc	r0
      0004B8 86 07            [24]  873 	mov	ar7,@r0
      0004BA 02r05r87         [24]  874 	ljmp	00116$
      0004BD                        875 00115$:
                                    876 ;	asincosf.c:92: r = (a[i] + r) + a[i];
      0004BD EB               [12]  877 	mov	a,r3
      0004BE 75 F0 04         [24]  878 	mov	b,#0x04
      0004C1 A4               [48]  879 	mul	ab
      0004C2 24r00            [12]  880 	add	a,#_asincosf_a_65536_26
      0004C4 F5 82            [12]  881 	mov	dpl,a
      0004C6 74s00            [12]  882 	mov	a,#(_asincosf_a_65536_26 >> 8)
      0004C8 35 F0            [12]  883 	addc	a,b
      0004CA F5 83            [12]  884 	mov	dph,a
      0004CC E4               [12]  885 	clr	a
      0004CD 93               [24]  886 	movc	a,@a+dptr
      0004CE FF               [12]  887 	mov	r7,a
      0004CF A3               [24]  888 	inc	dptr
      0004D0 E4               [12]  889 	clr	a
      0004D1 93               [24]  890 	movc	a,@a+dptr
      0004D2 FE               [12]  891 	mov	r6,a
      0004D3 A3               [24]  892 	inc	dptr
      0004D4 E4               [12]  893 	clr	a
      0004D5 93               [24]  894 	movc	a,@a+dptr
      0004D6 FD               [12]  895 	mov	r5,a
      0004D7 A3               [24]  896 	inc	dptr
      0004D8 E4               [12]  897 	clr	a
      0004D9 93               [24]  898 	movc	a,@a+dptr
      0004DA FC               [12]  899 	mov	r4,a
      0004DB C0 07            [24]  900 	push	ar7
      0004DD C0 06            [24]  901 	push	ar6
      0004DF C0 05            [24]  902 	push	ar5
      0004E1 C0 04            [24]  903 	push	ar4
      0004E3 E5*00            [12]  904 	mov	a,_bp
      0004E5 24 05            [12]  905 	add	a,#0x05
      0004E7 F8               [12]  906 	mov	r0,a
      0004E8 E6               [12]  907 	mov	a,@r0
      0004E9 C0 E0            [24]  908 	push	acc
      0004EB 08               [12]  909 	inc	r0
      0004EC E6               [12]  910 	mov	a,@r0
      0004ED C0 E0            [24]  911 	push	acc
      0004EF 08               [12]  912 	inc	r0
      0004F0 E6               [12]  913 	mov	a,@r0
      0004F1 C0 E0            [24]  914 	push	acc
      0004F3 08               [12]  915 	inc	r0
      0004F4 E6               [12]  916 	mov	a,@r0
      0004F5 C0 E0            [24]  917 	push	acc
      0004F7 8F 82            [24]  918 	mov	dpl,r7
      0004F9 8E 83            [24]  919 	mov	dph,r6
      0004FB 8D F0            [24]  920 	mov	b,r5
      0004FD EC               [12]  921 	mov	a,r4
      0004FE 12r00r00         [24]  922 	lcall	___fsadd
      000501 C8               [12]  923 	xch	a,r0
      000502 E5*00            [12]  924 	mov	a,_bp
      000504 24 09            [12]  925 	add	a,#0x09
      000506 C8               [12]  926 	xch	a,r0
      000507 A6 82            [24]  927 	mov	@r0,dpl
      000509 08               [12]  928 	inc	r0
      00050A A6 83            [24]  929 	mov	@r0,dph
      00050C 08               [12]  930 	inc	r0
      00050D A6 F0            [24]  931 	mov	@r0,b
      00050F 08               [12]  932 	inc	r0
      000510 F6               [12]  933 	mov	@r0,a
      000511 E5 81            [12]  934 	mov	a,sp
      000513 24 FC            [12]  935 	add	a,#0xfc
      000515 F5 81            [12]  936 	mov	sp,a
      000517 E5*00            [12]  937 	mov	a,_bp
      000519 24 09            [12]  938 	add	a,#0x09
      00051B F8               [12]  939 	mov	r0,a
      00051C 86 82            [24]  940 	mov	dpl,@r0
      00051E 08               [12]  941 	inc	r0
      00051F 86 83            [24]  942 	mov	dph,@r0
      000521 08               [12]  943 	inc	r0
      000522 86 F0            [24]  944 	mov	b,@r0
      000524 08               [12]  945 	inc	r0
      000525 E6               [12]  946 	mov	a,@r0
      000526 12r00r00         [24]  947 	lcall	___fsadd
      000529 C8               [12]  948 	xch	a,r0
      00052A E5*00            [12]  949 	mov	a,_bp
      00052C 24 0D            [12]  950 	add	a,#0x0d
      00052E C8               [12]  951 	xch	a,r0
      00052F A6 82            [24]  952 	mov	@r0,dpl
      000531 08               [12]  953 	inc	r0
      000532 A6 83            [24]  954 	mov	@r0,dph
      000534 08               [12]  955 	inc	r0
      000535 A6 F0            [24]  956 	mov	@r0,b
      000537 08               [12]  957 	inc	r0
      000538 F6               [12]  958 	mov	@r0,a
      000539 E5 81            [12]  959 	mov	a,sp
      00053B 24 FC            [12]  960 	add	a,#0xfc
      00053D F5 81            [12]  961 	mov	sp,a
      00053F E5*00            [12]  962 	mov	a,_bp
      000541 24 0D            [12]  963 	add	a,#0x0d
      000543 F8               [12]  964 	mov	r0,a
      000544 86 04            [24]  965 	mov	ar4,@r0
      000546 08               [12]  966 	inc	r0
      000547 86 05            [24]  967 	mov	ar5,@r0
      000549 08               [12]  968 	inc	r0
      00054A 86 06            [24]  969 	mov	ar6,@r0
      00054C 08               [12]  970 	inc	r0
      00054D 86 07            [24]  971 	mov	ar7,@r0
                                    972 ;	asincosf.c:93: if (x < 0.0)
      00054F C0 07            [24]  973 	push	ar7
      000551 C0 06            [24]  974 	push	ar6
      000553 C0 05            [24]  975 	push	ar5
      000555 C0 04            [24]  976 	push	ar4
      000557 E4               [12]  977 	clr	a
      000558 C0 E0            [24]  978 	push	acc
      00055A C0 E0            [24]  979 	push	acc
      00055C C0 E0            [24]  980 	push	acc
      00055E C0 E0            [24]  981 	push	acc
      000560 A8*00            [24]  982 	mov	r0,_bp
      000562 08               [12]  983 	inc	r0
      000563 86 82            [24]  984 	mov	dpl,@r0
      000565 08               [12]  985 	inc	r0
      000566 86 83            [24]  986 	mov	dph,@r0
      000568 08               [12]  987 	inc	r0
      000569 86 F0            [24]  988 	mov	b,@r0
      00056B 08               [12]  989 	inc	r0
      00056C E6               [12]  990 	mov	a,@r0
      00056D 12r00r00         [24]  991 	lcall	___fslt
      000570 AB 82            [24]  992 	mov	r3,dpl
      000572 E5 81            [12]  993 	mov	a,sp
      000574 24 FC            [12]  994 	add	a,#0xfc
      000576 F5 81            [12]  995 	mov	sp,a
      000578 D0 04            [24]  996 	pop	ar4
      00057A D0 05            [24]  997 	pop	ar5
      00057C D0 06            [24]  998 	pop	ar6
      00057E D0 07            [24]  999 	pop	ar7
      000580 EB               [12] 1000 	mov	a,r3
      000581 60 04            [24] 1001 	jz	00116$
                                   1002 ;	asincosf.c:94: r = -r;
      000583 EF               [12] 1003 	mov	a,r7
      000584 B2 E7            [12] 1004 	cpl	acc.7
      000586 FF               [12] 1005 	mov	r7,a
      000587                       1006 00116$:
                                   1007 ;	asincosf.c:96: return r;
      000587 8C 82            [24] 1008 	mov	dpl,r4
      000589 8D 83            [24] 1009 	mov	dph,r5
      00058B 8E F0            [24] 1010 	mov	b,r6
      00058D EF               [12] 1011 	mov	a,r7
      00058E                       1012 00117$:
                                   1013 ;	asincosf.c:97: }
      00058E 85*00 81         [24] 1014 	mov	sp,_bp
      000591 D0*00            [24] 1015 	pop	_bp
      000593 22               [24] 1016 	ret
                                   1017 	.area CSEG    (CODE)
                                   1018 	.area CONST   (CODE)
      000000                       1019 _asincosf_a_65536_26:
      000000 00 00 00 00           1020 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000004 DB 0F 49 3F           1021 	.byte #0xdb, #0x0f, #0x49, #0x3f	;  7.853982e-01
      000008                       1022 _asincosf_b_65536_26:
      000008 DB 0F C9 3F           1023 	.byte #0xdb, #0x0f, #0xc9, #0x3f	;  1.570796e+00
      00000C DB 0F 49 3F           1024 	.byte #0xdb, #0x0f, #0x49, #0x3f	;  7.853982e-01
                                   1025 	.area XINIT   (CODE)
                                   1026 	.area CABS    (ABS,CODE)
