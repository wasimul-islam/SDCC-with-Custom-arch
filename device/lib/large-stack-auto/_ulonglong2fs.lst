                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _ulonglong2fs
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl ___ulonglong2fs
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '__ulonglong2fs'
                                     91 ;------------------------------------------------------------
                                     92 ;a                         Allocated to stack - _bp +1
                                     93 ;exp                       Allocated to registers r7 
                                     94 ;fl                        Allocated to stack - _bp +21
                                     95 ;sloc0                     Allocated to stack - _bp +9
                                     96 ;sloc1                     Allocated to stack - _bp +17
                                     97 ;------------------------------------------------------------
                                     98 ;	_ulonglong2fs.c:61: float __ulonglong2fs (unsigned long long a ) __SDCC_FLOAT_NONBANKED
                                     99 ;	-----------------------------------------
                                    100 ;	 function __ulonglong2fs
                                    101 ;	-----------------------------------------
      000000                        102 ___ulonglong2fs:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 C8               [12]  113 	xch	a,r0
      000006 E5 81            [12]  114 	mov	a,sp
      000008 24 18            [12]  115 	add	a,#0x18
      00000A F5 81            [12]  116 	mov	sp,a
      00000C E5*00            [12]  117 	mov	a,_bp
      00000E 24 09            [12]  118 	add	a,#0x09
      000010 C8               [12]  119 	xch	a,r0
      000011 A6 82            [24]  120 	mov	@r0,dpl
      000013 08               [12]  121 	inc	r0
      000014 A6 83            [24]  122 	mov	@r0,dph
      000016 08               [12]  123 	inc	r0
      000017 A6 F0            [24]  124 	mov	@r0,b
      000019 08               [12]  125 	inc	r0
      00001A F6               [12]  126 	mov	@r0,a
      00001B 08               [12]  127 	inc	r0
      00001C A6 04            [24]  128 	mov	@r0,ar4
      00001E 08               [12]  129 	inc	r0
      00001F A6 05            [24]  130 	mov	@r0,ar5
      000021 08               [12]  131 	inc	r0
      000022 A6 06            [24]  132 	mov	@r0,ar6
      000024 08               [12]  133 	inc	r0
      000025 A6 07            [24]  134 	mov	@r0,ar7
                                    135 ;	_ulonglong2fs.c:66: if (!a)
      000027 E5*00            [12]  136 	mov	a,_bp
      000029 24 09            [12]  137 	add	a,#0x09
      00002B F8               [12]  138 	mov	r0,a
      00002C E6               [12]  139 	mov	a,@r0
      00002D 08               [12]  140 	inc	r0
      00002E 46               [12]  141 	orl	a,@r0
      00002F 08               [12]  142 	inc	r0
      000030 46               [12]  143 	orl	a,@r0
      000031 08               [12]  144 	inc	r0
      000032 46               [12]  145 	orl	a,@r0
      000033 08               [12]  146 	inc	r0
      000034 46               [12]  147 	orl	a,@r0
      000035 08               [12]  148 	inc	r0
      000036 46               [12]  149 	orl	a,@r0
      000037 08               [12]  150 	inc	r0
      000038 46               [12]  151 	orl	a,@r0
      000039 08               [12]  152 	inc	r0
      00003A 46               [12]  153 	orl	a,@r0
      00003B 70 09            [24]  154 	jnz	00102$
                                    155 ;	_ulonglong2fs.c:68: return 0.0;
      00003D 90 00 00         [24]  156 	mov	dptr,#(0x00&0x00ff)
      000040 E4               [12]  157 	clr	a
      000041 F5 F0            [12]  158 	mov	b,a
      000043 02r01rBB         [24]  159 	ljmp	00113$
      000046                        160 00102$:
                                    161 ;	_ulonglong2fs.c:71: if (a == 0xffffffffffffffffull)
      000046 E5*00            [12]  162 	mov	a,_bp
      000048 24 09            [12]  163 	add	a,#0x09
      00004A F8               [12]  164 	mov	r0,a
      00004B B6 FF 1E         [24]  165 	cjne	@r0,#0xff,00153$
      00004E 08               [12]  166 	inc	r0
      00004F B6 FF 1A         [24]  167 	cjne	@r0,#0xff,00153$
      000052 08               [12]  168 	inc	r0
      000053 B6 FF 16         [24]  169 	cjne	@r0,#0xff,00153$
      000056 08               [12]  170 	inc	r0
      000057 B6 FF 12         [24]  171 	cjne	@r0,#0xff,00153$
      00005A 08               [12]  172 	inc	r0
      00005B B6 FF 0E         [24]  173 	cjne	@r0,#0xff,00153$
      00005E 08               [12]  174 	inc	r0
      00005F B6 FF 0A         [24]  175 	cjne	@r0,#0xff,00153$
      000062 08               [12]  176 	inc	r0
      000063 B6 FF 06         [24]  177 	cjne	@r0,#0xff,00153$
      000066 08               [12]  178 	inc	r0
      000067 B6 FF 02         [24]  179 	cjne	@r0,#0xff,00153$
      00006A 80 02            [24]  180 	sjmp	00154$
      00006C                        181 00153$:
      00006C 80 0B            [24]  182 	sjmp	00118$
      00006E                        183 00154$:
                                    184 ;	_ulonglong2fs.c:73: return 18446744073709551616.0f;
      00006E 90 00 00         [24]  185 	mov	dptr,#0x0000
      000071 75 F0 80         [24]  186 	mov	b,#0x80
      000074 74 5F            [12]  187 	mov	a,#0x5f
      000076 02r01rBB         [24]  188 	ljmp	00113$
                                    189 ;	_ulonglong2fs.c:76: while (a < HIDDEN)
      000079                        190 00118$:
      000079 7F 96            [12]  191 	mov	r7,#0x96
      00007B                        192 00105$:
      00007B E5*00            [12]  193 	mov	a,_bp
      00007D 24 09            [12]  194 	add	a,#0x09
      00007F F8               [12]  195 	mov	r0,a
      000080 C3               [12]  196 	clr	c
      000081 08               [12]  197 	inc	r0
      000082 08               [12]  198 	inc	r0
      000083 E6               [12]  199 	mov	a,@r0
      000084 94 80            [12]  200 	subb	a,#0x80
      000086 08               [12]  201 	inc	r0
      000087 E6               [12]  202 	mov	a,@r0
      000088 94 00            [12]  203 	subb	a,#0x00
      00008A 08               [12]  204 	inc	r0
      00008B E6               [12]  205 	mov	a,@r0
      00008C 94 00            [12]  206 	subb	a,#0x00
      00008E 08               [12]  207 	inc	r0
      00008F E6               [12]  208 	mov	a,@r0
      000090 94 00            [12]  209 	subb	a,#0x00
      000092 08               [12]  210 	inc	r0
      000093 E6               [12]  211 	mov	a,@r0
      000094 94 00            [12]  212 	subb	a,#0x00
      000096 08               [12]  213 	inc	r0
      000097 E6               [12]  214 	mov	a,@r0
      000098 94 00            [12]  215 	subb	a,#0x00
      00009A 50 28            [24]  216 	jnc	00121$
                                    217 ;	_ulonglong2fs.c:78: a <<= 1;
      00009C E5*00            [12]  218 	mov	a,_bp
      00009E 24 09            [12]  219 	add	a,#0x09
      0000A0 F8               [12]  220 	mov	r0,a
      0000A1 E6               [12]  221 	mov	a,@r0
      0000A2 25 E0            [12]  222 	add	a,acc
      0000A4 F6               [12]  223 	mov	@r0,a
      0000A5 08               [12]  224 	inc	r0
      0000A6 E6               [12]  225 	mov	a,@r0
      0000A7 33               [12]  226 	rlc	a
      0000A8 F6               [12]  227 	mov	@r0,a
      0000A9 08               [12]  228 	inc	r0
      0000AA E6               [12]  229 	mov	a,@r0
      0000AB 33               [12]  230 	rlc	a
      0000AC F6               [12]  231 	mov	@r0,a
      0000AD 08               [12]  232 	inc	r0
      0000AE E6               [12]  233 	mov	a,@r0
      0000AF 33               [12]  234 	rlc	a
      0000B0 F6               [12]  235 	mov	@r0,a
      0000B1 08               [12]  236 	inc	r0
      0000B2 E6               [12]  237 	mov	a,@r0
      0000B3 33               [12]  238 	rlc	a
      0000B4 F6               [12]  239 	mov	@r0,a
      0000B5 08               [12]  240 	inc	r0
      0000B6 E6               [12]  241 	mov	a,@r0
      0000B7 33               [12]  242 	rlc	a
      0000B8 F6               [12]  243 	mov	@r0,a
      0000B9 08               [12]  244 	inc	r0
      0000BA E6               [12]  245 	mov	a,@r0
      0000BB 33               [12]  246 	rlc	a
      0000BC F6               [12]  247 	mov	@r0,a
      0000BD 08               [12]  248 	inc	r0
      0000BE E6               [12]  249 	mov	a,@r0
      0000BF 33               [12]  250 	rlc	a
      0000C0 F6               [12]  251 	mov	@r0,a
                                    252 ;	_ulonglong2fs.c:79: exp--;
      0000C1 1F               [12]  253 	dec	r7
                                    254 ;	_ulonglong2fs.c:82: while (a & NORM)
      0000C2 80 B7            [24]  255 	sjmp	00105$
      0000C4                        256 00121$:
      0000C4                        257 00110$:
      0000C4 E5*00            [12]  258 	mov	a,_bp
      0000C6 24 09            [12]  259 	add	a,#0x09
      0000C8 F8               [12]  260 	mov	r0,a
      0000C9 08               [12]  261 	inc	r0
      0000CA 08               [12]  262 	inc	r0
      0000CB 08               [12]  263 	inc	r0
      0000CC E6               [12]  264 	mov	a,@r0
      0000CD 60 5D            [24]  265 	jz	00112$
                                    266 ;	_ulonglong2fs.c:85: if (a & 1)
      0000CF E5*00            [12]  267 	mov	a,_bp
      0000D1 24 09            [12]  268 	add	a,#0x09
      0000D3 F8               [12]  269 	mov	r0,a
      0000D4 E6               [12]  270 	mov	a,@r0
      0000D5 30 E0 25         [24]  271 	jnb	acc.0,00109$
                                    272 ;	_ulonglong2fs.c:86: a += 2;
      0000D8 E5*00            [12]  273 	mov	a,_bp
      0000DA 24 09            [12]  274 	add	a,#0x09
      0000DC F8               [12]  275 	mov	r0,a
      0000DD 74 02            [12]  276 	mov	a,#0x02
      0000DF 26               [12]  277 	add	a,@r0
      0000E0 F6               [12]  278 	mov	@r0,a
      0000E1 E4               [12]  279 	clr	a
      0000E2 08               [12]  280 	inc	r0
      0000E3 36               [12]  281 	addc	a,@r0
      0000E4 F6               [12]  282 	mov	@r0,a
      0000E5 E4               [12]  283 	clr	a
      0000E6 08               [12]  284 	inc	r0
      0000E7 36               [12]  285 	addc	a,@r0
      0000E8 F6               [12]  286 	mov	@r0,a
      0000E9 E4               [12]  287 	clr	a
      0000EA 08               [12]  288 	inc	r0
      0000EB 36               [12]  289 	addc	a,@r0
      0000EC F6               [12]  290 	mov	@r0,a
      0000ED E4               [12]  291 	clr	a
      0000EE 08               [12]  292 	inc	r0
      0000EF 36               [12]  293 	addc	a,@r0
      0000F0 F6               [12]  294 	mov	@r0,a
      0000F1 E4               [12]  295 	clr	a
      0000F2 08               [12]  296 	inc	r0
      0000F3 36               [12]  297 	addc	a,@r0
      0000F4 F6               [12]  298 	mov	@r0,a
      0000F5 E4               [12]  299 	clr	a
      0000F6 08               [12]  300 	inc	r0
      0000F7 36               [12]  301 	addc	a,@r0
      0000F8 F6               [12]  302 	mov	@r0,a
      0000F9 E4               [12]  303 	clr	a
      0000FA 08               [12]  304 	inc	r0
      0000FB 36               [12]  305 	addc	a,@r0
      0000FC F6               [12]  306 	mov	@r0,a
      0000FD                        307 00109$:
                                    308 ;	_ulonglong2fs.c:87: a >>= 1;
      0000FD E5*00            [12]  309 	mov	a,_bp
      0000FF 24 09            [12]  310 	add	a,#0x09
      000101 F8               [12]  311 	mov	r0,a
      000102 08               [12]  312 	inc	r0
      000103 08               [12]  313 	inc	r0
      000104 08               [12]  314 	inc	r0
      000105 08               [12]  315 	inc	r0
      000106 08               [12]  316 	inc	r0
      000107 08               [12]  317 	inc	r0
      000108 08               [12]  318 	inc	r0
      000109 E6               [12]  319 	mov	a,@r0
      00010A C3               [12]  320 	clr	c
      00010B 13               [12]  321 	rrc	a
      00010C F6               [12]  322 	mov	@r0,a
      00010D 18               [12]  323 	dec	r0
      00010E E6               [12]  324 	mov	a,@r0
      00010F 13               [12]  325 	rrc	a
      000110 F6               [12]  326 	mov	@r0,a
      000111 18               [12]  327 	dec	r0
      000112 E6               [12]  328 	mov	a,@r0
      000113 13               [12]  329 	rrc	a
      000114 F6               [12]  330 	mov	@r0,a
      000115 18               [12]  331 	dec	r0
      000116 E6               [12]  332 	mov	a,@r0
      000117 13               [12]  333 	rrc	a
      000118 F6               [12]  334 	mov	@r0,a
      000119 18               [12]  335 	dec	r0
      00011A E6               [12]  336 	mov	a,@r0
      00011B 13               [12]  337 	rrc	a
      00011C F6               [12]  338 	mov	@r0,a
      00011D 18               [12]  339 	dec	r0
      00011E E6               [12]  340 	mov	a,@r0
      00011F 13               [12]  341 	rrc	a
      000120 F6               [12]  342 	mov	@r0,a
      000121 18               [12]  343 	dec	r0
      000122 E6               [12]  344 	mov	a,@r0
      000123 13               [12]  345 	rrc	a
      000124 F6               [12]  346 	mov	@r0,a
      000125 18               [12]  347 	dec	r0
      000126 E6               [12]  348 	mov	a,@r0
      000127 13               [12]  349 	rrc	a
      000128 F6               [12]  350 	mov	@r0,a
                                    351 ;	_ulonglong2fs.c:88: exp++;
      000129 0F               [12]  352 	inc	r7
      00012A 80 98            [24]  353 	sjmp	00110$
      00012C                        354 00112$:
                                    355 ;	_ulonglong2fs.c:91: a &= ~HIDDEN ;
      00012C E5*00            [12]  356 	mov	a,_bp
      00012E 24 09            [12]  357 	add	a,#0x09
      000130 F8               [12]  358 	mov	r0,a
      000131 A9*00            [24]  359 	mov	r1,_bp
      000133 09               [12]  360 	inc	r1
      000134 E6               [12]  361 	mov	a,@r0
      000135 F7               [12]  362 	mov	@r1,a
      000136 08               [12]  363 	inc	r0
      000137 E6               [12]  364 	mov	a,@r0
      000138 09               [12]  365 	inc	r1
      000139 F7               [12]  366 	mov	@r1,a
      00013A 74 7F            [12]  367 	mov	a,#0x7f
      00013C 08               [12]  368 	inc	r0
      00013D 56               [12]  369 	anl	a,@r0
      00013E 09               [12]  370 	inc	r1
      00013F F7               [12]  371 	mov	@r1,a
      000140 08               [12]  372 	inc	r0
      000141 E6               [12]  373 	mov	a,@r0
      000142 09               [12]  374 	inc	r1
      000143 F7               [12]  375 	mov	@r1,a
      000144 09               [12]  376 	inc	r1
      000145 77 00            [12]  377 	mov	@r1,#0x00
      000147 09               [12]  378 	inc	r1
      000148 77 00            [12]  379 	mov	@r1,#0x00
      00014A 09               [12]  380 	inc	r1
      00014B 77 00            [12]  381 	mov	@r1,#0x00
      00014D 09               [12]  382 	inc	r1
      00014E 77 00            [12]  383 	mov	@r1,#0x00
                                    384 ;	_ulonglong2fs.c:93: fl.l = PACK(0,(unsigned long)exp, a);
      000150 E5*00            [12]  385 	mov	a,_bp
      000152 24 15            [12]  386 	add	a,#0x15
      000154 F9               [12]  387 	mov	r1,a
      000155 7E 00            [12]  388 	mov	r6,#0x00
      000157 8F 05            [24]  389 	mov	ar5,r7
      000159 EE               [12]  390 	mov	a,r6
      00015A 54 01            [12]  391 	anl	a,#0x01
      00015C A2 E0            [12]  392 	mov	c,acc.0
      00015E CD               [12]  393 	xch	a,r5
      00015F 13               [12]  394 	rrc	a
      000160 CD               [12]  395 	xch	a,r5
      000161 13               [12]  396 	rrc	a
      000162 CD               [12]  397 	xch	a,r5
      000163 FC               [12]  398 	mov	r4,a
      000164 E4               [12]  399 	clr	a
      000165 FF               [12]  400 	mov	r7,a
      000166 FE               [12]  401 	mov	r6,a
      000167 E5*00            [12]  402 	mov	a,_bp
      000169 24 11            [12]  403 	add	a,#0x11
      00016B F8               [12]  404 	mov	r0,a
      00016C A6 07            [24]  405 	mov	@r0,ar7
      00016E 08               [12]  406 	inc	r0
      00016F A6 06            [24]  407 	mov	@r0,ar6
      000171 08               [12]  408 	inc	r0
      000172 A6 05            [24]  409 	mov	@r0,ar5
      000174 08               [12]  410 	inc	r0
      000175 A6 04            [24]  411 	mov	@r0,ar4
      000177 A8*00            [24]  412 	mov	r0,_bp
      000179 08               [12]  413 	inc	r0
      00017A 86 02            [24]  414 	mov	ar2,@r0
      00017C 08               [12]  415 	inc	r0
      00017D 86 03            [24]  416 	mov	ar3,@r0
      00017F 08               [12]  417 	inc	r0
      000180 86 06            [24]  418 	mov	ar6,@r0
      000182 08               [12]  419 	inc	r0
      000183 86 07            [24]  420 	mov	ar7,@r0
      000185 E5*00            [12]  421 	mov	a,_bp
      000187 24 11            [12]  422 	add	a,#0x11
      000189 F8               [12]  423 	mov	r0,a
      00018A E6               [12]  424 	mov	a,@r0
      00018B 42 02            [12]  425 	orl	ar2,a
      00018D 08               [12]  426 	inc	r0
      00018E E6               [12]  427 	mov	a,@r0
      00018F 42 03            [12]  428 	orl	ar3,a
      000191 08               [12]  429 	inc	r0
      000192 E6               [12]  430 	mov	a,@r0
      000193 42 06            [12]  431 	orl	ar6,a
      000195 08               [12]  432 	inc	r0
      000196 E6               [12]  433 	mov	a,@r0
      000197 42 07            [12]  434 	orl	ar7,a
      000199 A7 02            [24]  435 	mov	@r1,ar2
      00019B 09               [12]  436 	inc	r1
      00019C A7 03            [24]  437 	mov	@r1,ar3
      00019E 09               [12]  438 	inc	r1
      00019F A7 06            [24]  439 	mov	@r1,ar6
      0001A1 09               [12]  440 	inc	r1
      0001A2 A7 07            [24]  441 	mov	@r1,ar7
                                    442 ;	_ulonglong2fs.c:95: return (fl.f);
      0001A4 E5*00            [12]  443 	mov	a,_bp
      0001A6 24 15            [12]  444 	add	a,#0x15
      0001A8 F9               [12]  445 	mov	r1,a
      0001A9 87 04            [24]  446 	mov	ar4,@r1
      0001AB 09               [12]  447 	inc	r1
      0001AC 87 05            [24]  448 	mov	ar5,@r1
      0001AE 09               [12]  449 	inc	r1
      0001AF 87 06            [24]  450 	mov	ar6,@r1
      0001B1 09               [12]  451 	inc	r1
      0001B2 87 07            [24]  452 	mov	ar7,@r1
      0001B4 8C 82            [24]  453 	mov	dpl,r4
      0001B6 8D 83            [24]  454 	mov	dph,r5
      0001B8 8E F0            [24]  455 	mov	b,r6
      0001BA EF               [12]  456 	mov	a,r7
      0001BB                        457 00113$:
                                    458 ;	_ulonglong2fs.c:96: }
      0001BB 85*00 81         [24]  459 	mov	sp,_bp
      0001BE D0*00            [24]  460 	pop	_bp
      0001C0 22               [24]  461 	ret
                                    462 	.area CSEG    (CODE)
                                    463 	.area CONST   (CODE)
                                    464 	.area XINIT   (CODE)
                                    465 	.area CABS    (ABS,CODE)
