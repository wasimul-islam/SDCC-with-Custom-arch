                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module logf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _frexpf
                                     12 	.globl _logf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; overlayable bit register bank
                                     30 ;--------------------------------------------------------
                                     31 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         32 bits:
      000000                         33 	.ds 1
                           008000    34 	b0 = bits[0]
                           008100    35 	b1 = bits[1]
                           008200    36 	b2 = bits[2]
                           008300    37 	b3 = bits[3]
                           008400    38 	b4 = bits[4]
                           008500    39 	b5 = bits[5]
                           008600    40 	b6 = bits[6]
                           008700    41 	b7 = bits[7]
                                     42 ;--------------------------------------------------------
                                     43 ; internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DSEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; overlayable items in internal ram
                                     48 ;--------------------------------------------------------
                                     49 ;--------------------------------------------------------
                                     50 ; indirectly addressable internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area ISEG    (DATA)
                                     53 ;--------------------------------------------------------
                                     54 ; absolute internal ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area IABS    (ABS,DATA)
                                     57 	.area IABS    (ABS,DATA)
                                     58 ;--------------------------------------------------------
                                     59 ; bit data
                                     60 ;--------------------------------------------------------
                                     61 	.area BSEG    (BIT)
                                     62 ;--------------------------------------------------------
                                     63 ; paged external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area PSEG    (PAG,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; uninitialized external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XSEG    (XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; absolute external ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XABS    (ABS,XDATA)
                                     74 ;--------------------------------------------------------
                                     75 ; initialized external ram data
                                     76 ;--------------------------------------------------------
                                     77 	.area XISEG   (XDATA)
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT0 (CODE)
                                     80 	.area GSINIT1 (CODE)
                                     81 	.area GSINIT2 (CODE)
                                     82 	.area GSINIT3 (CODE)
                                     83 	.area GSINIT4 (CODE)
                                     84 	.area GSINIT5 (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area CSEG    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; global & static initialisations
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area GSINIT  (CODE)
                                     93 	.area GSFINAL (CODE)
                                     94 	.area GSINIT  (CODE)
                                     95 ;--------------------------------------------------------
                                     96 ; Home
                                     97 ;--------------------------------------------------------
                                     98 	.area HOME    (CODE)
                                     99 	.area HOME    (CODE)
                                    100 ;--------------------------------------------------------
                                    101 ; code
                                    102 ;--------------------------------------------------------
                                    103 	.area CSEG    (CODE)
                                    104 ;------------------------------------------------------------
                                    105 ;Allocation info for local variables in function 'logf'
                                    106 ;------------------------------------------------------------
                                    107 ;x                         Allocated to stack - _bp +1
                                    108 ;Rz                        Allocated to stack - _bp +9
                                    109 ;f                         Allocated to registers r4 r3 r6 r7 
                                    110 ;z                         Allocated to stack - _bp +13
                                    111 ;w                         Allocated to registers r7 r6 r5 r4 
                                    112 ;znum                      Allocated to stack - _bp +17
                                    113 ;zden                      Allocated to stack - _bp +21
                                    114 ;xn                        Allocated to stack - _bp +25
                                    115 ;n                         Allocated to stack - _bp +29
                                    116 ;sloc0                     Allocated to stack - _bp +5
                                    117 ;------------------------------------------------------------
                                    118 ;	logf.c:216: float logf(float x) _FLOAT_FUNC_REENTRANT
                                    119 ;	-----------------------------------------
                                    120 ;	 function logf
                                    121 ;	-----------------------------------------
      000000                        122 _logf:
                           000007   123 	ar7 = 0x07
                           000006   124 	ar6 = 0x06
                           000005   125 	ar5 = 0x05
                           000004   126 	ar4 = 0x04
                           000003   127 	ar3 = 0x03
                           000002   128 	ar2 = 0x02
                           000001   129 	ar1 = 0x01
                           000000   130 	ar0 = 0x00
      000000 C0*00            [24]  131 	push	_bp
      000002 85 81*00         [24]  132 	mov	_bp,sp
      000005 C0 82            [24]  133 	push	dpl
      000007 C0 83            [24]  134 	push	dph
      000009 C0 F0            [24]  135 	push	b
      00000B C0 E0            [24]  136 	push	acc
      00000D E5 81            [12]  137 	mov	a,sp
      00000F 24 1A            [12]  138 	add	a,#0x1a
      000011 F5 81            [12]  139 	mov	sp,a
                                    140 ;	logf.c:226: if (x<=0.0)
      000013 A8*00            [24]  141 	mov	r0,_bp
      000015 08               [12]  142 	inc	r0
      000016 E6               [12]  143 	mov	a,@r0
      000017 C0 E0            [24]  144 	push	acc
      000019 08               [12]  145 	inc	r0
      00001A E6               [12]  146 	mov	a,@r0
      00001B C0 E0            [24]  147 	push	acc
      00001D 08               [12]  148 	inc	r0
      00001E E6               [12]  149 	mov	a,@r0
      00001F C0 E0            [24]  150 	push	acc
      000021 08               [12]  151 	inc	r0
      000022 E6               [12]  152 	mov	a,@r0
      000023 C0 E0            [24]  153 	push	acc
      000025 90 00 00         [24]  154 	mov	dptr,#(0x00&0x00ff)
      000028 E4               [12]  155 	clr	a
      000029 F5 F0            [12]  156 	mov	b,a
      00002B 12r00r00         [24]  157 	lcall	___fslt
      00002E E5 81            [12]  158 	mov	a,sp
      000030 24 FC            [12]  159 	add	a,#0xfc
      000032 F5 81            [12]  160 	mov	sp,a
      000034 E5 82            [12]  161 	mov	a,dpl
      000036 24 FF            [12]  162 	add	a,#0xff
      000038 92*00            [24]  163 	mov	b0,c
      00003A 40 11            [24]  164 	jc	00102$
                                    165 ;	logf.c:228: errno=EDOM;
      00003C 90r00r00         [24]  166 	mov	dptr,#_errno
      00003F 74 21            [12]  167 	mov	a,#0x21
      000041 F0               [24]  168 	movx	@dptr,a
      000042 E4               [12]  169 	clr	a
      000043 A3               [24]  170 	inc	dptr
      000044 F0               [24]  171 	movx	@dptr,a
                                    172 ;	logf.c:229: return 0.0;
      000045 90 00 00         [24]  173 	mov	dptr,#0x0000
      000048 F5 F0            [12]  174 	mov	b,a
      00004A 02r04r22         [24]  175 	ljmp	00106$
      00004D                        176 00102$:
                                    177 ;	logf.c:231: f=frexpf(x, &n);
      00004D E5*00            [12]  178 	mov	a,_bp
      00004F 24 1D            [12]  179 	add	a,#0x1d
      000051 FA               [12]  180 	mov	r2,a
      000052 7B 00            [12]  181 	mov	r3,#0x00
      000054 7F 40            [12]  182 	mov	r7,#0x40
      000056 C0 02            [24]  183 	push	ar2
      000058 C0 03            [24]  184 	push	ar3
      00005A C0 07            [24]  185 	push	ar7
      00005C A8*00            [24]  186 	mov	r0,_bp
      00005E 08               [12]  187 	inc	r0
      00005F 86 82            [24]  188 	mov	dpl,@r0
      000061 08               [12]  189 	inc	r0
      000062 86 83            [24]  190 	mov	dph,@r0
      000064 08               [12]  191 	inc	r0
      000065 86 F0            [24]  192 	mov	b,@r0
      000067 08               [12]  193 	inc	r0
      000068 E6               [12]  194 	mov	a,@r0
      000069 12r00r00         [24]  195 	lcall	_frexpf
      00006C AC 82            [24]  196 	mov	r4,dpl
      00006E AD 83            [24]  197 	mov	r5,dph
      000070 AE F0            [24]  198 	mov	r6,b
      000072 FF               [12]  199 	mov	r7,a
      000073 15 81            [12]  200 	dec	sp
      000075 15 81            [12]  201 	dec	sp
      000077 15 81            [12]  202 	dec	sp
      000079 8D 03            [24]  203 	mov	ar3,r5
                                    204 ;	logf.c:232: znum=f-0.5;
      00007B C0 07            [24]  205 	push	ar7
      00007D C0 06            [24]  206 	push	ar6
      00007F C0 04            [24]  207 	push	ar4
      000081 C0 03            [24]  208 	push	ar3
      000083 E4               [12]  209 	clr	a
      000084 C0 E0            [24]  210 	push	acc
      000086 C0 E0            [24]  211 	push	acc
      000088 C0 E0            [24]  212 	push	acc
      00008A 74 3F            [12]  213 	mov	a,#0x3f
      00008C C0 E0            [24]  214 	push	acc
      00008E 8C 82            [24]  215 	mov	dpl,r4
      000090 8B 83            [24]  216 	mov	dph,r3
      000092 8E F0            [24]  217 	mov	b,r6
      000094 EF               [12]  218 	mov	a,r7
      000095 12r00r00         [24]  219 	lcall	___fssub
      000098 C8               [12]  220 	xch	a,r0
      000099 E5*00            [12]  221 	mov	a,_bp
      00009B 24 11            [12]  222 	add	a,#0x11
      00009D C8               [12]  223 	xch	a,r0
      00009E A6 82            [24]  224 	mov	@r0,dpl
      0000A0 08               [12]  225 	inc	r0
      0000A1 A6 83            [24]  226 	mov	@r0,dph
      0000A3 08               [12]  227 	inc	r0
      0000A4 A6 F0            [24]  228 	mov	@r0,b
      0000A6 08               [12]  229 	inc	r0
      0000A7 F6               [12]  230 	mov	@r0,a
      0000A8 E5 81            [12]  231 	mov	a,sp
      0000AA 24 FC            [12]  232 	add	a,#0xfc
      0000AC F5 81            [12]  233 	mov	sp,a
      0000AE D0 03            [24]  234 	pop	ar3
      0000B0 D0 04            [24]  235 	pop	ar4
      0000B2 D0 06            [24]  236 	pop	ar6
      0000B4 D0 07            [24]  237 	pop	ar7
      0000B6 E5*00            [12]  238 	mov	a,_bp
      0000B8 24 11            [12]  239 	add	a,#0x11
                                    240 ;	logf.c:233: if (f>C0)
      0000BA C0 07            [24]  241 	push	ar7
      0000BC C0 06            [24]  242 	push	ar6
      0000BE C0 04            [24]  243 	push	ar4
      0000C0 C0 03            [24]  244 	push	ar3
      0000C2 C0 04            [24]  245 	push	ar4
      0000C4 C0 03            [24]  246 	push	ar3
      0000C6 C0 06            [24]  247 	push	ar6
      0000C8 C0 07            [24]  248 	push	ar7
      0000CA 90 04 F3         [24]  249 	mov	dptr,#0x04f3
      0000CD 75 F0 35         [24]  250 	mov	b,#0x35
      0000D0 74 3F            [12]  251 	mov	a,#0x3f
      0000D2 12r00r00         [24]  252 	lcall	___fslt
      0000D5 AD 82            [24]  253 	mov	r5,dpl
      0000D7 E5 81            [12]  254 	mov	a,sp
      0000D9 24 FC            [12]  255 	add	a,#0xfc
      0000DB F5 81            [12]  256 	mov	sp,a
      0000DD D0 03            [24]  257 	pop	ar3
      0000DF D0 04            [24]  258 	pop	ar4
      0000E1 D0 06            [24]  259 	pop	ar6
      0000E3 D0 07            [24]  260 	pop	ar7
      0000E5 ED               [12]  261 	mov	a,r5
      0000E6 70 03            [24]  262 	jnz	00117$
      0000E8 02r01r8A         [24]  263 	ljmp	00104$
      0000EB                        264 00117$:
                                    265 ;	logf.c:235: znum-=0.5;
      0000EB C0 07            [24]  266 	push	ar7
      0000ED C0 06            [24]  267 	push	ar6
      0000EF C0 04            [24]  268 	push	ar4
      0000F1 C0 03            [24]  269 	push	ar3
      0000F3 E4               [12]  270 	clr	a
      0000F4 C0 E0            [24]  271 	push	acc
      0000F6 C0 E0            [24]  272 	push	acc
      0000F8 C0 E0            [24]  273 	push	acc
      0000FA 74 3F            [12]  274 	mov	a,#0x3f
      0000FC C0 E0            [24]  275 	push	acc
      0000FE E5*00            [12]  276 	mov	a,_bp
      000100 24 11            [12]  277 	add	a,#0x11
      000102 F8               [12]  278 	mov	r0,a
      000103 86 82            [24]  279 	mov	dpl,@r0
      000105 08               [12]  280 	inc	r0
      000106 86 83            [24]  281 	mov	dph,@r0
      000108 08               [12]  282 	inc	r0
      000109 86 F0            [24]  283 	mov	b,@r0
      00010B 08               [12]  284 	inc	r0
      00010C E6               [12]  285 	mov	a,@r0
      00010D 12r00r00         [24]  286 	lcall	___fssub
      000110 C8               [12]  287 	xch	a,r0
      000111 E5*00            [12]  288 	mov	a,_bp
      000113 24 05            [12]  289 	add	a,#0x05
      000115 C8               [12]  290 	xch	a,r0
      000116 A6 82            [24]  291 	mov	@r0,dpl
      000118 08               [12]  292 	inc	r0
      000119 A6 83            [24]  293 	mov	@r0,dph
      00011B 08               [12]  294 	inc	r0
      00011C A6 F0            [24]  295 	mov	@r0,b
      00011E 08               [12]  296 	inc	r0
      00011F F6               [12]  297 	mov	@r0,a
      000120 E5 81            [12]  298 	mov	a,sp
      000122 24 FC            [12]  299 	add	a,#0xfc
      000124 F5 81            [12]  300 	mov	sp,a
      000126 D0 03            [24]  301 	pop	ar3
      000128 D0 04            [24]  302 	pop	ar4
      00012A D0 06            [24]  303 	pop	ar6
      00012C D0 07            [24]  304 	pop	ar7
      00012E E5*00            [12]  305 	mov	a,_bp
      000130 24 05            [12]  306 	add	a,#0x05
      000132 F8               [12]  307 	mov	r0,a
      000133 E5*00            [12]  308 	mov	a,_bp
      000135 24 11            [12]  309 	add	a,#0x11
      000137 F9               [12]  310 	mov	r1,a
      000138 E6               [12]  311 	mov	a,@r0
      000139 F7               [12]  312 	mov	@r1,a
      00013A 08               [12]  313 	inc	r0
      00013B E6               [12]  314 	mov	a,@r0
      00013C 09               [12]  315 	inc	r1
      00013D F7               [12]  316 	mov	@r1,a
      00013E 08               [12]  317 	inc	r0
      00013F E6               [12]  318 	mov	a,@r0
      000140 09               [12]  319 	inc	r1
      000141 F7               [12]  320 	mov	@r1,a
      000142 08               [12]  321 	inc	r0
      000143 E6               [12]  322 	mov	a,@r0
      000144 09               [12]  323 	inc	r1
      000145 F7               [12]  324 	mov	@r1,a
                                    325 ;	logf.c:236: zden=(f*0.5)+0.5;
      000146 C0 04            [24]  326 	push	ar4
      000148 C0 03            [24]  327 	push	ar3
      00014A C0 06            [24]  328 	push	ar6
      00014C C0 07            [24]  329 	push	ar7
      00014E 90 00 00         [24]  330 	mov	dptr,#(0x00&0x00ff)
      000151 E4               [12]  331 	clr	a
      000152 F5 F0            [12]  332 	mov	b,a
      000154 74 3F            [12]  333 	mov	a,#0x3f
      000156 12r00r00         [24]  334 	lcall	___fsmul
      000159 AC 82            [24]  335 	mov	r4,dpl
      00015B AD 83            [24]  336 	mov	r5,dph
      00015D AE F0            [24]  337 	mov	r6,b
      00015F FF               [12]  338 	mov	r7,a
      000160 E5 81            [12]  339 	mov	a,sp
      000162 24 FC            [12]  340 	add	a,#0xfc
      000164 F5 81            [12]  341 	mov	sp,a
      000166 E4               [12]  342 	clr	a
      000167 C0 E0            [24]  343 	push	acc
      000169 C0 E0            [24]  344 	push	acc
      00016B C0 E0            [24]  345 	push	acc
      00016D 74 3F            [12]  346 	mov	a,#0x3f
      00016F C0 E0            [24]  347 	push	acc
      000171 8C 82            [24]  348 	mov	dpl,r4
      000173 8D 83            [24]  349 	mov	dph,r5
      000175 8E F0            [24]  350 	mov	b,r6
      000177 EF               [12]  351 	mov	a,r7
      000178 12r00r00         [24]  352 	lcall	___fsadd
      00017B AC 82            [24]  353 	mov	r4,dpl
      00017D AD 83            [24]  354 	mov	r5,dph
      00017F AE F0            [24]  355 	mov	r6,b
      000181 FF               [12]  356 	mov	r7,a
      000182 E5 81            [12]  357 	mov	a,sp
      000184 24 FC            [12]  358 	add	a,#0xfc
      000186 F5 81            [12]  359 	mov	sp,a
      000188 80 72            [24]  360 	sjmp	00105$
      00018A                        361 00104$:
                                    362 ;	logf.c:240: n--;
      00018A E5*00            [12]  363 	mov	a,_bp
      00018C 24 1D            [12]  364 	add	a,#0x1d
      00018E F8               [12]  365 	mov	r0,a
      00018F 16               [12]  366 	dec	@r0
      000190 B6 FF 02         [24]  367 	cjne	@r0,#0xff,00118$
      000193 08               [12]  368 	inc	r0
      000194 16               [12]  369 	dec	@r0
      000195                        370 00118$:
                                    371 ;	logf.c:241: zden=znum*0.5+0.5;
      000195 E5*00            [12]  372 	mov	a,_bp
      000197 24 11            [12]  373 	add	a,#0x11
      000199 F8               [12]  374 	mov	r0,a
      00019A E6               [12]  375 	mov	a,@r0
      00019B C0 E0            [24]  376 	push	acc
      00019D 08               [12]  377 	inc	r0
      00019E E6               [12]  378 	mov	a,@r0
      00019F C0 E0            [24]  379 	push	acc
      0001A1 08               [12]  380 	inc	r0
      0001A2 E6               [12]  381 	mov	a,@r0
      0001A3 C0 E0            [24]  382 	push	acc
      0001A5 08               [12]  383 	inc	r0
      0001A6 E6               [12]  384 	mov	a,@r0
      0001A7 C0 E0            [24]  385 	push	acc
      0001A9 90 00 00         [24]  386 	mov	dptr,#(0x00&0x00ff)
      0001AC E4               [12]  387 	clr	a
      0001AD F5 F0            [12]  388 	mov	b,a
      0001AF 74 3F            [12]  389 	mov	a,#0x3f
      0001B1 12r00r00         [24]  390 	lcall	___fsmul
      0001B4 AF 82            [24]  391 	mov	r7,dpl
      0001B6 AE 83            [24]  392 	mov	r6,dph
      0001B8 AD F0            [24]  393 	mov	r5,b
      0001BA FC               [12]  394 	mov	r4,a
      0001BB E5 81            [12]  395 	mov	a,sp
      0001BD 24 FC            [12]  396 	add	a,#0xfc
      0001BF F5 81            [12]  397 	mov	sp,a
      0001C1 E4               [12]  398 	clr	a
      0001C2 C0 E0            [24]  399 	push	acc
      0001C4 C0 E0            [24]  400 	push	acc
      0001C6 C0 E0            [24]  401 	push	acc
      0001C8 74 3F            [12]  402 	mov	a,#0x3f
      0001CA C0 E0            [24]  403 	push	acc
      0001CC 8F 82            [24]  404 	mov	dpl,r7
      0001CE 8E 83            [24]  405 	mov	dph,r6
      0001D0 8D F0            [24]  406 	mov	b,r5
      0001D2 EC               [12]  407 	mov	a,r4
      0001D3 12r00r00         [24]  408 	lcall	___fsadd
      0001D6 C8               [12]  409 	xch	a,r0
      0001D7 E5*00            [12]  410 	mov	a,_bp
      0001D9 24 15            [12]  411 	add	a,#0x15
      0001DB C8               [12]  412 	xch	a,r0
      0001DC A6 82            [24]  413 	mov	@r0,dpl
      0001DE 08               [12]  414 	inc	r0
      0001DF A6 83            [24]  415 	mov	@r0,dph
      0001E1 08               [12]  416 	inc	r0
      0001E2 A6 F0            [24]  417 	mov	@r0,b
      0001E4 08               [12]  418 	inc	r0
      0001E5 F6               [12]  419 	mov	@r0,a
      0001E6 E5 81            [12]  420 	mov	a,sp
      0001E8 24 FC            [12]  421 	add	a,#0xfc
      0001EA F5 81            [12]  422 	mov	sp,a
      0001EC E5*00            [12]  423 	mov	a,_bp
      0001EE 24 15            [12]  424 	add	a,#0x15
      0001F0 F8               [12]  425 	mov	r0,a
      0001F1 86 04            [24]  426 	mov	ar4,@r0
      0001F3 08               [12]  427 	inc	r0
      0001F4 86 05            [24]  428 	mov	ar5,@r0
      0001F6 08               [12]  429 	inc	r0
      0001F7 86 06            [24]  430 	mov	ar6,@r0
      0001F9 08               [12]  431 	inc	r0
      0001FA 86 07            [24]  432 	mov	ar7,@r0
      0001FC                        433 00105$:
                                    434 ;	logf.c:243: z=znum/zden;
      0001FC C0 04            [24]  435 	push	ar4
      0001FE C0 05            [24]  436 	push	ar5
      000200 C0 06            [24]  437 	push	ar6
      000202 C0 07            [24]  438 	push	ar7
      000204 E5*00            [12]  439 	mov	a,_bp
      000206 24 11            [12]  440 	add	a,#0x11
      000208 F8               [12]  441 	mov	r0,a
      000209 86 82            [24]  442 	mov	dpl,@r0
      00020B 08               [12]  443 	inc	r0
      00020C 86 83            [24]  444 	mov	dph,@r0
      00020E 08               [12]  445 	inc	r0
      00020F 86 F0            [24]  446 	mov	b,@r0
      000211 08               [12]  447 	inc	r0
      000212 E6               [12]  448 	mov	a,@r0
      000213 12r00r00         [24]  449 	lcall	___fsdiv
      000216 AC 82            [24]  450 	mov	r4,dpl
      000218 AD 83            [24]  451 	mov	r5,dph
      00021A AE F0            [24]  452 	mov	r6,b
      00021C FF               [12]  453 	mov	r7,a
      00021D E5 81            [12]  454 	mov	a,sp
      00021F 24 FC            [12]  455 	add	a,#0xfc
      000221 F5 81            [12]  456 	mov	sp,a
      000223 E5*00            [12]  457 	mov	a,_bp
      000225 24 0D            [12]  458 	add	a,#0x0d
      000227 F8               [12]  459 	mov	r0,a
      000228 A6 04            [24]  460 	mov	@r0,ar4
      00022A 08               [12]  461 	inc	r0
      00022B A6 05            [24]  462 	mov	@r0,ar5
      00022D 08               [12]  463 	inc	r0
      00022E A6 06            [24]  464 	mov	@r0,ar6
      000230 08               [12]  465 	inc	r0
      000231 A6 07            [24]  466 	mov	@r0,ar7
                                    467 ;	logf.c:244: w=z*z;
      000233 E5*00            [12]  468 	mov	a,_bp
      000235 24 0D            [12]  469 	add	a,#0x0d
      000237 F8               [12]  470 	mov	r0,a
      000238 E6               [12]  471 	mov	a,@r0
      000239 C0 E0            [24]  472 	push	acc
      00023B 08               [12]  473 	inc	r0
      00023C E6               [12]  474 	mov	a,@r0
      00023D C0 E0            [24]  475 	push	acc
      00023F 08               [12]  476 	inc	r0
      000240 E6               [12]  477 	mov	a,@r0
      000241 C0 E0            [24]  478 	push	acc
      000243 08               [12]  479 	inc	r0
      000244 E6               [12]  480 	mov	a,@r0
      000245 C0 E0            [24]  481 	push	acc
      000247 E5*00            [12]  482 	mov	a,_bp
      000249 24 0D            [12]  483 	add	a,#0x0d
      00024B F8               [12]  484 	mov	r0,a
      00024C 86 82            [24]  485 	mov	dpl,@r0
      00024E 08               [12]  486 	inc	r0
      00024F 86 83            [24]  487 	mov	dph,@r0
      000251 08               [12]  488 	inc	r0
      000252 86 F0            [24]  489 	mov	b,@r0
      000254 08               [12]  490 	inc	r0
      000255 E6               [12]  491 	mov	a,@r0
      000256 12r00r00         [24]  492 	lcall	___fsmul
      000259 AF 82            [24]  493 	mov	r7,dpl
      00025B AE 83            [24]  494 	mov	r6,dph
      00025D AD F0            [24]  495 	mov	r5,b
      00025F FC               [12]  496 	mov	r4,a
      000260 E5 81            [12]  497 	mov	a,sp
      000262 24 FC            [12]  498 	add	a,#0xfc
      000264 F5 81            [12]  499 	mov	sp,a
                                    500 ;	logf.c:246: Rz=z+z*(w*A(w)/B(w));
      000266 C0 07            [24]  501 	push	ar7
      000268 C0 06            [24]  502 	push	ar6
      00026A C0 05            [24]  503 	push	ar5
      00026C C0 04            [24]  504 	push	ar4
      00026E C0 07            [24]  505 	push	ar7
      000270 C0 06            [24]  506 	push	ar6
      000272 C0 05            [24]  507 	push	ar5
      000274 C0 04            [24]  508 	push	ar4
      000276 90 7E 3D         [24]  509 	mov	dptr,#0x7e3d
      000279 75 F0 0D         [24]  510 	mov	b,#0x0d
      00027C 74 BF            [12]  511 	mov	a,#0xbf
      00027E 12r00r00         [24]  512 	lcall	___fsmul
      000281 C8               [12]  513 	xch	a,r0
      000282 E5*00            [12]  514 	mov	a,_bp
      000284 24 05            [12]  515 	add	a,#0x05
      000286 C8               [12]  516 	xch	a,r0
      000287 A6 82            [24]  517 	mov	@r0,dpl
      000289 08               [12]  518 	inc	r0
      00028A A6 83            [24]  519 	mov	@r0,dph
      00028C 08               [12]  520 	inc	r0
      00028D A6 F0            [24]  521 	mov	@r0,b
      00028F 08               [12]  522 	inc	r0
      000290 F6               [12]  523 	mov	@r0,a
      000291 E5 81            [12]  524 	mov	a,sp
      000293 24 FC            [12]  525 	add	a,#0xfc
      000295 F5 81            [12]  526 	mov	sp,a
      000297 D0 04            [24]  527 	pop	ar4
      000299 D0 05            [24]  528 	pop	ar5
      00029B D0 06            [24]  529 	pop	ar6
      00029D D0 07            [24]  530 	pop	ar7
      00029F 74 3A            [12]  531 	mov	a,#0x3a
      0002A1 C0 E0            [24]  532 	push	acc
      0002A3 74 3F            [12]  533 	mov	a,#0x3f
      0002A5 C0 E0            [24]  534 	push	acc
      0002A7 74 D4            [12]  535 	mov	a,#0xd4
      0002A9 C0 E0            [24]  536 	push	acc
      0002AB 74 C0            [12]  537 	mov	a,#0xc0
      0002AD C0 E0            [24]  538 	push	acc
      0002AF 8F 82            [24]  539 	mov	dpl,r7
      0002B1 8E 83            [24]  540 	mov	dph,r6
      0002B3 8D F0            [24]  541 	mov	b,r5
      0002B5 EC               [12]  542 	mov	a,r4
      0002B6 12r00r00         [24]  543 	lcall	___fsadd
      0002B9 AC 82            [24]  544 	mov	r4,dpl
      0002BB AD 83            [24]  545 	mov	r5,dph
      0002BD AE F0            [24]  546 	mov	r6,b
      0002BF FF               [12]  547 	mov	r7,a
      0002C0 E5 81            [12]  548 	mov	a,sp
      0002C2 24 FC            [12]  549 	add	a,#0xfc
      0002C4 F5 81            [12]  550 	mov	sp,a
      0002C6 C0 04            [24]  551 	push	ar4
      0002C8 C0 05            [24]  552 	push	ar5
      0002CA C0 06            [24]  553 	push	ar6
      0002CC C0 07            [24]  554 	push	ar7
      0002CE E5*00            [12]  555 	mov	a,_bp
      0002D0 24 05            [12]  556 	add	a,#0x05
      0002D2 F8               [12]  557 	mov	r0,a
      0002D3 86 82            [24]  558 	mov	dpl,@r0
      0002D5 08               [12]  559 	inc	r0
      0002D6 86 83            [24]  560 	mov	dph,@r0
      0002D8 08               [12]  561 	inc	r0
      0002D9 86 F0            [24]  562 	mov	b,@r0
      0002DB 08               [12]  563 	inc	r0
      0002DC E6               [12]  564 	mov	a,@r0
      0002DD 12r00r00         [24]  565 	lcall	___fsdiv
      0002E0 AC 82            [24]  566 	mov	r4,dpl
      0002E2 AD 83            [24]  567 	mov	r5,dph
      0002E4 AE F0            [24]  568 	mov	r6,b
      0002E6 FF               [12]  569 	mov	r7,a
      0002E7 E5 81            [12]  570 	mov	a,sp
      0002E9 24 FC            [12]  571 	add	a,#0xfc
      0002EB F5 81            [12]  572 	mov	sp,a
      0002ED C0 04            [24]  573 	push	ar4
      0002EF C0 05            [24]  574 	push	ar5
      0002F1 C0 06            [24]  575 	push	ar6
      0002F3 C0 07            [24]  576 	push	ar7
      0002F5 E5*00            [12]  577 	mov	a,_bp
      0002F7 24 0D            [12]  578 	add	a,#0x0d
      0002F9 F8               [12]  579 	mov	r0,a
      0002FA 86 82            [24]  580 	mov	dpl,@r0
      0002FC 08               [12]  581 	inc	r0
      0002FD 86 83            [24]  582 	mov	dph,@r0
      0002FF 08               [12]  583 	inc	r0
      000300 86 F0            [24]  584 	mov	b,@r0
      000302 08               [12]  585 	inc	r0
      000303 E6               [12]  586 	mov	a,@r0
      000304 12r00r00         [24]  587 	lcall	___fsmul
      000307 AC 82            [24]  588 	mov	r4,dpl
      000309 AD 83            [24]  589 	mov	r5,dph
      00030B AE F0            [24]  590 	mov	r6,b
      00030D FF               [12]  591 	mov	r7,a
      00030E E5 81            [12]  592 	mov	a,sp
      000310 24 FC            [12]  593 	add	a,#0xfc
      000312 F5 81            [12]  594 	mov	sp,a
      000314 C0 04            [24]  595 	push	ar4
      000316 C0 05            [24]  596 	push	ar5
      000318 C0 06            [24]  597 	push	ar6
      00031A C0 07            [24]  598 	push	ar7
      00031C E5*00            [12]  599 	mov	a,_bp
      00031E 24 0D            [12]  600 	add	a,#0x0d
      000320 F8               [12]  601 	mov	r0,a
      000321 86 82            [24]  602 	mov	dpl,@r0
      000323 08               [12]  603 	inc	r0
      000324 86 83            [24]  604 	mov	dph,@r0
      000326 08               [12]  605 	inc	r0
      000327 86 F0            [24]  606 	mov	b,@r0
      000329 08               [12]  607 	inc	r0
      00032A E6               [12]  608 	mov	a,@r0
      00032B 12r00r00         [24]  609 	lcall	___fsadd
      00032E C8               [12]  610 	xch	a,r0
      00032F E5*00            [12]  611 	mov	a,_bp
      000331 24 09            [12]  612 	add	a,#0x09
      000333 C8               [12]  613 	xch	a,r0
      000334 A6 82            [24]  614 	mov	@r0,dpl
      000336 08               [12]  615 	inc	r0
      000337 A6 83            [24]  616 	mov	@r0,dph
      000339 08               [12]  617 	inc	r0
      00033A A6 F0            [24]  618 	mov	@r0,b
      00033C 08               [12]  619 	inc	r0
      00033D F6               [12]  620 	mov	@r0,a
      00033E E5 81            [12]  621 	mov	a,sp
      000340 24 FC            [12]  622 	add	a,#0xfc
      000342 F5 81            [12]  623 	mov	sp,a
                                    624 ;	logf.c:247: xn=n;
      000344 E5*00            [12]  625 	mov	a,_bp
      000346 24 1D            [12]  626 	add	a,#0x1d
      000348 F8               [12]  627 	mov	r0,a
      000349 86 82            [24]  628 	mov	dpl,@r0
      00034B 08               [12]  629 	inc	r0
      00034C 86 83            [24]  630 	mov	dph,@r0
      00034E 12r00r00         [24]  631 	lcall	___sint2fs
      000351 AA 82            [24]  632 	mov	r2,dpl
      000353 AB 83            [24]  633 	mov	r3,dph
      000355 AE F0            [24]  634 	mov	r6,b
      000357 FF               [12]  635 	mov	r7,a
      000358 E5*00            [12]  636 	mov	a,_bp
      00035A 24 19            [12]  637 	add	a,#0x19
      00035C F8               [12]  638 	mov	r0,a
      00035D A6 02            [24]  639 	mov	@r0,ar2
      00035F 08               [12]  640 	inc	r0
      000360 A6 03            [24]  641 	mov	@r0,ar3
      000362 08               [12]  642 	inc	r0
      000363 A6 06            [24]  643 	mov	@r0,ar6
      000365 08               [12]  644 	inc	r0
      000366 A6 07            [24]  645 	mov	@r0,ar7
                                    646 ;	logf.c:248: return ((xn*C2+Rz)+xn*C1);
      000368 E5*00            [12]  647 	mov	a,_bp
      00036A 24 19            [12]  648 	add	a,#0x19
      00036C F8               [12]  649 	mov	r0,a
      00036D E6               [12]  650 	mov	a,@r0
      00036E C0 E0            [24]  651 	push	acc
      000370 08               [12]  652 	inc	r0
      000371 E6               [12]  653 	mov	a,@r0
      000372 C0 E0            [24]  654 	push	acc
      000374 08               [12]  655 	inc	r0
      000375 E6               [12]  656 	mov	a,@r0
      000376 C0 E0            [24]  657 	push	acc
      000378 08               [12]  658 	inc	r0
      000379 E6               [12]  659 	mov	a,@r0
      00037A C0 E0            [24]  660 	push	acc
      00037C 90 80 83         [24]  661 	mov	dptr,#0x8083
      00037F 75 F0 5E         [24]  662 	mov	b,#0x5e
      000382 74 B9            [12]  663 	mov	a,#0xb9
      000384 12r00r00         [24]  664 	lcall	___fsmul
      000387 AC 82            [24]  665 	mov	r4,dpl
      000389 AD 83            [24]  666 	mov	r5,dph
      00038B AE F0            [24]  667 	mov	r6,b
      00038D FF               [12]  668 	mov	r7,a
      00038E E5 81            [12]  669 	mov	a,sp
      000390 24 FC            [12]  670 	add	a,#0xfc
      000392 F5 81            [12]  671 	mov	sp,a
      000394 E5*00            [12]  672 	mov	a,_bp
      000396 24 09            [12]  673 	add	a,#0x09
      000398 F8               [12]  674 	mov	r0,a
      000399 E6               [12]  675 	mov	a,@r0
      00039A C0 E0            [24]  676 	push	acc
      00039C 08               [12]  677 	inc	r0
      00039D E6               [12]  678 	mov	a,@r0
      00039E C0 E0            [24]  679 	push	acc
      0003A0 08               [12]  680 	inc	r0
      0003A1 E6               [12]  681 	mov	a,@r0
      0003A2 C0 E0            [24]  682 	push	acc
      0003A4 08               [12]  683 	inc	r0
      0003A5 E6               [12]  684 	mov	a,@r0
      0003A6 C0 E0            [24]  685 	push	acc
      0003A8 8C 82            [24]  686 	mov	dpl,r4
      0003AA 8D 83            [24]  687 	mov	dph,r5
      0003AC 8E F0            [24]  688 	mov	b,r6
      0003AE EF               [12]  689 	mov	a,r7
      0003AF 12r00r00         [24]  690 	lcall	___fsadd
      0003B2 C8               [12]  691 	xch	a,r0
      0003B3 E5*00            [12]  692 	mov	a,_bp
      0003B5 24 05            [12]  693 	add	a,#0x05
      0003B7 C8               [12]  694 	xch	a,r0
      0003B8 A6 82            [24]  695 	mov	@r0,dpl
      0003BA 08               [12]  696 	inc	r0
      0003BB A6 83            [24]  697 	mov	@r0,dph
      0003BD 08               [12]  698 	inc	r0
      0003BE A6 F0            [24]  699 	mov	@r0,b
      0003C0 08               [12]  700 	inc	r0
      0003C1 F6               [12]  701 	mov	@r0,a
      0003C2 E5 81            [12]  702 	mov	a,sp
      0003C4 24 FC            [12]  703 	add	a,#0xfc
      0003C6 F5 81            [12]  704 	mov	sp,a
      0003C8 E5*00            [12]  705 	mov	a,_bp
      0003CA 24 19            [12]  706 	add	a,#0x19
      0003CC F8               [12]  707 	mov	r0,a
      0003CD E6               [12]  708 	mov	a,@r0
      0003CE C0 E0            [24]  709 	push	acc
      0003D0 08               [12]  710 	inc	r0
      0003D1 E6               [12]  711 	mov	a,@r0
      0003D2 C0 E0            [24]  712 	push	acc
      0003D4 08               [12]  713 	inc	r0
      0003D5 E6               [12]  714 	mov	a,@r0
      0003D6 C0 E0            [24]  715 	push	acc
      0003D8 08               [12]  716 	inc	r0
      0003D9 E6               [12]  717 	mov	a,@r0
      0003DA C0 E0            [24]  718 	push	acc
      0003DC 90 80 00         [24]  719 	mov	dptr,#0x8000
      0003DF 75 F0 31         [24]  720 	mov	b,#0x31
      0003E2 74 3F            [12]  721 	mov	a,#0x3f
      0003E4 12r00r00         [24]  722 	lcall	___fsmul
      0003E7 AA 82            [24]  723 	mov	r2,dpl
      0003E9 AB 83            [24]  724 	mov	r3,dph
      0003EB AE F0            [24]  725 	mov	r6,b
      0003ED FF               [12]  726 	mov	r7,a
      0003EE E5 81            [12]  727 	mov	a,sp
      0003F0 24 FC            [12]  728 	add	a,#0xfc
      0003F2 F5 81            [12]  729 	mov	sp,a
      0003F4 C0 02            [24]  730 	push	ar2
      0003F6 C0 03            [24]  731 	push	ar3
      0003F8 C0 06            [24]  732 	push	ar6
      0003FA C0 07            [24]  733 	push	ar7
      0003FC E5*00            [12]  734 	mov	a,_bp
      0003FE 24 05            [12]  735 	add	a,#0x05
      000400 F8               [12]  736 	mov	r0,a
      000401 86 82            [24]  737 	mov	dpl,@r0
      000403 08               [12]  738 	inc	r0
      000404 86 83            [24]  739 	mov	dph,@r0
      000406 08               [12]  740 	inc	r0
      000407 86 F0            [24]  741 	mov	b,@r0
      000409 08               [12]  742 	inc	r0
      00040A E6               [12]  743 	mov	a,@r0
      00040B 12r00r00         [24]  744 	lcall	___fsadd
      00040E AC 82            [24]  745 	mov	r4,dpl
      000410 AD 83            [24]  746 	mov	r5,dph
      000412 AE F0            [24]  747 	mov	r6,b
      000414 FF               [12]  748 	mov	r7,a
      000415 E5 81            [12]  749 	mov	a,sp
      000417 24 FC            [12]  750 	add	a,#0xfc
      000419 F5 81            [12]  751 	mov	sp,a
      00041B 8C 82            [24]  752 	mov	dpl,r4
      00041D 8D 83            [24]  753 	mov	dph,r5
      00041F 8E F0            [24]  754 	mov	b,r6
      000421 EF               [12]  755 	mov	a,r7
      000422                        756 00106$:
                                    757 ;	logf.c:249: }
      000422 85*00 81         [24]  758 	mov	sp,_bp
      000425 D0*00            [24]  759 	pop	_bp
      000427 22               [24]  760 	ret
                                    761 	.area CSEG    (CODE)
                                    762 	.area CONST   (CODE)
                                    763 	.area XINIT   (CODE)
                                    764 	.area CABS    (ABS,CODE)
