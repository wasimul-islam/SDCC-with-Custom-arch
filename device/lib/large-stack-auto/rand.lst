                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module rand
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rand
                                     12 	.globl _srand
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; initialized external ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
      000000                         64 _s:
      000000                         65 	.ds 4
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'rand'
                                     94 ;------------------------------------------------------------
                                     95 ;t                         Allocated to stack - _bp +5
                                     96 ;sloc0                     Allocated to stack - _bp +1
                                     97 ;------------------------------------------------------------
                                     98 ;	rand.c:40: int rand(void)
                                     99 ;	-----------------------------------------
                                    100 ;	 function rand
                                    101 ;	-----------------------------------------
      000000                        102 _rand:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 E5 81            [12]  112 	mov	a,sp
      000004 F5*00            [12]  113 	mov	_bp,a
      000006 24 08            [12]  114 	add	a,#0x08
      000008 F5 81            [12]  115 	mov	sp,a
                                    116 ;	rand.c:42: register unsigned long t = s;
      00000A 90r00r00         [24]  117 	mov	dptr,#_s
      00000D A8*00            [24]  118 	mov	r0,_bp
      00000F 08               [12]  119 	inc	r0
      000010 E0               [24]  120 	movx	a,@dptr
      000011 F6               [12]  121 	mov	@r0,a
      000012 A3               [24]  122 	inc	dptr
      000013 E0               [24]  123 	movx	a,@dptr
      000014 08               [12]  124 	inc	r0
      000015 F6               [12]  125 	mov	@r0,a
      000016 A3               [24]  126 	inc	dptr
      000017 E0               [24]  127 	movx	a,@dptr
      000018 08               [12]  128 	inc	r0
      000019 F6               [12]  129 	mov	@r0,a
      00001A A3               [24]  130 	inc	dptr
      00001B E0               [24]  131 	movx	a,@dptr
      00001C 08               [12]  132 	inc	r0
      00001D F6               [12]  133 	mov	@r0,a
                                    134 ;	rand.c:44: t ^= t >> 10;
      00001E A8*00            [24]  135 	mov	r0,_bp
      000020 08               [12]  136 	inc	r0
      000021 08               [12]  137 	inc	r0
      000022 86 02            [24]  138 	mov	ar2,@r0
      000024 08               [12]  139 	inc	r0
      000025 E6               [12]  140 	mov	a,@r0
      000026 C3               [12]  141 	clr	c
      000027 13               [12]  142 	rrc	a
      000028 CA               [12]  143 	xch	a,r2
      000029 13               [12]  144 	rrc	a
      00002A CA               [12]  145 	xch	a,r2
      00002B C3               [12]  146 	clr	c
      00002C 13               [12]  147 	rrc	a
      00002D CA               [12]  148 	xch	a,r2
      00002E 13               [12]  149 	rrc	a
      00002F CA               [12]  150 	xch	a,r2
      000030 FB               [12]  151 	mov	r3,a
      000031 08               [12]  152 	inc	r0
      000032 E6               [12]  153 	mov	a,@r0
      000033 03               [12]  154 	rr	a
      000034 03               [12]  155 	rr	a
      000035 54 C0            [12]  156 	anl	a,#0xc0
      000037 4B               [12]  157 	orl	a,r3
      000038 FB               [12]  158 	mov	r3,a
      000039 E6               [12]  159 	mov	a,@r0
      00003A 03               [12]  160 	rr	a
      00003B 03               [12]  161 	rr	a
      00003C 54 3F            [12]  162 	anl	a,#0x3f
      00003E FE               [12]  163 	mov	r6,a
      00003F 7F 00            [12]  164 	mov	r7,#0x00
      000041 A8*00            [24]  165 	mov	r0,_bp
      000043 08               [12]  166 	inc	r0
      000044 EA               [12]  167 	mov	a,r2
      000045 66               [12]  168 	xrl	a,@r0
      000046 F6               [12]  169 	mov	@r0,a
      000047 EB               [12]  170 	mov	a,r3
      000048 08               [12]  171 	inc	r0
      000049 66               [12]  172 	xrl	a,@r0
      00004A F6               [12]  173 	mov	@r0,a
      00004B EE               [12]  174 	mov	a,r6
      00004C 08               [12]  175 	inc	r0
      00004D 66               [12]  176 	xrl	a,@r0
      00004E F6               [12]  177 	mov	@r0,a
      00004F EF               [12]  178 	mov	a,r7
      000050 08               [12]  179 	inc	r0
      000051 66               [12]  180 	xrl	a,@r0
      000052 F6               [12]  181 	mov	@r0,a
                                    182 ;	rand.c:45: t ^= t << 9;
      000053 A8*00            [24]  183 	mov	r0,_bp
      000055 08               [12]  184 	inc	r0
      000056 E6               [12]  185 	mov	a,@r0
      000057 26               [12]  186 	add	a,@r0
      000058 FD               [12]  187 	mov	r5,a
      000059 08               [12]  188 	inc	r0
      00005A E6               [12]  189 	mov	a,@r0
      00005B 33               [12]  190 	rlc	a
      00005C FE               [12]  191 	mov	r6,a
      00005D 08               [12]  192 	inc	r0
      00005E E6               [12]  193 	mov	a,@r0
      00005F 33               [12]  194 	rlc	a
      000060 FF               [12]  195 	mov	r7,a
      000061 7C 00            [12]  196 	mov	r4,#0x00
      000063 A8*00            [24]  197 	mov	r0,_bp
      000065 08               [12]  198 	inc	r0
      000066 E6               [12]  199 	mov	a,@r0
      000067 62 04            [12]  200 	xrl	ar4,a
      000069 08               [12]  201 	inc	r0
      00006A E6               [12]  202 	mov	a,@r0
      00006B 62 05            [12]  203 	xrl	ar5,a
      00006D 08               [12]  204 	inc	r0
      00006E E6               [12]  205 	mov	a,@r0
      00006F 62 06            [12]  206 	xrl	ar6,a
      000071 08               [12]  207 	inc	r0
      000072 E6               [12]  208 	mov	a,@r0
      000073 62 07            [12]  209 	xrl	ar7,a
      000075 E5*00            [12]  210 	mov	a,_bp
      000077 24 05            [12]  211 	add	a,#0x05
      000079 F8               [12]  212 	mov	r0,a
      00007A A6 04            [24]  213 	mov	@r0,ar4
      00007C 08               [12]  214 	inc	r0
      00007D A6 05            [24]  215 	mov	@r0,ar5
      00007F 08               [12]  216 	inc	r0
      000080 A6 06            [24]  217 	mov	@r0,ar6
      000082 08               [12]  218 	inc	r0
      000083 A6 07            [24]  219 	mov	@r0,ar7
                                    220 ;	rand.c:46: t ^= t >> 25;
      000085 E5*00            [12]  221 	mov	a,_bp
      000087 24 05            [12]  222 	add	a,#0x05
      000089 F8               [12]  223 	mov	r0,a
      00008A 08               [12]  224 	inc	r0
      00008B 08               [12]  225 	inc	r0
      00008C 08               [12]  226 	inc	r0
      00008D E6               [12]  227 	mov	a,@r0
      00008E C3               [12]  228 	clr	c
      00008F 13               [12]  229 	rrc	a
      000090 FA               [12]  230 	mov	r2,a
      000091 E4               [12]  231 	clr	a
      000092 FB               [12]  232 	mov	r3,a
      000093 FE               [12]  233 	mov	r6,a
      000094 FF               [12]  234 	mov	r7,a
      000095 E5*00            [12]  235 	mov	a,_bp
      000097 24 05            [12]  236 	add	a,#0x05
      000099 F8               [12]  237 	mov	r0,a
      00009A E6               [12]  238 	mov	a,@r0
      00009B 62 02            [12]  239 	xrl	ar2,a
      00009D 08               [12]  240 	inc	r0
      00009E E6               [12]  241 	mov	a,@r0
      00009F 62 03            [12]  242 	xrl	ar3,a
      0000A1 08               [12]  243 	inc	r0
      0000A2 E6               [12]  244 	mov	a,@r0
      0000A3 62 06            [12]  245 	xrl	ar6,a
      0000A5 08               [12]  246 	inc	r0
      0000A6 E6               [12]  247 	mov	a,@r0
      0000A7 62 07            [12]  248 	xrl	ar7,a
                                    249 ;	rand.c:48: s = t;
      0000A9 90r00r00         [24]  250 	mov	dptr,#_s
      0000AC EA               [12]  251 	mov	a,r2
      0000AD F0               [24]  252 	movx	@dptr,a
      0000AE EB               [12]  253 	mov	a,r3
      0000AF A3               [24]  254 	inc	dptr
      0000B0 F0               [24]  255 	movx	@dptr,a
      0000B1 EE               [12]  256 	mov	a,r6
      0000B2 A3               [24]  257 	inc	dptr
      0000B3 F0               [24]  258 	movx	@dptr,a
      0000B4 EF               [12]  259 	mov	a,r7
      0000B5 A3               [24]  260 	inc	dptr
      0000B6 F0               [24]  261 	movx	@dptr,a
                                    262 ;	rand.c:50: return(t & RAND_MAX);
      0000B7 53 03 7F         [24]  263 	anl	ar3,#0x7f
      0000BA 8A 82            [24]  264 	mov	dpl,r2
      0000BC 8B 83            [24]  265 	mov	dph,r3
                                    266 ;	rand.c:51: }
      0000BE 85*00 81         [24]  267 	mov	sp,_bp
      0000C1 D0*00            [24]  268 	pop	_bp
      0000C3 22               [24]  269 	ret
                                    270 ;------------------------------------------------------------
                                    271 ;Allocation info for local variables in function 'srand'
                                    272 ;------------------------------------------------------------
                                    273 ;seed                      Allocated to registers r6 r7 
                                    274 ;------------------------------------------------------------
                                    275 ;	rand.c:53: void srand(unsigned int seed)
                                    276 ;	-----------------------------------------
                                    277 ;	 function srand
                                    278 ;	-----------------------------------------
      0000C4                        279 _srand:
      0000C4 AE 82            [24]  280 	mov	r6,dpl
      0000C6 AF 83            [24]  281 	mov	r7,dph
                                    282 ;	rand.c:55: s = seed | 0x80000000; /* s shall not become 0 */
      0000C8 7D 00            [12]  283 	mov	r5,#0x00
      0000CA 7C 00            [12]  284 	mov	r4,#0x00
      0000CC 90r00r00         [24]  285 	mov	dptr,#_s
      0000CF EE               [12]  286 	mov	a,r6
      0000D0 F0               [24]  287 	movx	@dptr,a
      0000D1 EF               [12]  288 	mov	a,r7
      0000D2 A3               [24]  289 	inc	dptr
      0000D3 F0               [24]  290 	movx	@dptr,a
      0000D4 ED               [12]  291 	mov	a,r5
      0000D5 A3               [24]  292 	inc	dptr
      0000D6 F0               [24]  293 	movx	@dptr,a
      0000D7 74 80            [12]  294 	mov	a,#0x80
      0000D9 4C               [12]  295 	orl	a,r4
      0000DA A3               [24]  296 	inc	dptr
      0000DB F0               [24]  297 	movx	@dptr,a
                                    298 ;	rand.c:56: }
      0000DC 22               [24]  299 	ret
                                    300 	.area CSEG    (CODE)
                                    301 	.area CONST   (CODE)
                                    302 	.area XINIT   (CODE)
      000000                        303 __xinit__s:
      000000 01 00 00 80            304 	.byte #0x01, #0x00, #0x00, #0x80	; 2147483649
                                    305 	.area CABS    (ABS,CODE)
