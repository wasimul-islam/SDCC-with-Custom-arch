                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncpy
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncpy
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'strncpy'
                                     91 ;------------------------------------------------------------
                                     92 ;s                         Allocated to stack - _bp -5
                                     93 ;n                         Allocated to stack - _bp -7
                                     94 ;d                         Allocated to stack - _bp +1
                                     95 ;d1                        Allocated to stack - _bp +7
                                     96 ;sloc0                     Allocated to stack - _bp +4
                                     97 ;------------------------------------------------------------
                                     98 ;	_strncpy.c:33: char *strncpy ( char * d, const char * s, size_t n )
                                     99 ;	-----------------------------------------
                                    100 ;	 function strncpy
                                    101 ;	-----------------------------------------
      000000                        102 _strncpy:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 E5 81            [12]  112 	mov	a,sp
      000004 F5*00            [12]  113 	mov	_bp,a
      000006 24 09            [12]  114 	add	a,#0x09
      000008 F5 81            [12]  115 	mov	sp,a
      00000A AD 82            [24]  116 	mov	r5,dpl
      00000C AE 83            [24]  117 	mov	r6,dph
      00000E AF F0            [24]  118 	mov	r7,b
                                    119 ;	_strncpy.c:35: register char * d1 =  d;
      000010 E5*00            [12]  120 	mov	a,_bp
      000012 24 07            [12]  121 	add	a,#0x07
      000014 F8               [12]  122 	mov	r0,a
      000015 A6 05            [24]  123 	mov	@r0,ar5
      000017 08               [12]  124 	inc	r0
      000018 A6 06            [24]  125 	mov	@r0,ar6
      00001A 08               [12]  126 	inc	r0
      00001B A6 07            [24]  127 	mov	@r0,ar7
                                    128 ;	_strncpy.c:37: while ( n && *s )
      00001D E5*00            [12]  129 	mov	a,_bp
      00001F 24 F9            [12]  130 	add	a,#0xf9
      000021 F8               [12]  131 	mov	r0,a
      000022 86 03            [24]  132 	mov	ar3,@r0
      000024 08               [12]  133 	inc	r0
      000025 86 04            [24]  134 	mov	ar4,@r0
      000027 E5*00            [12]  135 	mov	a,_bp
      000029 24 FB            [12]  136 	add	a,#0xfb
      00002B F8               [12]  137 	mov	r0,a
      00002C E5*00            [12]  138 	mov	a,_bp
      00002E 24 04            [12]  139 	add	a,#0x04
      000030 F9               [12]  140 	mov	r1,a
      000031 E6               [12]  141 	mov	a,@r0
      000032 F7               [12]  142 	mov	@r1,a
      000033 08               [12]  143 	inc	r0
      000034 E6               [12]  144 	mov	a,@r0
      000035 09               [12]  145 	inc	r1
      000036 F7               [12]  146 	mov	@r1,a
      000037 08               [12]  147 	inc	r0
      000038 E6               [12]  148 	mov	a,@r0
      000039 09               [12]  149 	inc	r1
      00003A F7               [12]  150 	mov	@r1,a
      00003B                        151 00102$:
      00003B EB               [12]  152 	mov	a,r3
      00003C 4C               [12]  153 	orl	a,r4
      00003D 60 34            [24]  154 	jz	00114$
      00003F E5*00            [12]  155 	mov	a,_bp
      000041 24 04            [12]  156 	add	a,#0x04
      000043 F8               [12]  157 	mov	r0,a
      000044 86 82            [24]  158 	mov	dpl,@r0
      000046 08               [12]  159 	inc	r0
      000047 86 83            [24]  160 	mov	dph,@r0
      000049 08               [12]  161 	inc	r0
      00004A 86 F0            [24]  162 	mov	b,@r0
      00004C 12r00r00         [24]  163 	lcall	__gptrget
      00004F FA               [12]  164 	mov	r2,a
      000050 60 21            [24]  165 	jz	00114$
                                    166 ;	_strncpy.c:39: n-- ;
      000052 1B               [12]  167 	dec	r3
      000053 BB FF 01         [24]  168 	cjne	r3,#0xff,00134$
      000056 1C               [12]  169 	dec	r4
      000057                        170 00134$:
                                    171 ;	_strncpy.c:40: *d++ = *s++ ;
      000057 E5*00            [12]  172 	mov	a,_bp
      000059 24 04            [12]  173 	add	a,#0x04
      00005B F8               [12]  174 	mov	r0,a
      00005C 06               [12]  175 	inc	@r0
      00005D B6 00 02         [24]  176 	cjne	@r0,#0x00,00135$
      000060 08               [12]  177 	inc	r0
      000061 06               [12]  178 	inc	@r0
      000062                        179 00135$:
      000062 8D 82            [24]  180 	mov	dpl,r5
      000064 8E 83            [24]  181 	mov	dph,r6
      000066 8F F0            [24]  182 	mov	b,r7
      000068 EA               [12]  183 	mov	a,r2
      000069 12r00r00         [24]  184 	lcall	__gptrput
      00006C A3               [24]  185 	inc	dptr
      00006D AD 82            [24]  186 	mov	r5,dpl
      00006F AE 83            [24]  187 	mov	r6,dph
                                    188 ;	_strncpy.c:42: while ( n-- )
      000071 80 C8            [24]  189 	sjmp	00102$
      000073                        190 00114$:
      000073 A8*00            [24]  191 	mov	r0,_bp
      000075 08               [12]  192 	inc	r0
      000076 A6 05            [24]  193 	mov	@r0,ar5
      000078 08               [12]  194 	inc	r0
      000079 A6 06            [24]  195 	mov	@r0,ar6
      00007B 08               [12]  196 	inc	r0
      00007C A6 07            [24]  197 	mov	@r0,ar7
      00007E                        198 00105$:
      00007E 8B 02            [24]  199 	mov	ar2,r3
      000080 8C 07            [24]  200 	mov	ar7,r4
      000082 1B               [12]  201 	dec	r3
      000083 BB FF 01         [24]  202 	cjne	r3,#0xff,00136$
      000086 1C               [12]  203 	dec	r4
      000087                        204 00136$:
      000087 EA               [12]  205 	mov	a,r2
      000088 4F               [12]  206 	orl	a,r7
      000089 60 19            [24]  207 	jz	00107$
                                    208 ;	_strncpy.c:44: *d++ = '\0' ;
      00008B A8*00            [24]  209 	mov	r0,_bp
      00008D 08               [12]  210 	inc	r0
      00008E 86 82            [24]  211 	mov	dpl,@r0
      000090 08               [12]  212 	inc	r0
      000091 86 83            [24]  213 	mov	dph,@r0
      000093 08               [12]  214 	inc	r0
      000094 86 F0            [24]  215 	mov	b,@r0
      000096 E4               [12]  216 	clr	a
      000097 12r00r00         [24]  217 	lcall	__gptrput
      00009A A3               [24]  218 	inc	dptr
      00009B 18               [12]  219 	dec	r0
      00009C 18               [12]  220 	dec	r0
      00009D A6 82            [24]  221 	mov	@r0,dpl
      00009F 08               [12]  222 	inc	r0
      0000A0 A6 83            [24]  223 	mov	@r0,dph
      0000A2 80 DA            [24]  224 	sjmp	00105$
      0000A4                        225 00107$:
                                    226 ;	_strncpy.c:46: return d1;
      0000A4 E5*00            [12]  227 	mov	a,_bp
      0000A6 24 07            [12]  228 	add	a,#0x07
      0000A8 F8               [12]  229 	mov	r0,a
      0000A9 86 82            [24]  230 	mov	dpl,@r0
      0000AB 08               [12]  231 	inc	r0
      0000AC 86 83            [24]  232 	mov	dph,@r0
      0000AE 08               [12]  233 	inc	r0
      0000AF 86 F0            [24]  234 	mov	b,@r0
                                    235 ;	_strncpy.c:47: }
      0000B1 85*00 81         [24]  236 	mov	sp,_bp
      0000B4 D0*00            [24]  237 	pop	_bp
      0000B6 22               [24]  238 	ret
                                    239 	.area CSEG    (CODE)
                                    240 	.area CONST   (CODE)
                                    241 	.area XINIT   (CODE)
                                    242 	.area CABS    (ABS,CODE)
