                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module calloc
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memset
                                     12 	.globl _malloc
                                     13 	.globl _calloc
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; uninitialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; initialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'calloc'
                                     93 ;------------------------------------------------------------
                                     94 ;size                      Allocated to stack - _bp -4
                                     95 ;nmemb                     Allocated to registers r6 r7 
                                     96 ;ptr                       Allocated to registers r2 r3 
                                     97 ;msize                     Allocated to registers r4 r5 r6 r7 
                                     98 ;sloc0                     Allocated to stack - _bp +1
                                     99 ;------------------------------------------------------------
                                    100 ;	calloc.c:42: void HEAPSPACE *calloc (size_t nmemb, size_t size)
                                    101 ;	-----------------------------------------
                                    102 ;	 function calloc
                                    103 ;	-----------------------------------------
      000000                        104 _calloc:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 E5 81            [12]  114 	mov	a,sp
      000004 F5*00            [12]  115 	mov	_bp,a
      000006 24 04            [12]  116 	add	a,#0x04
      000008 F5 81            [12]  117 	mov	sp,a
      00000A AE 82            [24]  118 	mov	r6,dpl
      00000C AF 83            [24]  119 	mov	r7,dph
                                    120 ;	calloc.c:49: unsigned long msize = (unsigned long)nmemb * (unsigned long)size;
      00000E A8*00            [24]  121 	mov	r0,_bp
      000010 08               [12]  122 	inc	r0
      000011 A6 06            [24]  123 	mov	@r0,ar6
      000013 08               [12]  124 	inc	r0
      000014 A6 07            [24]  125 	mov	@r0,ar7
      000016 08               [12]  126 	inc	r0
      000017 76 00            [12]  127 	mov	@r0,#0x00
      000019 08               [12]  128 	inc	r0
      00001A 76 00            [12]  129 	mov	@r0,#0x00
      00001C E5*00            [12]  130 	mov	a,_bp
      00001E 24 FC            [12]  131 	add	a,#0xfc
      000020 F8               [12]  132 	mov	r0,a
      000021 86 02            [24]  133 	mov	ar2,@r0
      000023 08               [12]  134 	inc	r0
      000024 86 03            [24]  135 	mov	ar3,@r0
      000026 7E 00            [12]  136 	mov	r6,#0x00
      000028 7F 00            [12]  137 	mov	r7,#0x00
      00002A C0 02            [24]  138 	push	ar2
      00002C C0 03            [24]  139 	push	ar3
      00002E C0 06            [24]  140 	push	ar6
      000030 C0 07            [24]  141 	push	ar7
      000032 A8*00            [24]  142 	mov	r0,_bp
      000034 08               [12]  143 	inc	r0
      000035 86 82            [24]  144 	mov	dpl,@r0
      000037 08               [12]  145 	inc	r0
      000038 86 83            [24]  146 	mov	dph,@r0
      00003A 08               [12]  147 	inc	r0
      00003B 86 F0            [24]  148 	mov	b,@r0
      00003D 08               [12]  149 	inc	r0
      00003E E6               [12]  150 	mov	a,@r0
      00003F 12r00r00         [24]  151 	lcall	__mullong
      000042 AC 82            [24]  152 	mov	r4,dpl
      000044 AD 83            [24]  153 	mov	r5,dph
      000046 AE F0            [24]  154 	mov	r6,b
      000048 FF               [12]  155 	mov	r7,a
      000049 E5 81            [12]  156 	mov	a,sp
      00004B 24 FC            [12]  157 	add	a,#0xfc
      00004D F5 81            [12]  158 	mov	sp,a
                                    159 ;	calloc.c:54: if (msize > SIZE_MAX)
      00004F C3               [12]  160 	clr	c
      000050 74 FF            [12]  161 	mov	a,#0xff
      000052 9C               [12]  162 	subb	a,r4
      000053 74 FF            [12]  163 	mov	a,#0xff
      000055 9D               [12]  164 	subb	a,r5
      000056 E4               [12]  165 	clr	a
      000057 9E               [12]  166 	subb	a,r6
      000058 E4               [12]  167 	clr	a
      000059 9F               [12]  168 	subb	a,r7
      00005A 50 05            [24]  169 	jnc	00102$
                                    170 ;	calloc.c:55: return(0);
      00005C 90 00 00         [24]  171 	mov	dptr,#0x0000
      00005F 80 4D            [24]  172 	sjmp	00105$
      000061                        173 00102$:
                                    174 ;	calloc.c:57: if (ptr = malloc(msize))
      000061 A8*00            [24]  175 	mov	r0,_bp
      000063 08               [12]  176 	inc	r0
      000064 A6 04            [24]  177 	mov	@r0,ar4
      000066 08               [12]  178 	inc	r0
      000067 A6 05            [24]  179 	mov	@r0,ar5
      000069 A8*00            [24]  180 	mov	r0,_bp
      00006B 08               [12]  181 	inc	r0
      00006C 86 82            [24]  182 	mov	dpl,@r0
      00006E 08               [12]  183 	inc	r0
      00006F 86 83            [24]  184 	mov	dph,@r0
      000071 12r00r00         [24]  185 	lcall	_malloc
      000074 AE 82            [24]  186 	mov	r6,dpl
      000076 AF 83            [24]  187 	mov	r7,dph
      000078 8E 02            [24]  188 	mov	ar2,r6
      00007A 8F 03            [24]  189 	mov	ar3,r7
      00007C EE               [12]  190 	mov	a,r6
      00007D 4F               [12]  191 	orl	a,r7
      00007E 60 2A            [24]  192 	jz	00104$
                                    193 ;	calloc.c:58: memset(ptr, 0, msize);
      000080 8A 05            [24]  194 	mov	ar5,r2
      000082 8B 06            [24]  195 	mov	ar6,r3
      000084 7F 00            [12]  196 	mov	r7,#0x00
      000086 C0 03            [24]  197 	push	ar3
      000088 C0 02            [24]  198 	push	ar2
      00008A A8*00            [24]  199 	mov	r0,_bp
      00008C 08               [12]  200 	inc	r0
      00008D E6               [12]  201 	mov	a,@r0
      00008E C0 E0            [24]  202 	push	acc
      000090 08               [12]  203 	inc	r0
      000091 E6               [12]  204 	mov	a,@r0
      000092 C0 E0            [24]  205 	push	acc
      000094 E4               [12]  206 	clr	a
      000095 C0 E0            [24]  207 	push	acc
      000097 8D 82            [24]  208 	mov	dpl,r5
      000099 8E 83            [24]  209 	mov	dph,r6
      00009B 8F F0            [24]  210 	mov	b,r7
      00009D 12r00r00         [24]  211 	lcall	_memset
      0000A0 15 81            [12]  212 	dec	sp
      0000A2 15 81            [12]  213 	dec	sp
      0000A4 15 81            [12]  214 	dec	sp
      0000A6 D0 02            [24]  215 	pop	ar2
      0000A8 D0 03            [24]  216 	pop	ar3
      0000AA                        217 00104$:
                                    218 ;	calloc.c:60: return(ptr);
      0000AA 8A 82            [24]  219 	mov	dpl,r2
      0000AC 8B 83            [24]  220 	mov	dph,r3
      0000AE                        221 00105$:
                                    222 ;	calloc.c:61: }
      0000AE 85*00 81         [24]  223 	mov	sp,_bp
      0000B1 D0*00            [24]  224 	pop	_bp
      0000B3 22               [24]  225 	ret
                                    226 	.area CSEG    (CODE)
                                    227 	.area CONST   (CODE)
                                    228 	.area XINIT   (CODE)
                                    229 	.area CABS    (ABS,CODE)
