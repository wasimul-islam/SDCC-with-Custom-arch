                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mbrtoc32
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _mbrtowc
                                     12 	.globl _mbrtoc32
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
      000000                         56 _mbrtoc32_sps_65536_16:
      000000                         57 	.ds 3
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'mbrtoc32'
                                     94 ;------------------------------------------------------------
                                     95 ;s                         Allocated to stack - _bp -5
                                     96 ;n                         Allocated to stack - _bp -7
                                     97 ;ps                        Allocated to stack - _bp -10
                                     98 ;pc32                      Allocated to registers r5 r6 r7 
                                     99 ;wc                        Allocated to stack - _bp +1
                                    100 ;ret                       Allocated to registers r3 r4 
                                    101 ;sps                       Allocated with name '_mbrtoc32_sps_65536_16'
                                    102 ;------------------------------------------------------------
                                    103 ;	mbrtoc32.c:34: size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
                                    104 ;	-----------------------------------------
                                    105 ;	 function mbrtoc32
                                    106 ;	-----------------------------------------
      000000                        107 _mbrtoc32:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
      000000 C0*00            [24]  116 	push	_bp
      000002 E5 81            [12]  117 	mov	a,sp
      000004 F5*00            [12]  118 	mov	_bp,a
      000006 24 04            [12]  119 	add	a,#0x04
      000008 F5 81            [12]  120 	mov	sp,a
      00000A AD 82            [24]  121 	mov	r5,dpl
      00000C AE 83            [24]  122 	mov	r6,dph
      00000E AF F0            [24]  123 	mov	r7,b
                                    124 ;	mbrtoc32.c:40: if(!ps)
      000010 E5*00            [12]  125 	mov	a,_bp
      000012 24 F6            [12]  126 	add	a,#0xf6
      000014 F8               [12]  127 	mov	r0,a
      000015 E6               [12]  128 	mov	a,@r0
      000016 08               [12]  129 	inc	r0
      000017 46               [12]  130 	orl	a,@r0
      000018 70 0D            [24]  131 	jnz	00102$
                                    132 ;	mbrtoc32.c:41: ps = &sps;
      00001A E5*00            [12]  133 	mov	a,_bp
      00001C 24 F6            [12]  134 	add	a,#0xf6
      00001E F8               [12]  135 	mov	r0,a
      00001F 76r00            [12]  136 	mov	@r0,#_mbrtoc32_sps_65536_16
      000021 08               [12]  137 	inc	r0
      000022 76s00            [12]  138 	mov	@r0,#(_mbrtoc32_sps_65536_16 >> 8)
      000024 08               [12]  139 	inc	r0
      000025 76 00            [12]  140 	mov	@r0,#0x00
      000027                        141 00102$:
                                    142 ;	mbrtoc32.c:43: if(!pc32)
      000027 ED               [12]  143 	mov	a,r5
      000028 4E               [12]  144 	orl	a,r6
      000029 70 46            [24]  145 	jnz	00104$
                                    146 ;	mbrtoc32.c:44: return(mbrtowc(0, s, n, ps));
      00002B E5*00            [12]  147 	mov	a,_bp
      00002D 24 F6            [12]  148 	add	a,#0xf6
      00002F F8               [12]  149 	mov	r0,a
      000030 E6               [12]  150 	mov	a,@r0
      000031 C0 E0            [24]  151 	push	acc
      000033 08               [12]  152 	inc	r0
      000034 E6               [12]  153 	mov	a,@r0
      000035 C0 E0            [24]  154 	push	acc
      000037 08               [12]  155 	inc	r0
      000038 E6               [12]  156 	mov	a,@r0
      000039 C0 E0            [24]  157 	push	acc
      00003B E5*00            [12]  158 	mov	a,_bp
      00003D 24 F9            [12]  159 	add	a,#0xf9
      00003F F8               [12]  160 	mov	r0,a
      000040 E6               [12]  161 	mov	a,@r0
      000041 C0 E0            [24]  162 	push	acc
      000043 08               [12]  163 	inc	r0
      000044 E6               [12]  164 	mov	a,@r0
      000045 C0 E0            [24]  165 	push	acc
      000047 E5*00            [12]  166 	mov	a,_bp
      000049 24 FB            [12]  167 	add	a,#0xfb
      00004B F8               [12]  168 	mov	r0,a
      00004C E6               [12]  169 	mov	a,@r0
      00004D C0 E0            [24]  170 	push	acc
      00004F 08               [12]  171 	inc	r0
      000050 E6               [12]  172 	mov	a,@r0
      000051 C0 E0            [24]  173 	push	acc
      000053 08               [12]  174 	inc	r0
      000054 E6               [12]  175 	mov	a,@r0
      000055 C0 E0            [24]  176 	push	acc
      000057 90 00 00         [24]  177 	mov	dptr,#0x0000
      00005A 75 F0 00         [24]  178 	mov	b,#0x00
      00005D 12r00r00         [24]  179 	lcall	_mbrtowc
      000060 AB 82            [24]  180 	mov	r3,dpl
      000062 AC 83            [24]  181 	mov	r4,dph
      000064 E5 81            [12]  182 	mov	a,sp
      000066 24 F8            [12]  183 	add	a,#0xf8
      000068 F5 81            [12]  184 	mov	sp,a
      00006A 8B 82            [24]  185 	mov	dpl,r3
      00006C 8C 83            [24]  186 	mov	dph,r4
      00006E 02r00rEE         [24]  187 	ljmp	00107$
      000071                        188 00104$:
                                    189 ;	mbrtoc32.c:46: ret = mbrtowc(&wc, s, n, ps);
      000071 AC*00            [24]  190 	mov	r4,_bp
      000073 0C               [12]  191 	inc	r4
      000074 7B 00            [12]  192 	mov	r3,#0x00
      000076 7A 40            [12]  193 	mov	r2,#0x40
      000078 C0 07            [24]  194 	push	ar7
      00007A C0 06            [24]  195 	push	ar6
      00007C C0 05            [24]  196 	push	ar5
      00007E E5*00            [12]  197 	mov	a,_bp
      000080 24 F6            [12]  198 	add	a,#0xf6
      000082 F8               [12]  199 	mov	r0,a
      000083 E6               [12]  200 	mov	a,@r0
      000084 C0 E0            [24]  201 	push	acc
      000086 08               [12]  202 	inc	r0
      000087 E6               [12]  203 	mov	a,@r0
      000088 C0 E0            [24]  204 	push	acc
      00008A 08               [12]  205 	inc	r0
      00008B E6               [12]  206 	mov	a,@r0
      00008C C0 E0            [24]  207 	push	acc
      00008E E5*00            [12]  208 	mov	a,_bp
      000090 24 F9            [12]  209 	add	a,#0xf9
      000092 F8               [12]  210 	mov	r0,a
      000093 E6               [12]  211 	mov	a,@r0
      000094 C0 E0            [24]  212 	push	acc
      000096 08               [12]  213 	inc	r0
      000097 E6               [12]  214 	mov	a,@r0
      000098 C0 E0            [24]  215 	push	acc
      00009A E5*00            [12]  216 	mov	a,_bp
      00009C 24 FB            [12]  217 	add	a,#0xfb
      00009E F8               [12]  218 	mov	r0,a
      00009F E6               [12]  219 	mov	a,@r0
      0000A0 C0 E0            [24]  220 	push	acc
      0000A2 08               [12]  221 	inc	r0
      0000A3 E6               [12]  222 	mov	a,@r0
      0000A4 C0 E0            [24]  223 	push	acc
      0000A6 08               [12]  224 	inc	r0
      0000A7 E6               [12]  225 	mov	a,@r0
      0000A8 C0 E0            [24]  226 	push	acc
      0000AA 8C 82            [24]  227 	mov	dpl,r4
      0000AC 8B 83            [24]  228 	mov	dph,r3
      0000AE 8A F0            [24]  229 	mov	b,r2
      0000B0 12r00r00         [24]  230 	lcall	_mbrtowc
      0000B3 AB 82            [24]  231 	mov	r3,dpl
      0000B5 AC 83            [24]  232 	mov	r4,dph
      0000B7 E5 81            [12]  233 	mov	a,sp
      0000B9 24 F8            [12]  234 	add	a,#0xf8
      0000BB F5 81            [12]  235 	mov	sp,a
      0000BD D0 05            [24]  236 	pop	ar5
      0000BF D0 06            [24]  237 	pop	ar6
      0000C1 D0 07            [24]  238 	pop	ar7
                                    239 ;	mbrtoc32.c:48: if(ret <= MB_LEN_MAX)
      0000C3 C3               [12]  240 	clr	c
      0000C4 74 04            [12]  241 	mov	a,#0x04
      0000C6 9B               [12]  242 	subb	a,r3
      0000C7 E4               [12]  243 	clr	a
      0000C8 9C               [12]  244 	subb	a,r4
      0000C9 40 1F            [24]  245 	jc	00106$
                                    246 ;	mbrtoc32.c:49: *pc32 = wc;
      0000CB 8D 82            [24]  247 	mov	dpl,r5
      0000CD 8E 83            [24]  248 	mov	dph,r6
      0000CF 8F F0            [24]  249 	mov	b,r7
      0000D1 A8*00            [24]  250 	mov	r0,_bp
      0000D3 08               [12]  251 	inc	r0
      0000D4 E6               [12]  252 	mov	a,@r0
      0000D5 12r00r00         [24]  253 	lcall	__gptrput
      0000D8 A3               [24]  254 	inc	dptr
      0000D9 08               [12]  255 	inc	r0
      0000DA E6               [12]  256 	mov	a,@r0
      0000DB 12r00r00         [24]  257 	lcall	__gptrput
      0000DE A3               [24]  258 	inc	dptr
      0000DF 08               [12]  259 	inc	r0
      0000E0 E6               [12]  260 	mov	a,@r0
      0000E1 12r00r00         [24]  261 	lcall	__gptrput
      0000E4 A3               [24]  262 	inc	dptr
      0000E5 08               [12]  263 	inc	r0
      0000E6 E6               [12]  264 	mov	a,@r0
      0000E7 12r00r00         [24]  265 	lcall	__gptrput
      0000EA                        266 00106$:
                                    267 ;	mbrtoc32.c:51: return(ret);
      0000EA 8B 82            [24]  268 	mov	dpl,r3
      0000EC 8C 83            [24]  269 	mov	dph,r4
      0000EE                        270 00107$:
                                    271 ;	mbrtoc32.c:52: }
      0000EE 85*00 81         [24]  272 	mov	sp,_bp
      0000F1 D0*00            [24]  273 	pop	_bp
      0000F3 22               [24]  274 	ret
                                    275 	.area CSEG    (CODE)
                                    276 	.area CONST   (CODE)
                                    277 	.area XINIT   (CODE)
                                    278 	.area CABS    (ABS,CODE)
