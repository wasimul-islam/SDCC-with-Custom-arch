                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _mulint
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __mulint
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_mulint'
                                     91 ;------------------------------------------------------------
                                     92 ;b                         Allocated to stack - _bp -4
                                     93 ;a                         Allocated to stack - _bp +1
                                     94 ;x                         Allocated to stack - _bp +3
                                     95 ;y                         Allocated to registers r5 r6 r7 
                                     96 ;t                         Allocated to stack - _bp +6
                                     97 ;------------------------------------------------------------
                                     98 ;	_mulint.c:232: _mulint (int a, int b) __SDCC_NONBANKED
                                     99 ;	-----------------------------------------
                                    100 ;	 function _mulint
                                    101 ;	-----------------------------------------
      000000                        102 __mulint:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 C0 82            [24]  113 	push	dpl
      000007 C0 83            [24]  114 	push	dph
      000009 E5 81            [12]  115 	mov	a,sp
      00000B 24 05            [12]  116 	add	a,#0x05
      00000D F5 81            [12]  117 	mov	sp,a
                                    118 ;	_mulint.c:244: x = (union uu *)&a;
      00000F AF*00            [24]  119 	mov	r7,_bp
      000011 0F               [12]  120 	inc	r7
      000012 E5*00            [12]  121 	mov	a,_bp
      000014 24 03            [12]  122 	add	a,#0x03
      000016 F8               [12]  123 	mov	r0,a
      000017 A6 07            [24]  124 	mov	@r0,ar7
      000019 08               [12]  125 	inc	r0
      00001A 76 00            [12]  126 	mov	@r0,#0x00
      00001C 08               [12]  127 	inc	r0
      00001D 76 40            [12]  128 	mov	@r0,#0x40
                                    129 ;	_mulint.c:245: y = (union uu *)&b;
      00001F E5*00            [12]  130 	mov	a,_bp
      000021 24 FC            [12]  131 	add	a,#0xfc
      000023 FD               [12]  132 	mov	r5,a
      000024 7E 00            [12]  133 	mov	r6,#0x00
      000026 7F 40            [12]  134 	mov	r7,#0x40
                                    135 ;	_mulint.c:249: t.t = (unsigned char)a * (unsigned char)b;
      000028 E5*00            [12]  136 	mov	a,_bp
      00002A 24 06            [12]  137 	add	a,#0x06
      00002C F9               [12]  138 	mov	r1,a
      00002D A8*00            [24]  139 	mov	r0,_bp
      00002F 08               [12]  140 	inc	r0
      000030 86 04            [24]  141 	mov	ar4,@r0
      000032 E5*00            [12]  142 	mov	a,_bp
      000034 24 FC            [12]  143 	add	a,#0xfc
      000036 F8               [12]  144 	mov	r0,a
      000037 86 03            [24]  145 	mov	ar3,@r0
      000039 8C F0            [24]  146 	mov	b,r4
      00003B EB               [12]  147 	mov	a,r3
      00003C A4               [48]  148 	mul	ab
      00003D F7               [12]  149 	mov	@r1,a
      00003E 09               [12]  150 	inc	r1
      00003F A7 F0            [24]  151 	mov	@r1,b
                                    152 ;	_mulint.c:250: t.s.hi += ((unsigned char)a * y->s.hi) + (x->s.hi * (unsigned char)b);
      000041 E5*00            [12]  153 	mov	a,_bp
      000043 24 06            [12]  154 	add	a,#0x06
      000045 04               [12]  155 	inc	a
      000046 F9               [12]  156 	mov	r1,a
      000047 87 04            [24]  157 	mov	ar4,@r1
      000049 A8*00            [24]  158 	mov	r0,_bp
      00004B 08               [12]  159 	inc	r0
      00004C 86 03            [24]  160 	mov	ar3,@r0
      00004E 74 01            [12]  161 	mov	a,#0x01
      000050 2D               [12]  162 	add	a,r5
      000051 FA               [12]  163 	mov	r2,a
      000052 E4               [12]  164 	clr	a
      000053 3E               [12]  165 	addc	a,r6
      000054 FE               [12]  166 	mov	r6,a
      000055 8A 82            [24]  167 	mov	dpl,r2
      000057 8E 83            [24]  168 	mov	dph,r6
      000059 8F F0            [24]  169 	mov	b,r7
      00005B 12r00r00         [24]  170 	lcall	__gptrget
      00005E 8B F0            [24]  171 	mov	b,r3
      000060 A4               [48]  172 	mul	ab
      000061 FB               [12]  173 	mov	r3,a
      000062 E5*00            [12]  174 	mov	a,_bp
      000064 24 03            [12]  175 	add	a,#0x03
      000066 F8               [12]  176 	mov	r0,a
      000067 74 01            [12]  177 	mov	a,#0x01
      000069 26               [12]  178 	add	a,@r0
      00006A FD               [12]  179 	mov	r5,a
      00006B E4               [12]  180 	clr	a
      00006C 08               [12]  181 	inc	r0
      00006D 36               [12]  182 	addc	a,@r0
      00006E FE               [12]  183 	mov	r6,a
      00006F 08               [12]  184 	inc	r0
      000070 86 07            [24]  185 	mov	ar7,@r0
      000072 8D 82            [24]  186 	mov	dpl,r5
      000074 8E 83            [24]  187 	mov	dph,r6
      000076 8F F0            [24]  188 	mov	b,r7
      000078 12r00r00         [24]  189 	lcall	__gptrget
      00007B FD               [12]  190 	mov	r5,a
      00007C E5*00            [12]  191 	mov	a,_bp
      00007E 24 FC            [12]  192 	add	a,#0xfc
      000080 F8               [12]  193 	mov	r0,a
      000081 86 07            [24]  194 	mov	ar7,@r0
      000083 8D F0            [24]  195 	mov	b,r5
      000085 EF               [12]  196 	mov	a,r7
      000086 A4               [48]  197 	mul	ab
      000087 2B               [12]  198 	add	a,r3
      000088 2C               [12]  199 	add	a,r4
      000089 F7               [12]  200 	mov	@r1,a
                                    201 ;	_mulint.c:252: return t.t;
      00008A E5*00            [12]  202 	mov	a,_bp
      00008C 24 06            [12]  203 	add	a,#0x06
      00008E F9               [12]  204 	mov	r1,a
      00008F 87 06            [24]  205 	mov	ar6,@r1
      000091 09               [12]  206 	inc	r1
      000092 87 07            [24]  207 	mov	ar7,@r1
      000094 8E 82            [24]  208 	mov	dpl,r6
      000096 8F 83            [24]  209 	mov	dph,r7
                                    210 ;	_mulint.c:253: }
      000098 85*00 81         [24]  211 	mov	sp,_bp
      00009B D0*00            [24]  212 	pop	_bp
      00009D 22               [24]  213 	ret
                                    214 	.area CSEG    (CODE)
                                    215 	.area CONST   (CODE)
                                    216 	.area XINIT   (CODE)
                                    217 	.area CABS    (ABS,CODE)
