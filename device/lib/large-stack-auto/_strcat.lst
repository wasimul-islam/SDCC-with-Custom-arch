                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strcat
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strcat
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'strcat'
                                     91 ;------------------------------------------------------------
                                     92 ;src                       Allocated to stack - _bp -5
                                     93 ;dst                       Allocated to stack - _bp +1
                                     94 ;cp                        Allocated to stack - _bp +4
                                     95 ;------------------------------------------------------------
                                     96 ;	_strcat.c:31: char * strcat ( char * dst, const char * src )
                                     97 ;	-----------------------------------------
                                     98 ;	 function strcat
                                     99 ;	-----------------------------------------
      000000                        100 _strcat:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 85 81*00         [24]  110 	mov	_bp,sp
      000005 C0 82            [24]  111 	push	dpl
      000007 C0 83            [24]  112 	push	dph
      000009 C0 F0            [24]  113 	push	b
      00000B 05 81            [12]  114 	inc	sp
      00000D 05 81            [12]  115 	inc	sp
      00000F 05 81            [12]  116 	inc	sp
                                    117 ;	_strcat.c:35: while( *cp )
      000011 A8*00            [24]  118 	mov	r0,_bp
      000013 08               [12]  119 	inc	r0
      000014 86 02            [24]  120 	mov	ar2,@r0
      000016 08               [12]  121 	inc	r0
      000017 86 03            [24]  122 	mov	ar3,@r0
      000019 08               [12]  123 	inc	r0
      00001A 86 04            [24]  124 	mov	ar4,@r0
      00001C                        125 00101$:
      00001C 8A 82            [24]  126 	mov	dpl,r2
      00001E 8B 83            [24]  127 	mov	dph,r3
      000020 8C F0            [24]  128 	mov	b,r4
      000022 12r00r00         [24]  129 	lcall	__gptrget
      000025 60 07            [24]  130 	jz	00111$
                                    131 ;	_strcat.c:36: cp++;                   /* find end of dst */
      000027 0A               [12]  132 	inc	r2
                                    133 ;	_strcat.c:38: while( *cp++ = *src++ ) ;       /* Copy src to end of dst */
      000028 BA 00 F1         [24]  134 	cjne	r2,#0x00,00101$
      00002B 0B               [12]  135 	inc	r3
      00002C 80 EE            [24]  136 	sjmp	00101$
      00002E                        137 00111$:
      00002E E5*00            [12]  138 	mov	a,_bp
      000030 24 FB            [12]  139 	add	a,#0xfb
      000032 F8               [12]  140 	mov	r0,a
      000033 86 05            [24]  141 	mov	ar5,@r0
      000035 08               [12]  142 	inc	r0
      000036 86 06            [24]  143 	mov	ar6,@r0
      000038 08               [12]  144 	inc	r0
      000039 86 07            [24]  145 	mov	ar7,@r0
      00003B E5*00            [12]  146 	mov	a,_bp
      00003D 24 04            [12]  147 	add	a,#0x04
      00003F F8               [12]  148 	mov	r0,a
      000040 A6 02            [24]  149 	mov	@r0,ar2
      000042 08               [12]  150 	inc	r0
      000043 A6 03            [24]  151 	mov	@r0,ar3
      000045 08               [12]  152 	inc	r0
      000046 A6 04            [24]  153 	mov	@r0,ar4
      000048                        154 00104$:
      000048 8D 82            [24]  155 	mov	dpl,r5
      00004A 8E 83            [24]  156 	mov	dph,r6
      00004C 8F F0            [24]  157 	mov	b,r7
      00004E 12r00r00         [24]  158 	lcall	__gptrget
      000051 FC               [12]  159 	mov	r4,a
      000052 A3               [24]  160 	inc	dptr
      000053 AD 82            [24]  161 	mov	r5,dpl
      000055 AE 83            [24]  162 	mov	r6,dph
      000057 E5*00            [12]  163 	mov	a,_bp
      000059 24 04            [12]  164 	add	a,#0x04
      00005B F8               [12]  165 	mov	r0,a
      00005C 86 82            [24]  166 	mov	dpl,@r0
      00005E 08               [12]  167 	inc	r0
      00005F 86 83            [24]  168 	mov	dph,@r0
      000061 08               [12]  169 	inc	r0
      000062 86 F0            [24]  170 	mov	b,@r0
      000064 EC               [12]  171 	mov	a,r4
      000065 12r00r00         [24]  172 	lcall	__gptrput
      000068 A3               [24]  173 	inc	dptr
      000069 18               [12]  174 	dec	r0
      00006A 18               [12]  175 	dec	r0
      00006B A6 82            [24]  176 	mov	@r0,dpl
      00006D 08               [12]  177 	inc	r0
      00006E A6 83            [24]  178 	mov	@r0,dph
      000070 EC               [12]  179 	mov	a,r4
      000071 70 D5            [24]  180 	jnz	00104$
                                    181 ;	_strcat.c:40: return( dst );                  /* return dst */
      000073 A8*00            [24]  182 	mov	r0,_bp
      000075 08               [12]  183 	inc	r0
      000076 86 82            [24]  184 	mov	dpl,@r0
      000078 08               [12]  185 	inc	r0
      000079 86 83            [24]  186 	mov	dph,@r0
      00007B 08               [12]  187 	inc	r0
      00007C 86 F0            [24]  188 	mov	b,@r0
                                    189 ;	_strcat.c:41: }
      00007E 85*00 81         [24]  190 	mov	sp,_bp
      000081 D0*00            [24]  191 	pop	_bp
      000083 22               [24]  192 	ret
                                    193 	.area CSEG    (CODE)
                                    194 	.area CONST   (CODE)
                                    195 	.area XINIT   (CODE)
                                    196 	.area CABS    (ABS,CODE)
