                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _divslong
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __divslong
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function '_divslong'
                                     91 ;------------------------------------------------------------
                                     92 ;y                         Allocated to stack - _bp -6
                                     93 ;x                         Allocated to registers r4 r5 r6 r7 
                                     94 ;r                         Allocated to stack - _bp +9
                                     95 ;sloc0                     Allocated to stack - _bp +1
                                     96 ;sloc1                     Allocated to stack - _bp +5
                                     97 ;------------------------------------------------------------
                                     98 ;	_divslong.c:265: _divslong (long x, long y) __SDCC_NONBANKED
                                     99 ;	-----------------------------------------
                                    100 ;	 function _divslong
                                    101 ;	-----------------------------------------
      000000                        102 __divslong:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 AC 82            [24]  113 	mov	r4,dpl
      000007 AD 83            [24]  114 	mov	r5,dph
      000009 AE F0            [24]  115 	mov	r6,b
      00000B FF               [12]  116 	mov	r7,a
      00000C E5 81            [12]  117 	mov	a,sp
      00000E 24 0C            [12]  118 	add	a,#0x0c
      000010 F5 81            [12]  119 	mov	sp,a
                                    120 ;	_divslong.c:269: r = (unsigned long)(x < 0 ? -x : x) / (unsigned long)(y < 0 ? -y : y);
      000012 EF               [12]  121 	mov	a,r7
      000013 33               [12]  122 	rlc	a
      000014 E4               [12]  123 	clr	a
      000015 33               [12]  124 	rlc	a
      000016 FB               [12]  125 	mov	r3,a
      000017 60 15            [24]  126 	jz	00106$
      000019 A8*00            [24]  127 	mov	r0,_bp
      00001B 08               [12]  128 	inc	r0
      00001C C3               [12]  129 	clr	c
      00001D E4               [12]  130 	clr	a
      00001E 9C               [12]  131 	subb	a,r4
      00001F F6               [12]  132 	mov	@r0,a
      000020 E4               [12]  133 	clr	a
      000021 9D               [12]  134 	subb	a,r5
      000022 08               [12]  135 	inc	r0
      000023 F6               [12]  136 	mov	@r0,a
      000024 E4               [12]  137 	clr	a
      000025 9E               [12]  138 	subb	a,r6
      000026 08               [12]  139 	inc	r0
      000027 F6               [12]  140 	mov	@r0,a
      000028 E4               [12]  141 	clr	a
      000029 9F               [12]  142 	subb	a,r7
      00002A 08               [12]  143 	inc	r0
      00002B F6               [12]  144 	mov	@r0,a
      00002C 80 0E            [24]  145 	sjmp	00107$
      00002E                        146 00106$:
      00002E A8*00            [24]  147 	mov	r0,_bp
      000030 08               [12]  148 	inc	r0
      000031 A6 04            [24]  149 	mov	@r0,ar4
      000033 08               [12]  150 	inc	r0
      000034 A6 05            [24]  151 	mov	@r0,ar5
      000036 08               [12]  152 	inc	r0
      000037 A6 06            [24]  153 	mov	@r0,ar6
      000039 08               [12]  154 	inc	r0
      00003A A6 07            [24]  155 	mov	@r0,ar7
      00003C                        156 00107$:
      00003C A8*00            [24]  157 	mov	r0,_bp
      00003E 08               [12]  158 	inc	r0
      00003F E5*00            [12]  159 	mov	a,_bp
      000041 24 05            [12]  160 	add	a,#0x05
      000043 F9               [12]  161 	mov	r1,a
      000044 E6               [12]  162 	mov	a,@r0
      000045 F7               [12]  163 	mov	@r1,a
      000046 08               [12]  164 	inc	r0
      000047 E6               [12]  165 	mov	a,@r0
      000048 09               [12]  166 	inc	r1
      000049 F7               [12]  167 	mov	@r1,a
      00004A 08               [12]  168 	inc	r0
      00004B E6               [12]  169 	mov	a,@r0
      00004C 09               [12]  170 	inc	r1
      00004D F7               [12]  171 	mov	@r1,a
      00004E 08               [12]  172 	inc	r0
      00004F E6               [12]  173 	mov	a,@r0
      000050 09               [12]  174 	inc	r1
      000051 F7               [12]  175 	mov	@r1,a
      000052 E5*00            [12]  176 	mov	a,_bp
      000054 24 FA            [12]  177 	add	a,#0xfa
      000056 F8               [12]  178 	mov	r0,a
      000057 08               [12]  179 	inc	r0
      000058 08               [12]  180 	inc	r0
      000059 08               [12]  181 	inc	r0
      00005A E6               [12]  182 	mov	a,@r0
      00005B 33               [12]  183 	rlc	a
      00005C E4               [12]  184 	clr	a
      00005D 33               [12]  185 	rlc	a
      00005E FA               [12]  186 	mov	r2,a
      00005F 60 17            [24]  187 	jz	00108$
      000061 E5*00            [12]  188 	mov	a,_bp
      000063 24 FA            [12]  189 	add	a,#0xfa
      000065 F8               [12]  190 	mov	r0,a
      000066 C3               [12]  191 	clr	c
      000067 E4               [12]  192 	clr	a
      000068 96               [12]  193 	subb	a,@r0
      000069 FC               [12]  194 	mov	r4,a
      00006A 08               [12]  195 	inc	r0
      00006B E4               [12]  196 	clr	a
      00006C 96               [12]  197 	subb	a,@r0
      00006D FD               [12]  198 	mov	r5,a
      00006E 08               [12]  199 	inc	r0
      00006F E4               [12]  200 	clr	a
      000070 96               [12]  201 	subb	a,@r0
      000071 FE               [12]  202 	mov	r6,a
      000072 08               [12]  203 	inc	r0
      000073 E4               [12]  204 	clr	a
      000074 96               [12]  205 	subb	a,@r0
      000075 FF               [12]  206 	mov	r7,a
      000076 80 10            [24]  207 	sjmp	00109$
      000078                        208 00108$:
      000078 E5*00            [12]  209 	mov	a,_bp
      00007A 24 FA            [12]  210 	add	a,#0xfa
      00007C F8               [12]  211 	mov	r0,a
      00007D 86 04            [24]  212 	mov	ar4,@r0
      00007F 08               [12]  213 	inc	r0
      000080 86 05            [24]  214 	mov	ar5,@r0
      000082 08               [12]  215 	inc	r0
      000083 86 06            [24]  216 	mov	ar6,@r0
      000085 08               [12]  217 	inc	r0
      000086 86 07            [24]  218 	mov	ar7,@r0
      000088                        219 00109$:
      000088 C0 03            [24]  220 	push	ar3
      00008A C0 02            [24]  221 	push	ar2
      00008C C0 04            [24]  222 	push	ar4
      00008E C0 05            [24]  223 	push	ar5
      000090 C0 06            [24]  224 	push	ar6
      000092 C0 07            [24]  225 	push	ar7
      000094 E5*00            [12]  226 	mov	a,_bp
      000096 24 05            [12]  227 	add	a,#0x05
      000098 F8               [12]  228 	mov	r0,a
      000099 86 82            [24]  229 	mov	dpl,@r0
      00009B 08               [12]  230 	inc	r0
      00009C 86 83            [24]  231 	mov	dph,@r0
      00009E 08               [12]  232 	inc	r0
      00009F 86 F0            [24]  233 	mov	b,@r0
      0000A1 08               [12]  234 	inc	r0
      0000A2 E6               [12]  235 	mov	a,@r0
      0000A3 12r00r00         [24]  236 	lcall	__divulong
      0000A6 AC 82            [24]  237 	mov	r4,dpl
      0000A8 AD 83            [24]  238 	mov	r5,dph
      0000AA AE F0            [24]  239 	mov	r6,b
      0000AC FF               [12]  240 	mov	r7,a
      0000AD E5 81            [12]  241 	mov	a,sp
      0000AF 24 FC            [12]  242 	add	a,#0xfc
      0000B1 F5 81            [12]  243 	mov	sp,a
      0000B3 D0 02            [24]  244 	pop	ar2
      0000B5 D0 03            [24]  245 	pop	ar3
      0000B7 E5*00            [12]  246 	mov	a,_bp
      0000B9 24 09            [12]  247 	add	a,#0x09
      0000BB F8               [12]  248 	mov	r0,a
      0000BC A6 04            [24]  249 	mov	@r0,ar4
      0000BE 08               [12]  250 	inc	r0
      0000BF A6 05            [24]  251 	mov	@r0,ar5
      0000C1 08               [12]  252 	inc	r0
      0000C2 A6 06            [24]  253 	mov	@r0,ar6
      0000C4 08               [12]  254 	inc	r0
      0000C5 A6 07            [24]  255 	mov	@r0,ar7
                                    256 ;	_divslong.c:270: if ((x < 0) ^ (y < 0))
      0000C7 EA               [12]  257 	mov	a,r2
      0000C8 6B               [12]  258 	xrl	a,r3
      0000C9 60 1D            [24]  259 	jz	00102$
                                    260 ;	_divslong.c:271: return -r;
      0000CB E5*00            [12]  261 	mov	a,_bp
      0000CD 24 09            [12]  262 	add	a,#0x09
      0000CF F8               [12]  263 	mov	r0,a
      0000D0 C3               [12]  264 	clr	c
      0000D1 E4               [12]  265 	clr	a
      0000D2 96               [12]  266 	subb	a,@r0
      0000D3 FA               [12]  267 	mov	r2,a
      0000D4 08               [12]  268 	inc	r0
      0000D5 E4               [12]  269 	clr	a
      0000D6 96               [12]  270 	subb	a,@r0
      0000D7 FB               [12]  271 	mov	r3,a
      0000D8 08               [12]  272 	inc	r0
      0000D9 E4               [12]  273 	clr	a
      0000DA 96               [12]  274 	subb	a,@r0
      0000DB FE               [12]  275 	mov	r6,a
      0000DC 08               [12]  276 	inc	r0
      0000DD E4               [12]  277 	clr	a
      0000DE 96               [12]  278 	subb	a,@r0
      0000DF FF               [12]  279 	mov	r7,a
      0000E0 8A 82            [24]  280 	mov	dpl,r2
      0000E2 8B 83            [24]  281 	mov	dph,r3
      0000E4 8E F0            [24]  282 	mov	b,r6
      0000E6 80 0F            [24]  283 	sjmp	00104$
      0000E8                        284 00102$:
                                    285 ;	_divslong.c:273: return r;
      0000E8 E5*00            [12]  286 	mov	a,_bp
      0000EA 24 09            [12]  287 	add	a,#0x09
      0000EC F8               [12]  288 	mov	r0,a
      0000ED 86 82            [24]  289 	mov	dpl,@r0
      0000EF 08               [12]  290 	inc	r0
      0000F0 86 83            [24]  291 	mov	dph,@r0
      0000F2 08               [12]  292 	inc	r0
      0000F3 86 F0            [24]  293 	mov	b,@r0
      0000F5 08               [12]  294 	inc	r0
      0000F6 E6               [12]  295 	mov	a,@r0
      0000F7                        296 00104$:
                                    297 ;	_divslong.c:274: }
      0000F7 85*00 81         [24]  298 	mov	sp,_bp
      0000FA D0*00            [24]  299 	pop	_bp
      0000FC 22               [24]  300 	ret
                                    301 	.area CSEG    (CODE)
                                    302 	.area CONST   (CODE)
                                    303 	.area XINIT   (CODE)
                                    304 	.area CABS    (ABS,CODE)
