                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module strdup
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _malloc
                                     12 	.globl _strlen
                                     13 	.globl _strcpy
                                     14 	.globl _strdup
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; uninitialized external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'strdup'
                                     94 ;------------------------------------------------------------
                                     95 ;s                         Allocated to registers r5 r6 r7 
                                     96 ;r                         Allocated to registers r3 r2 r4 
                                     97 ;------------------------------------------------------------
                                     98 ;	strdup.c:33: char *strdup (const char *s)
                                     99 ;	-----------------------------------------
                                    100 ;	 function strdup
                                    101 ;	-----------------------------------------
      000000                        102 _strdup:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
                                    111 ;	strdup.c:35: char *r = malloc(strlen(s) + 1);
      000000 AD 82            [24]  112 	mov	r5,dpl
      000002 AE 83            [24]  113 	mov	r6,dph
      000004 AF F0            [24]  114 	mov	r7,b
      000006 C0 07            [24]  115 	push	ar7
      000008 C0 06            [24]  116 	push	ar6
      00000A C0 05            [24]  117 	push	ar5
      00000C 12r00r00         [24]  118 	lcall	_strlen
      00000F E5 82            [12]  119 	mov	a,dpl
      000011 85 83 F0         [24]  120 	mov	b,dph
      000014 24 01            [12]  121 	add	a,#0x01
      000016 FB               [12]  122 	mov	r3,a
      000017 E4               [12]  123 	clr	a
      000018 35 F0            [12]  124 	addc	a,b
      00001A FC               [12]  125 	mov	r4,a
      00001B 8B 82            [24]  126 	mov	dpl,r3
      00001D 8C 83            [24]  127 	mov	dph,r4
      00001F 12r00r00         [24]  128 	lcall	_malloc
      000022 AB 82            [24]  129 	mov	r3,dpl
      000024 AC 83            [24]  130 	mov	r4,dph
      000026 D0 05            [24]  131 	pop	ar5
      000028 D0 06            [24]  132 	pop	ar6
      00002A D0 07            [24]  133 	pop	ar7
      00002C 8C 02            [24]  134 	mov	ar2,r4
      00002E 7C 00            [12]  135 	mov	r4,#0x00
                                    136 ;	strdup.c:36: if (r)
      000030 EB               [12]  137 	mov	a,r3
      000031 4A               [12]  138 	orl	a,r2
      000032 60 21            [24]  139 	jz	00102$
                                    140 ;	strdup.c:37: strcpy(r, s);
      000034 C0 04            [24]  141 	push	ar4
      000036 C0 03            [24]  142 	push	ar3
      000038 C0 02            [24]  143 	push	ar2
      00003A C0 05            [24]  144 	push	ar5
      00003C C0 06            [24]  145 	push	ar6
      00003E C0 07            [24]  146 	push	ar7
      000040 8B 82            [24]  147 	mov	dpl,r3
      000042 8A 83            [24]  148 	mov	dph,r2
      000044 8C F0            [24]  149 	mov	b,r4
      000046 12r00r00         [24]  150 	lcall	_strcpy
      000049 15 81            [12]  151 	dec	sp
      00004B 15 81            [12]  152 	dec	sp
      00004D 15 81            [12]  153 	dec	sp
      00004F D0 02            [24]  154 	pop	ar2
      000051 D0 03            [24]  155 	pop	ar3
      000053 D0 04            [24]  156 	pop	ar4
      000055                        157 00102$:
                                    158 ;	strdup.c:38: return (r);
      000055 8B 82            [24]  159 	mov	dpl,r3
      000057 8A 83            [24]  160 	mov	dph,r2
      000059 8C F0            [24]  161 	mov	b,r4
                                    162 ;	strdup.c:39: }
      00005B 22               [24]  163 	ret
                                    164 	.area CSEG    (CODE)
                                    165 	.area CONST   (CODE)
                                    166 	.area XINIT   (CODE)
                                    167 	.area CABS    (ABS,CODE)
