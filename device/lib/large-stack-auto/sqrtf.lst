                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module sqrtf
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ldexpf
                                     12 	.globl _frexpf
                                     13 	.globl _sqrtf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; uninitialized external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; initialized external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'sqrtf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +1
                                     95 ;f                         Allocated to stack - _bp +9
                                     96 ;y                         Allocated to registers r4 r5 r6 r7 
                                     97 ;n                         Allocated to stack - _bp +13
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;------------------------------------------------------------
                                    100 ;	sqrtf.c:37: float sqrtf(float x) _FLOAT_FUNC_REENTRANT
                                    101 ;	-----------------------------------------
                                    102 ;	 function sqrtf
                                    103 ;	-----------------------------------------
      000000                        104 _sqrtf:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C0 82            [24]  115 	push	dpl
      000007 C0 83            [24]  116 	push	dph
      000009 C0 F0            [24]  117 	push	b
      00000B C0 E0            [24]  118 	push	acc
      00000D E5 81            [12]  119 	mov	a,sp
      00000F 24 0A            [12]  120 	add	a,#0x0a
      000011 F5 81            [12]  121 	mov	sp,a
                                    122 ;	sqrtf.c:42: if (x==0.0) return x;
      000013 A8*00            [24]  123 	mov	r0,_bp
      000015 08               [12]  124 	inc	r0
      000016 86 F0            [24]  125 	mov	b,@r0
      000018 08               [12]  126 	inc	r0
      000019 E6               [12]  127 	mov	a,@r0
      00001A 42 F0            [12]  128 	orl	b,a
      00001C 08               [12]  129 	inc	r0
      00001D E6               [12]  130 	mov	a,@r0
      00001E 42 F0            [12]  131 	orl	b,a
      000020 08               [12]  132 	inc	r0
      000021 E6               [12]  133 	mov	a,@r0
      000022 54 7F            [12]  134 	anl	a,#0x7F
      000024 45 F0            [12]  135 	orl	a,b
      000026 70 10            [24]  136 	jnz	00107$
      000028 A8*00            [24]  137 	mov	r0,_bp
      00002A 08               [12]  138 	inc	r0
      00002B 86 82            [24]  139 	mov	dpl,@r0
      00002D 08               [12]  140 	inc	r0
      00002E 86 83            [24]  141 	mov	dph,@r0
      000030 08               [12]  142 	inc	r0
      000031 86 F0            [24]  143 	mov	b,@r0
      000033 08               [12]  144 	inc	r0
      000034 E6               [12]  145 	mov	a,@r0
      000035 02r02r94         [24]  146 	ljmp	00111$
      000038                        147 00107$:
                                    148 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
      000038 E4               [12]  149 	clr	a
      000039 C0 E0            [24]  150 	push	acc
      00003B C0 E0            [24]  151 	push	acc
      00003D 74 80            [12]  152 	mov	a,#0x80
      00003F C0 E0            [24]  153 	push	acc
      000041 74 3F            [12]  154 	mov	a,#0x3f
      000043 C0 E0            [24]  155 	push	acc
      000045 A8*00            [24]  156 	mov	r0,_bp
      000047 08               [12]  157 	inc	r0
      000048 86 82            [24]  158 	mov	dpl,@r0
      00004A 08               [12]  159 	inc	r0
      00004B 86 83            [24]  160 	mov	dph,@r0
      00004D 08               [12]  161 	inc	r0
      00004E 86 F0            [24]  162 	mov	b,@r0
      000050 08               [12]  163 	inc	r0
      000051 E6               [12]  164 	mov	a,@r0
      000052 12r00r00         [24]  165 	lcall	___fseq
      000055 AB 82            [24]  166 	mov	r3,dpl
      000057 E5 81            [12]  167 	mov	a,sp
      000059 24 FC            [12]  168 	add	a,#0xfc
      00005B F5 81            [12]  169 	mov	sp,a
      00005D EB               [12]  170 	mov	a,r3
      00005E 60 0B            [24]  171 	jz	00104$
      000060 90 00 00         [24]  172 	mov	dptr,#0x0000
      000063 75 F0 80         [24]  173 	mov	b,#0x80
      000066 74 3F            [12]  174 	mov	a,#0x3f
      000068 02r02r94         [24]  175 	ljmp	00111$
      00006B                        176 00104$:
                                    177 ;	sqrtf.c:44: else if (x<0.0)
      00006B E4               [12]  178 	clr	a
      00006C C0 E0            [24]  179 	push	acc
      00006E C0 E0            [24]  180 	push	acc
      000070 C0 E0            [24]  181 	push	acc
      000072 C0 E0            [24]  182 	push	acc
      000074 A8*00            [24]  183 	mov	r0,_bp
      000076 08               [12]  184 	inc	r0
      000077 86 82            [24]  185 	mov	dpl,@r0
      000079 08               [12]  186 	inc	r0
      00007A 86 83            [24]  187 	mov	dph,@r0
      00007C 08               [12]  188 	inc	r0
      00007D 86 F0            [24]  189 	mov	b,@r0
      00007F 08               [12]  190 	inc	r0
      000080 E6               [12]  191 	mov	a,@r0
      000081 12r00r00         [24]  192 	lcall	___fslt
      000084 AB 82            [24]  193 	mov	r3,dpl
      000086 E5 81            [12]  194 	mov	a,sp
      000088 24 FC            [12]  195 	add	a,#0xfc
      00008A F5 81            [12]  196 	mov	sp,a
      00008C EB               [12]  197 	mov	a,r3
      00008D 60 11            [24]  198 	jz	00108$
                                    199 ;	sqrtf.c:46: errno=EDOM;
      00008F 90r00r00         [24]  200 	mov	dptr,#_errno
      000092 74 21            [12]  201 	mov	a,#0x21
      000094 F0               [24]  202 	movx	@dptr,a
      000095 E4               [12]  203 	clr	a
      000096 A3               [24]  204 	inc	dptr
      000097 F0               [24]  205 	movx	@dptr,a
                                    206 ;	sqrtf.c:47: return 0.0;
      000098 90 00 00         [24]  207 	mov	dptr,#0x0000
      00009B F5 F0            [12]  208 	mov	b,a
      00009D 02r02r94         [24]  209 	ljmp	00111$
      0000A0                        210 00108$:
                                    211 ;	sqrtf.c:49: f=frexpf(x, &n);
      0000A0 E5*00            [12]  212 	mov	a,_bp
      0000A2 24 0D            [12]  213 	add	a,#0x0d
      0000A4 FA               [12]  214 	mov	r2,a
      0000A5 7B 00            [12]  215 	mov	r3,#0x00
      0000A7 7F 40            [12]  216 	mov	r7,#0x40
      0000A9 C0 02            [24]  217 	push	ar2
      0000AB C0 03            [24]  218 	push	ar3
      0000AD C0 07            [24]  219 	push	ar7
      0000AF A8*00            [24]  220 	mov	r0,_bp
      0000B1 08               [12]  221 	inc	r0
      0000B2 86 82            [24]  222 	mov	dpl,@r0
      0000B4 08               [12]  223 	inc	r0
      0000B5 86 83            [24]  224 	mov	dph,@r0
      0000B7 08               [12]  225 	inc	r0
      0000B8 86 F0            [24]  226 	mov	b,@r0
      0000BA 08               [12]  227 	inc	r0
      0000BB E6               [12]  228 	mov	a,@r0
      0000BC 12r00r00         [24]  229 	lcall	_frexpf
      0000BF AC 82            [24]  230 	mov	r4,dpl
      0000C1 AD 83            [24]  231 	mov	r5,dph
      0000C3 AE F0            [24]  232 	mov	r6,b
      0000C5 FF               [12]  233 	mov	r7,a
      0000C6 15 81            [12]  234 	dec	sp
      0000C8 15 81            [12]  235 	dec	sp
      0000CA 15 81            [12]  236 	dec	sp
      0000CC E5*00            [12]  237 	mov	a,_bp
      0000CE 24 09            [12]  238 	add	a,#0x09
      0000D0 F8               [12]  239 	mov	r0,a
      0000D1 A6 04            [24]  240 	mov	@r0,ar4
      0000D3 08               [12]  241 	inc	r0
      0000D4 A6 05            [24]  242 	mov	@r0,ar5
      0000D6 08               [12]  243 	inc	r0
      0000D7 A6 06            [24]  244 	mov	@r0,ar6
      0000D9 08               [12]  245 	inc	r0
      0000DA A6 07            [24]  246 	mov	@r0,ar7
                                    247 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
      0000DC E5*00            [12]  248 	mov	a,_bp
      0000DE 24 09            [12]  249 	add	a,#0x09
      0000E0 F8               [12]  250 	mov	r0,a
      0000E1 E6               [12]  251 	mov	a,@r0
      0000E2 C0 E0            [24]  252 	push	acc
      0000E4 08               [12]  253 	inc	r0
      0000E5 E6               [12]  254 	mov	a,@r0
      0000E6 C0 E0            [24]  255 	push	acc
      0000E8 08               [12]  256 	inc	r0
      0000E9 E6               [12]  257 	mov	a,@r0
      0000EA C0 E0            [24]  258 	push	acc
      0000EC 08               [12]  259 	inc	r0
      0000ED E6               [12]  260 	mov	a,@r0
      0000EE C0 E0            [24]  261 	push	acc
      0000F0 90 14 BA         [24]  262 	mov	dptr,#0x14ba
      0000F3 75 F0 17         [24]  263 	mov	b,#0x17
      0000F6 74 3F            [12]  264 	mov	a,#0x3f
      0000F8 12r00r00         [24]  265 	lcall	___fsmul
      0000FB AA 82            [24]  266 	mov	r2,dpl
      0000FD AB 83            [24]  267 	mov	r3,dph
      0000FF AE F0            [24]  268 	mov	r6,b
      000101 FF               [12]  269 	mov	r7,a
      000102 E5 81            [12]  270 	mov	a,sp
      000104 24 FC            [12]  271 	add	a,#0xfc
      000106 F5 81            [12]  272 	mov	sp,a
      000108 74 A8            [12]  273 	mov	a,#0xa8
      00010A C0 E0            [24]  274 	push	acc
      00010C 04               [12]  275 	inc	a
      00010D C0 E0            [24]  276 	push	acc
      00010F 74 D5            [12]  277 	mov	a,#0xd5
      000111 C0 E0            [24]  278 	push	acc
      000113 74 3E            [12]  279 	mov	a,#0x3e
      000115 C0 E0            [24]  280 	push	acc
      000117 8A 82            [24]  281 	mov	dpl,r2
      000119 8B 83            [24]  282 	mov	dph,r3
      00011B 8E F0            [24]  283 	mov	b,r6
      00011D EF               [12]  284 	mov	a,r7
      00011E 12r00r00         [24]  285 	lcall	___fsadd
      000121 C8               [12]  286 	xch	a,r0
      000122 E5*00            [12]  287 	mov	a,_bp
      000124 24 05            [12]  288 	add	a,#0x05
      000126 C8               [12]  289 	xch	a,r0
      000127 A6 82            [24]  290 	mov	@r0,dpl
      000129 08               [12]  291 	inc	r0
      00012A A6 83            [24]  292 	mov	@r0,dph
      00012C 08               [12]  293 	inc	r0
      00012D A6 F0            [24]  294 	mov	@r0,b
      00012F 08               [12]  295 	inc	r0
      000130 F6               [12]  296 	mov	@r0,a
      000131 E5 81            [12]  297 	mov	a,sp
      000133 24 FC            [12]  298 	add	a,#0xfc
      000135 F5 81            [12]  299 	mov	sp,a
                                    300 ;	sqrtf.c:52: y+=f/y;
      000137 E5*00            [12]  301 	mov	a,_bp
      000139 24 05            [12]  302 	add	a,#0x05
      00013B F8               [12]  303 	mov	r0,a
      00013C E6               [12]  304 	mov	a,@r0
      00013D C0 E0            [24]  305 	push	acc
      00013F 08               [12]  306 	inc	r0
      000140 E6               [12]  307 	mov	a,@r0
      000141 C0 E0            [24]  308 	push	acc
      000143 08               [12]  309 	inc	r0
      000144 E6               [12]  310 	mov	a,@r0
      000145 C0 E0            [24]  311 	push	acc
      000147 08               [12]  312 	inc	r0
      000148 E6               [12]  313 	mov	a,@r0
      000149 C0 E0            [24]  314 	push	acc
      00014B E5*00            [12]  315 	mov	a,_bp
      00014D 24 09            [12]  316 	add	a,#0x09
      00014F F8               [12]  317 	mov	r0,a
      000150 86 82            [24]  318 	mov	dpl,@r0
      000152 08               [12]  319 	inc	r0
      000153 86 83            [24]  320 	mov	dph,@r0
      000155 08               [12]  321 	inc	r0
      000156 86 F0            [24]  322 	mov	b,@r0
      000158 08               [12]  323 	inc	r0
      000159 E6               [12]  324 	mov	a,@r0
      00015A 12r00r00         [24]  325 	lcall	___fsdiv
      00015D AA 82            [24]  326 	mov	r2,dpl
      00015F AB 83            [24]  327 	mov	r3,dph
      000161 AE F0            [24]  328 	mov	r6,b
      000163 FF               [12]  329 	mov	r7,a
      000164 E5 81            [12]  330 	mov	a,sp
      000166 24 FC            [12]  331 	add	a,#0xfc
      000168 F5 81            [12]  332 	mov	sp,a
      00016A C0 02            [24]  333 	push	ar2
      00016C C0 03            [24]  334 	push	ar3
      00016E C0 06            [24]  335 	push	ar6
      000170 C0 07            [24]  336 	push	ar7
      000172 E5*00            [12]  337 	mov	a,_bp
      000174 24 05            [12]  338 	add	a,#0x05
      000176 F8               [12]  339 	mov	r0,a
      000177 86 82            [24]  340 	mov	dpl,@r0
      000179 08               [12]  341 	inc	r0
      00017A 86 83            [24]  342 	mov	dph,@r0
      00017C 08               [12]  343 	inc	r0
      00017D 86 F0            [24]  344 	mov	b,@r0
      00017F 08               [12]  345 	inc	r0
      000180 E6               [12]  346 	mov	a,@r0
      000181 12r00r00         [24]  347 	lcall	___fsadd
      000184 AC 82            [24]  348 	mov	r4,dpl
      000186 AD 83            [24]  349 	mov	r5,dph
      000188 AE F0            [24]  350 	mov	r6,b
      00018A FF               [12]  351 	mov	r7,a
      00018B E5 81            [12]  352 	mov	a,sp
      00018D 24 FC            [12]  353 	add	a,#0xfc
      00018F F5 81            [12]  354 	mov	sp,a
                                    355 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
      000191 C0 07            [24]  356 	push	ar7
      000193 C0 06            [24]  357 	push	ar6
      000195 C0 05            [24]  358 	push	ar5
      000197 C0 04            [24]  359 	push	ar4
      000199 74 FE            [12]  360 	mov	a,#0xfe
      00019B C0 E0            [24]  361 	push	acc
      00019D 04               [12]  362 	inc	a
      00019E C0 E0            [24]  363 	push	acc
      0001A0 8C 82            [24]  364 	mov	dpl,r4
      0001A2 8D 83            [24]  365 	mov	dph,r5
      0001A4 8E F0            [24]  366 	mov	b,r6
      0001A6 EF               [12]  367 	mov	a,r7
      0001A7 12r00r00         [24]  368 	lcall	_ldexpf
      0001AA C8               [12]  369 	xch	a,r0
      0001AB E5*00            [12]  370 	mov	a,_bp
      0001AD 24 05            [12]  371 	add	a,#0x05
      0001AF C8               [12]  372 	xch	a,r0
      0001B0 A6 82            [24]  373 	mov	@r0,dpl
      0001B2 08               [12]  374 	inc	r0
      0001B3 A6 83            [24]  375 	mov	@r0,dph
      0001B5 08               [12]  376 	inc	r0
      0001B6 A6 F0            [24]  377 	mov	@r0,b
      0001B8 08               [12]  378 	inc	r0
      0001B9 F6               [12]  379 	mov	@r0,a
      0001BA 15 81            [12]  380 	dec	sp
      0001BC 15 81            [12]  381 	dec	sp
      0001BE D0 04            [24]  382 	pop	ar4
      0001C0 D0 05            [24]  383 	pop	ar5
      0001C2 D0 06            [24]  384 	pop	ar6
      0001C4 D0 07            [24]  385 	pop	ar7
      0001C6 C0 04            [24]  386 	push	ar4
      0001C8 C0 05            [24]  387 	push	ar5
      0001CA C0 06            [24]  388 	push	ar6
      0001CC C0 07            [24]  389 	push	ar7
      0001CE E5*00            [12]  390 	mov	a,_bp
      0001D0 24 09            [12]  391 	add	a,#0x09
      0001D2 F8               [12]  392 	mov	r0,a
      0001D3 86 82            [24]  393 	mov	dpl,@r0
      0001D5 08               [12]  394 	inc	r0
      0001D6 86 83            [24]  395 	mov	dph,@r0
      0001D8 08               [12]  396 	inc	r0
      0001D9 86 F0            [24]  397 	mov	b,@r0
      0001DB 08               [12]  398 	inc	r0
      0001DC E6               [12]  399 	mov	a,@r0
      0001DD 12r00r00         [24]  400 	lcall	___fsdiv
      0001E0 AC 82            [24]  401 	mov	r4,dpl
      0001E2 AD 83            [24]  402 	mov	r5,dph
      0001E4 AE F0            [24]  403 	mov	r6,b
      0001E6 FF               [12]  404 	mov	r7,a
      0001E7 E5 81            [12]  405 	mov	a,sp
      0001E9 24 FC            [12]  406 	add	a,#0xfc
      0001EB F5 81            [12]  407 	mov	sp,a
      0001ED C0 04            [24]  408 	push	ar4
      0001EF C0 05            [24]  409 	push	ar5
      0001F1 C0 06            [24]  410 	push	ar6
      0001F3 C0 07            [24]  411 	push	ar7
      0001F5 E5*00            [12]  412 	mov	a,_bp
      0001F7 24 05            [12]  413 	add	a,#0x05
      0001F9 F8               [12]  414 	mov	r0,a
      0001FA 86 82            [24]  415 	mov	dpl,@r0
      0001FC 08               [12]  416 	inc	r0
      0001FD 86 83            [24]  417 	mov	dph,@r0
      0001FF 08               [12]  418 	inc	r0
      000200 86 F0            [24]  419 	mov	b,@r0
      000202 08               [12]  420 	inc	r0
      000203 E6               [12]  421 	mov	a,@r0
      000204 12r00r00         [24]  422 	lcall	___fsadd
      000207 AC 82            [24]  423 	mov	r4,dpl
      000209 AD 83            [24]  424 	mov	r5,dph
      00020B AE F0            [24]  425 	mov	r6,b
      00020D FF               [12]  426 	mov	r7,a
      00020E E5 81            [12]  427 	mov	a,sp
      000210 24 FC            [12]  428 	add	a,#0xfc
      000212 F5 81            [12]  429 	mov	sp,a
                                    430 ;	sqrtf.c:55: if (n&1)
      000214 E5*00            [12]  431 	mov	a,_bp
      000216 24 0D            [12]  432 	add	a,#0x0d
      000218 F8               [12]  433 	mov	r0,a
      000219 E6               [12]  434 	mov	a,@r0
      00021A 30 E0 2B         [24]  435 	jnb	acc.0,00110$
                                    436 ;	sqrtf.c:57: y*=0.7071067812;
      00021D C0 04            [24]  437 	push	ar4
      00021F C0 05            [24]  438 	push	ar5
      000221 C0 06            [24]  439 	push	ar6
      000223 C0 07            [24]  440 	push	ar7
      000225 90 04 F3         [24]  441 	mov	dptr,#0x04f3
      000228 75 F0 35         [24]  442 	mov	b,#0x35
      00022B 74 3F            [12]  443 	mov	a,#0x3f
      00022D 12r00r00         [24]  444 	lcall	___fsmul
      000230 AC 82            [24]  445 	mov	r4,dpl
      000232 AD 83            [24]  446 	mov	r5,dph
      000234 AE F0            [24]  447 	mov	r6,b
      000236 FF               [12]  448 	mov	r7,a
      000237 E5 81            [12]  449 	mov	a,sp
      000239 24 FC            [12]  450 	add	a,#0xfc
      00023B F5 81            [12]  451 	mov	sp,a
                                    452 ;	sqrtf.c:58: ++n;
      00023D E5*00            [12]  453 	mov	a,_bp
      00023F 24 0D            [12]  454 	add	a,#0x0d
      000241 F8               [12]  455 	mov	r0,a
      000242 06               [12]  456 	inc	@r0
      000243 B6 00 02         [24]  457 	cjne	@r0,#0x00,00137$
      000246 08               [12]  458 	inc	r0
      000247 06               [12]  459 	inc	@r0
      000248                        460 00137$:
      000248                        461 00110$:
                                    462 ;	sqrtf.c:60: return ldexpf(y, n/2);
      000248 C0 07            [24]  463 	push	ar7
      00024A C0 06            [24]  464 	push	ar6
      00024C C0 05            [24]  465 	push	ar5
      00024E C0 04            [24]  466 	push	ar4
      000250 74 02            [12]  467 	mov	a,#0x02
      000252 C0 E0            [24]  468 	push	acc
      000254 E4               [12]  469 	clr	a
      000255 C0 E0            [24]  470 	push	acc
      000257 E5*00            [12]  471 	mov	a,_bp
      000259 24 0D            [12]  472 	add	a,#0x0d
      00025B F8               [12]  473 	mov	r0,a
      00025C 86 82            [24]  474 	mov	dpl,@r0
      00025E 08               [12]  475 	inc	r0
      00025F 86 83            [24]  476 	mov	dph,@r0
      000261 12r00r00         [24]  477 	lcall	__divsint
      000264 AA 82            [24]  478 	mov	r2,dpl
      000266 AB 83            [24]  479 	mov	r3,dph
      000268 15 81            [12]  480 	dec	sp
      00026A 15 81            [12]  481 	dec	sp
      00026C D0 04            [24]  482 	pop	ar4
      00026E D0 05            [24]  483 	pop	ar5
      000270 D0 06            [24]  484 	pop	ar6
      000272 D0 07            [24]  485 	pop	ar7
      000274 C0 02            [24]  486 	push	ar2
      000276 C0 03            [24]  487 	push	ar3
      000278 8C 82            [24]  488 	mov	dpl,r4
      00027A 8D 83            [24]  489 	mov	dph,r5
      00027C 8E F0            [24]  490 	mov	b,r6
      00027E EF               [12]  491 	mov	a,r7
      00027F 12r00r00         [24]  492 	lcall	_ldexpf
      000282 AC 82            [24]  493 	mov	r4,dpl
      000284 AD 83            [24]  494 	mov	r5,dph
      000286 AE F0            [24]  495 	mov	r6,b
      000288 FF               [12]  496 	mov	r7,a
      000289 15 81            [12]  497 	dec	sp
      00028B 15 81            [12]  498 	dec	sp
      00028D 8C 82            [24]  499 	mov	dpl,r4
      00028F 8D 83            [24]  500 	mov	dph,r5
      000291 8E F0            [24]  501 	mov	b,r6
      000293 EF               [12]  502 	mov	a,r7
      000294                        503 00111$:
                                    504 ;	sqrtf.c:61: }
      000294 85*00 81         [24]  505 	mov	sp,_bp
      000297 D0*00            [24]  506 	pop	_bp
      000299 22               [24]  507 	ret
                                    508 	.area CSEG    (CODE)
                                    509 	.area CONST   (CODE)
                                    510 	.area XINIT   (CODE)
                                    511 	.area CABS    (ABS,CODE)
