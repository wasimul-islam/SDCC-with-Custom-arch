                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module atan2f
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _fabsf
                                     12 	.globl _atanf
                                     13 	.globl _atan2f
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; overlayable bit register bank
                                     31 ;--------------------------------------------------------
                                     32 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         33 bits:
      000000                         34 	.ds 1
                           008000    35 	b0 = bits[0]
                           008100    36 	b1 = bits[1]
                           008200    37 	b2 = bits[2]
                           008300    38 	b3 = bits[3]
                           008400    39 	b4 = bits[4]
                           008500    40 	b5 = bits[5]
                           008600    41 	b6 = bits[6]
                           008700    42 	b7 = bits[7]
                                     43 ;--------------------------------------------------------
                                     44 ; internal ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DSEG    (DATA)
                                     47 ;--------------------------------------------------------
                                     48 ; overlayable items in internal ram
                                     49 ;--------------------------------------------------------
                                     50 ;--------------------------------------------------------
                                     51 ; indirectly addressable internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area ISEG    (DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; absolute internal ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area IABS    (ABS,DATA)
                                     58 	.area IABS    (ABS,DATA)
                                     59 ;--------------------------------------------------------
                                     60 ; bit data
                                     61 ;--------------------------------------------------------
                                     62 	.area BSEG    (BIT)
                                     63 ;--------------------------------------------------------
                                     64 ; paged external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area PSEG    (PAG,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; uninitialized external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XSEG    (XDATA)
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area XABS    (ABS,XDATA)
                                     75 ;--------------------------------------------------------
                                     76 ; initialized external ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area XISEG   (XDATA)
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT0 (CODE)
                                     81 	.area GSINIT1 (CODE)
                                     82 	.area GSINIT2 (CODE)
                                     83 	.area GSINIT3 (CODE)
                                     84 	.area GSINIT4 (CODE)
                                     85 	.area GSINIT5 (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area CSEG    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; global & static initialisations
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area GSINIT  (CODE)
                                     94 	.area GSFINAL (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; Home
                                     98 ;--------------------------------------------------------
                                     99 	.area HOME    (CODE)
                                    100 	.area HOME    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; code
                                    103 ;--------------------------------------------------------
                                    104 	.area CSEG    (CODE)
                                    105 ;------------------------------------------------------------
                                    106 ;Allocation info for local variables in function 'atan2f'
                                    107 ;------------------------------------------------------------
                                    108 ;y                         Allocated to stack - _bp -6
                                    109 ;x                         Allocated to stack - _bp +1
                                    110 ;r                         Allocated to registers r7 r6 r5 r4 
                                    111 ;sloc0                     Allocated to stack - _bp +5
                                    112 ;------------------------------------------------------------
                                    113 ;	atan2f.c:34: float atan2f(float x, float y)
                                    114 ;	-----------------------------------------
                                    115 ;	 function atan2f
                                    116 ;	-----------------------------------------
      000000                        117 _atan2f:
                           000007   118 	ar7 = 0x07
                           000006   119 	ar6 = 0x06
                           000005   120 	ar5 = 0x05
                           000004   121 	ar4 = 0x04
                           000003   122 	ar3 = 0x03
                           000002   123 	ar2 = 0x02
                           000001   124 	ar1 = 0x01
                           000000   125 	ar0 = 0x00
      000000 C0*00            [24]  126 	push	_bp
      000002 85 81*00         [24]  127 	mov	_bp,sp
      000005 C0 82            [24]  128 	push	dpl
      000007 C0 83            [24]  129 	push	dph
      000009 C0 F0            [24]  130 	push	b
      00000B C0 E0            [24]  131 	push	acc
      00000D E5 81            [12]  132 	mov	a,sp
      00000F 24 04            [12]  133 	add	a,#0x04
      000011 F5 81            [12]  134 	mov	sp,a
                                    135 ;	atan2f.c:38: if ((x==0.0) && (y==0.0))
      000013 A8*00            [24]  136 	mov	r0,_bp
      000015 08               [12]  137 	inc	r0
      000016 86 F0            [24]  138 	mov	b,@r0
      000018 08               [12]  139 	inc	r0
      000019 E6               [12]  140 	mov	a,@r0
      00001A 42 F0            [12]  141 	orl	b,a
      00001C 08               [12]  142 	inc	r0
      00001D E6               [12]  143 	mov	a,@r0
      00001E 42 F0            [12]  144 	orl	b,a
      000020 08               [12]  145 	inc	r0
      000021 E6               [12]  146 	mov	a,@r0
      000022 54 7F            [12]  147 	anl	a,#0x7F
      000024 45 F0            [12]  148 	orl	a,b
      000026 70 28            [24]  149 	jnz	00102$
      000028 E5*00            [12]  150 	mov	a,_bp
      00002A 24 FA            [12]  151 	add	a,#0xfa
      00002C F8               [12]  152 	mov	r0,a
      00002D 86 F0            [24]  153 	mov	b,@r0
      00002F 08               [12]  154 	inc	r0
      000030 E6               [12]  155 	mov	a,@r0
      000031 42 F0            [12]  156 	orl	b,a
      000033 08               [12]  157 	inc	r0
      000034 E6               [12]  158 	mov	a,@r0
      000035 42 F0            [12]  159 	orl	b,a
      000037 08               [12]  160 	inc	r0
      000038 E6               [12]  161 	mov	a,@r0
      000039 54 7F            [12]  162 	anl	a,#0x7F
      00003B 45 F0            [12]  163 	orl	a,b
      00003D 70 11            [24]  164 	jnz	00102$
                                    165 ;	atan2f.c:40: errno=EDOM;
      00003F 90r00r00         [24]  166 	mov	dptr,#_errno
      000042 74 21            [12]  167 	mov	a,#0x21
      000044 F0               [24]  168 	movx	@dptr,a
      000045 E4               [12]  169 	clr	a
      000046 A3               [24]  170 	inc	dptr
      000047 F0               [24]  171 	movx	@dptr,a
                                    172 ;	atan2f.c:41: return 0.0;
      000048 90 00 00         [24]  173 	mov	dptr,#0x0000
      00004B F5 F0            [12]  174 	mov	b,a
      00004D 02r02r82         [24]  175 	ljmp	00109$
      000050                        176 00102$:
                                    177 ;	atan2f.c:44: if(fabsf(y)>=fabsf(x))
      000050 E5*00            [12]  178 	mov	a,_bp
      000052 24 FA            [12]  179 	add	a,#0xfa
      000054 F8               [12]  180 	mov	r0,a
      000055 86 82            [24]  181 	mov	dpl,@r0
      000057 08               [12]  182 	inc	r0
      000058 86 83            [24]  183 	mov	dph,@r0
      00005A 08               [12]  184 	inc	r0
      00005B 86 F0            [24]  185 	mov	b,@r0
      00005D 08               [12]  186 	inc	r0
      00005E E6               [12]  187 	mov	a,@r0
      00005F 12r00r00         [24]  188 	lcall	_fabsf
      000062 C8               [12]  189 	xch	a,r0
      000063 E5*00            [12]  190 	mov	a,_bp
      000065 24 05            [12]  191 	add	a,#0x05
      000067 C8               [12]  192 	xch	a,r0
      000068 A6 82            [24]  193 	mov	@r0,dpl
      00006A 08               [12]  194 	inc	r0
      00006B A6 83            [24]  195 	mov	@r0,dph
      00006D 08               [12]  196 	inc	r0
      00006E A6 F0            [24]  197 	mov	@r0,b
      000070 08               [12]  198 	inc	r0
      000071 F6               [12]  199 	mov	@r0,a
      000072 A8*00            [24]  200 	mov	r0,_bp
      000074 08               [12]  201 	inc	r0
      000075 86 82            [24]  202 	mov	dpl,@r0
      000077 08               [12]  203 	inc	r0
      000078 86 83            [24]  204 	mov	dph,@r0
      00007A 08               [12]  205 	inc	r0
      00007B 86 F0            [24]  206 	mov	b,@r0
      00007D 08               [12]  207 	inc	r0
      00007E E6               [12]  208 	mov	a,@r0
      00007F 12r00r00         [24]  209 	lcall	_fabsf
      000082 AC 82            [24]  210 	mov	r4,dpl
      000084 AD 83            [24]  211 	mov	r5,dph
      000086 AE F0            [24]  212 	mov	r6,b
      000088 FF               [12]  213 	mov	r7,a
      000089 C0 04            [24]  214 	push	ar4
      00008B C0 05            [24]  215 	push	ar5
      00008D C0 06            [24]  216 	push	ar6
      00008F C0 07            [24]  217 	push	ar7
      000091 E5*00            [12]  218 	mov	a,_bp
      000093 24 05            [12]  219 	add	a,#0x05
      000095 F8               [12]  220 	mov	r0,a
      000096 86 82            [24]  221 	mov	dpl,@r0
      000098 08               [12]  222 	inc	r0
      000099 86 83            [24]  223 	mov	dph,@r0
      00009B 08               [12]  224 	inc	r0
      00009C 86 F0            [24]  225 	mov	b,@r0
      00009E 08               [12]  226 	inc	r0
      00009F E6               [12]  227 	mov	a,@r0
      0000A0 12r00r00         [24]  228 	lcall	___fslt
      0000A3 E5 81            [12]  229 	mov	a,sp
      0000A5 24 FC            [12]  230 	add	a,#0xfc
      0000A7 F5 81            [12]  231 	mov	sp,a
      0000A9 E5 82            [12]  232 	mov	a,dpl
      0000AB 24 FF            [12]  233 	add	a,#0xff
      0000AD 92*00            [24]  234 	mov	b0,c
      0000AF 50 03            [24]  235 	jnc	00147$
      0000B1 02r01rB6         [24]  236 	ljmp	00107$
      0000B4                        237 00147$:
                                    238 ;	atan2f.c:46: r=atanf(x/y);
      0000B4 E5*00            [12]  239 	mov	a,_bp
      0000B6 24 FA            [12]  240 	add	a,#0xfa
      0000B8 F8               [12]  241 	mov	r0,a
      0000B9 E6               [12]  242 	mov	a,@r0
      0000BA C0 E0            [24]  243 	push	acc
      0000BC 08               [12]  244 	inc	r0
      0000BD E6               [12]  245 	mov	a,@r0
      0000BE C0 E0            [24]  246 	push	acc
      0000C0 08               [12]  247 	inc	r0
      0000C1 E6               [12]  248 	mov	a,@r0
      0000C2 C0 E0            [24]  249 	push	acc
      0000C4 08               [12]  250 	inc	r0
      0000C5 E6               [12]  251 	mov	a,@r0
      0000C6 C0 E0            [24]  252 	push	acc
      0000C8 A8*00            [24]  253 	mov	r0,_bp
      0000CA 08               [12]  254 	inc	r0
      0000CB 86 82            [24]  255 	mov	dpl,@r0
      0000CD 08               [12]  256 	inc	r0
      0000CE 86 83            [24]  257 	mov	dph,@r0
      0000D0 08               [12]  258 	inc	r0
      0000D1 86 F0            [24]  259 	mov	b,@r0
      0000D3 08               [12]  260 	inc	r0
      0000D4 E6               [12]  261 	mov	a,@r0
      0000D5 12r00r00         [24]  262 	lcall	___fsdiv
      0000D8 AC 82            [24]  263 	mov	r4,dpl
      0000DA AD 83            [24]  264 	mov	r5,dph
      0000DC AE F0            [24]  265 	mov	r6,b
      0000DE FF               [12]  266 	mov	r7,a
      0000DF E5 81            [12]  267 	mov	a,sp
      0000E1 24 FC            [12]  268 	add	a,#0xfc
      0000E3 F5 81            [12]  269 	mov	sp,a
      0000E5 8C 82            [24]  270 	mov	dpl,r4
      0000E7 8D 83            [24]  271 	mov	dph,r5
      0000E9 8E F0            [24]  272 	mov	b,r6
      0000EB EF               [12]  273 	mov	a,r7
      0000EC 12r00r00         [24]  274 	lcall	_atanf
      0000EF AC 82            [24]  275 	mov	r4,dpl
      0000F1 AD 83            [24]  276 	mov	r5,dph
      0000F3 AE F0            [24]  277 	mov	r6,b
      0000F5 FF               [12]  278 	mov	r7,a
                                    279 ;	atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
      0000F6 C0 07            [24]  280 	push	ar7
      0000F8 C0 06            [24]  281 	push	ar6
      0000FA C0 05            [24]  282 	push	ar5
      0000FC C0 04            [24]  283 	push	ar4
      0000FE E4               [12]  284 	clr	a
      0000FF C0 E0            [24]  285 	push	acc
      000101 C0 E0            [24]  286 	push	acc
      000103 C0 E0            [24]  287 	push	acc
      000105 C0 E0            [24]  288 	push	acc
      000107 E5*00            [12]  289 	mov	a,_bp
      000109 24 FA            [12]  290 	add	a,#0xfa
      00010B F8               [12]  291 	mov	r0,a
      00010C 86 82            [24]  292 	mov	dpl,@r0
      00010E 08               [12]  293 	inc	r0
      00010F 86 83            [24]  294 	mov	dph,@r0
      000111 08               [12]  295 	inc	r0
      000112 86 F0            [24]  296 	mov	b,@r0
      000114 08               [12]  297 	inc	r0
      000115 E6               [12]  298 	mov	a,@r0
      000116 12r00r00         [24]  299 	lcall	___fslt
      000119 AB 82            [24]  300 	mov	r3,dpl
      00011B E5 81            [12]  301 	mov	a,sp
      00011D 24 FC            [12]  302 	add	a,#0xfc
      00011F F5 81            [12]  303 	mov	sp,a
      000121 D0 04            [24]  304 	pop	ar4
      000123 D0 05            [24]  305 	pop	ar5
      000125 D0 06            [24]  306 	pop	ar6
      000127 D0 07            [24]  307 	pop	ar7
      000129 EB               [12]  308 	mov	a,r3
      00012A 70 03            [24]  309 	jnz	00148$
      00012C 02r02r7B         [24]  310 	ljmp	00108$
      00012F                        311 00148$:
      00012F C0 07            [24]  312 	push	ar7
      000131 C0 06            [24]  313 	push	ar6
      000133 C0 05            [24]  314 	push	ar5
      000135 C0 04            [24]  315 	push	ar4
      000137 E4               [12]  316 	clr	a
      000138 C0 E0            [24]  317 	push	acc
      00013A C0 E0            [24]  318 	push	acc
      00013C C0 E0            [24]  319 	push	acc
      00013E C0 E0            [24]  320 	push	acc
      000140 A8*00            [24]  321 	mov	r0,_bp
      000142 08               [12]  322 	inc	r0
      000143 86 82            [24]  323 	mov	dpl,@r0
      000145 08               [12]  324 	inc	r0
      000146 86 83            [24]  325 	mov	dph,@r0
      000148 08               [12]  326 	inc	r0
      000149 86 F0            [24]  327 	mov	b,@r0
      00014B 08               [12]  328 	inc	r0
      00014C E6               [12]  329 	mov	a,@r0
      00014D 12r00r00         [24]  330 	lcall	___fslt
      000150 E5 81            [12]  331 	mov	a,sp
      000152 24 FC            [12]  332 	add	a,#0xfc
      000154 F5 81            [12]  333 	mov	sp,a
      000156 D0 04            [24]  334 	pop	ar4
      000158 D0 05            [24]  335 	pop	ar5
      00015A D0 06            [24]  336 	pop	ar6
      00015C D0 07            [24]  337 	pop	ar7
      00015E E5 82            [12]  338 	mov	a,dpl
      000160 24 FF            [12]  339 	add	a,#0xff
      000162 92*00            [24]  340 	mov	b0,c
      000164 40 12            [24]  341 	jc	00111$
      000166 E5*00            [12]  342 	mov	a,_bp
      000168 24 05            [12]  343 	add	a,#0x05
      00016A F8               [12]  344 	mov	r0,a
      00016B 76 DB            [12]  345 	mov	@r0,#0xdb
      00016D 08               [12]  346 	inc	r0
      00016E 76 0F            [12]  347 	mov	@r0,#0x0f
      000170 08               [12]  348 	inc	r0
      000171 76 49            [12]  349 	mov	@r0,#0x49
      000173 08               [12]  350 	inc	r0
      000174 76 40            [12]  351 	mov	@r0,#0x40
      000176 80 10            [24]  352 	sjmp	00112$
      000178                        353 00111$:
      000178 E5*00            [12]  354 	mov	a,_bp
      00017A 24 05            [12]  355 	add	a,#0x05
      00017C F8               [12]  356 	mov	r0,a
      00017D 76 DB            [12]  357 	mov	@r0,#0xdb
      00017F 08               [12]  358 	inc	r0
      000180 76 0F            [12]  359 	mov	@r0,#0x0f
      000182 08               [12]  360 	inc	r0
      000183 76 49            [12]  361 	mov	@r0,#0x49
      000185 08               [12]  362 	inc	r0
      000186 76 C0            [12]  363 	mov	@r0,#0xc0
      000188                        364 00112$:
      000188 E5*00            [12]  365 	mov	a,_bp
      00018A 24 05            [12]  366 	add	a,#0x05
      00018C F8               [12]  367 	mov	r0,a
      00018D E6               [12]  368 	mov	a,@r0
      00018E C0 E0            [24]  369 	push	acc
      000190 08               [12]  370 	inc	r0
      000191 E6               [12]  371 	mov	a,@r0
      000192 C0 E0            [24]  372 	push	acc
      000194 08               [12]  373 	inc	r0
      000195 E6               [12]  374 	mov	a,@r0
      000196 C0 E0            [24]  375 	push	acc
      000198 08               [12]  376 	inc	r0
      000199 E6               [12]  377 	mov	a,@r0
      00019A C0 E0            [24]  378 	push	acc
      00019C 8C 82            [24]  379 	mov	dpl,r4
      00019E 8D 83            [24]  380 	mov	dph,r5
      0001A0 8E F0            [24]  381 	mov	b,r6
      0001A2 EF               [12]  382 	mov	a,r7
      0001A3 12r00r00         [24]  383 	lcall	___fsadd
      0001A6 AC 82            [24]  384 	mov	r4,dpl
      0001A8 AD 83            [24]  385 	mov	r5,dph
      0001AA AE F0            [24]  386 	mov	r6,b
      0001AC FF               [12]  387 	mov	r7,a
      0001AD E5 81            [12]  388 	mov	a,sp
      0001AF 24 FC            [12]  389 	add	a,#0xfc
      0001B1 F5 81            [12]  390 	mov	sp,a
      0001B3 02r02r7B         [24]  391 	ljmp	00108$
      0001B6                        392 00107$:
                                    393 ;	atan2f.c:51: r=-atanf(y/x);
      0001B6 A8*00            [24]  394 	mov	r0,_bp
      0001B8 08               [12]  395 	inc	r0
      0001B9 E6               [12]  396 	mov	a,@r0
      0001BA C0 E0            [24]  397 	push	acc
      0001BC 08               [12]  398 	inc	r0
      0001BD E6               [12]  399 	mov	a,@r0
      0001BE C0 E0            [24]  400 	push	acc
      0001C0 08               [12]  401 	inc	r0
      0001C1 E6               [12]  402 	mov	a,@r0
      0001C2 C0 E0            [24]  403 	push	acc
      0001C4 08               [12]  404 	inc	r0
      0001C5 E6               [12]  405 	mov	a,@r0
      0001C6 C0 E0            [24]  406 	push	acc
      0001C8 E5*00            [12]  407 	mov	a,_bp
      0001CA 24 FA            [12]  408 	add	a,#0xfa
      0001CC F8               [12]  409 	mov	r0,a
      0001CD 86 82            [24]  410 	mov	dpl,@r0
      0001CF 08               [12]  411 	inc	r0
      0001D0 86 83            [24]  412 	mov	dph,@r0
      0001D2 08               [12]  413 	inc	r0
      0001D3 86 F0            [24]  414 	mov	b,@r0
      0001D5 08               [12]  415 	inc	r0
      0001D6 E6               [12]  416 	mov	a,@r0
      0001D7 12r00r00         [24]  417 	lcall	___fsdiv
      0001DA AF 82            [24]  418 	mov	r7,dpl
      0001DC AE 83            [24]  419 	mov	r6,dph
      0001DE AD F0            [24]  420 	mov	r5,b
      0001E0 FC               [12]  421 	mov	r4,a
      0001E1 E5 81            [12]  422 	mov	a,sp
      0001E3 24 FC            [12]  423 	add	a,#0xfc
      0001E5 F5 81            [12]  424 	mov	sp,a
      0001E7 8F 82            [24]  425 	mov	dpl,r7
      0001E9 8E 83            [24]  426 	mov	dph,r6
      0001EB 8D F0            [24]  427 	mov	b,r5
      0001ED EC               [12]  428 	mov	a,r4
      0001EE 12r00r00         [24]  429 	lcall	_atanf
      0001F1 AF 82            [24]  430 	mov	r7,dpl
      0001F3 AE 83            [24]  431 	mov	r6,dph
      0001F5 AD F0            [24]  432 	mov	r5,b
      0001F7 B2 E7            [12]  433 	cpl	acc.7
      0001F9 FC               [12]  434 	mov	r4,a
                                    435 ;	atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0001FA C0 07            [24]  436 	push	ar7
      0001FC C0 06            [24]  437 	push	ar6
      0001FE C0 05            [24]  438 	push	ar5
      000200 C0 04            [24]  439 	push	ar4
      000202 E4               [12]  440 	clr	a
      000203 C0 E0            [24]  441 	push	acc
      000205 C0 E0            [24]  442 	push	acc
      000207 C0 E0            [24]  443 	push	acc
      000209 C0 E0            [24]  444 	push	acc
      00020B A8*00            [24]  445 	mov	r0,_bp
      00020D 08               [12]  446 	inc	r0
      00020E 86 82            [24]  447 	mov	dpl,@r0
      000210 08               [12]  448 	inc	r0
      000211 86 83            [24]  449 	mov	dph,@r0
      000213 08               [12]  450 	inc	r0
      000214 86 F0            [24]  451 	mov	b,@r0
      000216 08               [12]  452 	inc	r0
      000217 E6               [12]  453 	mov	a,@r0
      000218 12r00r00         [24]  454 	lcall	___fslt
      00021B AB 82            [24]  455 	mov	r3,dpl
      00021D E5 81            [12]  456 	mov	a,sp
      00021F 24 FC            [12]  457 	add	a,#0xfc
      000221 F5 81            [12]  458 	mov	sp,a
      000223 D0 04            [24]  459 	pop	ar4
      000225 D0 05            [24]  460 	pop	ar5
      000227 D0 06            [24]  461 	pop	ar6
      000229 D0 07            [24]  462 	pop	ar7
      00022B EB               [12]  463 	mov	a,r3
      00022C 60 12            [24]  464 	jz	00113$
      00022E E5*00            [12]  465 	mov	a,_bp
      000230 24 05            [12]  466 	add	a,#0x05
      000232 F8               [12]  467 	mov	r0,a
      000233 76 DB            [12]  468 	mov	@r0,#0xdb
      000235 08               [12]  469 	inc	r0
      000236 76 0F            [12]  470 	mov	@r0,#0x0f
      000238 08               [12]  471 	inc	r0
      000239 76 C9            [12]  472 	mov	@r0,#0xc9
      00023B 08               [12]  473 	inc	r0
      00023C 76 BF            [12]  474 	mov	@r0,#0xbf
      00023E 80 10            [24]  475 	sjmp	00114$
      000240                        476 00113$:
      000240 E5*00            [12]  477 	mov	a,_bp
      000242 24 05            [12]  478 	add	a,#0x05
      000244 F8               [12]  479 	mov	r0,a
      000245 76 DB            [12]  480 	mov	@r0,#0xdb
      000247 08               [12]  481 	inc	r0
      000248 76 0F            [12]  482 	mov	@r0,#0x0f
      00024A 08               [12]  483 	inc	r0
      00024B 76 C9            [12]  484 	mov	@r0,#0xc9
      00024D 08               [12]  485 	inc	r0
      00024E 76 3F            [12]  486 	mov	@r0,#0x3f
      000250                        487 00114$:
      000250 E5*00            [12]  488 	mov	a,_bp
      000252 24 05            [12]  489 	add	a,#0x05
      000254 F8               [12]  490 	mov	r0,a
      000255 E6               [12]  491 	mov	a,@r0
      000256 C0 E0            [24]  492 	push	acc
      000258 08               [12]  493 	inc	r0
      000259 E6               [12]  494 	mov	a,@r0
      00025A C0 E0            [24]  495 	push	acc
      00025C 08               [12]  496 	inc	r0
      00025D E6               [12]  497 	mov	a,@r0
      00025E C0 E0            [24]  498 	push	acc
      000260 08               [12]  499 	inc	r0
      000261 E6               [12]  500 	mov	a,@r0
      000262 C0 E0            [24]  501 	push	acc
      000264 8F 82            [24]  502 	mov	dpl,r7
      000266 8E 83            [24]  503 	mov	dph,r6
      000268 8D F0            [24]  504 	mov	b,r5
      00026A EC               [12]  505 	mov	a,r4
      00026B 12r00r00         [24]  506 	lcall	___fsadd
      00026E AC 82            [24]  507 	mov	r4,dpl
      000270 AD 83            [24]  508 	mov	r5,dph
      000272 AE F0            [24]  509 	mov	r6,b
      000274 FF               [12]  510 	mov	r7,a
      000275 E5 81            [12]  511 	mov	a,sp
      000277 24 FC            [12]  512 	add	a,#0xfc
      000279 F5 81            [12]  513 	mov	sp,a
      00027B                        514 00108$:
                                    515 ;	atan2f.c:54: return r;
      00027B 8C 82            [24]  516 	mov	dpl,r4
      00027D 8D 83            [24]  517 	mov	dph,r5
      00027F 8E F0            [24]  518 	mov	b,r6
      000281 EF               [12]  519 	mov	a,r7
      000282                        520 00109$:
                                    521 ;	atan2f.c:55: }
      000282 85*00 81         [24]  522 	mov	sp,_bp
      000285 D0*00            [24]  523 	pop	_bp
      000287 22               [24]  524 	ret
                                    525 	.area CSEG    (CODE)
                                    526 	.area CONST   (CODE)
                                    527 	.area XINIT   (CODE)
                                    528 	.area CABS    (ABS,CODE)
