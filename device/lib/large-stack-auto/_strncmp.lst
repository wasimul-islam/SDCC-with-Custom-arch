                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strncmp
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strncmp
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'strncmp'
                                     91 ;------------------------------------------------------------
                                     92 ;last                      Allocated to stack - _bp -5
                                     93 ;count                     Allocated to stack - _bp -7
                                     94 ;first                     Allocated to registers r5 r6 r7 
                                     95 ;sloc0                     Allocated to stack - _bp +1
                                     96 ;sloc1                     Allocated to stack - _bp +3
                                     97 ;------------------------------------------------------------
                                     98 ;	_strncmp.c:31: int strncmp ( const char * first, const char * last, size_t count )
                                     99 ;	-----------------------------------------
                                    100 ;	 function strncmp
                                    101 ;	-----------------------------------------
      000000                        102 _strncmp:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 C0*00            [24]  111 	push	_bp
      000002 85 81*00         [24]  112 	mov	_bp,sp
      000005 05 81            [12]  113 	inc	sp
      000007 05 81            [12]  114 	inc	sp
      000009 05 81            [12]  115 	inc	sp
      00000B AD 82            [24]  116 	mov	r5,dpl
      00000D AE 83            [24]  117 	mov	r6,dph
      00000F AF F0            [24]  118 	mov	r7,b
                                    119 ;	_strncmp.c:33: if (!count)
      000011 E5*00            [12]  120 	mov	a,_bp
      000013 24 F9            [12]  121 	add	a,#0xf9
      000015 F8               [12]  122 	mov	r0,a
      000016 E6               [12]  123 	mov	a,@r0
      000017 08               [12]  124 	inc	r0
      000018 46               [12]  125 	orl	a,@r0
      000019 70 06            [24]  126 	jnz	00114$
                                    127 ;	_strncmp.c:34: return(0);
      00001B 90 00 00         [24]  128 	mov	dptr,#0x0000
      00001E 02r00rBC         [24]  129 	ljmp	00108$
                                    130 ;	_strncmp.c:36: while (--count && *first && *first == *last) {
      000021                        131 00114$:
      000021 E5*00            [12]  132 	mov	a,_bp
      000023 24 FB            [12]  133 	add	a,#0xfb
      000025 F8               [12]  134 	mov	r0,a
      000026 86 02            [24]  135 	mov	ar2,@r0
      000028 08               [12]  136 	inc	r0
      000029 86 03            [24]  137 	mov	ar3,@r0
      00002B 08               [12]  138 	inc	r0
      00002C 86 04            [24]  139 	mov	ar4,@r0
      00002E E5*00            [12]  140 	mov	a,_bp
      000030 24 F9            [12]  141 	add	a,#0xf9
      000032 F8               [12]  142 	mov	r0,a
      000033 A9*00            [24]  143 	mov	r1,_bp
      000035 09               [12]  144 	inc	r1
      000036 E6               [12]  145 	mov	a,@r0
      000037 F7               [12]  146 	mov	@r1,a
      000038 08               [12]  147 	inc	r0
      000039 E6               [12]  148 	mov	a,@r0
      00003A 09               [12]  149 	inc	r1
      00003B F7               [12]  150 	mov	@r1,a
      00003C                        151 00105$:
      00003C A8*00            [24]  152 	mov	r0,_bp
      00003E 08               [12]  153 	inc	r0
      00003F 16               [12]  154 	dec	@r0
      000040 B6 FF 02         [24]  155 	cjne	@r0,#0xff,00132$
      000043 08               [12]  156 	inc	r0
      000044 16               [12]  157 	dec	@r0
      000045                        158 00132$:
      000045 A8*00            [24]  159 	mov	r0,_bp
      000047 08               [12]  160 	inc	r0
      000048 E6               [12]  161 	mov	a,@r0
      000049 08               [12]  162 	inc	r0
      00004A 46               [12]  163 	orl	a,@r0
      00004B 60 4C            [24]  164 	jz	00107$
      00004D 8D 82            [24]  165 	mov	dpl,r5
      00004F 8E 83            [24]  166 	mov	dph,r6
      000051 8F F0            [24]  167 	mov	b,r7
      000053 E5*00            [12]  168 	mov	a,_bp
      000055 24 03            [12]  169 	add	a,#0x03
      000057 F8               [12]  170 	mov	r0,a
      000058 12r00r00         [24]  171 	lcall	__gptrget
      00005B F6               [12]  172 	mov	@r0,a
      00005C E5*00            [12]  173 	mov	a,_bp
      00005E 24 03            [12]  174 	add	a,#0x03
      000060 F8               [12]  175 	mov	r0,a
      000061 E6               [12]  176 	mov	a,@r0
      000062 60 35            [24]  177 	jz	00107$
      000064 C0 05            [24]  178 	push	ar5
      000066 C0 06            [24]  179 	push	ar6
      000068 C0 07            [24]  180 	push	ar7
      00006A 8A 82            [24]  181 	mov	dpl,r2
      00006C 8B 83            [24]  182 	mov	dph,r3
      00006E 8C F0            [24]  183 	mov	b,r4
      000070 12r00r00         [24]  184 	lcall	__gptrget
      000073 FF               [12]  185 	mov	r7,a
      000074 E5*00            [12]  186 	mov	a,_bp
      000076 24 03            [12]  187 	add	a,#0x03
      000078 F8               [12]  188 	mov	r0,a
      000079 E6               [12]  189 	mov	a,@r0
      00007A B5 07 02         [24]  190 	cjne	a,ar7,00135$
      00007D 80 08            [24]  191 	sjmp	00136$
      00007F                        192 00135$:
      00007F D0 07            [24]  193 	pop	ar7
      000081 D0 06            [24]  194 	pop	ar6
      000083 D0 05            [24]  195 	pop	ar5
      000085 80 12            [24]  196 	sjmp	00107$
      000087                        197 00136$:
      000087 D0 07            [24]  198 	pop	ar7
      000089 D0 06            [24]  199 	pop	ar6
      00008B D0 05            [24]  200 	pop	ar5
                                    201 ;	_strncmp.c:37: first++;
      00008D 0D               [12]  202 	inc	r5
      00008E BD 00 01         [24]  203 	cjne	r5,#0x00,00137$
      000091 0E               [12]  204 	inc	r6
      000092                        205 00137$:
                                    206 ;	_strncmp.c:38: last++;
      000092 0A               [12]  207 	inc	r2
      000093 BA 00 A6         [24]  208 	cjne	r2,#0x00,00105$
      000096 0B               [12]  209 	inc	r3
      000097 80 A3            [24]  210 	sjmp	00105$
      000099                        211 00107$:
                                    212 ;	_strncmp.c:41: return( *first - *last );
      000099 8D 82            [24]  213 	mov	dpl,r5
      00009B 8E 83            [24]  214 	mov	dph,r6
      00009D 8F F0            [24]  215 	mov	b,r7
      00009F 12r00r00         [24]  216 	lcall	__gptrget
      0000A2 FD               [12]  217 	mov	r5,a
      0000A3 7F 00            [12]  218 	mov	r7,#0x00
      0000A5 8A 82            [24]  219 	mov	dpl,r2
      0000A7 8B 83            [24]  220 	mov	dph,r3
      0000A9 8C F0            [24]  221 	mov	b,r4
      0000AB 12r00r00         [24]  222 	lcall	__gptrget
      0000AE FA               [12]  223 	mov	r2,a
      0000AF 7E 00            [12]  224 	mov	r6,#0x00
      0000B1 ED               [12]  225 	mov	a,r5
      0000B2 C3               [12]  226 	clr	c
      0000B3 9A               [12]  227 	subb	a,r2
      0000B4 FD               [12]  228 	mov	r5,a
      0000B5 EF               [12]  229 	mov	a,r7
      0000B6 9E               [12]  230 	subb	a,r6
      0000B7 FF               [12]  231 	mov	r7,a
      0000B8 8D 82            [24]  232 	mov	dpl,r5
      0000BA 8F 83            [24]  233 	mov	dph,r7
      0000BC                        234 00108$:
                                    235 ;	_strncmp.c:42: }
      0000BC 85*00 81         [24]  236 	mov	sp,_bp
      0000BF D0*00            [24]  237 	pop	_bp
      0000C1 22               [24]  238 	ret
                                    239 	.area CSEG    (CODE)
                                    240 	.area CONST   (CODE)
                                    241 	.area XINIT   (CODE)
                                    242 	.area CABS    (ABS,CODE)
