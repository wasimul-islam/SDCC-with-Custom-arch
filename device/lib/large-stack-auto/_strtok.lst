                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module _strtok
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strchr
                                     12 	.globl _strtok
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; uninitialized external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
      000000                         56 _strtok_s_65536_27:
      000000                         57 	.ds 3
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; initialized external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'strtok'
                                     94 ;------------------------------------------------------------
                                     95 ;control                   Allocated to stack - _bp -5
                                     96 ;str                       Allocated to registers r5 r6 r7 
                                     97 ;s1                        Allocated to registers r5 r6 r7 
                                     98 ;s                         Allocated with name '_strtok_s_65536_27'
                                     99 ;------------------------------------------------------------
                                    100 ;	_strtok.c:36: char * strtok ( char * str, const char * control )
                                    101 ;	-----------------------------------------
                                    102 ;	 function strtok
                                    103 ;	-----------------------------------------
      000000                        104 _strtok:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 AD 82            [24]  115 	mov	r5,dpl
      000007 AE 83            [24]  116 	mov	r6,dph
      000009 AF F0            [24]  117 	mov	r7,b
                                    118 ;	_strtok.c:41: if ( str )
      00000B ED               [12]  119 	mov	a,r5
      00000C 4E               [12]  120 	orl	a,r6
      00000D 60 0B            [24]  121 	jz	00102$
                                    122 ;	_strtok.c:42: s = str;
      00000F 90r00r00         [24]  123 	mov	dptr,#_strtok_s_65536_27
      000012 ED               [12]  124 	mov	a,r5
      000013 F0               [24]  125 	movx	@dptr,a
      000014 EE               [12]  126 	mov	a,r6
      000015 A3               [24]  127 	inc	dptr
      000016 F0               [24]  128 	movx	@dptr,a
      000017 EF               [12]  129 	mov	a,r7
      000018 A3               [24]  130 	inc	dptr
      000019 F0               [24]  131 	movx	@dptr,a
      00001A                        132 00102$:
                                    133 ;	_strtok.c:43: if ( !s )
      00001A 90r00r00         [24]  134 	mov	dptr,#_strtok_s_65536_27
      00001D E0               [24]  135 	movx	a,@dptr
      00001E F5 F0            [12]  136 	mov	b,a
      000020 A3               [24]  137 	inc	dptr
      000021 E0               [24]  138 	movx	a,@dptr
      000022 45 F0            [12]  139 	orl	a,b
                                    140 ;	_strtok.c:44: return NULL;
      000024 70 08            [24]  141 	jnz	00108$
      000026 90 00 00         [24]  142 	mov	dptr,#0x0000
      000029 F5 F0            [12]  143 	mov	b,a
      00002B 02r01r16         [24]  144 	ljmp	00119$
                                    145 ;	_strtok.c:46: while (*s) {
      00002E                        146 00108$:
      00002E 90r00r00         [24]  147 	mov	dptr,#_strtok_s_65536_27
      000031 E0               [24]  148 	movx	a,@dptr
      000032 FD               [12]  149 	mov	r5,a
      000033 A3               [24]  150 	inc	dptr
      000034 E0               [24]  151 	movx	a,@dptr
      000035 FE               [12]  152 	mov	r6,a
      000036 A3               [24]  153 	inc	dptr
      000037 E0               [24]  154 	movx	a,@dptr
      000038 FF               [12]  155 	mov	r7,a
      000039 8D 82            [24]  156 	mov	dpl,r5
      00003B 8E 83            [24]  157 	mov	dph,r6
      00003D 8F F0            [24]  158 	mov	b,r7
      00003F 12r00r00         [24]  159 	lcall	__gptrget
      000042 FF               [12]  160 	mov	r7,a
      000043 60 2C            [24]  161 	jz	00110$
                                    162 ;	_strtok.c:47: if (strchr(control,*s))
      000045 C0 07            [24]  163 	push	ar7
      000047 E5*00            [12]  164 	mov	a,_bp
      000049 24 FB            [12]  165 	add	a,#0xfb
      00004B F8               [12]  166 	mov	r0,a
      00004C 86 82            [24]  167 	mov	dpl,@r0
      00004E 08               [12]  168 	inc	r0
      00004F 86 83            [24]  169 	mov	dph,@r0
      000051 08               [12]  170 	inc	r0
      000052 86 F0            [24]  171 	mov	b,@r0
      000054 12r00r00         [24]  172 	lcall	_strchr
      000057 AD 82            [24]  173 	mov	r5,dpl
      000059 AE 83            [24]  174 	mov	r6,dph
      00005B AF F0            [24]  175 	mov	r7,b
      00005D 15 81            [12]  176 	dec	sp
      00005F ED               [12]  177 	mov	a,r5
      000060 4E               [12]  178 	orl	a,r6
      000061 60 0E            [24]  179 	jz	00110$
                                    180 ;	_strtok.c:48: s++;
      000063 90r00r00         [24]  181 	mov	dptr,#_strtok_s_65536_27
      000066 E0               [24]  182 	movx	a,@dptr
      000067 24 01            [12]  183 	add	a,#0x01
      000069 F0               [24]  184 	movx	@dptr,a
      00006A A3               [24]  185 	inc	dptr
      00006B E0               [24]  186 	movx	a,@dptr
      00006C 34 00            [12]  187 	addc	a,#0x00
      00006E F0               [24]  188 	movx	@dptr,a
                                    189 ;	_strtok.c:50: break;
      00006F 80 BD            [24]  190 	sjmp	00108$
      000071                        191 00110$:
                                    192 ;	_strtok.c:53: s1 = s;
      000071 90r00r00         [24]  193 	mov	dptr,#_strtok_s_65536_27
      000074 E0               [24]  194 	movx	a,@dptr
      000075 FD               [12]  195 	mov	r5,a
      000076 A3               [24]  196 	inc	dptr
      000077 E0               [24]  197 	movx	a,@dptr
      000078 FE               [12]  198 	mov	r6,a
      000079 A3               [24]  199 	inc	dptr
      00007A E0               [24]  200 	movx	a,@dptr
      00007B FF               [12]  201 	mov	r7,a
                                    202 ;	_strtok.c:55: while (*s) {
      00007C                        203 00113$:
      00007C 90r00r00         [24]  204 	mov	dptr,#_strtok_s_65536_27
      00007F E0               [24]  205 	movx	a,@dptr
      000080 FA               [12]  206 	mov	r2,a
      000081 A3               [24]  207 	inc	dptr
      000082 E0               [24]  208 	movx	a,@dptr
      000083 FB               [12]  209 	mov	r3,a
      000084 A3               [24]  210 	inc	dptr
      000085 E0               [24]  211 	movx	a,@dptr
      000086 FC               [12]  212 	mov	r4,a
      000087 8A 82            [24]  213 	mov	dpl,r2
      000089 8B 83            [24]  214 	mov	dph,r3
      00008B 8C F0            [24]  215 	mov	b,r4
      00008D 12r00r00         [24]  216 	lcall	__gptrget
      000090 FC               [12]  217 	mov	r4,a
      000091 60 61            [24]  218 	jz	00115$
                                    219 ;	_strtok.c:56: if (strchr(control,*s)) {
      000093 C0 07            [24]  220 	push	ar7
      000095 C0 06            [24]  221 	push	ar6
      000097 C0 05            [24]  222 	push	ar5
      000099 C0 04            [24]  223 	push	ar4
      00009B E5*00            [12]  224 	mov	a,_bp
      00009D 24 FB            [12]  225 	add	a,#0xfb
      00009F F8               [12]  226 	mov	r0,a
      0000A0 86 82            [24]  227 	mov	dpl,@r0
      0000A2 08               [12]  228 	inc	r0
      0000A3 86 83            [24]  229 	mov	dph,@r0
      0000A5 08               [12]  230 	inc	r0
      0000A6 86 F0            [24]  231 	mov	b,@r0
      0000A8 12r00r00         [24]  232 	lcall	_strchr
      0000AB AA 82            [24]  233 	mov	r2,dpl
      0000AD AB 83            [24]  234 	mov	r3,dph
      0000AF AC F0            [24]  235 	mov	r4,b
      0000B1 15 81            [12]  236 	dec	sp
      0000B3 D0 05            [24]  237 	pop	ar5
      0000B5 D0 06            [24]  238 	pop	ar6
      0000B7 D0 07            [24]  239 	pop	ar7
      0000B9 EA               [12]  240 	mov	a,r2
      0000BA 4B               [12]  241 	orl	a,r3
      0000BB 60 29            [24]  242 	jz	00112$
                                    243 ;	_strtok.c:57: *s++ = '\0';
      0000BD 90r00r00         [24]  244 	mov	dptr,#_strtok_s_65536_27
      0000C0 E0               [24]  245 	movx	a,@dptr
      0000C1 FA               [12]  246 	mov	r2,a
      0000C2 A3               [24]  247 	inc	dptr
      0000C3 E0               [24]  248 	movx	a,@dptr
      0000C4 FB               [12]  249 	mov	r3,a
      0000C5 A3               [24]  250 	inc	dptr
      0000C6 E0               [24]  251 	movx	a,@dptr
      0000C7 FC               [12]  252 	mov	r4,a
      0000C8 8A 82            [24]  253 	mov	dpl,r2
      0000CA 8B 83            [24]  254 	mov	dph,r3
      0000CC 8C F0            [24]  255 	mov	b,r4
      0000CE E4               [12]  256 	clr	a
      0000CF 12r00r00         [24]  257 	lcall	__gptrput
      0000D2 90r00r00         [24]  258 	mov	dptr,#_strtok_s_65536_27
      0000D5 E0               [24]  259 	movx	a,@dptr
      0000D6 24 01            [12]  260 	add	a,#0x01
      0000D8 F0               [24]  261 	movx	@dptr,a
      0000D9 A3               [24]  262 	inc	dptr
      0000DA E0               [24]  263 	movx	a,@dptr
      0000DB 34 00            [12]  264 	addc	a,#0x00
      0000DD F0               [24]  265 	movx	@dptr,a
                                    266 ;	_strtok.c:58: return s1;
      0000DE 8D 82            [24]  267 	mov	dpl,r5
      0000E0 8E 83            [24]  268 	mov	dph,r6
      0000E2 8F F0            [24]  269 	mov	b,r7
      0000E4 80 30            [24]  270 	sjmp	00119$
      0000E6                        271 00112$:
                                    272 ;	_strtok.c:60: s++ ;
      0000E6 90r00r00         [24]  273 	mov	dptr,#_strtok_s_65536_27
      0000E9 E0               [24]  274 	movx	a,@dptr
      0000EA 24 01            [12]  275 	add	a,#0x01
      0000EC F0               [24]  276 	movx	@dptr,a
      0000ED A3               [24]  277 	inc	dptr
      0000EE E0               [24]  278 	movx	a,@dptr
      0000EF 34 00            [12]  279 	addc	a,#0x00
      0000F1 F0               [24]  280 	movx	@dptr,a
      0000F2 80 88            [24]  281 	sjmp	00113$
      0000F4                        282 00115$:
                                    283 ;	_strtok.c:63: s = NULL;
      0000F4 90r00r00         [24]  284 	mov	dptr,#_strtok_s_65536_27
      0000F7 E4               [12]  285 	clr	a
      0000F8 F0               [24]  286 	movx	@dptr,a
      0000F9 A3               [24]  287 	inc	dptr
      0000FA F0               [24]  288 	movx	@dptr,a
      0000FB A3               [24]  289 	inc	dptr
      0000FC F0               [24]  290 	movx	@dptr,a
                                    291 ;	_strtok.c:65: if (*s1)
      0000FD 8D 82            [24]  292 	mov	dpl,r5
      0000FF 8E 83            [24]  293 	mov	dph,r6
      000101 8F F0            [24]  294 	mov	b,r7
      000103 12r00r00         [24]  295 	lcall	__gptrget
      000106 60 08            [24]  296 	jz	00117$
                                    297 ;	_strtok.c:66: return s1;
      000108 8D 82            [24]  298 	mov	dpl,r5
      00010A 8E 83            [24]  299 	mov	dph,r6
      00010C 8F F0            [24]  300 	mov	b,r7
      00010E 80 06            [24]  301 	sjmp	00119$
      000110                        302 00117$:
                                    303 ;	_strtok.c:68: return NULL;
      000110 90 00 00         [24]  304 	mov	dptr,#0x0000
      000113 75 F0 00         [24]  305 	mov	b,#0x00
      000116                        306 00119$:
                                    307 ;	_strtok.c:69: }
      000116 D0*00            [24]  308 	pop	_bp
      000118 22               [24]  309 	ret
                                    310 	.area CSEG    (CODE)
                                    311 	.area CONST   (CODE)
                                    312 	.area XINIT   (CODE)
                                    313 	.area CABS    (ABS,CODE)
