                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #0 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ldiv
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ldiv
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; uninitialized external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; initialized external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'ldiv'
                                     91 ;------------------------------------------------------------
                                     92 ;numer                     Allocated to stack - _bp -6
                                     93 ;denom                     Allocated to stack - _bp -10
                                     94 ;ret                       Allocated to stack - _bp +1
                                     95 ;------------------------------------------------------------
                                     96 ;	ldiv.c:32: ldiv_t ldiv(long int numer, long int denom)
                                     97 ;	-----------------------------------------
                                     98 ;	 function ldiv
                                     99 ;	-----------------------------------------
      000000                        100 _ldiv:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0*00            [24]  109 	push	_bp
      000002 E5 81            [12]  110 	mov	a,sp
      000004 F5*00            [12]  111 	mov	_bp,a
      000006 24 08            [12]  112 	add	a,#0x08
      000008 F5 81            [12]  113 	mov	sp,a
                                    114 ;	ldiv.c:35: ret.quot = numer / denom;
      00000A A9*00            [24]  115 	mov	r1,_bp
      00000C 09               [12]  116 	inc	r1
      00000D C0 01            [24]  117 	push	ar1
      00000F E5*00            [12]  118 	mov	a,_bp
      000011 24 F3            [12]  119 	add	a,#0xf3
      000013 F8               [12]  120 	mov	r0,a
      000014 E6               [12]  121 	mov	a,@r0
      000015 C0 E0            [24]  122 	push	acc
      000017 08               [12]  123 	inc	r0
      000018 E6               [12]  124 	mov	a,@r0
      000019 C0 E0            [24]  125 	push	acc
      00001B 08               [12]  126 	inc	r0
      00001C E6               [12]  127 	mov	a,@r0
      00001D C0 E0            [24]  128 	push	acc
      00001F 08               [12]  129 	inc	r0
      000020 E6               [12]  130 	mov	a,@r0
      000021 C0 E0            [24]  131 	push	acc
      000023 E5*00            [12]  132 	mov	a,_bp
      000025 24 F7            [12]  133 	add	a,#0xf7
      000027 F8               [12]  134 	mov	r0,a
      000028 86 82            [24]  135 	mov	dpl,@r0
      00002A 08               [12]  136 	inc	r0
      00002B 86 83            [24]  137 	mov	dph,@r0
      00002D 08               [12]  138 	inc	r0
      00002E 86 F0            [24]  139 	mov	b,@r0
      000030 08               [12]  140 	inc	r0
      000031 E6               [12]  141 	mov	a,@r0
      000032 12r00r00         [24]  142 	lcall	__divslong
      000035 AC 82            [24]  143 	mov	r4,dpl
      000037 AD 83            [24]  144 	mov	r5,dph
      000039 AE F0            [24]  145 	mov	r6,b
      00003B FF               [12]  146 	mov	r7,a
      00003C E5 81            [12]  147 	mov	a,sp
      00003E 24 FC            [12]  148 	add	a,#0xfc
      000040 F5 81            [12]  149 	mov	sp,a
      000042 D0 01            [24]  150 	pop	ar1
      000044 A7 04            [24]  151 	mov	@r1,ar4
      000046 09               [12]  152 	inc	r1
      000047 A7 05            [24]  153 	mov	@r1,ar5
      000049 09               [12]  154 	inc	r1
      00004A A7 06            [24]  155 	mov	@r1,ar6
      00004C 09               [12]  156 	inc	r1
      00004D A7 07            [24]  157 	mov	@r1,ar7
                                    158 ;	ldiv.c:36: ret.rem = numer % denom;
      00004F E5*00            [12]  159 	mov	a,_bp
      000051 04               [12]  160 	inc	a
      000052 24 04            [12]  161 	add	a,#0x04
      000054 F9               [12]  162 	mov	r1,a
      000055 C0 01            [24]  163 	push	ar1
      000057 E5*00            [12]  164 	mov	a,_bp
      000059 24 F3            [12]  165 	add	a,#0xf3
      00005B F8               [12]  166 	mov	r0,a
      00005C E6               [12]  167 	mov	a,@r0
      00005D C0 E0            [24]  168 	push	acc
      00005F 08               [12]  169 	inc	r0
      000060 E6               [12]  170 	mov	a,@r0
      000061 C0 E0            [24]  171 	push	acc
      000063 08               [12]  172 	inc	r0
      000064 E6               [12]  173 	mov	a,@r0
      000065 C0 E0            [24]  174 	push	acc
      000067 08               [12]  175 	inc	r0
      000068 E6               [12]  176 	mov	a,@r0
      000069 C0 E0            [24]  177 	push	acc
      00006B E5*00            [12]  178 	mov	a,_bp
      00006D 24 F7            [12]  179 	add	a,#0xf7
      00006F F8               [12]  180 	mov	r0,a
      000070 86 82            [24]  181 	mov	dpl,@r0
      000072 08               [12]  182 	inc	r0
      000073 86 83            [24]  183 	mov	dph,@r0
      000075 08               [12]  184 	inc	r0
      000076 86 F0            [24]  185 	mov	b,@r0
      000078 08               [12]  186 	inc	r0
      000079 E6               [12]  187 	mov	a,@r0
      00007A 12r00r00         [24]  188 	lcall	__modslong
      00007D AC 82            [24]  189 	mov	r4,dpl
      00007F AD 83            [24]  190 	mov	r5,dph
      000081 AE F0            [24]  191 	mov	r6,b
      000083 FF               [12]  192 	mov	r7,a
      000084 E5 81            [12]  193 	mov	a,sp
      000086 24 FC            [12]  194 	add	a,#0xfc
      000088 F5 81            [12]  195 	mov	sp,a
      00008A D0 01            [24]  196 	pop	ar1
      00008C A7 04            [24]  197 	mov	@r1,ar4
      00008E 09               [12]  198 	inc	r1
      00008F A7 05            [24]  199 	mov	@r1,ar5
      000091 09               [12]  200 	inc	r1
      000092 A7 06            [24]  201 	mov	@r1,ar6
      000094 09               [12]  202 	inc	r1
      000095 A7 07            [24]  203 	mov	@r1,ar7
                                    204 ;	ldiv.c:37: return(ret);
      000097 A8*00            [24]  205 	mov	r0,_bp
      000099 08               [12]  206 	inc	r0
      00009A E5 81            [12]  207 	mov	a,sp
      00009C 24 F3            [12]  208 	add	a,#0xf3
      00009E F9               [12]  209 	mov	r1,a
      00009F 87 82            [24]  210 	mov	dpl,@r1
      0000A1 09               [12]  211 	inc	r1
      0000A2 87 83            [24]  212 	mov	dph,@r1
      0000A4 09               [12]  213 	inc	r1
      0000A5 87 F0            [24]  214 	mov	b,@r1
      0000A7 E6               [12]  215 	mov	a,@r0
      0000A8 12r00r00         [24]  216 	lcall	__gptrput
      0000AB A3               [24]  217 	inc	dptr
      0000AC 08               [12]  218 	inc	r0
      0000AD E6               [12]  219 	mov	a,@r0
      0000AE 12r00r00         [24]  220 	lcall	__gptrput
      0000B1 A3               [24]  221 	inc	dptr
      0000B2 08               [12]  222 	inc	r0
      0000B3 E6               [12]  223 	mov	a,@r0
      0000B4 12r00r00         [24]  224 	lcall	__gptrput
      0000B7 A3               [24]  225 	inc	dptr
      0000B8 08               [12]  226 	inc	r0
      0000B9 E6               [12]  227 	mov	a,@r0
      0000BA 12r00r00         [24]  228 	lcall	__gptrput
      0000BD A3               [24]  229 	inc	dptr
      0000BE 08               [12]  230 	inc	r0
      0000BF E6               [12]  231 	mov	a,@r0
      0000C0 12r00r00         [24]  232 	lcall	__gptrput
      0000C3 A3               [24]  233 	inc	dptr
      0000C4 08               [12]  234 	inc	r0
      0000C5 E6               [12]  235 	mov	a,@r0
      0000C6 12r00r00         [24]  236 	lcall	__gptrput
      0000C9 A3               [24]  237 	inc	dptr
      0000CA 08               [12]  238 	inc	r0
      0000CB E6               [12]  239 	mov	a,@r0
      0000CC 12r00r00         [24]  240 	lcall	__gptrput
      0000CF A3               [24]  241 	inc	dptr
      0000D0 08               [12]  242 	inc	r0
      0000D1 E6               [12]  243 	mov	a,@r0
      0000D2 12r00r00         [24]  244 	lcall	__gptrput
                                    245 ;	ldiv.c:38: }
      0000D5 85*00 81         [24]  246 	mov	sp,_bp
      0000D8 D0*00            [24]  247 	pop	_bp
      0000DA 22               [24]  248 	ret
                                    249 	.area CSEG    (CODE)
                                    250 	.area CONST   (CODE)
                                    251 	.area XINIT   (CODE)
                                    252 	.area CABS    (ABS,CODE)
