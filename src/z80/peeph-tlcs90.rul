/* Generated file, DO NOT Edit!  */
/* To Make changes to rules edit */
/* <port>/peeph.def instead.     */
"\n"
"replace restart {\n"
"	ld	%1, %7\n"
"	ld	%5 (%6), %4\n"
"	ld	%2 (%3), %1\n"
"} by {\n"
"	ld	%5 (%6), %4\n"
"	; peephole 13 loaded %7 into %2 (%3) directly instead of going through %1.\n"
"	ld	%2 (%3), %7\n"
"} if canAssign(%2 %3 %7), notVolatile(%1), notUsed(%1), notSame(%1 %4 %1 'hl')\n"
"\n"
"replace restart {\n"
"	ld	iy, #%1+1\n"
"	ld	a, 1 (iy)\n"
"	or	a, 0 (iy)\n"
"} by {\n"
"	ld	hl, #%1\n"
"	ld	a, (hl)\n"
"	dec	hl\n"
"	or	a, (hl)\n"
"	; peephole 52 used hl instead of iy.\n"
"} if notUsed('iy'), notUsed('hl')\n"
"\n"
"replace restart {\n"
"	add	hl, hl\n"
"	ld	e, l\n"
"	ld	d, h\n"
"	inc	de\n"
"	inc	de\n"
"} by {\n"
"	inc	hl\n"
"	; peephole 59 incremented once in hl instead of incrementing in de twice.\n"
"	add	hl, hl\n"
"	ld	e, l\n"
"	ld	d, h\n"
"} if notUsed('hl')\n"
"\n"
"replace restart {\n"
"	add	hl, hl\n"
"	inc	hl\n"
"	inc	hl\n"
"} by {\n"
"	inc	hl\n"
"	; peephole 60 incremented once in hl instead of incrementing in hl twice.\n"
"	add	hl, hl\n"
"}\n"
"\n"
"replace restart {\n"
"	add	a, a\n"
"	add	a, a\n"
"	add	a, #0x04\n"
"} by {\n"
"	inc	a\n"
"	; peephole 61 incremented a once instead of adding #0x04 to a.\n"
"	add	a, a\n"
"	add	a, a\n"
"}\n"
"\n"
"replace restart {\n"
"	add	hl, hl\n"
"	pop	de\n"
"	inc	hl\n"
"	inc	hl\n"
"} by {\n"
"	inc	hl\n"
"	; peephole 62 incremented once in hl instead of incrementing in hl twice.\n"
"	add	hl, hl\n"
"	pop	de\n"
"}\n"
"\n"
"replace {\n"
"	ld	e,#0x%1\n"
"	ld	d,#0x%2\n"
"} by {\n"
"	ld	de,#0x%2%1\n"
"	; peephole 78 combined constant loads into register pair.\n"
"}\n"
"\n"
"replace {\n"
"	ld	d,#0x%1\n"
"	ld	e,#0x%2\n"
"} by {\n"
"	ld	de,#0x%1%2\n"
"	; peephole 79 combined constant loads into register pair.\n"
"}\n"
"\n"
"replace {\n"
"	ld	l,#0x%1\n"
"	ld	h,#0x%2\n"
"} by {\n"
"	ld	hl,#0x%2%1\n"
"	; peephole 80 combined constant loads into register pair.\n"
"}\n"
"\n"
"replace {\n"
"	ld	h,#0x%1\n"
"	ld	l,#0x%2\n"
"} by {\n"
"	ld	hl,#0x%1%2\n"
"	; peephole 81 combined constant loads into register pair.\n"
"}\n"
"\n"
"replace {\n"
"	ld	c,#0x%1\n"
"	ld	b,#0x%2\n"
"} by {\n"
"	ld	bc,#0x%2%1\n"
"	; peephole 82 combined constant loads into register pair.\n"
"}\n"
"\n"
"replace {\n"
"	ld	b,#0x%1\n"
"	ld	c,#0x%2\n"
"} by {\n"
"	ld	bc,#0x%1%2\n"
"	; peephole 83 combined constant loads into register pair.\n"
"}\n"
"\n"
"replace restart {\n"
"	ld	%1, a\n"
"	ld	a, %2 (%3)\n"
"	adc	a, #%4\n"
"	ld	%5, a\n"
"	ld	%6, %1\n"
"} by {\n"
"	ld	%6, a\n"
"	ld	a, %2 (%3)\n"
"	adc	a, #%4\n"
"	ld	%5, a\n"
"	; peephole 110 loaded %6 from a directly instead of going through %1.\n"
"} if notUsed(%1), notSame(%5 %1), notSame(%5 '(hl)' '(de)' '(bc)'), notSame(%5 %6), notSame(%6 '(hl)' '(de)' '(bc)'), notSame(%5 'a'), notSame(%6 'a')\n"
