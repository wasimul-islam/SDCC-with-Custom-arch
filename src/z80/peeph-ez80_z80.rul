/* Generated file, DO NOT Edit!  */
/* To Make changes to rules edit */
/* <port>/peeph.def instead.     */
"\n"
"replace {\n"
"	inc	%1\n"
"	inc	%1\n"
"} by {\n"
"	;peephole ez80-1: replace 2 increments of index register by one LEA instruction\n"
"	lea	%1, %1, #+2\n"
"} if canAssign('d' '0' %1)\n"
"\n"
"replace {\n"
"	lea	%1, %2, #%3\n"
"	inc	%1\n"
"} by {\n"
"	lea	%1, %2, #%4\n"
"	;peephole ez80-2: replace decrement by decreased index of LEA instruction\n"
"} if immdInRange(-128 127 '+' %3 1 %4)\n"
"\n"
"replace {\n"
"	dec	%1\n"
"	dec	%1\n"
"} by {\n"
"	;peephole ez80-3: replace 2 decrements of index register by one LEA instruction\n"
"	lea	%1, %1, #-2\n"
"} if canAssign('e' '0' %1)\n"
"\n"
"replace {\n"
"	lea	%1, %2, #%3\n"
"	dec	%1\n"
"} by {\n"
"	lea	%1, %2, #%4\n"
"	;peephole ez80-4: replace increment by incremented index of LEA instruction\n"
"} if immdInRange(-128 127 '-' %3 1 %4)\n"
"\n"
"replace restart {\n"
"	ld      %3, %4 (%1)\n"
"	ld      %2, %5 (%1)\n"
"} by {\n"
"	;eZ80 peephole 5: replace 2 8-bit indirect loads to register pair by one 16-bit\n"
"	ld      %6, %4 (%1)\n"
"} if canJoinRegs(%2 %3 %6), immdInRange(-128 127 '+' %4 1 %7), same(%5 %7)\n"
"\n"
"replace restart {\n"
"	ld	a, (hl)\n"
"	inc	hl\n"
"	ld	h, (hl)\n"
"	ld	l, a\n"
"} by {\n"
"	;eZ80 peephole 6: replace Z80 style load to HL from memory addressed by HL itself\n"
"	ld	hl, (hl)\n"
"} if notUsed('a')\n"
"\n"
"replace restart {\n"
"	ld	%2, (hl)\n"
"	inc	hl\n"
"	ld	%1, (hl)\n"
"} by {\n"
"	;eZ80 peephole 7: replace Z80 style load to register pair from memory addressed by HL\n"
"	ld	%3, (hl)\n"
"	inc	hl\n"
"} if canJoinRegs(%1 %2 %3)\n"
"\n"
"replace restart {\n"
"	ld	%4 (%1), %3\n"
"	ld	%5 (%1), %2\n"
"} by {\n"
"	;eZ80 peephole 8: replace 2 8-bit indirect register pair stores by one 16-bit\n"
"	ld	%4 (%1), %6\n"
"} if canJoinRegs(%2 %3 %6), immdInRange(-128 127 '+' %4 1 %7), same(%5 %7)\n"
"\n"
"replace restart {\n"
"	ld	a, %1 (%2)\n"
"	ld	%3 (%4), a\n"
"	ld	a, %5 (%2)\n"
"	ld	%6 (%4), a\n"
"} by {\n"
"	;eZ80 peephole 9hl: replace byte copy by word copy\n"
"	ld	hl, %1 (%2)\n"
"	ld	%3 (%4), hl\n"
"	ld	a, h\n"
"} if notUsed('hl'), immdInRange(-128 127 '+' %1 1 %7), same(%5 %7), immdInRange(-128 127 '+' %3 1 %8), same(%6 %8)\n"
"\n"
"replace restart {\n"
"	ld	a, %1 (%2)\n"
"	ld	%3 (%4), a\n"
"	ld	a, %5 (%2)\n"
"	ld	%6 (%4), a\n"
"} by {\n"
"	;eZ80 peephole 9de: replace byte copy by word copy\n"
"	ld	de, %1 (%2)\n"
"	ld	%3 (%4), de\n"
"	ld	a, d\n"
"} if notUsed('de'), immdInRange(-128 127 '+' %1 1 %7), same(%5 %7), immdInRange(-128 127 '+' %3 1 %8), same(%6 %8)\n"
"\n"
"barrier\n"
