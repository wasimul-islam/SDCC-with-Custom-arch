/* Generated file, DO NOT Edit!  */
/* To Make changes to rules edit */
/* <port>/peeph.def instead.     */
"\n"
"\n"
"replace restart {\n"
"        xch  a,%1\n"
"        xch  a,%1\n"
"} by {\n"
"        ; Peephole 2.a   removed redundant xch xch\n"
"}\n"
"\n"
"replace restart {\n"
"        mov  %1,#0x00\n"
"        mov  a,#0x00\n"
"} by {\n"
"        ; Peephole 3.a   changed mov to clr\n"
"        clr  a\n"
"        mov  %1,a\n"
"}\n"
"\n"
"replace restart {\n"
"        mov  %1,#0x00\n"
"        clr  a\n"
"} by {\n"
"        ; Peephole 3.b   changed mov to clr\n"
"        clr  a\n"
"        mov  %1,a\n"
"}\n"
"\n"
"replace restart {\n"
"        mov  %1,#0x00\n"
"        mov  %2,#0x00\n"
"        mov  a,%3\n"
"} by {\n"
"        ; Peephole 3.c   changed mov to clr\n"
"        clr  a\n"
"        mov  %1,a\n"
"        mov  %2,a\n"
"        mov  a,%3\n"
"}\n"
"\n"
"replace restart {\n"
"	mov	a,#0\n"
"} by {\n"
"        ; Peephole 3.d   changed mov to clr\n"
"	clr	a\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        mov  dptr,#%2\n"
"        mov  a,%1\n"
"        movx @dptr,a\n"
"} by {\n"
"        ; Peephole 100   removed redundant mov\n"
"        mov  %1,a\n"
"        mov  dptr,#%2\n"
"        movx @dptr,a\n"
"}\n"
"\n"
"replace {\n"
"	mov  a,acc\n"
"} by {\n"
"	;  Peephole 100.a   removed redundant mov\n"
"}\n"
"\n"
"replace {\n"
"        mov  a,%1\n"
"        movx @dptr,a\n"
"        inc  dptr\n"
"        mov  a,%1\n"
"        movx @dptr,a\n"
"} by {\n"
"        ; Peephole 101   removed redundant mov\n"
"        mov  a,%1\n"
"        movx @dptr,a\n"
"        inc  dptr\n"
"        movx @dptr,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,%2\n"
"        ljmp %3\n"
"%4:\n"
"        mov  %1,%5\n"
"%3:\n"
"        mov  dpl,%1\n"
"%7:\n"
"        mov  sp,bp\n"
"        pop  bp\n"
"} by {\n"
"        ; Peephole 102   removed redundant mov\n"
"        mov  dpl,%2\n"
"        ljmp %3\n"
"%4:\n"
"        mov  dpl,%5\n"
"%3:\n"
"%7:\n"
"        mov  sp,bp\n"
"        pop  bp\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,%2\n"
"        ljmp %3\n"
"%4:\n"
"        mov  a%1,%5\n"
"%3:\n"
"        mov  dpl,%1\n"
"%7:\n"
"        mov  sp,bp\n"
"        pop  bp\n"
"} by {\n"
"        ; Peephole 103   removed redundant mov\n"
"        mov  dpl,%2\n"
"        ljmp %3\n"
"%4:\n"
"        mov  dpl,%5\n"
"%3:\n"
"%7:\n"
"        mov  sp,bp\n"
"        pop  bp\n"
"}\n"
"\n"
"replace {\n"
"        mov  a,bp\n"
"        clr  c\n"
"        add  a,#0x01\n"
"        mov  r%1,a\n"
"} by {\n"
"        ; Peephole 104   optimized increment (acc not set to r%1, flags undefined)\n"
"        mov  r%1,bp\n"
"        inc  r%1\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        mov  a,%1\n"
"} by {\n"
"        ; Peephole 105   removed redundant mov\n"
"        mov  %1,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        clr  c\n"
"        mov  a,%1\n"
"} by {\n"
"        ; Peephole 106   removed redundant mov\n"
"        mov  %1,a\n"
"        clr  c\n"
"}\n"
"\n"
"replace {\n"
"        ljmp %1\n"
"%1:\n"
"} by {\n"
"        ; Peephole 107   removed redundant ljmp\n"
"%1:\n"
"}\n"
"\n"
"replace {\n"
"        jc   %1\n"
"        ljmp %5\n"
"%1:\n"
"} by {\n"
"        ; Peephole 108   removed ljmp by inverse jump logic\n"
"        jnc  %5\n"
"%1:\n"
"} if labelInRange(%5)\n"
"\n"
"replace {\n"
"        jz   %1\n"
"        ljmp %5\n"
"%1:\n"
"} by {\n"
"        ; Peephole 109   removed ljmp by inverse jump logic\n"
"        jnz  %5\n"
"%1:\n"
"} if labelInRange(%5)\n"
"\n"
"replace {\n"
"        jnz  %1\n"
"        ljmp %5\n"
"%1:\n"
"} by {\n"
"        ; Peephole 110   removed ljmp by inverse jump logic\n"
"        jz  %5\n"
"%1:\n"
"} if labelInRange(%5)\n"
"\n"
"replace {\n"
"        jb   %1,%2\n"
"        ljmp %5\n"
"%2:\n"
"} by {\n"
"        ; Peephole 111   removed ljmp by inverse jump logic\n"
"        jnb  %1,%5\n"
"%2:\n"
"} if labelInRange(%5)\n"
"\n"
"replace {\n"
"        jnb  %1,%2\n"
"        ljmp %5\n"
"%2:\n"
"} by {\n"
"       ; Peephole 112   removed ljmp by inverse jump logic\n"
"        jb   %1,%5\n"
"%2:\n"
"} if labelInRange(%5)\n"
"\n"
"replace {\n"
"        ljmp %5\n"
"%1:\n"
"} by {\n"
"        ; Peephole 132   changed ljmp to sjmp\n"
"        sjmp %5\n"
"%1:\n"
"} if labelInRange(%5)\n"
"\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cpl  a\n"
"%3:\n"
"        rrc  a\n"
"        mov  %4,c\n"
"} by {\n"
"        ; Peephole 113   optimized misc sequence\n"
"        clr  %4\n"
"        cjne %1,%2,%3\n"
"        setb %4\n"
"%3:\n"
"} if labelRefCount %3 1\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        cpl  a\n"
"%3:\n"
"        rrc  a\n"
"        mov  %4,c\n"
"} by {\n"
"        ; Peephole 114   optimized misc sequence\n"
"        clr  %4\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        setb %4\n"
"%3:\n"
"} if labelRefCount %3 2\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cpl  a\n"
"%3:\n"
"        jnz  %4\n"
"} by {\n"
"        ; Peephole 115   jump optimization\n"
"        cjne %1,%2,%3\n"
"        sjmp %4\n"
"%3:\n"
"} if labelRefCount %3 1\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cjne %9,%10,%3\n"
"        cpl  a\n"
"%3:\n"
"        jnz  %4\n"
"} by {\n"
"        ; Peephole 116   jump optimization\n"
"        cjne %1,%2,%3\n"
"        cjne %9,%10,%3\n"
"        sjmp %4\n"
"%3:\n"
"} if labelRefCount %3 2\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cjne %9,%10,%3\n"
"        cjne %11,%12,%3\n"
"        cpl  a\n"
"%3:\n"
"        jnz %4\n"
"} by {\n"
"        ; Peephole 117   jump optimization\n"
"        cjne %1,%2,%3\n"
"        cjne %9,%10,%3\n"
"        cjne %11,%12,%3\n"
"        sjmp %4\n"
"%3:\n"
"} if labelRefCount %3 3\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cjne %9,%10,%3\n"
"        cjne %11,%12,%3\n"
"        cjne %13,%14,%3\n"
"        cpl  a\n"
"%3:\n"
"        jnz %4\n"
"} by {\n"
"        ; Peephole 118   jump optimization\n"
"        cjne %1,%2,%3\n"
"        cjne %9,%10,%3\n"
"        cjne %11,%12,%3\n"
"        cjne %13,%14,%3\n"
"        sjmp %4\n"
"%3:\n"
"} if labelRefCount %3 4\n"
"\n"
"replace {\n"
"        mov  a,#0x01\n"
"        cjne %1,%2,%3\n"
"        clr  a\n"
"%3:\n"
"        jnz  %4\n"
"} by {\n"
"        ; Peephole 119   jump optimization\n"
"        cjne %1,%2,%4\n"
"%3:\n"
"} if labelRefCount %3 1\n"
"\n"
"replace {\n"
"        mov  a,#0x01\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        clr  a\n"
"%3:\n"
"        jnz  %4\n"
"} by {\n"
"        ; Peephole 120   jump optimization\n"
"        cjne %1,%2,%4\n"
"        cjne %10,%11,%4\n"
"%3:\n"
"} if labelRefCount %3 2\n"
"\n"
"replace {\n"
"        mov  a,#0x01\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        cjne %12,%13,%3\n"
"        clr  a\n"
"%3:\n"
"        jnz  %4\n"
"} by {\n"
"        ; Peephole 121   jump optimization\n"
"        cjne %1,%2,%4\n"
"        cjne %10,%11,%4\n"
"        cjne %12,%13,%4\n"
"%3:\n"
"} if labelRefCount %3 3\n"
"\n"
"replace {\n"
"        mov  a,#0x01\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        cjne %12,%13,%3\n"
"        cjne %14,%15,%3\n"
"        clr  a\n"
"%3:\n"
"        jnz  %4\n"
"} by {\n"
"        ; Peephole 122   jump optimization\n"
"        cjne %1,%2,%4\n"
"        cjne %10,%11,%4\n"
"        cjne %12,%13,%4\n"
"        cjne %14,%15,%4\n"
"%3:\n"
"} if labelRefCount %3 4\n"
"\n"
"replace {\n"
"        mov  a,#0x01\n"
"        cjne %1,%2,%3\n"
"        clr  a\n"
"%3:\n"
"        jz   %4\n"
"} by {\n"
"        ; Peephole 123   jump optimization\n"
"        cjne %1,%2,%3\n"
"        smp  %4\n"
"%3:\n"
"} if labelRefCount %3 1\n"
"\n"
"replace {\n"
"        mov  a,#0x01\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        clr  a\n"
"%3:\n"
"        jz   %4\n"
"} by {\n"
"        ; Peephole 124   jump optimization\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        sjmp  %4\n"
"%3:\n"
"} if labelRefCount %3 2\n"
"\n"
"replace {\n"
"        mov  a,#0x01\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        cjne %12,%13,%3\n"
"        clr  a\n"
"%3:\n"
"        jz   %4\n"
"} by {\n"
"        ; Peephole 125   jump optimization\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        cjne %12,%13,%3\n"
"        sjmp %4\n"
"%3:\n"
"} if labelRefCount %3 3\n"
"\n"
"replace {\n"
"        mov  a,#0x01\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        cjne %12,%13,%3\n"
"        cjne %14,%15,%3\n"
"        clr  a\n"
"%3:\n"
"        jz   %4\n"
"} by {\n"
"        ; Peephole 126   jump optimization\n"
"        cjne %1,%2,%3\n"
"        cjne %10,%11,%3\n"
"        cjne %12,%13,%3\n"
"        cjne %14,%15,%3\n"
"        sjmp %4\n"
"%3:\n"
"} if labelRefCount %3 4\n"
"\n"
"replace {\n"
"        push psw\n"
"        mov  psw,%1\n"
"        push bp\n"
"        mov  bp,%2\n"
"%3:\n"
"        mov  %2,bp\n"
"        pop  bp\n"
"        pop  psw\n"
"        ret\n"
"} by {\n"
"        ; Peephole 127   removed misc sequence\n"
"        ret\n"
"} if labelRefCount %3 0\n"
"\n"
"replace {\n"
"        clr  a\n"
"        rlc  a\n"
"        jz   %1\n"
"} by {\n"
"        ; Peephole 128   jump optimization\n"
"        jnc  %1\n"
"}\n"
"\n"
"replace {\n"
"        clr  a\n"
"        rlc  a\n"
"        jnz  %1\n"
"} by {\n"
"        ; Peephole 129   jump optimization\n"
"        jc   %1\n"
"}\n"
"\n"
"replace {\n"
"        mov  r%1,@r%2\n"
"} by {\n"
"        ; Peephole 130   changed target address mode r%1 to ar%1\n"
"        mov  ar%1,@r%2\n"
"}\n"
"\n"
"replace {\n"
"        mov  a,%1\n"
"        subb a,#0x01\n"
"        mov  %2,a\n"
"        mov  %1,%2\n"
"} by {\n"
"        ; Peephole 131   optimized decrement (not caring for c)\n"
"        dec  %1\n"
"        mov  %2,%1\n"
"}\n"
"\n"
"replace {\n"
"        mov  r%1,%2\n"
"        mov  ar%3,@r%1\n"
"        inc  r%3\n"
"        mov  r%4,%2\n"
"        mov  @r%4,ar%3\n"
"} by {\n"
"        ; Peephole 133   removed redundant moves\n"
"        mov  r%1,%2\n"
"        inc  @r%1\n"
"        mov  ar%3,@r%1\n"
"}\n"
"\n"
"replace {\n"
"        mov  r%1,%2\n"
"        mov  ar%3,@r%1\n"
"        dec  r%3\n"
"        mov  r%4,%2\n"
"        mov  @r%4,ar%3\n"
"} by {\n"
"        ; Peephole 134   removed redundant moves\n"
"        mov  r%1,%2\n"
"        dec  @r%1\n"
"        mov  ar%3,@r%1\n"
"}\n"
"\n"
"replace {\n"
"        mov  r%1,a\n"
"        mov  a,r%2\n"
"        orl  a,r%1\n"
"} by {\n"
"        ; Peephole 135   removed redundant mov\n"
"        mov  r%1,a\n"
"        orl  a,r%2\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        mov  dpl,%2\n"
"        mov  dph,%3\n"
"	mov  dpx,%4\n"
"        mov  a,%1\n"
"} by {\n"
"        ; Peephole 136a   removed redundant moves\n"
"        mov  %1,a\n"
"        mov  dpl,%2\n"
"        mov  dph,%3\n"
"	mov  dpx,%4\n"
"} if 24bitMode\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        mov  dpl,%2\n"
"        mov  dph,%3\n"
"        mov  a,%1\n"
"} by {\n"
"        ; Peephole 136   removed redundant moves\n"
"        mov  %1,a\n"
"        mov  dpl,%2\n"
"        mov  dph,%3\n"
"}\n"
"\n"
"\n"
"replace {\n"
"        mov  r%1,a\n"
"        anl  ar%1,%2\n"
"        mov  a,r%1\n"
"} by {\n"
"        ; Peephole 139   removed redundant mov\n"
"        anl  a,%2\n"
"        mov  r%1,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  r%1,a\n"
"        orl  ar%1,%2\n"
"        mov  a,r%1\n"
"} by {\n"
"        ; Peephole 140   removed redundant mov\n"
"        orl  a,%2\n"
"        mov  r%1,a }\n"
"\n"
"replace {\n"
"        mov  r%1,a\n"
"        xrl  ar%1,%2\n"
"        mov  a,r%1\n"
"} by {\n"
"        ; Peephole 141   removed redundant mov\n"
"        xrl  a,%2\n"
"        mov  r%1,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  r%1,a\n"
"        mov  r%2,ar%1\n"
"        mov  ar%1,@r%2\n"
"} by {\n"
"        ; Peephole 142   removed redundant moves\n"
"        mov  r%2,a\n"
"        mov  ar%1,@r%2\n"
"}\n"
"\n"
"replace {\n"
"        rlc  a\n"
"        mov  acc.0,c\n"
"} by {\n"
"        ; Peephole 143   converted rlc to rl\n"
"        rl   a\n"
"}\n"
"\n"
"replace {\n"
"        rrc  a\n"
"        mov  acc.7,c\n"
"} by {\n"
"        ; Peephole 144   converted rrc to rc\n"
"        rr   a\n"
"}\n"
"\n"
"replace {\n"
"        clr  c\n"
"        addc a,%1\n"
"} by {\n"
"        ; Peephole 145   changed to add without carry\n"
"        add  a,%1\n"
"}\n"
"\n"
"replace {\n"
"        clr  c\n"
"        mov  a,%1\n"
"        addc a,%2\n"
"} by {\n"
"        ; Peephole 146   changed to add without carry\n"
"        mov  a,%1\n"
"        add  a,%2\n"
"}\n"
"\n"
"replace {\n"
"        orl  r%1,a\n"
"} by {\n"
"        ; Peephole 147   changed target address mode r%1 to ar%1\n"
"        orl  ar%1,a\n"
"}\n"
"\n"
"replace {\n"
"        anl  r%1,a\n"
"} by {\n"
"        ; Peephole 148   changed target address mode r%1 to ar%1\n"
"        anl  ar%1,a\n"
"}\n"
"\n"
"replace {\n"
"        xrl  r%1,a\n"
"} by {\n"
"        ; Peephole 149   changed target address mode r%1 to ar%1\n"
"        xrl  ar%1,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,dpl\n"
"        mov  dpl,%1\n"
"%9:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 150   removed misc moves via dpl before return\n"
"%9:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,dpl\n"
"        mov  %2,dph\n"
"        mov  dpl,%1\n"
"        mov  dph,%2\n"
"%9:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 151   removed misc moves via dph, dpl before return\n"
"%9:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,dpl\n"
"        mov  %2,dph\n"
"        mov  dpl,%1\n"
"%9:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 152   removed misc moves via dph, dpl before return\n"
"%9:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,dpl\n"
"        mov  %2,dph\n"
"        mov  %3,b\n"
"        mov  dpl,%1\n"
"        mov  dph,%2\n"
"        mov  b,%3\n"
"%9:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 153   removed misc moves via dph, dpl, b before return\n"
"%9:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,dpl\n"
"        mov  %2,dph\n"
"        mov  %3,b\n"
"        mov  dpl,%1\n"
"%9:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 154   removed misc moves via dph, dpl, b before return\n"
"%9:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,dpl\n"
"        mov  %2,dph\n"
"        mov  %3,b\n"
"        mov  dpl,%1\n"
"        mov  dph,%2\n"
"%9:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 155   removed misc moves via dph, dpl, b before return\n"
"%9:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,dpl\n"
"        mov  %2,dph\n"
"        mov  %3,b\n"
"        mov  %4,a\n"
"        mov  dpl,%1\n"
"        mov  dph,%2\n"
"        mov  b,%3\n"
"        mov  a,%4\n"
"%9:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 156   removed misc moves via dph, dpl, b, a before return\n"
"%9:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,dpl\n"
"        mov  %2,dph\n"
"        mov  %3,b\n"
"        mov  %4,a\n"
"        mov  dpl,%1\n"
"        mov  dph,%2\n"
"%9:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 157   removed misc moves via dph, dpl, b, a before return\n"
"%9:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,dpl\n"
"        mov  %2,dph\n"
"        mov  %3,b\n"
"        mov  %4,a\n"
"        mov  dpl,%1\n"
"%9:\n"
"        ret } by {\n"
"        ; Peephole 158   removed misc moves via dph, dpl, b, a before return\n"
"%9:\n"
"        ret }\n"
"\n"
"replace {\n"
"        mov  %1,#%2\n"
"        xrl  %1,#0x80\n"
"} by {\n"
"        ; Peephole 159   avoided xrl during execution\n"
"        mov  %1,#(%2 ^ 0x80)\n"
"}\n"
"\n"
"replace {\n"
"        jnc  %1\n"
"        sjmp %2\n"
"%1:\n"
"} by {\n"
"        ; Peephole 160   removed sjmp by inverse jump logic\n"
"        jc   %2\n"
"%1:}\n"
"\n"
"replace {\n"
"        jc   %1\n"
"        sjmp %2\n"
"%1:\n"
"} by {\n"
"        ; Peephole 161   removed sjmp by inverse jump logic\n"
"        jnc  %2\n"
"%1:}\n"
"\n"
"replace {\n"
"        jnz  %1\n"
"        sjmp %2\n"
"%1:\n"
"} by {\n"
"        ; Peephole 162   removed sjmp by inverse jump logic\n"
"        jz   %2\n"
"%1:}\n"
"\n"
"replace {\n"
"        jz   %1\n"
"        sjmp %2\n"
"%1:\n"
"} by {\n"
"        ; Peephole 163   removed sjmp by inverse jump logic\n"
"        jnz  %2\n"
"%1:}\n"
"\n"
"replace {\n"
"        jnb  %3,%1\n"
"        sjmp %2\n"
"%1:\n"
"} by {\n"
"        ; Peephole 164   removed sjmp by inverse jump logic\n"
"        jb   %3,%2\n"
"%1:\n"
"}\n"
"\n"
"replace {\n"
"        jb   %3,%1\n"
"        sjmp %2\n"
"%1:\n"
"} by {\n"
"        ; Peephole 165   removed sjmp by inverse jump logic\n"
"        jnb  %3,%2\n"
"%1:\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,%2\n"
"        mov  %3,%1\n"
"        mov  %2,%1\n"
"} by {\n"
"        ; Peephole 166   removed redundant mov\n"
"        mov  %1,%2\n"
"        mov  %3,%1 }\n"
"\n"
"replace {\n"
"        mov  c,%1\n"
"        cpl  c\n"
"        mov  %1,c\n"
"} by {\n"
"        ; Peephole 167   removed redundant bit moves (c not set to %1)\n"
"        cpl  %1 }\n"
"\n"
"replace {\n"
"        jnb  %1,%2\n"
"        sjmp %3\n"
"%2:} by {\n"
"        ; Peephole 168   jump optimization\n"
"        jb   %1,%3\n"
"%2:}\n"
"\n"
"replace {\n"
"        jb   %1,%2\n"
"        sjmp %3\n"
"%2:} by {\n"
"        ; Peephole 169   jump optimization\n"
"        jnb  %1,%3\n"
"%2:}\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cpl  a\n"
"%3:\n"
"        jz   %4\n"
"} by {\n"
"        ; Peephole 170   jump optimization\n"
"        cjne %1,%2,%4\n"
"%3:\n"
"} if labelRefCount %3 1\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cjne %9,%10,%3\n"
"        cpl  a\n"
"%3:\n"
"        jz   %4\n"
"} by {\n"
"        ; Peephole 171   jump optimization\n"
"        cjne %1,%2,%4\n"
"        cjne %9,%10,%4\n"
"%3:\n"
"} if labelRefCount %3 2\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cjne %9,%10,%3\n"
"        cjne %11,%12,%3\n"
"        cpl  a\n"
"%3:\n"
"        jz   %4\n"
"} by {\n"
"        ; Peephole 172   jump optimization\n"
"        cjne %1,%2,%4\n"
"        cjne %9,%10,%4\n"
"        cjne %11,%12,%4\n"
"%3:\n"
"} if labelRefCount %3 3\n"
"\n"
"replace {\n"
"        clr  a\n"
"        cjne %1,%2,%3\n"
"        cjne %9,%10,%3\n"
"        cjne %11,%12,%3\n"
"        cjne %13,%14,%3\n"
"        cpl  a\n"
"%3:\n"
"        jz   %4\n"
"} by {\n"
"        ; Peephole 173   jump optimization\n"
"        cjne %1,%2,%4\n"
"        cjne %9,%10,%4\n"
"        cjne %11,%12,%4\n"
"        cjne %13,%14,%4\n"
"%3:\n"
"} if labelRefCount %3 4\n"
"\n"
"replace {\n"
"        mov  r%1,%2\n"
"        clr  c\n"
"        mov  a,r%1\n"
"        subb a,#0x01\n"
"        mov  %2,a\n"
"} by {\n"
"        ; Peephole 174   optimized decrement (acc not set to %2, flags undefined)\n"
"        mov  r%1,%2\n"
"        dec  %2\n"
"}\n"
"\n"
"\n"
"replace {\n"
"        mov  r%1,%2\n"
"        mov  a,r%1\n"
"        add  a,#0x01\n"
"        mov  %2,a\n"
"} by {\n"
"        ; Peephole 175   optimized increment (acc not set to %2, flags undefined)\n"
"        mov  r%1,%2\n"
"        inc  %2\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,@r%2\n"
"        inc  %1\n"
"        mov  @r%2,%1\n"
"} by {\n"
"        ; Peephole 176   optimized increment, removed redundant mov\n"
"        inc  @r%2\n"
"        mov  %1,@r%2\n"
"}\n"
"\n"
"\n"
"replace {\n"
"        mov  a,%1\n"
"        mov  b,a\n"
"        mov  a,%2\n"
"} by {\n"
"        ; Peephole 178   removed redundant mov\n"
"        mov  b,%1\n"
"        mov  a,%2\n"
"}\n"
"\n"
"replace {\n"
"        mov  b,#0x00\n"
"        mov  a,#0x00\n"
"} by {\n"
"        ; Peephole 179   changed mov to clr\n"
"        clr  a\n"
"        mov  b,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  a,#0x00\n"
"} by {\n"
"        ; Peephole 180   changed mov to clr\n"
"        clr  a\n"
"}\n"
"\n"
"replace {\n"
"        mov  dpl,#0x00\n"
"        mov  dph,#0x00\n"
" 	mov  dpx,#0x00\n"
"} by {\n"
"        ; Peephole 181a   used 24 bit load of dptr\n"
"        mov  dptr,#0x0000\n"
"} if 24bitMode\n"
"\n"
"replace {\n"
"        mov  dpl,#0x00\n"
"        mov  dph,#0x00\n"
"} by {\n"
"        ; Peephole 181   used 16 bit load of dptr\n"
"        mov  dptr,#0x0000\n"
"}\n"
"\n"
"replace {\n"
"	mov dpl,#%1\n"
"	mov dph,#(%1 >> 8)\n"
"	mov dpx,#(%1 >> 16)\n"
"} by {\n"
"	; Peephole 182b used 24 bit load of DPTR\n"
"	mov dptr,#%1\n"
"}\n"
"\n"
"replace {\n"
"        mov  dpl,#0x%1\n"
"        mov  dph,#0x%2\n"
"	mov  dpx,#0x%3\n"
"} by {\n"
"        ; Peephole 182a   used 24 bit load of dptr\n"
"        mov	dptr,#0x%3%2%1\n"
"} if 24bitMode(), isPort('ds390' 'ds400')\n"
"\n"
"replace {\n"
"        mov  dpl,#%1\n"
"        mov  dph,#%2\n"
"	mov  dpx,#%3\n"
"} by {\n"
"        ; Peephole 182b   used 24 bit load of dptr\n"
"        mov  dptr,#((%3 << 16) + (%2 << 8) + %1)\n"
"} if 24bitMode(), isPort('ds390' 'ds400')\n"
"\n"
"replace {\n"
"        mov  dpl,#0x%1\n"
"        mov  dph,#0x%2\n"
"} by {\n"
"        ; Peephole 182c   used 16 bit load of dptr\n"
"        mov  dptr,#0x%2%1\n"
"}\n"
"\n"
"replace {\n"
"        mov  dpl,#%1\n"
"        mov  dph,#%2\n"
"} by {\n"
"        ; Peephole 182   used 16 bit load of dptr\n"
"        mov  dptr,#(((%2)<<8) + %1)\n"
"}\n"
"\n"
"replace {\n"
"        anl  %1,#%2\n"
"        anl  %1,#%3\n"
"} by {\n"
"        ; Peephole 183   avoided anl during execution\n"
"        anl  %1,#(%2 & %3)\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        cpl  a\n"
"        mov  %1,a\n"
"} by {\n"
"        ; Peephole 184   removed redundant mov\n"
"        cpl  a\n"
"        mov  %1,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        inc  %1\n"
"} by {\n"
"        ; Peephole 185   changed order of increment (acc incremented also!)\n"
"        inc  a\n"
"        mov  %1,a\n"
"}\n"
"\n"
"replace restart {\n"
"	add  a,#%1\n"
"	mov  dpl,a\n"
"	clr  a\n"
"	addc a,#(%1 >> 8)\n"
"	mov  dph,a\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"	mov  %2,a\n"
"	inc  dptr\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"	mov  %3,a\n"
"	inc  dptr\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"	mov  %4,a\n"
"	inc  dptr\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"} by {\n"
"	; Peephole 186.a   optimized movc sequence\n"
"	mov  b,a\n"
"	mov  dptr,#%1\n"
"	movc a,@a+dptr\n"
"	mov  %2,a\n"
"	inc  dptr\n"
"	mov  a,b\n"
"	movc a,@a+dptr\n"
"	mov  %3,a\n"
"	inc  dptr\n"
"	mov  a,b\n"
"	movc a,@a+dptr\n"
"	mov  %4,a\n"
"	inc  dptr\n"
"	mov  a,b\n"
"	movc a,@a+dptr\n"
"}\n"
"\n"
"replace restart {\n"
"	add  a,#%1\n"
"	mov  dpl,a\n"
"	clr  a\n"
"	addc a,#(%1 >> 8)\n"
"	mov  dph,a\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"	mov  %2,a\n"
"	inc  dptr\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"	mov  %3,a\n"
"	inc  dptr\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"} by {\n"
"	; Peephole 186.b   optimized movc sequence\n"
"	mov  b,a\n"
"	mov  dptr,#%1\n"
"	movc a,@a+dptr\n"
"	mov  %2,a\n"
"	inc  dptr\n"
"	mov  a,b\n"
"	movc a,@a+dptr\n"
"	mov  %3,a\n"
"	inc  dptr\n"
"	mov  a,b\n"
"	movc a,@a+dptr\n"
"}\n"
"\n"
"replace restart {\n"
"	add  a,#%1\n"
"	mov  dpl,a\n"
"	clr  a\n"
"	addc a,#(%1 >> 8)\n"
"	mov  dph,a\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"	mov  %2,a\n"
"	inc  dptr\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"} by {\n"
"	; Peephole 186.c   optimized movc sequence\n"
"	mov  %2,a\n"
"	mov  dptr,#%1\n"
"	movc a,@a+dptr\n"
"	xch  a,%2\n"
"	inc  dptr\n"
"	movc a,@a+dptr\n"
"}\n"
"\n"
"replace {\n"
"	add  a,#%1\n"
"	mov  dpl,a\n"
"	clr  a\n"
"	addc a,#(%1 >> 8)\n"
"	mov  dph,a\n"
"	clr  a\n"
"	movc a,@a+dptr\n"
"} by {\n"
"	; Peephole 186.d  optimized movc sequence\n"
"	mov  dptr,#%1\n"
"	movc a,@a+dptr\n"
"}\n"
"\n"
"replace {\n"
"        mov  r%1,%2\n"
"        anl  ar%1,#%3\n"
"        mov  a,r%1\n"
"} by {\n"
"        ; Peephole 187   used a instead of ar%1 for anl\n"
"        mov  a,%2\n"
"        anl  a,#%3\n"
"        mov  r%1,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        mov  dptr,%2\n"
"        movc a,@a+dptr\n"
"        mov  %1,a\n"
"} by {\n"
"        ; Peephole 188   removed redundant mov\n"
"        mov  dptr,%2\n"
"        movc a,@a+dptr\n"
"        mov  %1,a\n"
"}\n"
"\n"
"replace {\n"
"        anl  a,#0x0f\n"
"        mov  %1,a\n"
"        mov  a,#0x0f\n"
"        anl  a,%1\n"
"} by {\n"
"        ; Peephole 189   removed redundant mov and anl\n"
"        anl  a,#0x0f\n"
"        mov  %1,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  a,%1\n"
"        lcall __gptrput\n"
"        mov  a,%1\n"
"} by {\n"
"        ; Peephole 190   removed redundant mov\n"
"        mov  a,%1\n"
"        lcall __gptrput\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        mov  dpl,%2\n"
"        mov  dph,%3\n"
"        mov  b,%4\n"
"        mov  a,%1\n"
"} by {\n"
"        ; Peephole 191   removed redundant mov\n"
"        mov  %1,a\n"
"        mov  dpl,%2\n"
"        mov  dph,%3\n"
"        mov  b,%4\n"
"}\n"
"\n"
"replace {\n"
"        mov  r%1,a\n"
"        mov  @r%2,ar%1\n"
"} by {\n"
"        ; Peephole 192   used a instead of ar%1 as source\n"
"        mov  r%1,a\n"
"        mov  @r%2,a\n"
"}\n"
"\n"
"replace {\n"
"        jnz  %3\n"
"        mov  a,%4\n"
"        jnz  %3\n"
"        mov  a,%9\n"
"        jnz  %3\n"
"        mov  a,%12\n"
"        cjne %13,%14,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 193.a optimized misc jump sequence\n"
"        jnz  %8\n"
"        mov  a,%4\n"
"        jnz  %8\n"
"        mov  a,%9\n"
"        jnz  %8\n"
"        mov  a,%12\n"
"        cjne %13,%14,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 4\n"
"\n"
"replace {\n"
"        cjne %1,%2,%3\n"
"        mov  a,%4\n"
"        cjne %5,%6,%3\n"
"        mov  a,%9\n"
"        cjne %10,%11,%3\n"
"        mov  a,%12\n"
"        cjne %13,%14,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 193   optimized misc jump sequence\n"
"        cjne %1,%2,%8\n"
"        mov  a,%4\n"
"        cjne %5,%6,%8\n"
"        mov  a,%9\n"
"        cjne %10,%11,%8\n"
"        mov  a,%12\n"
"        cjne %13,%14,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 4\n"
"\n"
"replace {\n"
"        cjne @%1,%2,%3\n"
"        inc  %1\n"
"        cjne @%1,%6,%3\n"
"        inc  %1\n"
"        cjne @%1,%11,%3\n"
"       	inc  %1\n"
"        cjne @%1,%14,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 193.a   optimized misc jump sequence\n"
"        cjne @%1,%2,%8\n"
"        inc  %1\n"
"        cjne @%1,%6,%8\n"
"        inc  %1\n"
"        cjne @%1,%11,%8\n"
"        inc  %1\n"
"        cjne @%1,%14,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 4\n"
"\n"
"replace {\n"
"        cjne %1,%2,%3\n"
"        cjne %5,%6,%3\n"
"        cjne %10,%11,%3\n"
"        cjne %13,%14,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 194   optimized misc jump sequence\n"
"        cjne %1,%2,%8\n"
"        cjne %5,%6,%8\n"
"        cjne %10,%11,%8\n"
"        cjne %13,%14,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 4\n"
"\n"
"replace {\n"
"        jnz  %3\n"
"        mov  a,%4\n"
"        jnz  %3\n"
"        mov  a,%9\n"
"        cjne %10,%11,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 195.a optimized misc jump sequence\n"
"        jnz  %8\n"
"        mov  a,%4\n"
"        jnz  %8\n"
"        mov  a,%9\n"
"        cjne %10,%11,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 3\n"
"\n"
"replace {\n"
"        cjne %1,%2,%3\n"
"        mov  a,%4\n"
"        cjne %5,%6,%3\n"
"        mov  a,%9\n"
"        cjne %10,%11,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 195   optimized misc jump sequence\n"
"        cjne %1,%2,%8\n"
"        mov  a,%4\n"
"        cjne %5,%6,%8\n"
"        mov  a,%9\n"
"        cjne %10,%11,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 3\n"
"\n"
"replace {\n"
"        cjne @%1,%2,%3\n"
"        inc  %1\n"
"        cjne @%1,%6,%3\n"
"        inc  %1\n"
"        cjne @%1,%11,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 195.a   optimized misc jump sequence\n"
"        cjne @%1,%2,%8\n"
"        inc  %1\n"
"        cjne @%1,%6,%8\n"
"        inc  %1\n"
"        cjne @%1,%11,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 3\n"
"\n"
"replace {\n"
"        cjne %1,%2,%3\n"
"        cjne %5,%6,%3\n"
"        cjne %10,%11,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 196   optimized misc jump sequence\n"
"        cjne %1,%2,%8\n"
"        cjne %5,%6,%8\n"
"        cjne %10,%11,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 3\n"
"\n"
"replace {\n"
"        jnz  %3\n"
"        mov  a,%4\n"
"        cjne %5,%6,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 197.a optimized misc jump sequence\n"
"        jnz  %8\n"
"        mov  a,%4\n"
"        cjne %5,%6,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 2\n"
"\n"
"replace {\n"
"        cjne %1,%2,%3\n"
"        mov  a,%4\n"
"        cjne %5,%6,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 197   optimized misc jump sequence\n"
"        cjne %1,%2,%8\n"
"        mov  a,%4\n"
"        cjne %5,%6,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 2\n"
"\n"
"replace {\n"
"        cjne @%1,%2,%3\n"
"        inc  %1\n"
"        cjne @%1,%6,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 197.a   optimized misc jump sequence\n"
"        cjne @%1,%2,%8\n"
"        inc   %1\n"
"        cjne @%1,%6,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 2\n"
"\n"
"replace {\n"
"        cjne %1,%2,%3\n"
"        cjne %5,%6,%3\n"
"        sjmp %7\n"
"%3:\n"
"        sjmp %8\n"
"} by {\n"
"        ; Peephole 198   optimized misc jump sequence\n"
"        cjne %1,%2,%8\n"
"        cjne %5,%6,%8\n"
"        sjmp %7\n"
";%3:\n"
"} if labelRefCount %3 2\n"
"\n"
"replace {\n"
"        cjne %1,%2,%3\n"
"        sjmp %4\n"
"%3:\n"
"        sjmp %5\n"
"} by {\n"
"        ; Peephole 199   optimized misc jump sequence\n"
"        cjne %1,%2,%5\n"
"        sjmp %4\n"
";%3:\n"
"} if labelRefCount %3 1\n"
"\n"
"replace {\n"
"        sjmp %1\n"
"%1:\n"
"} by {\n"
"        ; Peephole 200   removed redundant sjmp\n"
"%1:\n"
"}\n"
"\n"
"replace {\n"
"        sjmp %1\n"
"%2:\n"
"%1:\n"
"} by {\n"
"        ; Peephole 201   removed redundant sjmp\n"
"%2:\n"
"%1:\n"
"}\n"
"\n"
"replace {\n"
"        push  acc\n"
"        mov   dptr,%1\n"
"        pop   acc\n"
"} by {\n"
"        ; Peephole 202   removed redundant push pop\n"
"        mov   dptr,%1\n"
"}\n"
"\n"
"replace {\n"
"        push  acc\n"
"        pop   acc\n"
"} by {\n"
"        ; Peephole 202b   removed redundant push pop\n"
"}\n"
"\n"
"replace {\n"
"        mov  r%1,_spx\n"
"        lcall %2\n"
"        mov  r%1,_spx\n"
"} by {\n"
"        ; Peephole 203   removed mov  r%1,_spx\n"
"        lcall %2\n"
"}\n"
"\n"
"replace {\n"
"        mov  %1,a\n"
"        add  a,acc\n"
"        mov  %1,a\n"
"} by {\n"
"        ; Peephole 204   removed redundant mov\n"
"        add  a,acc\n"
"        mov  %1,a\n"
"}\n"
"\n"
"replace {\n"
"        djnz %1,%2\n"
"        sjmp  %3\n"
"%2:\n"
"        sjmp  %4\n"
"%3:\n"
"} by {\n"
"        ; Peephole 205   optimized misc jump sequence\n"
"        djnz %1,%4\n"
"%2:\n"
"%3:\n"
"} if labelRefCount %2 1\n"
"\n"
"replace {\n"
"        mov  %1,%1\n"
"} by {\n"
"        ; Peephole 206   removed redundant mov %1,%1\n"
"}\n"
"\n"
"replace {\n"
"        mov  a,_bp\n"
"        add  a,#0x00\n"
"        mov  %1,a\n"
"} by {\n"
"        ; Peephole 207   removed zero add (acc not set to %1, flags undefined)\n"
"        mov  %1,_bp\n"
"}\n"
"\n"
"replace {\n"
"        push  acc\n"
"        mov   r%1,_bp\n"
"        pop   acc\n"
"} by {\n"
"        ; Peephole 208   removed redundant push pop\n"
"        mov   r%1,_bp\n"
"}\n"
"\n"
"replace {\n"
"        mov  a,_bp\n"
"        add  a,#0x00\n"
"        inc  a\n"
"        mov  %1,a\n"
"} by {\n"
"        ; Peephole 209   optimized increment (acc not set to %1, flags undefined)\n"
"        mov  %1,_bp\n"
"        inc  %1\n"
"}\n"
"\n"
"replace {\n"
"        mov  dptr,#((((%1 >> 16)) <<16) + (((%1 >> 8)) <<8) + %1)\n"
"} by {\n"
"        ; Peephole 210a   simplified expression\n"
"        mov  dptr,#%1\n"
"} if 24bitMode\n"
"\n"
"replace {\n"
"        mov  dptr,#((((%1 >> 8)) <<8) + %1)\n"
"} by {\n"
"        ; Peephole 210   simplified expression\n"
"        mov  dptr,#%1\n"
"}\n"
"\n"
"replace restart {\n"
"        push ar%1\n"
"        pop  ar%1\n"
"} by {\n"
"        ; Peephole 211   removed redundant push r%1 pop r%1\n"
"}\n"
"\n"
"replace {\n"
"	mov  a,_bp\n"
"	add  a,#0x01\n"
"	mov  r%1,a\n"
"} by {\n"
"	; Peephole 212  reduced add sequence to inc\n"
"	mov  r%1,_bp\n"
"	inc  r%1\n"
"}\n"
"\n"
"replace {\n"
"	mov  %1,#(( %2 >> 8 ) ^ 0x80)\n"
"} by {\n"
"	; Peephole 213.a inserted fix\n"
"	mov  %1,#(%2 >> 8)\n"
"	xrl  %1,#0x80\n"
"} if isPort('ds390' 'ds400')\n"
"\n"
"replace {\n"
"	mov  %1,#(( %2 >> 16 ) ^ 0x80)\n"
"} by {\n"
"	; Peephole 213.b inserted fix\n"
"	mov  %1,#(%2 >> 16)\n"
"	xrl  %1,#0x80\n"
"} if isPort('ds390' 'ds400')\n"
"\n"
"replace {\n"
"	mov  %1,#(( %2 + %3 >> 8 ) ^ 0x80)\n"
"} by {\n"
"	; Peephole 213.c inserted fix\n"
"	mov  %1,#((%2 + %3) >> 8)\n"
"	xrl  %1,#0x80\n"
"} if isPort('ds390' 'ds400')\n"
"\n"
"replace  {\n"
"	mov  %1,a\n"
"	mov  a,%2\n"
"	add  a,%1\n"
"} by {\n"
"	; Peephole 214 reduced some extra movs\n"
"	mov  %1,a\n"
"	add  a,%2\n"
"} if notSame(%1 %2)\n"
"\n"
"replace {\n"
"	mov  %1,a\n"
"	add  a,%2\n"
"	mov  %1,a\n"
"} by {\n"
"	; Peephole 215 removed some movs\n"
"	add  a,%2\n"
"	mov  %1,a\n"
"} if notSame(%1 %2)\n"
"\n"
"replace {\n"
"	mov   r%1,%2\n"
"	clr   a\n"
"	inc   r%1\n"
"	mov   @r%1,a\n"
"	dec   r%1\n"
"	mov   @r%1,a\n"
"} by {\n"
"	; Peephole 216 simplified clear (2bytes)\n"
"	mov   r%1,%2\n"
"	clr   a\n"
"	mov   @r%1,a\n"
"	inc   r%1\n"
"	mov   @r%1,a\n"
"}\n"
"\n"
"replace {\n"
"	mov   r%1,%2\n"
"	clr   a\n"
"	inc   r%1\n"
"	inc   r%1\n"
"	mov   @r%1,a\n"
"	dec   r%1\n"
"	mov   @r%1,a\n"
"	dec   r%1\n"
"	mov   @r%1,a\n"
"} by {\n"
"	; Peephole 217 simplified clear (3bytes)\n"
"	mov   r%1,%2\n"
"	clr   a\n"
"	mov   @r%1,a\n"
"	inc   r%1\n"
"	mov   @r%1,a\n"
"	inc   r%1\n"
"	mov   @r%1,a\n"
"}\n"
"\n"
"replace {\n"
"	mov   r%1,%2\n"
"	clr   a\n"
"	inc   r%1\n"
"	inc   r%1\n"
"	inc   r%1\n"
"	mov   @r%1,a\n"
"	dec   r%1\n"
"	mov   @r%1,a\n"
"	dec   r%1\n"
"	mov   @r%1,a\n"
"	dec   r%1\n"
"	mov   @r%1,a\n"
"} by {\n"
"	; Peephole 218 simplified clear (4bytes)\n"
"	mov   r%1,%2\n"
"	clr   a\n"
"	mov   @r%1,a\n"
"	inc   r%1\n"
"	mov   @r%1,a\n"
"	inc   r%1\n"
"	mov   @r%1,a\n"
"	inc   r%1\n"
"	mov   @r%1,a\n"
"}\n"
"\n"
"replace {\n"
"	clr   a\n"
"	movx  @dptr,a\n"
"	mov   dptr,%1\n"
"	clr   a\n"
"	movx  @dptr,a\n"
"} by {\n"
"	; Peephole 219 removed redundant clear\n"
"	clr   a\n"
"	movx  @dptr,a\n"
"	mov   dptr,%1\n"
"	movx  @dptr,a\n"
"}\n"
"\n"
"replace {\n"
"	clr   a\n"
"	movx  @dptr,a\n"
"	mov   dptr,%1\n"
"	movx  @dptr,a\n"
"	mov   dptr,%2\n"
"	clr   a\n"
"	movx  @dptr,a\n"
"} by {\n"
"	; Peephole 219a removed redundant clear\n"
"	clr   a\n"
"	movx  @dptr,a\n"
"	mov   dptr,%1\n"
"	movx  @dptr,a\n"
"	mov   dptr,%2\n"
"	movx  @dptr,a\n"
"}\n"
"\n"
"replace {\n"
"        mov     dps, #0\n"
"        mov     dps, #1\n"
"} by {\n"
"        ; Peephole 220a removed bogus DPS set\n"
"        mov     dps, #1\n"
"}\n"
"\n"
"replace {\n"
"        mov     dps, #1\n"
"        mov     dps, #0\n"
"} by {\n"
"        ; Peephole 220b removed bogus DPS set\n"
"        mov     dps, #0\n"
"}\n"
"\n"
"replace {\n"
"        mov     dps, #0\n"
"        mov     dps, #0x01\n"
"} by {\n"
"        ; Peephole 220c removed bogus DPS set\n"
"}\n"
"\n"
"replace {\n"
"        mov     dps,#1\n"
"	inc	dptr\n"
"        mov     dps,#1\n"
"} by {\n"
"        ; Peephole 220d removed bogus DPS set\n"
"        mov     dps,#1\n"
"	inc	dptr\n"
"}\n"
"\n"
"replace {\n"
"	mov	%1 + %2,(%2 + %1)\n"
"} by {\n"
"	; Peephole 221a remove redundant move\n"
"}\n"
"\n"
"replace {\n"
"	mov	(%1 + %2 + %3),((%2 + %1) + %3)\n"
"} by {\n"
"	; Peephole 221b remove redundant move\n"
"}\n"
"\n"
"replace {\n"
"	dec	r%1\n"
"	inc	r%1\n"
"} by {\n"
"	; removed dec/inc pair\n"
"}\n"
"\n"
"replace {\n"
"	mov     dps, #0\n"
"	mov     %1,a\n"
"	mov     dps, #1\n"
"} by {\n"
"	; Peephole 222 removed DPS abuse.\n"
"	mov     %1,a\n"
"        mov     dps, #1\n"
"}\n"
"\n"
"replace {\n"
"	mov	dps, #0\n"
"	xch	a, ap\n"
"	mov 	%1, ap\n"
"	mov	dps, #1\n"
"} by {\n"
"	; Peephole 222a removed DPS abuse.\n"
"	xch     a, ap\n"
"        mov     %1, ap\n"
"        mov     dps, #1\n"
"}\n"
"\n"
"replace {\n"
"	mov 	dps, #%1\n"
"	inc	dptr\n"
"	movx	a,@dptr\n"
"	mov	%2,a\n"
"	mov	dps, #%1\n"
"} by {\n"
"	mov     dps, #%1\n"
"        inc     dptr\n"
"        movx    a,@dptr\n"
"        mov     %2,a\n"
"; Peephole 223: yet more DPS abuse removed.\n"
"}\n"
"\n"
"replace {\n"
"	mov	dps, #0\n"
"	inc	dps\n"
"} by {\n"
"	mov	dps, #1\n"
"}\n"
"\n"
"replace {\n"
"	mov	dps, #%1\n"
"	mov	dptr, %2\n"
"	mov	dps, #%1\n"
"} by {\n"
"	mov     dps, #%1\n"
"        mov     dptr, %2\n"
"}\n"
"\n"
"replace {\n"
"	mov	dps, #1\n"
"	mov	dptr, %1\n"
"	mov	dps, #0\n"
"	mov	dptr, %2\n"
"	inc	dps\n"
"} by {\n"
"	mov	dps, #0\n"
"	mov	dptr, %2\n"
"	inc	dps\n"
"	mov	dptr, %1\n"
"; Peephole 224a: DPS usage re-arranged.\n"
"}\n"
"\n"
"replace {\n"
"	mov	dps, #%1\n"
"	mov	dptr, %2\n"
"	mov	dps, #%3\n"
"	mov	dptr, %4\n"
"	mov	dps, #%1\n"
"} by {\n"
"	mov	dps, #%3\n"
"	mov	dptr, %4\n"
"	mov	dps, #%1\n"
"	mov	dptr, %2\n"
"; Peephole 224: DPS usage re-arranged.\n"
"}\n"
"\n"
"replace {\n"
"	mov	dps, #1\n"
"	mov	dptr, %1\n"
"	mov	dps, #0\n"
"} by {\n"
"	mov	dps, #1\n"
"	mov	dptr, %1\n"
"	dec	dps\n"
"}\n"
"\n"
"replace {\n"
"	xch	a, ap\n"
"	add	a, ap\n"
"} by {\n"
"	add 	a, ap\n"
"}\n"
"\n"
"replace {\n"
"	xch	a, ap\n"
"	addc	a, ap\n"
"} by {\n"
"	addc 	a, ap\n"
"}\n"
"\n"
"replace {\n"
"	inc 	dps\n"
"	mov	dps, #%1\n"
"} by {\n"
"	mov     dps, #%1\n"
"}\n"
"\n"
"replace {\n"
"	dec 	dps\n"
"	mov	dps, #%1\n"
"} by {\n"
"	mov     dps, #%1\n"
"}\n"
"\n"
"\n"
"replace restart {\n"
"	add	a,#%1\n"
"	mov	dpl,a\n"
"	clr  a\n"
"	addc	a,#(%1 >> 8)\n"
"	mov	dph,a\n"
"	clr  a\n"
"	addc	a,#(%1 >> 16)\n"
"	mov	dpx,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%2,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%3,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%4,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"} by {\n"
"	; Peephole 227.a movc optimize\n"
"	mov	b,a\n"
"	mov	dptr,#%1\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%2,a\n"
"	mov	a,b\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%3,a\n"
"	mov	a,b\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%4,a\n"
"	mov	a,b\n"
"	movc	a,@a+dptr\n"
"}\n"
"\n"
"replace restart {\n"
"	add	a,#%1\n"
"	mov	dpl,a\n"
"	clr  a\n"
"	addc	a,#(%1 >> 8)\n"
"	mov	dph,a\n"
"	clr  a\n"
"	addc	a,#(%1 >> 16)\n"
"	mov	dpx,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%2,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%3,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"} by {\n"
"	; Peephole 227.b movc optimize\n"
"	mov	b,a\n"
"	mov	dptr,#%1\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%2,a\n"
"	mov	a,b\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%3,a\n"
"	mov	a,b\n"
"	movc	a,@a+dptr\n"
"}\n"
"\n"
"replace restart {\n"
"	add	a,#%1\n"
"	mov	dpl,a\n"
"	clr  a\n"
"	addc	a,#(%1 >> 8)\n"
"	mov	dph,a\n"
"	clr  a\n"
"	addc	a,#(%1 >> 16)\n"
"	mov	dpx,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	mov	%2,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"} by {\n"
"	; Peephole 227.c movc optimize\n"
"	mov	%2,a\n"
"	mov	dptr,#%1\n"
"	movc	a,@a+dptr\n"
"	inc	dptr\n"
"	xch	a,%2\n"
"	movc	a,@a+dptr\n"
"}\n"
"\n"
"replace {\n"
"	add	a,#%1\n"
"	mov	dpl,a\n"
"	clr  a\n"
"	addc	a,#(%1 >> 8)\n"
"	mov	dph,a\n"
"	clr  a\n"
"	addc	a,#(%1 >> 16)\n"
"	mov	dpx,a\n"
"	clr	a\n"
"	movc	a,@a+dptr\n"
"} by {\n"
"	; Peephole 227.d movc optimize\n"
"	mov	dptr,#%1\n"
"	movc	a,@a+dptr\n"
"}\n"
"\n"
"replace {\n"
"	mov	r%1,%2\n"
"	mov	ar%1,%3\n"
"} by {\n"
"	; Peephole 228 redundant move\n"
"	mov	ar%1,%3\n"
"}\n"
"\n"
"replace {\n"
"	mov	r%1,a\n"
"	dec	r%1\n"
"	mov	a,r%1\n"
"} by {\n"
"	; Peephole 229.a redundant move\n"
"	dec	a\n"
"	mov	r%1,a\n"
"}\n"
"\n"
"replace {\n"
"	mov	r%1,a\n"
"	mov	r%2,b\n"
"	mov	a,r%1\n"
"} by {\n"
"	; Peephole 229.b redundant move\n"
"	mov	r%1,a\n"
"	mov	r%2,b\n"
"}\n"
"\n"
"replace {\n"
"	mov	r%1,a\n"
"	mov	r%2,b\n"
"	add	a,#%3\n"
"	mov	r%1,a\n"
"	mov	a,r%2\n"
"	addc	a,#(%3 >> 8)\n"
"	mov	r%2,a\n"
"} by {\n"
"	; Peephole 229.c redundant move\n"
"	add	a,#%3\n"
"	mov	r%1,a\n"
"	mov	a,b\n"
"	addc	a,#(%3 >> 8)\n"
"	mov	r%2,a\n"
"}\n"
"\n"
"replace {\n"
"	mov	a,%1\n"
"	mov	b,a\n"
"	movx	a,%2\n"
"} by {\n"
"	; Peephole 229.d redundant move\n"
"	mov	b,%1\n"
"	movx	a,%2\n"
"}\n"
"\n"
"replace {\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"	movx	a,@dptr\n"
"	mov  	r%4,a\n"
"	add  	a,#0x01\n"
"	mov  	r%5,a\n"
"	mov  	dpl,r%1\n"
"	mov  	dph,r%2\n"
"	mov  	dpx,r%3\n"
"	movx	@dptr,a\n"
"} by {\n"
"	; Peephole 230.a save reload dptr\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"	movx	a,@dptr\n"
"	mov  	r%4,a\n"
"	add  	a,#0x01\n"
"	mov  	r%5,a\n"
"	movx	@dptr,a\n"
"}\n"
"\n"
"replace {\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"	movx	a,@dptr\n"
"	mov	r%4,a\n"
"	dec	r%4\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"	mov	a,r%4\n"
"	movx	@dptr,a\n"
"} by {\n"
"	; Peephole 230.b save reload dptr\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"	movx	a,@dptr\n"
"	dec	a\n"
"	mov	r%4,a\n"
"	movx	@dptr,a\n"
"}\n"
"\n"
"replace {\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"	movx	a,@dptr\n"
"	inc  	a\n"
"	mov  	r%4,a\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"	mov	a,r%4\n"
"	movx	@dptr,a\n"
"} by {\n"
"	; Peephole 230.c save reload dptr\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"	movx	a,@dptr\n"
"	inc  	a\n"
"	mov  	r%4,a\n"
"	movx	@dptr,a\n"
"}\n"
"\n"
"replace {\n"
"	mov	r%1,dpl\n"
"	mov	r%2,dph\n"
"	mov	r%3,dpx\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"} by {\n"
"	; Peephole 230.d save reload dptr\n"
"	mov	r%1,dpl\n"
"	mov	r%2,dph\n"
"	mov	r%3,dpx\n"
"}\n"
"\n"
"replace {\n"
"        mov     dpl,r%1\n"
"        mov     dph,r%2\n"
"        mov     dpx,r%3\n"
"        movx    a,@dptr\n"
"        mov     r%4,a\n"
"        orl     ar%4,#%5\n"
"        mov     dpl,r%1\n"
"        mov     dph,r%2\n"
"        mov     dpx,r%3\n"
"        mov     a,r1\n"
"        movx    @dptr,a\n"
"} by {\n"
"	; Peephole 230.e save reload dptr\n"
"        mov     dpl,r%1\n"
"        mov     dph,r%2\n"
"        mov     dpx,r%3\n"
"        movx    a,@dptr\n"
"        orl     a,#%5\n"
"        mov     r%4,a\n"
"        movx    @dptr,a\n"
"}\n"
"\n"
"replace {\n"
"        mov     dpl,r%1\n"
"        mov     dph,r%2\n"
"        mov     dpx,r%3\n"
"        movx    a,@dptr\n"
"        mov     r%4,a\n"
"        anl     ar%4,#%5\n"
"        mov     dpl,r%1\n"
"        mov     dph,r%2\n"
"        mov     dpx,r%3\n"
"        mov     a,r1\n"
"        movx    @dptr,a\n"
"} by {\n"
"	; Peephole 230.e save reload dptr\n"
"        mov     dpl,r%1\n"
"        mov     dph,r%2\n"
"        mov     dpx,r%3\n"
"        movx    a,@dptr\n"
"        anl     a,#%5\n"
"        mov     r%4,a\n"
"        movx    @dptr,a\n"
"}\n"
"\n"
"replace {\n"
"	mov	r%1,dpl\n"
"	mov	r%2,dph\n"
"	mov	r%3,dpx\n"
"	mov	a,r%4\n"
"	inc	dps\n"
"	movx	@dptr,a\n"
"	inc	dptr\n"
"	mov	dps,#0\n"
"	mov	dpl,r%1\n"
"	mov	dph,r%2\n"
"	mov	dpx,r%3\n"
"} by {\n"
"	; Peephole 230.f save reload dptr\n"
"	mov	r%1,dpl\n"
"	mov	r%2,dph\n"
"	mov	r%3,dpx\n"
"	mov	a,r%4\n"
"	inc	dps\n"
"	movx	@dptr,a\n"
"	inc	dptr\n"
"	mov	dps,#0\n"
"}\n"
"\n"
"replace {\n"
"	mov	ar%1,r%2\n"
"	mov	ar%3,r%1\n"
"	mov	r%1,#0x00\n"
"	mov	ar%2,r%4\n"
"	mov	r3,#0x00\n"
"} by {\n"
"	; Peephole 231.a simplified moves\n"
"	mov	ar%3,r%2\n"
"	mov	ar%2,r%4\n"
"	mov	r%4,#0\n"
"	mov	r%1,#0\n"
"}\n"
"\n"
"replace {\n"
"	mov	r%1,#0\n"
"	mov	r%2,#0\n"
"	mov	a,r%2\n"
"	orl	a,r%3\n"
"	mov	%4,a\n"
"	mov	a,r%5\n"
"	orl	a,r%1\n"
"	mov	%6,a\n"
"} by {\n"
"	; Peephole 231.b simplified or\n"
"	mov	r%1,#0\n"
"	mov	r%2,#0\n"
"	mov	a,r%3\n"
"	mov	%4,a\n"
"	mov	a,r%5\n"
"	mov	%6,a\n"
"}\n"
"\n"
"replace {\n"
"	mov	a,r%1\n"
"	mov	b,r%2\n"
"	mov	r%1,b\n"
"	mov	r%2,a\n"
"} by {\n"
"	; Peehole 232.a simplified xch\n"
"	mov	a,r%1\n"
"	xch	a,r%2\n"
"	mov	r%1,a\n"
"}\n"
"\n"
"replace {\n"
"	mov	a,#%1\n"
"	mov	b,#%2\n"
"	mov	r%3,b\n"
"	mov	r%4,a\n"
"} by {\n"
"	; Peehole 232.b simplified xch\n"
"	mov	r%3,#%2\n"
"	mov	r%4,#%1\n"
"}\n"
"\n"
"replace {\n"
"	mov	dpl1,#%1\n"
"	mov	dph1,#(%1 >> 8)\n"
"	mov	dpx1,#(%1 >> 16)\n"
"} by {\n"
"	; Peephole 233 24 bit load of dptr1\n"
"	inc	dps\n"
"	mov	dptr,#%1\n"
"	dec	dps\n"
"}\n"
"\n"
"\n"
"replace {\n"
"        add  a,ar%1\n"
"} by {\n"
"        ; Peephole 236a\n"
"        add  a,r%1\n"
"}\n"
"\n"
"replace {\n"
"        addc  a,ar%1\n"
"} by {\n"
"        ; Peephole 236b\n"
"        addc  a,r%1\n"
"}\n"
"\n"
"replace {\n"
"        anl  a,ar%1\n"
"} by {\n"
"        ; Peephole 236c\n"
"        anl  a,r%1\n"
"}\n"
"\n"
"replace {\n"
"        dec  ar%1\n"
"} by {\n"
"        ; Peephole 236d\n"
"        dec  r%1\n"
"}\n"
"\n"
"replace {\n"
"        djnz  ar%1,%2\n"
"} by {\n"
"        ; Peephole 236e\n"
"        djnz  r%1,%2\n"
"}\n"
"\n"
"replace {\n"
"        inc  ar%1\n"
"} by {\n"
"        ; Peephole 236f\n"
"        inc  r%1\n"
"}\n"
"\n"
"replace {\n"
"        mov  a,ar%1\n"
"} by {\n"
"        ; Peephole 236g\n"
"        mov  a,r%1\n"
"}\n"
"\n"
"replace {\n"
"        mov  ar%1,#%2\n"
"} by {\n"
"        ; Peephole 236h\n"
"        mov  r%1,#%2\n"
"}\n"
"\n"
"replace {\n"
"        mov  ar%1,a\n"
"} by {\n"
"        ; Peephole 236i\n"
"        mov  r%1,a\n"
"}\n"
"\n"
"replace {\n"
"        mov  ar%1,ar%2\n"
"} by {\n"
"        ; Peephole 236j\n"
"        mov  r%1,ar%2\n"
"}\n"
"\n"
"replace {\n"
"        orl  a,ar%1\n"
"} by {\n"
"        ; Peephole 236k\n"
"        orl  a,r%1\n"
"}\n"
"\n"
"replace {\n"
"        subb  a,ar%1\n"
"} by {\n"
"        ; Peephole 236l\n"
"        subb  a,r%1\n"
"}\n"
"\n"
"replace {\n"
"        xch  a,ar%1\n"
"} by {\n"
"        ; Peephole 236m\n"
"        xch  a,r%1\n"
"}\n"
"\n"
"replace {\n"
"        xrl  a,ar%1\n"
"} by {\n"
"        ; Peephole 236n\n"
"        xrl  a,r%1\n"
"}\n"
"\n"
"replace {\n"
"        sjmp    %1\n"
"%2:\n"
"        mov     %3,%4\n"
"%1:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 237a  removed sjmp to ret\n"
"        ret\n"
"%2:\n"
"        mov     %3,%4\n"
"%1:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        sjmp    %1\n"
"%2:\n"
"        mov     %3,%4\n"
"        mov     dpl,%5\n"
"        mov     dph,%6\n"
"%1:\n"
"        ret\n"
"} by {\n"
"        ; Peephole 237b  removed sjmp to ret\n"
"        ret\n"
"%2:\n"
"        mov     %3,%4\n"
"        mov     dpl,%5\n"
"        mov     dph,%6\n"
"%1:\n"
"        ret\n"
"}\n"
"\n"
"replace {\n"
"        mov     %1,%9\n"
"        mov     %2,%10\n"
"        mov     %3,%11\n"
"        mov     %4,%12\n"
"\n"
"        mov     %5,%13\n"
"        mov     %6,%14\n"
"        mov     %7,%15\n"
"        mov     %8,%16\n"
"\n"
"        mov     %9,%1\n"
"        mov     %10,%2\n"
"        mov     %11,%3\n"
"        mov     %12,%4\n"
"} by {\n"
"        mov     %1,%9\n"
"        mov     %2,%10\n"
"        mov     %3,%11\n"
"        mov     %4,%12\n"
"\n"
"        mov     %5,%13\n"
"        mov     %6,%14\n"
"        mov     %7,%15\n"
"        mov     %8,%16\n"
"        ;       Peephole 238.a  removed 4 redundant moves\n"
"} if notSame(%1 %2 %3 %4 %5 %6 %7 %8)\n"
"\n"
"replace {\n"
"        mov     %1,%5\n"
"        mov     %2,%6\n"
"        mov     %3,%7\n"
"        mov     %4,%8\n"
"\n"
"        mov     %5,%1\n"
"        mov     %6,%2\n"
"        mov     %7,%3\n"
"} by {\n"
"        mov     %1,%5\n"
"        mov     %2,%6\n"
"        mov     %3,%7\n"
"        mov     %4,%8\n"
"        ;       Peephole 238.b  removed 3 redundant moves\n"
"} if notSame(%1 %2 %3 %4 %5 %6 %7)\n"
"\n"
"replace {\n"
"        mov     %1,%5\n"
"        mov     %2,%6\n"
"\n"
"        mov     %3,%7\n"
"        mov     %4,%8\n"
"\n"
"        mov     %5,%1\n"
"        mov     %6,%2\n"
"} by {\n"
"        mov     %1,%5\n"
"        mov     %2,%6\n"
"\n"
"        mov     %3,%7\n"
"        mov     %4,%8\n"
"        ;       Peephole 238.c  removed 2 redundant moves\n"
"} if notSame(%1 %2 %3 %4)\n"
"\n"
"replace {\n"
"        mov     %1,%4\n"
"        mov     %2,%5\n"
"        mov     %3,%6\n"
"\n"
"        mov     %4,%1\n"
"        mov     %5,%2\n"
"        mov     %6,%3\n"
"} by {\n"
"        mov     %1,%4\n"
"        mov     %2,%5\n"
"        mov     %3,%6\n"
"        ;       Peephole 238.d  removed 3 redundant moves\n"
"} if notSame(%1 %2 %3 %4 %5 %6)\n"
"\n"
"replace {\n"
"        mov     r%1,acc\n"
"} by {\n"
"        ;       Peephole 239    used a instead of acc\n"
"        mov     r%1,a\n"
"}\n"
"\n"
"replace restart {\n"
"	mov	a,%1\n"
"	addc	a,#0x00\n"
"} by {\n"
"	;	Peephole 240    use clr instead of addc a,#0\n"
"	clr	a\n"
"	addc	a,%1\n"
"}\n"
"\n"
"replace {\n"
"        cjne    r%1,#%2,%3\n"
"        cjne    r%4,#%5,%3\n"
"        cjne    r%6,#%7,%3\n"
"        cjne    r%8,#%9,%3\n"
"        mov     a,#0x01\n"
"        sjmp    %10\n"
"%3:\n"
"        clr     a\n"
"%10:\n"
"} by {\n"
"        ;       Peephole 241.a  optimized compare\n"
"        clr     a\n"
"        cjne    r%1,#%2,%3\n"
"        cjne    r%4,#%5,%3\n"
"        cjne    r%6,#%7,%3\n"
"        cjne    r%8,#%9,%3\n"
"        inc     a\n"
"%3:\n"
"%10:\n"
"}\n"
"\n"
"replace {\n"
"        cjne    r%1,#%2,%3\n"
"        cjne    r%4,#%5,%3\n"
"        mov     a,#0x01\n"
"        sjmp    %6\n"
"%3:\n"
"        clr     a\n"
"%6:\n"
"} by {\n"
"        ;       Peephole 241.b  optimized compare\n"
"        clr     a\n"
"        cjne    r%1,#%2,%3\n"
"        cjne    r%4,#%5,%3\n"
"        inc     a\n"
"%3:\n"
"%6:\n"
"}\n"
"\n"
"replace {\n"
"        cjne    r%1,#%2,%3\n"
"        mov     a,#0x01\n"
"        sjmp    %4\n"
"%3:\n"
"        clr     a\n"
"%4:\n"
"} by {\n"
"        ;       Peephole 241.c  optimized compare\n"
"        clr     a\n"
"        cjne    r%1,#%2,%3\n"
"        inc     a\n"
"%3:\n"
"%4:\n"
"}\n"
"\n"
"replace {\n"
"        cjne    @r%1,#%2,%3\n"
"	inc	r%1\n"
"        cjne    @r%1,#%4,%3\n"
"	inc	r%1\n"
"        cjne    @r%1,#%5,%3\n"
"	inc	r%1\n"
"        cjne    @r%1,#%6,%3\n"
"        mov     a,#0x01\n"
"        sjmp    %7\n"
"%3:\n"
"        clr     a\n"
"%7:\n"
"} by {\n"
"        ;       Peephole 241.d  optimized compare\n"
"        clr     a\n"
"        cjne    @r%1,#%2,%3\n"
"	inc	r%1\n"
"        cjne    @r%1,#%4,%3\n"
"	inc	r%1\n"
"        cjne    @r%1,#%5,%3\n"
"	inc	r%1\n"
"        cjne    @r%1,#%6,%3\n"
"        inc     a\n"
"%3:\n"
"%7:\n"
"}\n"
"\n"
"replace {\n"
"        cjne    @r%1,#%2,%3\n"
"	inc	r%1\n"
"        cjne    @r%1,#%4,%3\n"
"        mov     a,#0x01\n"
"        sjmp    %7\n"
"%3:\n"
"        clr     a\n"
"%7:\n"
"} by {\n"
"        ;       Peephole 241.e  optimized compare\n"
"        clr     a\n"
"        cjne    @r%1,#%2,%3\n"
"	inc	r%1\n"
"        cjne    @r%1,#%4,%3\n"
"        inc     a\n"
"%3:\n"
"%7:\n"
"}\n"
"\n"
"replace {\n"
"        cjne    @r%1,#%2,%3\n"
"        mov     a,#0x01\n"
"        sjmp    %7\n"
"%3:\n"
"        clr     a\n"
"%7:\n"
"} by {\n"
"        ;       Peephole 241.f  optimized compare\n"
"        clr     a\n"
"        cjne    @r%1,#%2,%3\n"
"        inc     a\n"
"%3:\n"
"%7:\n"
"}\n"
"\n"
"replace {\n"
"        jnz     %1\n"
"        mov     %2,%3\n"
"%1:\n"
"        jz      %4\n"
"} by {\n"
"        ;       Peephole 242.a  avoided branch jnz to jz\n"
"        jnz     %1\n"
"        mov     %2,%3\n"
"        jz      %4\n"
"%1:\n"
"} if labelRefCount %1 1\n"
"\n"
"replace {\n"
"        jnz     %1\n"
"        mov     %2,%3\n"
"        orl     a,%5\n"
"%1:\n"
"        jz      %4\n"
"} by {\n"
"        ;       Peephole 242.b  avoided branch jnz to jz\n"
"        jnz     %1\n"
"        mov     %2,%3\n"
"        orl     a,%5\n"
"        jz      %4\n"
"%1:\n"
"} if labelRefCount %1 1\n"
"\n"
"replace {\n"
"        jnz     %1\n"
"        mov     %2,%3\n"
"        orl     a,%5\n"
"        orl     a,%6\n"
"        orl     a,%7\n"
"%1:\n"
"        jz      %4\n"
"} by {\n"
"        ;       Peephole 242.c  avoided branch jnz to jz\n"
"        jnz     %1\n"
"        mov     %2,%3\n"
"        orl     a,%5\n"
"        orl     a,%6\n"
"        orl     a,%7\n"
"        jz      %4\n"
"%1:\n"
"} if labelRefCount %1 1\n"
"\n"
"replace {\n"
"        jnz     %1\n"
"%1:\n"
"} by {\n"
"        ;       Peephole 243a    jump optimization\n"
"} if labelRefCount %1 1\n"
"\n"
"replace {\n"
"        jz      %1\n"
"%1:\n"
"} by {\n"
"        ;       Peephole 243b    jump optimization\n"
"} if labelRefCount %1 1\n"
"\n"
"\n"
"replace {\n"
"        jnb     %1,%2\n"
"%3:\n"
"        clr     %1\n"
"} by {\n"
"        ;       Peephole 244.a  using atomic test and clear\n"
"        jbc     %1,%3\n"
"        sjmp    %2\n"
"%3:\n"
"} if labelRefCount %3 0\n"
"\n"
"replace {\n"
"        jb      %1,%2\n"
"        ljmp    %3\n"
"%2:\n"
"        clr     %1\n"
"} by {\n"
"        ;       Peephole 244.b  using atomic test and clear\n"
"        jbc     %1,%2\n"
"        ljmp    %3\n"
"%2:\n"
"} if labelRefCount %2 1\n"
"\n"
