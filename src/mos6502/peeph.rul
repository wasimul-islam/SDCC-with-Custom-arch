/* Generated file, DO NOT Edit!  */
/* To Make changes to rules edit */
/* <port>/peeph.def instead.     */
"\n"
"replace restart {\n"
"	sta	%1\n"
"	stx	%2\n"
"	lda	%1\n"
"	sta	%3\n"
"	lda	%2\n"
"	sta	%4\n"
"} by {\n"
"	sta	%1\n"
"	stx	%2\n"
"    ; Peephole Function Entry  - eliminated unnecessary lda\n"
"	sta	%3\n"
"    ; Peephole Function Entry  - eliminated unnecessary lda\n"
"	stx	%4\n"
"}\n"
"\n"
"replace restart {\n"
"	sta	%1\n"
"	stx	%2\n"
"	lda     %1\n"
"	ldx     %2\n"
"} by {\n"
"	sta	%1\n"
"	stx	%2\n"
"    ; Peephole Function Entry  - eliminated redundant lda/ldx\n"
"} if notVolatile(%1), notVolatile(%2)\n"
"\n"
"replace restart {\n"
"	ldx	%1\n"
"	ldy	%2\n"
"	clc\n"
"	txa\n"
"	adc	%3\n"
"	sta	%4\n"
"	tya\n"
"	adc     %5\n"
"	sta	%6\n"
"} by {\n"
"    ; Peephole genpointer YX   - eliminated ldx/ldy\n"
"	lda	%1\n"
"    ; Peephole genpointer YX   - replaced txa with lda\n"
"	clc\n"
"	adc	%3\n"
"	sta	%4\n"
"	lda	%2\n"
"    ; Peephole genpointer YX   - replaced tya with lda\n"
"	adc	%5\n"
"	sta	%6\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"replace restart {\n"
"        sta	%1\n"
"	lda     %1\n"
"} by {\n"
"        sta	%1\n"
"    ; Peephole load 1 - eliminated redundant lda\n"
"} if notVolatile(%1)\n"
"\n"
"replace restart {\n"
"        sta	%1, %2\n"
"	lda     %1, %2\n"
"} by {\n"
"        sta	%1, %2\n"
"    ; Peephole load 2 - eliminated redundant lda\n"
"} if notVolatile(%1)\n"
"\n"
"replace restart {\n"
"        stx	%1\n"
"	ldx     %1\n"
"} by {\n"
"        stx	%1\n"
"    ; Peephole load 3 - eliminated redundant ldx\n"
"} if notVolatile(%1)\n"
"\n"
"replace restart {\n"
"        sty	%1\n"
"	ldy     %1\n"
"} by {\n"
"        sty	%1\n"
"    ; Peephole load 4 - eliminated redundant ldy\n"
"} if notVolatile(%1)\n"
"\n"
"\n"
"replace restart {\n"
"        %1	%2, %4\n"
"        %1	%3\n"
"} by {\n"
"    ; Peephole load 5 - eliminated dead %1 %2\n"
"	%1	%3\n"
"} if same(%1 'lda' 'ldx' 'ldy'), notVolatile(%2)\n"
"\n"
"\n"
"replace restart {\n"
"        %1	%2\n"
"        %1	%3, %4\n"
"} by {\n"
"    ; Peephole load 6 - eliminated dead %1 %2\n"
"	%1	%3, %4\n"
"} if same(%1 'lda' 'ldx' 'ldy'), notVolatile(%2)\n"
"\n"
"replace restart {\n"
"        %1	%2, %4\n"
"        %1	%3, %5\n"
"} by {\n"
"    ; Peephole load 7 - eliminated dead %1 %2\n"
"	%1	%3, %5\n"
"} if same(%1 'lda' 'ldx' 'ldy'), notVolatile(%2)\n"
"\n"
"\n"
"replace restart {\n"
"        %1	%2\n"
"        %1	%3\n"
"} by {\n"
"    ; Peephole load 8 - eliminated dead %1 %2\n"
"	%1	%3\n"
"} if same(%1 'lda' 'ldx' 'ldy'), notVolatile(%2)\n"
"\n"
"replace restart {\n"
"	ldx %1\n"
"	%2\n"
"} by {\n"
"	; Peephole load 9 - removed dead ldx followed by %2\n"
"	%2\n"
"} if same(%2 'tax' 'tsx' )\n"
"\n"
"replace restart {\n"
"	ldy %1\n"
"	tay\n"
"} by {\n"
"	; Peephole load 10 - removed dead ldy followed by tay\n"
"	tay\n"
"}\n"
"\n"
"replace restart {\n"
"	lda	%1\n"
"	%2\n"
"} by {\n"
"	; Peephole load 11 - removed dead lda\n"
"	%2\n"
"} if same(%2 'txa' 'tya' 'pla' )\n"
"\n"
"replace restart {\n"
"	lda	%4\n"
"	%1	%2\n"
"	lda	%3\n"
"} by {\n"
"	; Peephole load 12 - removed dead lda not followed by store or branch\n"
"	%1	%2\n"
"	lda	%3\n"
"} if notSame(%1 'sta' 'adc' 'sbc' 'cmp' 'bne' 'beq' 'bpl' 'bmi' 'jsr' 'jmp'), notSame(%2 'a')\n"
"\n"
"replace restart {\n"
"	ldx	%4\n"
"	%1	%2\n"
"	ldx	%3\n"
"} by {\n"
"	; Peephole load 13 - removed dead ldx not followed by store or branch\n"
"	%1	%2\n"
"	ldx	%3\n"
"} if notSame(%1 'stx' 'cpx' 'bne' 'beq' 'bpl' 'bmi' 'jsr' 'jmp')\n"
"\n"
"replace restart {\n"
"	ldy	%4\n"
"	%1 	%2\n"
"	ldy	%3\n"
"} by {\n"
"	; Peephole load 14 - removed dead ldy  not followed by store or branch\n"
"	%1	%2\n"
"	ldy	%3\n"
"} if notSame(%1 'sty' 'cpy' 'bne' 'beq' 'bpl' 'bmi' 'jsr' 'jmp')\n"
"\n"
"replace restart {\n"
"	lda	%3\n"
"	%1\n"
"	lda	%2\n"
"} by {\n"
"	; Peephole load 15 - removed dead lda\n"
"	%1 \n"
"	lda	%2\n"
"} if notSame(%1 'pha' 'php' 'tax' 'tay')\n"
"\n"
"replace restart {\n"
"	ldx	%3\n"
"	%1\n"
"	ldx	%2\n"
"} by {\n"
"	; Peephole load 16 - removed dead ldx\n"
"	%1 \n"
"	ldx	%2\n"
"} if notSame(%1 'txa' 'txs')\n"
"\n"
"\n"
"replace restart {\n"
"	%1\n"
"	lda	%2\n"
"} by {\n"
"	; Peephole regop 1 - removed dead %1 followed by lda\n"
"	lda	%2\n"
"} if same(%1 'txa' 'tya')\n"
"\n"
"replace restart {\n"
"	%1 %3\n"
"	lda	%2\n"
"} by {\n"
"	; Peephole regop 2 - removed dead %1 followed by lda\n"
"	lda	%2\n"
"} if same(%1 'and' 'eor' 'ora' )\n"
"\n"
"replace restart {\n"
"	%1\n"
"	ldx	%2\n"
"} by {\n"
"	; Peephole regop 3 - removed dead %1 followed by ldx\n"
"	ldx	%2\n"
"} if same(%1 'tax' 'tsx' 'inx' 'dex' )\n"
"\n"
"replace restart {\n"
"	%1\n"
"	tsx\n"
"} by {\n"
"	; Peephole regop 4 - removed dead %1 followed by tsx\n"
"	tsx\n"
"} if same(%1 'tax' 'inx' 'dex' )\n"
"\n"
"replace restart {\n"
"	%1\n"
"	tax\n"
"} by {\n"
"	; Peephole regop 5 - removed dead %1 followed by tax\n"
"	tax\n"
"} if same(%1 'tsx' 'inx' 'dex' )\n"
"\n"
"replace restart {\n"
"	%1\n"
"	ldy	%2\n"
"} by {\n"
"	; Peephole regop 6 - removed dead %1 followed by ldy\n"
"	ldy	%2\n"
"} if same(%1 'tay' 'iny' 'dey' )\n"
"\n"
"replace restart {\n"
"	tax\n"
"	txa\n"
"} by {\n"
"	tax\n"
"	; Peephole regop 7 - removed redundant txa\n"
"}\n"
"\n"
"replace restart {\n"
"	tay\n"
"	tya\n"
"} by {\n"
"	tay\n"
"	; Peephole regop 8 - removed redundant tya preceded by tay\n"
"}\n"
"\n"
"\n"
"replace restart {\n"
"	pla\n"
"	pha\n"
"	lda	%1\n"
"} by {\n"
"	; Peephole stack 1 - removed dead pla/pha followed by lda\n"
"	lda	%1\n"
"}\n"
"\n"
"replace restart {\n"
"	pla\n"
"	pha\n"
"	%1\n"
"} by {\n"
"	; Peephole stack 2 - removed dead pla/pha followed by txa/tya\n"
"	%1\n"
"}  if same(%1 'txa' 'tya')\n"
"\n"
"replace restart {\n"
"	php\n"
"	%1 %2\n"
"	plp\n"
"} by {\n"
"	; Peephole stack 3 - removed useless php/plp around a store\n"
"	%1 %2\n"
"}  if same(%1 'sta' 'stx' 'sty' )\n"
"\n"
"\n"
"replace restart {\n"
"	php\n"
"	plp\n"
"} by {\n"
"	; Peephole stack 4 - removed dead php/plp\n"
"}\n"
"\n"
"\n"
"\n"
"replace restart {\n"
"	lda	%1\n"
"	cmp	#0x00\n"
"} by {\n"
"	lda	%1\n"
"	; Peephole cmp 1 - eliminated unnecessary cmp #0x00\n"
"}\n"
"\n"
"replace restart {\n"
"	lda	%1,%2\n"
"	cmp	#0x00\n"
"} by {\n"
"	lda	%1,%2\n"
"	; Peephole cmp 2 - eliminated unnecessary cmp #0x00\n"
"}\n"
"\n"
"replace restart {\n"
"	%1\n"
"	cmp	#0x00\n"
"} by {\n"
"	%1\n"
"	; Peephole cmp 3 - eliminated unnecessary cmp #0x00\n"
"} if same(%1 'pla' 'txa' 'tya' )\n"
"\n"
"replace restart {\n"
"	ldx	%1\n"
"	cpx	#0x00\n"
"} by {\n"
"	ldx	%1\n"
"	; Peephole cmp 4 - eliminated unnecessary cpx #0x00\n"
"}\n"
"\n"
"replace restart {\n"
"	ldy	%1\n"
"	cpy	#0x00\n"
"} by {\n"
"	ldy	%1\n"
"	; Peephole cmp 5 - eliminated unnecessary cpy #0x00\n"
"}\n"
"\n"
"replace restart {\n"
"	%1\n"
"	cpx	#0x00\n"
"} by {\n"
"	%1\n"
"	; Peephole cmp 6 - eliminated unnecessary cpx #0x00\n"
"} if same(%1 'inx' 'dex' 'tax' )\n"
"\n"
"replace restart {\n"
"	%1\n"
"	cpy	#0x00\n"
"} by {\n"
"	%1\n"
"	; Peephole cmp 7 - eliminated unnecessary cpy #0x00\n"
"} if same(%1 'iny' 'dey' 'tay' )\n"
"\n"
"\n"
"replace restart {\n"
"	lda	%2\n"
"	sta	%2\n"
"} by {\n"
"	lda	%2\n"
"	; Peephole store 1 - removed redundant sta\n"
"} if notVolatile(%2)\n"
"\n"
"replace restart {\n"
"	lda	%2\n"
"	%1\n"
"	sta	%2\n"
"} by {\n"
"	lda	%2\n"
"	%1\n"
"	; Peephole store 2 - removed redundant sta\n"
"} if notSame(%1 'pla' 'txa' 'tya'), notVolatile(%2)\n"
"\n"
"replace restart {\n"
"	lda	%2\n"
"	%1 	a\n"
"	sta	%2\n"
"} by {\n"
"	; Peephole store 3 - removed redundant sta\n"
"	%1	%2\n"
"	lda	%2\n"
"} if same(%1 'asl' 'rol' 'ror'), notVolatile(%2)\n"
"\n"
"replace restart {\n"
"	ldx	%2\n"
"	stx	%2\n"
"} by {\n"
"	ldx	%2\n"
"	; Peephole store 4 - removed redundant stx\n"
"} if notVolatile(%2)\n"
"\n"
"replace restart {\n"
"	ldx	%2\n"
"	%1\n"
"	stx	%2\n"
"} by {\n"
"	ldx	%2\n"
"	%1\n"
"	; Peephole store 5 - removed redundant stx\n"
"} if notSame(%1 'tax' 'inx' 'dex'), notVolatile(%2)\n"
"\n"
"replace restart {\n"
"	ldy	%2\n"
"	sty	%2\n"
"} by {\n"
"	ldy	%2\n"
"	; Peephole store 6 - removed redundant sty\n"
"} if notVolatile(%2)\n"
"\n"
"replace restart {\n"
"	ldy	%2\n"
"	%1\n"
"	sty	%2\n"
"} by {\n"
"	ldy	%2\n"
"	%1\n"
"	; Peephole store 7 - removed redundant sty\n"
"} if notSame(%1 'tay' 'iny' 'dey'), notVolatile(%2)\n"
"\n"
"\n"
"replace restart {\n"
"	bne	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	beq	%5\n"
"	; Peephole branch 1 - inverted bne and eliminated jmp\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"	beq	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	bne	%5\n"
"	; Peephole branch 2 - inverted beq and eliminated jmp\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"	bcc	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	bcs	%5\n"
"	; Peephole branch 3 - inverted bcc and eliminated jmp\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"	bcs	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	bcc	%5\n"
"	; Peephole branch 4 - inverted bcs and eliminated jmp\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"	bpl	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	bmi	%5\n"
"	; Peephole branch 5 - inverted bpl and eliminated jmp\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"	bmi	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	bpl	%5\n"
"	; Peephole branch 6 - inverted bmi and eliminated jmp\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"	bvc	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	bvs	%5\n"
"	; Peephole branch 7 - inverted bvc and eliminated jmp\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"replace restart {\n"
"	bvs	%1\n"
"	jmp	%5\n"
"%1:\n"
"} by {\n"
"	bvc	%5\n"
"	; Peephole branch 8 - inverted bvs and eliminated jmp\n"
"%1:\n"
"} if labelInRange(%5), labelRefCountChange(%1 -1)\n"
"\n"
"\n"
"replace restart {\n"
"	%1	%5\n"
"} by {\n"
"	; Peephole branch 9 - replaced branch to jmp with branch\n"
"	%1	%6\n"
"} if same(%1 'bne' 'beq' 'bcc' 'bcs' 'bvc' 'bvs' 'bpl' 'bmi'), labelIsUncondJump(%5), notSame(%5 %6), labelInRange(%6), labelRefCountChange(%5 -1), labelRefCountChange(%6 +1)\n"
"\n"
"replace restart {\n"
"	jmp	%5\n"
"} by {\n"
"	; Peephole branch 10 - replaced jmp to jmp with jmp\n"
"	jmp	%6\n"
"} if labelIsUncondJump(%5), notSame(%5 %6), labelRefCountChange(%5 -1), labelRefCountChange(%6 +1)\n"
"\n"
"replace restart {\n"
"	jmp	%5\n"
"} by {\n"
"	; Peephole branch 11 - replaced jmp to rts with rts\n"
"	rts\n"
"} if optimizeReturn(), labelIsReturnOnly(%5), labelRefCountChange(%5 -1)\n"
"\n"
"\n"
"replace restart {\n"
"        %1	%2\n"
"%2:\n"
"} by {\n"
"        ; Peephole branch 12 - eliminated branch to %2\n"
"%2:\n"
"} if same(%1 'bne' 'beq' 'bcc' 'bcs' 'bvc' 'bvs' 'bpl' 'bmi' 'jmp' 'bra'), labelRefCountChange(%2 -1)\n"
"\n"
"\n"
"replace restart {\n"
"	rts\n"
"%1:\n"
"	rts\n"
"} by {\n"
"    ; Peephole ret 1 - eliminated redundant rts\n"
"%1:\n"
"	rts\n"
"}\n"
"\n"
"replace restart {\n"
"	jsr	%1\n"
"	rts\n"
"} by {\n"
"	jmp	%1\n"
"	; Peephole ret 2 - tail call optimization.\n"
"} if optimizeReturn()\n"
"\n"
"\n"
"replace restart {\n"
"%1:\n"
"} by {\n"
"	; Peephole label - removed redundant label %1\n"
"} if labelRefCount(%1 0)\n"
"\n"
